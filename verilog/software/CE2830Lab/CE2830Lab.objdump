
CE2830Lab.elf:     file format elf32-littlenios2
CE2830Lab.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000230

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00000020 paddr 0x00000020 align 2**12
         filesz 0x00010624 memsz 0x00010624 flags r-x
    LOAD off    0x00011644 vaddr 0x00010644 paddr 0x00012194 align 2**12
         filesz 0x00001b50 memsz 0x00001b50 flags rw-
    LOAD off    0x00013ce4 vaddr 0x00013ce4 paddr 0x00013ce4 align 2**12
         filesz 0x00000000 memsz 0x00000170 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00000000  00000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000210  00000020  00000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         000100d8  00000230  00000230  00001230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000033c  00010308  00010308  00011308  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001b50  00010644  00012194  00011644  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000170  00013ce4  00013ce4  00013ce4  2**2
                  ALLOC, SMALL_DATA
  6 .SDRAM        00000000  00013e54  00013e54  00013194  2**0
                  CONTENTS
  7 .Onchip_SRAM  00000000  08000000  08000000  00013194  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  00013194  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000f70  00000000  00000000  000131b8  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00023679  00000000  00000000  00014128  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 00009407  00000000  00000000  000377a1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000b83e  00000000  00000000  00040ba8  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00002494  00000000  00000000  0004c3e8  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00003df4  00000000  00000000  0004e87c  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    00016d16  00000000  00000000  00052670  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000010  00000000  00000000  00069388  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00001750  00000000  00000000  00069398  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  0006e0fe  2**0
                  CONTENTS, READONLY
 19 .cpu          00000005  00000000  00000000  0006e101  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  0006e106  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  0006e107  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  0006e108  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  0006e10c  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  0006e110  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   00000009  00000000  00000000  0006e114  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    00000009  00000000  00000000  0006e11d  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   00000009  00000000  00000000  0006e126  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 0000000f  00000000  00000000  0006e12f  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 0000005c  00000000  00000000  0006e13e  2**0
                  CONTENTS, READONLY
 30 .jdi          00006bd6  00000000  00000000  0006e19a  2**0
                  CONTENTS, READONLY
 31 .sopcinfo     000b9313  00000000  00000000  00074d70  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .entry	00000000 .entry
00000020 l    d  .exceptions	00000000 .exceptions
00000230 l    d  .text	00000000 .text
00010308 l    d  .rodata	00000000 .rodata
00010644 l    d  .rwdata	00000000 .rwdata
00013ce4 l    d  .bss	00000000 .bss
00013e54 l    d  .SDRAM	00000000 .SDRAM
08000000 l    d  .Onchip_SRAM	00000000 .Onchip_SRAM
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../CE2830Lab_bsp//obj/HAL/src/crt0.o
00000268 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 ServoAPI.c
00000000 l    df *ABS*	00000000 SevenSegs.c
0001212c l     O .rwdata	00000004 HEX0HEX3
00012130 l     O .rwdata	00000004 HEX4HEX5
00000000 l    df *ABS*	00000000 adc.c
00012134 l     O .rwdata	00000004 samples
00012138 l     O .rwdata	00000004 sequencerCmd
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 main.c
0001213c l     O .rwdata	00000004 HEX0HEX3
00012140 l     O .rwdata	00000004 HEX4HEX5
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 fixsfsi.c
00000000 l    df *ABS*	00000000 floatsisf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00010472 l     O .rodata	00000010 zeroes.4389
00010482 l     O .rodata	00000010 blanks.4388
00000000 l    df *ABS*	00000000 time.c
00000000 l    df *ABS*	00000000 dtoa.c
000031e4 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 findfp.c
00004a94 l     F .text	00000008 __fp_unlock
00004aa8 l     F .text	0000019c __sinit.part.1
00004c44 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 gettimeofdayr.c
00000000 l    df *ABS*	00000000 impure.c
00010644 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 locale.c
00010a88 l     O .rwdata	00000020 lc_ctype_charset
00010a68 l     O .rwdata	00000020 lc_message_charset
00010aa8 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
000104b4 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
000105d8 l     O .rodata	00000010 zeroes.4333
000105e8 l     O .rodata	00000010 blanks.4332
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
0000d3f0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0000d504 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0000d530 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_gettod.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0000d818 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0000d900 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0000d9ec l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0000dbc8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
0001217c l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 alt_write.c
0000dfe0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0000e11c l     F .text	00000034 alt_dev_reg
00011090 l     O .rwdata	00001060 JTAG_UART
000120f0 l     O .rwdata	0000003c JoyStick_ADC
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0000e424 l     F .text	0000020c altera_avalon_jtag_uart_irq
0000e630 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0000ec68 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_modular_adc.c
0000ed5c l     F .text	000000a8 alt_adc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0000f414 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0000f904 l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0000fa64 l     F .text	0000003c alt_get_errno
0000faa0 l     F .text	000000ec alt_file_locked
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00013d28 g     O .bss	00000004 alt_instruction_exception_handler
000071c8 g     F .text	00000074 _mprec_log10
0000effc g     F .text	00000050 adc_stop
000072b4 g     F .text	0000008c __any_on
00009e90 g     F .text	00000054 _isatty_r
000104c0 g     O .rodata	00000028 __mprec_tinytens
0000db04 g     F .text	0000007c alt_main
000003d4 g     F .text	00000098 ASCII_to_7Seg
00012148 g     O .rwdata	00000004 pushbuttons
00000c2c g     F .text	000000c0 _puts_r
00013d54 g     O .bss	00000100 alt_irq
00009bb8 g     F .text	00000060 _lseek_r
00012194 g       *ABS*	00000000 __flash_rwdata_start
0000be2c g     F .text	00000088 .hidden __eqdf2
00005494 g     F .text	0000005c _gettimeofday_r
00013e54 g       *ABS*	00000000 __alt_heap_start
00007a44 g     F .text	0000005c __sseek
00004df4 g     F .text	00000010 __sinit
000054f0 g     F .text	0000007c _setlocale_r
00004c4c g     F .text	00000078 __sfmoreglue
0000dba4 g     F .text	00000024 __malloc_unlock
00006004 g     F .text	0000015c memmove
00000310 g     F .text	00000034 servo_pan
00004ddc g     F .text	00000018 _cleanup
00006288 g     F .text	000000a8 _Balloc
00000a34 g     F .text	00000070 .hidden __fixsfsi
0000beb4 g     F .text	000000dc .hidden __gtdf2
0000fce8 g     F .text	00000024 altera_nios2_gen2_irq_init
00000000 g     F .entry	0000000c __reset
0000f1c0 g     F .text	00000048 adc_interrupt_disable
00000020 g       *ABS*	00000000 __flash_exceptions_start
00009e34 g     F .text	0000005c _fstat_r
00013ce4 g     O .bss	00000004 errno
000079c0 g     F .text	00000008 __seofread
00007d54 g     F .text	000013a0 ___svfiprintf_internal_r
0000eeb0 g     F .text	00000074 altera_modular_adc_init
00013d14 g     O .bss	00000004 alt_argv
0001a12c g       *ABS*	00000000 _gp
00010f10 g     O .rwdata	00000180 alt_fd_list
0000f5b4 g     F .text	00000090 alt_find_dev
00005ebc g     F .text	00000148 memcpy
00004a9c g     F .text	0000000c _cleanup_r
0000d26c g     F .text	000000dc .hidden __floatsidf
0000f0c4 g     F .text	0000003c adc_set_mode_run_continuously
0000f9e8 g     F .text	0000007c alt_io_redirect
0000bf90 g     F .text	000000f4 .hidden __ltdf2
00010308 g       *ABS*	00000000 __DTOR_END__
00000cec g     F .text	00000014 puts
0000fed8 g     F .text	0000009c alt_exception_cause_generated_bad_addr
000078a4 g     F .text	00000074 __fpclassifyd
00007124 g     F .text	000000a4 __ratio
0000e828 g     F .text	0000021c altera_avalon_jtag_uart_read
00000950 g     F .text	00000064 .hidden __udivsi3
0000d854 g     F .text	000000ac isatty
00010510 g     O .rodata	000000c8 __mprec_tens
0000556c g     F .text	0000000c __locale_charset
00013d00 g     O .bss	00000008 alt_timezone
00013cfc g     O .bss	00000004 __malloc_top_pad
00012158 g     O .rwdata	00000004 __mb_cur_max
0000559c g     F .text	0000000c _localeconv_r
000066bc g     F .text	0000003c __i2b
00004e44 g     F .text	000004c8 __sfvwrite_r
0000046c g     F .text	00000100 num_to_7Seg
00007918 g     F .text	00000054 _sbrk_r
00009dd4 g     F .text	00000060 _read_r
00012188 g     O .rwdata	00000008 altera_modular_adc_list
00012174 g     O .rwdata	00000004 alt_max_fd
000093d8 g     F .text	000000f0 _fclose_r
00009754 g     F .text	00000030 fflush
00013cf8 g     O .bss	00000004 __malloc_max_sbrked_mem
0000abb0 g     F .text	000008ac .hidden __adddf3
00006ecc g     F .text	0000010c __b2d
0000a5ec g     F .text	000005c4 .hidden __umoddi3
0000da28 g     F .text	000000dc lseek
00012150 g     O .rwdata	00000004 _global_impure_ptr
00007340 g     F .text	00000564 _realloc_r
00013e54 g       *ABS*	00000000 __bss_end
0000f814 g     F .text	000000f0 alt_iic_isr_register
0000ded8 g     F .text	00000108 alt_tick
00009ff0 g     F .text	000005fc .hidden __udivdi3
0000f28c g     F .text	0000003c adc_wait_for_interrupt
000104e8 g     O .rodata	00000028 __mprec_bigtens
000064a0 g     F .text	00000104 __s2b
0000d348 g     F .text	000000a8 .hidden __floatunsidf
00006c0c g     F .text	00000060 __mcmp
0001214c g     O .rwdata	00000004 slideSwitches
00004e14 g     F .text	00000018 __fp_lock_all
0000f7c8 g     F .text	0000004c alt_ic_irq_enabled
0000de3c g     F .text	0000009c alt_alarm_stop
00000624 g     F .text	000000c8 read_joystick
00013d24 g     O .bss	00000004 alt_irq_active
000000fc g     F .exceptions	000000d4 alt_irq_handler
00010ee8 g     O .rwdata	00000028 alt_dev_null
0000f084 g     F .text	00000040 adc_set_mode_run_once
0000f3f4 g     F .text	00000020 alt_dcache_flush_all
000065a4 g     F .text	00000068 __hi0bits
0000d1ec g     F .text	00000080 .hidden __fixdfsi
000005ec g     F .text	00000038 read_channel2
00012194 g       *ABS*	00000000 __ram_rwdata_end
0001216c g     O .rwdata	00000008 alt_dev_list
0000e01c g     F .text	00000100 write
00010644 g       *ABS*	00000000 __ram_rodata_end
0000d56c g     F .text	000000b8 fstat
00000000 g       *ABS*	00000000 __alt_mem_SDRAM
0000bf90 g     F .text	000000f4 .hidden __ledf2
00000744 g     F .text	00000054 delay_1ms
0000f04c g     F .text	00000038 adc_start
00006984 g     F .text	00000140 __pow5mult
00013cf0 g     O .bss	00000004 __nlocale_changed
000009b4 g     F .text	00000058 .hidden __umodsi3
00013e54 g       *ABS*	00000000 end
00012144 g     O .rwdata	00000004 leds
000006ec g     F .text	00000058 delay_1s
0000e364 g     F .text	000000c0 altera_avalon_jtag_uart_init
000001d0 g     F .exceptions	00000060 alt_instruction_exception_entry
00010308 g       *ABS*	00000000 __CTOR_LIST__
04000000 g       *ABS*	00000000 __alt_stack_pointer
0000ece0 g     F .text	0000007c alt_avalon_timer_sc_init
00000bc8 g     F .text	00000064 .hidden __clzsi2
0000ea44 g     F .text	00000224 altera_avalon_jtag_uart_write
00004e04 g     F .text	00000004 __sfp_lock_acquire
00005dd8 g     F .text	000000e4 memchr
00000d7c g     F .text	00000058 _sprintf_r
000098a8 g     F .text	00000310 _free_r
00005578 g     F .text	00000010 __locale_mb_cur_max
00010154 g     F .text	00000180 __call_exitprocs
00013cec g     O .bss	00000004 __mlocale_changed
0001215c g     O .rwdata	00000004 __malloc_sbrk_base
00000230 g     F .text	0000003c _start
00013d1c g     O .bss	00000004 _alt_tick_rate
00000d18 g     F .text	00000064 rand
00000344 g     F .text	00000060 servo_randomMovement
00006ac4 g     F .text	00000148 __lshift
00013d20 g     O .bss	00000004 _alt_nticks
0000dc04 g     F .text	00000104 read
0000e188 g     F .text	00000078 alt_sys_init
00000aa4 g     F .text	00000124 .hidden __floatsisf
00007b84 g     F .text	000001d0 __ssprint_r
0001003c g     F .text	00000118 __register_exitproc
000066f8 g     F .text	0000028c __multiply
0000e6d0 g     F .text	00000068 altera_avalon_jtag_uart_close
00000a0c g     F .text	00000028 .hidden __mulsi3
00010644 g       *ABS*	00000000 __ram_rwdata_start
00010308 g       *ABS*	00000000 __ram_rodata_start
00013d2c g     O .bss	00000028 __malloc_current_mallinfo
00006fd8 g     F .text	0000014c __d2b
000002d8 g     F .text	00000038 servo_center
0000e200 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0000fe14 g     F .text	000000c4 alt_get_fd
000092a8 g     F .text	00000054 _close_r
0000ffc0 g     F .text	0000007c memcmp
0000e2c0 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00013e54 g       *ABS*	00000000 __alt_stack_base
0000e310 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00009154 g     F .text	00000154 __swsetup_r
0000f17c g     F .text	00000044 adc_interrupt_enable
0000b45c g     F .text	000009d0 .hidden __divdf3
00004cc4 g     F .text	00000118 __sfp
0000723c g     F .text	00000078 __copybits
00010ae0 g     O .rwdata	00000408 __malloc_av_
00004e10 g     F .text	00000004 __sinit_lock_release
0000c084 g     F .text	0000086c .hidden __muldf3
0000796c g     F .text	00000054 __sread
0000fd0c g     F .text	00000108 alt_find_file
0000f450 g     F .text	000000a4 alt_dev_llist_insert
0000db80 g     F .text	00000024 __malloc_lock
0000dd8c g     F .text	000000b0 sbrk
00000ed8 g     F .text	000022bc ___svfprintf_internal_r
000096f8 g     F .text	0000005c _fflush_r
000092fc g     F .text	000000dc _calloc_r
0000d624 g     F .text	000001f4 gettimeofday
00013ce4 g       *ABS*	00000000 __bss_start
00006160 g     F .text	00000128 memset
00000798 g     F .text	000000c0 main
000005b4 g     F .text	00000038 read_channel1
00013d18 g     O .bss	00000004 alt_envp
00013cf4 g     O .bss	00000004 __malloc_max_total_mem
0000e260 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00000d00 g     F .text	00000018 srand
0000ee04 g     F .text	000000ac alt_adc_word_read
00007aa0 g     F .text	00000008 __sclose
04000000 g       *ABS*	00000000 __alt_heap_limit
000094c8 g     F .text	00000014 fclose
0000340c g     F .text	00001688 _dtoa_r
000055cc g     F .text	0000080c _malloc_r
00003194 g     F .text	00000050 time
00012178 g     O .rwdata	00000004 alt_errno
0000530c g     F .text	000000c4 _fwalk
0000026c g     F .text	0000006c servo_setAngle
00000858 g     F .text	00000084 .hidden __divsi3
00009784 g     F .text	00000124 _malloc_trim_r
00010308 g       *ABS*	00000000 __CTOR_END__
00007aa8 g     F .text	000000dc strcmp
00010308 g       *ABS*	00000000 __flash_rodata_start
00010308 g       *ABS*	00000000 __DTOR_LIST__
0000be2c g     F .text	00000088 .hidden __nedf2
0000e150 g     F .text	00000038 alt_irq_init
0000dd08 g     F .text	00000084 alt_release_fd
00000dd4 g     F .text	0000006c sprintf
00010329 g     O .rodata	00000100 .hidden __clz_tab
00013ce8 g     O .bss	00000004 _PathLocale
0000ff74 g     F .text	00000014 atexit
000090f4 g     F .text	00000060 _write_r
000055a8 g     F .text	00000018 setlocale
00012154 g     O .rwdata	00000004 _impure_ptr
00013d10 g     O .bss	00000004 alt_argc
0000056c g     F .text	00000048 adc_init
000094dc g     F .text	0000021c __sflush_r
0000f554 g     F .text	00000060 _do_dtors
00005594 g     F .text	00000008 __locale_cjk_lang
00000020 g       .exceptions	00000000 alt_irq_entry
00006e68 g     F .text	00000064 __ulp
00004e2c g     F .text	00000018 __fp_unlock_all
00012164 g     O .rwdata	00000008 alt_fs_list
00013d08 g     O .bss	00000008 alt_resettime
00000020 g       *ABS*	00000000 __ram_exceptions_start
000055c0 g     F .text	0000000c localeconv
0000f664 g     F .text	00000050 alt_ic_isr_register
00012194 g       *ABS*	00000000 _edata
00013e54 g       *ABS*	00000000 _end
0000f24c g     F .text	00000040 adc_interrupt_asserted
00000230 g       *ABS*	00000000 __ram_exceptions_end
0000e738 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
08000000 g       *ABS*	00000000 __alt_mem_Onchip_SRAM
0000f73c g     F .text	0000008c alt_ic_irq_disable
000079c8 g     F .text	0000007c __swrite
00012160 g     O .rwdata	00000004 __malloc_trim_threshold
0000f208 g     F .text	00000044 adc_clear_interrupt_status
00005588 g     F .text	0000000c __locale_msgcharset
0000ff88 g     F .text	00000038 exit
000053d0 g     F .text	000000c4 _fwalk_reent
00006c6c g     F .text	000001fc __mdiff
000008dc g     F .text	00000074 .hidden __modsi3
000003a4 g     F .text	00000030 clearSevenSegs
04000000 g       *ABS*	00000000 __alt_data_end
00000020 g     F .exceptions	00000000 alt_exception
00004e08 g     F .text	00000004 __sfp_lock_release
0000efbc g     F .text	00000040 altera_modular_adc_open
000102d4 g     F .text	00000034 _exit
0000f2c8 g     F .text	0000012c alt_alarm_start
00009ee4 g     F .text	0000010c .hidden __muldi3
00009c18 g     F .text	000001bc __smakebuf_r
00000e40 g     F .text	00000098 strlen
0000fb8c g     F .text	0000015c open
0000beb4 g     F .text	000000dc .hidden __gedf2
0000f100 g     F .text	0000007c adc_recalibrate
0000f644 g     F .text	00000020 alt_icache_flush_all
00012190 g     O .rwdata	00000004 alt_priority_mask
0000f6b4 g     F .text	00000088 alt_ic_irq_enable
0000c8f0 g     F .text	000008fc .hidden __subdf3
0000660c g     F .text	000000b0 __lo0bits
00012180 g     O .rwdata	00000008 alt_alarm_list
0000f4f4 g     F .text	00000060 _do_ctors
0000d42c g     F .text	000000d8 close
0000d968 g     F .text	00000084 alt_load
0000ef24 g     F .text	00000098 alt_adc_register_callback
00004e0c g     F .text	00000004 __sinit_lock_acquire
00006358 g     F .text	00000148 __multadd
00006330 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   0:	00400034 	movhi	at,0
    ori r1, r1, %lo(_start)
   4:	08408c14 	ori	at,at,560
    jmp r1
   8:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  20:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  24:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  28:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  2c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  30:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  34:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  38:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  3c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  40:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  44:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  48:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  4c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  50:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  54:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  58:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  5c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  60:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  64:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  68:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  6c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  70:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  74:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  78:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  7c:	10000326 	beq	r2,zero,8c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  80:	20000226 	beq	r4,zero,8c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  84:	00000fc0 	call	fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  88:	00000706 	br	a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  8c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  90:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  94:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  98:	00001d00 	call	1d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  9c:	1000021e 	bne	r2,zero,a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  f8:	ef80083a 	eret

000000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  fc:	defff904 	addi	sp,sp,-28
 100:	dfc00615 	stw	ra,24(sp)
 104:	df000515 	stw	fp,20(sp)
 108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 10c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 110:	0005313a 	rdctl	r2,ipending
 114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 11c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 124:	00800044 	movi	r2,1
 128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 12c:	e0fffb17 	ldw	r3,-20(fp)
 130:	e0bffc17 	ldw	r2,-16(fp)
 134:	1884703a 	and	r2,r3,r2
 138:	10001426 	beq	r2,zero,18c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 13c:	00800074 	movhi	r2,1
 140:	108f5504 	addi	r2,r2,15700
 144:	e0fffd17 	ldw	r3,-12(fp)
 148:	180690fa 	slli	r3,r3,3
 14c:	10c5883a 	add	r2,r2,r3
 150:	10c00017 	ldw	r3,0(r2)
 154:	00800074 	movhi	r2,1
 158:	108f5504 	addi	r2,r2,15700
 15c:	e13ffd17 	ldw	r4,-12(fp)
 160:	200890fa 	slli	r4,r4,3
 164:	1105883a 	add	r2,r2,r4
 168:	10800104 	addi	r2,r2,4
 16c:	10800017 	ldw	r2,0(r2)
 170:	1009883a 	mov	r4,r2
 174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 17c:	0005313a 	rdctl	r2,ipending
 180:	e0bfff15 	stw	r2,-4(fp)

  return active;
 184:	e0bfff17 	ldw	r2,-4(fp)
 188:	00000706 	br	1a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 18c:	e0bffc17 	ldw	r2,-16(fp)
 190:	1085883a 	add	r2,r2,r2
 194:	e0bffc15 	stw	r2,-16(fp)
      i++;
 198:	e0bffd17 	ldw	r2,-12(fp)
 19c:	10800044 	addi	r2,r2,1
 1a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 1a4:	003fe106 	br	12c <__alt_mem_Onchip_SRAM+0xf800012c>

    active = alt_irq_pending ();
 1a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 1ac:	e0bffb17 	ldw	r2,-20(fp)
 1b0:	103fdb1e 	bne	r2,zero,120 <__alt_mem_Onchip_SRAM+0xf8000120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 1b4:	0001883a 	nop
}
 1b8:	0001883a 	nop
 1bc:	e037883a 	mov	sp,fp
 1c0:	dfc00117 	ldw	ra,4(sp)
 1c4:	df000017 	ldw	fp,0(sp)
 1c8:	dec00204 	addi	sp,sp,8
 1cc:	f800283a 	ret

000001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 1d0:	defffb04 	addi	sp,sp,-20
 1d4:	dfc00415 	stw	ra,16(sp)
 1d8:	df000315 	stw	fp,12(sp)
 1dc:	df000304 	addi	fp,sp,12
 1e0:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
 1e4:	00bfffc4 	movi	r2,-1
 1e8:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
 1ec:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 1f0:	d0a6ff17 	ldw	r2,-25604(gp)
 1f4:	10000726 	beq	r2,zero,214 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 1f8:	d0a6ff17 	ldw	r2,-25604(gp)
 1fc:	e0fffd17 	ldw	r3,-12(fp)
 200:	e1bffe17 	ldw	r6,-8(fp)
 204:	e17fff17 	ldw	r5,-4(fp)
 208:	1809883a 	mov	r4,r3
 20c:	103ee83a 	callr	r2
 210:	00000206 	br	21c <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 214:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 218:	0005883a 	mov	r2,zero
}
 21c:	e037883a 	mov	sp,fp
 220:	dfc00117 	ldw	ra,4(sp)
 224:	df000017 	ldw	fp,0(sp)
 228:	dec00204 	addi	sp,sp,8
 22c:	f800283a 	ret

Disassembly of section .text:

00000230 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
     230:	06c10034 	movhi	sp,1024
    ori sp, sp, %lo(__alt_stack_pointer)
     234:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
     238:	06800074 	movhi	gp,1
    ori gp, gp, %lo(_gp)
     23c:	d6a84b14 	ori	gp,gp,41260
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
     240:	00800074 	movhi	r2,1
    ori r2, r2, %lo(__bss_start)
     244:	108f3914 	ori	r2,r2,15588

    movhi r3, %hi(__bss_end)
     248:	00c00074 	movhi	r3,1
    ori r3, r3, %lo(__bss_end)
     24c:	18cf9514 	ori	r3,r3,15956

    beq r2, r3, 1f
     250:	10c00326 	beq	r2,r3,260 <_start+0x30>

0:
    stw zero, (r2)
     254:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
     258:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
     25c:	10fffd36 	bltu	r2,r3,254 <__alt_mem_Onchip_SRAM+0xf8000254>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
     260:	000d9680 	call	d968 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
     264:	000db040 	call	db04 <alt_main>

00000268 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
     268:	003fff06 	br	268 <__alt_mem_Onchip_SRAM+0xf8000268>

0000026c <servo_setAngle>:
 */

#include "ServoAPI.h"


bool servo_setAngle(SERVO servo, alt_8 angle){
     26c:	defffc04 	addi	sp,sp,-16
     270:	df000315 	stw	fp,12(sp)
     274:	df000304 	addi	fp,sp,12
     278:	e13ffe15 	stw	r4,-8(fp)
     27c:	2805883a 	mov	r2,r5
     280:	e0bfff05 	stb	r2,-4(fp)
	volatile alt_u32* addr = (alt_u32*) servo;
     284:	e0bffe17 	ldw	r2,-8(fp)
     288:	e0bffd15 	stw	r2,-12(fp)
	if((angle > 45) || (angle < -45)){
     28c:	e0bfff07 	ldb	r2,-4(fp)
     290:	10800b88 	cmpgei	r2,r2,46
     294:	1000031e 	bne	r2,zero,2a4 <servo_setAngle+0x38>
     298:	e0bfff07 	ldb	r2,-4(fp)
     29c:	10bff4c8 	cmpgei	r2,r2,-45
     2a0:	1000021e 	bne	r2,zero,2ac <servo_setAngle+0x40>
		return false;
     2a4:	0005883a 	mov	r2,zero
     2a8:	00000706 	br	2c8 <servo_setAngle+0x5c>
	} else {
		*addr = ((alt_u8) (((100/45)*angle)+100));
     2ac:	e0bfff03 	ldbu	r2,-4(fp)
     2b0:	10800c84 	addi	r2,r2,50
     2b4:	1085883a 	add	r2,r2,r2
     2b8:	10c03fcc 	andi	r3,r2,255
     2bc:	e0bffd17 	ldw	r2,-12(fp)
     2c0:	10c00015 	stw	r3,0(r2)
		return true;
     2c4:	00800044 	movi	r2,1
	}
}
     2c8:	e037883a 	mov	sp,fp
     2cc:	df000017 	ldw	fp,0(sp)
     2d0:	dec00104 	addi	sp,sp,4
     2d4:	f800283a 	ret

000002d8 <servo_center>:

bool servo_center(SERVO servo){
     2d8:	defffd04 	addi	sp,sp,-12
     2dc:	df000215 	stw	fp,8(sp)
     2e0:	df000204 	addi	fp,sp,8
     2e4:	e13fff15 	stw	r4,-4(fp)
	volatile alt_u32* addr = (alt_u32*) servo;
     2e8:	e0bfff17 	ldw	r2,-4(fp)
     2ec:	e0bffe15 	stw	r2,-8(fp)
	*addr = 100;
     2f0:	e0bffe17 	ldw	r2,-8(fp)
     2f4:	00c01904 	movi	r3,100
     2f8:	10c00015 	stw	r3,0(r2)
	return true;
     2fc:	00800044 	movi	r2,1
}
     300:	e037883a 	mov	sp,fp
     304:	df000017 	ldw	fp,0(sp)
     308:	dec00104 	addi	sp,sp,4
     30c:	f800283a 	ret

00000310 <servo_pan>:

bool servo_pan(SERVO servo, alt_u32 speed, float cycles){
     310:	defffb04 	addi	sp,sp,-20
     314:	df000415 	stw	fp,16(sp)
     318:	df000404 	addi	fp,sp,16
     31c:	e13ffd15 	stw	r4,-12(fp)
     320:	e17ffe15 	stw	r5,-8(fp)
     324:	e1bfff15 	stw	r6,-4(fp)
	volatile alt_u32* addr = (alt_u32*) servo;
     328:	e0bffd17 	ldw	r2,-12(fp)
     32c:	e0bffc15 	stw	r2,-16(fp)
	//TODO
	return false;
     330:	0005883a 	mov	r2,zero
}
     334:	e037883a 	mov	sp,fp
     338:	df000017 	ldw	fp,0(sp)
     33c:	dec00104 	addi	sp,sp,4
     340:	f800283a 	ret

00000344 <servo_randomMovement>:

bool servo_randomMovement(SERVO servo){
     344:	defffc04 	addi	sp,sp,-16
     348:	dfc00315 	stw	ra,12(sp)
     34c:	df000215 	stw	fp,8(sp)
     350:	df000204 	addi	fp,sp,8
     354:	e13fff15 	stw	r4,-4(fp)
	volatile alt_u32* addr = (alt_u32*) servo;
     358:	e0bfff17 	ldw	r2,-4(fp)
     35c:	e0bffe15 	stw	r2,-8(fp)
	srand(time(0));
     360:	0009883a 	mov	r4,zero
     364:	00031940 	call	3194 <time>
     368:	1009883a 	mov	r4,r2
     36c:	0000d000 	call	d00 <srand>
	*addr = ((alt_u8)(rand()%200));
     370:	0000d180 	call	d18 <rand>
     374:	01403204 	movi	r5,200
     378:	1009883a 	mov	r4,r2
     37c:	00008dc0 	call	8dc <__modsi3>
     380:	10c03fcc 	andi	r3,r2,255
     384:	e0bffe17 	ldw	r2,-8(fp)
     388:	10c00015 	stw	r3,0(r2)
	return true;
     38c:	00800044 	movi	r2,1
}
     390:	e037883a 	mov	sp,fp
     394:	dfc00117 	ldw	ra,4(sp)
     398:	df000017 	ldw	fp,0(sp)
     39c:	dec00204 	addi	sp,sp,8
     3a0:	f800283a 	ret

000003a4 <clearSevenSegs>:
 */
#include "alt_types.h"
#include "SevenSegs.h"
#include <stdio.h>

void clearSevenSegs(){
     3a4:	deffff04 	addi	sp,sp,-4
     3a8:	df000015 	stw	fp,0(sp)
     3ac:	d839883a 	mov	fp,sp
	*HEX0HEX3 = 0;
     3b0:	d0a00017 	ldw	r2,-32768(gp)
     3b4:	10000015 	stw	zero,0(r2)
    *HEX4HEX5 = 0;
     3b8:	d0a00117 	ldw	r2,-32764(gp)
     3bc:	10000015 	stw	zero,0(r2)
}
     3c0:	0001883a 	nop
     3c4:	e037883a 	mov	sp,fp
     3c8:	df000017 	ldw	fp,0(sp)
     3cc:	dec00104 	addi	sp,sp,4
     3d0:	f800283a 	ret

000003d4 <ASCII_to_7Seg>:

char ASCII_to_7Seg(char c){
     3d4:	defffb04 	addi	sp,sp,-20
     3d8:	df000415 	stw	fp,16(sp)
     3dc:	df000404 	addi	fp,sp,16
     3e0:	2005883a 	mov	r2,r4
     3e4:	e0bfff05 	stb	r2,-4(fp)
	if(c != 0){
     3e8:	e0bfff07 	ldb	r2,-4(fp)
     3ec:	10000326 	beq	r2,zero,3fc <ASCII_to_7Seg+0x28>
		c -= 0x30;
     3f0:	e0bfff03 	ldbu	r2,-4(fp)
     3f4:	10bff404 	addi	r2,r2,-48
     3f8:	e0bfff05 	stb	r2,-4(fp)
	}
	char HEXMap[10] = {0b0111111,
     3fc:	00800fc4 	movi	r2,63
     400:	e0bffc05 	stb	r2,-16(fp)
     404:	00800184 	movi	r2,6
     408:	e0bffc45 	stb	r2,-15(fp)
     40c:	008016c4 	movi	r2,91
     410:	e0bffc85 	stb	r2,-14(fp)
     414:	008013c4 	movi	r2,79
     418:	e0bffcc5 	stb	r2,-13(fp)
     41c:	00801984 	movi	r2,102
     420:	e0bffd05 	stb	r2,-12(fp)
     424:	00801b44 	movi	r2,109
     428:	e0bffd45 	stb	r2,-11(fp)
     42c:	00801f04 	movi	r2,124
     430:	e0bffd85 	stb	r2,-10(fp)
     434:	008001c4 	movi	r2,7
     438:	e0bffdc5 	stb	r2,-9(fp)
     43c:	00801fc4 	movi	r2,127
     440:	e0bffe05 	stb	r2,-8(fp)
     444:	008019c4 	movi	r2,103
     448:	e0bffe45 	stb	r2,-7(fp)
			0b1101101,
			0b1111100,
			0b0000111,
			0b1111111,
			0b1100111};
	return HEXMap[c];
     44c:	e0bfff07 	ldb	r2,-4(fp)
     450:	e0fffc04 	addi	r3,fp,-16
     454:	1885883a 	add	r2,r3,r2
     458:	10800003 	ldbu	r2,0(r2)
};
     45c:	e037883a 	mov	sp,fp
     460:	df000017 	ldw	fp,0(sp)
     464:	dec00104 	addi	sp,sp,4
     468:	f800283a 	ret

0000046c <num_to_7Seg>:

void num_to_7Seg(alt_u16 num){
     46c:	defff904 	addi	sp,sp,-28
     470:	dfc00615 	stw	ra,24(sp)
     474:	df000515 	stw	fp,20(sp)
     478:	df000504 	addi	fp,sp,20
     47c:	2005883a 	mov	r2,r4
     480:	e0bfff0d 	sth	r2,-4(fp)
	char BCDOut[6] = {0};
     484:	e03ffd15 	stw	zero,-12(fp)
     488:	e03ffe0d 	sth	zero,-8(fp)
	sprintf(BCDOut, "%d", (num>9999 ? 9999 : num));
     48c:	e0bfff0b 	ldhu	r2,-4(fp)
     490:	1089c428 	cmpgeui	r2,r2,10000
     494:	1000021e 	bne	r2,zero,4a0 <num_to_7Seg+0x34>
     498:	e0bfff0b 	ldhu	r2,-4(fp)
     49c:	00000106 	br	4a4 <num_to_7Seg+0x38>
     4a0:	0089c3c4 	movi	r2,9999
     4a4:	e0fffd04 	addi	r3,fp,-12
     4a8:	100d883a 	mov	r6,r2
     4ac:	01400074 	movhi	r5,1
     4b0:	2940c204 	addi	r5,r5,776
     4b4:	1809883a 	mov	r4,r3
     4b8:	0000dd40 	call	dd4 <sprintf>
	alt_u32 HexOut = 0;
     4bc:	e03ffb15 	stw	zero,-20(fp)
	for(int i = 0; i <= 3; i++){
     4c0:	e03ffc15 	stw	zero,-16(fp)
     4c4:	00001d06 	br	53c <num_to_7Seg+0xd0>
		if(BCDOut[i] != 0){
     4c8:	e0fffd04 	addi	r3,fp,-12
     4cc:	e0bffc17 	ldw	r2,-16(fp)
     4d0:	1885883a 	add	r2,r3,r2
     4d4:	10800003 	ldbu	r2,0(r2)
     4d8:	10803fcc 	andi	r2,r2,255
     4dc:	1080201c 	xori	r2,r2,128
     4e0:	10bfe004 	addi	r2,r2,-128
     4e4:	10001226 	beq	r2,zero,530 <num_to_7Seg+0xc4>
			HexOut = HexOut << 8;
     4e8:	e0bffb17 	ldw	r2,-20(fp)
     4ec:	1004923a 	slli	r2,r2,8
     4f0:	e0bffb15 	stw	r2,-20(fp)
			HexOut |= ASCII_to_7Seg(BCDOut[i]);
     4f4:	e0fffd04 	addi	r3,fp,-12
     4f8:	e0bffc17 	ldw	r2,-16(fp)
     4fc:	1885883a 	add	r2,r3,r2
     500:	10800003 	ldbu	r2,0(r2)
     504:	10803fcc 	andi	r2,r2,255
     508:	1080201c 	xori	r2,r2,128
     50c:	10bfe004 	addi	r2,r2,-128
     510:	1009883a 	mov	r4,r2
     514:	00003d40 	call	3d4 <ASCII_to_7Seg>
     518:	10803fcc 	andi	r2,r2,255
     51c:	1080201c 	xori	r2,r2,128
     520:	10bfe004 	addi	r2,r2,-128
     524:	e0fffb17 	ldw	r3,-20(fp)
     528:	1884b03a 	or	r2,r3,r2
     52c:	e0bffb15 	stw	r2,-20(fp)

void num_to_7Seg(alt_u16 num){
	char BCDOut[6] = {0};
	sprintf(BCDOut, "%d", (num>9999 ? 9999 : num));
	alt_u32 HexOut = 0;
	for(int i = 0; i <= 3; i++){
     530:	e0bffc17 	ldw	r2,-16(fp)
     534:	10800044 	addi	r2,r2,1
     538:	e0bffc15 	stw	r2,-16(fp)
     53c:	e0bffc17 	ldw	r2,-16(fp)
     540:	10800110 	cmplti	r2,r2,4
     544:	103fe01e 	bne	r2,zero,4c8 <__alt_mem_Onchip_SRAM+0xf80004c8>
		if(BCDOut[i] != 0){
			HexOut = HexOut << 8;
			HexOut |= ASCII_to_7Seg(BCDOut[i]);
		}
	}
	*HEX0HEX3 = HexOut;
     548:	d0a00017 	ldw	r2,-32768(gp)
     54c:	e0fffb17 	ldw	r3,-20(fp)
     550:	10c00015 	stw	r3,0(r2)
}
     554:	0001883a 	nop
     558:	e037883a 	mov	sp,fp
     55c:	dfc00117 	ldw	ra,4(sp)
     560:	df000017 	ldw	fp,0(sp)
     564:	dec00204 	addi	sp,sp,8
     568:	f800283a 	ret

0000056c <adc_init>:
#include "adc.h"

static volatile ADC_SAMPLE_STORE* samples = (alt_u32*) ADC_SAMPLE_STORE_BASE;
static volatile alt_u32* sequencerCmd = (alt_u32*) ADC_SEQUENCER_BASE;

void adc_init() {
     56c:	defffe04 	addi	sp,sp,-8
     570:	df000115 	stw	fp,4(sp)
     574:	df000104 	addi	fp,sp,4
	alt_u32 data = *sequencerCmd;
     578:	d0a00317 	ldw	r2,-32756(gp)
     57c:	10800017 	ldw	r2,0(r2)
     580:	e0bfff15 	stw	r2,-4(fp)
	data = (data&0xF) | 0b0001;
     584:	e0bfff17 	ldw	r2,-4(fp)
     588:	1080038c 	andi	r2,r2,14
     58c:	10800054 	ori	r2,r2,1
     590:	e0bfff15 	stw	r2,-4(fp)
	*sequencerCmd = data;
     594:	d0a00317 	ldw	r2,-32756(gp)
     598:	e0ffff17 	ldw	r3,-4(fp)
     59c:	10c00015 	stw	r3,0(r2)
}
     5a0:	0001883a 	nop
     5a4:	e037883a 	mov	sp,fp
     5a8:	df000017 	ldw	fp,0(sp)
     5ac:	dec00104 	addi	sp,sp,4
     5b0:	f800283a 	ret

000005b4 <read_channel1>:

alt_u16 read_channel1() {
     5b4:	defffe04 	addi	sp,sp,-8
     5b8:	df000115 	stw	fp,4(sp)
     5bc:	df000104 	addi	fp,sp,4
    alt_u32 data = samples->slot0;
     5c0:	d0a00217 	ldw	r2,-32760(gp)
     5c4:	10800017 	ldw	r2,0(r2)
     5c8:	e0bfff15 	stw	r2,-4(fp)
    data &= 0xFFF;
     5cc:	e0bfff17 	ldw	r2,-4(fp)
     5d0:	1083ffcc 	andi	r2,r2,4095
     5d4:	e0bfff15 	stw	r2,-4(fp)
    return data;
     5d8:	e0bfff17 	ldw	r2,-4(fp)
}
     5dc:	e037883a 	mov	sp,fp
     5e0:	df000017 	ldw	fp,0(sp)
     5e4:	dec00104 	addi	sp,sp,4
     5e8:	f800283a 	ret

000005ec <read_channel2>:

alt_u16 read_channel2() {
     5ec:	defffe04 	addi	sp,sp,-8
     5f0:	df000115 	stw	fp,4(sp)
     5f4:	df000104 	addi	fp,sp,4
    alt_u32 data = samples->slot1;
     5f8:	d0a00217 	ldw	r2,-32760(gp)
     5fc:	10800117 	ldw	r2,4(r2)
     600:	e0bfff15 	stw	r2,-4(fp)
    data &= 0xFFF;
     604:	e0bfff17 	ldw	r2,-4(fp)
     608:	1083ffcc 	andi	r2,r2,4095
     60c:	e0bfff15 	stw	r2,-4(fp)
    return data;
     610:	e0bfff17 	ldw	r2,-4(fp)
}
     614:	e037883a 	mov	sp,fp
     618:	df000017 	ldw	fp,0(sp)
     61c:	dec00104 	addi	sp,sp,4
     620:	f800283a 	ret

00000624 <read_joystick>:

void read_joystick() {
     624:	defffe04 	addi	sp,sp,-8
     628:	dfc00115 	stw	ra,4(sp)
     62c:	df000015 	stw	fp,0(sp)
     630:	d839883a 	mov	fp,sp
	servo_setAngle(SERVO_Y, (alt_8) (read_channel1() / 4000.0 * 90 - 45));
     634:	00005b40 	call	5b4 <read_channel1>
     638:	10bfffcc 	andi	r2,r2,65535
     63c:	1009883a 	mov	r4,r2
     640:	0000aa40 	call	aa4 <__floatsisf>
     644:	1007883a 	mov	r3,r2
     648:	00915eb4 	movhi	r2,17786
     64c:	1887fff2 	custom	255,r3,r3,r2
     650:	0090ad34 	movhi	r2,17076
     654:	1887ff32 	custom	252,r3,r3,r2
     658:	00908d34 	movhi	r2,16948
     65c:	1885ffb2 	custom	254,r2,r3,r2
     660:	1009883a 	mov	r4,r2
     664:	0000a340 	call	a34 <__fixsfsi>
     668:	10803fcc 	andi	r2,r2,255
     66c:	1080201c 	xori	r2,r2,128
     670:	10bfe004 	addi	r2,r2,-128
     674:	100b883a 	mov	r5,r2
     678:	013fc834 	movhi	r4,65312
     67c:	21002804 	addi	r4,r4,160
     680:	000026c0 	call	26c <servo_setAngle>
	servo_setAngle(SERVO_X, (alt_8) (read_channel2() / 4000.0 * 90 - 45));
     684:	00005ec0 	call	5ec <read_channel2>
     688:	10bfffcc 	andi	r2,r2,65535
     68c:	1009883a 	mov	r4,r2
     690:	0000aa40 	call	aa4 <__floatsisf>
     694:	1007883a 	mov	r3,r2
     698:	00915eb4 	movhi	r2,17786
     69c:	1887fff2 	custom	255,r3,r3,r2
     6a0:	0090ad34 	movhi	r2,17076
     6a4:	1887ff32 	custom	252,r3,r3,r2
     6a8:	00908d34 	movhi	r2,16948
     6ac:	1885ffb2 	custom	254,r2,r3,r2
     6b0:	1009883a 	mov	r4,r2
     6b4:	0000a340 	call	a34 <__fixsfsi>
     6b8:	10803fcc 	andi	r2,r2,255
     6bc:	1080201c 	xori	r2,r2,128
     6c0:	10bfe004 	addi	r2,r2,-128
     6c4:	100b883a 	mov	r5,r2
     6c8:	013fc834 	movhi	r4,65312
     6cc:	21002404 	addi	r4,r4,144
     6d0:	000026c0 	call	26c <servo_setAngle>
}
     6d4:	0001883a 	nop
     6d8:	e037883a 	mov	sp,fp
     6dc:	dfc00117 	ldw	ra,4(sp)
     6e0:	df000017 	ldw	fp,0(sp)
     6e4:	dec00204 	addi	sp,sp,8
     6e8:	f800283a 	ret

000006ec <delay_1s>:
 */

#include "alt_types.h"
#include "delay.h"  //include declaration header file

void delay_1s(alt_u32 n){
     6ec:	defffc04 	addi	sp,sp,-16
     6f0:	dfc00315 	stw	ra,12(sp)
     6f4:	df000215 	stw	fp,8(sp)
     6f8:	df000204 	addi	fp,sp,8
     6fc:	e13fff15 	stw	r4,-4(fp)
	int i = 500000*n;
     700:	01400234 	movhi	r5,8
     704:	29684804 	addi	r5,r5,-24288
     708:	e13fff17 	ldw	r4,-4(fp)
     70c:	0000a0c0 	call	a0c <__mulsi3>
     710:	e0bffe15 	stw	r2,-8(fp)
	while(i>0){
     714:	00000306 	br	724 <delay_1s+0x38>
		i--;
     718:	e0bffe17 	ldw	r2,-8(fp)
     71c:	10bfffc4 	addi	r2,r2,-1
     720:	e0bffe15 	stw	r2,-8(fp)
#include "alt_types.h"
#include "delay.h"  //include declaration header file

void delay_1s(alt_u32 n){
	int i = 500000*n;
	while(i>0){
     724:	e0bffe17 	ldw	r2,-8(fp)
     728:	00bffb16 	blt	zero,r2,718 <__alt_mem_Onchip_SRAM+0xf8000718>
		i--;
	}
}
     72c:	0001883a 	nop
     730:	e037883a 	mov	sp,fp
     734:	dfc00117 	ldw	ra,4(sp)
     738:	df000017 	ldw	fp,0(sp)
     73c:	dec00204 	addi	sp,sp,8
     740:	f800283a 	ret

00000744 <delay_1ms>:
void delay_1ms(alt_u32 n){
     744:	defffc04 	addi	sp,sp,-16
     748:	dfc00315 	stw	ra,12(sp)
     74c:	df000215 	stw	fp,8(sp)
     750:	df000204 	addi	fp,sp,8
     754:	e13fff15 	stw	r4,-4(fp)
	int i = 500*n;
     758:	01407d04 	movi	r5,500
     75c:	e13fff17 	ldw	r4,-4(fp)
     760:	0000a0c0 	call	a0c <__mulsi3>
     764:	e0bffe15 	stw	r2,-8(fp)
	while(i>0){
     768:	00000306 	br	778 <delay_1ms+0x34>
		i--;
     76c:	e0bffe17 	ldw	r2,-8(fp)
     770:	10bfffc4 	addi	r2,r2,-1
     774:	e0bffe15 	stw	r2,-8(fp)
		i--;
	}
}
void delay_1ms(alt_u32 n){
	int i = 500*n;
	while(i>0){
     778:	e0bffe17 	ldw	r2,-8(fp)
     77c:	00bffb16 	blt	zero,r2,76c <__alt_mem_Onchip_SRAM+0xf800076c>
		i--;
	}
}
     780:	0001883a 	nop
     784:	e037883a 	mov	sp,fp
     788:	dfc00117 	ldw	ra,4(sp)
     78c:	df000017 	ldw	fp,0(sp)
     790:	dec00204 	addi	sp,sp,8
     794:	f800283a 	ret

00000798 <main>:
 * 2: move servos
 */
#define DEBUG 2


int main(){
     798:	defffd04 	addi	sp,sp,-12
     79c:	dfc00215 	stw	ra,8(sp)
     7a0:	df000115 	stw	fp,4(sp)
     7a4:	dc000015 	stw	r16,0(sp)
     7a8:	df000104 	addi	fp,sp,4
  printf("Welcome to the test display!\n");
     7ac:	01000074 	movhi	r4,1
     7b0:	2100c304 	addi	r4,r4,780
     7b4:	0000cec0 	call	cec <puts>
  //clear on boot up
  clearSevenSegs();
     7b8:	00003a40 	call	3a4 <clearSevenSegs>
  //initalize ADC
  adc_init();
     7bc:	000056c0 	call	56c <adc_init>
	//printf("X: %d\n", read_channel1());
	//printf("Y: %d\n", read_channel2());
	//determine if switch 0 is on or off. if on display channel 1
	//else if off, display channel 2 on the hex display
	while (DEBUG == 2) {
		if(((*slideSwitches)&1) == 1){
     7c0:	d0a00817 	ldw	r2,-32736(gp)
     7c4:	1080000b 	ldhu	r2,0(r2)
     7c8:	10bfffcc 	andi	r2,r2,65535
     7cc:	1080004c 	andi	r2,r2,1
     7d0:	10000f26 	beq	r2,zero,810 <main+0x78>
			*HEX4HEX5 = (*HEX4HEX5&0x0000)|(ASCII_to_7Seg('1')<< 8);
     7d4:	d0a00517 	ldw	r2,-32748(gp)
     7d8:	10800017 	ldw	r2,0(r2)
     7dc:	d4200517 	ldw	r16,-32748(gp)
     7e0:	01000c44 	movi	r4,49
     7e4:	00003d40 	call	3d4 <ASCII_to_7Seg>
     7e8:	10803fcc 	andi	r2,r2,255
     7ec:	1080201c 	xori	r2,r2,128
     7f0:	10bfe004 	addi	r2,r2,-128
     7f4:	1004923a 	slli	r2,r2,8
     7f8:	80800015 	stw	r2,0(r16)
			num_to_7Seg(read_channel1());
     7fc:	00005b40 	call	5b4 <read_channel1>
     800:	10bfffcc 	andi	r2,r2,65535
     804:	1009883a 	mov	r4,r2
     808:	000046c0 	call	46c <num_to_7Seg>
     80c:	00000e06 	br	848 <main+0xb0>
		} else {
			*HEX4HEX5 = (*HEX4HEX5&0x0000)|(ASCII_to_7Seg('0')<< 8);
     810:	d0a00517 	ldw	r2,-32748(gp)
     814:	10800017 	ldw	r2,0(r2)
     818:	d4200517 	ldw	r16,-32748(gp)
     81c:	01000c04 	movi	r4,48
     820:	00003d40 	call	3d4 <ASCII_to_7Seg>
     824:	10803fcc 	andi	r2,r2,255
     828:	1080201c 	xori	r2,r2,128
     82c:	10bfe004 	addi	r2,r2,-128
     830:	1004923a 	slli	r2,r2,8
     834:	80800015 	stw	r2,0(r16)
			num_to_7Seg(read_channel2());
     838:	00005ec0 	call	5ec <read_channel2>
     83c:	10bfffcc 	andi	r2,r2,65535
     840:	1009883a 	mov	r4,r2
     844:	000046c0 	call	46c <num_to_7Seg>
		}
		read_joystick();
     848:	00006240 	call	624 <read_joystick>
		delay_1ms(200);
     84c:	01003204 	movi	r4,200
     850:	00007440 	call	744 <delay_1ms>
	}
     854:	003fda06 	br	7c0 <__alt_mem_Onchip_SRAM+0xf80007c0>

00000858 <__divsi3>:
     858:	20001b16 	blt	r4,zero,8c8 <__divsi3+0x70>
     85c:	000f883a 	mov	r7,zero
     860:	28001616 	blt	r5,zero,8bc <__divsi3+0x64>
     864:	200d883a 	mov	r6,r4
     868:	29001a2e 	bgeu	r5,r4,8d4 <__divsi3+0x7c>
     86c:	00800804 	movi	r2,32
     870:	00c00044 	movi	r3,1
     874:	00000106 	br	87c <__divsi3+0x24>
     878:	10000d26 	beq	r2,zero,8b0 <__divsi3+0x58>
     87c:	294b883a 	add	r5,r5,r5
     880:	10bfffc4 	addi	r2,r2,-1
     884:	18c7883a 	add	r3,r3,r3
     888:	293ffb36 	bltu	r5,r4,878 <__alt_mem_Onchip_SRAM+0xf8000878>
     88c:	0005883a 	mov	r2,zero
     890:	18000726 	beq	r3,zero,8b0 <__divsi3+0x58>
     894:	0005883a 	mov	r2,zero
     898:	31400236 	bltu	r6,r5,8a4 <__divsi3+0x4c>
     89c:	314dc83a 	sub	r6,r6,r5
     8a0:	10c4b03a 	or	r2,r2,r3
     8a4:	1806d07a 	srli	r3,r3,1
     8a8:	280ad07a 	srli	r5,r5,1
     8ac:	183ffa1e 	bne	r3,zero,898 <__alt_mem_Onchip_SRAM+0xf8000898>
     8b0:	38000126 	beq	r7,zero,8b8 <__divsi3+0x60>
     8b4:	0085c83a 	sub	r2,zero,r2
     8b8:	f800283a 	ret
     8bc:	014bc83a 	sub	r5,zero,r5
     8c0:	39c0005c 	xori	r7,r7,1
     8c4:	003fe706 	br	864 <__alt_mem_Onchip_SRAM+0xf8000864>
     8c8:	0109c83a 	sub	r4,zero,r4
     8cc:	01c00044 	movi	r7,1
     8d0:	003fe306 	br	860 <__alt_mem_Onchip_SRAM+0xf8000860>
     8d4:	00c00044 	movi	r3,1
     8d8:	003fee06 	br	894 <__alt_mem_Onchip_SRAM+0xf8000894>

000008dc <__modsi3>:
     8dc:	20001716 	blt	r4,zero,93c <__modsi3+0x60>
     8e0:	000f883a 	mov	r7,zero
     8e4:	2005883a 	mov	r2,r4
     8e8:	28001216 	blt	r5,zero,934 <__modsi3+0x58>
     8ec:	2900162e 	bgeu	r5,r4,948 <__modsi3+0x6c>
     8f0:	01800804 	movi	r6,32
     8f4:	00c00044 	movi	r3,1
     8f8:	00000106 	br	900 <__modsi3+0x24>
     8fc:	30000a26 	beq	r6,zero,928 <__modsi3+0x4c>
     900:	294b883a 	add	r5,r5,r5
     904:	31bfffc4 	addi	r6,r6,-1
     908:	18c7883a 	add	r3,r3,r3
     90c:	293ffb36 	bltu	r5,r4,8fc <__alt_mem_Onchip_SRAM+0xf80008fc>
     910:	18000526 	beq	r3,zero,928 <__modsi3+0x4c>
     914:	1806d07a 	srli	r3,r3,1
     918:	11400136 	bltu	r2,r5,920 <__modsi3+0x44>
     91c:	1145c83a 	sub	r2,r2,r5
     920:	280ad07a 	srli	r5,r5,1
     924:	183ffb1e 	bne	r3,zero,914 <__alt_mem_Onchip_SRAM+0xf8000914>
     928:	38000126 	beq	r7,zero,930 <__modsi3+0x54>
     92c:	0085c83a 	sub	r2,zero,r2
     930:	f800283a 	ret
     934:	014bc83a 	sub	r5,zero,r5
     938:	003fec06 	br	8ec <__alt_mem_Onchip_SRAM+0xf80008ec>
     93c:	0109c83a 	sub	r4,zero,r4
     940:	01c00044 	movi	r7,1
     944:	003fe706 	br	8e4 <__alt_mem_Onchip_SRAM+0xf80008e4>
     948:	00c00044 	movi	r3,1
     94c:	003ff106 	br	914 <__alt_mem_Onchip_SRAM+0xf8000914>

00000950 <__udivsi3>:
     950:	200d883a 	mov	r6,r4
     954:	2900152e 	bgeu	r5,r4,9ac <__udivsi3+0x5c>
     958:	28001416 	blt	r5,zero,9ac <__udivsi3+0x5c>
     95c:	00800804 	movi	r2,32
     960:	00c00044 	movi	r3,1
     964:	00000206 	br	970 <__udivsi3+0x20>
     968:	10000e26 	beq	r2,zero,9a4 <__udivsi3+0x54>
     96c:	28000516 	blt	r5,zero,984 <__udivsi3+0x34>
     970:	294b883a 	add	r5,r5,r5
     974:	10bfffc4 	addi	r2,r2,-1
     978:	18c7883a 	add	r3,r3,r3
     97c:	293ffa36 	bltu	r5,r4,968 <__alt_mem_Onchip_SRAM+0xf8000968>
     980:	18000826 	beq	r3,zero,9a4 <__udivsi3+0x54>
     984:	0005883a 	mov	r2,zero
     988:	31400236 	bltu	r6,r5,994 <__udivsi3+0x44>
     98c:	314dc83a 	sub	r6,r6,r5
     990:	10c4b03a 	or	r2,r2,r3
     994:	1806d07a 	srli	r3,r3,1
     998:	280ad07a 	srli	r5,r5,1
     99c:	183ffa1e 	bne	r3,zero,988 <__alt_mem_Onchip_SRAM+0xf8000988>
     9a0:	f800283a 	ret
     9a4:	0005883a 	mov	r2,zero
     9a8:	f800283a 	ret
     9ac:	00c00044 	movi	r3,1
     9b0:	003ff406 	br	984 <__alt_mem_Onchip_SRAM+0xf8000984>

000009b4 <__umodsi3>:
     9b4:	2005883a 	mov	r2,r4
     9b8:	2900122e 	bgeu	r5,r4,a04 <__umodsi3+0x50>
     9bc:	28001116 	blt	r5,zero,a04 <__umodsi3+0x50>
     9c0:	01800804 	movi	r6,32
     9c4:	00c00044 	movi	r3,1
     9c8:	00000206 	br	9d4 <__umodsi3+0x20>
     9cc:	30000c26 	beq	r6,zero,a00 <__umodsi3+0x4c>
     9d0:	28000516 	blt	r5,zero,9e8 <__umodsi3+0x34>
     9d4:	294b883a 	add	r5,r5,r5
     9d8:	31bfffc4 	addi	r6,r6,-1
     9dc:	18c7883a 	add	r3,r3,r3
     9e0:	293ffa36 	bltu	r5,r4,9cc <__alt_mem_Onchip_SRAM+0xf80009cc>
     9e4:	18000626 	beq	r3,zero,a00 <__umodsi3+0x4c>
     9e8:	1806d07a 	srli	r3,r3,1
     9ec:	11400136 	bltu	r2,r5,9f4 <__umodsi3+0x40>
     9f0:	1145c83a 	sub	r2,r2,r5
     9f4:	280ad07a 	srli	r5,r5,1
     9f8:	183ffb1e 	bne	r3,zero,9e8 <__alt_mem_Onchip_SRAM+0xf80009e8>
     9fc:	f800283a 	ret
     a00:	f800283a 	ret
     a04:	00c00044 	movi	r3,1
     a08:	003ff706 	br	9e8 <__alt_mem_Onchip_SRAM+0xf80009e8>

00000a0c <__mulsi3>:
     a0c:	0005883a 	mov	r2,zero
     a10:	20000726 	beq	r4,zero,a30 <__mulsi3+0x24>
     a14:	20c0004c 	andi	r3,r4,1
     a18:	2008d07a 	srli	r4,r4,1
     a1c:	18000126 	beq	r3,zero,a24 <__mulsi3+0x18>
     a20:	1145883a 	add	r2,r2,r5
     a24:	294b883a 	add	r5,r5,r5
     a28:	203ffa1e 	bne	r4,zero,a14 <__alt_mem_Onchip_SRAM+0xf8000a14>
     a2c:	f800283a 	ret
     a30:	f800283a 	ret

00000a34 <__fixsfsi>:
     a34:	200ad5fa 	srli	r5,r4,23
     a38:	00c02034 	movhi	r3,128
     a3c:	18ffffc4 	addi	r3,r3,-1
     a40:	29403fcc 	andi	r5,r5,255
     a44:	00801f84 	movi	r2,126
     a48:	1906703a 	and	r3,r3,r4
     a4c:	2008d7fa 	srli	r4,r4,31
     a50:	11400e0e 	bge	r2,r5,a8c <__fixsfsi+0x58>
     a54:	00802744 	movi	r2,157
     a58:	11400816 	blt	r2,r5,a7c <__fixsfsi+0x48>
     a5c:	00802544 	movi	r2,149
     a60:	18c02034 	orhi	r3,r3,128
     a64:	11400b0e 	bge	r2,r5,a94 <__fixsfsi+0x60>
     a68:	28bfda84 	addi	r2,r5,-150
     a6c:	1884983a 	sll	r2,r3,r2
     a70:	20000726 	beq	r4,zero,a90 <__fixsfsi+0x5c>
     a74:	0085c83a 	sub	r2,zero,r2
     a78:	f800283a 	ret
     a7c:	00a00034 	movhi	r2,32768
     a80:	10bfffc4 	addi	r2,r2,-1
     a84:	2085883a 	add	r2,r4,r2
     a88:	f800283a 	ret
     a8c:	0005883a 	mov	r2,zero
     a90:	f800283a 	ret
     a94:	00802584 	movi	r2,150
     a98:	1145c83a 	sub	r2,r2,r5
     a9c:	1884d83a 	srl	r2,r3,r2
     aa0:	003ff306 	br	a70 <__alt_mem_Onchip_SRAM+0xf8000a70>

00000aa4 <__floatsisf>:
     aa4:	defffd04 	addi	sp,sp,-12
     aa8:	dfc00215 	stw	ra,8(sp)
     aac:	dc400115 	stw	r17,4(sp)
     ab0:	dc000015 	stw	r16,0(sp)
     ab4:	20003526 	beq	r4,zero,b8c <__floatsisf+0xe8>
     ab8:	2021883a 	mov	r16,r4
     abc:	2022d7fa 	srli	r17,r4,31
     ac0:	20003616 	blt	r4,zero,b9c <__floatsisf+0xf8>
     ac4:	8009883a 	mov	r4,r16
     ac8:	0000bc80 	call	bc8 <__clzsi2>
     acc:	00c02784 	movi	r3,158
     ad0:	1887c83a 	sub	r3,r3,r2
     ad4:	01002584 	movi	r4,150
     ad8:	20c01416 	blt	r4,r3,b2c <__floatsisf+0x88>
     adc:	20c9c83a 	sub	r4,r4,r3
     ae0:	8120983a 	sll	r16,r16,r4
     ae4:	00802034 	movhi	r2,128
     ae8:	10bfffc4 	addi	r2,r2,-1
     aec:	8809883a 	mov	r4,r17
     af0:	80a0703a 	and	r16,r16,r2
     af4:	18803fcc 	andi	r2,r3,255
     af8:	100695fa 	slli	r3,r2,23
     afc:	20803fcc 	andi	r2,r4,255
     b00:	100897fa 	slli	r4,r2,31
     b04:	00802034 	movhi	r2,128
     b08:	10bfffc4 	addi	r2,r2,-1
     b0c:	8084703a 	and	r2,r16,r2
     b10:	10c4b03a 	or	r2,r2,r3
     b14:	1104b03a 	or	r2,r2,r4
     b18:	dfc00217 	ldw	ra,8(sp)
     b1c:	dc400117 	ldw	r17,4(sp)
     b20:	dc000017 	ldw	r16,0(sp)
     b24:	dec00304 	addi	sp,sp,12
     b28:	f800283a 	ret
     b2c:	01002644 	movi	r4,153
     b30:	20c01c16 	blt	r4,r3,ba4 <__floatsisf+0x100>
     b34:	20c9c83a 	sub	r4,r4,r3
     b38:	8120983a 	sll	r16,r16,r4
     b3c:	013f0034 	movhi	r4,64512
     b40:	213fffc4 	addi	r4,r4,-1
     b44:	814001cc 	andi	r5,r16,7
     b48:	8108703a 	and	r4,r16,r4
     b4c:	28000426 	beq	r5,zero,b60 <__floatsisf+0xbc>
     b50:	840003cc 	andi	r16,r16,15
     b54:	01400104 	movi	r5,4
     b58:	81400126 	beq	r16,r5,b60 <__floatsisf+0xbc>
     b5c:	2149883a 	add	r4,r4,r5
     b60:	2141002c 	andhi	r5,r4,1024
     b64:	28000526 	beq	r5,zero,b7c <__floatsisf+0xd8>
     b68:	00c027c4 	movi	r3,159
     b6c:	1887c83a 	sub	r3,r3,r2
     b70:	00bf0034 	movhi	r2,64512
     b74:	10bfffc4 	addi	r2,r2,-1
     b78:	2088703a 	and	r4,r4,r2
     b7c:	202091ba 	slli	r16,r4,6
     b80:	8809883a 	mov	r4,r17
     b84:	8020d27a 	srli	r16,r16,9
     b88:	003fda06 	br	af4 <__alt_mem_Onchip_SRAM+0xf8000af4>
     b8c:	0009883a 	mov	r4,zero
     b90:	0007883a 	mov	r3,zero
     b94:	0021883a 	mov	r16,zero
     b98:	003fd606 	br	af4 <__alt_mem_Onchip_SRAM+0xf8000af4>
     b9c:	0121c83a 	sub	r16,zero,r4
     ba0:	003fc806 	br	ac4 <__alt_mem_Onchip_SRAM+0xf8000ac4>
     ba4:	01002e44 	movi	r4,185
     ba8:	20c9c83a 	sub	r4,r4,r3
     bac:	01400144 	movi	r5,5
     bb0:	8108983a 	sll	r4,r16,r4
     bb4:	288bc83a 	sub	r5,r5,r2
     bb8:	8160d83a 	srl	r16,r16,r5
     bbc:	2008c03a 	cmpne	r4,r4,zero
     bc0:	8120b03a 	or	r16,r16,r4
     bc4:	003fdd06 	br	b3c <__alt_mem_Onchip_SRAM+0xf8000b3c>

00000bc8 <__clzsi2>:
     bc8:	00bfffd4 	movui	r2,65535
     bcc:	11000536 	bltu	r2,r4,be4 <__clzsi2+0x1c>
     bd0:	00803fc4 	movi	r2,255
     bd4:	11000f36 	bltu	r2,r4,c14 <__clzsi2+0x4c>
     bd8:	00800804 	movi	r2,32
     bdc:	0007883a 	mov	r3,zero
     be0:	00000506 	br	bf8 <__clzsi2+0x30>
     be4:	00804034 	movhi	r2,256
     be8:	10bfffc4 	addi	r2,r2,-1
     bec:	11000c2e 	bgeu	r2,r4,c20 <__clzsi2+0x58>
     bf0:	00800204 	movi	r2,8
     bf4:	00c00604 	movi	r3,24
     bf8:	20c8d83a 	srl	r4,r4,r3
     bfc:	00c00074 	movhi	r3,1
     c00:	18c0ca44 	addi	r3,r3,809
     c04:	1909883a 	add	r4,r3,r4
     c08:	20c00003 	ldbu	r3,0(r4)
     c0c:	10c5c83a 	sub	r2,r2,r3
     c10:	f800283a 	ret
     c14:	00800604 	movi	r2,24
     c18:	00c00204 	movi	r3,8
     c1c:	003ff606 	br	bf8 <__alt_mem_Onchip_SRAM+0xf8000bf8>
     c20:	00800404 	movi	r2,16
     c24:	1007883a 	mov	r3,r2
     c28:	003ff306 	br	bf8 <__alt_mem_Onchip_SRAM+0xf8000bf8>

00000c2c <_puts_r>:
     c2c:	defff604 	addi	sp,sp,-40
     c30:	dc000715 	stw	r16,28(sp)
     c34:	2021883a 	mov	r16,r4
     c38:	2809883a 	mov	r4,r5
     c3c:	dc400815 	stw	r17,32(sp)
     c40:	dfc00915 	stw	ra,36(sp)
     c44:	2823883a 	mov	r17,r5
     c48:	0000e400 	call	e40 <strlen>
     c4c:	10c00044 	addi	r3,r2,1
     c50:	d8800115 	stw	r2,4(sp)
     c54:	00800074 	movhi	r2,1
     c58:	10810b04 	addi	r2,r2,1068
     c5c:	d8800215 	stw	r2,8(sp)
     c60:	00800044 	movi	r2,1
     c64:	d8800315 	stw	r2,12(sp)
     c68:	00800084 	movi	r2,2
     c6c:	dc400015 	stw	r17,0(sp)
     c70:	d8c00615 	stw	r3,24(sp)
     c74:	dec00415 	stw	sp,16(sp)
     c78:	d8800515 	stw	r2,20(sp)
     c7c:	80000226 	beq	r16,zero,c88 <_puts_r+0x5c>
     c80:	80800e17 	ldw	r2,56(r16)
     c84:	10001426 	beq	r2,zero,cd8 <_puts_r+0xac>
     c88:	81400217 	ldw	r5,8(r16)
     c8c:	2880030b 	ldhu	r2,12(r5)
     c90:	10c8000c 	andi	r3,r2,8192
     c94:	1800061e 	bne	r3,zero,cb0 <_puts_r+0x84>
     c98:	29001917 	ldw	r4,100(r5)
     c9c:	00f7ffc4 	movi	r3,-8193
     ca0:	10880014 	ori	r2,r2,8192
     ca4:	20c6703a 	and	r3,r4,r3
     ca8:	2880030d 	sth	r2,12(r5)
     cac:	28c01915 	stw	r3,100(r5)
     cb0:	d9800404 	addi	r6,sp,16
     cb4:	8009883a 	mov	r4,r16
     cb8:	0004e440 	call	4e44 <__sfvwrite_r>
     cbc:	1000091e 	bne	r2,zero,ce4 <_puts_r+0xb8>
     cc0:	00800284 	movi	r2,10
     cc4:	dfc00917 	ldw	ra,36(sp)
     cc8:	dc400817 	ldw	r17,32(sp)
     ccc:	dc000717 	ldw	r16,28(sp)
     cd0:	dec00a04 	addi	sp,sp,40
     cd4:	f800283a 	ret
     cd8:	8009883a 	mov	r4,r16
     cdc:	0004df40 	call	4df4 <__sinit>
     ce0:	003fe906 	br	c88 <__alt_mem_Onchip_SRAM+0xf8000c88>
     ce4:	00bfffc4 	movi	r2,-1
     ce8:	003ff606 	br	cc4 <__alt_mem_Onchip_SRAM+0xf8000cc4>

00000cec <puts>:
     cec:	00800074 	movhi	r2,1
     cf0:	10885504 	addi	r2,r2,8532
     cf4:	200b883a 	mov	r5,r4
     cf8:	11000017 	ldw	r4,0(r2)
     cfc:	0000c2c1 	jmpi	c2c <_puts_r>

00000d00 <srand>:
     d00:	00800074 	movhi	r2,1
     d04:	10885504 	addi	r2,r2,8532
     d08:	10800017 	ldw	r2,0(r2)
     d0c:	11002915 	stw	r4,164(r2)
     d10:	10002a15 	stw	zero,168(r2)
     d14:	f800283a 	ret

00000d18 <rand>:
     d18:	00800074 	movhi	r2,1
     d1c:	defffe04 	addi	sp,sp,-8
     d20:	10885504 	addi	r2,r2,8532
     d24:	dc000015 	stw	r16,0(sp)
     d28:	14000017 	ldw	r16,0(r2)
     d2c:	dfc00115 	stw	ra,4(sp)
     d30:	01932574 	movhi	r6,19605
     d34:	81002917 	ldw	r4,164(r16)
     d38:	81402a17 	ldw	r5,168(r16)
     d3c:	01d614b4 	movhi	r7,22610
     d40:	319fcb44 	addi	r6,r6,32557
     d44:	39fd0b44 	addi	r7,r7,-3027
     d48:	0009ee40 	call	9ee4 <__muldi3>
     d4c:	11000044 	addi	r4,r2,1
     d50:	2085803a 	cmpltu	r2,r4,r2
     d54:	10c7883a 	add	r3,r2,r3
     d58:	00a00034 	movhi	r2,32768
     d5c:	10bfffc4 	addi	r2,r2,-1
     d60:	1884703a 	and	r2,r3,r2
     d64:	81002915 	stw	r4,164(r16)
     d68:	80c02a15 	stw	r3,168(r16)
     d6c:	dfc00117 	ldw	ra,4(sp)
     d70:	dc000017 	ldw	r16,0(sp)
     d74:	dec00204 	addi	sp,sp,8
     d78:	f800283a 	ret

00000d7c <_sprintf_r>:
     d7c:	deffe404 	addi	sp,sp,-112
     d80:	2807883a 	mov	r3,r5
     d84:	dfc01a15 	stw	ra,104(sp)
     d88:	d9c01b15 	stw	r7,108(sp)
     d8c:	00a00034 	movhi	r2,32768
     d90:	10bfffc4 	addi	r2,r2,-1
     d94:	02008204 	movi	r8,520
     d98:	d8800215 	stw	r2,8(sp)
     d9c:	d8800515 	stw	r2,20(sp)
     da0:	d9c01b04 	addi	r7,sp,108
     da4:	d80b883a 	mov	r5,sp
     da8:	00bfffc4 	movi	r2,-1
     dac:	d8c00015 	stw	r3,0(sp)
     db0:	d8c00415 	stw	r3,16(sp)
     db4:	da00030d 	sth	r8,12(sp)
     db8:	d880038d 	sth	r2,14(sp)
     dbc:	0000ed80 	call	ed8 <___svfprintf_internal_r>
     dc0:	d8c00017 	ldw	r3,0(sp)
     dc4:	18000005 	stb	zero,0(r3)
     dc8:	dfc01a17 	ldw	ra,104(sp)
     dcc:	dec01c04 	addi	sp,sp,112
     dd0:	f800283a 	ret

00000dd4 <sprintf>:
     dd4:	deffe304 	addi	sp,sp,-116
     dd8:	2007883a 	mov	r3,r4
     ddc:	dfc01a15 	stw	ra,104(sp)
     de0:	d9801b15 	stw	r6,108(sp)
     de4:	d9c01c15 	stw	r7,112(sp)
     de8:	01000074 	movhi	r4,1
     dec:	21085504 	addi	r4,r4,8532
     df0:	21000017 	ldw	r4,0(r4)
     df4:	00a00034 	movhi	r2,32768
     df8:	10bfffc4 	addi	r2,r2,-1
     dfc:	280d883a 	mov	r6,r5
     e00:	02008204 	movi	r8,520
     e04:	d8800215 	stw	r2,8(sp)
     e08:	d8800515 	stw	r2,20(sp)
     e0c:	d9c01b04 	addi	r7,sp,108
     e10:	d80b883a 	mov	r5,sp
     e14:	00bfffc4 	movi	r2,-1
     e18:	d8c00015 	stw	r3,0(sp)
     e1c:	d8c00415 	stw	r3,16(sp)
     e20:	da00030d 	sth	r8,12(sp)
     e24:	d880038d 	sth	r2,14(sp)
     e28:	0000ed80 	call	ed8 <___svfprintf_internal_r>
     e2c:	d8c00017 	ldw	r3,0(sp)
     e30:	18000005 	stb	zero,0(r3)
     e34:	dfc01a17 	ldw	ra,104(sp)
     e38:	dec01d04 	addi	sp,sp,116
     e3c:	f800283a 	ret

00000e40 <strlen>:
     e40:	208000cc 	andi	r2,r4,3
     e44:	10002026 	beq	r2,zero,ec8 <strlen+0x88>
     e48:	20800007 	ldb	r2,0(r4)
     e4c:	10002026 	beq	r2,zero,ed0 <strlen+0x90>
     e50:	2005883a 	mov	r2,r4
     e54:	00000206 	br	e60 <strlen+0x20>
     e58:	10c00007 	ldb	r3,0(r2)
     e5c:	18001826 	beq	r3,zero,ec0 <strlen+0x80>
     e60:	10800044 	addi	r2,r2,1
     e64:	10c000cc 	andi	r3,r2,3
     e68:	183ffb1e 	bne	r3,zero,e58 <__alt_mem_Onchip_SRAM+0xf8000e58>
     e6c:	10c00017 	ldw	r3,0(r2)
     e70:	01ffbff4 	movhi	r7,65279
     e74:	39ffbfc4 	addi	r7,r7,-257
     e78:	00ca303a 	nor	r5,zero,r3
     e7c:	01a02074 	movhi	r6,32897
     e80:	19c7883a 	add	r3,r3,r7
     e84:	31a02004 	addi	r6,r6,-32640
     e88:	1946703a 	and	r3,r3,r5
     e8c:	1986703a 	and	r3,r3,r6
     e90:	1800091e 	bne	r3,zero,eb8 <strlen+0x78>
     e94:	10800104 	addi	r2,r2,4
     e98:	10c00017 	ldw	r3,0(r2)
     e9c:	19cb883a 	add	r5,r3,r7
     ea0:	00c6303a 	nor	r3,zero,r3
     ea4:	28c6703a 	and	r3,r5,r3
     ea8:	1986703a 	and	r3,r3,r6
     eac:	183ff926 	beq	r3,zero,e94 <__alt_mem_Onchip_SRAM+0xf8000e94>
     eb0:	00000106 	br	eb8 <strlen+0x78>
     eb4:	10800044 	addi	r2,r2,1
     eb8:	10c00007 	ldb	r3,0(r2)
     ebc:	183ffd1e 	bne	r3,zero,eb4 <__alt_mem_Onchip_SRAM+0xf8000eb4>
     ec0:	1105c83a 	sub	r2,r2,r4
     ec4:	f800283a 	ret
     ec8:	2005883a 	mov	r2,r4
     ecc:	003fe706 	br	e6c <__alt_mem_Onchip_SRAM+0xf8000e6c>
     ed0:	0005883a 	mov	r2,zero
     ed4:	f800283a 	ret

00000ed8 <___svfprintf_internal_r>:
     ed8:	deffb704 	addi	sp,sp,-292
     edc:	dfc04815 	stw	ra,288(sp)
     ee0:	ddc04615 	stw	r23,280(sp)
     ee4:	d9402d15 	stw	r5,180(sp)
     ee8:	d9003915 	stw	r4,228(sp)
     eec:	302f883a 	mov	r23,r6
     ef0:	d9c02e15 	stw	r7,184(sp)
     ef4:	df004715 	stw	fp,284(sp)
     ef8:	dd804515 	stw	r22,276(sp)
     efc:	dd404415 	stw	r21,272(sp)
     f00:	dd004315 	stw	r20,268(sp)
     f04:	dcc04215 	stw	r19,264(sp)
     f08:	dc804115 	stw	r18,260(sp)
     f0c:	dc404015 	stw	r17,256(sp)
     f10:	dc003f15 	stw	r16,252(sp)
     f14:	000559c0 	call	559c <_localeconv_r>
     f18:	10800017 	ldw	r2,0(r2)
     f1c:	1009883a 	mov	r4,r2
     f20:	d8803415 	stw	r2,208(sp)
     f24:	0000e400 	call	e40 <strlen>
     f28:	d8c02d17 	ldw	r3,180(sp)
     f2c:	d8803815 	stw	r2,224(sp)
     f30:	1880030b 	ldhu	r2,12(r3)
     f34:	1080200c 	andi	r2,r2,128
     f38:	10000226 	beq	r2,zero,f44 <___svfprintf_internal_r+0x6c>
     f3c:	18800417 	ldw	r2,16(r3)
     f40:	1006b126 	beq	r2,zero,2a08 <___svfprintf_internal_r+0x1b30>
     f44:	dcc03917 	ldw	r19,228(sp)
     f48:	d8c00404 	addi	r3,sp,16
     f4c:	05400074 	movhi	r21,1
     f50:	d9001e04 	addi	r4,sp,120
     f54:	ad411c84 	addi	r21,r21,1138
     f58:	d8c01e15 	stw	r3,120(sp)
     f5c:	d8002015 	stw	zero,128(sp)
     f60:	d8001f15 	stw	zero,124(sp)
     f64:	d8003315 	stw	zero,204(sp)
     f68:	d8003615 	stw	zero,216(sp)
     f6c:	d8003715 	stw	zero,220(sp)
     f70:	1811883a 	mov	r8,r3
     f74:	d8003a15 	stw	zero,232(sp)
     f78:	d8003b15 	stw	zero,236(sp)
     f7c:	d8002f15 	stw	zero,188(sp)
     f80:	d9002815 	stw	r4,160(sp)
     f84:	b8800007 	ldb	r2,0(r23)
     f88:	10027726 	beq	r2,zero,1968 <___svfprintf_internal_r+0xa90>
     f8c:	00c00944 	movi	r3,37
     f90:	b823883a 	mov	r17,r23
     f94:	10c0021e 	bne	r2,r3,fa0 <___svfprintf_internal_r+0xc8>
     f98:	00001406 	br	fec <___svfprintf_internal_r+0x114>
     f9c:	10c00326 	beq	r2,r3,fac <___svfprintf_internal_r+0xd4>
     fa0:	8c400044 	addi	r17,r17,1
     fa4:	88800007 	ldb	r2,0(r17)
     fa8:	103ffc1e 	bne	r2,zero,f9c <__alt_mem_Onchip_SRAM+0xf8000f9c>
     fac:	8de1c83a 	sub	r16,r17,r23
     fb0:	80000e26 	beq	r16,zero,fec <___svfprintf_internal_r+0x114>
     fb4:	d8c02017 	ldw	r3,128(sp)
     fb8:	d8801f17 	ldw	r2,124(sp)
     fbc:	45c00015 	stw	r23,0(r8)
     fc0:	1c07883a 	add	r3,r3,r16
     fc4:	10800044 	addi	r2,r2,1
     fc8:	d8c02015 	stw	r3,128(sp)
     fcc:	44000115 	stw	r16,4(r8)
     fd0:	d8801f15 	stw	r2,124(sp)
     fd4:	00c001c4 	movi	r3,7
     fd8:	18809916 	blt	r3,r2,1240 <___svfprintf_internal_r+0x368>
     fdc:	42000204 	addi	r8,r8,8
     fe0:	d9402f17 	ldw	r5,188(sp)
     fe4:	2c0b883a 	add	r5,r5,r16
     fe8:	d9402f15 	stw	r5,188(sp)
     fec:	88800007 	ldb	r2,0(r17)
     ff0:	10009a26 	beq	r2,zero,125c <___svfprintf_internal_r+0x384>
     ff4:	8dc00044 	addi	r23,r17,1
     ff8:	8c400047 	ldb	r17,1(r17)
     ffc:	0021883a 	mov	r16,zero
    1000:	00bfffc4 	movi	r2,-1
    1004:	0025883a 	mov	r18,zero
    1008:	dc002905 	stb	r16,164(sp)
    100c:	d8002785 	stb	zero,158(sp)
    1010:	d8002b05 	stb	zero,172(sp)
    1014:	d8802a15 	stw	r2,168(sp)
    1018:	d8003115 	stw	zero,196(sp)
    101c:	05001604 	movi	r20,88
    1020:	05800244 	movi	r22,9
    1024:	4039883a 	mov	fp,r8
    1028:	9021883a 	mov	r16,r18
    102c:	bdc00044 	addi	r23,r23,1
    1030:	88bff804 	addi	r2,r17,-32
    1034:	a0831e36 	bltu	r20,r2,1cb0 <___svfprintf_internal_r+0xdd8>
    1038:	100490ba 	slli	r2,r2,2
    103c:	00c00034 	movhi	r3,0
    1040:	18c41404 	addi	r3,r3,4176
    1044:	10c5883a 	add	r2,r2,r3
    1048:	10800017 	ldw	r2,0(r2)
    104c:	1000683a 	jmp	r2
    1050:	00001bf8 	rdprs	zero,zero,111
    1054:	00001cb0 	cmpltui	zero,zero,114
    1058:	00001cb0 	cmpltui	zero,zero,114
    105c:	00001bec 	andhi	zero,zero,111
    1060:	00001cb0 	cmpltui	zero,zero,114
    1064:	00001cb0 	cmpltui	zero,zero,114
    1068:	00001cb0 	cmpltui	zero,zero,114
    106c:	00001cb0 	cmpltui	zero,zero,114
    1070:	00001cb0 	cmpltui	zero,zero,114
    1074:	00001cb0 	cmpltui	zero,zero,114
    1078:	000012b8 	rdprs	zero,zero,74
    107c:	00001afc 	xorhi	zero,zero,107
    1080:	00001cb0 	cmpltui	zero,zero,114
    1084:	000011c4 	movi	zero,71
    1088:	000012dc 	xori	zero,zero,75
    108c:	00001cb0 	cmpltui	zero,zero,114
    1090:	00001368 	cmpgeui	zero,zero,77
    1094:	0000132c 	andhi	zero,zero,76
    1098:	0000132c 	andhi	zero,zero,76
    109c:	0000132c 	andhi	zero,zero,76
    10a0:	0000132c 	andhi	zero,zero,76
    10a4:	0000132c 	andhi	zero,zero,76
    10a8:	0000132c 	andhi	zero,zero,76
    10ac:	0000132c 	andhi	zero,zero,76
    10b0:	0000132c 	andhi	zero,zero,76
    10b4:	0000132c 	andhi	zero,zero,76
    10b8:	00001cb0 	cmpltui	zero,zero,114
    10bc:	00001cb0 	cmpltui	zero,zero,114
    10c0:	00001cb0 	cmpltui	zero,zero,114
    10c4:	00001cb0 	cmpltui	zero,zero,114
    10c8:	00001cb0 	cmpltui	zero,zero,114
    10cc:	00001cb0 	cmpltui	zero,zero,114
    10d0:	00001cb0 	cmpltui	zero,zero,114
    10d4:	00001cb0 	cmpltui	zero,zero,114
    10d8:	00001cb0 	cmpltui	zero,zero,114
    10dc:	00001cb0 	cmpltui	zero,zero,114
    10e0:	0000142c 	andhi	zero,zero,80
    10e4:	00001374 	movhi	zero,77
    10e8:	00001cb0 	cmpltui	zero,zero,114
    10ec:	00001374 	movhi	zero,77
    10f0:	00001cb0 	cmpltui	zero,zero,114
    10f4:	00001cb0 	cmpltui	zero,zero,114
    10f8:	00001cb0 	cmpltui	zero,zero,114
    10fc:	00001cb0 	cmpltui	zero,zero,114
    1100:	00001420 	cmpeqi	zero,zero,80
    1104:	00001cb0 	cmpltui	zero,zero,114
    1108:	00001cb0 	cmpltui	zero,zero,114
    110c:	000014f4 	movhi	zero,83
    1110:	00001cb0 	cmpltui	zero,zero,114
    1114:	00001cb0 	cmpltui	zero,zero,114
    1118:	00001cb0 	cmpltui	zero,zero,114
    111c:	00001cb0 	cmpltui	zero,zero,114
    1120:	00001cb0 	cmpltui	zero,zero,114
    1124:	00001970 	cmpltui	zero,zero,101
    1128:	00001cb0 	cmpltui	zero,zero,114
    112c:	00001cb0 	cmpltui	zero,zero,114
    1130:	000019dc 	xori	zero,zero,103
    1134:	00001cb0 	cmpltui	zero,zero,114
    1138:	00001cb0 	cmpltui	zero,zero,114
    113c:	00001cb0 	cmpltui	zero,zero,114
    1140:	00001cb0 	cmpltui	zero,zero,114
    1144:	00001cb0 	cmpltui	zero,zero,114
    1148:	00001cb0 	cmpltui	zero,zero,114
    114c:	00001cb0 	cmpltui	zero,zero,114
    1150:	00001cb0 	cmpltui	zero,zero,114
    1154:	00001cb0 	cmpltui	zero,zero,114
    1158:	00001cb0 	cmpltui	zero,zero,114
    115c:	00001a98 	cmpnei	zero,zero,106
    1160:	00001c18 	cmpnei	zero,zero,112
    1164:	00001374 	movhi	zero,77
    1168:	00001374 	movhi	zero,77
    116c:	00001374 	movhi	zero,77
    1170:	00001c8c 	andi	zero,zero,114
    1174:	00001c18 	cmpnei	zero,zero,112
    1178:	00001cb0 	cmpltui	zero,zero,114
    117c:	00001cb0 	cmpltui	zero,zero,114
    1180:	00001c38 	rdprs	zero,zero,112
    1184:	00001cb0 	cmpltui	zero,zero,114
    1188:	00001c4c 	andi	zero,zero,113
    118c:	00001adc 	xori	zero,zero,107
    1190:	000011d0 	cmplti	zero,zero,71
    1194:	00001b14 	movui	zero,108
    1198:	00001cb0 	cmpltui	zero,zero,114
    119c:	00001b20 	cmpeqi	zero,zero,108
    11a0:	00001cb0 	cmpltui	zero,zero,114
    11a4:	00001b84 	movi	zero,110
    11a8:	00001cb0 	cmpltui	zero,zero,114
    11ac:	00001cb0 	cmpltui	zero,zero,114
    11b0:	00001ba4 	muli	zero,zero,110
    11b4:	d8c03117 	ldw	r3,196(sp)
    11b8:	d8802e15 	stw	r2,184(sp)
    11bc:	00c7c83a 	sub	r3,zero,r3
    11c0:	d8c03115 	stw	r3,196(sp)
    11c4:	84000114 	ori	r16,r16,4
    11c8:	bc400007 	ldb	r17,0(r23)
    11cc:	003f9706 	br	102c <__alt_mem_Onchip_SRAM+0xf800102c>
    11d0:	00800c04 	movi	r2,48
    11d4:	d8802705 	stb	r2,156(sp)
    11d8:	00801e04 	movi	r2,120
    11dc:	d8802745 	stb	r2,157(sp)
    11e0:	d9002a17 	ldw	r4,168(sp)
    11e4:	d8802e17 	ldw	r2,184(sp)
    11e8:	d8002785 	stb	zero,158(sp)
    11ec:	e011883a 	mov	r8,fp
    11f0:	10c00104 	addi	r3,r2,4
    11f4:	15000017 	ldw	r20,0(r2)
    11f8:	002d883a 	mov	r22,zero
    11fc:	80800094 	ori	r2,r16,2
    1200:	2002b616 	blt	r4,zero,1cdc <___svfprintf_internal_r+0xe04>
    1204:	00bfdfc4 	movi	r2,-129
    1208:	80a4703a 	and	r18,r16,r2
    120c:	d8c02e15 	stw	r3,184(sp)
    1210:	94800094 	ori	r18,r18,2
    1214:	a002a01e 	bne	r20,zero,1c98 <___svfprintf_internal_r+0xdc0>
    1218:	01400074 	movhi	r5,1
    121c:	29411504 	addi	r5,r5,1108
    1220:	d9403a15 	stw	r5,232(sp)
    1224:	04401e04 	movi	r17,120
    1228:	d8c02a17 	ldw	r3,168(sp)
    122c:	0039883a 	mov	fp,zero
    1230:	1801e626 	beq	r3,zero,19cc <___svfprintf_internal_r+0xaf4>
    1234:	0029883a 	mov	r20,zero
    1238:	002d883a 	mov	r22,zero
    123c:	00020506 	br	1a54 <___svfprintf_internal_r+0xb7c>
    1240:	d9402d17 	ldw	r5,180(sp)
    1244:	d9801e04 	addi	r6,sp,120
    1248:	9809883a 	mov	r4,r19
    124c:	0007b840 	call	7b84 <__ssprint_r>
    1250:	1000081e 	bne	r2,zero,1274 <___svfprintf_internal_r+0x39c>
    1254:	da000404 	addi	r8,sp,16
    1258:	003f6106 	br	fe0 <__alt_mem_Onchip_SRAM+0xf8000fe0>
    125c:	d8802017 	ldw	r2,128(sp)
    1260:	10000426 	beq	r2,zero,1274 <___svfprintf_internal_r+0x39c>
    1264:	d9402d17 	ldw	r5,180(sp)
    1268:	d9003917 	ldw	r4,228(sp)
    126c:	d9801e04 	addi	r6,sp,120
    1270:	0007b840 	call	7b84 <__ssprint_r>
    1274:	d8802d17 	ldw	r2,180(sp)
    1278:	10c0030b 	ldhu	r3,12(r2)
    127c:	d8802f17 	ldw	r2,188(sp)
    1280:	18c0100c 	andi	r3,r3,64
    1284:	1806251e 	bne	r3,zero,2b1c <___svfprintf_internal_r+0x1c44>
    1288:	dfc04817 	ldw	ra,288(sp)
    128c:	df004717 	ldw	fp,284(sp)
    1290:	ddc04617 	ldw	r23,280(sp)
    1294:	dd804517 	ldw	r22,276(sp)
    1298:	dd404417 	ldw	r21,272(sp)
    129c:	dd004317 	ldw	r20,268(sp)
    12a0:	dcc04217 	ldw	r19,264(sp)
    12a4:	dc804117 	ldw	r18,260(sp)
    12a8:	dc404017 	ldw	r17,256(sp)
    12ac:	dc003f17 	ldw	r16,252(sp)
    12b0:	dec04904 	addi	sp,sp,292
    12b4:	f800283a 	ret
    12b8:	d9002e17 	ldw	r4,184(sp)
    12bc:	d9402e17 	ldw	r5,184(sp)
    12c0:	21000017 	ldw	r4,0(r4)
    12c4:	28800104 	addi	r2,r5,4
    12c8:	d9003115 	stw	r4,196(sp)
    12cc:	203fb916 	blt	r4,zero,11b4 <__alt_mem_Onchip_SRAM+0xf80011b4>
    12d0:	d8802e15 	stw	r2,184(sp)
    12d4:	bc400007 	ldb	r17,0(r23)
    12d8:	003f5406 	br	102c <__alt_mem_Onchip_SRAM+0xf800102c>
    12dc:	bc400007 	ldb	r17,0(r23)
    12e0:	01000a84 	movi	r4,42
    12e4:	b8c00044 	addi	r3,r23,1
    12e8:	89076926 	beq	r17,r4,3090 <___svfprintf_internal_r+0x21b8>
    12ec:	8cbff404 	addi	r18,r17,-48
    12f0:	b486b936 	bltu	r22,r18,2dd8 <___svfprintf_internal_r+0x1f00>
    12f4:	0009883a 	mov	r4,zero
    12f8:	1823883a 	mov	r17,r3
    12fc:	01400284 	movi	r5,10
    1300:	0000a0c0 	call	a0c <__mulsi3>
    1304:	88c00007 	ldb	r3,0(r17)
    1308:	1489883a 	add	r4,r2,r18
    130c:	8dc00044 	addi	r23,r17,1
    1310:	1cbff404 	addi	r18,r3,-48
    1314:	b823883a 	mov	r17,r23
    1318:	b4bff82e 	bgeu	r22,r18,12fc <__alt_mem_Onchip_SRAM+0xf80012fc>
    131c:	1823883a 	mov	r17,r3
    1320:	20060416 	blt	r4,zero,2b34 <___svfprintf_internal_r+0x1c5c>
    1324:	d9002a15 	stw	r4,168(sp)
    1328:	003f4106 	br	1030 <__alt_mem_Onchip_SRAM+0xf8001030>
    132c:	8cbff404 	addi	r18,r17,-48
    1330:	d8003115 	stw	zero,196(sp)
    1334:	0009883a 	mov	r4,zero
    1338:	b823883a 	mov	r17,r23
    133c:	01400284 	movi	r5,10
    1340:	0000a0c0 	call	a0c <__mulsi3>
    1344:	88c00007 	ldb	r3,0(r17)
    1348:	9089883a 	add	r4,r18,r2
    134c:	bdc00044 	addi	r23,r23,1
    1350:	1cbff404 	addi	r18,r3,-48
    1354:	b823883a 	mov	r17,r23
    1358:	b4bff82e 	bgeu	r22,r18,133c <__alt_mem_Onchip_SRAM+0xf800133c>
    135c:	1823883a 	mov	r17,r3
    1360:	d9003115 	stw	r4,196(sp)
    1364:	003f3206 	br	1030 <__alt_mem_Onchip_SRAM+0xf8001030>
    1368:	84002014 	ori	r16,r16,128
    136c:	bc400007 	ldb	r17,0(r23)
    1370:	003f2e06 	br	102c <__alt_mem_Onchip_SRAM+0xf800102c>
    1374:	8025883a 	mov	r18,r16
    1378:	dc002903 	ldbu	r16,164(sp)
    137c:	e011883a 	mov	r8,fp
    1380:	84003fcc 	andi	r16,r16,255
    1384:	8007721e 	bne	r16,zero,3150 <___svfprintf_internal_r+0x2278>
    1388:	9080020c 	andi	r2,r18,8
    138c:	1004a526 	beq	r2,zero,2624 <___svfprintf_internal_r+0x174c>
    1390:	d9002e17 	ldw	r4,184(sp)
    1394:	d9402e17 	ldw	r5,184(sp)
    1398:	d8802e17 	ldw	r2,184(sp)
    139c:	21000017 	ldw	r4,0(r4)
    13a0:	29400117 	ldw	r5,4(r5)
    13a4:	10800204 	addi	r2,r2,8
    13a8:	d9003615 	stw	r4,216(sp)
    13ac:	d9403715 	stw	r5,220(sp)
    13b0:	d8802e15 	stw	r2,184(sp)
    13b4:	d9003617 	ldw	r4,216(sp)
    13b8:	d9403717 	ldw	r5,220(sp)
    13bc:	da003e15 	stw	r8,248(sp)
    13c0:	04000044 	movi	r16,1
    13c4:	00078a40 	call	78a4 <__fpclassifyd>
    13c8:	da003e17 	ldw	r8,248(sp)
    13cc:	1404731e 	bne	r2,r16,259c <___svfprintf_internal_r+0x16c4>
    13d0:	d9003617 	ldw	r4,216(sp)
    13d4:	d9403717 	ldw	r5,220(sp)
    13d8:	000d883a 	mov	r6,zero
    13dc:	000f883a 	mov	r7,zero
    13e0:	000bf900 	call	bf90 <__ledf2>
    13e4:	da003e17 	ldw	r8,248(sp)
    13e8:	10061b16 	blt	r2,zero,2c58 <___svfprintf_internal_r+0x1d80>
    13ec:	df002783 	ldbu	fp,158(sp)
    13f0:	008011c4 	movi	r2,71
    13f4:	1445810e 	bge	r2,r17,29fc <___svfprintf_internal_r+0x1b24>
    13f8:	04000074 	movhi	r16,1
    13fc:	84010d04 	addi	r16,r16,1076
    1400:	00c000c4 	movi	r3,3
    1404:	00bfdfc4 	movi	r2,-129
    1408:	d8c02915 	stw	r3,164(sp)
    140c:	90a4703a 	and	r18,r18,r2
    1410:	d8c02b15 	stw	r3,172(sp)
    1414:	d8002a15 	stw	zero,168(sp)
    1418:	d8003215 	stw	zero,200(sp)
    141c:	00006c06 	br	15d0 <___svfprintf_internal_r+0x6f8>
    1420:	84000214 	ori	r16,r16,8
    1424:	bc400007 	ldb	r17,0(r23)
    1428:	003f0006 	br	102c <__alt_mem_Onchip_SRAM+0xf800102c>
    142c:	8025883a 	mov	r18,r16
    1430:	dc002903 	ldbu	r16,164(sp)
    1434:	e011883a 	mov	r8,fp
    1438:	84003fcc 	andi	r16,r16,255
    143c:	80073f1e 	bne	r16,zero,313c <___svfprintf_internal_r+0x2264>
    1440:	94800414 	ori	r18,r18,16
    1444:	9080080c 	andi	r2,r18,32
    1448:	1003bb26 	beq	r2,zero,2338 <___svfprintf_internal_r+0x1460>
    144c:	d9002e17 	ldw	r4,184(sp)
    1450:	20800117 	ldw	r2,4(r4)
    1454:	25000017 	ldw	r20,0(r4)
    1458:	21000204 	addi	r4,r4,8
    145c:	d9002e15 	stw	r4,184(sp)
    1460:	102d883a 	mov	r22,r2
    1464:	1003bd16 	blt	r2,zero,235c <___svfprintf_internal_r+0x1484>
    1468:	d9002a17 	ldw	r4,168(sp)
    146c:	df002783 	ldbu	fp,158(sp)
    1470:	2003d016 	blt	r4,zero,23b4 <___svfprintf_internal_r+0x14dc>
    1474:	00ffdfc4 	movi	r3,-129
    1478:	a584b03a 	or	r2,r20,r22
    147c:	90e4703a 	and	r18,r18,r3
    1480:	10015026 	beq	r2,zero,19c4 <___svfprintf_internal_r+0xaec>
    1484:	b0037026 	beq	r22,zero,2248 <___svfprintf_internal_r+0x1370>
    1488:	dc402915 	stw	r17,164(sp)
    148c:	dc001e04 	addi	r16,sp,120
    1490:	b023883a 	mov	r17,r22
    1494:	402d883a 	mov	r22,r8
    1498:	a009883a 	mov	r4,r20
    149c:	880b883a 	mov	r5,r17
    14a0:	01800284 	movi	r6,10
    14a4:	000f883a 	mov	r7,zero
    14a8:	000a5ec0 	call	a5ec <__umoddi3>
    14ac:	10800c04 	addi	r2,r2,48
    14b0:	843fffc4 	addi	r16,r16,-1
    14b4:	a009883a 	mov	r4,r20
    14b8:	880b883a 	mov	r5,r17
    14bc:	80800005 	stb	r2,0(r16)
    14c0:	01800284 	movi	r6,10
    14c4:	000f883a 	mov	r7,zero
    14c8:	0009ff00 	call	9ff0 <__udivdi3>
    14cc:	1029883a 	mov	r20,r2
    14d0:	10c4b03a 	or	r2,r2,r3
    14d4:	1823883a 	mov	r17,r3
    14d8:	103fef1e 	bne	r2,zero,1498 <__alt_mem_Onchip_SRAM+0xf8001498>
    14dc:	d8c02817 	ldw	r3,160(sp)
    14e0:	dc402917 	ldw	r17,164(sp)
    14e4:	b011883a 	mov	r8,r22
    14e8:	1c07c83a 	sub	r3,r3,r16
    14ec:	d8c02b15 	stw	r3,172(sp)
    14f0:	00003106 	br	15b8 <___svfprintf_internal_r+0x6e0>
    14f4:	8025883a 	mov	r18,r16
    14f8:	dc002903 	ldbu	r16,164(sp)
    14fc:	e011883a 	mov	r8,fp
    1500:	84003fcc 	andi	r16,r16,255
    1504:	80070a1e 	bne	r16,zero,3130 <___svfprintf_internal_r+0x2258>
    1508:	94800414 	ori	r18,r18,16
    150c:	9080080c 	andi	r2,r18,32
    1510:	1002f626 	beq	r2,zero,20ec <___svfprintf_internal_r+0x1214>
    1514:	d9002e17 	ldw	r4,184(sp)
    1518:	d9402a17 	ldw	r5,168(sp)
    151c:	d8002785 	stb	zero,158(sp)
    1520:	20800204 	addi	r2,r4,8
    1524:	25000017 	ldw	r20,0(r4)
    1528:	25800117 	ldw	r22,4(r4)
    152c:	28043716 	blt	r5,zero,260c <___svfprintf_internal_r+0x1734>
    1530:	013fdfc4 	movi	r4,-129
    1534:	a586b03a 	or	r3,r20,r22
    1538:	d8802e15 	stw	r2,184(sp)
    153c:	9124703a 	and	r18,r18,r4
    1540:	1802f71e 	bne	r3,zero,2120 <___svfprintf_internal_r+0x1248>
    1544:	d9402a17 	ldw	r5,168(sp)
    1548:	0039883a 	mov	fp,zero
    154c:	2806df26 	beq	r5,zero,30cc <___svfprintf_internal_r+0x21f4>
    1550:	0029883a 	mov	r20,zero
    1554:	002d883a 	mov	r22,zero
    1558:	dc001e04 	addi	r16,sp,120
    155c:	a006d0fa 	srli	r3,r20,3
    1560:	b008977a 	slli	r4,r22,29
    1564:	b02cd0fa 	srli	r22,r22,3
    1568:	a50001cc 	andi	r20,r20,7
    156c:	a0800c04 	addi	r2,r20,48
    1570:	843fffc4 	addi	r16,r16,-1
    1574:	20e8b03a 	or	r20,r4,r3
    1578:	80800005 	stb	r2,0(r16)
    157c:	a586b03a 	or	r3,r20,r22
    1580:	183ff61e 	bne	r3,zero,155c <__alt_mem_Onchip_SRAM+0xf800155c>
    1584:	90c0004c 	andi	r3,r18,1
    1588:	18013f26 	beq	r3,zero,1a88 <___svfprintf_internal_r+0xbb0>
    158c:	10803fcc 	andi	r2,r2,255
    1590:	1080201c 	xori	r2,r2,128
    1594:	10bfe004 	addi	r2,r2,-128
    1598:	00c00c04 	movi	r3,48
    159c:	10c13a26 	beq	r2,r3,1a88 <___svfprintf_internal_r+0xbb0>
    15a0:	80ffffc5 	stb	r3,-1(r16)
    15a4:	d8c02817 	ldw	r3,160(sp)
    15a8:	80bfffc4 	addi	r2,r16,-1
    15ac:	1021883a 	mov	r16,r2
    15b0:	1887c83a 	sub	r3,r3,r2
    15b4:	d8c02b15 	stw	r3,172(sp)
    15b8:	d8802b17 	ldw	r2,172(sp)
    15bc:	d9002a17 	ldw	r4,168(sp)
    15c0:	1100010e 	bge	r2,r4,15c8 <___svfprintf_internal_r+0x6f0>
    15c4:	2005883a 	mov	r2,r4
    15c8:	d8802915 	stw	r2,164(sp)
    15cc:	d8003215 	stw	zero,200(sp)
    15d0:	e7003fcc 	andi	fp,fp,255
    15d4:	e700201c 	xori	fp,fp,128
    15d8:	e73fe004 	addi	fp,fp,-128
    15dc:	e0000326 	beq	fp,zero,15ec <___svfprintf_internal_r+0x714>
    15e0:	d8c02917 	ldw	r3,164(sp)
    15e4:	18c00044 	addi	r3,r3,1
    15e8:	d8c02915 	stw	r3,164(sp)
    15ec:	90c0008c 	andi	r3,r18,2
    15f0:	d8c02c15 	stw	r3,176(sp)
    15f4:	18000326 	beq	r3,zero,1604 <___svfprintf_internal_r+0x72c>
    15f8:	d8c02917 	ldw	r3,164(sp)
    15fc:	18c00084 	addi	r3,r3,2
    1600:	d8c02915 	stw	r3,164(sp)
    1604:	90c0210c 	andi	r3,r18,132
    1608:	d8c03015 	stw	r3,192(sp)
    160c:	1801c31e 	bne	r3,zero,1d1c <___svfprintf_internal_r+0xe44>
    1610:	d9003117 	ldw	r4,196(sp)
    1614:	d8c02917 	ldw	r3,164(sp)
    1618:	20e9c83a 	sub	r20,r4,r3
    161c:	0501bf0e 	bge	zero,r20,1d1c <___svfprintf_internal_r+0xe44>
    1620:	02400404 	movi	r9,16
    1624:	d8c02017 	ldw	r3,128(sp)
    1628:	d8801f17 	ldw	r2,124(sp)
    162c:	4d053d0e 	bge	r9,r20,2b24 <___svfprintf_internal_r+0x1c4c>
    1630:	01400074 	movhi	r5,1
    1634:	29412084 	addi	r5,r5,1154
    1638:	dc403c15 	stw	r17,240(sp)
    163c:	d9403515 	stw	r5,212(sp)
    1640:	a023883a 	mov	r17,r20
    1644:	482d883a 	mov	r22,r9
    1648:	9029883a 	mov	r20,r18
    164c:	070001c4 	movi	fp,7
    1650:	8025883a 	mov	r18,r16
    1654:	dc002d17 	ldw	r16,180(sp)
    1658:	00000306 	br	1668 <___svfprintf_internal_r+0x790>
    165c:	8c7ffc04 	addi	r17,r17,-16
    1660:	42000204 	addi	r8,r8,8
    1664:	b440130e 	bge	r22,r17,16b4 <___svfprintf_internal_r+0x7dc>
    1668:	01000074 	movhi	r4,1
    166c:	18c00404 	addi	r3,r3,16
    1670:	10800044 	addi	r2,r2,1
    1674:	21012084 	addi	r4,r4,1154
    1678:	41000015 	stw	r4,0(r8)
    167c:	45800115 	stw	r22,4(r8)
    1680:	d8c02015 	stw	r3,128(sp)
    1684:	d8801f15 	stw	r2,124(sp)
    1688:	e0bff40e 	bge	fp,r2,165c <__alt_mem_Onchip_SRAM+0xf800165c>
    168c:	d9801e04 	addi	r6,sp,120
    1690:	800b883a 	mov	r5,r16
    1694:	9809883a 	mov	r4,r19
    1698:	0007b840 	call	7b84 <__ssprint_r>
    169c:	103ef51e 	bne	r2,zero,1274 <__alt_mem_Onchip_SRAM+0xf8001274>
    16a0:	8c7ffc04 	addi	r17,r17,-16
    16a4:	d8c02017 	ldw	r3,128(sp)
    16a8:	d8801f17 	ldw	r2,124(sp)
    16ac:	da000404 	addi	r8,sp,16
    16b0:	b47fed16 	blt	r22,r17,1668 <__alt_mem_Onchip_SRAM+0xf8001668>
    16b4:	9021883a 	mov	r16,r18
    16b8:	a025883a 	mov	r18,r20
    16bc:	8829883a 	mov	r20,r17
    16c0:	dc403c17 	ldw	r17,240(sp)
    16c4:	d9403517 	ldw	r5,212(sp)
    16c8:	a0c7883a 	add	r3,r20,r3
    16cc:	10800044 	addi	r2,r2,1
    16d0:	41400015 	stw	r5,0(r8)
    16d4:	45000115 	stw	r20,4(r8)
    16d8:	d8c02015 	stw	r3,128(sp)
    16dc:	d8801f15 	stw	r2,124(sp)
    16e0:	010001c4 	movi	r4,7
    16e4:	2082c116 	blt	r4,r2,21ec <___svfprintf_internal_r+0x1314>
    16e8:	df002787 	ldb	fp,158(sp)
    16ec:	42000204 	addi	r8,r8,8
    16f0:	e0000c26 	beq	fp,zero,1724 <___svfprintf_internal_r+0x84c>
    16f4:	d8801f17 	ldw	r2,124(sp)
    16f8:	d9002784 	addi	r4,sp,158
    16fc:	18c00044 	addi	r3,r3,1
    1700:	10800044 	addi	r2,r2,1
    1704:	41000015 	stw	r4,0(r8)
    1708:	01000044 	movi	r4,1
    170c:	41000115 	stw	r4,4(r8)
    1710:	d8c02015 	stw	r3,128(sp)
    1714:	d8801f15 	stw	r2,124(sp)
    1718:	010001c4 	movi	r4,7
    171c:	20825a16 	blt	r4,r2,2088 <___svfprintf_internal_r+0x11b0>
    1720:	42000204 	addi	r8,r8,8
    1724:	d8802c17 	ldw	r2,176(sp)
    1728:	10000c26 	beq	r2,zero,175c <___svfprintf_internal_r+0x884>
    172c:	d8801f17 	ldw	r2,124(sp)
    1730:	d9002704 	addi	r4,sp,156
    1734:	18c00084 	addi	r3,r3,2
    1738:	10800044 	addi	r2,r2,1
    173c:	41000015 	stw	r4,0(r8)
    1740:	01000084 	movi	r4,2
    1744:	41000115 	stw	r4,4(r8)
    1748:	d8c02015 	stw	r3,128(sp)
    174c:	d8801f15 	stw	r2,124(sp)
    1750:	010001c4 	movi	r4,7
    1754:	20825416 	blt	r4,r2,20a8 <___svfprintf_internal_r+0x11d0>
    1758:	42000204 	addi	r8,r8,8
    175c:	d9003017 	ldw	r4,192(sp)
    1760:	00802004 	movi	r2,128
    1764:	2081b926 	beq	r4,r2,1e4c <___svfprintf_internal_r+0xf74>
    1768:	d9402a17 	ldw	r5,168(sp)
    176c:	d8802b17 	ldw	r2,172(sp)
    1770:	28adc83a 	sub	r22,r5,r2
    1774:	05802f0e 	bge	zero,r22,1834 <___svfprintf_internal_r+0x95c>
    1778:	07000404 	movi	fp,16
    177c:	d8801f17 	ldw	r2,124(sp)
    1780:	e583e20e 	bge	fp,r22,270c <___svfprintf_internal_r+0x1834>
    1784:	01400074 	movhi	r5,1
    1788:	29411c84 	addi	r5,r5,1138
    178c:	dc402a15 	stw	r17,168(sp)
    1790:	d9402c15 	stw	r5,176(sp)
    1794:	b023883a 	mov	r17,r22
    1798:	050001c4 	movi	r20,7
    179c:	902d883a 	mov	r22,r18
    17a0:	8025883a 	mov	r18,r16
    17a4:	dc002d17 	ldw	r16,180(sp)
    17a8:	00000306 	br	17b8 <___svfprintf_internal_r+0x8e0>
    17ac:	8c7ffc04 	addi	r17,r17,-16
    17b0:	42000204 	addi	r8,r8,8
    17b4:	e440110e 	bge	fp,r17,17fc <___svfprintf_internal_r+0x924>
    17b8:	18c00404 	addi	r3,r3,16
    17bc:	10800044 	addi	r2,r2,1
    17c0:	45400015 	stw	r21,0(r8)
    17c4:	47000115 	stw	fp,4(r8)
    17c8:	d8c02015 	stw	r3,128(sp)
    17cc:	d8801f15 	stw	r2,124(sp)
    17d0:	a0bff60e 	bge	r20,r2,17ac <__alt_mem_Onchip_SRAM+0xf80017ac>
    17d4:	d9801e04 	addi	r6,sp,120
    17d8:	800b883a 	mov	r5,r16
    17dc:	9809883a 	mov	r4,r19
    17e0:	0007b840 	call	7b84 <__ssprint_r>
    17e4:	103ea31e 	bne	r2,zero,1274 <__alt_mem_Onchip_SRAM+0xf8001274>
    17e8:	8c7ffc04 	addi	r17,r17,-16
    17ec:	d8c02017 	ldw	r3,128(sp)
    17f0:	d8801f17 	ldw	r2,124(sp)
    17f4:	da000404 	addi	r8,sp,16
    17f8:	e47fef16 	blt	fp,r17,17b8 <__alt_mem_Onchip_SRAM+0xf80017b8>
    17fc:	9021883a 	mov	r16,r18
    1800:	b025883a 	mov	r18,r22
    1804:	882d883a 	mov	r22,r17
    1808:	dc402a17 	ldw	r17,168(sp)
    180c:	d9002c17 	ldw	r4,176(sp)
    1810:	1d87883a 	add	r3,r3,r22
    1814:	10800044 	addi	r2,r2,1
    1818:	41000015 	stw	r4,0(r8)
    181c:	45800115 	stw	r22,4(r8)
    1820:	d8c02015 	stw	r3,128(sp)
    1824:	d8801f15 	stw	r2,124(sp)
    1828:	010001c4 	movi	r4,7
    182c:	20820e16 	blt	r4,r2,2068 <___svfprintf_internal_r+0x1190>
    1830:	42000204 	addi	r8,r8,8
    1834:	9080400c 	andi	r2,r18,256
    1838:	10013a1e 	bne	r2,zero,1d24 <___svfprintf_internal_r+0xe4c>
    183c:	d9402b17 	ldw	r5,172(sp)
    1840:	d8801f17 	ldw	r2,124(sp)
    1844:	44000015 	stw	r16,0(r8)
    1848:	1947883a 	add	r3,r3,r5
    184c:	10800044 	addi	r2,r2,1
    1850:	41400115 	stw	r5,4(r8)
    1854:	d8c02015 	stw	r3,128(sp)
    1858:	d8801f15 	stw	r2,124(sp)
    185c:	010001c4 	movi	r4,7
    1860:	2081f316 	blt	r4,r2,2030 <___svfprintf_internal_r+0x1158>
    1864:	42000204 	addi	r8,r8,8
    1868:	9480010c 	andi	r18,r18,4
    186c:	90003226 	beq	r18,zero,1938 <___svfprintf_internal_r+0xa60>
    1870:	d9403117 	ldw	r5,196(sp)
    1874:	d8802917 	ldw	r2,164(sp)
    1878:	28a1c83a 	sub	r16,r5,r2
    187c:	04002e0e 	bge	zero,r16,1938 <___svfprintf_internal_r+0xa60>
    1880:	04400404 	movi	r17,16
    1884:	d8801f17 	ldw	r2,124(sp)
    1888:	8c04db0e 	bge	r17,r16,2bf8 <___svfprintf_internal_r+0x1d20>
    188c:	01400074 	movhi	r5,1
    1890:	29412084 	addi	r5,r5,1154
    1894:	d9403515 	stw	r5,212(sp)
    1898:	048001c4 	movi	r18,7
    189c:	dd002d17 	ldw	r20,180(sp)
    18a0:	00000306 	br	18b0 <___svfprintf_internal_r+0x9d8>
    18a4:	843ffc04 	addi	r16,r16,-16
    18a8:	42000204 	addi	r8,r8,8
    18ac:	8c00130e 	bge	r17,r16,18fc <___svfprintf_internal_r+0xa24>
    18b0:	01000074 	movhi	r4,1
    18b4:	18c00404 	addi	r3,r3,16
    18b8:	10800044 	addi	r2,r2,1
    18bc:	21012084 	addi	r4,r4,1154
    18c0:	41000015 	stw	r4,0(r8)
    18c4:	44400115 	stw	r17,4(r8)
    18c8:	d8c02015 	stw	r3,128(sp)
    18cc:	d8801f15 	stw	r2,124(sp)
    18d0:	90bff40e 	bge	r18,r2,18a4 <__alt_mem_Onchip_SRAM+0xf80018a4>
    18d4:	d9801e04 	addi	r6,sp,120
    18d8:	a00b883a 	mov	r5,r20
    18dc:	9809883a 	mov	r4,r19
    18e0:	0007b840 	call	7b84 <__ssprint_r>
    18e4:	103e631e 	bne	r2,zero,1274 <__alt_mem_Onchip_SRAM+0xf8001274>
    18e8:	843ffc04 	addi	r16,r16,-16
    18ec:	d8c02017 	ldw	r3,128(sp)
    18f0:	d8801f17 	ldw	r2,124(sp)
    18f4:	da000404 	addi	r8,sp,16
    18f8:	8c3fed16 	blt	r17,r16,18b0 <__alt_mem_Onchip_SRAM+0xf80018b0>
    18fc:	d9403517 	ldw	r5,212(sp)
    1900:	1c07883a 	add	r3,r3,r16
    1904:	10800044 	addi	r2,r2,1
    1908:	41400015 	stw	r5,0(r8)
    190c:	44000115 	stw	r16,4(r8)
    1910:	d8c02015 	stw	r3,128(sp)
    1914:	d8801f15 	stw	r2,124(sp)
    1918:	010001c4 	movi	r4,7
    191c:	2080060e 	bge	r4,r2,1938 <___svfprintf_internal_r+0xa60>
    1920:	d9402d17 	ldw	r5,180(sp)
    1924:	d9801e04 	addi	r6,sp,120
    1928:	9809883a 	mov	r4,r19
    192c:	0007b840 	call	7b84 <__ssprint_r>
    1930:	103e501e 	bne	r2,zero,1274 <__alt_mem_Onchip_SRAM+0xf8001274>
    1934:	d8c02017 	ldw	r3,128(sp)
    1938:	d8803117 	ldw	r2,196(sp)
    193c:	d9002917 	ldw	r4,164(sp)
    1940:	1100010e 	bge	r2,r4,1948 <___svfprintf_internal_r+0xa70>
    1944:	2005883a 	mov	r2,r4
    1948:	d9402f17 	ldw	r5,188(sp)
    194c:	288b883a 	add	r5,r5,r2
    1950:	d9402f15 	stw	r5,188(sp)
    1954:	1801be1e 	bne	r3,zero,2050 <___svfprintf_internal_r+0x1178>
    1958:	b8800007 	ldb	r2,0(r23)
    195c:	d8001f15 	stw	zero,124(sp)
    1960:	da000404 	addi	r8,sp,16
    1964:	103d891e 	bne	r2,zero,f8c <__alt_mem_Onchip_SRAM+0xf8000f8c>
    1968:	b823883a 	mov	r17,r23
    196c:	003d9f06 	br	fec <__alt_mem_Onchip_SRAM+0xf8000fec>
    1970:	8025883a 	mov	r18,r16
    1974:	dc002903 	ldbu	r16,164(sp)
    1978:	e011883a 	mov	r8,fp
    197c:	84003fcc 	andi	r16,r16,255
    1980:	8005e61e 	bne	r16,zero,311c <___svfprintf_internal_r+0x2244>
    1984:	94800414 	ori	r18,r18,16
    1988:	9080080c 	andi	r2,r18,32
    198c:	10022026 	beq	r2,zero,2210 <___svfprintf_internal_r+0x1338>
    1990:	d9002e17 	ldw	r4,184(sp)
    1994:	d9402a17 	ldw	r5,168(sp)
    1998:	d8002785 	stb	zero,158(sp)
    199c:	20c00204 	addi	r3,r4,8
    19a0:	25000017 	ldw	r20,0(r4)
    19a4:	25800117 	ldw	r22,4(r4)
    19a8:	2803ad16 	blt	r5,zero,2860 <___svfprintf_internal_r+0x1988>
    19ac:	013fdfc4 	movi	r4,-129
    19b0:	a584b03a 	or	r2,r20,r22
    19b4:	d8c02e15 	stw	r3,184(sp)
    19b8:	9124703a 	and	r18,r18,r4
    19bc:	0039883a 	mov	fp,zero
    19c0:	103eb01e 	bne	r2,zero,1484 <__alt_mem_Onchip_SRAM+0xf8001484>
    19c4:	d8802a17 	ldw	r2,168(sp)
    19c8:	1002e71e 	bne	r2,zero,2568 <___svfprintf_internal_r+0x1690>
    19cc:	d8002a15 	stw	zero,168(sp)
    19d0:	d8002b15 	stw	zero,172(sp)
    19d4:	dc001e04 	addi	r16,sp,120
    19d8:	003ef706 	br	15b8 <__alt_mem_Onchip_SRAM+0xf80015b8>
    19dc:	8025883a 	mov	r18,r16
    19e0:	dc002903 	ldbu	r16,164(sp)
    19e4:	e011883a 	mov	r8,fp
    19e8:	84003fcc 	andi	r16,r16,255
    19ec:	8005c81e 	bne	r16,zero,3110 <___svfprintf_internal_r+0x2238>
    19f0:	01000074 	movhi	r4,1
    19f4:	21011004 	addi	r4,r4,1088
    19f8:	d9003a15 	stw	r4,232(sp)
    19fc:	9080080c 	andi	r2,r18,32
    1a00:	10007226 	beq	r2,zero,1bcc <___svfprintf_internal_r+0xcf4>
    1a04:	d9402e17 	ldw	r5,184(sp)
    1a08:	2d000017 	ldw	r20,0(r5)
    1a0c:	2d800117 	ldw	r22,4(r5)
    1a10:	29400204 	addi	r5,r5,8
    1a14:	d9402e15 	stw	r5,184(sp)
    1a18:	9080004c 	andi	r2,r18,1
    1a1c:	1001aa26 	beq	r2,zero,20c8 <___svfprintf_internal_r+0x11f0>
    1a20:	a584b03a 	or	r2,r20,r22
    1a24:	10032526 	beq	r2,zero,26bc <___svfprintf_internal_r+0x17e4>
    1a28:	d8c02a17 	ldw	r3,168(sp)
    1a2c:	00800c04 	movi	r2,48
    1a30:	d8802705 	stb	r2,156(sp)
    1a34:	dc402745 	stb	r17,157(sp)
    1a38:	d8002785 	stb	zero,158(sp)
    1a3c:	90800094 	ori	r2,r18,2
    1a40:	1804a316 	blt	r3,zero,2cd0 <___svfprintf_internal_r+0x1df8>
    1a44:	00bfdfc4 	movi	r2,-129
    1a48:	90a4703a 	and	r18,r18,r2
    1a4c:	94800094 	ori	r18,r18,2
    1a50:	0039883a 	mov	fp,zero
    1a54:	d9003a17 	ldw	r4,232(sp)
    1a58:	dc001e04 	addi	r16,sp,120
    1a5c:	a08003cc 	andi	r2,r20,15
    1a60:	b006973a 	slli	r3,r22,28
    1a64:	2085883a 	add	r2,r4,r2
    1a68:	a028d13a 	srli	r20,r20,4
    1a6c:	10800003 	ldbu	r2,0(r2)
    1a70:	b02cd13a 	srli	r22,r22,4
    1a74:	843fffc4 	addi	r16,r16,-1
    1a78:	1d28b03a 	or	r20,r3,r20
    1a7c:	80800005 	stb	r2,0(r16)
    1a80:	a584b03a 	or	r2,r20,r22
    1a84:	103ff51e 	bne	r2,zero,1a5c <__alt_mem_Onchip_SRAM+0xf8001a5c>
    1a88:	d8c02817 	ldw	r3,160(sp)
    1a8c:	1c07c83a 	sub	r3,r3,r16
    1a90:	d8c02b15 	stw	r3,172(sp)
    1a94:	003ec806 	br	15b8 <__alt_mem_Onchip_SRAM+0xf80015b8>
    1a98:	d8c02e17 	ldw	r3,184(sp)
    1a9c:	d9002e17 	ldw	r4,184(sp)
    1aa0:	8025883a 	mov	r18,r16
    1aa4:	18800017 	ldw	r2,0(r3)
    1aa8:	21000104 	addi	r4,r4,4
    1aac:	00c00044 	movi	r3,1
    1ab0:	e011883a 	mov	r8,fp
    1ab4:	d8c02915 	stw	r3,164(sp)
    1ab8:	d8002785 	stb	zero,158(sp)
    1abc:	d8801405 	stb	r2,80(sp)
    1ac0:	d9002e15 	stw	r4,184(sp)
    1ac4:	d8c02b15 	stw	r3,172(sp)
    1ac8:	d8002a15 	stw	zero,168(sp)
    1acc:	d8003215 	stw	zero,200(sp)
    1ad0:	dc001404 	addi	r16,sp,80
    1ad4:	0039883a 	mov	fp,zero
    1ad8:	003ec406 	br	15ec <__alt_mem_Onchip_SRAM+0xf80015ec>
    1adc:	8025883a 	mov	r18,r16
    1ae0:	dc002903 	ldbu	r16,164(sp)
    1ae4:	e011883a 	mov	r8,fp
    1ae8:	84003fcc 	andi	r16,r16,255
    1aec:	803e8726 	beq	r16,zero,150c <__alt_mem_Onchip_SRAM+0xf800150c>
    1af0:	d8c02b03 	ldbu	r3,172(sp)
    1af4:	d8c02785 	stb	r3,158(sp)
    1af8:	003e8406 	br	150c <__alt_mem_Onchip_SRAM+0xf800150c>
    1afc:	00c00044 	movi	r3,1
    1b00:	d8c02905 	stb	r3,164(sp)
    1b04:	00c00ac4 	movi	r3,43
    1b08:	d8c02b05 	stb	r3,172(sp)
    1b0c:	bc400007 	ldb	r17,0(r23)
    1b10:	003d4606 	br	102c <__alt_mem_Onchip_SRAM+0xf800102c>
    1b14:	84000814 	ori	r16,r16,32
    1b18:	bc400007 	ldb	r17,0(r23)
    1b1c:	003d4306 	br	102c <__alt_mem_Onchip_SRAM+0xf800102c>
    1b20:	d8802e17 	ldw	r2,184(sp)
    1b24:	8025883a 	mov	r18,r16
    1b28:	d8002785 	stb	zero,158(sp)
    1b2c:	14000017 	ldw	r16,0(r2)
    1b30:	e011883a 	mov	r8,fp
    1b34:	15000104 	addi	r20,r2,4
    1b38:	80042126 	beq	r16,zero,2bc0 <___svfprintf_internal_r+0x1ce8>
    1b3c:	d8c02a17 	ldw	r3,168(sp)
    1b40:	1803ee16 	blt	r3,zero,2afc <___svfprintf_internal_r+0x1c24>
    1b44:	180d883a 	mov	r6,r3
    1b48:	000b883a 	mov	r5,zero
    1b4c:	8009883a 	mov	r4,r16
    1b50:	df003e15 	stw	fp,248(sp)
    1b54:	0005dd80 	call	5dd8 <memchr>
    1b58:	da003e17 	ldw	r8,248(sp)
    1b5c:	10046a26 	beq	r2,zero,2d08 <___svfprintf_internal_r+0x1e30>
    1b60:	1405c83a 	sub	r2,r2,r16
    1b64:	d8802b15 	stw	r2,172(sp)
    1b68:	1003ea16 	blt	r2,zero,2b14 <___svfprintf_internal_r+0x1c3c>
    1b6c:	df002783 	ldbu	fp,158(sp)
    1b70:	d8802915 	stw	r2,164(sp)
    1b74:	dd002e15 	stw	r20,184(sp)
    1b78:	d8002a15 	stw	zero,168(sp)
    1b7c:	d8003215 	stw	zero,200(sp)
    1b80:	003e9306 	br	15d0 <__alt_mem_Onchip_SRAM+0xf80015d0>
    1b84:	8025883a 	mov	r18,r16
    1b88:	dc002903 	ldbu	r16,164(sp)
    1b8c:	e011883a 	mov	r8,fp
    1b90:	84003fcc 	andi	r16,r16,255
    1b94:	803f7c26 	beq	r16,zero,1988 <__alt_mem_Onchip_SRAM+0xf8001988>
    1b98:	d8c02b03 	ldbu	r3,172(sp)
    1b9c:	d8c02785 	stb	r3,158(sp)
    1ba0:	003f7906 	br	1988 <__alt_mem_Onchip_SRAM+0xf8001988>
    1ba4:	8025883a 	mov	r18,r16
    1ba8:	dc002903 	ldbu	r16,164(sp)
    1bac:	e011883a 	mov	r8,fp
    1bb0:	84003fcc 	andi	r16,r16,255
    1bb4:	8005741e 	bne	r16,zero,3188 <___svfprintf_internal_r+0x22b0>
    1bb8:	01000074 	movhi	r4,1
    1bbc:	21011504 	addi	r4,r4,1108
    1bc0:	d9003a15 	stw	r4,232(sp)
    1bc4:	9080080c 	andi	r2,r18,32
    1bc8:	103f8e1e 	bne	r2,zero,1a04 <__alt_mem_Onchip_SRAM+0xf8001a04>
    1bcc:	9080040c 	andi	r2,r18,16
    1bd0:	1002a726 	beq	r2,zero,2670 <___svfprintf_internal_r+0x1798>
    1bd4:	d8802e17 	ldw	r2,184(sp)
    1bd8:	002d883a 	mov	r22,zero
    1bdc:	15000017 	ldw	r20,0(r2)
    1be0:	10800104 	addi	r2,r2,4
    1be4:	d8802e15 	stw	r2,184(sp)
    1be8:	003f8b06 	br	1a18 <__alt_mem_Onchip_SRAM+0xf8001a18>
    1bec:	84000054 	ori	r16,r16,1
    1bf0:	bc400007 	ldb	r17,0(r23)
    1bf4:	003d0d06 	br	102c <__alt_mem_Onchip_SRAM+0xf800102c>
    1bf8:	d8802b07 	ldb	r2,172(sp)
    1bfc:	1002a41e 	bne	r2,zero,2690 <___svfprintf_internal_r+0x17b8>
    1c00:	00c00044 	movi	r3,1
    1c04:	d8c02905 	stb	r3,164(sp)
    1c08:	00c00804 	movi	r3,32
    1c0c:	d8c02b05 	stb	r3,172(sp)
    1c10:	bc400007 	ldb	r17,0(r23)
    1c14:	003d0506 	br	102c <__alt_mem_Onchip_SRAM+0xf800102c>
    1c18:	8025883a 	mov	r18,r16
    1c1c:	dc002903 	ldbu	r16,164(sp)
    1c20:	e011883a 	mov	r8,fp
    1c24:	84003fcc 	andi	r16,r16,255
    1c28:	803e0626 	beq	r16,zero,1444 <__alt_mem_Onchip_SRAM+0xf8001444>
    1c2c:	d8c02b03 	ldbu	r3,172(sp)
    1c30:	d8c02785 	stb	r3,158(sp)
    1c34:	003e0306 	br	1444 <__alt_mem_Onchip_SRAM+0xf8001444>
    1c38:	bc400007 	ldb	r17,0(r23)
    1c3c:	00801b04 	movi	r2,108
    1c40:	88830a26 	beq	r17,r2,286c <___svfprintf_internal_r+0x1994>
    1c44:	84000414 	ori	r16,r16,16
    1c48:	003cf806 	br	102c <__alt_mem_Onchip_SRAM+0xf800102c>
    1c4c:	8025883a 	mov	r18,r16
    1c50:	dc002903 	ldbu	r16,164(sp)
    1c54:	e011883a 	mov	r8,fp
    1c58:	84003fcc 	andi	r16,r16,255
    1c5c:	8005471e 	bne	r16,zero,317c <___svfprintf_internal_r+0x22a4>
    1c60:	9080080c 	andi	r2,r18,32
    1c64:	10028c26 	beq	r2,zero,2698 <___svfprintf_internal_r+0x17c0>
    1c68:	d9002e17 	ldw	r4,184(sp)
    1c6c:	d9402f17 	ldw	r5,188(sp)
    1c70:	20800017 	ldw	r2,0(r4)
    1c74:	2807d7fa 	srai	r3,r5,31
    1c78:	21000104 	addi	r4,r4,4
    1c7c:	d9002e15 	stw	r4,184(sp)
    1c80:	11400015 	stw	r5,0(r2)
    1c84:	10c00115 	stw	r3,4(r2)
    1c88:	003cbe06 	br	f84 <__alt_mem_Onchip_SRAM+0xf8000f84>
    1c8c:	84001014 	ori	r16,r16,64
    1c90:	bc400007 	ldb	r17,0(r23)
    1c94:	003ce506 	br	102c <__alt_mem_Onchip_SRAM+0xf800102c>
    1c98:	01000074 	movhi	r4,1
    1c9c:	21011504 	addi	r4,r4,1108
    1ca0:	0039883a 	mov	fp,zero
    1ca4:	d9003a15 	stw	r4,232(sp)
    1ca8:	04401e04 	movi	r17,120
    1cac:	003f6906 	br	1a54 <__alt_mem_Onchip_SRAM+0xf8001a54>
    1cb0:	8025883a 	mov	r18,r16
    1cb4:	dc002903 	ldbu	r16,164(sp)
    1cb8:	e011883a 	mov	r8,fp
    1cbc:	84003fcc 	andi	r16,r16,255
    1cc0:	8005261e 	bne	r16,zero,315c <___svfprintf_internal_r+0x2284>
    1cc4:	883d6526 	beq	r17,zero,125c <__alt_mem_Onchip_SRAM+0xf800125c>
    1cc8:	00c00044 	movi	r3,1
    1ccc:	d8c02915 	stw	r3,164(sp)
    1cd0:	dc401405 	stb	r17,80(sp)
    1cd4:	d8002785 	stb	zero,158(sp)
    1cd8:	003f7a06 	br	1ac4 <__alt_mem_Onchip_SRAM+0xf8001ac4>
    1cdc:	01000074 	movhi	r4,1
    1ce0:	21011504 	addi	r4,r4,1108
    1ce4:	d9003a15 	stw	r4,232(sp)
    1ce8:	d8c02e15 	stw	r3,184(sp)
    1cec:	1025883a 	mov	r18,r2
    1cf0:	04401e04 	movi	r17,120
    1cf4:	a584b03a 	or	r2,r20,r22
    1cf8:	1000fa1e 	bne	r2,zero,20e4 <___svfprintf_internal_r+0x120c>
    1cfc:	0039883a 	mov	fp,zero
    1d00:	00800084 	movi	r2,2
    1d04:	10803fcc 	andi	r2,r2,255
    1d08:	00c00044 	movi	r3,1
    1d0c:	10c21626 	beq	r2,r3,2568 <___svfprintf_internal_r+0x1690>
    1d10:	00c00084 	movi	r3,2
    1d14:	10fe0e1e 	bne	r2,r3,1550 <__alt_mem_Onchip_SRAM+0xf8001550>
    1d18:	003d4606 	br	1234 <__alt_mem_Onchip_SRAM+0xf8001234>
    1d1c:	d8c02017 	ldw	r3,128(sp)
    1d20:	003e7306 	br	16f0 <__alt_mem_Onchip_SRAM+0xf80016f0>
    1d24:	00801944 	movi	r2,101
    1d28:	14407c0e 	bge	r2,r17,1f1c <___svfprintf_internal_r+0x1044>
    1d2c:	d9003617 	ldw	r4,216(sp)
    1d30:	d9403717 	ldw	r5,220(sp)
    1d34:	000d883a 	mov	r6,zero
    1d38:	000f883a 	mov	r7,zero
    1d3c:	d8c03d15 	stw	r3,244(sp)
    1d40:	da003e15 	stw	r8,248(sp)
    1d44:	000be2c0 	call	be2c <__eqdf2>
    1d48:	d8c03d17 	ldw	r3,244(sp)
    1d4c:	da003e17 	ldw	r8,248(sp)
    1d50:	1000f51e 	bne	r2,zero,2128 <___svfprintf_internal_r+0x1250>
    1d54:	d8801f17 	ldw	r2,124(sp)
    1d58:	01000074 	movhi	r4,1
    1d5c:	21011c04 	addi	r4,r4,1136
    1d60:	18c00044 	addi	r3,r3,1
    1d64:	10800044 	addi	r2,r2,1
    1d68:	41000015 	stw	r4,0(r8)
    1d6c:	01000044 	movi	r4,1
    1d70:	41000115 	stw	r4,4(r8)
    1d74:	d8c02015 	stw	r3,128(sp)
    1d78:	d8801f15 	stw	r2,124(sp)
    1d7c:	010001c4 	movi	r4,7
    1d80:	20826616 	blt	r4,r2,271c <___svfprintf_internal_r+0x1844>
    1d84:	42000204 	addi	r8,r8,8
    1d88:	d8802617 	ldw	r2,152(sp)
    1d8c:	d9403317 	ldw	r5,204(sp)
    1d90:	11400216 	blt	r2,r5,1d9c <___svfprintf_internal_r+0xec4>
    1d94:	9080004c 	andi	r2,r18,1
    1d98:	103eb326 	beq	r2,zero,1868 <__alt_mem_Onchip_SRAM+0xf8001868>
    1d9c:	d8803817 	ldw	r2,224(sp)
    1da0:	d9003417 	ldw	r4,208(sp)
    1da4:	d9403817 	ldw	r5,224(sp)
    1da8:	1887883a 	add	r3,r3,r2
    1dac:	d8801f17 	ldw	r2,124(sp)
    1db0:	41000015 	stw	r4,0(r8)
    1db4:	41400115 	stw	r5,4(r8)
    1db8:	10800044 	addi	r2,r2,1
    1dbc:	d8c02015 	stw	r3,128(sp)
    1dc0:	d8801f15 	stw	r2,124(sp)
    1dc4:	010001c4 	movi	r4,7
    1dc8:	2082af16 	blt	r4,r2,2888 <___svfprintf_internal_r+0x19b0>
    1dcc:	42000204 	addi	r8,r8,8
    1dd0:	d8803317 	ldw	r2,204(sp)
    1dd4:	143fffc4 	addi	r16,r2,-1
    1dd8:	043ea30e 	bge	zero,r16,1868 <__alt_mem_Onchip_SRAM+0xf8001868>
    1ddc:	04400404 	movi	r17,16
    1de0:	d8801f17 	ldw	r2,124(sp)
    1de4:	8c00860e 	bge	r17,r16,2000 <___svfprintf_internal_r+0x1128>
    1de8:	01400074 	movhi	r5,1
    1dec:	29411c84 	addi	r5,r5,1138
    1df0:	d9402c15 	stw	r5,176(sp)
    1df4:	058001c4 	movi	r22,7
    1df8:	dd002d17 	ldw	r20,180(sp)
    1dfc:	00000306 	br	1e0c <___svfprintf_internal_r+0xf34>
    1e00:	42000204 	addi	r8,r8,8
    1e04:	843ffc04 	addi	r16,r16,-16
    1e08:	8c00800e 	bge	r17,r16,200c <___svfprintf_internal_r+0x1134>
    1e0c:	18c00404 	addi	r3,r3,16
    1e10:	10800044 	addi	r2,r2,1
    1e14:	45400015 	stw	r21,0(r8)
    1e18:	44400115 	stw	r17,4(r8)
    1e1c:	d8c02015 	stw	r3,128(sp)
    1e20:	d8801f15 	stw	r2,124(sp)
    1e24:	b0bff60e 	bge	r22,r2,1e00 <__alt_mem_Onchip_SRAM+0xf8001e00>
    1e28:	d9801e04 	addi	r6,sp,120
    1e2c:	a00b883a 	mov	r5,r20
    1e30:	9809883a 	mov	r4,r19
    1e34:	0007b840 	call	7b84 <__ssprint_r>
    1e38:	103d0e1e 	bne	r2,zero,1274 <__alt_mem_Onchip_SRAM+0xf8001274>
    1e3c:	d8c02017 	ldw	r3,128(sp)
    1e40:	d8801f17 	ldw	r2,124(sp)
    1e44:	da000404 	addi	r8,sp,16
    1e48:	003fee06 	br	1e04 <__alt_mem_Onchip_SRAM+0xf8001e04>
    1e4c:	d9403117 	ldw	r5,196(sp)
    1e50:	d8802917 	ldw	r2,164(sp)
    1e54:	28adc83a 	sub	r22,r5,r2
    1e58:	05be430e 	bge	zero,r22,1768 <__alt_mem_Onchip_SRAM+0xf8001768>
    1e5c:	07000404 	movi	fp,16
    1e60:	d8801f17 	ldw	r2,124(sp)
    1e64:	e583a20e 	bge	fp,r22,2cf0 <___svfprintf_internal_r+0x1e18>
    1e68:	01400074 	movhi	r5,1
    1e6c:	29411c84 	addi	r5,r5,1138
    1e70:	dc403015 	stw	r17,192(sp)
    1e74:	d9402c15 	stw	r5,176(sp)
    1e78:	b023883a 	mov	r17,r22
    1e7c:	050001c4 	movi	r20,7
    1e80:	902d883a 	mov	r22,r18
    1e84:	8025883a 	mov	r18,r16
    1e88:	dc002d17 	ldw	r16,180(sp)
    1e8c:	00000306 	br	1e9c <___svfprintf_internal_r+0xfc4>
    1e90:	8c7ffc04 	addi	r17,r17,-16
    1e94:	42000204 	addi	r8,r8,8
    1e98:	e440110e 	bge	fp,r17,1ee0 <___svfprintf_internal_r+0x1008>
    1e9c:	18c00404 	addi	r3,r3,16
    1ea0:	10800044 	addi	r2,r2,1
    1ea4:	45400015 	stw	r21,0(r8)
    1ea8:	47000115 	stw	fp,4(r8)
    1eac:	d8c02015 	stw	r3,128(sp)
    1eb0:	d8801f15 	stw	r2,124(sp)
    1eb4:	a0bff60e 	bge	r20,r2,1e90 <__alt_mem_Onchip_SRAM+0xf8001e90>
    1eb8:	d9801e04 	addi	r6,sp,120
    1ebc:	800b883a 	mov	r5,r16
    1ec0:	9809883a 	mov	r4,r19
    1ec4:	0007b840 	call	7b84 <__ssprint_r>
    1ec8:	103cea1e 	bne	r2,zero,1274 <__alt_mem_Onchip_SRAM+0xf8001274>
    1ecc:	8c7ffc04 	addi	r17,r17,-16
    1ed0:	d8c02017 	ldw	r3,128(sp)
    1ed4:	d8801f17 	ldw	r2,124(sp)
    1ed8:	da000404 	addi	r8,sp,16
    1edc:	e47fef16 	blt	fp,r17,1e9c <__alt_mem_Onchip_SRAM+0xf8001e9c>
    1ee0:	9021883a 	mov	r16,r18
    1ee4:	b025883a 	mov	r18,r22
    1ee8:	882d883a 	mov	r22,r17
    1eec:	dc403017 	ldw	r17,192(sp)
    1ef0:	d9002c17 	ldw	r4,176(sp)
    1ef4:	1d87883a 	add	r3,r3,r22
    1ef8:	10800044 	addi	r2,r2,1
    1efc:	41000015 	stw	r4,0(r8)
    1f00:	45800115 	stw	r22,4(r8)
    1f04:	d8c02015 	stw	r3,128(sp)
    1f08:	d8801f15 	stw	r2,124(sp)
    1f0c:	010001c4 	movi	r4,7
    1f10:	20819a16 	blt	r4,r2,257c <___svfprintf_internal_r+0x16a4>
    1f14:	42000204 	addi	r8,r8,8
    1f18:	003e1306 	br	1768 <__alt_mem_Onchip_SRAM+0xf8001768>
    1f1c:	d9403317 	ldw	r5,204(sp)
    1f20:	00800044 	movi	r2,1
    1f24:	18c00044 	addi	r3,r3,1
    1f28:	1141710e 	bge	r2,r5,24f0 <___svfprintf_internal_r+0x1618>
    1f2c:	dc401f17 	ldw	r17,124(sp)
    1f30:	00800044 	movi	r2,1
    1f34:	40800115 	stw	r2,4(r8)
    1f38:	8c400044 	addi	r17,r17,1
    1f3c:	44000015 	stw	r16,0(r8)
    1f40:	d8c02015 	stw	r3,128(sp)
    1f44:	dc401f15 	stw	r17,124(sp)
    1f48:	008001c4 	movi	r2,7
    1f4c:	14417416 	blt	r2,r17,2520 <___svfprintf_internal_r+0x1648>
    1f50:	42000204 	addi	r8,r8,8
    1f54:	d8803817 	ldw	r2,224(sp)
    1f58:	d9003417 	ldw	r4,208(sp)
    1f5c:	8c400044 	addi	r17,r17,1
    1f60:	10c7883a 	add	r3,r2,r3
    1f64:	40800115 	stw	r2,4(r8)
    1f68:	41000015 	stw	r4,0(r8)
    1f6c:	d8c02015 	stw	r3,128(sp)
    1f70:	dc401f15 	stw	r17,124(sp)
    1f74:	008001c4 	movi	r2,7
    1f78:	14417216 	blt	r2,r17,2544 <___svfprintf_internal_r+0x166c>
    1f7c:	45800204 	addi	r22,r8,8
    1f80:	d9003617 	ldw	r4,216(sp)
    1f84:	d9403717 	ldw	r5,220(sp)
    1f88:	000d883a 	mov	r6,zero
    1f8c:	000f883a 	mov	r7,zero
    1f90:	d8c03d15 	stw	r3,244(sp)
    1f94:	000be2c0 	call	be2c <__eqdf2>
    1f98:	d8c03d17 	ldw	r3,244(sp)
    1f9c:	1000b326 	beq	r2,zero,226c <___svfprintf_internal_r+0x1394>
    1fa0:	d9403317 	ldw	r5,204(sp)
    1fa4:	84000044 	addi	r16,r16,1
    1fa8:	8c400044 	addi	r17,r17,1
    1fac:	28bfffc4 	addi	r2,r5,-1
    1fb0:	1887883a 	add	r3,r3,r2
    1fb4:	b0800115 	stw	r2,4(r22)
    1fb8:	b4000015 	stw	r16,0(r22)
    1fbc:	d8c02015 	stw	r3,128(sp)
    1fc0:	dc401f15 	stw	r17,124(sp)
    1fc4:	008001c4 	movi	r2,7
    1fc8:	1440d216 	blt	r2,r17,2314 <___svfprintf_internal_r+0x143c>
    1fcc:	b5800204 	addi	r22,r22,8
    1fd0:	d9003b17 	ldw	r4,236(sp)
    1fd4:	df0022c4 	addi	fp,sp,139
    1fd8:	8c400044 	addi	r17,r17,1
    1fdc:	20c7883a 	add	r3,r4,r3
    1fe0:	b7000015 	stw	fp,0(r22)
    1fe4:	b1000115 	stw	r4,4(r22)
    1fe8:	d8c02015 	stw	r3,128(sp)
    1fec:	dc401f15 	stw	r17,124(sp)
    1ff0:	008001c4 	movi	r2,7
    1ff4:	14400e16 	blt	r2,r17,2030 <___svfprintf_internal_r+0x1158>
    1ff8:	b2000204 	addi	r8,r22,8
    1ffc:	003e1a06 	br	1868 <__alt_mem_Onchip_SRAM+0xf8001868>
    2000:	01000074 	movhi	r4,1
    2004:	21011c84 	addi	r4,r4,1138
    2008:	d9002c15 	stw	r4,176(sp)
    200c:	d9002c17 	ldw	r4,176(sp)
    2010:	1c07883a 	add	r3,r3,r16
    2014:	44000115 	stw	r16,4(r8)
    2018:	41000015 	stw	r4,0(r8)
    201c:	10800044 	addi	r2,r2,1
    2020:	d8c02015 	stw	r3,128(sp)
    2024:	d8801f15 	stw	r2,124(sp)
    2028:	010001c4 	movi	r4,7
    202c:	20be0d0e 	bge	r4,r2,1864 <__alt_mem_Onchip_SRAM+0xf8001864>
    2030:	d9402d17 	ldw	r5,180(sp)
    2034:	d9801e04 	addi	r6,sp,120
    2038:	9809883a 	mov	r4,r19
    203c:	0007b840 	call	7b84 <__ssprint_r>
    2040:	103c8c1e 	bne	r2,zero,1274 <__alt_mem_Onchip_SRAM+0xf8001274>
    2044:	d8c02017 	ldw	r3,128(sp)
    2048:	da000404 	addi	r8,sp,16
    204c:	003e0606 	br	1868 <__alt_mem_Onchip_SRAM+0xf8001868>
    2050:	d9402d17 	ldw	r5,180(sp)
    2054:	d9801e04 	addi	r6,sp,120
    2058:	9809883a 	mov	r4,r19
    205c:	0007b840 	call	7b84 <__ssprint_r>
    2060:	103e3d26 	beq	r2,zero,1958 <__alt_mem_Onchip_SRAM+0xf8001958>
    2064:	003c8306 	br	1274 <__alt_mem_Onchip_SRAM+0xf8001274>
    2068:	d9402d17 	ldw	r5,180(sp)
    206c:	d9801e04 	addi	r6,sp,120
    2070:	9809883a 	mov	r4,r19
    2074:	0007b840 	call	7b84 <__ssprint_r>
    2078:	103c7e1e 	bne	r2,zero,1274 <__alt_mem_Onchip_SRAM+0xf8001274>
    207c:	d8c02017 	ldw	r3,128(sp)
    2080:	da000404 	addi	r8,sp,16
    2084:	003deb06 	br	1834 <__alt_mem_Onchip_SRAM+0xf8001834>
    2088:	d9402d17 	ldw	r5,180(sp)
    208c:	d9801e04 	addi	r6,sp,120
    2090:	9809883a 	mov	r4,r19
    2094:	0007b840 	call	7b84 <__ssprint_r>
    2098:	103c761e 	bne	r2,zero,1274 <__alt_mem_Onchip_SRAM+0xf8001274>
    209c:	d8c02017 	ldw	r3,128(sp)
    20a0:	da000404 	addi	r8,sp,16
    20a4:	003d9f06 	br	1724 <__alt_mem_Onchip_SRAM+0xf8001724>
    20a8:	d9402d17 	ldw	r5,180(sp)
    20ac:	d9801e04 	addi	r6,sp,120
    20b0:	9809883a 	mov	r4,r19
    20b4:	0007b840 	call	7b84 <__ssprint_r>
    20b8:	103c6e1e 	bne	r2,zero,1274 <__alt_mem_Onchip_SRAM+0xf8001274>
    20bc:	d8c02017 	ldw	r3,128(sp)
    20c0:	da000404 	addi	r8,sp,16
    20c4:	003da506 	br	175c <__alt_mem_Onchip_SRAM+0xf800175c>
    20c8:	d9402a17 	ldw	r5,168(sp)
    20cc:	d8002785 	stb	zero,158(sp)
    20d0:	283f0816 	blt	r5,zero,1cf4 <__alt_mem_Onchip_SRAM+0xf8001cf4>
    20d4:	00ffdfc4 	movi	r3,-129
    20d8:	a584b03a 	or	r2,r20,r22
    20dc:	90e4703a 	and	r18,r18,r3
    20e0:	103c5126 	beq	r2,zero,1228 <__alt_mem_Onchip_SRAM+0xf8001228>
    20e4:	0039883a 	mov	fp,zero
    20e8:	003e5a06 	br	1a54 <__alt_mem_Onchip_SRAM+0xf8001a54>
    20ec:	9080040c 	andi	r2,r18,16
    20f0:	10013d26 	beq	r2,zero,25e8 <___svfprintf_internal_r+0x1710>
    20f4:	d8c02e17 	ldw	r3,184(sp)
    20f8:	d9002a17 	ldw	r4,168(sp)
    20fc:	d8002785 	stb	zero,158(sp)
    2100:	18800104 	addi	r2,r3,4
    2104:	1d000017 	ldw	r20,0(r3)
    2108:	002d883a 	mov	r22,zero
    210c:	20013f16 	blt	r4,zero,260c <___svfprintf_internal_r+0x1734>
    2110:	00ffdfc4 	movi	r3,-129
    2114:	d8802e15 	stw	r2,184(sp)
    2118:	90e4703a 	and	r18,r18,r3
    211c:	a03d0926 	beq	r20,zero,1544 <__alt_mem_Onchip_SRAM+0xf8001544>
    2120:	0039883a 	mov	fp,zero
    2124:	003d0c06 	br	1558 <__alt_mem_Onchip_SRAM+0xf8001558>
    2128:	dc402617 	ldw	r17,152(sp)
    212c:	0441830e 	bge	zero,r17,273c <___svfprintf_internal_r+0x1864>
    2130:	dc403217 	ldw	r17,200(sp)
    2134:	d8803317 	ldw	r2,204(sp)
    2138:	1440010e 	bge	r2,r17,2140 <___svfprintf_internal_r+0x1268>
    213c:	1023883a 	mov	r17,r2
    2140:	04400a0e 	bge	zero,r17,216c <___svfprintf_internal_r+0x1294>
    2144:	d8801f17 	ldw	r2,124(sp)
    2148:	1c47883a 	add	r3,r3,r17
    214c:	44000015 	stw	r16,0(r8)
    2150:	10800044 	addi	r2,r2,1
    2154:	44400115 	stw	r17,4(r8)
    2158:	d8c02015 	stw	r3,128(sp)
    215c:	d8801f15 	stw	r2,124(sp)
    2160:	010001c4 	movi	r4,7
    2164:	20827516 	blt	r4,r2,2b3c <___svfprintf_internal_r+0x1c64>
    2168:	42000204 	addi	r8,r8,8
    216c:	88027b16 	blt	r17,zero,2b5c <___svfprintf_internal_r+0x1c84>
    2170:	d9003217 	ldw	r4,200(sp)
    2174:	2463c83a 	sub	r17,r4,r17
    2178:	0440990e 	bge	zero,r17,23e0 <___svfprintf_internal_r+0x1508>
    217c:	05800404 	movi	r22,16
    2180:	d8801f17 	ldw	r2,124(sp)
    2184:	b441530e 	bge	r22,r17,26d4 <___svfprintf_internal_r+0x17fc>
    2188:	01000074 	movhi	r4,1
    218c:	21011c84 	addi	r4,r4,1138
    2190:	d9002c15 	stw	r4,176(sp)
    2194:	070001c4 	movi	fp,7
    2198:	dd002d17 	ldw	r20,180(sp)
    219c:	00000306 	br	21ac <___svfprintf_internal_r+0x12d4>
    21a0:	42000204 	addi	r8,r8,8
    21a4:	8c7ffc04 	addi	r17,r17,-16
    21a8:	b4414d0e 	bge	r22,r17,26e0 <___svfprintf_internal_r+0x1808>
    21ac:	18c00404 	addi	r3,r3,16
    21b0:	10800044 	addi	r2,r2,1
    21b4:	45400015 	stw	r21,0(r8)
    21b8:	45800115 	stw	r22,4(r8)
    21bc:	d8c02015 	stw	r3,128(sp)
    21c0:	d8801f15 	stw	r2,124(sp)
    21c4:	e0bff60e 	bge	fp,r2,21a0 <__alt_mem_Onchip_SRAM+0xf80021a0>
    21c8:	d9801e04 	addi	r6,sp,120
    21cc:	a00b883a 	mov	r5,r20
    21d0:	9809883a 	mov	r4,r19
    21d4:	0007b840 	call	7b84 <__ssprint_r>
    21d8:	103c261e 	bne	r2,zero,1274 <__alt_mem_Onchip_SRAM+0xf8001274>
    21dc:	d8c02017 	ldw	r3,128(sp)
    21e0:	d8801f17 	ldw	r2,124(sp)
    21e4:	da000404 	addi	r8,sp,16
    21e8:	003fee06 	br	21a4 <__alt_mem_Onchip_SRAM+0xf80021a4>
    21ec:	d9402d17 	ldw	r5,180(sp)
    21f0:	d9801e04 	addi	r6,sp,120
    21f4:	9809883a 	mov	r4,r19
    21f8:	0007b840 	call	7b84 <__ssprint_r>
    21fc:	103c1d1e 	bne	r2,zero,1274 <__alt_mem_Onchip_SRAM+0xf8001274>
    2200:	d8c02017 	ldw	r3,128(sp)
    2204:	df002787 	ldb	fp,158(sp)
    2208:	da000404 	addi	r8,sp,16
    220c:	003d3806 	br	16f0 <__alt_mem_Onchip_SRAM+0xf80016f0>
    2210:	9080040c 	andi	r2,r18,16
    2214:	10005c26 	beq	r2,zero,2388 <___svfprintf_internal_r+0x14b0>
    2218:	d8c02e17 	ldw	r3,184(sp)
    221c:	d9002a17 	ldw	r4,168(sp)
    2220:	d8002785 	stb	zero,158(sp)
    2224:	18800104 	addi	r2,r3,4
    2228:	1d000017 	ldw	r20,0(r3)
    222c:	002d883a 	mov	r22,zero
    2230:	20005e16 	blt	r4,zero,23ac <___svfprintf_internal_r+0x14d4>
    2234:	00ffdfc4 	movi	r3,-129
    2238:	d8802e15 	stw	r2,184(sp)
    223c:	90e4703a 	and	r18,r18,r3
    2240:	0039883a 	mov	fp,zero
    2244:	a03ddf26 	beq	r20,zero,19c4 <__alt_mem_Onchip_SRAM+0xf80019c4>
    2248:	00800244 	movi	r2,9
    224c:	153c8e36 	bltu	r2,r20,1488 <__alt_mem_Onchip_SRAM+0xf8001488>
    2250:	a5000c04 	addi	r20,r20,48
    2254:	dc001dc4 	addi	r16,sp,119
    2258:	dd001dc5 	stb	r20,119(sp)
    225c:	d8c02817 	ldw	r3,160(sp)
    2260:	1c07c83a 	sub	r3,r3,r16
    2264:	d8c02b15 	stw	r3,172(sp)
    2268:	003cd306 	br	15b8 <__alt_mem_Onchip_SRAM+0xf80015b8>
    226c:	d8803317 	ldw	r2,204(sp)
    2270:	143fffc4 	addi	r16,r2,-1
    2274:	043f560e 	bge	zero,r16,1fd0 <__alt_mem_Onchip_SRAM+0xf8001fd0>
    2278:	07000404 	movi	fp,16
    227c:	e403530e 	bge	fp,r16,2fcc <___svfprintf_internal_r+0x20f4>
    2280:	01400074 	movhi	r5,1
    2284:	29411c84 	addi	r5,r5,1138
    2288:	d9402c15 	stw	r5,176(sp)
    228c:	01c001c4 	movi	r7,7
    2290:	dd002d17 	ldw	r20,180(sp)
    2294:	00000306 	br	22a4 <___svfprintf_internal_r+0x13cc>
    2298:	843ffc04 	addi	r16,r16,-16
    229c:	b5800204 	addi	r22,r22,8
    22a0:	e400130e 	bge	fp,r16,22f0 <___svfprintf_internal_r+0x1418>
    22a4:	18c00404 	addi	r3,r3,16
    22a8:	8c400044 	addi	r17,r17,1
    22ac:	b5400015 	stw	r21,0(r22)
    22b0:	b7000115 	stw	fp,4(r22)
    22b4:	d8c02015 	stw	r3,128(sp)
    22b8:	dc401f15 	stw	r17,124(sp)
    22bc:	3c7ff60e 	bge	r7,r17,2298 <__alt_mem_Onchip_SRAM+0xf8002298>
    22c0:	d9801e04 	addi	r6,sp,120
    22c4:	a00b883a 	mov	r5,r20
    22c8:	9809883a 	mov	r4,r19
    22cc:	d9c03d15 	stw	r7,244(sp)
    22d0:	0007b840 	call	7b84 <__ssprint_r>
    22d4:	d9c03d17 	ldw	r7,244(sp)
    22d8:	103be61e 	bne	r2,zero,1274 <__alt_mem_Onchip_SRAM+0xf8001274>
    22dc:	843ffc04 	addi	r16,r16,-16
    22e0:	d8c02017 	ldw	r3,128(sp)
    22e4:	dc401f17 	ldw	r17,124(sp)
    22e8:	dd800404 	addi	r22,sp,16
    22ec:	e43fed16 	blt	fp,r16,22a4 <__alt_mem_Onchip_SRAM+0xf80022a4>
    22f0:	d8802c17 	ldw	r2,176(sp)
    22f4:	1c07883a 	add	r3,r3,r16
    22f8:	8c400044 	addi	r17,r17,1
    22fc:	b0800015 	stw	r2,0(r22)
    2300:	b4000115 	stw	r16,4(r22)
    2304:	d8c02015 	stw	r3,128(sp)
    2308:	dc401f15 	stw	r17,124(sp)
    230c:	008001c4 	movi	r2,7
    2310:	147f2e0e 	bge	r2,r17,1fcc <__alt_mem_Onchip_SRAM+0xf8001fcc>
    2314:	d9402d17 	ldw	r5,180(sp)
    2318:	d9801e04 	addi	r6,sp,120
    231c:	9809883a 	mov	r4,r19
    2320:	0007b840 	call	7b84 <__ssprint_r>
    2324:	103bd31e 	bne	r2,zero,1274 <__alt_mem_Onchip_SRAM+0xf8001274>
    2328:	d8c02017 	ldw	r3,128(sp)
    232c:	dc401f17 	ldw	r17,124(sp)
    2330:	dd800404 	addi	r22,sp,16
    2334:	003f2606 	br	1fd0 <__alt_mem_Onchip_SRAM+0xf8001fd0>
    2338:	9080040c 	andi	r2,r18,16
    233c:	1000c326 	beq	r2,zero,264c <___svfprintf_internal_r+0x1774>
    2340:	d9402e17 	ldw	r5,184(sp)
    2344:	2d000017 	ldw	r20,0(r5)
    2348:	29400104 	addi	r5,r5,4
    234c:	d9402e15 	stw	r5,184(sp)
    2350:	a02dd7fa 	srai	r22,r20,31
    2354:	b005883a 	mov	r2,r22
    2358:	103c430e 	bge	r2,zero,1468 <__alt_mem_Onchip_SRAM+0xf8001468>
    235c:	d9402a17 	ldw	r5,168(sp)
    2360:	0529c83a 	sub	r20,zero,r20
    2364:	07000b44 	movi	fp,45
    2368:	a004c03a 	cmpne	r2,r20,zero
    236c:	05adc83a 	sub	r22,zero,r22
    2370:	df002785 	stb	fp,158(sp)
    2374:	b0adc83a 	sub	r22,r22,r2
    2378:	28022e16 	blt	r5,zero,2c34 <___svfprintf_internal_r+0x1d5c>
    237c:	00bfdfc4 	movi	r2,-129
    2380:	90a4703a 	and	r18,r18,r2
    2384:	003c3f06 	br	1484 <__alt_mem_Onchip_SRAM+0xf8001484>
    2388:	9080100c 	andi	r2,r18,64
    238c:	d8002785 	stb	zero,158(sp)
    2390:	10012526 	beq	r2,zero,2828 <___svfprintf_internal_r+0x1950>
    2394:	d9402e17 	ldw	r5,184(sp)
    2398:	d8c02a17 	ldw	r3,168(sp)
    239c:	002d883a 	mov	r22,zero
    23a0:	28800104 	addi	r2,r5,4
    23a4:	2d00000b 	ldhu	r20,0(r5)
    23a8:	183fa20e 	bge	r3,zero,2234 <__alt_mem_Onchip_SRAM+0xf8002234>
    23ac:	d8802e15 	stw	r2,184(sp)
    23b0:	0039883a 	mov	fp,zero
    23b4:	a584b03a 	or	r2,r20,r22
    23b8:	103c321e 	bne	r2,zero,1484 <__alt_mem_Onchip_SRAM+0xf8001484>
    23bc:	00800044 	movi	r2,1
    23c0:	003e5006 	br	1d04 <__alt_mem_Onchip_SRAM+0xf8001d04>
    23c4:	d9402d17 	ldw	r5,180(sp)
    23c8:	d9801e04 	addi	r6,sp,120
    23cc:	9809883a 	mov	r4,r19
    23d0:	0007b840 	call	7b84 <__ssprint_r>
    23d4:	103ba71e 	bne	r2,zero,1274 <__alt_mem_Onchip_SRAM+0xf8001274>
    23d8:	d8c02017 	ldw	r3,128(sp)
    23dc:	da000404 	addi	r8,sp,16
    23e0:	d9003217 	ldw	r4,200(sp)
    23e4:	d8802617 	ldw	r2,152(sp)
    23e8:	d9403317 	ldw	r5,204(sp)
    23ec:	8123883a 	add	r17,r16,r4
    23f0:	11400216 	blt	r2,r5,23fc <___svfprintf_internal_r+0x1524>
    23f4:	9100004c 	andi	r4,r18,1
    23f8:	20000d26 	beq	r4,zero,2430 <___svfprintf_internal_r+0x1558>
    23fc:	d9003817 	ldw	r4,224(sp)
    2400:	d9403417 	ldw	r5,208(sp)
    2404:	1907883a 	add	r3,r3,r4
    2408:	d9001f17 	ldw	r4,124(sp)
    240c:	41400015 	stw	r5,0(r8)
    2410:	d9403817 	ldw	r5,224(sp)
    2414:	21000044 	addi	r4,r4,1
    2418:	d8c02015 	stw	r3,128(sp)
    241c:	41400115 	stw	r5,4(r8)
    2420:	d9001f15 	stw	r4,124(sp)
    2424:	014001c4 	movi	r5,7
    2428:	2901dc16 	blt	r5,r4,2b9c <___svfprintf_internal_r+0x1cc4>
    242c:	42000204 	addi	r8,r8,8
    2430:	d9003317 	ldw	r4,204(sp)
    2434:	8121883a 	add	r16,r16,r4
    2438:	2085c83a 	sub	r2,r4,r2
    243c:	8461c83a 	sub	r16,r16,r17
    2440:	1400010e 	bge	r2,r16,2448 <___svfprintf_internal_r+0x1570>
    2444:	1021883a 	mov	r16,r2
    2448:	04000a0e 	bge	zero,r16,2474 <___svfprintf_internal_r+0x159c>
    244c:	d9001f17 	ldw	r4,124(sp)
    2450:	1c07883a 	add	r3,r3,r16
    2454:	44400015 	stw	r17,0(r8)
    2458:	21000044 	addi	r4,r4,1
    245c:	44000115 	stw	r16,4(r8)
    2460:	d8c02015 	stw	r3,128(sp)
    2464:	d9001f15 	stw	r4,124(sp)
    2468:	014001c4 	movi	r5,7
    246c:	2901e616 	blt	r5,r4,2c08 <___svfprintf_internal_r+0x1d30>
    2470:	42000204 	addi	r8,r8,8
    2474:	8001f616 	blt	r16,zero,2c50 <___svfprintf_internal_r+0x1d78>
    2478:	1421c83a 	sub	r16,r2,r16
    247c:	043cfa0e 	bge	zero,r16,1868 <__alt_mem_Onchip_SRAM+0xf8001868>
    2480:	04400404 	movi	r17,16
    2484:	d8801f17 	ldw	r2,124(sp)
    2488:	8c3edd0e 	bge	r17,r16,2000 <__alt_mem_Onchip_SRAM+0xf8002000>
    248c:	01400074 	movhi	r5,1
    2490:	29411c84 	addi	r5,r5,1138
    2494:	d9402c15 	stw	r5,176(sp)
    2498:	058001c4 	movi	r22,7
    249c:	dd002d17 	ldw	r20,180(sp)
    24a0:	00000306 	br	24b0 <___svfprintf_internal_r+0x15d8>
    24a4:	42000204 	addi	r8,r8,8
    24a8:	843ffc04 	addi	r16,r16,-16
    24ac:	8c3ed70e 	bge	r17,r16,200c <__alt_mem_Onchip_SRAM+0xf800200c>
    24b0:	18c00404 	addi	r3,r3,16
    24b4:	10800044 	addi	r2,r2,1
    24b8:	45400015 	stw	r21,0(r8)
    24bc:	44400115 	stw	r17,4(r8)
    24c0:	d8c02015 	stw	r3,128(sp)
    24c4:	d8801f15 	stw	r2,124(sp)
    24c8:	b0bff60e 	bge	r22,r2,24a4 <__alt_mem_Onchip_SRAM+0xf80024a4>
    24cc:	d9801e04 	addi	r6,sp,120
    24d0:	a00b883a 	mov	r5,r20
    24d4:	9809883a 	mov	r4,r19
    24d8:	0007b840 	call	7b84 <__ssprint_r>
    24dc:	103b651e 	bne	r2,zero,1274 <__alt_mem_Onchip_SRAM+0xf8001274>
    24e0:	d8c02017 	ldw	r3,128(sp)
    24e4:	d8801f17 	ldw	r2,124(sp)
    24e8:	da000404 	addi	r8,sp,16
    24ec:	003fee06 	br	24a8 <__alt_mem_Onchip_SRAM+0xf80024a8>
    24f0:	9088703a 	and	r4,r18,r2
    24f4:	203e8d1e 	bne	r4,zero,1f2c <__alt_mem_Onchip_SRAM+0xf8001f2c>
    24f8:	dc401f17 	ldw	r17,124(sp)
    24fc:	40800115 	stw	r2,4(r8)
    2500:	44000015 	stw	r16,0(r8)
    2504:	8c400044 	addi	r17,r17,1
    2508:	d8c02015 	stw	r3,128(sp)
    250c:	dc401f15 	stw	r17,124(sp)
    2510:	008001c4 	movi	r2,7
    2514:	147f7f16 	blt	r2,r17,2314 <__alt_mem_Onchip_SRAM+0xf8002314>
    2518:	45800204 	addi	r22,r8,8
    251c:	003eac06 	br	1fd0 <__alt_mem_Onchip_SRAM+0xf8001fd0>
    2520:	d9402d17 	ldw	r5,180(sp)
    2524:	d9801e04 	addi	r6,sp,120
    2528:	9809883a 	mov	r4,r19
    252c:	0007b840 	call	7b84 <__ssprint_r>
    2530:	103b501e 	bne	r2,zero,1274 <__alt_mem_Onchip_SRAM+0xf8001274>
    2534:	d8c02017 	ldw	r3,128(sp)
    2538:	dc401f17 	ldw	r17,124(sp)
    253c:	da000404 	addi	r8,sp,16
    2540:	003e8406 	br	1f54 <__alt_mem_Onchip_SRAM+0xf8001f54>
    2544:	d9402d17 	ldw	r5,180(sp)
    2548:	d9801e04 	addi	r6,sp,120
    254c:	9809883a 	mov	r4,r19
    2550:	0007b840 	call	7b84 <__ssprint_r>
    2554:	103b471e 	bne	r2,zero,1274 <__alt_mem_Onchip_SRAM+0xf8001274>
    2558:	d8c02017 	ldw	r3,128(sp)
    255c:	dc401f17 	ldw	r17,124(sp)
    2560:	dd800404 	addi	r22,sp,16
    2564:	003e8606 	br	1f80 <__alt_mem_Onchip_SRAM+0xf8001f80>
    2568:	0029883a 	mov	r20,zero
    256c:	a5000c04 	addi	r20,r20,48
    2570:	dc001dc4 	addi	r16,sp,119
    2574:	dd001dc5 	stb	r20,119(sp)
    2578:	003f3806 	br	225c <__alt_mem_Onchip_SRAM+0xf800225c>
    257c:	d9402d17 	ldw	r5,180(sp)
    2580:	d9801e04 	addi	r6,sp,120
    2584:	9809883a 	mov	r4,r19
    2588:	0007b840 	call	7b84 <__ssprint_r>
    258c:	103b391e 	bne	r2,zero,1274 <__alt_mem_Onchip_SRAM+0xf8001274>
    2590:	d8c02017 	ldw	r3,128(sp)
    2594:	da000404 	addi	r8,sp,16
    2598:	003c7306 	br	1768 <__alt_mem_Onchip_SRAM+0xf8001768>
    259c:	d9003617 	ldw	r4,216(sp)
    25a0:	d9403717 	ldw	r5,220(sp)
    25a4:	da003e15 	stw	r8,248(sp)
    25a8:	00078a40 	call	78a4 <__fpclassifyd>
    25ac:	da003e17 	ldw	r8,248(sp)
    25b0:	1000bd1e 	bne	r2,zero,28a8 <___svfprintf_internal_r+0x19d0>
    25b4:	008011c4 	movi	r2,71
    25b8:	14411e0e 	bge	r2,r17,2a34 <___svfprintf_internal_r+0x1b5c>
    25bc:	04000074 	movhi	r16,1
    25c0:	84010f04 	addi	r16,r16,1084
    25c4:	00c000c4 	movi	r3,3
    25c8:	00bfdfc4 	movi	r2,-129
    25cc:	d8c02915 	stw	r3,164(sp)
    25d0:	90a4703a 	and	r18,r18,r2
    25d4:	df002783 	ldbu	fp,158(sp)
    25d8:	d8c02b15 	stw	r3,172(sp)
    25dc:	d8002a15 	stw	zero,168(sp)
    25e0:	d8003215 	stw	zero,200(sp)
    25e4:	003bfa06 	br	15d0 <__alt_mem_Onchip_SRAM+0xf80015d0>
    25e8:	9080100c 	andi	r2,r18,64
    25ec:	d8002785 	stb	zero,158(sp)
    25f0:	10009426 	beq	r2,zero,2844 <___svfprintf_internal_r+0x196c>
    25f4:	d9402e17 	ldw	r5,184(sp)
    25f8:	d8c02a17 	ldw	r3,168(sp)
    25fc:	002d883a 	mov	r22,zero
    2600:	28800104 	addi	r2,r5,4
    2604:	2d00000b 	ldhu	r20,0(r5)
    2608:	183ec10e 	bge	r3,zero,2110 <__alt_mem_Onchip_SRAM+0xf8002110>
    260c:	a586b03a 	or	r3,r20,r22
    2610:	d8802e15 	stw	r2,184(sp)
    2614:	183ec21e 	bne	r3,zero,2120 <__alt_mem_Onchip_SRAM+0xf8002120>
    2618:	0039883a 	mov	fp,zero
    261c:	0005883a 	mov	r2,zero
    2620:	003db806 	br	1d04 <__alt_mem_Onchip_SRAM+0xf8001d04>
    2624:	d8c02e17 	ldw	r3,184(sp)
    2628:	d9002e17 	ldw	r4,184(sp)
    262c:	d9402e17 	ldw	r5,184(sp)
    2630:	18c00017 	ldw	r3,0(r3)
    2634:	21000117 	ldw	r4,4(r4)
    2638:	29400204 	addi	r5,r5,8
    263c:	d8c03615 	stw	r3,216(sp)
    2640:	d9003715 	stw	r4,220(sp)
    2644:	d9402e15 	stw	r5,184(sp)
    2648:	003b5a06 	br	13b4 <__alt_mem_Onchip_SRAM+0xf80013b4>
    264c:	9080100c 	andi	r2,r18,64
    2650:	10010726 	beq	r2,zero,2a70 <___svfprintf_internal_r+0x1b98>
    2654:	d8802e17 	ldw	r2,184(sp)
    2658:	1500000f 	ldh	r20,0(r2)
    265c:	10800104 	addi	r2,r2,4
    2660:	d8802e15 	stw	r2,184(sp)
    2664:	a02dd7fa 	srai	r22,r20,31
    2668:	b005883a 	mov	r2,r22
    266c:	003b7d06 	br	1464 <__alt_mem_Onchip_SRAM+0xf8001464>
    2670:	9080100c 	andi	r2,r18,64
    2674:	10010526 	beq	r2,zero,2a8c <___svfprintf_internal_r+0x1bb4>
    2678:	d8c02e17 	ldw	r3,184(sp)
    267c:	002d883a 	mov	r22,zero
    2680:	1d00000b 	ldhu	r20,0(r3)
    2684:	18c00104 	addi	r3,r3,4
    2688:	d8c02e15 	stw	r3,184(sp)
    268c:	003ce206 	br	1a18 <__alt_mem_Onchip_SRAM+0xf8001a18>
    2690:	bc400007 	ldb	r17,0(r23)
    2694:	003a6506 	br	102c <__alt_mem_Onchip_SRAM+0xf800102c>
    2698:	9080040c 	andi	r2,r18,16
    269c:	10010126 	beq	r2,zero,2aa4 <___svfprintf_internal_r+0x1bcc>
    26a0:	d8c02e17 	ldw	r3,184(sp)
    26a4:	d9002f17 	ldw	r4,188(sp)
    26a8:	18800017 	ldw	r2,0(r3)
    26ac:	18c00104 	addi	r3,r3,4
    26b0:	d8c02e15 	stw	r3,184(sp)
    26b4:	11000015 	stw	r4,0(r2)
    26b8:	003a3206 	br	f84 <__alt_mem_Onchip_SRAM+0xf8000f84>
    26bc:	d9002a17 	ldw	r4,168(sp)
    26c0:	d8002785 	stb	zero,158(sp)
    26c4:	203d8d16 	blt	r4,zero,1cfc <__alt_mem_Onchip_SRAM+0xf8001cfc>
    26c8:	00bfdfc4 	movi	r2,-129
    26cc:	90a4703a 	and	r18,r18,r2
    26d0:	003ad506 	br	1228 <__alt_mem_Onchip_SRAM+0xf8001228>
    26d4:	01400074 	movhi	r5,1
    26d8:	29411c84 	addi	r5,r5,1138
    26dc:	d9402c15 	stw	r5,176(sp)
    26e0:	d9402c17 	ldw	r5,176(sp)
    26e4:	1c47883a 	add	r3,r3,r17
    26e8:	10800044 	addi	r2,r2,1
    26ec:	41400015 	stw	r5,0(r8)
    26f0:	44400115 	stw	r17,4(r8)
    26f4:	d8c02015 	stw	r3,128(sp)
    26f8:	d8801f15 	stw	r2,124(sp)
    26fc:	010001c4 	movi	r4,7
    2700:	20bf3016 	blt	r4,r2,23c4 <__alt_mem_Onchip_SRAM+0xf80023c4>
    2704:	42000204 	addi	r8,r8,8
    2708:	003f3506 	br	23e0 <__alt_mem_Onchip_SRAM+0xf80023e0>
    270c:	01000074 	movhi	r4,1
    2710:	21011c84 	addi	r4,r4,1138
    2714:	d9002c15 	stw	r4,176(sp)
    2718:	003c3c06 	br	180c <__alt_mem_Onchip_SRAM+0xf800180c>
    271c:	d9402d17 	ldw	r5,180(sp)
    2720:	d9801e04 	addi	r6,sp,120
    2724:	9809883a 	mov	r4,r19
    2728:	0007b840 	call	7b84 <__ssprint_r>
    272c:	103ad11e 	bne	r2,zero,1274 <__alt_mem_Onchip_SRAM+0xf8001274>
    2730:	d8c02017 	ldw	r3,128(sp)
    2734:	da000404 	addi	r8,sp,16
    2738:	003d9306 	br	1d88 <__alt_mem_Onchip_SRAM+0xf8001d88>
    273c:	d8801f17 	ldw	r2,124(sp)
    2740:	01400074 	movhi	r5,1
    2744:	01000044 	movi	r4,1
    2748:	18c00044 	addi	r3,r3,1
    274c:	10800044 	addi	r2,r2,1
    2750:	29411c04 	addi	r5,r5,1136
    2754:	41000115 	stw	r4,4(r8)
    2758:	41400015 	stw	r5,0(r8)
    275c:	d8c02015 	stw	r3,128(sp)
    2760:	d8801f15 	stw	r2,124(sp)
    2764:	010001c4 	movi	r4,7
    2768:	2080b516 	blt	r4,r2,2a40 <___svfprintf_internal_r+0x1b68>
    276c:	42000204 	addi	r8,r8,8
    2770:	8800041e 	bne	r17,zero,2784 <___svfprintf_internal_r+0x18ac>
    2774:	d8803317 	ldw	r2,204(sp)
    2778:	1000021e 	bne	r2,zero,2784 <___svfprintf_internal_r+0x18ac>
    277c:	9080004c 	andi	r2,r18,1
    2780:	103c3926 	beq	r2,zero,1868 <__alt_mem_Onchip_SRAM+0xf8001868>
    2784:	d9003817 	ldw	r4,224(sp)
    2788:	d8801f17 	ldw	r2,124(sp)
    278c:	d9403417 	ldw	r5,208(sp)
    2790:	20c7883a 	add	r3,r4,r3
    2794:	10800044 	addi	r2,r2,1
    2798:	41000115 	stw	r4,4(r8)
    279c:	41400015 	stw	r5,0(r8)
    27a0:	d8c02015 	stw	r3,128(sp)
    27a4:	d8801f15 	stw	r2,124(sp)
    27a8:	010001c4 	movi	r4,7
    27ac:	20818016 	blt	r4,r2,2db0 <___svfprintf_internal_r+0x1ed8>
    27b0:	42000204 	addi	r8,r8,8
    27b4:	0463c83a 	sub	r17,zero,r17
    27b8:	0440cb0e 	bge	zero,r17,2ae8 <___svfprintf_internal_r+0x1c10>
    27bc:	05800404 	movi	r22,16
    27c0:	b440e80e 	bge	r22,r17,2b64 <___svfprintf_internal_r+0x1c8c>
    27c4:	01400074 	movhi	r5,1
    27c8:	29411c84 	addi	r5,r5,1138
    27cc:	d9402c15 	stw	r5,176(sp)
    27d0:	070001c4 	movi	fp,7
    27d4:	dd002d17 	ldw	r20,180(sp)
    27d8:	00000306 	br	27e8 <___svfprintf_internal_r+0x1910>
    27dc:	42000204 	addi	r8,r8,8
    27e0:	8c7ffc04 	addi	r17,r17,-16
    27e4:	b440e20e 	bge	r22,r17,2b70 <___svfprintf_internal_r+0x1c98>
    27e8:	18c00404 	addi	r3,r3,16
    27ec:	10800044 	addi	r2,r2,1
    27f0:	45400015 	stw	r21,0(r8)
    27f4:	45800115 	stw	r22,4(r8)
    27f8:	d8c02015 	stw	r3,128(sp)
    27fc:	d8801f15 	stw	r2,124(sp)
    2800:	e0bff60e 	bge	fp,r2,27dc <__alt_mem_Onchip_SRAM+0xf80027dc>
    2804:	d9801e04 	addi	r6,sp,120
    2808:	a00b883a 	mov	r5,r20
    280c:	9809883a 	mov	r4,r19
    2810:	0007b840 	call	7b84 <__ssprint_r>
    2814:	103a971e 	bne	r2,zero,1274 <__alt_mem_Onchip_SRAM+0xf8001274>
    2818:	d8c02017 	ldw	r3,128(sp)
    281c:	d8801f17 	ldw	r2,124(sp)
    2820:	da000404 	addi	r8,sp,16
    2824:	003fee06 	br	27e0 <__alt_mem_Onchip_SRAM+0xf80027e0>
    2828:	d9002e17 	ldw	r4,184(sp)
    282c:	d9402a17 	ldw	r5,168(sp)
    2830:	002d883a 	mov	r22,zero
    2834:	20800104 	addi	r2,r4,4
    2838:	25000017 	ldw	r20,0(r4)
    283c:	283e7d0e 	bge	r5,zero,2234 <__alt_mem_Onchip_SRAM+0xf8002234>
    2840:	003eda06 	br	23ac <__alt_mem_Onchip_SRAM+0xf80023ac>
    2844:	d9002e17 	ldw	r4,184(sp)
    2848:	d9402a17 	ldw	r5,168(sp)
    284c:	002d883a 	mov	r22,zero
    2850:	20800104 	addi	r2,r4,4
    2854:	25000017 	ldw	r20,0(r4)
    2858:	283e2d0e 	bge	r5,zero,2110 <__alt_mem_Onchip_SRAM+0xf8002110>
    285c:	003f6b06 	br	260c <__alt_mem_Onchip_SRAM+0xf800260c>
    2860:	d8c02e15 	stw	r3,184(sp)
    2864:	0039883a 	mov	fp,zero
    2868:	003ed206 	br	23b4 <__alt_mem_Onchip_SRAM+0xf80023b4>
    286c:	bc400043 	ldbu	r17,1(r23)
    2870:	84000814 	ori	r16,r16,32
    2874:	bdc00044 	addi	r23,r23,1
    2878:	8c403fcc 	andi	r17,r17,255
    287c:	8c40201c 	xori	r17,r17,128
    2880:	8c7fe004 	addi	r17,r17,-128
    2884:	0039e906 	br	102c <__alt_mem_Onchip_SRAM+0xf800102c>
    2888:	d9402d17 	ldw	r5,180(sp)
    288c:	d9801e04 	addi	r6,sp,120
    2890:	9809883a 	mov	r4,r19
    2894:	0007b840 	call	7b84 <__ssprint_r>
    2898:	103a761e 	bne	r2,zero,1274 <__alt_mem_Onchip_SRAM+0xf8001274>
    289c:	d8c02017 	ldw	r3,128(sp)
    28a0:	da000404 	addi	r8,sp,16
    28a4:	003d4a06 	br	1dd0 <__alt_mem_Onchip_SRAM+0xf8001dd0>
    28a8:	d9002a17 	ldw	r4,168(sp)
    28ac:	05bff7c4 	movi	r22,-33
    28b0:	00bfffc4 	movi	r2,-1
    28b4:	8dac703a 	and	r22,r17,r22
    28b8:	20806a26 	beq	r4,r2,2a64 <___svfprintf_internal_r+0x1b8c>
    28bc:	008011c4 	movi	r2,71
    28c0:	b0813726 	beq	r22,r2,2da0 <___svfprintf_internal_r+0x1ec8>
    28c4:	d9003717 	ldw	r4,220(sp)
    28c8:	90c04014 	ori	r3,r18,256
    28cc:	d8c02c15 	stw	r3,176(sp)
    28d0:	20015d16 	blt	r4,zero,2e48 <___svfprintf_internal_r+0x1f70>
    28d4:	dd003717 	ldw	r20,220(sp)
    28d8:	d8002905 	stb	zero,164(sp)
    28dc:	00801984 	movi	r2,102
    28e0:	88814026 	beq	r17,r2,2de4 <___svfprintf_internal_r+0x1f0c>
    28e4:	00801184 	movi	r2,70
    28e8:	88817126 	beq	r17,r2,2eb0 <___svfprintf_internal_r+0x1fd8>
    28ec:	00801144 	movi	r2,69
    28f0:	b0816226 	beq	r22,r2,2e7c <___svfprintf_internal_r+0x1fa4>
    28f4:	d8c02a17 	ldw	r3,168(sp)
    28f8:	d8802104 	addi	r2,sp,132
    28fc:	d8800315 	stw	r2,12(sp)
    2900:	d9403617 	ldw	r5,216(sp)
    2904:	d8802504 	addi	r2,sp,148
    2908:	d8800215 	stw	r2,8(sp)
    290c:	d8802604 	addi	r2,sp,152
    2910:	d8c00015 	stw	r3,0(sp)
    2914:	d8800115 	stw	r2,4(sp)
    2918:	01c00084 	movi	r7,2
    291c:	a00d883a 	mov	r6,r20
    2920:	9809883a 	mov	r4,r19
    2924:	d8c03d15 	stw	r3,244(sp)
    2928:	da003e15 	stw	r8,248(sp)
    292c:	000340c0 	call	340c <_dtoa_r>
    2930:	1021883a 	mov	r16,r2
    2934:	008019c4 	movi	r2,103
    2938:	d8c03d17 	ldw	r3,244(sp)
    293c:	da003e17 	ldw	r8,248(sp)
    2940:	8880e726 	beq	r17,r2,2ce0 <___svfprintf_internal_r+0x1e08>
    2944:	008011c4 	movi	r2,71
    2948:	8880d426 	beq	r17,r2,2c9c <___svfprintf_internal_r+0x1dc4>
    294c:	80f9883a 	add	fp,r16,r3
    2950:	d9003617 	ldw	r4,216(sp)
    2954:	000d883a 	mov	r6,zero
    2958:	000f883a 	mov	r7,zero
    295c:	a00b883a 	mov	r5,r20
    2960:	da003e15 	stw	r8,248(sp)
    2964:	000be2c0 	call	be2c <__eqdf2>
    2968:	da003e17 	ldw	r8,248(sp)
    296c:	1000e426 	beq	r2,zero,2d00 <___svfprintf_internal_r+0x1e28>
    2970:	d8802117 	ldw	r2,132(sp)
    2974:	1700062e 	bgeu	r2,fp,2990 <___svfprintf_internal_r+0x1ab8>
    2978:	01000c04 	movi	r4,48
    297c:	10c00044 	addi	r3,r2,1
    2980:	d8c02115 	stw	r3,132(sp)
    2984:	11000005 	stb	r4,0(r2)
    2988:	d8802117 	ldw	r2,132(sp)
    298c:	173ffb36 	bltu	r2,fp,297c <__alt_mem_Onchip_SRAM+0xf800297c>
    2990:	1405c83a 	sub	r2,r2,r16
    2994:	d8803315 	stw	r2,204(sp)
    2998:	008011c4 	movi	r2,71
    299c:	b080c526 	beq	r22,r2,2cb4 <___svfprintf_internal_r+0x1ddc>
    29a0:	00801944 	movi	r2,101
    29a4:	1441d80e 	bge	r2,r17,3108 <___svfprintf_internal_r+0x2230>
    29a8:	d8c02617 	ldw	r3,152(sp)
    29ac:	00801984 	movi	r2,102
    29b0:	d8c03215 	stw	r3,200(sp)
    29b4:	88813426 	beq	r17,r2,2e88 <___svfprintf_internal_r+0x1fb0>
    29b8:	d8c03217 	ldw	r3,200(sp)
    29bc:	d9003317 	ldw	r4,204(sp)
    29c0:	19012516 	blt	r3,r4,2e58 <___svfprintf_internal_r+0x1f80>
    29c4:	9480004c 	andi	r18,r18,1
    29c8:	9001841e 	bne	r18,zero,2fdc <___svfprintf_internal_r+0x2104>
    29cc:	1805883a 	mov	r2,r3
    29d0:	1801cb16 	blt	r3,zero,3100 <___svfprintf_internal_r+0x2228>
    29d4:	d8c03217 	ldw	r3,200(sp)
    29d8:	044019c4 	movi	r17,103
    29dc:	d8c02b15 	stw	r3,172(sp)
    29e0:	df002907 	ldb	fp,164(sp)
    29e4:	e000a61e 	bne	fp,zero,2c80 <___svfprintf_internal_r+0x1da8>
    29e8:	df002783 	ldbu	fp,158(sp)
    29ec:	d8802915 	stw	r2,164(sp)
    29f0:	dc802c17 	ldw	r18,176(sp)
    29f4:	d8002a15 	stw	zero,168(sp)
    29f8:	003af506 	br	15d0 <__alt_mem_Onchip_SRAM+0xf80015d0>
    29fc:	04000074 	movhi	r16,1
    2a00:	84010c04 	addi	r16,r16,1072
    2a04:	003a7e06 	br	1400 <__alt_mem_Onchip_SRAM+0xf8001400>
    2a08:	d9003917 	ldw	r4,228(sp)
    2a0c:	04001004 	movi	r16,64
    2a10:	800b883a 	mov	r5,r16
    2a14:	00055cc0 	call	55cc <_malloc_r>
    2a18:	d9002d17 	ldw	r4,180(sp)
    2a1c:	20800015 	stw	r2,0(r4)
    2a20:	20800415 	stw	r2,16(r4)
    2a24:	1001d026 	beq	r2,zero,3168 <___svfprintf_internal_r+0x2290>
    2a28:	d8802d17 	ldw	r2,180(sp)
    2a2c:	14000515 	stw	r16,20(r2)
    2a30:	00394406 	br	f44 <__alt_mem_Onchip_SRAM+0xf8000f44>
    2a34:	04000074 	movhi	r16,1
    2a38:	84010e04 	addi	r16,r16,1080
    2a3c:	003ee106 	br	25c4 <__alt_mem_Onchip_SRAM+0xf80025c4>
    2a40:	d9402d17 	ldw	r5,180(sp)
    2a44:	d9801e04 	addi	r6,sp,120
    2a48:	9809883a 	mov	r4,r19
    2a4c:	0007b840 	call	7b84 <__ssprint_r>
    2a50:	103a081e 	bne	r2,zero,1274 <__alt_mem_Onchip_SRAM+0xf8001274>
    2a54:	dc402617 	ldw	r17,152(sp)
    2a58:	d8c02017 	ldw	r3,128(sp)
    2a5c:	da000404 	addi	r8,sp,16
    2a60:	003f4306 	br	2770 <__alt_mem_Onchip_SRAM+0xf8002770>
    2a64:	01400184 	movi	r5,6
    2a68:	d9402a15 	stw	r5,168(sp)
    2a6c:	003f9506 	br	28c4 <__alt_mem_Onchip_SRAM+0xf80028c4>
    2a70:	d8c02e17 	ldw	r3,184(sp)
    2a74:	1d000017 	ldw	r20,0(r3)
    2a78:	18c00104 	addi	r3,r3,4
    2a7c:	d8c02e15 	stw	r3,184(sp)
    2a80:	a02dd7fa 	srai	r22,r20,31
    2a84:	b005883a 	mov	r2,r22
    2a88:	003a7606 	br	1464 <__alt_mem_Onchip_SRAM+0xf8001464>
    2a8c:	d9002e17 	ldw	r4,184(sp)
    2a90:	002d883a 	mov	r22,zero
    2a94:	25000017 	ldw	r20,0(r4)
    2a98:	21000104 	addi	r4,r4,4
    2a9c:	d9002e15 	stw	r4,184(sp)
    2aa0:	003bdd06 	br	1a18 <__alt_mem_Onchip_SRAM+0xf8001a18>
    2aa4:	9480100c 	andi	r18,r18,64
    2aa8:	90006e26 	beq	r18,zero,2c64 <___svfprintf_internal_r+0x1d8c>
    2aac:	d9402e17 	ldw	r5,184(sp)
    2ab0:	d8c02f17 	ldw	r3,188(sp)
    2ab4:	28800017 	ldw	r2,0(r5)
    2ab8:	29400104 	addi	r5,r5,4
    2abc:	d9402e15 	stw	r5,184(sp)
    2ac0:	10c0000d 	sth	r3,0(r2)
    2ac4:	00392f06 	br	f84 <__alt_mem_Onchip_SRAM+0xf8000f84>
    2ac8:	d9402d17 	ldw	r5,180(sp)
    2acc:	d9801e04 	addi	r6,sp,120
    2ad0:	9809883a 	mov	r4,r19
    2ad4:	0007b840 	call	7b84 <__ssprint_r>
    2ad8:	1039e61e 	bne	r2,zero,1274 <__alt_mem_Onchip_SRAM+0xf8001274>
    2adc:	d8c02017 	ldw	r3,128(sp)
    2ae0:	d8801f17 	ldw	r2,124(sp)
    2ae4:	da000404 	addi	r8,sp,16
    2ae8:	d9403317 	ldw	r5,204(sp)
    2aec:	10800044 	addi	r2,r2,1
    2af0:	44000015 	stw	r16,0(r8)
    2af4:	28c7883a 	add	r3,r5,r3
    2af8:	003b5506 	br	1850 <__alt_mem_Onchip_SRAM+0xf8001850>
    2afc:	8009883a 	mov	r4,r16
    2b00:	df003e15 	stw	fp,248(sp)
    2b04:	0000e400 	call	e40 <strlen>
    2b08:	d8802b15 	stw	r2,172(sp)
    2b0c:	da003e17 	ldw	r8,248(sp)
    2b10:	103c160e 	bge	r2,zero,1b6c <__alt_mem_Onchip_SRAM+0xf8001b6c>
    2b14:	0005883a 	mov	r2,zero
    2b18:	003c1406 	br	1b6c <__alt_mem_Onchip_SRAM+0xf8001b6c>
    2b1c:	00bfffc4 	movi	r2,-1
    2b20:	0039d906 	br	1288 <__alt_mem_Onchip_SRAM+0xf8001288>
    2b24:	01000074 	movhi	r4,1
    2b28:	21012084 	addi	r4,r4,1154
    2b2c:	d9003515 	stw	r4,212(sp)
    2b30:	003ae406 	br	16c4 <__alt_mem_Onchip_SRAM+0xf80016c4>
    2b34:	013fffc4 	movi	r4,-1
    2b38:	0039fa06 	br	1324 <__alt_mem_Onchip_SRAM+0xf8001324>
    2b3c:	d9402d17 	ldw	r5,180(sp)
    2b40:	d9801e04 	addi	r6,sp,120
    2b44:	9809883a 	mov	r4,r19
    2b48:	0007b840 	call	7b84 <__ssprint_r>
    2b4c:	1039c91e 	bne	r2,zero,1274 <__alt_mem_Onchip_SRAM+0xf8001274>
    2b50:	d8c02017 	ldw	r3,128(sp)
    2b54:	da000404 	addi	r8,sp,16
    2b58:	003d8406 	br	216c <__alt_mem_Onchip_SRAM+0xf800216c>
    2b5c:	0023883a 	mov	r17,zero
    2b60:	003d8306 	br	2170 <__alt_mem_Onchip_SRAM+0xf8002170>
    2b64:	01000074 	movhi	r4,1
    2b68:	21011c84 	addi	r4,r4,1138
    2b6c:	d9002c15 	stw	r4,176(sp)
    2b70:	d9002c17 	ldw	r4,176(sp)
    2b74:	1c47883a 	add	r3,r3,r17
    2b78:	10800044 	addi	r2,r2,1
    2b7c:	41000015 	stw	r4,0(r8)
    2b80:	44400115 	stw	r17,4(r8)
    2b84:	d8c02015 	stw	r3,128(sp)
    2b88:	d8801f15 	stw	r2,124(sp)
    2b8c:	010001c4 	movi	r4,7
    2b90:	20bfcd16 	blt	r4,r2,2ac8 <__alt_mem_Onchip_SRAM+0xf8002ac8>
    2b94:	42000204 	addi	r8,r8,8
    2b98:	003fd306 	br	2ae8 <__alt_mem_Onchip_SRAM+0xf8002ae8>
    2b9c:	d9402d17 	ldw	r5,180(sp)
    2ba0:	d9801e04 	addi	r6,sp,120
    2ba4:	9809883a 	mov	r4,r19
    2ba8:	0007b840 	call	7b84 <__ssprint_r>
    2bac:	1039b11e 	bne	r2,zero,1274 <__alt_mem_Onchip_SRAM+0xf8001274>
    2bb0:	d8802617 	ldw	r2,152(sp)
    2bb4:	d8c02017 	ldw	r3,128(sp)
    2bb8:	da000404 	addi	r8,sp,16
    2bbc:	003e1c06 	br	2430 <__alt_mem_Onchip_SRAM+0xf8002430>
    2bc0:	d8802a17 	ldw	r2,168(sp)
    2bc4:	00c00184 	movi	r3,6
    2bc8:	1880012e 	bgeu	r3,r2,2bd0 <___svfprintf_internal_r+0x1cf8>
    2bcc:	1805883a 	mov	r2,r3
    2bd0:	d8802b15 	stw	r2,172(sp)
    2bd4:	1000f316 	blt	r2,zero,2fa4 <___svfprintf_internal_r+0x20cc>
    2bd8:	04000074 	movhi	r16,1
    2bdc:	d8802915 	stw	r2,164(sp)
    2be0:	dd002e15 	stw	r20,184(sp)
    2be4:	d8002a15 	stw	zero,168(sp)
    2be8:	d8003215 	stw	zero,200(sp)
    2bec:	84011a04 	addi	r16,r16,1128
    2bf0:	0039883a 	mov	fp,zero
    2bf4:	003a7d06 	br	15ec <__alt_mem_Onchip_SRAM+0xf80015ec>
    2bf8:	01000074 	movhi	r4,1
    2bfc:	21012084 	addi	r4,r4,1154
    2c00:	d9003515 	stw	r4,212(sp)
    2c04:	003b3d06 	br	18fc <__alt_mem_Onchip_SRAM+0xf80018fc>
    2c08:	d9402d17 	ldw	r5,180(sp)
    2c0c:	d9801e04 	addi	r6,sp,120
    2c10:	9809883a 	mov	r4,r19
    2c14:	0007b840 	call	7b84 <__ssprint_r>
    2c18:	1039961e 	bne	r2,zero,1274 <__alt_mem_Onchip_SRAM+0xf8001274>
    2c1c:	d8802617 	ldw	r2,152(sp)
    2c20:	d9403317 	ldw	r5,204(sp)
    2c24:	d8c02017 	ldw	r3,128(sp)
    2c28:	da000404 	addi	r8,sp,16
    2c2c:	2885c83a 	sub	r2,r5,r2
    2c30:	003e1006 	br	2474 <__alt_mem_Onchip_SRAM+0xf8002474>
    2c34:	00800044 	movi	r2,1
    2c38:	10803fcc 	andi	r2,r2,255
    2c3c:	00c00044 	movi	r3,1
    2c40:	10fa1026 	beq	r2,r3,1484 <__alt_mem_Onchip_SRAM+0xf8001484>
    2c44:	00c00084 	movi	r3,2
    2c48:	10fb8226 	beq	r2,r3,1a54 <__alt_mem_Onchip_SRAM+0xf8001a54>
    2c4c:	003a4206 	br	1558 <__alt_mem_Onchip_SRAM+0xf8001558>
    2c50:	0021883a 	mov	r16,zero
    2c54:	003e0806 	br	2478 <__alt_mem_Onchip_SRAM+0xf8002478>
    2c58:	07000b44 	movi	fp,45
    2c5c:	df002785 	stb	fp,158(sp)
    2c60:	0039e306 	br	13f0 <__alt_mem_Onchip_SRAM+0xf80013f0>
    2c64:	d9002e17 	ldw	r4,184(sp)
    2c68:	d9402f17 	ldw	r5,188(sp)
    2c6c:	20800017 	ldw	r2,0(r4)
    2c70:	21000104 	addi	r4,r4,4
    2c74:	d9002e15 	stw	r4,184(sp)
    2c78:	11400015 	stw	r5,0(r2)
    2c7c:	0038c106 	br	f84 <__alt_mem_Onchip_SRAM+0xf8000f84>
    2c80:	00c00b44 	movi	r3,45
    2c84:	d8c02785 	stb	r3,158(sp)
    2c88:	d8802915 	stw	r2,164(sp)
    2c8c:	dc802c17 	ldw	r18,176(sp)
    2c90:	d8002a15 	stw	zero,168(sp)
    2c94:	07000b44 	movi	fp,45
    2c98:	003a5106 	br	15e0 <__alt_mem_Onchip_SRAM+0xf80015e0>
    2c9c:	9080004c 	andi	r2,r18,1
    2ca0:	1000941e 	bne	r2,zero,2ef4 <___svfprintf_internal_r+0x201c>
    2ca4:	d8802117 	ldw	r2,132(sp)
    2ca8:	1405c83a 	sub	r2,r2,r16
    2cac:	d8803315 	stw	r2,204(sp)
    2cb0:	b441151e 	bne	r22,r17,3108 <___svfprintf_internal_r+0x2230>
    2cb4:	dd802617 	ldw	r22,152(sp)
    2cb8:	00bfff44 	movi	r2,-3
    2cbc:	b0801a16 	blt	r22,r2,2d28 <___svfprintf_internal_r+0x1e50>
    2cc0:	d9402a17 	ldw	r5,168(sp)
    2cc4:	2d801816 	blt	r5,r22,2d28 <___svfprintf_internal_r+0x1e50>
    2cc8:	dd803215 	stw	r22,200(sp)
    2ccc:	003f3a06 	br	29b8 <__alt_mem_Onchip_SRAM+0xf80029b8>
    2cd0:	1025883a 	mov	r18,r2
    2cd4:	0039883a 	mov	fp,zero
    2cd8:	00800084 	movi	r2,2
    2cdc:	003fd606 	br	2c38 <__alt_mem_Onchip_SRAM+0xf8002c38>
    2ce0:	9080004c 	andi	r2,r18,1
    2ce4:	103f191e 	bne	r2,zero,294c <__alt_mem_Onchip_SRAM+0xf800294c>
    2ce8:	d8802117 	ldw	r2,132(sp)
    2cec:	003f2806 	br	2990 <__alt_mem_Onchip_SRAM+0xf8002990>
    2cf0:	01000074 	movhi	r4,1
    2cf4:	21011c84 	addi	r4,r4,1138
    2cf8:	d9002c15 	stw	r4,176(sp)
    2cfc:	003c7c06 	br	1ef0 <__alt_mem_Onchip_SRAM+0xf8001ef0>
    2d00:	e005883a 	mov	r2,fp
    2d04:	003f2206 	br	2990 <__alt_mem_Onchip_SRAM+0xf8002990>
    2d08:	d9002a17 	ldw	r4,168(sp)
    2d0c:	df002783 	ldbu	fp,158(sp)
    2d10:	dd002e15 	stw	r20,184(sp)
    2d14:	d9002915 	stw	r4,164(sp)
    2d18:	d9002b15 	stw	r4,172(sp)
    2d1c:	d8002a15 	stw	zero,168(sp)
    2d20:	d8003215 	stw	zero,200(sp)
    2d24:	003a2a06 	br	15d0 <__alt_mem_Onchip_SRAM+0xf80015d0>
    2d28:	8c7fff84 	addi	r17,r17,-2
    2d2c:	b5bfffc4 	addi	r22,r22,-1
    2d30:	dd802615 	stw	r22,152(sp)
    2d34:	dc4022c5 	stb	r17,139(sp)
    2d38:	b000c316 	blt	r22,zero,3048 <___svfprintf_internal_r+0x2170>
    2d3c:	00800ac4 	movi	r2,43
    2d40:	d8802305 	stb	r2,140(sp)
    2d44:	00800244 	movi	r2,9
    2d48:	15806e16 	blt	r2,r22,2f04 <___svfprintf_internal_r+0x202c>
    2d4c:	00800c04 	movi	r2,48
    2d50:	b5800c04 	addi	r22,r22,48
    2d54:	d8802345 	stb	r2,141(sp)
    2d58:	dd802385 	stb	r22,142(sp)
    2d5c:	d88023c4 	addi	r2,sp,143
    2d60:	df0022c4 	addi	fp,sp,139
    2d64:	d8c03317 	ldw	r3,204(sp)
    2d68:	1739c83a 	sub	fp,r2,fp
    2d6c:	d9003317 	ldw	r4,204(sp)
    2d70:	e0c7883a 	add	r3,fp,r3
    2d74:	df003b15 	stw	fp,236(sp)
    2d78:	d8c02b15 	stw	r3,172(sp)
    2d7c:	00800044 	movi	r2,1
    2d80:	1100b70e 	bge	r2,r4,3060 <___svfprintf_internal_r+0x2188>
    2d84:	d8c02b17 	ldw	r3,172(sp)
    2d88:	18c00044 	addi	r3,r3,1
    2d8c:	d8c02b15 	stw	r3,172(sp)
    2d90:	1805883a 	mov	r2,r3
    2d94:	1800b016 	blt	r3,zero,3058 <___svfprintf_internal_r+0x2180>
    2d98:	d8003215 	stw	zero,200(sp)
    2d9c:	003f1006 	br	29e0 <__alt_mem_Onchip_SRAM+0xf80029e0>
    2da0:	d8802a17 	ldw	r2,168(sp)
    2da4:	103ec71e 	bne	r2,zero,28c4 <__alt_mem_Onchip_SRAM+0xf80028c4>
    2da8:	dc002a15 	stw	r16,168(sp)
    2dac:	003ec506 	br	28c4 <__alt_mem_Onchip_SRAM+0xf80028c4>
    2db0:	d9402d17 	ldw	r5,180(sp)
    2db4:	d9801e04 	addi	r6,sp,120
    2db8:	9809883a 	mov	r4,r19
    2dbc:	0007b840 	call	7b84 <__ssprint_r>
    2dc0:	10392c1e 	bne	r2,zero,1274 <__alt_mem_Onchip_SRAM+0xf8001274>
    2dc4:	dc402617 	ldw	r17,152(sp)
    2dc8:	d8c02017 	ldw	r3,128(sp)
    2dcc:	d8801f17 	ldw	r2,124(sp)
    2dd0:	da000404 	addi	r8,sp,16
    2dd4:	003e7706 	br	27b4 <__alt_mem_Onchip_SRAM+0xf80027b4>
    2dd8:	182f883a 	mov	r23,r3
    2ddc:	d8002a15 	stw	zero,168(sp)
    2de0:	00389306 	br	1030 <__alt_mem_Onchip_SRAM+0xf8001030>
    2de4:	d8c02a17 	ldw	r3,168(sp)
    2de8:	d8802104 	addi	r2,sp,132
    2dec:	d8800315 	stw	r2,12(sp)
    2df0:	d9403617 	ldw	r5,216(sp)
    2df4:	d8802504 	addi	r2,sp,148
    2df8:	d8800215 	stw	r2,8(sp)
    2dfc:	d8802604 	addi	r2,sp,152
    2e00:	d8c00015 	stw	r3,0(sp)
    2e04:	9809883a 	mov	r4,r19
    2e08:	d8800115 	stw	r2,4(sp)
    2e0c:	01c000c4 	movi	r7,3
    2e10:	a00d883a 	mov	r6,r20
    2e14:	da003e15 	stw	r8,248(sp)
    2e18:	000340c0 	call	340c <_dtoa_r>
    2e1c:	d9002a17 	ldw	r4,168(sp)
    2e20:	da003e17 	ldw	r8,248(sp)
    2e24:	1021883a 	mov	r16,r2
    2e28:	1139883a 	add	fp,r2,r4
    2e2c:	2007883a 	mov	r3,r4
    2e30:	81000007 	ldb	r4,0(r16)
    2e34:	00800c04 	movi	r2,48
    2e38:	20806f26 	beq	r4,r2,2ff8 <___svfprintf_internal_r+0x2120>
    2e3c:	d8c02617 	ldw	r3,152(sp)
    2e40:	e0f9883a 	add	fp,fp,r3
    2e44:	003ec206 	br	2950 <__alt_mem_Onchip_SRAM+0xf8002950>
    2e48:	00c00b44 	movi	r3,45
    2e4c:	2520003c 	xorhi	r20,r4,32768
    2e50:	d8c02905 	stb	r3,164(sp)
    2e54:	003ea106 	br	28dc <__alt_mem_Onchip_SRAM+0xf80028dc>
    2e58:	d8c03217 	ldw	r3,200(sp)
    2e5c:	00c0890e 	bge	zero,r3,3084 <___svfprintf_internal_r+0x21ac>
    2e60:	00800044 	movi	r2,1
    2e64:	d9003317 	ldw	r4,204(sp)
    2e68:	1105883a 	add	r2,r2,r4
    2e6c:	d8802b15 	stw	r2,172(sp)
    2e70:	10005f16 	blt	r2,zero,2ff0 <___svfprintf_internal_r+0x2118>
    2e74:	044019c4 	movi	r17,103
    2e78:	003ed906 	br	29e0 <__alt_mem_Onchip_SRAM+0xf80029e0>
    2e7c:	d9002a17 	ldw	r4,168(sp)
    2e80:	20c00044 	addi	r3,r4,1
    2e84:	003e9c06 	br	28f8 <__alt_mem_Onchip_SRAM+0xf80028f8>
    2e88:	d9002a17 	ldw	r4,168(sp)
    2e8c:	00c0680e 	bge	zero,r3,3030 <___svfprintf_internal_r+0x2158>
    2e90:	2000461e 	bne	r4,zero,2fac <___svfprintf_internal_r+0x20d4>
    2e94:	9480004c 	andi	r18,r18,1
    2e98:	9000441e 	bne	r18,zero,2fac <___svfprintf_internal_r+0x20d4>
    2e9c:	1805883a 	mov	r2,r3
    2ea0:	1800a116 	blt	r3,zero,3128 <___svfprintf_internal_r+0x2250>
    2ea4:	d8c03217 	ldw	r3,200(sp)
    2ea8:	d8c02b15 	stw	r3,172(sp)
    2eac:	003ecc06 	br	29e0 <__alt_mem_Onchip_SRAM+0xf80029e0>
    2eb0:	d9402a17 	ldw	r5,168(sp)
    2eb4:	d8802104 	addi	r2,sp,132
    2eb8:	d8800315 	stw	r2,12(sp)
    2ebc:	d9400015 	stw	r5,0(sp)
    2ec0:	d8802504 	addi	r2,sp,148
    2ec4:	d9403617 	ldw	r5,216(sp)
    2ec8:	d8800215 	stw	r2,8(sp)
    2ecc:	d8802604 	addi	r2,sp,152
    2ed0:	d8800115 	stw	r2,4(sp)
    2ed4:	01c000c4 	movi	r7,3
    2ed8:	a00d883a 	mov	r6,r20
    2edc:	9809883a 	mov	r4,r19
    2ee0:	da003e15 	stw	r8,248(sp)
    2ee4:	000340c0 	call	340c <_dtoa_r>
    2ee8:	d8c02a17 	ldw	r3,168(sp)
    2eec:	da003e17 	ldw	r8,248(sp)
    2ef0:	1021883a 	mov	r16,r2
    2ef4:	00801184 	movi	r2,70
    2ef8:	80f9883a 	add	fp,r16,r3
    2efc:	88bfcc26 	beq	r17,r2,2e30 <__alt_mem_Onchip_SRAM+0xf8002e30>
    2f00:	003e9306 	br	2950 <__alt_mem_Onchip_SRAM+0xf8002950>
    2f04:	df0022c4 	addi	fp,sp,139
    2f08:	dc002a15 	stw	r16,168(sp)
    2f0c:	9829883a 	mov	r20,r19
    2f10:	e021883a 	mov	r16,fp
    2f14:	4027883a 	mov	r19,r8
    2f18:	b009883a 	mov	r4,r22
    2f1c:	01400284 	movi	r5,10
    2f20:	00008dc0 	call	8dc <__modsi3>
    2f24:	10800c04 	addi	r2,r2,48
    2f28:	843fffc4 	addi	r16,r16,-1
    2f2c:	b009883a 	mov	r4,r22
    2f30:	01400284 	movi	r5,10
    2f34:	80800005 	stb	r2,0(r16)
    2f38:	00008580 	call	858 <__divsi3>
    2f3c:	102d883a 	mov	r22,r2
    2f40:	00800244 	movi	r2,9
    2f44:	15bff416 	blt	r2,r22,2f18 <__alt_mem_Onchip_SRAM+0xf8002f18>
    2f48:	9811883a 	mov	r8,r19
    2f4c:	b0800c04 	addi	r2,r22,48
    2f50:	a027883a 	mov	r19,r20
    2f54:	8029883a 	mov	r20,r16
    2f58:	a17fffc4 	addi	r5,r20,-1
    2f5c:	a0bfffc5 	stb	r2,-1(r20)
    2f60:	dc002a17 	ldw	r16,168(sp)
    2f64:	2f00782e 	bgeu	r5,fp,3148 <___svfprintf_internal_r+0x2270>
    2f68:	d9c02384 	addi	r7,sp,142
    2f6c:	3d0fc83a 	sub	r7,r7,r20
    2f70:	d9002344 	addi	r4,sp,141
    2f74:	e1cf883a 	add	r7,fp,r7
    2f78:	00000106 	br	2f80 <___svfprintf_internal_r+0x20a8>
    2f7c:	28800003 	ldbu	r2,0(r5)
    2f80:	20800005 	stb	r2,0(r4)
    2f84:	21000044 	addi	r4,r4,1
    2f88:	29400044 	addi	r5,r5,1
    2f8c:	21fffb1e 	bne	r4,r7,2f7c <__alt_mem_Onchip_SRAM+0xf8002f7c>
    2f90:	d8802304 	addi	r2,sp,140
    2f94:	1505c83a 	sub	r2,r2,r20
    2f98:	d8c02344 	addi	r3,sp,141
    2f9c:	1885883a 	add	r2,r3,r2
    2fa0:	003f7006 	br	2d64 <__alt_mem_Onchip_SRAM+0xf8002d64>
    2fa4:	0005883a 	mov	r2,zero
    2fa8:	003f0b06 	br	2bd8 <__alt_mem_Onchip_SRAM+0xf8002bd8>
    2fac:	d9002a17 	ldw	r4,168(sp)
    2fb0:	d8c03217 	ldw	r3,200(sp)
    2fb4:	20800044 	addi	r2,r4,1
    2fb8:	1885883a 	add	r2,r3,r2
    2fbc:	d8802b15 	stw	r2,172(sp)
    2fc0:	103e870e 	bge	r2,zero,29e0 <__alt_mem_Onchip_SRAM+0xf80029e0>
    2fc4:	0005883a 	mov	r2,zero
    2fc8:	003e8506 	br	29e0 <__alt_mem_Onchip_SRAM+0xf80029e0>
    2fcc:	01000074 	movhi	r4,1
    2fd0:	21011c84 	addi	r4,r4,1138
    2fd4:	d9002c15 	stw	r4,176(sp)
    2fd8:	003cc506 	br	22f0 <__alt_mem_Onchip_SRAM+0xf80022f0>
    2fdc:	d8c03217 	ldw	r3,200(sp)
    2fe0:	18c00044 	addi	r3,r3,1
    2fe4:	d8c02b15 	stw	r3,172(sp)
    2fe8:	1805883a 	mov	r2,r3
    2fec:	183fa10e 	bge	r3,zero,2e74 <__alt_mem_Onchip_SRAM+0xf8002e74>
    2ff0:	0005883a 	mov	r2,zero
    2ff4:	003f9f06 	br	2e74 <__alt_mem_Onchip_SRAM+0xf8002e74>
    2ff8:	d9003617 	ldw	r4,216(sp)
    2ffc:	000d883a 	mov	r6,zero
    3000:	000f883a 	mov	r7,zero
    3004:	a00b883a 	mov	r5,r20
    3008:	d8c03d15 	stw	r3,244(sp)
    300c:	da003e15 	stw	r8,248(sp)
    3010:	000be2c0 	call	be2c <__eqdf2>
    3014:	d8c03d17 	ldw	r3,244(sp)
    3018:	da003e17 	ldw	r8,248(sp)
    301c:	103f8726 	beq	r2,zero,2e3c <__alt_mem_Onchip_SRAM+0xf8002e3c>
    3020:	00800044 	movi	r2,1
    3024:	10c7c83a 	sub	r3,r2,r3
    3028:	d8c02615 	stw	r3,152(sp)
    302c:	003f8406 	br	2e40 <__alt_mem_Onchip_SRAM+0xf8002e40>
    3030:	20000e1e 	bne	r4,zero,306c <___svfprintf_internal_r+0x2194>
    3034:	9480004c 	andi	r18,r18,1
    3038:	90000c1e 	bne	r18,zero,306c <___svfprintf_internal_r+0x2194>
    303c:	00800044 	movi	r2,1
    3040:	d8802b15 	stw	r2,172(sp)
    3044:	003e6606 	br	29e0 <__alt_mem_Onchip_SRAM+0xf80029e0>
    3048:	00800b44 	movi	r2,45
    304c:	05adc83a 	sub	r22,zero,r22
    3050:	d8802305 	stb	r2,140(sp)
    3054:	003f3b06 	br	2d44 <__alt_mem_Onchip_SRAM+0xf8002d44>
    3058:	0005883a 	mov	r2,zero
    305c:	003f4e06 	br	2d98 <__alt_mem_Onchip_SRAM+0xf8002d98>
    3060:	90a4703a 	and	r18,r18,r2
    3064:	903f4a26 	beq	r18,zero,2d90 <__alt_mem_Onchip_SRAM+0xf8002d90>
    3068:	003f4606 	br	2d84 <__alt_mem_Onchip_SRAM+0xf8002d84>
    306c:	d8c02a17 	ldw	r3,168(sp)
    3070:	18c00084 	addi	r3,r3,2
    3074:	d8c02b15 	stw	r3,172(sp)
    3078:	1805883a 	mov	r2,r3
    307c:	183e580e 	bge	r3,zero,29e0 <__alt_mem_Onchip_SRAM+0xf80029e0>
    3080:	003fd006 	br	2fc4 <__alt_mem_Onchip_SRAM+0xf8002fc4>
    3084:	00800084 	movi	r2,2
    3088:	10c5c83a 	sub	r2,r2,r3
    308c:	003f7506 	br	2e64 <__alt_mem_Onchip_SRAM+0xf8002e64>
    3090:	d9402e17 	ldw	r5,184(sp)
    3094:	d9002e17 	ldw	r4,184(sp)
    3098:	bc400043 	ldbu	r17,1(r23)
    309c:	29400017 	ldw	r5,0(r5)
    30a0:	20800104 	addi	r2,r4,4
    30a4:	d8802e15 	stw	r2,184(sp)
    30a8:	d9402a15 	stw	r5,168(sp)
    30ac:	182f883a 	mov	r23,r3
    30b0:	283df10e 	bge	r5,zero,2878 <__alt_mem_Onchip_SRAM+0xf8002878>
    30b4:	8c403fcc 	andi	r17,r17,255
    30b8:	017fffc4 	movi	r5,-1
    30bc:	8c40201c 	xori	r17,r17,128
    30c0:	d9402a15 	stw	r5,168(sp)
    30c4:	8c7fe004 	addi	r17,r17,-128
    30c8:	0037d806 	br	102c <__alt_mem_Onchip_SRAM+0xf800102c>
    30cc:	9080004c 	andi	r2,r18,1
    30d0:	0039883a 	mov	fp,zero
    30d4:	10000726 	beq	r2,zero,30f4 <___svfprintf_internal_r+0x221c>
    30d8:	d8c02817 	ldw	r3,160(sp)
    30dc:	dc001dc4 	addi	r16,sp,119
    30e0:	00800c04 	movi	r2,48
    30e4:	1c07c83a 	sub	r3,r3,r16
    30e8:	d8801dc5 	stb	r2,119(sp)
    30ec:	d8c02b15 	stw	r3,172(sp)
    30f0:	00393106 	br	15b8 <__alt_mem_Onchip_SRAM+0xf80015b8>
    30f4:	d8002b15 	stw	zero,172(sp)
    30f8:	dc001e04 	addi	r16,sp,120
    30fc:	00392e06 	br	15b8 <__alt_mem_Onchip_SRAM+0xf80015b8>
    3100:	0005883a 	mov	r2,zero
    3104:	003e3306 	br	29d4 <__alt_mem_Onchip_SRAM+0xf80029d4>
    3108:	dd802617 	ldw	r22,152(sp)
    310c:	003f0706 	br	2d2c <__alt_mem_Onchip_SRAM+0xf8002d2c>
    3110:	d8c02b03 	ldbu	r3,172(sp)
    3114:	d8c02785 	stb	r3,158(sp)
    3118:	003a3506 	br	19f0 <__alt_mem_Onchip_SRAM+0xf80019f0>
    311c:	d8c02b03 	ldbu	r3,172(sp)
    3120:	d8c02785 	stb	r3,158(sp)
    3124:	003a1706 	br	1984 <__alt_mem_Onchip_SRAM+0xf8001984>
    3128:	0005883a 	mov	r2,zero
    312c:	003f5d06 	br	2ea4 <__alt_mem_Onchip_SRAM+0xf8002ea4>
    3130:	d8c02b03 	ldbu	r3,172(sp)
    3134:	d8c02785 	stb	r3,158(sp)
    3138:	0038f306 	br	1508 <__alt_mem_Onchip_SRAM+0xf8001508>
    313c:	d8c02b03 	ldbu	r3,172(sp)
    3140:	d8c02785 	stb	r3,158(sp)
    3144:	0038be06 	br	1440 <__alt_mem_Onchip_SRAM+0xf8001440>
    3148:	d8802344 	addi	r2,sp,141
    314c:	003f0506 	br	2d64 <__alt_mem_Onchip_SRAM+0xf8002d64>
    3150:	d8c02b03 	ldbu	r3,172(sp)
    3154:	d8c02785 	stb	r3,158(sp)
    3158:	00388b06 	br	1388 <__alt_mem_Onchip_SRAM+0xf8001388>
    315c:	d8c02b03 	ldbu	r3,172(sp)
    3160:	d8c02785 	stb	r3,158(sp)
    3164:	003ad706 	br	1cc4 <__alt_mem_Onchip_SRAM+0xf8001cc4>
    3168:	d9403917 	ldw	r5,228(sp)
    316c:	00800304 	movi	r2,12
    3170:	28800015 	stw	r2,0(r5)
    3174:	00bfffc4 	movi	r2,-1
    3178:	00384306 	br	1288 <__alt_mem_Onchip_SRAM+0xf8001288>
    317c:	d8c02b03 	ldbu	r3,172(sp)
    3180:	d8c02785 	stb	r3,158(sp)
    3184:	003ab606 	br	1c60 <__alt_mem_Onchip_SRAM+0xf8001c60>
    3188:	d8c02b03 	ldbu	r3,172(sp)
    318c:	d8c02785 	stb	r3,158(sp)
    3190:	003a8906 	br	1bb8 <__alt_mem_Onchip_SRAM+0xf8001bb8>

00003194 <time>:
    3194:	00800074 	movhi	r2,1
    3198:	defffc04 	addi	sp,sp,-16
    319c:	10885504 	addi	r2,r2,8532
    31a0:	dc000215 	stw	r16,8(sp)
    31a4:	2021883a 	mov	r16,r4
    31a8:	11000017 	ldw	r4,0(r2)
    31ac:	000d883a 	mov	r6,zero
    31b0:	d80b883a 	mov	r5,sp
    31b4:	dfc00315 	stw	ra,12(sp)
    31b8:	00054940 	call	5494 <_gettimeofday_r>
    31bc:	10000716 	blt	r2,zero,31dc <time+0x48>
    31c0:	d8800017 	ldw	r2,0(sp)
    31c4:	80000126 	beq	r16,zero,31cc <time+0x38>
    31c8:	80800015 	stw	r2,0(r16)
    31cc:	dfc00317 	ldw	ra,12(sp)
    31d0:	dc000217 	ldw	r16,8(sp)
    31d4:	dec00404 	addi	sp,sp,16
    31d8:	f800283a 	ret
    31dc:	00bfffc4 	movi	r2,-1
    31e0:	003ffa06 	br	31cc <__alt_mem_Onchip_SRAM+0xf80031cc>

000031e4 <quorem>:
    31e4:	defff204 	addi	sp,sp,-56
    31e8:	ddc00b15 	stw	r23,44(sp)
    31ec:	20800417 	ldw	r2,16(r4)
    31f0:	2dc00417 	ldw	r23,16(r5)
    31f4:	dfc00d15 	stw	ra,52(sp)
    31f8:	df000c15 	stw	fp,48(sp)
    31fc:	dd800a15 	stw	r22,40(sp)
    3200:	dd400915 	stw	r21,36(sp)
    3204:	dd000815 	stw	r20,32(sp)
    3208:	dcc00715 	stw	r19,28(sp)
    320c:	dc800615 	stw	r18,24(sp)
    3210:	dc400515 	stw	r17,20(sp)
    3214:	dc000415 	stw	r16,16(sp)
    3218:	15c07a16 	blt	r2,r23,3404 <quorem+0x220>
    321c:	bdffffc4 	addi	r23,r23,-1
    3220:	bde9883a 	add	r20,r23,r23
    3224:	28c00504 	addi	r3,r5,20
    3228:	a529883a 	add	r20,r20,r20
    322c:	1d39883a 	add	fp,r3,r20
    3230:	24c00504 	addi	r19,r4,20
    3234:	d9400215 	stw	r5,8(sp)
    3238:	9d29883a 	add	r20,r19,r20
    323c:	e1400017 	ldw	r5,0(fp)
    3240:	d9000015 	stw	r4,0(sp)
    3244:	a1000017 	ldw	r4,0(r20)
    3248:	29400044 	addi	r5,r5,1
    324c:	d8c00115 	stw	r3,4(sp)
    3250:	dd000315 	stw	r20,12(sp)
    3254:	00009500 	call	950 <__udivsi3>
    3258:	1025883a 	mov	r18,r2
    325c:	10003026 	beq	r2,zero,3320 <quorem+0x13c>
    3260:	dc400117 	ldw	r17,4(sp)
    3264:	9829883a 	mov	r20,r19
    3268:	002d883a 	mov	r22,zero
    326c:	0021883a 	mov	r16,zero
    3270:	8d400017 	ldw	r21,0(r17)
    3274:	900b883a 	mov	r5,r18
    3278:	8c400104 	addi	r17,r17,4
    327c:	a93fffcc 	andi	r4,r21,65535
    3280:	0000a0c0 	call	a0c <__mulsi3>
    3284:	a808d43a 	srli	r4,r21,16
    3288:	900b883a 	mov	r5,r18
    328c:	15ad883a 	add	r22,r2,r22
    3290:	0000a0c0 	call	a0c <__mulsi3>
    3294:	a1000017 	ldw	r4,0(r20)
    3298:	b00cd43a 	srli	r6,r22,16
    329c:	b0ffffcc 	andi	r3,r22,65535
    32a0:	217fffcc 	andi	r5,r4,65535
    32a4:	2c21883a 	add	r16,r5,r16
    32a8:	80c7c83a 	sub	r3,r16,r3
    32ac:	2008d43a 	srli	r4,r4,16
    32b0:	1185883a 	add	r2,r2,r6
    32b4:	1821d43a 	srai	r16,r3,16
    32b8:	117fffcc 	andi	r5,r2,65535
    32bc:	2149c83a 	sub	r4,r4,r5
    32c0:	2421883a 	add	r16,r4,r16
    32c4:	8008943a 	slli	r4,r16,16
    32c8:	18ffffcc 	andi	r3,r3,65535
    32cc:	102cd43a 	srli	r22,r2,16
    32d0:	20c8b03a 	or	r4,r4,r3
    32d4:	a1000015 	stw	r4,0(r20)
    32d8:	8021d43a 	srai	r16,r16,16
    32dc:	a5000104 	addi	r20,r20,4
    32e0:	e47fe32e 	bgeu	fp,r17,3270 <__alt_mem_Onchip_SRAM+0xf8003270>
    32e4:	d8c00317 	ldw	r3,12(sp)
    32e8:	18800017 	ldw	r2,0(r3)
    32ec:	10000c1e 	bne	r2,zero,3320 <quorem+0x13c>
    32f0:	18bfff04 	addi	r2,r3,-4
    32f4:	9880082e 	bgeu	r19,r2,3318 <quorem+0x134>
    32f8:	18ffff17 	ldw	r3,-4(r3)
    32fc:	18000326 	beq	r3,zero,330c <quorem+0x128>
    3300:	00000506 	br	3318 <quorem+0x134>
    3304:	10c00017 	ldw	r3,0(r2)
    3308:	1800031e 	bne	r3,zero,3318 <quorem+0x134>
    330c:	10bfff04 	addi	r2,r2,-4
    3310:	bdffffc4 	addi	r23,r23,-1
    3314:	98bffb36 	bltu	r19,r2,3304 <__alt_mem_Onchip_SRAM+0xf8003304>
    3318:	d8c00017 	ldw	r3,0(sp)
    331c:	1dc00415 	stw	r23,16(r3)
    3320:	d9400217 	ldw	r5,8(sp)
    3324:	d9000017 	ldw	r4,0(sp)
    3328:	0006c0c0 	call	6c0c <__mcmp>
    332c:	10002816 	blt	r2,zero,33d0 <quorem+0x1ec>
    3330:	dc400117 	ldw	r17,4(sp)
    3334:	94800044 	addi	r18,r18,1
    3338:	980d883a 	mov	r6,r19
    333c:	0007883a 	mov	r3,zero
    3340:	31000017 	ldw	r4,0(r6)
    3344:	89400017 	ldw	r5,0(r17)
    3348:	31800104 	addi	r6,r6,4
    334c:	20bfffcc 	andi	r2,r4,65535
    3350:	10c7883a 	add	r3,r2,r3
    3354:	28bfffcc 	andi	r2,r5,65535
    3358:	1885c83a 	sub	r2,r3,r2
    335c:	280ad43a 	srli	r5,r5,16
    3360:	2008d43a 	srli	r4,r4,16
    3364:	1007d43a 	srai	r3,r2,16
    3368:	10bfffcc 	andi	r2,r2,65535
    336c:	2149c83a 	sub	r4,r4,r5
    3370:	20c9883a 	add	r4,r4,r3
    3374:	200a943a 	slli	r5,r4,16
    3378:	8c400104 	addi	r17,r17,4
    337c:	2007d43a 	srai	r3,r4,16
    3380:	2884b03a 	or	r2,r5,r2
    3384:	30bfff15 	stw	r2,-4(r6)
    3388:	e47fed2e 	bgeu	fp,r17,3340 <__alt_mem_Onchip_SRAM+0xf8003340>
    338c:	bdc5883a 	add	r2,r23,r23
    3390:	1085883a 	add	r2,r2,r2
    3394:	9887883a 	add	r3,r19,r2
    3398:	18800017 	ldw	r2,0(r3)
    339c:	10000c1e 	bne	r2,zero,33d0 <quorem+0x1ec>
    33a0:	18bfff04 	addi	r2,r3,-4
    33a4:	9880082e 	bgeu	r19,r2,33c8 <quorem+0x1e4>
    33a8:	18ffff17 	ldw	r3,-4(r3)
    33ac:	18000326 	beq	r3,zero,33bc <quorem+0x1d8>
    33b0:	00000506 	br	33c8 <quorem+0x1e4>
    33b4:	10c00017 	ldw	r3,0(r2)
    33b8:	1800031e 	bne	r3,zero,33c8 <quorem+0x1e4>
    33bc:	10bfff04 	addi	r2,r2,-4
    33c0:	bdffffc4 	addi	r23,r23,-1
    33c4:	98bffb36 	bltu	r19,r2,33b4 <__alt_mem_Onchip_SRAM+0xf80033b4>
    33c8:	d8c00017 	ldw	r3,0(sp)
    33cc:	1dc00415 	stw	r23,16(r3)
    33d0:	9005883a 	mov	r2,r18
    33d4:	dfc00d17 	ldw	ra,52(sp)
    33d8:	df000c17 	ldw	fp,48(sp)
    33dc:	ddc00b17 	ldw	r23,44(sp)
    33e0:	dd800a17 	ldw	r22,40(sp)
    33e4:	dd400917 	ldw	r21,36(sp)
    33e8:	dd000817 	ldw	r20,32(sp)
    33ec:	dcc00717 	ldw	r19,28(sp)
    33f0:	dc800617 	ldw	r18,24(sp)
    33f4:	dc400517 	ldw	r17,20(sp)
    33f8:	dc000417 	ldw	r16,16(sp)
    33fc:	dec00e04 	addi	sp,sp,56
    3400:	f800283a 	ret
    3404:	0005883a 	mov	r2,zero
    3408:	003ff206 	br	33d4 <__alt_mem_Onchip_SRAM+0xf80033d4>

0000340c <_dtoa_r>:
    340c:	20801017 	ldw	r2,64(r4)
    3410:	deffde04 	addi	sp,sp,-136
    3414:	df002015 	stw	fp,128(sp)
    3418:	dcc01b15 	stw	r19,108(sp)
    341c:	dc801a15 	stw	r18,104(sp)
    3420:	dc401915 	stw	r17,100(sp)
    3424:	dc001815 	stw	r16,96(sp)
    3428:	dfc02115 	stw	ra,132(sp)
    342c:	ddc01f15 	stw	r23,124(sp)
    3430:	dd801e15 	stw	r22,120(sp)
    3434:	dd401d15 	stw	r21,116(sp)
    3438:	dd001c15 	stw	r20,112(sp)
    343c:	d9c00315 	stw	r7,12(sp)
    3440:	2039883a 	mov	fp,r4
    3444:	3023883a 	mov	r17,r6
    3448:	2825883a 	mov	r18,r5
    344c:	dc002417 	ldw	r16,144(sp)
    3450:	3027883a 	mov	r19,r6
    3454:	10000826 	beq	r2,zero,3478 <_dtoa_r+0x6c>
    3458:	21801117 	ldw	r6,68(r4)
    345c:	00c00044 	movi	r3,1
    3460:	100b883a 	mov	r5,r2
    3464:	1986983a 	sll	r3,r3,r6
    3468:	11800115 	stw	r6,4(r2)
    346c:	10c00215 	stw	r3,8(r2)
    3470:	00063300 	call	6330 <_Bfree>
    3474:	e0001015 	stw	zero,64(fp)
    3478:	88002e16 	blt	r17,zero,3534 <_dtoa_r+0x128>
    347c:	80000015 	stw	zero,0(r16)
    3480:	889ffc2c 	andhi	r2,r17,32752
    3484:	00dffc34 	movhi	r3,32752
    3488:	10c01c26 	beq	r2,r3,34fc <_dtoa_r+0xf0>
    348c:	000d883a 	mov	r6,zero
    3490:	000f883a 	mov	r7,zero
    3494:	9009883a 	mov	r4,r18
    3498:	980b883a 	mov	r5,r19
    349c:	000be2c0 	call	be2c <__eqdf2>
    34a0:	10002b1e 	bne	r2,zero,3550 <_dtoa_r+0x144>
    34a4:	d9c02317 	ldw	r7,140(sp)
    34a8:	00800044 	movi	r2,1
    34ac:	38800015 	stw	r2,0(r7)
    34b0:	d8802517 	ldw	r2,148(sp)
    34b4:	10019e26 	beq	r2,zero,3b30 <_dtoa_r+0x724>
    34b8:	d8c02517 	ldw	r3,148(sp)
    34bc:	00800074 	movhi	r2,1
    34c0:	10811c44 	addi	r2,r2,1137
    34c4:	18800015 	stw	r2,0(r3)
    34c8:	10bfffc4 	addi	r2,r2,-1
    34cc:	dfc02117 	ldw	ra,132(sp)
    34d0:	df002017 	ldw	fp,128(sp)
    34d4:	ddc01f17 	ldw	r23,124(sp)
    34d8:	dd801e17 	ldw	r22,120(sp)
    34dc:	dd401d17 	ldw	r21,116(sp)
    34e0:	dd001c17 	ldw	r20,112(sp)
    34e4:	dcc01b17 	ldw	r19,108(sp)
    34e8:	dc801a17 	ldw	r18,104(sp)
    34ec:	dc401917 	ldw	r17,100(sp)
    34f0:	dc001817 	ldw	r16,96(sp)
    34f4:	dec02204 	addi	sp,sp,136
    34f8:	f800283a 	ret
    34fc:	d8c02317 	ldw	r3,140(sp)
    3500:	0089c3c4 	movi	r2,9999
    3504:	18800015 	stw	r2,0(r3)
    3508:	90017726 	beq	r18,zero,3ae8 <_dtoa_r+0x6dc>
    350c:	00800074 	movhi	r2,1
    3510:	10812804 	addi	r2,r2,1184
    3514:	d9002517 	ldw	r4,148(sp)
    3518:	203fec26 	beq	r4,zero,34cc <__alt_mem_Onchip_SRAM+0xf80034cc>
    351c:	10c000c7 	ldb	r3,3(r2)
    3520:	1801781e 	bne	r3,zero,3b04 <_dtoa_r+0x6f8>
    3524:	10c000c4 	addi	r3,r2,3
    3528:	d9802517 	ldw	r6,148(sp)
    352c:	30c00015 	stw	r3,0(r6)
    3530:	003fe606 	br	34cc <__alt_mem_Onchip_SRAM+0xf80034cc>
    3534:	04e00034 	movhi	r19,32768
    3538:	9cffffc4 	addi	r19,r19,-1
    353c:	00800044 	movi	r2,1
    3540:	8ce6703a 	and	r19,r17,r19
    3544:	80800015 	stw	r2,0(r16)
    3548:	9823883a 	mov	r17,r19
    354c:	003fcc06 	br	3480 <__alt_mem_Onchip_SRAM+0xf8003480>
    3550:	d8800204 	addi	r2,sp,8
    3554:	d8800015 	stw	r2,0(sp)
    3558:	d9c00104 	addi	r7,sp,4
    355c:	900b883a 	mov	r5,r18
    3560:	980d883a 	mov	r6,r19
    3564:	e009883a 	mov	r4,fp
    3568:	8820d53a 	srli	r16,r17,20
    356c:	0006fd80 	call	6fd8 <__d2b>
    3570:	d8800915 	stw	r2,36(sp)
    3574:	8001651e 	bne	r16,zero,3b0c <_dtoa_r+0x700>
    3578:	dd800217 	ldw	r22,8(sp)
    357c:	dc000117 	ldw	r16,4(sp)
    3580:	00800804 	movi	r2,32
    3584:	b421883a 	add	r16,r22,r16
    3588:	80c10c84 	addi	r3,r16,1074
    358c:	10c2d10e 	bge	r2,r3,40d4 <_dtoa_r+0xcc8>
    3590:	00801004 	movi	r2,64
    3594:	81010484 	addi	r4,r16,1042
    3598:	10c7c83a 	sub	r3,r2,r3
    359c:	9108d83a 	srl	r4,r18,r4
    35a0:	88e2983a 	sll	r17,r17,r3
    35a4:	2448b03a 	or	r4,r4,r17
    35a8:	000d3480 	call	d348 <__floatunsidf>
    35ac:	017f8434 	movhi	r5,65040
    35b0:	01800044 	movi	r6,1
    35b4:	1009883a 	mov	r4,r2
    35b8:	194b883a 	add	r5,r3,r5
    35bc:	843fffc4 	addi	r16,r16,-1
    35c0:	d9801115 	stw	r6,68(sp)
    35c4:	000d883a 	mov	r6,zero
    35c8:	01cffe34 	movhi	r7,16376
    35cc:	000c8f00 	call	c8f0 <__subdf3>
    35d0:	0198dbf4 	movhi	r6,25455
    35d4:	01cff4f4 	movhi	r7,16339
    35d8:	3190d844 	addi	r6,r6,17249
    35dc:	39e1e9c4 	addi	r7,r7,-30809
    35e0:	1009883a 	mov	r4,r2
    35e4:	180b883a 	mov	r5,r3
    35e8:	000c0840 	call	c084 <__muldf3>
    35ec:	01a2d874 	movhi	r6,35681
    35f0:	01cff1f4 	movhi	r7,16327
    35f4:	31b22cc4 	addi	r6,r6,-14157
    35f8:	39e28a04 	addi	r7,r7,-30168
    35fc:	180b883a 	mov	r5,r3
    3600:	1009883a 	mov	r4,r2
    3604:	000abb00 	call	abb0 <__adddf3>
    3608:	8009883a 	mov	r4,r16
    360c:	1029883a 	mov	r20,r2
    3610:	1823883a 	mov	r17,r3
    3614:	000d26c0 	call	d26c <__floatsidf>
    3618:	019427f4 	movhi	r6,20639
    361c:	01cff4f4 	movhi	r7,16339
    3620:	319e7ec4 	addi	r6,r6,31227
    3624:	39d104c4 	addi	r7,r7,17427
    3628:	1009883a 	mov	r4,r2
    362c:	180b883a 	mov	r5,r3
    3630:	000c0840 	call	c084 <__muldf3>
    3634:	100d883a 	mov	r6,r2
    3638:	180f883a 	mov	r7,r3
    363c:	a009883a 	mov	r4,r20
    3640:	880b883a 	mov	r5,r17
    3644:	000abb00 	call	abb0 <__adddf3>
    3648:	1009883a 	mov	r4,r2
    364c:	180b883a 	mov	r5,r3
    3650:	1029883a 	mov	r20,r2
    3654:	1823883a 	mov	r17,r3
    3658:	000d1ec0 	call	d1ec <__fixdfsi>
    365c:	000d883a 	mov	r6,zero
    3660:	000f883a 	mov	r7,zero
    3664:	a009883a 	mov	r4,r20
    3668:	880b883a 	mov	r5,r17
    366c:	d8800515 	stw	r2,20(sp)
    3670:	000bf900 	call	bf90 <__ledf2>
    3674:	10028716 	blt	r2,zero,4094 <_dtoa_r+0xc88>
    3678:	d8c00517 	ldw	r3,20(sp)
    367c:	00800584 	movi	r2,22
    3680:	10c27536 	bltu	r2,r3,4058 <_dtoa_r+0xc4c>
    3684:	180490fa 	slli	r2,r3,3
    3688:	00c00074 	movhi	r3,1
    368c:	18c14404 	addi	r3,r3,1296
    3690:	1885883a 	add	r2,r3,r2
    3694:	11000017 	ldw	r4,0(r2)
    3698:	11400117 	ldw	r5,4(r2)
    369c:	900d883a 	mov	r6,r18
    36a0:	980f883a 	mov	r7,r19
    36a4:	000beb40 	call	beb4 <__gedf2>
    36a8:	00828d0e 	bge	zero,r2,40e0 <_dtoa_r+0xcd4>
    36ac:	d9000517 	ldw	r4,20(sp)
    36b0:	d8000e15 	stw	zero,56(sp)
    36b4:	213fffc4 	addi	r4,r4,-1
    36b8:	d9000515 	stw	r4,20(sp)
    36bc:	b42dc83a 	sub	r22,r22,r16
    36c0:	b5bfffc4 	addi	r22,r22,-1
    36c4:	b0026f16 	blt	r22,zero,4084 <_dtoa_r+0xc78>
    36c8:	d8000815 	stw	zero,32(sp)
    36cc:	d9c00517 	ldw	r7,20(sp)
    36d0:	38026416 	blt	r7,zero,4064 <_dtoa_r+0xc58>
    36d4:	b1ed883a 	add	r22,r22,r7
    36d8:	d9c00d15 	stw	r7,52(sp)
    36dc:	d8000a15 	stw	zero,40(sp)
    36e0:	d9800317 	ldw	r6,12(sp)
    36e4:	00800244 	movi	r2,9
    36e8:	11811436 	bltu	r2,r6,3b3c <_dtoa_r+0x730>
    36ec:	00800144 	movi	r2,5
    36f0:	1184e10e 	bge	r2,r6,4a78 <_dtoa_r+0x166c>
    36f4:	31bfff04 	addi	r6,r6,-4
    36f8:	d9800315 	stw	r6,12(sp)
    36fc:	0023883a 	mov	r17,zero
    3700:	d9800317 	ldw	r6,12(sp)
    3704:	008000c4 	movi	r2,3
    3708:	30836726 	beq	r6,r2,44a8 <_dtoa_r+0x109c>
    370c:	1183410e 	bge	r2,r6,4414 <_dtoa_r+0x1008>
    3710:	d9c00317 	ldw	r7,12(sp)
    3714:	00800104 	movi	r2,4
    3718:	38827c26 	beq	r7,r2,410c <_dtoa_r+0xd00>
    371c:	00800144 	movi	r2,5
    3720:	3884c41e 	bne	r7,r2,4a34 <_dtoa_r+0x1628>
    3724:	00800044 	movi	r2,1
    3728:	d8800b15 	stw	r2,44(sp)
    372c:	d8c00517 	ldw	r3,20(sp)
    3730:	d9002217 	ldw	r4,136(sp)
    3734:	1907883a 	add	r3,r3,r4
    3738:	19800044 	addi	r6,r3,1
    373c:	d8c00c15 	stw	r3,48(sp)
    3740:	d9800615 	stw	r6,24(sp)
    3744:	0183a40e 	bge	zero,r6,45d8 <_dtoa_r+0x11cc>
    3748:	d9800617 	ldw	r6,24(sp)
    374c:	3021883a 	mov	r16,r6
    3750:	e0001115 	stw	zero,68(fp)
    3754:	008005c4 	movi	r2,23
    3758:	1184c92e 	bgeu	r2,r6,4a80 <_dtoa_r+0x1674>
    375c:	00c00044 	movi	r3,1
    3760:	00800104 	movi	r2,4
    3764:	1085883a 	add	r2,r2,r2
    3768:	11000504 	addi	r4,r2,20
    376c:	180b883a 	mov	r5,r3
    3770:	18c00044 	addi	r3,r3,1
    3774:	313ffb2e 	bgeu	r6,r4,3764 <__alt_mem_Onchip_SRAM+0xf8003764>
    3778:	e1401115 	stw	r5,68(fp)
    377c:	e009883a 	mov	r4,fp
    3780:	00062880 	call	6288 <_Balloc>
    3784:	d8800715 	stw	r2,28(sp)
    3788:	e0801015 	stw	r2,64(fp)
    378c:	00800384 	movi	r2,14
    3790:	1400f736 	bltu	r2,r16,3b70 <_dtoa_r+0x764>
    3794:	8800f626 	beq	r17,zero,3b70 <_dtoa_r+0x764>
    3798:	d9c00517 	ldw	r7,20(sp)
    379c:	01c39a0e 	bge	zero,r7,4608 <_dtoa_r+0x11fc>
    37a0:	388003cc 	andi	r2,r7,15
    37a4:	100490fa 	slli	r2,r2,3
    37a8:	382bd13a 	srai	r21,r7,4
    37ac:	00c00074 	movhi	r3,1
    37b0:	18c14404 	addi	r3,r3,1296
    37b4:	1885883a 	add	r2,r3,r2
    37b8:	a8c0040c 	andi	r3,r21,16
    37bc:	12400017 	ldw	r9,0(r2)
    37c0:	12000117 	ldw	r8,4(r2)
    37c4:	18037926 	beq	r3,zero,45ac <_dtoa_r+0x11a0>
    37c8:	00800074 	movhi	r2,1
    37cc:	10813a04 	addi	r2,r2,1256
    37d0:	11800817 	ldw	r6,32(r2)
    37d4:	11c00917 	ldw	r7,36(r2)
    37d8:	9009883a 	mov	r4,r18
    37dc:	980b883a 	mov	r5,r19
    37e0:	da001715 	stw	r8,92(sp)
    37e4:	da401615 	stw	r9,88(sp)
    37e8:	000b45c0 	call	b45c <__divdf3>
    37ec:	da001717 	ldw	r8,92(sp)
    37f0:	da401617 	ldw	r9,88(sp)
    37f4:	ad4003cc 	andi	r21,r21,15
    37f8:	040000c4 	movi	r16,3
    37fc:	1023883a 	mov	r17,r2
    3800:	1829883a 	mov	r20,r3
    3804:	a8001126 	beq	r21,zero,384c <_dtoa_r+0x440>
    3808:	05c00074 	movhi	r23,1
    380c:	bdc13a04 	addi	r23,r23,1256
    3810:	4805883a 	mov	r2,r9
    3814:	4007883a 	mov	r3,r8
    3818:	a980004c 	andi	r6,r21,1
    381c:	1009883a 	mov	r4,r2
    3820:	a82bd07a 	srai	r21,r21,1
    3824:	180b883a 	mov	r5,r3
    3828:	30000426 	beq	r6,zero,383c <_dtoa_r+0x430>
    382c:	b9800017 	ldw	r6,0(r23)
    3830:	b9c00117 	ldw	r7,4(r23)
    3834:	84000044 	addi	r16,r16,1
    3838:	000c0840 	call	c084 <__muldf3>
    383c:	bdc00204 	addi	r23,r23,8
    3840:	a83ff51e 	bne	r21,zero,3818 <__alt_mem_Onchip_SRAM+0xf8003818>
    3844:	1013883a 	mov	r9,r2
    3848:	1811883a 	mov	r8,r3
    384c:	480d883a 	mov	r6,r9
    3850:	400f883a 	mov	r7,r8
    3854:	8809883a 	mov	r4,r17
    3858:	a00b883a 	mov	r5,r20
    385c:	000b45c0 	call	b45c <__divdf3>
    3860:	d8800f15 	stw	r2,60(sp)
    3864:	d8c01015 	stw	r3,64(sp)
    3868:	d8c00e17 	ldw	r3,56(sp)
    386c:	18000626 	beq	r3,zero,3888 <_dtoa_r+0x47c>
    3870:	d9000f17 	ldw	r4,60(sp)
    3874:	d9401017 	ldw	r5,64(sp)
    3878:	000d883a 	mov	r6,zero
    387c:	01cffc34 	movhi	r7,16368
    3880:	000bf900 	call	bf90 <__ledf2>
    3884:	10040b16 	blt	r2,zero,48b4 <_dtoa_r+0x14a8>
    3888:	8009883a 	mov	r4,r16
    388c:	000d26c0 	call	d26c <__floatsidf>
    3890:	d9800f17 	ldw	r6,60(sp)
    3894:	d9c01017 	ldw	r7,64(sp)
    3898:	1009883a 	mov	r4,r2
    389c:	180b883a 	mov	r5,r3
    38a0:	000c0840 	call	c084 <__muldf3>
    38a4:	000d883a 	mov	r6,zero
    38a8:	01d00734 	movhi	r7,16412
    38ac:	1009883a 	mov	r4,r2
    38b0:	180b883a 	mov	r5,r3
    38b4:	000abb00 	call	abb0 <__adddf3>
    38b8:	1021883a 	mov	r16,r2
    38bc:	d8800617 	ldw	r2,24(sp)
    38c0:	047f3034 	movhi	r17,64704
    38c4:	1c63883a 	add	r17,r3,r17
    38c8:	10031826 	beq	r2,zero,452c <_dtoa_r+0x1120>
    38cc:	d8c00517 	ldw	r3,20(sp)
    38d0:	db000617 	ldw	r12,24(sp)
    38d4:	d8c01315 	stw	r3,76(sp)
    38d8:	d9000b17 	ldw	r4,44(sp)
    38dc:	20038f26 	beq	r4,zero,471c <_dtoa_r+0x1310>
    38e0:	60bfffc4 	addi	r2,r12,-1
    38e4:	100490fa 	slli	r2,r2,3
    38e8:	00c00074 	movhi	r3,1
    38ec:	18c14404 	addi	r3,r3,1296
    38f0:	1885883a 	add	r2,r3,r2
    38f4:	11800017 	ldw	r6,0(r2)
    38f8:	11c00117 	ldw	r7,4(r2)
    38fc:	d8800717 	ldw	r2,28(sp)
    3900:	0009883a 	mov	r4,zero
    3904:	014ff834 	movhi	r5,16352
    3908:	db001615 	stw	r12,88(sp)
    390c:	15c00044 	addi	r23,r2,1
    3910:	000b45c0 	call	b45c <__divdf3>
    3914:	800d883a 	mov	r6,r16
    3918:	880f883a 	mov	r7,r17
    391c:	1009883a 	mov	r4,r2
    3920:	180b883a 	mov	r5,r3
    3924:	000c8f00 	call	c8f0 <__subdf3>
    3928:	d9401017 	ldw	r5,64(sp)
    392c:	d9000f17 	ldw	r4,60(sp)
    3930:	102b883a 	mov	r21,r2
    3934:	d8c01215 	stw	r3,72(sp)
    3938:	000d1ec0 	call	d1ec <__fixdfsi>
    393c:	1009883a 	mov	r4,r2
    3940:	1029883a 	mov	r20,r2
    3944:	000d26c0 	call	d26c <__floatsidf>
    3948:	d9000f17 	ldw	r4,60(sp)
    394c:	d9401017 	ldw	r5,64(sp)
    3950:	100d883a 	mov	r6,r2
    3954:	180f883a 	mov	r7,r3
    3958:	000c8f00 	call	c8f0 <__subdf3>
    395c:	1823883a 	mov	r17,r3
    3960:	d8c00717 	ldw	r3,28(sp)
    3964:	d9401217 	ldw	r5,72(sp)
    3968:	a2000c04 	addi	r8,r20,48
    396c:	1021883a 	mov	r16,r2
    3970:	1a000005 	stb	r8,0(r3)
    3974:	800d883a 	mov	r6,r16
    3978:	880f883a 	mov	r7,r17
    397c:	a809883a 	mov	r4,r21
    3980:	4029883a 	mov	r20,r8
    3984:	000beb40 	call	beb4 <__gedf2>
    3988:	00841d16 	blt	zero,r2,4a00 <_dtoa_r+0x15f4>
    398c:	800d883a 	mov	r6,r16
    3990:	880f883a 	mov	r7,r17
    3994:	0009883a 	mov	r4,zero
    3998:	014ffc34 	movhi	r5,16368
    399c:	000c8f00 	call	c8f0 <__subdf3>
    39a0:	d9401217 	ldw	r5,72(sp)
    39a4:	100d883a 	mov	r6,r2
    39a8:	180f883a 	mov	r7,r3
    39ac:	a809883a 	mov	r4,r21
    39b0:	000beb40 	call	beb4 <__gedf2>
    39b4:	db001617 	ldw	r12,88(sp)
    39b8:	00840e16 	blt	zero,r2,49f4 <_dtoa_r+0x15e8>
    39bc:	00800044 	movi	r2,1
    39c0:	13006b0e 	bge	r2,r12,3b70 <_dtoa_r+0x764>
    39c4:	d9000717 	ldw	r4,28(sp)
    39c8:	dd800f15 	stw	r22,60(sp)
    39cc:	dcc01015 	stw	r19,64(sp)
    39d0:	2319883a 	add	r12,r4,r12
    39d4:	dcc01217 	ldw	r19,72(sp)
    39d8:	602d883a 	mov	r22,r12
    39dc:	dc801215 	stw	r18,72(sp)
    39e0:	b825883a 	mov	r18,r23
    39e4:	00000906 	br	3a0c <_dtoa_r+0x600>
    39e8:	000c8f00 	call	c8f0 <__subdf3>
    39ec:	a80d883a 	mov	r6,r21
    39f0:	980f883a 	mov	r7,r19
    39f4:	1009883a 	mov	r4,r2
    39f8:	180b883a 	mov	r5,r3
    39fc:	000bf900 	call	bf90 <__ledf2>
    3a00:	1003e816 	blt	r2,zero,49a4 <_dtoa_r+0x1598>
    3a04:	b825883a 	mov	r18,r23
    3a08:	bd83e926 	beq	r23,r22,49b0 <_dtoa_r+0x15a4>
    3a0c:	a809883a 	mov	r4,r21
    3a10:	980b883a 	mov	r5,r19
    3a14:	000d883a 	mov	r6,zero
    3a18:	01d00934 	movhi	r7,16420
    3a1c:	000c0840 	call	c084 <__muldf3>
    3a20:	000d883a 	mov	r6,zero
    3a24:	01d00934 	movhi	r7,16420
    3a28:	8009883a 	mov	r4,r16
    3a2c:	880b883a 	mov	r5,r17
    3a30:	102b883a 	mov	r21,r2
    3a34:	1827883a 	mov	r19,r3
    3a38:	000c0840 	call	c084 <__muldf3>
    3a3c:	180b883a 	mov	r5,r3
    3a40:	1009883a 	mov	r4,r2
    3a44:	1821883a 	mov	r16,r3
    3a48:	1023883a 	mov	r17,r2
    3a4c:	000d1ec0 	call	d1ec <__fixdfsi>
    3a50:	1009883a 	mov	r4,r2
    3a54:	1029883a 	mov	r20,r2
    3a58:	000d26c0 	call	d26c <__floatsidf>
    3a5c:	8809883a 	mov	r4,r17
    3a60:	800b883a 	mov	r5,r16
    3a64:	100d883a 	mov	r6,r2
    3a68:	180f883a 	mov	r7,r3
    3a6c:	000c8f00 	call	c8f0 <__subdf3>
    3a70:	a5000c04 	addi	r20,r20,48
    3a74:	a80d883a 	mov	r6,r21
    3a78:	980f883a 	mov	r7,r19
    3a7c:	1009883a 	mov	r4,r2
    3a80:	180b883a 	mov	r5,r3
    3a84:	95000005 	stb	r20,0(r18)
    3a88:	1021883a 	mov	r16,r2
    3a8c:	1823883a 	mov	r17,r3
    3a90:	000bf900 	call	bf90 <__ledf2>
    3a94:	bdc00044 	addi	r23,r23,1
    3a98:	800d883a 	mov	r6,r16
    3a9c:	880f883a 	mov	r7,r17
    3aa0:	0009883a 	mov	r4,zero
    3aa4:	014ffc34 	movhi	r5,16368
    3aa8:	103fcf0e 	bge	r2,zero,39e8 <__alt_mem_Onchip_SRAM+0xf80039e8>
    3aac:	d8c01317 	ldw	r3,76(sp)
    3ab0:	d8c00515 	stw	r3,20(sp)
    3ab4:	d9400917 	ldw	r5,36(sp)
    3ab8:	e009883a 	mov	r4,fp
    3abc:	00063300 	call	6330 <_Bfree>
    3ac0:	d9000517 	ldw	r4,20(sp)
    3ac4:	d9802317 	ldw	r6,140(sp)
    3ac8:	d9c02517 	ldw	r7,148(sp)
    3acc:	b8000005 	stb	zero,0(r23)
    3ad0:	20800044 	addi	r2,r4,1
    3ad4:	30800015 	stw	r2,0(r6)
    3ad8:	3802aa26 	beq	r7,zero,4584 <_dtoa_r+0x1178>
    3adc:	3dc00015 	stw	r23,0(r7)
    3ae0:	d8800717 	ldw	r2,28(sp)
    3ae4:	003e7906 	br	34cc <__alt_mem_Onchip_SRAM+0xf80034cc>
    3ae8:	00800434 	movhi	r2,16
    3aec:	10bfffc4 	addi	r2,r2,-1
    3af0:	88a2703a 	and	r17,r17,r2
    3af4:	883e851e 	bne	r17,zero,350c <__alt_mem_Onchip_SRAM+0xf800350c>
    3af8:	00800074 	movhi	r2,1
    3afc:	10812504 	addi	r2,r2,1172
    3b00:	003e8406 	br	3514 <__alt_mem_Onchip_SRAM+0xf8003514>
    3b04:	10c00204 	addi	r3,r2,8
    3b08:	003e8706 	br	3528 <__alt_mem_Onchip_SRAM+0xf8003528>
    3b0c:	01400434 	movhi	r5,16
    3b10:	297fffc4 	addi	r5,r5,-1
    3b14:	994a703a 	and	r5,r19,r5
    3b18:	9009883a 	mov	r4,r18
    3b1c:	843f0044 	addi	r16,r16,-1023
    3b20:	294ffc34 	orhi	r5,r5,16368
    3b24:	dd800217 	ldw	r22,8(sp)
    3b28:	d8001115 	stw	zero,68(sp)
    3b2c:	003ea506 	br	35c4 <__alt_mem_Onchip_SRAM+0xf80035c4>
    3b30:	00800074 	movhi	r2,1
    3b34:	10811c04 	addi	r2,r2,1136
    3b38:	003e6406 	br	34cc <__alt_mem_Onchip_SRAM+0xf80034cc>
    3b3c:	e0001115 	stw	zero,68(fp)
    3b40:	000b883a 	mov	r5,zero
    3b44:	e009883a 	mov	r4,fp
    3b48:	00062880 	call	6288 <_Balloc>
    3b4c:	01bfffc4 	movi	r6,-1
    3b50:	01c00044 	movi	r7,1
    3b54:	d8800715 	stw	r2,28(sp)
    3b58:	d9800c15 	stw	r6,48(sp)
    3b5c:	e0801015 	stw	r2,64(fp)
    3b60:	d8000315 	stw	zero,12(sp)
    3b64:	d9c00b15 	stw	r7,44(sp)
    3b68:	d9800615 	stw	r6,24(sp)
    3b6c:	d8002215 	stw	zero,136(sp)
    3b70:	d8800117 	ldw	r2,4(sp)
    3b74:	10008916 	blt	r2,zero,3d9c <_dtoa_r+0x990>
    3b78:	d9000517 	ldw	r4,20(sp)
    3b7c:	00c00384 	movi	r3,14
    3b80:	19008616 	blt	r3,r4,3d9c <_dtoa_r+0x990>
    3b84:	200490fa 	slli	r2,r4,3
    3b88:	00c00074 	movhi	r3,1
    3b8c:	d9802217 	ldw	r6,136(sp)
    3b90:	18c14404 	addi	r3,r3,1296
    3b94:	1885883a 	add	r2,r3,r2
    3b98:	14000017 	ldw	r16,0(r2)
    3b9c:	14400117 	ldw	r17,4(r2)
    3ba0:	30016316 	blt	r6,zero,4130 <_dtoa_r+0xd24>
    3ba4:	800d883a 	mov	r6,r16
    3ba8:	880f883a 	mov	r7,r17
    3bac:	9009883a 	mov	r4,r18
    3bb0:	980b883a 	mov	r5,r19
    3bb4:	000b45c0 	call	b45c <__divdf3>
    3bb8:	180b883a 	mov	r5,r3
    3bbc:	1009883a 	mov	r4,r2
    3bc0:	000d1ec0 	call	d1ec <__fixdfsi>
    3bc4:	1009883a 	mov	r4,r2
    3bc8:	102b883a 	mov	r21,r2
    3bcc:	000d26c0 	call	d26c <__floatsidf>
    3bd0:	800d883a 	mov	r6,r16
    3bd4:	880f883a 	mov	r7,r17
    3bd8:	1009883a 	mov	r4,r2
    3bdc:	180b883a 	mov	r5,r3
    3be0:	000c0840 	call	c084 <__muldf3>
    3be4:	100d883a 	mov	r6,r2
    3be8:	180f883a 	mov	r7,r3
    3bec:	9009883a 	mov	r4,r18
    3bf0:	980b883a 	mov	r5,r19
    3bf4:	000c8f00 	call	c8f0 <__subdf3>
    3bf8:	d9c00717 	ldw	r7,28(sp)
    3bfc:	1009883a 	mov	r4,r2
    3c00:	a8800c04 	addi	r2,r21,48
    3c04:	38800005 	stb	r2,0(r7)
    3c08:	3dc00044 	addi	r23,r7,1
    3c0c:	d9c00617 	ldw	r7,24(sp)
    3c10:	01800044 	movi	r6,1
    3c14:	180b883a 	mov	r5,r3
    3c18:	2005883a 	mov	r2,r4
    3c1c:	39803826 	beq	r7,r6,3d00 <_dtoa_r+0x8f4>
    3c20:	000d883a 	mov	r6,zero
    3c24:	01d00934 	movhi	r7,16420
    3c28:	000c0840 	call	c084 <__muldf3>
    3c2c:	000d883a 	mov	r6,zero
    3c30:	000f883a 	mov	r7,zero
    3c34:	1009883a 	mov	r4,r2
    3c38:	180b883a 	mov	r5,r3
    3c3c:	1025883a 	mov	r18,r2
    3c40:	1827883a 	mov	r19,r3
    3c44:	000be2c0 	call	be2c <__eqdf2>
    3c48:	103f9a26 	beq	r2,zero,3ab4 <__alt_mem_Onchip_SRAM+0xf8003ab4>
    3c4c:	d9c00617 	ldw	r7,24(sp)
    3c50:	d8c00717 	ldw	r3,28(sp)
    3c54:	b829883a 	mov	r20,r23
    3c58:	38bfffc4 	addi	r2,r7,-1
    3c5c:	18ad883a 	add	r22,r3,r2
    3c60:	00000a06 	br	3c8c <_dtoa_r+0x880>
    3c64:	000c0840 	call	c084 <__muldf3>
    3c68:	000d883a 	mov	r6,zero
    3c6c:	000f883a 	mov	r7,zero
    3c70:	1009883a 	mov	r4,r2
    3c74:	180b883a 	mov	r5,r3
    3c78:	1025883a 	mov	r18,r2
    3c7c:	1827883a 	mov	r19,r3
    3c80:	b829883a 	mov	r20,r23
    3c84:	000be2c0 	call	be2c <__eqdf2>
    3c88:	103f8a26 	beq	r2,zero,3ab4 <__alt_mem_Onchip_SRAM+0xf8003ab4>
    3c8c:	800d883a 	mov	r6,r16
    3c90:	880f883a 	mov	r7,r17
    3c94:	9009883a 	mov	r4,r18
    3c98:	980b883a 	mov	r5,r19
    3c9c:	000b45c0 	call	b45c <__divdf3>
    3ca0:	180b883a 	mov	r5,r3
    3ca4:	1009883a 	mov	r4,r2
    3ca8:	000d1ec0 	call	d1ec <__fixdfsi>
    3cac:	1009883a 	mov	r4,r2
    3cb0:	102b883a 	mov	r21,r2
    3cb4:	000d26c0 	call	d26c <__floatsidf>
    3cb8:	800d883a 	mov	r6,r16
    3cbc:	880f883a 	mov	r7,r17
    3cc0:	1009883a 	mov	r4,r2
    3cc4:	180b883a 	mov	r5,r3
    3cc8:	000c0840 	call	c084 <__muldf3>
    3ccc:	100d883a 	mov	r6,r2
    3cd0:	180f883a 	mov	r7,r3
    3cd4:	9009883a 	mov	r4,r18
    3cd8:	980b883a 	mov	r5,r19
    3cdc:	000c8f00 	call	c8f0 <__subdf3>
    3ce0:	aa000c04 	addi	r8,r21,48
    3ce4:	a2000005 	stb	r8,0(r20)
    3ce8:	000d883a 	mov	r6,zero
    3cec:	01d00934 	movhi	r7,16420
    3cf0:	1009883a 	mov	r4,r2
    3cf4:	180b883a 	mov	r5,r3
    3cf8:	a5c00044 	addi	r23,r20,1
    3cfc:	b53fd91e 	bne	r22,r20,3c64 <__alt_mem_Onchip_SRAM+0xf8003c64>
    3d00:	100d883a 	mov	r6,r2
    3d04:	180f883a 	mov	r7,r3
    3d08:	1009883a 	mov	r4,r2
    3d0c:	180b883a 	mov	r5,r3
    3d10:	000abb00 	call	abb0 <__adddf3>
    3d14:	100d883a 	mov	r6,r2
    3d18:	180f883a 	mov	r7,r3
    3d1c:	8009883a 	mov	r4,r16
    3d20:	880b883a 	mov	r5,r17
    3d24:	1027883a 	mov	r19,r2
    3d28:	1825883a 	mov	r18,r3
    3d2c:	000bf900 	call	bf90 <__ledf2>
    3d30:	10000816 	blt	r2,zero,3d54 <_dtoa_r+0x948>
    3d34:	980d883a 	mov	r6,r19
    3d38:	900f883a 	mov	r7,r18
    3d3c:	8009883a 	mov	r4,r16
    3d40:	880b883a 	mov	r5,r17
    3d44:	000be2c0 	call	be2c <__eqdf2>
    3d48:	103f5a1e 	bne	r2,zero,3ab4 <__alt_mem_Onchip_SRAM+0xf8003ab4>
    3d4c:	ad40004c 	andi	r21,r21,1
    3d50:	a83f5826 	beq	r21,zero,3ab4 <__alt_mem_Onchip_SRAM+0xf8003ab4>
    3d54:	bd3fffc3 	ldbu	r20,-1(r23)
    3d58:	b8bfffc4 	addi	r2,r23,-1
    3d5c:	1007883a 	mov	r3,r2
    3d60:	01400e44 	movi	r5,57
    3d64:	d9800717 	ldw	r6,28(sp)
    3d68:	00000506 	br	3d80 <_dtoa_r+0x974>
    3d6c:	18ffffc4 	addi	r3,r3,-1
    3d70:	11824726 	beq	r2,r6,4690 <_dtoa_r+0x1284>
    3d74:	1d000003 	ldbu	r20,0(r3)
    3d78:	102f883a 	mov	r23,r2
    3d7c:	10bfffc4 	addi	r2,r2,-1
    3d80:	a1003fcc 	andi	r4,r20,255
    3d84:	2100201c 	xori	r4,r4,128
    3d88:	213fe004 	addi	r4,r4,-128
    3d8c:	217ff726 	beq	r4,r5,3d6c <__alt_mem_Onchip_SRAM+0xf8003d6c>
    3d90:	a2000044 	addi	r8,r20,1
    3d94:	12000005 	stb	r8,0(r2)
    3d98:	003f4606 	br	3ab4 <__alt_mem_Onchip_SRAM+0xf8003ab4>
    3d9c:	d9000b17 	ldw	r4,44(sp)
    3da0:	2000c826 	beq	r4,zero,40c4 <_dtoa_r+0xcb8>
    3da4:	d9800317 	ldw	r6,12(sp)
    3da8:	00c00044 	movi	r3,1
    3dac:	1980f90e 	bge	r3,r6,4194 <_dtoa_r+0xd88>
    3db0:	d8800617 	ldw	r2,24(sp)
    3db4:	d8c00a17 	ldw	r3,40(sp)
    3db8:	157fffc4 	addi	r21,r2,-1
    3dbc:	1d41f316 	blt	r3,r21,458c <_dtoa_r+0x1180>
    3dc0:	1d6bc83a 	sub	r21,r3,r21
    3dc4:	d9c00617 	ldw	r7,24(sp)
    3dc8:	3802aa16 	blt	r7,zero,4874 <_dtoa_r+0x1468>
    3dcc:	dd000817 	ldw	r20,32(sp)
    3dd0:	d8800617 	ldw	r2,24(sp)
    3dd4:	d8c00817 	ldw	r3,32(sp)
    3dd8:	01400044 	movi	r5,1
    3ddc:	e009883a 	mov	r4,fp
    3de0:	1887883a 	add	r3,r3,r2
    3de4:	d8c00815 	stw	r3,32(sp)
    3de8:	b0ad883a 	add	r22,r22,r2
    3dec:	00066bc0 	call	66bc <__i2b>
    3df0:	1023883a 	mov	r17,r2
    3df4:	a0000826 	beq	r20,zero,3e18 <_dtoa_r+0xa0c>
    3df8:	0580070e 	bge	zero,r22,3e18 <_dtoa_r+0xa0c>
    3dfc:	a005883a 	mov	r2,r20
    3e00:	b500b916 	blt	r22,r20,40e8 <_dtoa_r+0xcdc>
    3e04:	d9000817 	ldw	r4,32(sp)
    3e08:	a0a9c83a 	sub	r20,r20,r2
    3e0c:	b0adc83a 	sub	r22,r22,r2
    3e10:	2089c83a 	sub	r4,r4,r2
    3e14:	d9000815 	stw	r4,32(sp)
    3e18:	d9800a17 	ldw	r6,40(sp)
    3e1c:	0181810e 	bge	zero,r6,4424 <_dtoa_r+0x1018>
    3e20:	d9c00b17 	ldw	r7,44(sp)
    3e24:	3800b326 	beq	r7,zero,40f4 <_dtoa_r+0xce8>
    3e28:	a800b226 	beq	r21,zero,40f4 <_dtoa_r+0xce8>
    3e2c:	880b883a 	mov	r5,r17
    3e30:	a80d883a 	mov	r6,r21
    3e34:	e009883a 	mov	r4,fp
    3e38:	00069840 	call	6984 <__pow5mult>
    3e3c:	d9800917 	ldw	r6,36(sp)
    3e40:	100b883a 	mov	r5,r2
    3e44:	e009883a 	mov	r4,fp
    3e48:	1023883a 	mov	r17,r2
    3e4c:	00066f80 	call	66f8 <__multiply>
    3e50:	1021883a 	mov	r16,r2
    3e54:	d8800a17 	ldw	r2,40(sp)
    3e58:	d9400917 	ldw	r5,36(sp)
    3e5c:	e009883a 	mov	r4,fp
    3e60:	1545c83a 	sub	r2,r2,r21
    3e64:	d8800a15 	stw	r2,40(sp)
    3e68:	00063300 	call	6330 <_Bfree>
    3e6c:	d8c00a17 	ldw	r3,40(sp)
    3e70:	18009f1e 	bne	r3,zero,40f0 <_dtoa_r+0xce4>
    3e74:	05c00044 	movi	r23,1
    3e78:	e009883a 	mov	r4,fp
    3e7c:	b80b883a 	mov	r5,r23
    3e80:	00066bc0 	call	66bc <__i2b>
    3e84:	d9000d17 	ldw	r4,52(sp)
    3e88:	102b883a 	mov	r21,r2
    3e8c:	2000ce26 	beq	r4,zero,41c8 <_dtoa_r+0xdbc>
    3e90:	200d883a 	mov	r6,r4
    3e94:	100b883a 	mov	r5,r2
    3e98:	e009883a 	mov	r4,fp
    3e9c:	00069840 	call	6984 <__pow5mult>
    3ea0:	d9800317 	ldw	r6,12(sp)
    3ea4:	102b883a 	mov	r21,r2
    3ea8:	b981810e 	bge	r23,r6,44b0 <_dtoa_r+0x10a4>
    3eac:	0027883a 	mov	r19,zero
    3eb0:	a8800417 	ldw	r2,16(r21)
    3eb4:	05c00804 	movi	r23,32
    3eb8:	10800104 	addi	r2,r2,4
    3ebc:	1085883a 	add	r2,r2,r2
    3ec0:	1085883a 	add	r2,r2,r2
    3ec4:	a885883a 	add	r2,r21,r2
    3ec8:	11000017 	ldw	r4,0(r2)
    3ecc:	00065a40 	call	65a4 <__hi0bits>
    3ed0:	b885c83a 	sub	r2,r23,r2
    3ed4:	1585883a 	add	r2,r2,r22
    3ed8:	108007cc 	andi	r2,r2,31
    3edc:	1000b326 	beq	r2,zero,41ac <_dtoa_r+0xda0>
    3ee0:	00c00804 	movi	r3,32
    3ee4:	1887c83a 	sub	r3,r3,r2
    3ee8:	01000104 	movi	r4,4
    3eec:	20c2cd0e 	bge	r4,r3,4a24 <_dtoa_r+0x1618>
    3ef0:	00c00704 	movi	r3,28
    3ef4:	1885c83a 	sub	r2,r3,r2
    3ef8:	d8c00817 	ldw	r3,32(sp)
    3efc:	a0a9883a 	add	r20,r20,r2
    3f00:	b0ad883a 	add	r22,r22,r2
    3f04:	1887883a 	add	r3,r3,r2
    3f08:	d8c00815 	stw	r3,32(sp)
    3f0c:	d9800817 	ldw	r6,32(sp)
    3f10:	0180040e 	bge	zero,r6,3f24 <_dtoa_r+0xb18>
    3f14:	800b883a 	mov	r5,r16
    3f18:	e009883a 	mov	r4,fp
    3f1c:	0006ac40 	call	6ac4 <__lshift>
    3f20:	1021883a 	mov	r16,r2
    3f24:	0580050e 	bge	zero,r22,3f3c <_dtoa_r+0xb30>
    3f28:	a80b883a 	mov	r5,r21
    3f2c:	b00d883a 	mov	r6,r22
    3f30:	e009883a 	mov	r4,fp
    3f34:	0006ac40 	call	6ac4 <__lshift>
    3f38:	102b883a 	mov	r21,r2
    3f3c:	d9c00e17 	ldw	r7,56(sp)
    3f40:	3801211e 	bne	r7,zero,43c8 <_dtoa_r+0xfbc>
    3f44:	d9800617 	ldw	r6,24(sp)
    3f48:	0181380e 	bge	zero,r6,442c <_dtoa_r+0x1020>
    3f4c:	d8c00b17 	ldw	r3,44(sp)
    3f50:	1800ab1e 	bne	r3,zero,4200 <_dtoa_r+0xdf4>
    3f54:	dc800717 	ldw	r18,28(sp)
    3f58:	dcc00617 	ldw	r19,24(sp)
    3f5c:	9029883a 	mov	r20,r18
    3f60:	00000206 	br	3f6c <_dtoa_r+0xb60>
    3f64:	00063580 	call	6358 <__multadd>
    3f68:	1021883a 	mov	r16,r2
    3f6c:	a80b883a 	mov	r5,r21
    3f70:	8009883a 	mov	r4,r16
    3f74:	00031e40 	call	31e4 <quorem>
    3f78:	10800c04 	addi	r2,r2,48
    3f7c:	90800005 	stb	r2,0(r18)
    3f80:	94800044 	addi	r18,r18,1
    3f84:	9507c83a 	sub	r3,r18,r20
    3f88:	000f883a 	mov	r7,zero
    3f8c:	01800284 	movi	r6,10
    3f90:	800b883a 	mov	r5,r16
    3f94:	e009883a 	mov	r4,fp
    3f98:	1cfff216 	blt	r3,r19,3f64 <__alt_mem_Onchip_SRAM+0xf8003f64>
    3f9c:	1011883a 	mov	r8,r2
    3fa0:	d8800617 	ldw	r2,24(sp)
    3fa4:	0082370e 	bge	zero,r2,4884 <_dtoa_r+0x1478>
    3fa8:	d9000717 	ldw	r4,28(sp)
    3fac:	0025883a 	mov	r18,zero
    3fb0:	20af883a 	add	r23,r4,r2
    3fb4:	01800044 	movi	r6,1
    3fb8:	800b883a 	mov	r5,r16
    3fbc:	e009883a 	mov	r4,fp
    3fc0:	da001715 	stw	r8,92(sp)
    3fc4:	0006ac40 	call	6ac4 <__lshift>
    3fc8:	a80b883a 	mov	r5,r21
    3fcc:	1009883a 	mov	r4,r2
    3fd0:	d8800915 	stw	r2,36(sp)
    3fd4:	0006c0c0 	call	6c0c <__mcmp>
    3fd8:	da001717 	ldw	r8,92(sp)
    3fdc:	0081800e 	bge	zero,r2,45e0 <_dtoa_r+0x11d4>
    3fe0:	b93fffc3 	ldbu	r4,-1(r23)
    3fe4:	b8bfffc4 	addi	r2,r23,-1
    3fe8:	1007883a 	mov	r3,r2
    3fec:	01800e44 	movi	r6,57
    3ff0:	d9c00717 	ldw	r7,28(sp)
    3ff4:	00000506 	br	400c <_dtoa_r+0xc00>
    3ff8:	18ffffc4 	addi	r3,r3,-1
    3ffc:	11c12326 	beq	r2,r7,448c <_dtoa_r+0x1080>
    4000:	19000003 	ldbu	r4,0(r3)
    4004:	102f883a 	mov	r23,r2
    4008:	10bfffc4 	addi	r2,r2,-1
    400c:	21403fcc 	andi	r5,r4,255
    4010:	2940201c 	xori	r5,r5,128
    4014:	297fe004 	addi	r5,r5,-128
    4018:	29bff726 	beq	r5,r6,3ff8 <__alt_mem_Onchip_SRAM+0xf8003ff8>
    401c:	21000044 	addi	r4,r4,1
    4020:	11000005 	stb	r4,0(r2)
    4024:	a80b883a 	mov	r5,r21
    4028:	e009883a 	mov	r4,fp
    402c:	00063300 	call	6330 <_Bfree>
    4030:	883ea026 	beq	r17,zero,3ab4 <__alt_mem_Onchip_SRAM+0xf8003ab4>
    4034:	90000426 	beq	r18,zero,4048 <_dtoa_r+0xc3c>
    4038:	94400326 	beq	r18,r17,4048 <_dtoa_r+0xc3c>
    403c:	900b883a 	mov	r5,r18
    4040:	e009883a 	mov	r4,fp
    4044:	00063300 	call	6330 <_Bfree>
    4048:	880b883a 	mov	r5,r17
    404c:	e009883a 	mov	r4,fp
    4050:	00063300 	call	6330 <_Bfree>
    4054:	003e9706 	br	3ab4 <__alt_mem_Onchip_SRAM+0xf8003ab4>
    4058:	01800044 	movi	r6,1
    405c:	d9800e15 	stw	r6,56(sp)
    4060:	003d9606 	br	36bc <__alt_mem_Onchip_SRAM+0xf80036bc>
    4064:	d8800817 	ldw	r2,32(sp)
    4068:	d8c00517 	ldw	r3,20(sp)
    406c:	d8000d15 	stw	zero,52(sp)
    4070:	10c5c83a 	sub	r2,r2,r3
    4074:	00c9c83a 	sub	r4,zero,r3
    4078:	d8800815 	stw	r2,32(sp)
    407c:	d9000a15 	stw	r4,40(sp)
    4080:	003d9706 	br	36e0 <__alt_mem_Onchip_SRAM+0xf80036e0>
    4084:	05adc83a 	sub	r22,zero,r22
    4088:	dd800815 	stw	r22,32(sp)
    408c:	002d883a 	mov	r22,zero
    4090:	003d8e06 	br	36cc <__alt_mem_Onchip_SRAM+0xf80036cc>
    4094:	d9000517 	ldw	r4,20(sp)
    4098:	000d26c0 	call	d26c <__floatsidf>
    409c:	100d883a 	mov	r6,r2
    40a0:	180f883a 	mov	r7,r3
    40a4:	a009883a 	mov	r4,r20
    40a8:	880b883a 	mov	r5,r17
    40ac:	000be2c0 	call	be2c <__eqdf2>
    40b0:	103d7126 	beq	r2,zero,3678 <__alt_mem_Onchip_SRAM+0xf8003678>
    40b4:	d9c00517 	ldw	r7,20(sp)
    40b8:	39ffffc4 	addi	r7,r7,-1
    40bc:	d9c00515 	stw	r7,20(sp)
    40c0:	003d6d06 	br	3678 <__alt_mem_Onchip_SRAM+0xf8003678>
    40c4:	dd400a17 	ldw	r21,40(sp)
    40c8:	dd000817 	ldw	r20,32(sp)
    40cc:	0023883a 	mov	r17,zero
    40d0:	003f4806 	br	3df4 <__alt_mem_Onchip_SRAM+0xf8003df4>
    40d4:	10e3c83a 	sub	r17,r2,r3
    40d8:	9448983a 	sll	r4,r18,r17
    40dc:	003d3206 	br	35a8 <__alt_mem_Onchip_SRAM+0xf80035a8>
    40e0:	d8000e15 	stw	zero,56(sp)
    40e4:	003d7506 	br	36bc <__alt_mem_Onchip_SRAM+0xf80036bc>
    40e8:	b005883a 	mov	r2,r22
    40ec:	003f4506 	br	3e04 <__alt_mem_Onchip_SRAM+0xf8003e04>
    40f0:	dc000915 	stw	r16,36(sp)
    40f4:	d9800a17 	ldw	r6,40(sp)
    40f8:	d9400917 	ldw	r5,36(sp)
    40fc:	e009883a 	mov	r4,fp
    4100:	00069840 	call	6984 <__pow5mult>
    4104:	1021883a 	mov	r16,r2
    4108:	003f5a06 	br	3e74 <__alt_mem_Onchip_SRAM+0xf8003e74>
    410c:	01c00044 	movi	r7,1
    4110:	d9c00b15 	stw	r7,44(sp)
    4114:	d8802217 	ldw	r2,136(sp)
    4118:	0081280e 	bge	zero,r2,45bc <_dtoa_r+0x11b0>
    411c:	100d883a 	mov	r6,r2
    4120:	1021883a 	mov	r16,r2
    4124:	d8800c15 	stw	r2,48(sp)
    4128:	d8800615 	stw	r2,24(sp)
    412c:	003d8806 	br	3750 <__alt_mem_Onchip_SRAM+0xf8003750>
    4130:	d8800617 	ldw	r2,24(sp)
    4134:	00be9b16 	blt	zero,r2,3ba4 <__alt_mem_Onchip_SRAM+0xf8003ba4>
    4138:	10010f1e 	bne	r2,zero,4578 <_dtoa_r+0x116c>
    413c:	880b883a 	mov	r5,r17
    4140:	000d883a 	mov	r6,zero
    4144:	01d00534 	movhi	r7,16404
    4148:	8009883a 	mov	r4,r16
    414c:	000c0840 	call	c084 <__muldf3>
    4150:	900d883a 	mov	r6,r18
    4154:	980f883a 	mov	r7,r19
    4158:	1009883a 	mov	r4,r2
    415c:	180b883a 	mov	r5,r3
    4160:	000beb40 	call	beb4 <__gedf2>
    4164:	002b883a 	mov	r21,zero
    4168:	0023883a 	mov	r17,zero
    416c:	1000bf16 	blt	r2,zero,446c <_dtoa_r+0x1060>
    4170:	d9802217 	ldw	r6,136(sp)
    4174:	ddc00717 	ldw	r23,28(sp)
    4178:	018c303a 	nor	r6,zero,r6
    417c:	d9800515 	stw	r6,20(sp)
    4180:	a80b883a 	mov	r5,r21
    4184:	e009883a 	mov	r4,fp
    4188:	00063300 	call	6330 <_Bfree>
    418c:	883e4926 	beq	r17,zero,3ab4 <__alt_mem_Onchip_SRAM+0xf8003ab4>
    4190:	003fad06 	br	4048 <__alt_mem_Onchip_SRAM+0xf8004048>
    4194:	d9c01117 	ldw	r7,68(sp)
    4198:	3801bc26 	beq	r7,zero,488c <_dtoa_r+0x1480>
    419c:	10810cc4 	addi	r2,r2,1075
    41a0:	dd400a17 	ldw	r21,40(sp)
    41a4:	dd000817 	ldw	r20,32(sp)
    41a8:	003f0a06 	br	3dd4 <__alt_mem_Onchip_SRAM+0xf8003dd4>
    41ac:	00800704 	movi	r2,28
    41b0:	d9000817 	ldw	r4,32(sp)
    41b4:	a0a9883a 	add	r20,r20,r2
    41b8:	b0ad883a 	add	r22,r22,r2
    41bc:	2089883a 	add	r4,r4,r2
    41c0:	d9000815 	stw	r4,32(sp)
    41c4:	003f5106 	br	3f0c <__alt_mem_Onchip_SRAM+0xf8003f0c>
    41c8:	d8c00317 	ldw	r3,12(sp)
    41cc:	b8c1fc0e 	bge	r23,r3,49c0 <_dtoa_r+0x15b4>
    41d0:	0027883a 	mov	r19,zero
    41d4:	b805883a 	mov	r2,r23
    41d8:	003f3e06 	br	3ed4 <__alt_mem_Onchip_SRAM+0xf8003ed4>
    41dc:	880b883a 	mov	r5,r17
    41e0:	e009883a 	mov	r4,fp
    41e4:	000f883a 	mov	r7,zero
    41e8:	01800284 	movi	r6,10
    41ec:	00063580 	call	6358 <__multadd>
    41f0:	d9000c17 	ldw	r4,48(sp)
    41f4:	1023883a 	mov	r17,r2
    41f8:	0102040e 	bge	zero,r4,4a0c <_dtoa_r+0x1600>
    41fc:	d9000615 	stw	r4,24(sp)
    4200:	0500050e 	bge	zero,r20,4218 <_dtoa_r+0xe0c>
    4204:	880b883a 	mov	r5,r17
    4208:	a00d883a 	mov	r6,r20
    420c:	e009883a 	mov	r4,fp
    4210:	0006ac40 	call	6ac4 <__lshift>
    4214:	1023883a 	mov	r17,r2
    4218:	9801241e 	bne	r19,zero,46ac <_dtoa_r+0x12a0>
    421c:	8829883a 	mov	r20,r17
    4220:	d9000617 	ldw	r4,24(sp)
    4224:	dcc00717 	ldw	r19,28(sp)
    4228:	9480004c 	andi	r18,r18,1
    422c:	20bfffc4 	addi	r2,r4,-1
    4230:	9885883a 	add	r2,r19,r2
    4234:	d8800415 	stw	r2,16(sp)
    4238:	dc800615 	stw	r18,24(sp)
    423c:	a80b883a 	mov	r5,r21
    4240:	8009883a 	mov	r4,r16
    4244:	00031e40 	call	31e4 <quorem>
    4248:	880b883a 	mov	r5,r17
    424c:	8009883a 	mov	r4,r16
    4250:	102f883a 	mov	r23,r2
    4254:	0006c0c0 	call	6c0c <__mcmp>
    4258:	a80b883a 	mov	r5,r21
    425c:	a00d883a 	mov	r6,r20
    4260:	e009883a 	mov	r4,fp
    4264:	102d883a 	mov	r22,r2
    4268:	0006c6c0 	call	6c6c <__mdiff>
    426c:	1007883a 	mov	r3,r2
    4270:	10800317 	ldw	r2,12(r2)
    4274:	bc800c04 	addi	r18,r23,48
    4278:	180b883a 	mov	r5,r3
    427c:	10004e1e 	bne	r2,zero,43b8 <_dtoa_r+0xfac>
    4280:	8009883a 	mov	r4,r16
    4284:	d8c01615 	stw	r3,88(sp)
    4288:	0006c0c0 	call	6c0c <__mcmp>
    428c:	d8c01617 	ldw	r3,88(sp)
    4290:	e009883a 	mov	r4,fp
    4294:	d8801615 	stw	r2,88(sp)
    4298:	180b883a 	mov	r5,r3
    429c:	00063300 	call	6330 <_Bfree>
    42a0:	d8801617 	ldw	r2,88(sp)
    42a4:	1000041e 	bne	r2,zero,42b8 <_dtoa_r+0xeac>
    42a8:	d9800317 	ldw	r6,12(sp)
    42ac:	3000021e 	bne	r6,zero,42b8 <_dtoa_r+0xeac>
    42b0:	d8c00617 	ldw	r3,24(sp)
    42b4:	18003726 	beq	r3,zero,4394 <_dtoa_r+0xf88>
    42b8:	b0002016 	blt	r22,zero,433c <_dtoa_r+0xf30>
    42bc:	b000041e 	bne	r22,zero,42d0 <_dtoa_r+0xec4>
    42c0:	d9000317 	ldw	r4,12(sp)
    42c4:	2000021e 	bne	r4,zero,42d0 <_dtoa_r+0xec4>
    42c8:	d8c00617 	ldw	r3,24(sp)
    42cc:	18001b26 	beq	r3,zero,433c <_dtoa_r+0xf30>
    42d0:	00810716 	blt	zero,r2,46f0 <_dtoa_r+0x12e4>
    42d4:	d8c00417 	ldw	r3,16(sp)
    42d8:	9d800044 	addi	r22,r19,1
    42dc:	9c800005 	stb	r18,0(r19)
    42e0:	b02f883a 	mov	r23,r22
    42e4:	98c10626 	beq	r19,r3,4700 <_dtoa_r+0x12f4>
    42e8:	800b883a 	mov	r5,r16
    42ec:	000f883a 	mov	r7,zero
    42f0:	01800284 	movi	r6,10
    42f4:	e009883a 	mov	r4,fp
    42f8:	00063580 	call	6358 <__multadd>
    42fc:	1021883a 	mov	r16,r2
    4300:	000f883a 	mov	r7,zero
    4304:	01800284 	movi	r6,10
    4308:	880b883a 	mov	r5,r17
    430c:	e009883a 	mov	r4,fp
    4310:	8d002526 	beq	r17,r20,43a8 <_dtoa_r+0xf9c>
    4314:	00063580 	call	6358 <__multadd>
    4318:	a00b883a 	mov	r5,r20
    431c:	000f883a 	mov	r7,zero
    4320:	01800284 	movi	r6,10
    4324:	e009883a 	mov	r4,fp
    4328:	1023883a 	mov	r17,r2
    432c:	00063580 	call	6358 <__multadd>
    4330:	1029883a 	mov	r20,r2
    4334:	b027883a 	mov	r19,r22
    4338:	003fc006 	br	423c <__alt_mem_Onchip_SRAM+0xf800423c>
    433c:	9011883a 	mov	r8,r18
    4340:	00800e0e 	bge	zero,r2,437c <_dtoa_r+0xf70>
    4344:	800b883a 	mov	r5,r16
    4348:	01800044 	movi	r6,1
    434c:	e009883a 	mov	r4,fp
    4350:	da001715 	stw	r8,92(sp)
    4354:	0006ac40 	call	6ac4 <__lshift>
    4358:	a80b883a 	mov	r5,r21
    435c:	1009883a 	mov	r4,r2
    4360:	1021883a 	mov	r16,r2
    4364:	0006c0c0 	call	6c0c <__mcmp>
    4368:	da001717 	ldw	r8,92(sp)
    436c:	0081960e 	bge	zero,r2,49c8 <_dtoa_r+0x15bc>
    4370:	00800e44 	movi	r2,57
    4374:	40817026 	beq	r8,r2,4938 <_dtoa_r+0x152c>
    4378:	ba000c44 	addi	r8,r23,49
    437c:	8825883a 	mov	r18,r17
    4380:	9dc00044 	addi	r23,r19,1
    4384:	9a000005 	stb	r8,0(r19)
    4388:	a023883a 	mov	r17,r20
    438c:	dc000915 	stw	r16,36(sp)
    4390:	003f2406 	br	4024 <__alt_mem_Onchip_SRAM+0xf8004024>
    4394:	00800e44 	movi	r2,57
    4398:	9011883a 	mov	r8,r18
    439c:	90816626 	beq	r18,r2,4938 <_dtoa_r+0x152c>
    43a0:	05bff516 	blt	zero,r22,4378 <__alt_mem_Onchip_SRAM+0xf8004378>
    43a4:	003ff506 	br	437c <__alt_mem_Onchip_SRAM+0xf800437c>
    43a8:	00063580 	call	6358 <__multadd>
    43ac:	1023883a 	mov	r17,r2
    43b0:	1029883a 	mov	r20,r2
    43b4:	003fdf06 	br	4334 <__alt_mem_Onchip_SRAM+0xf8004334>
    43b8:	e009883a 	mov	r4,fp
    43bc:	00063300 	call	6330 <_Bfree>
    43c0:	00800044 	movi	r2,1
    43c4:	003fbc06 	br	42b8 <__alt_mem_Onchip_SRAM+0xf80042b8>
    43c8:	a80b883a 	mov	r5,r21
    43cc:	8009883a 	mov	r4,r16
    43d0:	0006c0c0 	call	6c0c <__mcmp>
    43d4:	103edb0e 	bge	r2,zero,3f44 <__alt_mem_Onchip_SRAM+0xf8003f44>
    43d8:	800b883a 	mov	r5,r16
    43dc:	000f883a 	mov	r7,zero
    43e0:	01800284 	movi	r6,10
    43e4:	e009883a 	mov	r4,fp
    43e8:	00063580 	call	6358 <__multadd>
    43ec:	1021883a 	mov	r16,r2
    43f0:	d8800517 	ldw	r2,20(sp)
    43f4:	d8c00b17 	ldw	r3,44(sp)
    43f8:	10bfffc4 	addi	r2,r2,-1
    43fc:	d8800515 	stw	r2,20(sp)
    4400:	183f761e 	bne	r3,zero,41dc <__alt_mem_Onchip_SRAM+0xf80041dc>
    4404:	d9000c17 	ldw	r4,48(sp)
    4408:	0101730e 	bge	zero,r4,49d8 <_dtoa_r+0x15cc>
    440c:	d9000615 	stw	r4,24(sp)
    4410:	003ed006 	br	3f54 <__alt_mem_Onchip_SRAM+0xf8003f54>
    4414:	00800084 	movi	r2,2
    4418:	3081861e 	bne	r6,r2,4a34 <_dtoa_r+0x1628>
    441c:	d8000b15 	stw	zero,44(sp)
    4420:	003f3c06 	br	4114 <__alt_mem_Onchip_SRAM+0xf8004114>
    4424:	dc000917 	ldw	r16,36(sp)
    4428:	003e9206 	br	3e74 <__alt_mem_Onchip_SRAM+0xf8003e74>
    442c:	d9c00317 	ldw	r7,12(sp)
    4430:	00800084 	movi	r2,2
    4434:	11fec50e 	bge	r2,r7,3f4c <__alt_mem_Onchip_SRAM+0xf8003f4c>
    4438:	d9000617 	ldw	r4,24(sp)
    443c:	20013c1e 	bne	r4,zero,4930 <_dtoa_r+0x1524>
    4440:	a80b883a 	mov	r5,r21
    4444:	000f883a 	mov	r7,zero
    4448:	01800144 	movi	r6,5
    444c:	e009883a 	mov	r4,fp
    4450:	00063580 	call	6358 <__multadd>
    4454:	100b883a 	mov	r5,r2
    4458:	8009883a 	mov	r4,r16
    445c:	102b883a 	mov	r21,r2
    4460:	0006c0c0 	call	6c0c <__mcmp>
    4464:	dc000915 	stw	r16,36(sp)
    4468:	00bf410e 	bge	zero,r2,4170 <__alt_mem_Onchip_SRAM+0xf8004170>
    446c:	d9c00717 	ldw	r7,28(sp)
    4470:	00800c44 	movi	r2,49
    4474:	38800005 	stb	r2,0(r7)
    4478:	d8800517 	ldw	r2,20(sp)
    447c:	3dc00044 	addi	r23,r7,1
    4480:	10800044 	addi	r2,r2,1
    4484:	d8800515 	stw	r2,20(sp)
    4488:	003f3d06 	br	4180 <__alt_mem_Onchip_SRAM+0xf8004180>
    448c:	d9800517 	ldw	r6,20(sp)
    4490:	d9c00717 	ldw	r7,28(sp)
    4494:	00800c44 	movi	r2,49
    4498:	31800044 	addi	r6,r6,1
    449c:	d9800515 	stw	r6,20(sp)
    44a0:	38800005 	stb	r2,0(r7)
    44a4:	003edf06 	br	4024 <__alt_mem_Onchip_SRAM+0xf8004024>
    44a8:	d8000b15 	stw	zero,44(sp)
    44ac:	003c9f06 	br	372c <__alt_mem_Onchip_SRAM+0xf800372c>
    44b0:	903e7e1e 	bne	r18,zero,3eac <__alt_mem_Onchip_SRAM+0xf8003eac>
    44b4:	00800434 	movhi	r2,16
    44b8:	10bfffc4 	addi	r2,r2,-1
    44bc:	9884703a 	and	r2,r19,r2
    44c0:	1000ea1e 	bne	r2,zero,486c <_dtoa_r+0x1460>
    44c4:	9cdffc2c 	andhi	r19,r19,32752
    44c8:	9800e826 	beq	r19,zero,486c <_dtoa_r+0x1460>
    44cc:	d9c00817 	ldw	r7,32(sp)
    44d0:	b5800044 	addi	r22,r22,1
    44d4:	04c00044 	movi	r19,1
    44d8:	39c00044 	addi	r7,r7,1
    44dc:	d9c00815 	stw	r7,32(sp)
    44e0:	d8800d17 	ldw	r2,52(sp)
    44e4:	103e721e 	bne	r2,zero,3eb0 <__alt_mem_Onchip_SRAM+0xf8003eb0>
    44e8:	00800044 	movi	r2,1
    44ec:	003e7906 	br	3ed4 <__alt_mem_Onchip_SRAM+0xf8003ed4>
    44f0:	8009883a 	mov	r4,r16
    44f4:	000d26c0 	call	d26c <__floatsidf>
    44f8:	d9800f17 	ldw	r6,60(sp)
    44fc:	d9c01017 	ldw	r7,64(sp)
    4500:	1009883a 	mov	r4,r2
    4504:	180b883a 	mov	r5,r3
    4508:	000c0840 	call	c084 <__muldf3>
    450c:	000d883a 	mov	r6,zero
    4510:	01d00734 	movhi	r7,16412
    4514:	1009883a 	mov	r4,r2
    4518:	180b883a 	mov	r5,r3
    451c:	000abb00 	call	abb0 <__adddf3>
    4520:	047f3034 	movhi	r17,64704
    4524:	1021883a 	mov	r16,r2
    4528:	1c63883a 	add	r17,r3,r17
    452c:	d9000f17 	ldw	r4,60(sp)
    4530:	d9401017 	ldw	r5,64(sp)
    4534:	000d883a 	mov	r6,zero
    4538:	01d00534 	movhi	r7,16404
    453c:	000c8f00 	call	c8f0 <__subdf3>
    4540:	800d883a 	mov	r6,r16
    4544:	880f883a 	mov	r7,r17
    4548:	1009883a 	mov	r4,r2
    454c:	180b883a 	mov	r5,r3
    4550:	102b883a 	mov	r21,r2
    4554:	1829883a 	mov	r20,r3
    4558:	000beb40 	call	beb4 <__gedf2>
    455c:	00806c16 	blt	zero,r2,4710 <_dtoa_r+0x1304>
    4560:	89e0003c 	xorhi	r7,r17,32768
    4564:	800d883a 	mov	r6,r16
    4568:	a809883a 	mov	r4,r21
    456c:	a00b883a 	mov	r5,r20
    4570:	000bf900 	call	bf90 <__ledf2>
    4574:	103d7e0e 	bge	r2,zero,3b70 <__alt_mem_Onchip_SRAM+0xf8003b70>
    4578:	002b883a 	mov	r21,zero
    457c:	0023883a 	mov	r17,zero
    4580:	003efb06 	br	4170 <__alt_mem_Onchip_SRAM+0xf8004170>
    4584:	d8800717 	ldw	r2,28(sp)
    4588:	003bd006 	br	34cc <__alt_mem_Onchip_SRAM+0xf80034cc>
    458c:	d9000a17 	ldw	r4,40(sp)
    4590:	d9800d17 	ldw	r6,52(sp)
    4594:	dd400a15 	stw	r21,40(sp)
    4598:	a905c83a 	sub	r2,r21,r4
    459c:	308d883a 	add	r6,r6,r2
    45a0:	d9800d15 	stw	r6,52(sp)
    45a4:	002b883a 	mov	r21,zero
    45a8:	003e0606 	br	3dc4 <__alt_mem_Onchip_SRAM+0xf8003dc4>
    45ac:	9023883a 	mov	r17,r18
    45b0:	9829883a 	mov	r20,r19
    45b4:	04000084 	movi	r16,2
    45b8:	003c9206 	br	3804 <__alt_mem_Onchip_SRAM+0xf8003804>
    45bc:	04000044 	movi	r16,1
    45c0:	dc000c15 	stw	r16,48(sp)
    45c4:	dc000615 	stw	r16,24(sp)
    45c8:	dc002215 	stw	r16,136(sp)
    45cc:	e0001115 	stw	zero,68(fp)
    45d0:	000b883a 	mov	r5,zero
    45d4:	003c6906 	br	377c <__alt_mem_Onchip_SRAM+0xf800377c>
    45d8:	3021883a 	mov	r16,r6
    45dc:	003ffb06 	br	45cc <__alt_mem_Onchip_SRAM+0xf80045cc>
    45e0:	1000021e 	bne	r2,zero,45ec <_dtoa_r+0x11e0>
    45e4:	4200004c 	andi	r8,r8,1
    45e8:	403e7d1e 	bne	r8,zero,3fe0 <__alt_mem_Onchip_SRAM+0xf8003fe0>
    45ec:	01000c04 	movi	r4,48
    45f0:	00000106 	br	45f8 <_dtoa_r+0x11ec>
    45f4:	102f883a 	mov	r23,r2
    45f8:	b8bfffc4 	addi	r2,r23,-1
    45fc:	10c00007 	ldb	r3,0(r2)
    4600:	193ffc26 	beq	r3,r4,45f4 <__alt_mem_Onchip_SRAM+0xf80045f4>
    4604:	003e8706 	br	4024 <__alt_mem_Onchip_SRAM+0xf8004024>
    4608:	d8800517 	ldw	r2,20(sp)
    460c:	00a3c83a 	sub	r17,zero,r2
    4610:	8800a426 	beq	r17,zero,48a4 <_dtoa_r+0x1498>
    4614:	888003cc 	andi	r2,r17,15
    4618:	100490fa 	slli	r2,r2,3
    461c:	00c00074 	movhi	r3,1
    4620:	18c14404 	addi	r3,r3,1296
    4624:	1885883a 	add	r2,r3,r2
    4628:	11800017 	ldw	r6,0(r2)
    462c:	11c00117 	ldw	r7,4(r2)
    4630:	9009883a 	mov	r4,r18
    4634:	980b883a 	mov	r5,r19
    4638:	8823d13a 	srai	r17,r17,4
    463c:	000c0840 	call	c084 <__muldf3>
    4640:	d8800f15 	stw	r2,60(sp)
    4644:	d8c01015 	stw	r3,64(sp)
    4648:	8800e826 	beq	r17,zero,49ec <_dtoa_r+0x15e0>
    464c:	05000074 	movhi	r20,1
    4650:	a5013a04 	addi	r20,r20,1256
    4654:	04000084 	movi	r16,2
    4658:	8980004c 	andi	r6,r17,1
    465c:	1009883a 	mov	r4,r2
    4660:	8823d07a 	srai	r17,r17,1
    4664:	180b883a 	mov	r5,r3
    4668:	30000426 	beq	r6,zero,467c <_dtoa_r+0x1270>
    466c:	a1800017 	ldw	r6,0(r20)
    4670:	a1c00117 	ldw	r7,4(r20)
    4674:	84000044 	addi	r16,r16,1
    4678:	000c0840 	call	c084 <__muldf3>
    467c:	a5000204 	addi	r20,r20,8
    4680:	883ff51e 	bne	r17,zero,4658 <__alt_mem_Onchip_SRAM+0xf8004658>
    4684:	d8800f15 	stw	r2,60(sp)
    4688:	d8c01015 	stw	r3,64(sp)
    468c:	003c7606 	br	3868 <__alt_mem_Onchip_SRAM+0xf8003868>
    4690:	00c00c04 	movi	r3,48
    4694:	10c00005 	stb	r3,0(r2)
    4698:	d8c00517 	ldw	r3,20(sp)
    469c:	bd3fffc3 	ldbu	r20,-1(r23)
    46a0:	18c00044 	addi	r3,r3,1
    46a4:	d8c00515 	stw	r3,20(sp)
    46a8:	003db906 	br	3d90 <__alt_mem_Onchip_SRAM+0xf8003d90>
    46ac:	89400117 	ldw	r5,4(r17)
    46b0:	e009883a 	mov	r4,fp
    46b4:	00062880 	call	6288 <_Balloc>
    46b8:	89800417 	ldw	r6,16(r17)
    46bc:	89400304 	addi	r5,r17,12
    46c0:	11000304 	addi	r4,r2,12
    46c4:	31800084 	addi	r6,r6,2
    46c8:	318d883a 	add	r6,r6,r6
    46cc:	318d883a 	add	r6,r6,r6
    46d0:	1027883a 	mov	r19,r2
    46d4:	0005ebc0 	call	5ebc <memcpy>
    46d8:	01800044 	movi	r6,1
    46dc:	980b883a 	mov	r5,r19
    46e0:	e009883a 	mov	r4,fp
    46e4:	0006ac40 	call	6ac4 <__lshift>
    46e8:	1029883a 	mov	r20,r2
    46ec:	003ecc06 	br	4220 <__alt_mem_Onchip_SRAM+0xf8004220>
    46f0:	00800e44 	movi	r2,57
    46f4:	90809026 	beq	r18,r2,4938 <_dtoa_r+0x152c>
    46f8:	92000044 	addi	r8,r18,1
    46fc:	003f1f06 	br	437c <__alt_mem_Onchip_SRAM+0xf800437c>
    4700:	9011883a 	mov	r8,r18
    4704:	8825883a 	mov	r18,r17
    4708:	a023883a 	mov	r17,r20
    470c:	003e2906 	br	3fb4 <__alt_mem_Onchip_SRAM+0xf8003fb4>
    4710:	002b883a 	mov	r21,zero
    4714:	0023883a 	mov	r17,zero
    4718:	003f5406 	br	446c <__alt_mem_Onchip_SRAM+0xf800446c>
    471c:	61bfffc4 	addi	r6,r12,-1
    4720:	300490fa 	slli	r2,r6,3
    4724:	00c00074 	movhi	r3,1
    4728:	18c14404 	addi	r3,r3,1296
    472c:	1885883a 	add	r2,r3,r2
    4730:	11000017 	ldw	r4,0(r2)
    4734:	11400117 	ldw	r5,4(r2)
    4738:	d8800717 	ldw	r2,28(sp)
    473c:	880f883a 	mov	r7,r17
    4740:	d9801215 	stw	r6,72(sp)
    4744:	800d883a 	mov	r6,r16
    4748:	db001615 	stw	r12,88(sp)
    474c:	15c00044 	addi	r23,r2,1
    4750:	000c0840 	call	c084 <__muldf3>
    4754:	d9401017 	ldw	r5,64(sp)
    4758:	d9000f17 	ldw	r4,60(sp)
    475c:	d8c01515 	stw	r3,84(sp)
    4760:	d8801415 	stw	r2,80(sp)
    4764:	000d1ec0 	call	d1ec <__fixdfsi>
    4768:	1009883a 	mov	r4,r2
    476c:	1021883a 	mov	r16,r2
    4770:	000d26c0 	call	d26c <__floatsidf>
    4774:	d9000f17 	ldw	r4,60(sp)
    4778:	d9401017 	ldw	r5,64(sp)
    477c:	100d883a 	mov	r6,r2
    4780:	180f883a 	mov	r7,r3
    4784:	000c8f00 	call	c8f0 <__subdf3>
    4788:	1829883a 	mov	r20,r3
    478c:	d8c00717 	ldw	r3,28(sp)
    4790:	84000c04 	addi	r16,r16,48
    4794:	1023883a 	mov	r17,r2
    4798:	1c000005 	stb	r16,0(r3)
    479c:	db001617 	ldw	r12,88(sp)
    47a0:	00800044 	movi	r2,1
    47a4:	60802226 	beq	r12,r2,4830 <_dtoa_r+0x1424>
    47a8:	d9c00717 	ldw	r7,28(sp)
    47ac:	8805883a 	mov	r2,r17
    47b0:	b82b883a 	mov	r21,r23
    47b4:	3b19883a 	add	r12,r7,r12
    47b8:	6023883a 	mov	r17,r12
    47bc:	a007883a 	mov	r3,r20
    47c0:	dc800f15 	stw	r18,60(sp)
    47c4:	000d883a 	mov	r6,zero
    47c8:	01d00934 	movhi	r7,16420
    47cc:	1009883a 	mov	r4,r2
    47d0:	180b883a 	mov	r5,r3
    47d4:	000c0840 	call	c084 <__muldf3>
    47d8:	180b883a 	mov	r5,r3
    47dc:	1009883a 	mov	r4,r2
    47e0:	1829883a 	mov	r20,r3
    47e4:	1025883a 	mov	r18,r2
    47e8:	000d1ec0 	call	d1ec <__fixdfsi>
    47ec:	1009883a 	mov	r4,r2
    47f0:	1021883a 	mov	r16,r2
    47f4:	000d26c0 	call	d26c <__floatsidf>
    47f8:	100d883a 	mov	r6,r2
    47fc:	180f883a 	mov	r7,r3
    4800:	9009883a 	mov	r4,r18
    4804:	a00b883a 	mov	r5,r20
    4808:	84000c04 	addi	r16,r16,48
    480c:	000c8f00 	call	c8f0 <__subdf3>
    4810:	ad400044 	addi	r21,r21,1
    4814:	ac3fffc5 	stb	r16,-1(r21)
    4818:	ac7fea1e 	bne	r21,r17,47c4 <__alt_mem_Onchip_SRAM+0xf80047c4>
    481c:	1023883a 	mov	r17,r2
    4820:	d8801217 	ldw	r2,72(sp)
    4824:	dc800f17 	ldw	r18,60(sp)
    4828:	1829883a 	mov	r20,r3
    482c:	b8af883a 	add	r23,r23,r2
    4830:	d9001417 	ldw	r4,80(sp)
    4834:	d9401517 	ldw	r5,84(sp)
    4838:	000d883a 	mov	r6,zero
    483c:	01cff834 	movhi	r7,16352
    4840:	000abb00 	call	abb0 <__adddf3>
    4844:	880d883a 	mov	r6,r17
    4848:	a00f883a 	mov	r7,r20
    484c:	1009883a 	mov	r4,r2
    4850:	180b883a 	mov	r5,r3
    4854:	000bf900 	call	bf90 <__ledf2>
    4858:	10003e0e 	bge	r2,zero,4954 <_dtoa_r+0x1548>
    485c:	d9001317 	ldw	r4,76(sp)
    4860:	bd3fffc3 	ldbu	r20,-1(r23)
    4864:	d9000515 	stw	r4,20(sp)
    4868:	003d3b06 	br	3d58 <__alt_mem_Onchip_SRAM+0xf8003d58>
    486c:	0027883a 	mov	r19,zero
    4870:	003f1b06 	br	44e0 <__alt_mem_Onchip_SRAM+0xf80044e0>
    4874:	d8800817 	ldw	r2,32(sp)
    4878:	11e9c83a 	sub	r20,r2,r7
    487c:	0005883a 	mov	r2,zero
    4880:	003d5406 	br	3dd4 <__alt_mem_Onchip_SRAM+0xf8003dd4>
    4884:	00800044 	movi	r2,1
    4888:	003dc706 	br	3fa8 <__alt_mem_Onchip_SRAM+0xf8003fa8>
    488c:	d8c00217 	ldw	r3,8(sp)
    4890:	00800d84 	movi	r2,54
    4894:	dd400a17 	ldw	r21,40(sp)
    4898:	10c5c83a 	sub	r2,r2,r3
    489c:	dd000817 	ldw	r20,32(sp)
    48a0:	003d4c06 	br	3dd4 <__alt_mem_Onchip_SRAM+0xf8003dd4>
    48a4:	dc800f15 	stw	r18,60(sp)
    48a8:	dcc01015 	stw	r19,64(sp)
    48ac:	04000084 	movi	r16,2
    48b0:	003bed06 	br	3868 <__alt_mem_Onchip_SRAM+0xf8003868>
    48b4:	d9000617 	ldw	r4,24(sp)
    48b8:	203f0d26 	beq	r4,zero,44f0 <__alt_mem_Onchip_SRAM+0xf80044f0>
    48bc:	d9800c17 	ldw	r6,48(sp)
    48c0:	01bcab0e 	bge	zero,r6,3b70 <__alt_mem_Onchip_SRAM+0xf8003b70>
    48c4:	d9401017 	ldw	r5,64(sp)
    48c8:	d9000f17 	ldw	r4,60(sp)
    48cc:	000d883a 	mov	r6,zero
    48d0:	01d00934 	movhi	r7,16420
    48d4:	000c0840 	call	c084 <__muldf3>
    48d8:	81000044 	addi	r4,r16,1
    48dc:	d8800f15 	stw	r2,60(sp)
    48e0:	d8c01015 	stw	r3,64(sp)
    48e4:	000d26c0 	call	d26c <__floatsidf>
    48e8:	d9800f17 	ldw	r6,60(sp)
    48ec:	d9c01017 	ldw	r7,64(sp)
    48f0:	1009883a 	mov	r4,r2
    48f4:	180b883a 	mov	r5,r3
    48f8:	000c0840 	call	c084 <__muldf3>
    48fc:	01d00734 	movhi	r7,16412
    4900:	000d883a 	mov	r6,zero
    4904:	1009883a 	mov	r4,r2
    4908:	180b883a 	mov	r5,r3
    490c:	000abb00 	call	abb0 <__adddf3>
    4910:	d9c00517 	ldw	r7,20(sp)
    4914:	047f3034 	movhi	r17,64704
    4918:	1021883a 	mov	r16,r2
    491c:	39ffffc4 	addi	r7,r7,-1
    4920:	d9c01315 	stw	r7,76(sp)
    4924:	1c63883a 	add	r17,r3,r17
    4928:	db000c17 	ldw	r12,48(sp)
    492c:	003bea06 	br	38d8 <__alt_mem_Onchip_SRAM+0xf80038d8>
    4930:	dc000915 	stw	r16,36(sp)
    4934:	003e0e06 	br	4170 <__alt_mem_Onchip_SRAM+0xf8004170>
    4938:	01000e44 	movi	r4,57
    493c:	8825883a 	mov	r18,r17
    4940:	9dc00044 	addi	r23,r19,1
    4944:	99000005 	stb	r4,0(r19)
    4948:	a023883a 	mov	r17,r20
    494c:	dc000915 	stw	r16,36(sp)
    4950:	003da406 	br	3fe4 <__alt_mem_Onchip_SRAM+0xf8003fe4>
    4954:	d9801417 	ldw	r6,80(sp)
    4958:	d9c01517 	ldw	r7,84(sp)
    495c:	0009883a 	mov	r4,zero
    4960:	014ff834 	movhi	r5,16352
    4964:	000c8f00 	call	c8f0 <__subdf3>
    4968:	880d883a 	mov	r6,r17
    496c:	a00f883a 	mov	r7,r20
    4970:	1009883a 	mov	r4,r2
    4974:	180b883a 	mov	r5,r3
    4978:	000beb40 	call	beb4 <__gedf2>
    497c:	00bc7c0e 	bge	zero,r2,3b70 <__alt_mem_Onchip_SRAM+0xf8003b70>
    4980:	01000c04 	movi	r4,48
    4984:	00000106 	br	498c <_dtoa_r+0x1580>
    4988:	102f883a 	mov	r23,r2
    498c:	b8bfffc4 	addi	r2,r23,-1
    4990:	10c00007 	ldb	r3,0(r2)
    4994:	193ffc26 	beq	r3,r4,4988 <__alt_mem_Onchip_SRAM+0xf8004988>
    4998:	d9801317 	ldw	r6,76(sp)
    499c:	d9800515 	stw	r6,20(sp)
    49a0:	003c4406 	br	3ab4 <__alt_mem_Onchip_SRAM+0xf8003ab4>
    49a4:	d9801317 	ldw	r6,76(sp)
    49a8:	d9800515 	stw	r6,20(sp)
    49ac:	003cea06 	br	3d58 <__alt_mem_Onchip_SRAM+0xf8003d58>
    49b0:	dd800f17 	ldw	r22,60(sp)
    49b4:	dcc01017 	ldw	r19,64(sp)
    49b8:	dc801217 	ldw	r18,72(sp)
    49bc:	003c6c06 	br	3b70 <__alt_mem_Onchip_SRAM+0xf8003b70>
    49c0:	903e031e 	bne	r18,zero,41d0 <__alt_mem_Onchip_SRAM+0xf80041d0>
    49c4:	003ebb06 	br	44b4 <__alt_mem_Onchip_SRAM+0xf80044b4>
    49c8:	103e6c1e 	bne	r2,zero,437c <__alt_mem_Onchip_SRAM+0xf800437c>
    49cc:	4080004c 	andi	r2,r8,1
    49d0:	103e6a26 	beq	r2,zero,437c <__alt_mem_Onchip_SRAM+0xf800437c>
    49d4:	003e6606 	br	4370 <__alt_mem_Onchip_SRAM+0xf8004370>
    49d8:	d8c00317 	ldw	r3,12(sp)
    49dc:	00800084 	movi	r2,2
    49e0:	10c02916 	blt	r2,r3,4a88 <_dtoa_r+0x167c>
    49e4:	d9000c17 	ldw	r4,48(sp)
    49e8:	003e8806 	br	440c <__alt_mem_Onchip_SRAM+0xf800440c>
    49ec:	04000084 	movi	r16,2
    49f0:	003b9d06 	br	3868 <__alt_mem_Onchip_SRAM+0xf8003868>
    49f4:	d9001317 	ldw	r4,76(sp)
    49f8:	d9000515 	stw	r4,20(sp)
    49fc:	003cd606 	br	3d58 <__alt_mem_Onchip_SRAM+0xf8003d58>
    4a00:	d8801317 	ldw	r2,76(sp)
    4a04:	d8800515 	stw	r2,20(sp)
    4a08:	003c2a06 	br	3ab4 <__alt_mem_Onchip_SRAM+0xf8003ab4>
    4a0c:	d9800317 	ldw	r6,12(sp)
    4a10:	00800084 	movi	r2,2
    4a14:	11801516 	blt	r2,r6,4a6c <_dtoa_r+0x1660>
    4a18:	d9c00c17 	ldw	r7,48(sp)
    4a1c:	d9c00615 	stw	r7,24(sp)
    4a20:	003df706 	br	4200 <__alt_mem_Onchip_SRAM+0xf8004200>
    4a24:	193d3926 	beq	r3,r4,3f0c <__alt_mem_Onchip_SRAM+0xf8003f0c>
    4a28:	00c00f04 	movi	r3,60
    4a2c:	1885c83a 	sub	r2,r3,r2
    4a30:	003ddf06 	br	41b0 <__alt_mem_Onchip_SRAM+0xf80041b0>
    4a34:	e009883a 	mov	r4,fp
    4a38:	e0001115 	stw	zero,68(fp)
    4a3c:	000b883a 	mov	r5,zero
    4a40:	00062880 	call	6288 <_Balloc>
    4a44:	d8800715 	stw	r2,28(sp)
    4a48:	d8c00717 	ldw	r3,28(sp)
    4a4c:	00bfffc4 	movi	r2,-1
    4a50:	01000044 	movi	r4,1
    4a54:	d8800c15 	stw	r2,48(sp)
    4a58:	e0c01015 	stw	r3,64(fp)
    4a5c:	d9000b15 	stw	r4,44(sp)
    4a60:	d8800615 	stw	r2,24(sp)
    4a64:	d8002215 	stw	zero,136(sp)
    4a68:	003c4106 	br	3b70 <__alt_mem_Onchip_SRAM+0xf8003b70>
    4a6c:	d8c00c17 	ldw	r3,48(sp)
    4a70:	d8c00615 	stw	r3,24(sp)
    4a74:	003e7006 	br	4438 <__alt_mem_Onchip_SRAM+0xf8004438>
    4a78:	04400044 	movi	r17,1
    4a7c:	003b2006 	br	3700 <__alt_mem_Onchip_SRAM+0xf8003700>
    4a80:	000b883a 	mov	r5,zero
    4a84:	003b3d06 	br	377c <__alt_mem_Onchip_SRAM+0xf800377c>
    4a88:	d8800c17 	ldw	r2,48(sp)
    4a8c:	d8800615 	stw	r2,24(sp)
    4a90:	003e6906 	br	4438 <__alt_mem_Onchip_SRAM+0xf8004438>

00004a94 <__fp_unlock>:
    4a94:	0005883a 	mov	r2,zero
    4a98:	f800283a 	ret

00004a9c <_cleanup_r>:
    4a9c:	01400074 	movhi	r5,1
    4aa0:	2964f604 	addi	r5,r5,-27688
    4aa4:	00053d01 	jmpi	53d0 <_fwalk_reent>

00004aa8 <__sinit.part.1>:
    4aa8:	defff704 	addi	sp,sp,-36
    4aac:	00c00034 	movhi	r3,0
    4ab0:	dfc00815 	stw	ra,32(sp)
    4ab4:	ddc00715 	stw	r23,28(sp)
    4ab8:	dd800615 	stw	r22,24(sp)
    4abc:	dd400515 	stw	r21,20(sp)
    4ac0:	dd000415 	stw	r20,16(sp)
    4ac4:	dcc00315 	stw	r19,12(sp)
    4ac8:	dc800215 	stw	r18,8(sp)
    4acc:	dc400115 	stw	r17,4(sp)
    4ad0:	dc000015 	stw	r16,0(sp)
    4ad4:	18d2a704 	addi	r3,r3,19100
    4ad8:	24000117 	ldw	r16,4(r4)
    4adc:	20c00f15 	stw	r3,60(r4)
    4ae0:	2080bb04 	addi	r2,r4,748
    4ae4:	00c000c4 	movi	r3,3
    4ae8:	20c0b915 	stw	r3,740(r4)
    4aec:	2080ba15 	stw	r2,744(r4)
    4af0:	2000b815 	stw	zero,736(r4)
    4af4:	05c00204 	movi	r23,8
    4af8:	00800104 	movi	r2,4
    4afc:	2025883a 	mov	r18,r4
    4b00:	b80d883a 	mov	r6,r23
    4b04:	81001704 	addi	r4,r16,92
    4b08:	000b883a 	mov	r5,zero
    4b0c:	80000015 	stw	zero,0(r16)
    4b10:	80000115 	stw	zero,4(r16)
    4b14:	80000215 	stw	zero,8(r16)
    4b18:	8080030d 	sth	r2,12(r16)
    4b1c:	80001915 	stw	zero,100(r16)
    4b20:	8000038d 	sth	zero,14(r16)
    4b24:	80000415 	stw	zero,16(r16)
    4b28:	80000515 	stw	zero,20(r16)
    4b2c:	80000615 	stw	zero,24(r16)
    4b30:	00061600 	call	6160 <memset>
    4b34:	05800034 	movhi	r22,0
    4b38:	94400217 	ldw	r17,8(r18)
    4b3c:	05400034 	movhi	r21,0
    4b40:	05000034 	movhi	r20,0
    4b44:	04c00034 	movhi	r19,0
    4b48:	b59e5b04 	addi	r22,r22,31084
    4b4c:	ad5e7204 	addi	r21,r21,31176
    4b50:	a51e9104 	addi	r20,r20,31300
    4b54:	9cdea804 	addi	r19,r19,31392
    4b58:	85800815 	stw	r22,32(r16)
    4b5c:	85400915 	stw	r21,36(r16)
    4b60:	85000a15 	stw	r20,40(r16)
    4b64:	84c00b15 	stw	r19,44(r16)
    4b68:	84000715 	stw	r16,28(r16)
    4b6c:	00800284 	movi	r2,10
    4b70:	8880030d 	sth	r2,12(r17)
    4b74:	00800044 	movi	r2,1
    4b78:	b80d883a 	mov	r6,r23
    4b7c:	89001704 	addi	r4,r17,92
    4b80:	000b883a 	mov	r5,zero
    4b84:	88000015 	stw	zero,0(r17)
    4b88:	88000115 	stw	zero,4(r17)
    4b8c:	88000215 	stw	zero,8(r17)
    4b90:	88001915 	stw	zero,100(r17)
    4b94:	8880038d 	sth	r2,14(r17)
    4b98:	88000415 	stw	zero,16(r17)
    4b9c:	88000515 	stw	zero,20(r17)
    4ba0:	88000615 	stw	zero,24(r17)
    4ba4:	00061600 	call	6160 <memset>
    4ba8:	94000317 	ldw	r16,12(r18)
    4bac:	00800484 	movi	r2,18
    4bb0:	8c400715 	stw	r17,28(r17)
    4bb4:	8d800815 	stw	r22,32(r17)
    4bb8:	8d400915 	stw	r21,36(r17)
    4bbc:	8d000a15 	stw	r20,40(r17)
    4bc0:	8cc00b15 	stw	r19,44(r17)
    4bc4:	8080030d 	sth	r2,12(r16)
    4bc8:	00800084 	movi	r2,2
    4bcc:	80000015 	stw	zero,0(r16)
    4bd0:	80000115 	stw	zero,4(r16)
    4bd4:	80000215 	stw	zero,8(r16)
    4bd8:	80001915 	stw	zero,100(r16)
    4bdc:	8080038d 	sth	r2,14(r16)
    4be0:	80000415 	stw	zero,16(r16)
    4be4:	80000515 	stw	zero,20(r16)
    4be8:	80000615 	stw	zero,24(r16)
    4bec:	b80d883a 	mov	r6,r23
    4bf0:	000b883a 	mov	r5,zero
    4bf4:	81001704 	addi	r4,r16,92
    4bf8:	00061600 	call	6160 <memset>
    4bfc:	00800044 	movi	r2,1
    4c00:	84000715 	stw	r16,28(r16)
    4c04:	85800815 	stw	r22,32(r16)
    4c08:	85400915 	stw	r21,36(r16)
    4c0c:	85000a15 	stw	r20,40(r16)
    4c10:	84c00b15 	stw	r19,44(r16)
    4c14:	90800e15 	stw	r2,56(r18)
    4c18:	dfc00817 	ldw	ra,32(sp)
    4c1c:	ddc00717 	ldw	r23,28(sp)
    4c20:	dd800617 	ldw	r22,24(sp)
    4c24:	dd400517 	ldw	r21,20(sp)
    4c28:	dd000417 	ldw	r20,16(sp)
    4c2c:	dcc00317 	ldw	r19,12(sp)
    4c30:	dc800217 	ldw	r18,8(sp)
    4c34:	dc400117 	ldw	r17,4(sp)
    4c38:	dc000017 	ldw	r16,0(sp)
    4c3c:	dec00904 	addi	sp,sp,36
    4c40:	f800283a 	ret

00004c44 <__fp_lock>:
    4c44:	0005883a 	mov	r2,zero
    4c48:	f800283a 	ret

00004c4c <__sfmoreglue>:
    4c4c:	defffc04 	addi	sp,sp,-16
    4c50:	dc800215 	stw	r18,8(sp)
    4c54:	2825883a 	mov	r18,r5
    4c58:	dc000015 	stw	r16,0(sp)
    4c5c:	01401a04 	movi	r5,104
    4c60:	2021883a 	mov	r16,r4
    4c64:	913fffc4 	addi	r4,r18,-1
    4c68:	dfc00315 	stw	ra,12(sp)
    4c6c:	dc400115 	stw	r17,4(sp)
    4c70:	0000a0c0 	call	a0c <__mulsi3>
    4c74:	8009883a 	mov	r4,r16
    4c78:	11401d04 	addi	r5,r2,116
    4c7c:	1023883a 	mov	r17,r2
    4c80:	00055cc0 	call	55cc <_malloc_r>
    4c84:	1021883a 	mov	r16,r2
    4c88:	10000726 	beq	r2,zero,4ca8 <__sfmoreglue+0x5c>
    4c8c:	11000304 	addi	r4,r2,12
    4c90:	10000015 	stw	zero,0(r2)
    4c94:	14800115 	stw	r18,4(r2)
    4c98:	11000215 	stw	r4,8(r2)
    4c9c:	89801a04 	addi	r6,r17,104
    4ca0:	000b883a 	mov	r5,zero
    4ca4:	00061600 	call	6160 <memset>
    4ca8:	8005883a 	mov	r2,r16
    4cac:	dfc00317 	ldw	ra,12(sp)
    4cb0:	dc800217 	ldw	r18,8(sp)
    4cb4:	dc400117 	ldw	r17,4(sp)
    4cb8:	dc000017 	ldw	r16,0(sp)
    4cbc:	dec00404 	addi	sp,sp,16
    4cc0:	f800283a 	ret

00004cc4 <__sfp>:
    4cc4:	defffb04 	addi	sp,sp,-20
    4cc8:	dc000015 	stw	r16,0(sp)
    4ccc:	04000074 	movhi	r16,1
    4cd0:	84085404 	addi	r16,r16,8528
    4cd4:	dcc00315 	stw	r19,12(sp)
    4cd8:	2027883a 	mov	r19,r4
    4cdc:	81000017 	ldw	r4,0(r16)
    4ce0:	dfc00415 	stw	ra,16(sp)
    4ce4:	dc800215 	stw	r18,8(sp)
    4ce8:	20800e17 	ldw	r2,56(r4)
    4cec:	dc400115 	stw	r17,4(sp)
    4cf0:	1000021e 	bne	r2,zero,4cfc <__sfp+0x38>
    4cf4:	0004aa80 	call	4aa8 <__sinit.part.1>
    4cf8:	81000017 	ldw	r4,0(r16)
    4cfc:	2480b804 	addi	r18,r4,736
    4d00:	047fffc4 	movi	r17,-1
    4d04:	91000117 	ldw	r4,4(r18)
    4d08:	94000217 	ldw	r16,8(r18)
    4d0c:	213fffc4 	addi	r4,r4,-1
    4d10:	20000a16 	blt	r4,zero,4d3c <__sfp+0x78>
    4d14:	8080030f 	ldh	r2,12(r16)
    4d18:	10000c26 	beq	r2,zero,4d4c <__sfp+0x88>
    4d1c:	80c01d04 	addi	r3,r16,116
    4d20:	00000206 	br	4d2c <__sfp+0x68>
    4d24:	18bfe60f 	ldh	r2,-104(r3)
    4d28:	10000826 	beq	r2,zero,4d4c <__sfp+0x88>
    4d2c:	213fffc4 	addi	r4,r4,-1
    4d30:	1c3ffd04 	addi	r16,r3,-12
    4d34:	18c01a04 	addi	r3,r3,104
    4d38:	247ffa1e 	bne	r4,r17,4d24 <__alt_mem_Onchip_SRAM+0xf8004d24>
    4d3c:	90800017 	ldw	r2,0(r18)
    4d40:	10001d26 	beq	r2,zero,4db8 <__sfp+0xf4>
    4d44:	1025883a 	mov	r18,r2
    4d48:	003fee06 	br	4d04 <__alt_mem_Onchip_SRAM+0xf8004d04>
    4d4c:	00bfffc4 	movi	r2,-1
    4d50:	8080038d 	sth	r2,14(r16)
    4d54:	00800044 	movi	r2,1
    4d58:	8080030d 	sth	r2,12(r16)
    4d5c:	80001915 	stw	zero,100(r16)
    4d60:	80000015 	stw	zero,0(r16)
    4d64:	80000215 	stw	zero,8(r16)
    4d68:	80000115 	stw	zero,4(r16)
    4d6c:	80000415 	stw	zero,16(r16)
    4d70:	80000515 	stw	zero,20(r16)
    4d74:	80000615 	stw	zero,24(r16)
    4d78:	01800204 	movi	r6,8
    4d7c:	000b883a 	mov	r5,zero
    4d80:	81001704 	addi	r4,r16,92
    4d84:	00061600 	call	6160 <memset>
    4d88:	8005883a 	mov	r2,r16
    4d8c:	80000c15 	stw	zero,48(r16)
    4d90:	80000d15 	stw	zero,52(r16)
    4d94:	80001115 	stw	zero,68(r16)
    4d98:	80001215 	stw	zero,72(r16)
    4d9c:	dfc00417 	ldw	ra,16(sp)
    4da0:	dcc00317 	ldw	r19,12(sp)
    4da4:	dc800217 	ldw	r18,8(sp)
    4da8:	dc400117 	ldw	r17,4(sp)
    4dac:	dc000017 	ldw	r16,0(sp)
    4db0:	dec00504 	addi	sp,sp,20
    4db4:	f800283a 	ret
    4db8:	01400104 	movi	r5,4
    4dbc:	9809883a 	mov	r4,r19
    4dc0:	0004c4c0 	call	4c4c <__sfmoreglue>
    4dc4:	90800015 	stw	r2,0(r18)
    4dc8:	103fde1e 	bne	r2,zero,4d44 <__alt_mem_Onchip_SRAM+0xf8004d44>
    4dcc:	00800304 	movi	r2,12
    4dd0:	98800015 	stw	r2,0(r19)
    4dd4:	0005883a 	mov	r2,zero
    4dd8:	003ff006 	br	4d9c <__alt_mem_Onchip_SRAM+0xf8004d9c>

00004ddc <_cleanup>:
    4ddc:	00800074 	movhi	r2,1
    4de0:	10885404 	addi	r2,r2,8528
    4de4:	11000017 	ldw	r4,0(r2)
    4de8:	01400074 	movhi	r5,1
    4dec:	2964f604 	addi	r5,r5,-27688
    4df0:	00053d01 	jmpi	53d0 <_fwalk_reent>

00004df4 <__sinit>:
    4df4:	20800e17 	ldw	r2,56(r4)
    4df8:	10000126 	beq	r2,zero,4e00 <__sinit+0xc>
    4dfc:	f800283a 	ret
    4e00:	0004aa81 	jmpi	4aa8 <__sinit.part.1>

00004e04 <__sfp_lock_acquire>:
    4e04:	f800283a 	ret

00004e08 <__sfp_lock_release>:
    4e08:	f800283a 	ret

00004e0c <__sinit_lock_acquire>:
    4e0c:	f800283a 	ret

00004e10 <__sinit_lock_release>:
    4e10:	f800283a 	ret

00004e14 <__fp_lock_all>:
    4e14:	00800074 	movhi	r2,1
    4e18:	10885504 	addi	r2,r2,8532
    4e1c:	11000017 	ldw	r4,0(r2)
    4e20:	01400034 	movhi	r5,0
    4e24:	29531104 	addi	r5,r5,19524
    4e28:	000530c1 	jmpi	530c <_fwalk>

00004e2c <__fp_unlock_all>:
    4e2c:	00800074 	movhi	r2,1
    4e30:	10885504 	addi	r2,r2,8532
    4e34:	11000017 	ldw	r4,0(r2)
    4e38:	01400034 	movhi	r5,0
    4e3c:	2952a504 	addi	r5,r5,19092
    4e40:	000530c1 	jmpi	530c <_fwalk>

00004e44 <__sfvwrite_r>:
    4e44:	30800217 	ldw	r2,8(r6)
    4e48:	10006726 	beq	r2,zero,4fe8 <__sfvwrite_r+0x1a4>
    4e4c:	28c0030b 	ldhu	r3,12(r5)
    4e50:	defff404 	addi	sp,sp,-48
    4e54:	dd400715 	stw	r21,28(sp)
    4e58:	dd000615 	stw	r20,24(sp)
    4e5c:	dc000215 	stw	r16,8(sp)
    4e60:	dfc00b15 	stw	ra,44(sp)
    4e64:	df000a15 	stw	fp,40(sp)
    4e68:	ddc00915 	stw	r23,36(sp)
    4e6c:	dd800815 	stw	r22,32(sp)
    4e70:	dcc00515 	stw	r19,20(sp)
    4e74:	dc800415 	stw	r18,16(sp)
    4e78:	dc400315 	stw	r17,12(sp)
    4e7c:	1880020c 	andi	r2,r3,8
    4e80:	2821883a 	mov	r16,r5
    4e84:	202b883a 	mov	r21,r4
    4e88:	3029883a 	mov	r20,r6
    4e8c:	10002726 	beq	r2,zero,4f2c <__sfvwrite_r+0xe8>
    4e90:	28800417 	ldw	r2,16(r5)
    4e94:	10002526 	beq	r2,zero,4f2c <__sfvwrite_r+0xe8>
    4e98:	1880008c 	andi	r2,r3,2
    4e9c:	a4400017 	ldw	r17,0(r20)
    4ea0:	10002a26 	beq	r2,zero,4f4c <__sfvwrite_r+0x108>
    4ea4:	05a00034 	movhi	r22,32768
    4ea8:	0027883a 	mov	r19,zero
    4eac:	0025883a 	mov	r18,zero
    4eb0:	b5bf0004 	addi	r22,r22,-1024
    4eb4:	980d883a 	mov	r6,r19
    4eb8:	a809883a 	mov	r4,r21
    4ebc:	90004626 	beq	r18,zero,4fd8 <__sfvwrite_r+0x194>
    4ec0:	900f883a 	mov	r7,r18
    4ec4:	b480022e 	bgeu	r22,r18,4ed0 <__sfvwrite_r+0x8c>
    4ec8:	01e00034 	movhi	r7,32768
    4ecc:	39ff0004 	addi	r7,r7,-1024
    4ed0:	80800917 	ldw	r2,36(r16)
    4ed4:	81400717 	ldw	r5,28(r16)
    4ed8:	103ee83a 	callr	r2
    4edc:	00805a0e 	bge	zero,r2,5048 <__sfvwrite_r+0x204>
    4ee0:	a0c00217 	ldw	r3,8(r20)
    4ee4:	98a7883a 	add	r19,r19,r2
    4ee8:	90a5c83a 	sub	r18,r18,r2
    4eec:	1885c83a 	sub	r2,r3,r2
    4ef0:	a0800215 	stw	r2,8(r20)
    4ef4:	103fef1e 	bne	r2,zero,4eb4 <__alt_mem_Onchip_SRAM+0xf8004eb4>
    4ef8:	0005883a 	mov	r2,zero
    4efc:	dfc00b17 	ldw	ra,44(sp)
    4f00:	df000a17 	ldw	fp,40(sp)
    4f04:	ddc00917 	ldw	r23,36(sp)
    4f08:	dd800817 	ldw	r22,32(sp)
    4f0c:	dd400717 	ldw	r21,28(sp)
    4f10:	dd000617 	ldw	r20,24(sp)
    4f14:	dcc00517 	ldw	r19,20(sp)
    4f18:	dc800417 	ldw	r18,16(sp)
    4f1c:	dc400317 	ldw	r17,12(sp)
    4f20:	dc000217 	ldw	r16,8(sp)
    4f24:	dec00c04 	addi	sp,sp,48
    4f28:	f800283a 	ret
    4f2c:	800b883a 	mov	r5,r16
    4f30:	a809883a 	mov	r4,r21
    4f34:	00091540 	call	9154 <__swsetup_r>
    4f38:	1000ee1e 	bne	r2,zero,52f4 <__sfvwrite_r+0x4b0>
    4f3c:	80c0030b 	ldhu	r3,12(r16)
    4f40:	a4400017 	ldw	r17,0(r20)
    4f44:	1880008c 	andi	r2,r3,2
    4f48:	103fd61e 	bne	r2,zero,4ea4 <__alt_mem_Onchip_SRAM+0xf8004ea4>
    4f4c:	1880004c 	andi	r2,r3,1
    4f50:	1000421e 	bne	r2,zero,505c <__sfvwrite_r+0x218>
    4f54:	0039883a 	mov	fp,zero
    4f58:	0025883a 	mov	r18,zero
    4f5c:	90001a26 	beq	r18,zero,4fc8 <__sfvwrite_r+0x184>
    4f60:	1880800c 	andi	r2,r3,512
    4f64:	84c00217 	ldw	r19,8(r16)
    4f68:	10002126 	beq	r2,zero,4ff0 <__sfvwrite_r+0x1ac>
    4f6c:	982f883a 	mov	r23,r19
    4f70:	94c09636 	bltu	r18,r19,51cc <__sfvwrite_r+0x388>
    4f74:	1881200c 	andi	r2,r3,1152
    4f78:	1000a11e 	bne	r2,zero,5200 <__sfvwrite_r+0x3bc>
    4f7c:	81000017 	ldw	r4,0(r16)
    4f80:	b80d883a 	mov	r6,r23
    4f84:	e00b883a 	mov	r5,fp
    4f88:	00060040 	call	6004 <memmove>
    4f8c:	80c00217 	ldw	r3,8(r16)
    4f90:	81000017 	ldw	r4,0(r16)
    4f94:	9005883a 	mov	r2,r18
    4f98:	1ce7c83a 	sub	r19,r3,r19
    4f9c:	25cf883a 	add	r7,r4,r23
    4fa0:	84c00215 	stw	r19,8(r16)
    4fa4:	81c00015 	stw	r7,0(r16)
    4fa8:	a0c00217 	ldw	r3,8(r20)
    4fac:	e0b9883a 	add	fp,fp,r2
    4fb0:	90a5c83a 	sub	r18,r18,r2
    4fb4:	18a7c83a 	sub	r19,r3,r2
    4fb8:	a4c00215 	stw	r19,8(r20)
    4fbc:	983fce26 	beq	r19,zero,4ef8 <__alt_mem_Onchip_SRAM+0xf8004ef8>
    4fc0:	80c0030b 	ldhu	r3,12(r16)
    4fc4:	903fe61e 	bne	r18,zero,4f60 <__alt_mem_Onchip_SRAM+0xf8004f60>
    4fc8:	8f000017 	ldw	fp,0(r17)
    4fcc:	8c800117 	ldw	r18,4(r17)
    4fd0:	8c400204 	addi	r17,r17,8
    4fd4:	003fe106 	br	4f5c <__alt_mem_Onchip_SRAM+0xf8004f5c>
    4fd8:	8cc00017 	ldw	r19,0(r17)
    4fdc:	8c800117 	ldw	r18,4(r17)
    4fe0:	8c400204 	addi	r17,r17,8
    4fe4:	003fb306 	br	4eb4 <__alt_mem_Onchip_SRAM+0xf8004eb4>
    4fe8:	0005883a 	mov	r2,zero
    4fec:	f800283a 	ret
    4ff0:	81000017 	ldw	r4,0(r16)
    4ff4:	80800417 	ldw	r2,16(r16)
    4ff8:	11005a36 	bltu	r2,r4,5164 <__sfvwrite_r+0x320>
    4ffc:	85c00517 	ldw	r23,20(r16)
    5000:	95c05836 	bltu	r18,r23,5164 <__sfvwrite_r+0x320>
    5004:	00a00034 	movhi	r2,32768
    5008:	10bfffc4 	addi	r2,r2,-1
    500c:	9009883a 	mov	r4,r18
    5010:	1480012e 	bgeu	r2,r18,5018 <__sfvwrite_r+0x1d4>
    5014:	1009883a 	mov	r4,r2
    5018:	b80b883a 	mov	r5,r23
    501c:	00008580 	call	858 <__divsi3>
    5020:	b80b883a 	mov	r5,r23
    5024:	1009883a 	mov	r4,r2
    5028:	0000a0c0 	call	a0c <__mulsi3>
    502c:	81400717 	ldw	r5,28(r16)
    5030:	80c00917 	ldw	r3,36(r16)
    5034:	100f883a 	mov	r7,r2
    5038:	e00d883a 	mov	r6,fp
    503c:	a809883a 	mov	r4,r21
    5040:	183ee83a 	callr	r3
    5044:	00bfd816 	blt	zero,r2,4fa8 <__alt_mem_Onchip_SRAM+0xf8004fa8>
    5048:	8080030b 	ldhu	r2,12(r16)
    504c:	10801014 	ori	r2,r2,64
    5050:	8080030d 	sth	r2,12(r16)
    5054:	00bfffc4 	movi	r2,-1
    5058:	003fa806 	br	4efc <__alt_mem_Onchip_SRAM+0xf8004efc>
    505c:	0027883a 	mov	r19,zero
    5060:	0011883a 	mov	r8,zero
    5064:	0039883a 	mov	fp,zero
    5068:	0025883a 	mov	r18,zero
    506c:	90001f26 	beq	r18,zero,50ec <__sfvwrite_r+0x2a8>
    5070:	40005a26 	beq	r8,zero,51dc <__sfvwrite_r+0x398>
    5074:	982d883a 	mov	r22,r19
    5078:	94c0012e 	bgeu	r18,r19,5080 <__sfvwrite_r+0x23c>
    507c:	902d883a 	mov	r22,r18
    5080:	81000017 	ldw	r4,0(r16)
    5084:	80800417 	ldw	r2,16(r16)
    5088:	b02f883a 	mov	r23,r22
    508c:	81c00517 	ldw	r7,20(r16)
    5090:	1100032e 	bgeu	r2,r4,50a0 <__sfvwrite_r+0x25c>
    5094:	80c00217 	ldw	r3,8(r16)
    5098:	38c7883a 	add	r3,r7,r3
    509c:	1d801816 	blt	r3,r22,5100 <__sfvwrite_r+0x2bc>
    50a0:	b1c03e16 	blt	r22,r7,519c <__sfvwrite_r+0x358>
    50a4:	80800917 	ldw	r2,36(r16)
    50a8:	81400717 	ldw	r5,28(r16)
    50ac:	e00d883a 	mov	r6,fp
    50b0:	da000115 	stw	r8,4(sp)
    50b4:	a809883a 	mov	r4,r21
    50b8:	103ee83a 	callr	r2
    50bc:	102f883a 	mov	r23,r2
    50c0:	da000117 	ldw	r8,4(sp)
    50c4:	00bfe00e 	bge	zero,r2,5048 <__alt_mem_Onchip_SRAM+0xf8005048>
    50c8:	9de7c83a 	sub	r19,r19,r23
    50cc:	98001f26 	beq	r19,zero,514c <__sfvwrite_r+0x308>
    50d0:	a0800217 	ldw	r2,8(r20)
    50d4:	e5f9883a 	add	fp,fp,r23
    50d8:	95e5c83a 	sub	r18,r18,r23
    50dc:	15efc83a 	sub	r23,r2,r23
    50e0:	a5c00215 	stw	r23,8(r20)
    50e4:	b83f8426 	beq	r23,zero,4ef8 <__alt_mem_Onchip_SRAM+0xf8004ef8>
    50e8:	903fe11e 	bne	r18,zero,5070 <__alt_mem_Onchip_SRAM+0xf8005070>
    50ec:	8f000017 	ldw	fp,0(r17)
    50f0:	8c800117 	ldw	r18,4(r17)
    50f4:	0011883a 	mov	r8,zero
    50f8:	8c400204 	addi	r17,r17,8
    50fc:	003fdb06 	br	506c <__alt_mem_Onchip_SRAM+0xf800506c>
    5100:	180d883a 	mov	r6,r3
    5104:	e00b883a 	mov	r5,fp
    5108:	da000115 	stw	r8,4(sp)
    510c:	d8c00015 	stw	r3,0(sp)
    5110:	00060040 	call	6004 <memmove>
    5114:	d8c00017 	ldw	r3,0(sp)
    5118:	80800017 	ldw	r2,0(r16)
    511c:	800b883a 	mov	r5,r16
    5120:	a809883a 	mov	r4,r21
    5124:	10c5883a 	add	r2,r2,r3
    5128:	80800015 	stw	r2,0(r16)
    512c:	d8c00015 	stw	r3,0(sp)
    5130:	00096f80 	call	96f8 <_fflush_r>
    5134:	d8c00017 	ldw	r3,0(sp)
    5138:	da000117 	ldw	r8,4(sp)
    513c:	103fc21e 	bne	r2,zero,5048 <__alt_mem_Onchip_SRAM+0xf8005048>
    5140:	182f883a 	mov	r23,r3
    5144:	9de7c83a 	sub	r19,r19,r23
    5148:	983fe11e 	bne	r19,zero,50d0 <__alt_mem_Onchip_SRAM+0xf80050d0>
    514c:	800b883a 	mov	r5,r16
    5150:	a809883a 	mov	r4,r21
    5154:	00096f80 	call	96f8 <_fflush_r>
    5158:	103fbb1e 	bne	r2,zero,5048 <__alt_mem_Onchip_SRAM+0xf8005048>
    515c:	0011883a 	mov	r8,zero
    5160:	003fdb06 	br	50d0 <__alt_mem_Onchip_SRAM+0xf80050d0>
    5164:	94c0012e 	bgeu	r18,r19,516c <__sfvwrite_r+0x328>
    5168:	9027883a 	mov	r19,r18
    516c:	980d883a 	mov	r6,r19
    5170:	e00b883a 	mov	r5,fp
    5174:	00060040 	call	6004 <memmove>
    5178:	80800217 	ldw	r2,8(r16)
    517c:	80c00017 	ldw	r3,0(r16)
    5180:	14c5c83a 	sub	r2,r2,r19
    5184:	1cc7883a 	add	r3,r3,r19
    5188:	80800215 	stw	r2,8(r16)
    518c:	80c00015 	stw	r3,0(r16)
    5190:	10004326 	beq	r2,zero,52a0 <__sfvwrite_r+0x45c>
    5194:	9805883a 	mov	r2,r19
    5198:	003f8306 	br	4fa8 <__alt_mem_Onchip_SRAM+0xf8004fa8>
    519c:	b00d883a 	mov	r6,r22
    51a0:	e00b883a 	mov	r5,fp
    51a4:	da000115 	stw	r8,4(sp)
    51a8:	00060040 	call	6004 <memmove>
    51ac:	80800217 	ldw	r2,8(r16)
    51b0:	80c00017 	ldw	r3,0(r16)
    51b4:	da000117 	ldw	r8,4(sp)
    51b8:	1585c83a 	sub	r2,r2,r22
    51bc:	1dad883a 	add	r22,r3,r22
    51c0:	80800215 	stw	r2,8(r16)
    51c4:	85800015 	stw	r22,0(r16)
    51c8:	003fbf06 	br	50c8 <__alt_mem_Onchip_SRAM+0xf80050c8>
    51cc:	81000017 	ldw	r4,0(r16)
    51d0:	9027883a 	mov	r19,r18
    51d4:	902f883a 	mov	r23,r18
    51d8:	003f6906 	br	4f80 <__alt_mem_Onchip_SRAM+0xf8004f80>
    51dc:	900d883a 	mov	r6,r18
    51e0:	01400284 	movi	r5,10
    51e4:	e009883a 	mov	r4,fp
    51e8:	0005dd80 	call	5dd8 <memchr>
    51ec:	10003e26 	beq	r2,zero,52e8 <__sfvwrite_r+0x4a4>
    51f0:	10800044 	addi	r2,r2,1
    51f4:	1727c83a 	sub	r19,r2,fp
    51f8:	02000044 	movi	r8,1
    51fc:	003f9d06 	br	5074 <__alt_mem_Onchip_SRAM+0xf8005074>
    5200:	80800517 	ldw	r2,20(r16)
    5204:	81400417 	ldw	r5,16(r16)
    5208:	81c00017 	ldw	r7,0(r16)
    520c:	10a7883a 	add	r19,r2,r2
    5210:	9885883a 	add	r2,r19,r2
    5214:	1026d7fa 	srli	r19,r2,31
    5218:	396dc83a 	sub	r22,r7,r5
    521c:	b1000044 	addi	r4,r22,1
    5220:	9885883a 	add	r2,r19,r2
    5224:	1027d07a 	srai	r19,r2,1
    5228:	2485883a 	add	r2,r4,r18
    522c:	980d883a 	mov	r6,r19
    5230:	9880022e 	bgeu	r19,r2,523c <__sfvwrite_r+0x3f8>
    5234:	1027883a 	mov	r19,r2
    5238:	100d883a 	mov	r6,r2
    523c:	18c1000c 	andi	r3,r3,1024
    5240:	18001c26 	beq	r3,zero,52b4 <__sfvwrite_r+0x470>
    5244:	300b883a 	mov	r5,r6
    5248:	a809883a 	mov	r4,r21
    524c:	00055cc0 	call	55cc <_malloc_r>
    5250:	102f883a 	mov	r23,r2
    5254:	10002926 	beq	r2,zero,52fc <__sfvwrite_r+0x4b8>
    5258:	81400417 	ldw	r5,16(r16)
    525c:	b00d883a 	mov	r6,r22
    5260:	1009883a 	mov	r4,r2
    5264:	0005ebc0 	call	5ebc <memcpy>
    5268:	8080030b 	ldhu	r2,12(r16)
    526c:	00fedfc4 	movi	r3,-1153
    5270:	10c4703a 	and	r2,r2,r3
    5274:	10802014 	ori	r2,r2,128
    5278:	8080030d 	sth	r2,12(r16)
    527c:	bd89883a 	add	r4,r23,r22
    5280:	9d8fc83a 	sub	r7,r19,r22
    5284:	85c00415 	stw	r23,16(r16)
    5288:	84c00515 	stw	r19,20(r16)
    528c:	81000015 	stw	r4,0(r16)
    5290:	9027883a 	mov	r19,r18
    5294:	81c00215 	stw	r7,8(r16)
    5298:	902f883a 	mov	r23,r18
    529c:	003f3806 	br	4f80 <__alt_mem_Onchip_SRAM+0xf8004f80>
    52a0:	800b883a 	mov	r5,r16
    52a4:	a809883a 	mov	r4,r21
    52a8:	00096f80 	call	96f8 <_fflush_r>
    52ac:	103fb926 	beq	r2,zero,5194 <__alt_mem_Onchip_SRAM+0xf8005194>
    52b0:	003f6506 	br	5048 <__alt_mem_Onchip_SRAM+0xf8005048>
    52b4:	a809883a 	mov	r4,r21
    52b8:	00073400 	call	7340 <_realloc_r>
    52bc:	102f883a 	mov	r23,r2
    52c0:	103fee1e 	bne	r2,zero,527c <__alt_mem_Onchip_SRAM+0xf800527c>
    52c4:	81400417 	ldw	r5,16(r16)
    52c8:	a809883a 	mov	r4,r21
    52cc:	00098a80 	call	98a8 <_free_r>
    52d0:	8080030b 	ldhu	r2,12(r16)
    52d4:	00ffdfc4 	movi	r3,-129
    52d8:	1884703a 	and	r2,r3,r2
    52dc:	00c00304 	movi	r3,12
    52e0:	a8c00015 	stw	r3,0(r21)
    52e4:	003f5906 	br	504c <__alt_mem_Onchip_SRAM+0xf800504c>
    52e8:	94c00044 	addi	r19,r18,1
    52ec:	02000044 	movi	r8,1
    52f0:	003f6006 	br	5074 <__alt_mem_Onchip_SRAM+0xf8005074>
    52f4:	00bfffc4 	movi	r2,-1
    52f8:	003f0006 	br	4efc <__alt_mem_Onchip_SRAM+0xf8004efc>
    52fc:	00800304 	movi	r2,12
    5300:	a8800015 	stw	r2,0(r21)
    5304:	8080030b 	ldhu	r2,12(r16)
    5308:	003f5006 	br	504c <__alt_mem_Onchip_SRAM+0xf800504c>

0000530c <_fwalk>:
    530c:	defff704 	addi	sp,sp,-36
    5310:	dd000415 	stw	r20,16(sp)
    5314:	dfc00815 	stw	ra,32(sp)
    5318:	ddc00715 	stw	r23,28(sp)
    531c:	dd800615 	stw	r22,24(sp)
    5320:	dd400515 	stw	r21,20(sp)
    5324:	dcc00315 	stw	r19,12(sp)
    5328:	dc800215 	stw	r18,8(sp)
    532c:	dc400115 	stw	r17,4(sp)
    5330:	dc000015 	stw	r16,0(sp)
    5334:	2500b804 	addi	r20,r4,736
    5338:	a0002326 	beq	r20,zero,53c8 <_fwalk+0xbc>
    533c:	282b883a 	mov	r21,r5
    5340:	002f883a 	mov	r23,zero
    5344:	05800044 	movi	r22,1
    5348:	04ffffc4 	movi	r19,-1
    534c:	a4400117 	ldw	r17,4(r20)
    5350:	a4800217 	ldw	r18,8(r20)
    5354:	8c7fffc4 	addi	r17,r17,-1
    5358:	88000d16 	blt	r17,zero,5390 <_fwalk+0x84>
    535c:	94000304 	addi	r16,r18,12
    5360:	94800384 	addi	r18,r18,14
    5364:	8080000b 	ldhu	r2,0(r16)
    5368:	8c7fffc4 	addi	r17,r17,-1
    536c:	813ffd04 	addi	r4,r16,-12
    5370:	b080042e 	bgeu	r22,r2,5384 <_fwalk+0x78>
    5374:	9080000f 	ldh	r2,0(r18)
    5378:	14c00226 	beq	r2,r19,5384 <_fwalk+0x78>
    537c:	a83ee83a 	callr	r21
    5380:	b8aeb03a 	or	r23,r23,r2
    5384:	84001a04 	addi	r16,r16,104
    5388:	94801a04 	addi	r18,r18,104
    538c:	8cfff51e 	bne	r17,r19,5364 <__alt_mem_Onchip_SRAM+0xf8005364>
    5390:	a5000017 	ldw	r20,0(r20)
    5394:	a03fed1e 	bne	r20,zero,534c <__alt_mem_Onchip_SRAM+0xf800534c>
    5398:	b805883a 	mov	r2,r23
    539c:	dfc00817 	ldw	ra,32(sp)
    53a0:	ddc00717 	ldw	r23,28(sp)
    53a4:	dd800617 	ldw	r22,24(sp)
    53a8:	dd400517 	ldw	r21,20(sp)
    53ac:	dd000417 	ldw	r20,16(sp)
    53b0:	dcc00317 	ldw	r19,12(sp)
    53b4:	dc800217 	ldw	r18,8(sp)
    53b8:	dc400117 	ldw	r17,4(sp)
    53bc:	dc000017 	ldw	r16,0(sp)
    53c0:	dec00904 	addi	sp,sp,36
    53c4:	f800283a 	ret
    53c8:	002f883a 	mov	r23,zero
    53cc:	003ff206 	br	5398 <__alt_mem_Onchip_SRAM+0xf8005398>

000053d0 <_fwalk_reent>:
    53d0:	defff704 	addi	sp,sp,-36
    53d4:	dd000415 	stw	r20,16(sp)
    53d8:	dfc00815 	stw	ra,32(sp)
    53dc:	ddc00715 	stw	r23,28(sp)
    53e0:	dd800615 	stw	r22,24(sp)
    53e4:	dd400515 	stw	r21,20(sp)
    53e8:	dcc00315 	stw	r19,12(sp)
    53ec:	dc800215 	stw	r18,8(sp)
    53f0:	dc400115 	stw	r17,4(sp)
    53f4:	dc000015 	stw	r16,0(sp)
    53f8:	2500b804 	addi	r20,r4,736
    53fc:	a0002326 	beq	r20,zero,548c <_fwalk_reent+0xbc>
    5400:	282b883a 	mov	r21,r5
    5404:	2027883a 	mov	r19,r4
    5408:	002f883a 	mov	r23,zero
    540c:	05800044 	movi	r22,1
    5410:	04bfffc4 	movi	r18,-1
    5414:	a4400117 	ldw	r17,4(r20)
    5418:	a4000217 	ldw	r16,8(r20)
    541c:	8c7fffc4 	addi	r17,r17,-1
    5420:	88000c16 	blt	r17,zero,5454 <_fwalk_reent+0x84>
    5424:	84000304 	addi	r16,r16,12
    5428:	8080000b 	ldhu	r2,0(r16)
    542c:	8c7fffc4 	addi	r17,r17,-1
    5430:	817ffd04 	addi	r5,r16,-12
    5434:	b080052e 	bgeu	r22,r2,544c <_fwalk_reent+0x7c>
    5438:	8080008f 	ldh	r2,2(r16)
    543c:	9809883a 	mov	r4,r19
    5440:	14800226 	beq	r2,r18,544c <_fwalk_reent+0x7c>
    5444:	a83ee83a 	callr	r21
    5448:	b8aeb03a 	or	r23,r23,r2
    544c:	84001a04 	addi	r16,r16,104
    5450:	8cbff51e 	bne	r17,r18,5428 <__alt_mem_Onchip_SRAM+0xf8005428>
    5454:	a5000017 	ldw	r20,0(r20)
    5458:	a03fee1e 	bne	r20,zero,5414 <__alt_mem_Onchip_SRAM+0xf8005414>
    545c:	b805883a 	mov	r2,r23
    5460:	dfc00817 	ldw	ra,32(sp)
    5464:	ddc00717 	ldw	r23,28(sp)
    5468:	dd800617 	ldw	r22,24(sp)
    546c:	dd400517 	ldw	r21,20(sp)
    5470:	dd000417 	ldw	r20,16(sp)
    5474:	dcc00317 	ldw	r19,12(sp)
    5478:	dc800217 	ldw	r18,8(sp)
    547c:	dc400117 	ldw	r17,4(sp)
    5480:	dc000017 	ldw	r16,0(sp)
    5484:	dec00904 	addi	sp,sp,36
    5488:	f800283a 	ret
    548c:	002f883a 	mov	r23,zero
    5490:	003ff206 	br	545c <__alt_mem_Onchip_SRAM+0xf800545c>

00005494 <_gettimeofday_r>:
    5494:	defffd04 	addi	sp,sp,-12
    5498:	2805883a 	mov	r2,r5
    549c:	dc000015 	stw	r16,0(sp)
    54a0:	04000074 	movhi	r16,1
    54a4:	dc400115 	stw	r17,4(sp)
    54a8:	840f3904 	addi	r16,r16,15588
    54ac:	2023883a 	mov	r17,r4
    54b0:	300b883a 	mov	r5,r6
    54b4:	1009883a 	mov	r4,r2
    54b8:	dfc00215 	stw	ra,8(sp)
    54bc:	80000015 	stw	zero,0(r16)
    54c0:	000d6240 	call	d624 <gettimeofday>
    54c4:	00ffffc4 	movi	r3,-1
    54c8:	10c00526 	beq	r2,r3,54e0 <_gettimeofday_r+0x4c>
    54cc:	dfc00217 	ldw	ra,8(sp)
    54d0:	dc400117 	ldw	r17,4(sp)
    54d4:	dc000017 	ldw	r16,0(sp)
    54d8:	dec00304 	addi	sp,sp,12
    54dc:	f800283a 	ret
    54e0:	80c00017 	ldw	r3,0(r16)
    54e4:	183ff926 	beq	r3,zero,54cc <__alt_mem_Onchip_SRAM+0xf80054cc>
    54e8:	88c00015 	stw	r3,0(r17)
    54ec:	003ff706 	br	54cc <__alt_mem_Onchip_SRAM+0xf80054cc>

000054f0 <_setlocale_r>:
    54f0:	30001b26 	beq	r6,zero,5560 <_setlocale_r+0x70>
    54f4:	01400074 	movhi	r5,1
    54f8:	defffe04 	addi	sp,sp,-8
    54fc:	29412a04 	addi	r5,r5,1192
    5500:	3009883a 	mov	r4,r6
    5504:	dc000015 	stw	r16,0(sp)
    5508:	dfc00115 	stw	ra,4(sp)
    550c:	3021883a 	mov	r16,r6
    5510:	0007aa80 	call	7aa8 <strcmp>
    5514:	1000061e 	bne	r2,zero,5530 <_setlocale_r+0x40>
    5518:	00800074 	movhi	r2,1
    551c:	10812904 	addi	r2,r2,1188
    5520:	dfc00117 	ldw	ra,4(sp)
    5524:	dc000017 	ldw	r16,0(sp)
    5528:	dec00204 	addi	sp,sp,8
    552c:	f800283a 	ret
    5530:	01400074 	movhi	r5,1
    5534:	29412904 	addi	r5,r5,1188
    5538:	8009883a 	mov	r4,r16
    553c:	0007aa80 	call	7aa8 <strcmp>
    5540:	103ff526 	beq	r2,zero,5518 <__alt_mem_Onchip_SRAM+0xf8005518>
    5544:	01400074 	movhi	r5,1
    5548:	29411404 	addi	r5,r5,1104
    554c:	8009883a 	mov	r4,r16
    5550:	0007aa80 	call	7aa8 <strcmp>
    5554:	103ff026 	beq	r2,zero,5518 <__alt_mem_Onchip_SRAM+0xf8005518>
    5558:	0005883a 	mov	r2,zero
    555c:	003ff006 	br	5520 <__alt_mem_Onchip_SRAM+0xf8005520>
    5560:	00800074 	movhi	r2,1
    5564:	10812904 	addi	r2,r2,1188
    5568:	f800283a 	ret

0000556c <__locale_charset>:
    556c:	00800074 	movhi	r2,1
    5570:	1082a204 	addi	r2,r2,2696
    5574:	f800283a 	ret

00005578 <__locale_mb_cur_max>:
    5578:	00800074 	movhi	r2,1
    557c:	10885604 	addi	r2,r2,8536
    5580:	10800017 	ldw	r2,0(r2)
    5584:	f800283a 	ret

00005588 <__locale_msgcharset>:
    5588:	00800074 	movhi	r2,1
    558c:	10829a04 	addi	r2,r2,2664
    5590:	f800283a 	ret

00005594 <__locale_cjk_lang>:
    5594:	0005883a 	mov	r2,zero
    5598:	f800283a 	ret

0000559c <_localeconv_r>:
    559c:	00800074 	movhi	r2,1
    55a0:	1082aa04 	addi	r2,r2,2728
    55a4:	f800283a 	ret

000055a8 <setlocale>:
    55a8:	00800074 	movhi	r2,1
    55ac:	10885504 	addi	r2,r2,8532
    55b0:	280d883a 	mov	r6,r5
    55b4:	200b883a 	mov	r5,r4
    55b8:	11000017 	ldw	r4,0(r2)
    55bc:	00054f01 	jmpi	54f0 <_setlocale_r>

000055c0 <localeconv>:
    55c0:	00800074 	movhi	r2,1
    55c4:	1082aa04 	addi	r2,r2,2728
    55c8:	f800283a 	ret

000055cc <_malloc_r>:
    55cc:	defff504 	addi	sp,sp,-44
    55d0:	dc800315 	stw	r18,12(sp)
    55d4:	dfc00a15 	stw	ra,40(sp)
    55d8:	df000915 	stw	fp,36(sp)
    55dc:	ddc00815 	stw	r23,32(sp)
    55e0:	dd800715 	stw	r22,28(sp)
    55e4:	dd400615 	stw	r21,24(sp)
    55e8:	dd000515 	stw	r20,20(sp)
    55ec:	dcc00415 	stw	r19,16(sp)
    55f0:	dc400215 	stw	r17,8(sp)
    55f4:	dc000115 	stw	r16,4(sp)
    55f8:	288002c4 	addi	r2,r5,11
    55fc:	00c00584 	movi	r3,22
    5600:	2025883a 	mov	r18,r4
    5604:	18807f2e 	bgeu	r3,r2,5804 <_malloc_r+0x238>
    5608:	047ffe04 	movi	r17,-8
    560c:	1462703a 	and	r17,r2,r17
    5610:	8800a316 	blt	r17,zero,58a0 <_malloc_r+0x2d4>
    5614:	8940a236 	bltu	r17,r5,58a0 <_malloc_r+0x2d4>
    5618:	000db800 	call	db80 <__malloc_lock>
    561c:	00807dc4 	movi	r2,503
    5620:	1441e92e 	bgeu	r2,r17,5dc8 <_malloc_r+0x7fc>
    5624:	8804d27a 	srli	r2,r17,9
    5628:	1000a126 	beq	r2,zero,58b0 <_malloc_r+0x2e4>
    562c:	00c00104 	movi	r3,4
    5630:	18811e36 	bltu	r3,r2,5aac <_malloc_r+0x4e0>
    5634:	8804d1ba 	srli	r2,r17,6
    5638:	12000e44 	addi	r8,r2,57
    563c:	11c00e04 	addi	r7,r2,56
    5640:	4209883a 	add	r4,r8,r8
    5644:	04c00074 	movhi	r19,1
    5648:	2109883a 	add	r4,r4,r4
    564c:	9cc2b804 	addi	r19,r19,2784
    5650:	2109883a 	add	r4,r4,r4
    5654:	9909883a 	add	r4,r19,r4
    5658:	24000117 	ldw	r16,4(r4)
    565c:	213ffe04 	addi	r4,r4,-8
    5660:	24009726 	beq	r4,r16,58c0 <_malloc_r+0x2f4>
    5664:	80800117 	ldw	r2,4(r16)
    5668:	01bfff04 	movi	r6,-4
    566c:	014003c4 	movi	r5,15
    5670:	1184703a 	and	r2,r2,r6
    5674:	1447c83a 	sub	r3,r2,r17
    5678:	28c00716 	blt	r5,r3,5698 <_malloc_r+0xcc>
    567c:	1800920e 	bge	r3,zero,58c8 <_malloc_r+0x2fc>
    5680:	84000317 	ldw	r16,12(r16)
    5684:	24008e26 	beq	r4,r16,58c0 <_malloc_r+0x2f4>
    5688:	80800117 	ldw	r2,4(r16)
    568c:	1184703a 	and	r2,r2,r6
    5690:	1447c83a 	sub	r3,r2,r17
    5694:	28fff90e 	bge	r5,r3,567c <__alt_mem_Onchip_SRAM+0xf800567c>
    5698:	3809883a 	mov	r4,r7
    569c:	01800074 	movhi	r6,1
    56a0:	9c000417 	ldw	r16,16(r19)
    56a4:	3182b804 	addi	r6,r6,2784
    56a8:	32000204 	addi	r8,r6,8
    56ac:	82013426 	beq	r16,r8,5b80 <_malloc_r+0x5b4>
    56b0:	80c00117 	ldw	r3,4(r16)
    56b4:	00bfff04 	movi	r2,-4
    56b8:	188e703a 	and	r7,r3,r2
    56bc:	3c45c83a 	sub	r2,r7,r17
    56c0:	00c003c4 	movi	r3,15
    56c4:	18811f16 	blt	r3,r2,5b44 <_malloc_r+0x578>
    56c8:	32000515 	stw	r8,20(r6)
    56cc:	32000415 	stw	r8,16(r6)
    56d0:	10007f0e 	bge	r2,zero,58d0 <_malloc_r+0x304>
    56d4:	00807fc4 	movi	r2,511
    56d8:	11c0fd36 	bltu	r2,r7,5ad0 <_malloc_r+0x504>
    56dc:	3806d0fa 	srli	r3,r7,3
    56e0:	01c00044 	movi	r7,1
    56e4:	30800117 	ldw	r2,4(r6)
    56e8:	19400044 	addi	r5,r3,1
    56ec:	294b883a 	add	r5,r5,r5
    56f0:	1807d0ba 	srai	r3,r3,2
    56f4:	294b883a 	add	r5,r5,r5
    56f8:	294b883a 	add	r5,r5,r5
    56fc:	298b883a 	add	r5,r5,r6
    5700:	38c6983a 	sll	r3,r7,r3
    5704:	29c00017 	ldw	r7,0(r5)
    5708:	2a7ffe04 	addi	r9,r5,-8
    570c:	1886b03a 	or	r3,r3,r2
    5710:	82400315 	stw	r9,12(r16)
    5714:	81c00215 	stw	r7,8(r16)
    5718:	30c00115 	stw	r3,4(r6)
    571c:	2c000015 	stw	r16,0(r5)
    5720:	3c000315 	stw	r16,12(r7)
    5724:	2005d0ba 	srai	r2,r4,2
    5728:	01400044 	movi	r5,1
    572c:	288a983a 	sll	r5,r5,r2
    5730:	19406f36 	bltu	r3,r5,58f0 <_malloc_r+0x324>
    5734:	28c4703a 	and	r2,r5,r3
    5738:	10000a1e 	bne	r2,zero,5764 <_malloc_r+0x198>
    573c:	00bfff04 	movi	r2,-4
    5740:	294b883a 	add	r5,r5,r5
    5744:	2088703a 	and	r4,r4,r2
    5748:	28c4703a 	and	r2,r5,r3
    574c:	21000104 	addi	r4,r4,4
    5750:	1000041e 	bne	r2,zero,5764 <_malloc_r+0x198>
    5754:	294b883a 	add	r5,r5,r5
    5758:	28c4703a 	and	r2,r5,r3
    575c:	21000104 	addi	r4,r4,4
    5760:	103ffc26 	beq	r2,zero,5754 <__alt_mem_Onchip_SRAM+0xf8005754>
    5764:	02bfff04 	movi	r10,-4
    5768:	024003c4 	movi	r9,15
    576c:	21800044 	addi	r6,r4,1
    5770:	318d883a 	add	r6,r6,r6
    5774:	318d883a 	add	r6,r6,r6
    5778:	318d883a 	add	r6,r6,r6
    577c:	998d883a 	add	r6,r19,r6
    5780:	333ffe04 	addi	r12,r6,-8
    5784:	2017883a 	mov	r11,r4
    5788:	31800104 	addi	r6,r6,4
    578c:	34000017 	ldw	r16,0(r6)
    5790:	31fffd04 	addi	r7,r6,-12
    5794:	81c0041e 	bne	r16,r7,57a8 <_malloc_r+0x1dc>
    5798:	0000fb06 	br	5b88 <_malloc_r+0x5bc>
    579c:	1801030e 	bge	r3,zero,5bac <_malloc_r+0x5e0>
    57a0:	84000317 	ldw	r16,12(r16)
    57a4:	81c0f826 	beq	r16,r7,5b88 <_malloc_r+0x5bc>
    57a8:	80800117 	ldw	r2,4(r16)
    57ac:	1284703a 	and	r2,r2,r10
    57b0:	1447c83a 	sub	r3,r2,r17
    57b4:	48fff90e 	bge	r9,r3,579c <__alt_mem_Onchip_SRAM+0xf800579c>
    57b8:	80800317 	ldw	r2,12(r16)
    57bc:	81000217 	ldw	r4,8(r16)
    57c0:	89400054 	ori	r5,r17,1
    57c4:	81400115 	stw	r5,4(r16)
    57c8:	20800315 	stw	r2,12(r4)
    57cc:	11000215 	stw	r4,8(r2)
    57d0:	8463883a 	add	r17,r16,r17
    57d4:	9c400515 	stw	r17,20(r19)
    57d8:	9c400415 	stw	r17,16(r19)
    57dc:	18800054 	ori	r2,r3,1
    57e0:	88800115 	stw	r2,4(r17)
    57e4:	8a000315 	stw	r8,12(r17)
    57e8:	8a000215 	stw	r8,8(r17)
    57ec:	88e3883a 	add	r17,r17,r3
    57f0:	88c00015 	stw	r3,0(r17)
    57f4:	9009883a 	mov	r4,r18
    57f8:	000dba40 	call	dba4 <__malloc_unlock>
    57fc:	80800204 	addi	r2,r16,8
    5800:	00001b06 	br	5870 <_malloc_r+0x2a4>
    5804:	04400404 	movi	r17,16
    5808:	89402536 	bltu	r17,r5,58a0 <_malloc_r+0x2d4>
    580c:	000db800 	call	db80 <__malloc_lock>
    5810:	00800184 	movi	r2,6
    5814:	01000084 	movi	r4,2
    5818:	04c00074 	movhi	r19,1
    581c:	1085883a 	add	r2,r2,r2
    5820:	9cc2b804 	addi	r19,r19,2784
    5824:	1085883a 	add	r2,r2,r2
    5828:	9885883a 	add	r2,r19,r2
    582c:	14000117 	ldw	r16,4(r2)
    5830:	10fffe04 	addi	r3,r2,-8
    5834:	80c0d926 	beq	r16,r3,5b9c <_malloc_r+0x5d0>
    5838:	80c00117 	ldw	r3,4(r16)
    583c:	81000317 	ldw	r4,12(r16)
    5840:	00bfff04 	movi	r2,-4
    5844:	1884703a 	and	r2,r3,r2
    5848:	81400217 	ldw	r5,8(r16)
    584c:	8085883a 	add	r2,r16,r2
    5850:	10c00117 	ldw	r3,4(r2)
    5854:	29000315 	stw	r4,12(r5)
    5858:	21400215 	stw	r5,8(r4)
    585c:	18c00054 	ori	r3,r3,1
    5860:	10c00115 	stw	r3,4(r2)
    5864:	9009883a 	mov	r4,r18
    5868:	000dba40 	call	dba4 <__malloc_unlock>
    586c:	80800204 	addi	r2,r16,8
    5870:	dfc00a17 	ldw	ra,40(sp)
    5874:	df000917 	ldw	fp,36(sp)
    5878:	ddc00817 	ldw	r23,32(sp)
    587c:	dd800717 	ldw	r22,28(sp)
    5880:	dd400617 	ldw	r21,24(sp)
    5884:	dd000517 	ldw	r20,20(sp)
    5888:	dcc00417 	ldw	r19,16(sp)
    588c:	dc800317 	ldw	r18,12(sp)
    5890:	dc400217 	ldw	r17,8(sp)
    5894:	dc000117 	ldw	r16,4(sp)
    5898:	dec00b04 	addi	sp,sp,44
    589c:	f800283a 	ret
    58a0:	00800304 	movi	r2,12
    58a4:	90800015 	stw	r2,0(r18)
    58a8:	0005883a 	mov	r2,zero
    58ac:	003ff006 	br	5870 <__alt_mem_Onchip_SRAM+0xf8005870>
    58b0:	01002004 	movi	r4,128
    58b4:	02001004 	movi	r8,64
    58b8:	01c00fc4 	movi	r7,63
    58bc:	003f6106 	br	5644 <__alt_mem_Onchip_SRAM+0xf8005644>
    58c0:	4009883a 	mov	r4,r8
    58c4:	003f7506 	br	569c <__alt_mem_Onchip_SRAM+0xf800569c>
    58c8:	81000317 	ldw	r4,12(r16)
    58cc:	003fde06 	br	5848 <__alt_mem_Onchip_SRAM+0xf8005848>
    58d0:	81c5883a 	add	r2,r16,r7
    58d4:	11400117 	ldw	r5,4(r2)
    58d8:	9009883a 	mov	r4,r18
    58dc:	29400054 	ori	r5,r5,1
    58e0:	11400115 	stw	r5,4(r2)
    58e4:	000dba40 	call	dba4 <__malloc_unlock>
    58e8:	80800204 	addi	r2,r16,8
    58ec:	003fe006 	br	5870 <__alt_mem_Onchip_SRAM+0xf8005870>
    58f0:	9c000217 	ldw	r16,8(r19)
    58f4:	00bfff04 	movi	r2,-4
    58f8:	85800117 	ldw	r22,4(r16)
    58fc:	b0ac703a 	and	r22,r22,r2
    5900:	b4400336 	bltu	r22,r17,5910 <_malloc_r+0x344>
    5904:	b445c83a 	sub	r2,r22,r17
    5908:	00c003c4 	movi	r3,15
    590c:	18805d16 	blt	r3,r2,5a84 <_malloc_r+0x4b8>
    5910:	05c00074 	movhi	r23,1
    5914:	00800074 	movhi	r2,1
    5918:	108f3f04 	addi	r2,r2,15612
    591c:	bdc85704 	addi	r23,r23,8540
    5920:	15400017 	ldw	r21,0(r2)
    5924:	b8c00017 	ldw	r3,0(r23)
    5928:	00bfffc4 	movi	r2,-1
    592c:	858d883a 	add	r6,r16,r22
    5930:	8d6b883a 	add	r21,r17,r21
    5934:	1880ea26 	beq	r3,r2,5ce0 <_malloc_r+0x714>
    5938:	ad4403c4 	addi	r21,r21,4111
    593c:	00bc0004 	movi	r2,-4096
    5940:	a8aa703a 	and	r21,r21,r2
    5944:	a80b883a 	mov	r5,r21
    5948:	9009883a 	mov	r4,r18
    594c:	d9800015 	stw	r6,0(sp)
    5950:	00079180 	call	7918 <_sbrk_r>
    5954:	1029883a 	mov	r20,r2
    5958:	00bfffc4 	movi	r2,-1
    595c:	d9800017 	ldw	r6,0(sp)
    5960:	a080e826 	beq	r20,r2,5d04 <_malloc_r+0x738>
    5964:	a180a636 	bltu	r20,r6,5c00 <_malloc_r+0x634>
    5968:	07000074 	movhi	fp,1
    596c:	e70f4b04 	addi	fp,fp,15660
    5970:	e0800017 	ldw	r2,0(fp)
    5974:	a887883a 	add	r3,r21,r2
    5978:	e0c00015 	stw	r3,0(fp)
    597c:	3500e626 	beq	r6,r20,5d18 <_malloc_r+0x74c>
    5980:	b9000017 	ldw	r4,0(r23)
    5984:	00bfffc4 	movi	r2,-1
    5988:	2080ee26 	beq	r4,r2,5d44 <_malloc_r+0x778>
    598c:	a185c83a 	sub	r2,r20,r6
    5990:	10c5883a 	add	r2,r2,r3
    5994:	e0800015 	stw	r2,0(fp)
    5998:	a0c001cc 	andi	r3,r20,7
    599c:	1800bc26 	beq	r3,zero,5c90 <_malloc_r+0x6c4>
    59a0:	a0e9c83a 	sub	r20,r20,r3
    59a4:	00840204 	movi	r2,4104
    59a8:	a5000204 	addi	r20,r20,8
    59ac:	10c7c83a 	sub	r3,r2,r3
    59b0:	a545883a 	add	r2,r20,r21
    59b4:	1083ffcc 	andi	r2,r2,4095
    59b8:	18abc83a 	sub	r21,r3,r2
    59bc:	a80b883a 	mov	r5,r21
    59c0:	9009883a 	mov	r4,r18
    59c4:	00079180 	call	7918 <_sbrk_r>
    59c8:	00ffffc4 	movi	r3,-1
    59cc:	10c0e126 	beq	r2,r3,5d54 <_malloc_r+0x788>
    59d0:	1505c83a 	sub	r2,r2,r20
    59d4:	1545883a 	add	r2,r2,r21
    59d8:	10800054 	ori	r2,r2,1
    59dc:	e0c00017 	ldw	r3,0(fp)
    59e0:	9d000215 	stw	r20,8(r19)
    59e4:	a0800115 	stw	r2,4(r20)
    59e8:	a8c7883a 	add	r3,r21,r3
    59ec:	e0c00015 	stw	r3,0(fp)
    59f0:	84c00e26 	beq	r16,r19,5a2c <_malloc_r+0x460>
    59f4:	018003c4 	movi	r6,15
    59f8:	3580a72e 	bgeu	r6,r22,5c98 <_malloc_r+0x6cc>
    59fc:	81400117 	ldw	r5,4(r16)
    5a00:	013ffe04 	movi	r4,-8
    5a04:	b0bffd04 	addi	r2,r22,-12
    5a08:	1104703a 	and	r2,r2,r4
    5a0c:	2900004c 	andi	r4,r5,1
    5a10:	2088b03a 	or	r4,r4,r2
    5a14:	81000115 	stw	r4,4(r16)
    5a18:	01400144 	movi	r5,5
    5a1c:	8089883a 	add	r4,r16,r2
    5a20:	21400115 	stw	r5,4(r4)
    5a24:	21400215 	stw	r5,8(r4)
    5a28:	3080cd36 	bltu	r6,r2,5d60 <_malloc_r+0x794>
    5a2c:	00800074 	movhi	r2,1
    5a30:	108f3e04 	addi	r2,r2,15608
    5a34:	11000017 	ldw	r4,0(r2)
    5a38:	20c0012e 	bgeu	r4,r3,5a40 <_malloc_r+0x474>
    5a3c:	10c00015 	stw	r3,0(r2)
    5a40:	00800074 	movhi	r2,1
    5a44:	108f3d04 	addi	r2,r2,15604
    5a48:	11000017 	ldw	r4,0(r2)
    5a4c:	9c000217 	ldw	r16,8(r19)
    5a50:	20c0012e 	bgeu	r4,r3,5a58 <_malloc_r+0x48c>
    5a54:	10c00015 	stw	r3,0(r2)
    5a58:	80c00117 	ldw	r3,4(r16)
    5a5c:	00bfff04 	movi	r2,-4
    5a60:	1886703a 	and	r3,r3,r2
    5a64:	1c45c83a 	sub	r2,r3,r17
    5a68:	1c400236 	bltu	r3,r17,5a74 <_malloc_r+0x4a8>
    5a6c:	00c003c4 	movi	r3,15
    5a70:	18800416 	blt	r3,r2,5a84 <_malloc_r+0x4b8>
    5a74:	9009883a 	mov	r4,r18
    5a78:	000dba40 	call	dba4 <__malloc_unlock>
    5a7c:	0005883a 	mov	r2,zero
    5a80:	003f7b06 	br	5870 <__alt_mem_Onchip_SRAM+0xf8005870>
    5a84:	88c00054 	ori	r3,r17,1
    5a88:	80c00115 	stw	r3,4(r16)
    5a8c:	8463883a 	add	r17,r16,r17
    5a90:	10800054 	ori	r2,r2,1
    5a94:	9c400215 	stw	r17,8(r19)
    5a98:	88800115 	stw	r2,4(r17)
    5a9c:	9009883a 	mov	r4,r18
    5aa0:	000dba40 	call	dba4 <__malloc_unlock>
    5aa4:	80800204 	addi	r2,r16,8
    5aa8:	003f7106 	br	5870 <__alt_mem_Onchip_SRAM+0xf8005870>
    5aac:	00c00504 	movi	r3,20
    5ab0:	18804a2e 	bgeu	r3,r2,5bdc <_malloc_r+0x610>
    5ab4:	00c01504 	movi	r3,84
    5ab8:	18806e36 	bltu	r3,r2,5c74 <_malloc_r+0x6a8>
    5abc:	8804d33a 	srli	r2,r17,12
    5ac0:	12001bc4 	addi	r8,r2,111
    5ac4:	11c01b84 	addi	r7,r2,110
    5ac8:	4209883a 	add	r4,r8,r8
    5acc:	003edd06 	br	5644 <__alt_mem_Onchip_SRAM+0xf8005644>
    5ad0:	3804d27a 	srli	r2,r7,9
    5ad4:	00c00104 	movi	r3,4
    5ad8:	1880442e 	bgeu	r3,r2,5bec <_malloc_r+0x620>
    5adc:	00c00504 	movi	r3,20
    5ae0:	18808136 	bltu	r3,r2,5ce8 <_malloc_r+0x71c>
    5ae4:	11401704 	addi	r5,r2,92
    5ae8:	10c016c4 	addi	r3,r2,91
    5aec:	294b883a 	add	r5,r5,r5
    5af0:	294b883a 	add	r5,r5,r5
    5af4:	294b883a 	add	r5,r5,r5
    5af8:	994b883a 	add	r5,r19,r5
    5afc:	28800017 	ldw	r2,0(r5)
    5b00:	01800074 	movhi	r6,1
    5b04:	297ffe04 	addi	r5,r5,-8
    5b08:	3182b804 	addi	r6,r6,2784
    5b0c:	28806526 	beq	r5,r2,5ca4 <_malloc_r+0x6d8>
    5b10:	01bfff04 	movi	r6,-4
    5b14:	10c00117 	ldw	r3,4(r2)
    5b18:	1986703a 	and	r3,r3,r6
    5b1c:	38c0022e 	bgeu	r7,r3,5b28 <_malloc_r+0x55c>
    5b20:	10800217 	ldw	r2,8(r2)
    5b24:	28bffb1e 	bne	r5,r2,5b14 <__alt_mem_Onchip_SRAM+0xf8005b14>
    5b28:	11400317 	ldw	r5,12(r2)
    5b2c:	98c00117 	ldw	r3,4(r19)
    5b30:	81400315 	stw	r5,12(r16)
    5b34:	80800215 	stw	r2,8(r16)
    5b38:	2c000215 	stw	r16,8(r5)
    5b3c:	14000315 	stw	r16,12(r2)
    5b40:	003ef806 	br	5724 <__alt_mem_Onchip_SRAM+0xf8005724>
    5b44:	88c00054 	ori	r3,r17,1
    5b48:	80c00115 	stw	r3,4(r16)
    5b4c:	8463883a 	add	r17,r16,r17
    5b50:	34400515 	stw	r17,20(r6)
    5b54:	34400415 	stw	r17,16(r6)
    5b58:	10c00054 	ori	r3,r2,1
    5b5c:	8a000315 	stw	r8,12(r17)
    5b60:	8a000215 	stw	r8,8(r17)
    5b64:	88c00115 	stw	r3,4(r17)
    5b68:	88a3883a 	add	r17,r17,r2
    5b6c:	88800015 	stw	r2,0(r17)
    5b70:	9009883a 	mov	r4,r18
    5b74:	000dba40 	call	dba4 <__malloc_unlock>
    5b78:	80800204 	addi	r2,r16,8
    5b7c:	003f3c06 	br	5870 <__alt_mem_Onchip_SRAM+0xf8005870>
    5b80:	30c00117 	ldw	r3,4(r6)
    5b84:	003ee706 	br	5724 <__alt_mem_Onchip_SRAM+0xf8005724>
    5b88:	5ac00044 	addi	r11,r11,1
    5b8c:	588000cc 	andi	r2,r11,3
    5b90:	31800204 	addi	r6,r6,8
    5b94:	103efd1e 	bne	r2,zero,578c <__alt_mem_Onchip_SRAM+0xf800578c>
    5b98:	00002406 	br	5c2c <_malloc_r+0x660>
    5b9c:	14000317 	ldw	r16,12(r2)
    5ba0:	143f251e 	bne	r2,r16,5838 <__alt_mem_Onchip_SRAM+0xf8005838>
    5ba4:	21000084 	addi	r4,r4,2
    5ba8:	003ebc06 	br	569c <__alt_mem_Onchip_SRAM+0xf800569c>
    5bac:	8085883a 	add	r2,r16,r2
    5bb0:	10c00117 	ldw	r3,4(r2)
    5bb4:	81000317 	ldw	r4,12(r16)
    5bb8:	81400217 	ldw	r5,8(r16)
    5bbc:	18c00054 	ori	r3,r3,1
    5bc0:	10c00115 	stw	r3,4(r2)
    5bc4:	29000315 	stw	r4,12(r5)
    5bc8:	21400215 	stw	r5,8(r4)
    5bcc:	9009883a 	mov	r4,r18
    5bd0:	000dba40 	call	dba4 <__malloc_unlock>
    5bd4:	80800204 	addi	r2,r16,8
    5bd8:	003f2506 	br	5870 <__alt_mem_Onchip_SRAM+0xf8005870>
    5bdc:	12001704 	addi	r8,r2,92
    5be0:	11c016c4 	addi	r7,r2,91
    5be4:	4209883a 	add	r4,r8,r8
    5be8:	003e9606 	br	5644 <__alt_mem_Onchip_SRAM+0xf8005644>
    5bec:	3804d1ba 	srli	r2,r7,6
    5bf0:	11400e44 	addi	r5,r2,57
    5bf4:	10c00e04 	addi	r3,r2,56
    5bf8:	294b883a 	add	r5,r5,r5
    5bfc:	003fbc06 	br	5af0 <__alt_mem_Onchip_SRAM+0xf8005af0>
    5c00:	84ff5926 	beq	r16,r19,5968 <__alt_mem_Onchip_SRAM+0xf8005968>
    5c04:	00800074 	movhi	r2,1
    5c08:	1082b804 	addi	r2,r2,2784
    5c0c:	14000217 	ldw	r16,8(r2)
    5c10:	00bfff04 	movi	r2,-4
    5c14:	80c00117 	ldw	r3,4(r16)
    5c18:	1886703a 	and	r3,r3,r2
    5c1c:	003f9106 	br	5a64 <__alt_mem_Onchip_SRAM+0xf8005a64>
    5c20:	60800217 	ldw	r2,8(r12)
    5c24:	213fffc4 	addi	r4,r4,-1
    5c28:	1300651e 	bne	r2,r12,5dc0 <_malloc_r+0x7f4>
    5c2c:	208000cc 	andi	r2,r4,3
    5c30:	633ffe04 	addi	r12,r12,-8
    5c34:	103ffa1e 	bne	r2,zero,5c20 <__alt_mem_Onchip_SRAM+0xf8005c20>
    5c38:	98800117 	ldw	r2,4(r19)
    5c3c:	0146303a 	nor	r3,zero,r5
    5c40:	1884703a 	and	r2,r3,r2
    5c44:	98800115 	stw	r2,4(r19)
    5c48:	294b883a 	add	r5,r5,r5
    5c4c:	117f2836 	bltu	r2,r5,58f0 <__alt_mem_Onchip_SRAM+0xf80058f0>
    5c50:	283f2726 	beq	r5,zero,58f0 <__alt_mem_Onchip_SRAM+0xf80058f0>
    5c54:	2886703a 	and	r3,r5,r2
    5c58:	5809883a 	mov	r4,r11
    5c5c:	183ec31e 	bne	r3,zero,576c <__alt_mem_Onchip_SRAM+0xf800576c>
    5c60:	294b883a 	add	r5,r5,r5
    5c64:	2886703a 	and	r3,r5,r2
    5c68:	21000104 	addi	r4,r4,4
    5c6c:	183ffc26 	beq	r3,zero,5c60 <__alt_mem_Onchip_SRAM+0xf8005c60>
    5c70:	003ebe06 	br	576c <__alt_mem_Onchip_SRAM+0xf800576c>
    5c74:	00c05504 	movi	r3,340
    5c78:	18801236 	bltu	r3,r2,5cc4 <_malloc_r+0x6f8>
    5c7c:	8804d3fa 	srli	r2,r17,15
    5c80:	12001e04 	addi	r8,r2,120
    5c84:	11c01dc4 	addi	r7,r2,119
    5c88:	4209883a 	add	r4,r8,r8
    5c8c:	003e6d06 	br	5644 <__alt_mem_Onchip_SRAM+0xf8005644>
    5c90:	00c40004 	movi	r3,4096
    5c94:	003f4606 	br	59b0 <__alt_mem_Onchip_SRAM+0xf80059b0>
    5c98:	00800044 	movi	r2,1
    5c9c:	a0800115 	stw	r2,4(r20)
    5ca0:	003f7406 	br	5a74 <__alt_mem_Onchip_SRAM+0xf8005a74>
    5ca4:	1805d0ba 	srai	r2,r3,2
    5ca8:	01c00044 	movi	r7,1
    5cac:	30c00117 	ldw	r3,4(r6)
    5cb0:	388e983a 	sll	r7,r7,r2
    5cb4:	2805883a 	mov	r2,r5
    5cb8:	38c6b03a 	or	r3,r7,r3
    5cbc:	30c00115 	stw	r3,4(r6)
    5cc0:	003f9b06 	br	5b30 <__alt_mem_Onchip_SRAM+0xf8005b30>
    5cc4:	00c15504 	movi	r3,1364
    5cc8:	18801a36 	bltu	r3,r2,5d34 <_malloc_r+0x768>
    5ccc:	8804d4ba 	srli	r2,r17,18
    5cd0:	12001f44 	addi	r8,r2,125
    5cd4:	11c01f04 	addi	r7,r2,124
    5cd8:	4209883a 	add	r4,r8,r8
    5cdc:	003e5906 	br	5644 <__alt_mem_Onchip_SRAM+0xf8005644>
    5ce0:	ad400404 	addi	r21,r21,16
    5ce4:	003f1706 	br	5944 <__alt_mem_Onchip_SRAM+0xf8005944>
    5ce8:	00c01504 	movi	r3,84
    5cec:	18802336 	bltu	r3,r2,5d7c <_malloc_r+0x7b0>
    5cf0:	3804d33a 	srli	r2,r7,12
    5cf4:	11401bc4 	addi	r5,r2,111
    5cf8:	10c01b84 	addi	r3,r2,110
    5cfc:	294b883a 	add	r5,r5,r5
    5d00:	003f7b06 	br	5af0 <__alt_mem_Onchip_SRAM+0xf8005af0>
    5d04:	9c000217 	ldw	r16,8(r19)
    5d08:	00bfff04 	movi	r2,-4
    5d0c:	80c00117 	ldw	r3,4(r16)
    5d10:	1886703a 	and	r3,r3,r2
    5d14:	003f5306 	br	5a64 <__alt_mem_Onchip_SRAM+0xf8005a64>
    5d18:	3083ffcc 	andi	r2,r6,4095
    5d1c:	103f181e 	bne	r2,zero,5980 <__alt_mem_Onchip_SRAM+0xf8005980>
    5d20:	99000217 	ldw	r4,8(r19)
    5d24:	b545883a 	add	r2,r22,r21
    5d28:	10800054 	ori	r2,r2,1
    5d2c:	20800115 	stw	r2,4(r4)
    5d30:	003f3e06 	br	5a2c <__alt_mem_Onchip_SRAM+0xf8005a2c>
    5d34:	01003f84 	movi	r4,254
    5d38:	02001fc4 	movi	r8,127
    5d3c:	01c01f84 	movi	r7,126
    5d40:	003e4006 	br	5644 <__alt_mem_Onchip_SRAM+0xf8005644>
    5d44:	00800074 	movhi	r2,1
    5d48:	10885704 	addi	r2,r2,8540
    5d4c:	15000015 	stw	r20,0(r2)
    5d50:	003f1106 	br	5998 <__alt_mem_Onchip_SRAM+0xf8005998>
    5d54:	00800044 	movi	r2,1
    5d58:	002b883a 	mov	r21,zero
    5d5c:	003f1f06 	br	59dc <__alt_mem_Onchip_SRAM+0xf80059dc>
    5d60:	81400204 	addi	r5,r16,8
    5d64:	9009883a 	mov	r4,r18
    5d68:	00098a80 	call	98a8 <_free_r>
    5d6c:	00800074 	movhi	r2,1
    5d70:	108f4b04 	addi	r2,r2,15660
    5d74:	10c00017 	ldw	r3,0(r2)
    5d78:	003f2c06 	br	5a2c <__alt_mem_Onchip_SRAM+0xf8005a2c>
    5d7c:	00c05504 	movi	r3,340
    5d80:	18800536 	bltu	r3,r2,5d98 <_malloc_r+0x7cc>
    5d84:	3804d3fa 	srli	r2,r7,15
    5d88:	11401e04 	addi	r5,r2,120
    5d8c:	10c01dc4 	addi	r3,r2,119
    5d90:	294b883a 	add	r5,r5,r5
    5d94:	003f5606 	br	5af0 <__alt_mem_Onchip_SRAM+0xf8005af0>
    5d98:	00c15504 	movi	r3,1364
    5d9c:	18800536 	bltu	r3,r2,5db4 <_malloc_r+0x7e8>
    5da0:	3804d4ba 	srli	r2,r7,18
    5da4:	11401f44 	addi	r5,r2,125
    5da8:	10c01f04 	addi	r3,r2,124
    5dac:	294b883a 	add	r5,r5,r5
    5db0:	003f4f06 	br	5af0 <__alt_mem_Onchip_SRAM+0xf8005af0>
    5db4:	01403f84 	movi	r5,254
    5db8:	00c01f84 	movi	r3,126
    5dbc:	003f4c06 	br	5af0 <__alt_mem_Onchip_SRAM+0xf8005af0>
    5dc0:	98800117 	ldw	r2,4(r19)
    5dc4:	003fa006 	br	5c48 <__alt_mem_Onchip_SRAM+0xf8005c48>
    5dc8:	8808d0fa 	srli	r4,r17,3
    5dcc:	20800044 	addi	r2,r4,1
    5dd0:	1085883a 	add	r2,r2,r2
    5dd4:	003e9006 	br	5818 <__alt_mem_Onchip_SRAM+0xf8005818>

00005dd8 <memchr>:
    5dd8:	208000cc 	andi	r2,r4,3
    5ddc:	280f883a 	mov	r7,r5
    5de0:	10003426 	beq	r2,zero,5eb4 <memchr+0xdc>
    5de4:	30bfffc4 	addi	r2,r6,-1
    5de8:	30001a26 	beq	r6,zero,5e54 <memchr+0x7c>
    5dec:	20c00003 	ldbu	r3,0(r4)
    5df0:	29803fcc 	andi	r6,r5,255
    5df4:	30c0051e 	bne	r6,r3,5e0c <memchr+0x34>
    5df8:	00001806 	br	5e5c <memchr+0x84>
    5dfc:	10001526 	beq	r2,zero,5e54 <memchr+0x7c>
    5e00:	20c00003 	ldbu	r3,0(r4)
    5e04:	10bfffc4 	addi	r2,r2,-1
    5e08:	30c01426 	beq	r6,r3,5e5c <memchr+0x84>
    5e0c:	21000044 	addi	r4,r4,1
    5e10:	20c000cc 	andi	r3,r4,3
    5e14:	183ff91e 	bne	r3,zero,5dfc <__alt_mem_Onchip_SRAM+0xf8005dfc>
    5e18:	020000c4 	movi	r8,3
    5e1c:	40801136 	bltu	r8,r2,5e64 <memchr+0x8c>
    5e20:	10000c26 	beq	r2,zero,5e54 <memchr+0x7c>
    5e24:	20c00003 	ldbu	r3,0(r4)
    5e28:	29403fcc 	andi	r5,r5,255
    5e2c:	28c00b26 	beq	r5,r3,5e5c <memchr+0x84>
    5e30:	20c00044 	addi	r3,r4,1
    5e34:	39803fcc 	andi	r6,r7,255
    5e38:	2089883a 	add	r4,r4,r2
    5e3c:	00000306 	br	5e4c <memchr+0x74>
    5e40:	18c00044 	addi	r3,r3,1
    5e44:	197fffc3 	ldbu	r5,-1(r3)
    5e48:	31400526 	beq	r6,r5,5e60 <memchr+0x88>
    5e4c:	1805883a 	mov	r2,r3
    5e50:	20fffb1e 	bne	r4,r3,5e40 <__alt_mem_Onchip_SRAM+0xf8005e40>
    5e54:	0005883a 	mov	r2,zero
    5e58:	f800283a 	ret
    5e5c:	2005883a 	mov	r2,r4
    5e60:	f800283a 	ret
    5e64:	28c03fcc 	andi	r3,r5,255
    5e68:	1812923a 	slli	r9,r3,8
    5e6c:	02ffbff4 	movhi	r11,65279
    5e70:	02a02074 	movhi	r10,32897
    5e74:	48d2b03a 	or	r9,r9,r3
    5e78:	4806943a 	slli	r3,r9,16
    5e7c:	5affbfc4 	addi	r11,r11,-257
    5e80:	52a02004 	addi	r10,r10,-32640
    5e84:	48d2b03a 	or	r9,r9,r3
    5e88:	20c00017 	ldw	r3,0(r4)
    5e8c:	48c6f03a 	xor	r3,r9,r3
    5e90:	1acd883a 	add	r6,r3,r11
    5e94:	00c6303a 	nor	r3,zero,r3
    5e98:	30c6703a 	and	r3,r6,r3
    5e9c:	1a86703a 	and	r3,r3,r10
    5ea0:	183fe01e 	bne	r3,zero,5e24 <__alt_mem_Onchip_SRAM+0xf8005e24>
    5ea4:	10bfff04 	addi	r2,r2,-4
    5ea8:	21000104 	addi	r4,r4,4
    5eac:	40bff636 	bltu	r8,r2,5e88 <__alt_mem_Onchip_SRAM+0xf8005e88>
    5eb0:	003fdb06 	br	5e20 <__alt_mem_Onchip_SRAM+0xf8005e20>
    5eb4:	3005883a 	mov	r2,r6
    5eb8:	003fd706 	br	5e18 <__alt_mem_Onchip_SRAM+0xf8005e18>

00005ebc <memcpy>:
    5ebc:	defffd04 	addi	sp,sp,-12
    5ec0:	dfc00215 	stw	ra,8(sp)
    5ec4:	dc400115 	stw	r17,4(sp)
    5ec8:	dc000015 	stw	r16,0(sp)
    5ecc:	00c003c4 	movi	r3,15
    5ed0:	2005883a 	mov	r2,r4
    5ed4:	1980452e 	bgeu	r3,r6,5fec <memcpy+0x130>
    5ed8:	2906b03a 	or	r3,r5,r4
    5edc:	18c000cc 	andi	r3,r3,3
    5ee0:	1800441e 	bne	r3,zero,5ff4 <memcpy+0x138>
    5ee4:	347ffc04 	addi	r17,r6,-16
    5ee8:	8822d13a 	srli	r17,r17,4
    5eec:	28c00104 	addi	r3,r5,4
    5ef0:	23400104 	addi	r13,r4,4
    5ef4:	8820913a 	slli	r16,r17,4
    5ef8:	2b000204 	addi	r12,r5,8
    5efc:	22c00204 	addi	r11,r4,8
    5f00:	84000504 	addi	r16,r16,20
    5f04:	2a800304 	addi	r10,r5,12
    5f08:	22400304 	addi	r9,r4,12
    5f0c:	2c21883a 	add	r16,r5,r16
    5f10:	2811883a 	mov	r8,r5
    5f14:	200f883a 	mov	r7,r4
    5f18:	41000017 	ldw	r4,0(r8)
    5f1c:	1fc00017 	ldw	ra,0(r3)
    5f20:	63c00017 	ldw	r15,0(r12)
    5f24:	39000015 	stw	r4,0(r7)
    5f28:	53800017 	ldw	r14,0(r10)
    5f2c:	6fc00015 	stw	ra,0(r13)
    5f30:	5bc00015 	stw	r15,0(r11)
    5f34:	4b800015 	stw	r14,0(r9)
    5f38:	18c00404 	addi	r3,r3,16
    5f3c:	39c00404 	addi	r7,r7,16
    5f40:	42000404 	addi	r8,r8,16
    5f44:	6b400404 	addi	r13,r13,16
    5f48:	63000404 	addi	r12,r12,16
    5f4c:	5ac00404 	addi	r11,r11,16
    5f50:	52800404 	addi	r10,r10,16
    5f54:	4a400404 	addi	r9,r9,16
    5f58:	1c3fef1e 	bne	r3,r16,5f18 <__alt_mem_Onchip_SRAM+0xf8005f18>
    5f5c:	89c00044 	addi	r7,r17,1
    5f60:	380e913a 	slli	r7,r7,4
    5f64:	310003cc 	andi	r4,r6,15
    5f68:	02c000c4 	movi	r11,3
    5f6c:	11c7883a 	add	r3,r2,r7
    5f70:	29cb883a 	add	r5,r5,r7
    5f74:	5900212e 	bgeu	r11,r4,5ffc <memcpy+0x140>
    5f78:	1813883a 	mov	r9,r3
    5f7c:	2811883a 	mov	r8,r5
    5f80:	200f883a 	mov	r7,r4
    5f84:	42800017 	ldw	r10,0(r8)
    5f88:	4a400104 	addi	r9,r9,4
    5f8c:	39ffff04 	addi	r7,r7,-4
    5f90:	4abfff15 	stw	r10,-4(r9)
    5f94:	42000104 	addi	r8,r8,4
    5f98:	59fffa36 	bltu	r11,r7,5f84 <__alt_mem_Onchip_SRAM+0xf8005f84>
    5f9c:	213fff04 	addi	r4,r4,-4
    5fa0:	2008d0ba 	srli	r4,r4,2
    5fa4:	318000cc 	andi	r6,r6,3
    5fa8:	21000044 	addi	r4,r4,1
    5fac:	2109883a 	add	r4,r4,r4
    5fb0:	2109883a 	add	r4,r4,r4
    5fb4:	1907883a 	add	r3,r3,r4
    5fb8:	290b883a 	add	r5,r5,r4
    5fbc:	30000626 	beq	r6,zero,5fd8 <memcpy+0x11c>
    5fc0:	198d883a 	add	r6,r3,r6
    5fc4:	29c00003 	ldbu	r7,0(r5)
    5fc8:	18c00044 	addi	r3,r3,1
    5fcc:	29400044 	addi	r5,r5,1
    5fd0:	19ffffc5 	stb	r7,-1(r3)
    5fd4:	19bffb1e 	bne	r3,r6,5fc4 <__alt_mem_Onchip_SRAM+0xf8005fc4>
    5fd8:	dfc00217 	ldw	ra,8(sp)
    5fdc:	dc400117 	ldw	r17,4(sp)
    5fe0:	dc000017 	ldw	r16,0(sp)
    5fe4:	dec00304 	addi	sp,sp,12
    5fe8:	f800283a 	ret
    5fec:	2007883a 	mov	r3,r4
    5ff0:	003ff206 	br	5fbc <__alt_mem_Onchip_SRAM+0xf8005fbc>
    5ff4:	2007883a 	mov	r3,r4
    5ff8:	003ff106 	br	5fc0 <__alt_mem_Onchip_SRAM+0xf8005fc0>
    5ffc:	200d883a 	mov	r6,r4
    6000:	003fee06 	br	5fbc <__alt_mem_Onchip_SRAM+0xf8005fbc>

00006004 <memmove>:
    6004:	2005883a 	mov	r2,r4
    6008:	29000b2e 	bgeu	r5,r4,6038 <memmove+0x34>
    600c:	298f883a 	add	r7,r5,r6
    6010:	21c0092e 	bgeu	r4,r7,6038 <memmove+0x34>
    6014:	2187883a 	add	r3,r4,r6
    6018:	198bc83a 	sub	r5,r3,r6
    601c:	30004826 	beq	r6,zero,6140 <memmove+0x13c>
    6020:	39ffffc4 	addi	r7,r7,-1
    6024:	39000003 	ldbu	r4,0(r7)
    6028:	18ffffc4 	addi	r3,r3,-1
    602c:	19000005 	stb	r4,0(r3)
    6030:	28fffb1e 	bne	r5,r3,6020 <__alt_mem_Onchip_SRAM+0xf8006020>
    6034:	f800283a 	ret
    6038:	00c003c4 	movi	r3,15
    603c:	1980412e 	bgeu	r3,r6,6144 <memmove+0x140>
    6040:	2886b03a 	or	r3,r5,r2
    6044:	18c000cc 	andi	r3,r3,3
    6048:	1800401e 	bne	r3,zero,614c <memmove+0x148>
    604c:	33fffc04 	addi	r15,r6,-16
    6050:	781ed13a 	srli	r15,r15,4
    6054:	28c00104 	addi	r3,r5,4
    6058:	13400104 	addi	r13,r2,4
    605c:	781c913a 	slli	r14,r15,4
    6060:	2b000204 	addi	r12,r5,8
    6064:	12c00204 	addi	r11,r2,8
    6068:	73800504 	addi	r14,r14,20
    606c:	2a800304 	addi	r10,r5,12
    6070:	12400304 	addi	r9,r2,12
    6074:	2b9d883a 	add	r14,r5,r14
    6078:	2811883a 	mov	r8,r5
    607c:	100f883a 	mov	r7,r2
    6080:	41000017 	ldw	r4,0(r8)
    6084:	39c00404 	addi	r7,r7,16
    6088:	18c00404 	addi	r3,r3,16
    608c:	393ffc15 	stw	r4,-16(r7)
    6090:	193ffc17 	ldw	r4,-16(r3)
    6094:	6b400404 	addi	r13,r13,16
    6098:	5ac00404 	addi	r11,r11,16
    609c:	693ffc15 	stw	r4,-16(r13)
    60a0:	61000017 	ldw	r4,0(r12)
    60a4:	4a400404 	addi	r9,r9,16
    60a8:	42000404 	addi	r8,r8,16
    60ac:	593ffc15 	stw	r4,-16(r11)
    60b0:	51000017 	ldw	r4,0(r10)
    60b4:	63000404 	addi	r12,r12,16
    60b8:	52800404 	addi	r10,r10,16
    60bc:	493ffc15 	stw	r4,-16(r9)
    60c0:	1bbfef1e 	bne	r3,r14,6080 <__alt_mem_Onchip_SRAM+0xf8006080>
    60c4:	79000044 	addi	r4,r15,1
    60c8:	2008913a 	slli	r4,r4,4
    60cc:	328003cc 	andi	r10,r6,15
    60d0:	02c000c4 	movi	r11,3
    60d4:	1107883a 	add	r3,r2,r4
    60d8:	290b883a 	add	r5,r5,r4
    60dc:	5a801e2e 	bgeu	r11,r10,6158 <memmove+0x154>
    60e0:	1813883a 	mov	r9,r3
    60e4:	2811883a 	mov	r8,r5
    60e8:	500f883a 	mov	r7,r10
    60ec:	41000017 	ldw	r4,0(r8)
    60f0:	4a400104 	addi	r9,r9,4
    60f4:	39ffff04 	addi	r7,r7,-4
    60f8:	493fff15 	stw	r4,-4(r9)
    60fc:	42000104 	addi	r8,r8,4
    6100:	59fffa36 	bltu	r11,r7,60ec <__alt_mem_Onchip_SRAM+0xf80060ec>
    6104:	513fff04 	addi	r4,r10,-4
    6108:	2008d0ba 	srli	r4,r4,2
    610c:	318000cc 	andi	r6,r6,3
    6110:	21000044 	addi	r4,r4,1
    6114:	2109883a 	add	r4,r4,r4
    6118:	2109883a 	add	r4,r4,r4
    611c:	1907883a 	add	r3,r3,r4
    6120:	290b883a 	add	r5,r5,r4
    6124:	30000b26 	beq	r6,zero,6154 <memmove+0x150>
    6128:	198d883a 	add	r6,r3,r6
    612c:	29c00003 	ldbu	r7,0(r5)
    6130:	18c00044 	addi	r3,r3,1
    6134:	29400044 	addi	r5,r5,1
    6138:	19ffffc5 	stb	r7,-1(r3)
    613c:	19bffb1e 	bne	r3,r6,612c <__alt_mem_Onchip_SRAM+0xf800612c>
    6140:	f800283a 	ret
    6144:	1007883a 	mov	r3,r2
    6148:	003ff606 	br	6124 <__alt_mem_Onchip_SRAM+0xf8006124>
    614c:	1007883a 	mov	r3,r2
    6150:	003ff506 	br	6128 <__alt_mem_Onchip_SRAM+0xf8006128>
    6154:	f800283a 	ret
    6158:	500d883a 	mov	r6,r10
    615c:	003ff106 	br	6124 <__alt_mem_Onchip_SRAM+0xf8006124>

00006160 <memset>:
    6160:	20c000cc 	andi	r3,r4,3
    6164:	2005883a 	mov	r2,r4
    6168:	18004426 	beq	r3,zero,627c <memset+0x11c>
    616c:	31ffffc4 	addi	r7,r6,-1
    6170:	30004026 	beq	r6,zero,6274 <memset+0x114>
    6174:	2813883a 	mov	r9,r5
    6178:	200d883a 	mov	r6,r4
    617c:	2007883a 	mov	r3,r4
    6180:	00000406 	br	6194 <memset+0x34>
    6184:	3a3fffc4 	addi	r8,r7,-1
    6188:	31800044 	addi	r6,r6,1
    618c:	38003926 	beq	r7,zero,6274 <memset+0x114>
    6190:	400f883a 	mov	r7,r8
    6194:	18c00044 	addi	r3,r3,1
    6198:	32400005 	stb	r9,0(r6)
    619c:	1a0000cc 	andi	r8,r3,3
    61a0:	403ff81e 	bne	r8,zero,6184 <__alt_mem_Onchip_SRAM+0xf8006184>
    61a4:	010000c4 	movi	r4,3
    61a8:	21c02d2e 	bgeu	r4,r7,6260 <memset+0x100>
    61ac:	29003fcc 	andi	r4,r5,255
    61b0:	200c923a 	slli	r6,r4,8
    61b4:	3108b03a 	or	r4,r6,r4
    61b8:	200c943a 	slli	r6,r4,16
    61bc:	218cb03a 	or	r6,r4,r6
    61c0:	010003c4 	movi	r4,15
    61c4:	21c0182e 	bgeu	r4,r7,6228 <memset+0xc8>
    61c8:	3b3ffc04 	addi	r12,r7,-16
    61cc:	6018d13a 	srli	r12,r12,4
    61d0:	1a000104 	addi	r8,r3,4
    61d4:	1ac00204 	addi	r11,r3,8
    61d8:	6008913a 	slli	r4,r12,4
    61dc:	1a800304 	addi	r10,r3,12
    61e0:	1813883a 	mov	r9,r3
    61e4:	21000504 	addi	r4,r4,20
    61e8:	1909883a 	add	r4,r3,r4
    61ec:	49800015 	stw	r6,0(r9)
    61f0:	41800015 	stw	r6,0(r8)
    61f4:	59800015 	stw	r6,0(r11)
    61f8:	51800015 	stw	r6,0(r10)
    61fc:	42000404 	addi	r8,r8,16
    6200:	4a400404 	addi	r9,r9,16
    6204:	5ac00404 	addi	r11,r11,16
    6208:	52800404 	addi	r10,r10,16
    620c:	413ff71e 	bne	r8,r4,61ec <__alt_mem_Onchip_SRAM+0xf80061ec>
    6210:	63000044 	addi	r12,r12,1
    6214:	6018913a 	slli	r12,r12,4
    6218:	39c003cc 	andi	r7,r7,15
    621c:	010000c4 	movi	r4,3
    6220:	1b07883a 	add	r3,r3,r12
    6224:	21c00e2e 	bgeu	r4,r7,6260 <memset+0x100>
    6228:	1813883a 	mov	r9,r3
    622c:	3811883a 	mov	r8,r7
    6230:	010000c4 	movi	r4,3
    6234:	49800015 	stw	r6,0(r9)
    6238:	423fff04 	addi	r8,r8,-4
    623c:	4a400104 	addi	r9,r9,4
    6240:	223ffc36 	bltu	r4,r8,6234 <__alt_mem_Onchip_SRAM+0xf8006234>
    6244:	393fff04 	addi	r4,r7,-4
    6248:	2008d0ba 	srli	r4,r4,2
    624c:	39c000cc 	andi	r7,r7,3
    6250:	21000044 	addi	r4,r4,1
    6254:	2109883a 	add	r4,r4,r4
    6258:	2109883a 	add	r4,r4,r4
    625c:	1907883a 	add	r3,r3,r4
    6260:	38000526 	beq	r7,zero,6278 <memset+0x118>
    6264:	19cf883a 	add	r7,r3,r7
    6268:	19400005 	stb	r5,0(r3)
    626c:	18c00044 	addi	r3,r3,1
    6270:	38fffd1e 	bne	r7,r3,6268 <__alt_mem_Onchip_SRAM+0xf8006268>
    6274:	f800283a 	ret
    6278:	f800283a 	ret
    627c:	2007883a 	mov	r3,r4
    6280:	300f883a 	mov	r7,r6
    6284:	003fc706 	br	61a4 <__alt_mem_Onchip_SRAM+0xf80061a4>

00006288 <_Balloc>:
    6288:	20801317 	ldw	r2,76(r4)
    628c:	defffc04 	addi	sp,sp,-16
    6290:	dc400115 	stw	r17,4(sp)
    6294:	dc000015 	stw	r16,0(sp)
    6298:	dfc00315 	stw	ra,12(sp)
    629c:	dc800215 	stw	r18,8(sp)
    62a0:	2023883a 	mov	r17,r4
    62a4:	2821883a 	mov	r16,r5
    62a8:	10000f26 	beq	r2,zero,62e8 <_Balloc+0x60>
    62ac:	8407883a 	add	r3,r16,r16
    62b0:	18c7883a 	add	r3,r3,r3
    62b4:	10c7883a 	add	r3,r2,r3
    62b8:	18800017 	ldw	r2,0(r3)
    62bc:	10001126 	beq	r2,zero,6304 <_Balloc+0x7c>
    62c0:	11000017 	ldw	r4,0(r2)
    62c4:	19000015 	stw	r4,0(r3)
    62c8:	10000415 	stw	zero,16(r2)
    62cc:	10000315 	stw	zero,12(r2)
    62d0:	dfc00317 	ldw	ra,12(sp)
    62d4:	dc800217 	ldw	r18,8(sp)
    62d8:	dc400117 	ldw	r17,4(sp)
    62dc:	dc000017 	ldw	r16,0(sp)
    62e0:	dec00404 	addi	sp,sp,16
    62e4:	f800283a 	ret
    62e8:	01800844 	movi	r6,33
    62ec:	01400104 	movi	r5,4
    62f0:	00092fc0 	call	92fc <_calloc_r>
    62f4:	88801315 	stw	r2,76(r17)
    62f8:	103fec1e 	bne	r2,zero,62ac <__alt_mem_Onchip_SRAM+0xf80062ac>
    62fc:	0005883a 	mov	r2,zero
    6300:	003ff306 	br	62d0 <__alt_mem_Onchip_SRAM+0xf80062d0>
    6304:	01400044 	movi	r5,1
    6308:	2c24983a 	sll	r18,r5,r16
    630c:	8809883a 	mov	r4,r17
    6310:	91800144 	addi	r6,r18,5
    6314:	318d883a 	add	r6,r6,r6
    6318:	318d883a 	add	r6,r6,r6
    631c:	00092fc0 	call	92fc <_calloc_r>
    6320:	103ff626 	beq	r2,zero,62fc <__alt_mem_Onchip_SRAM+0xf80062fc>
    6324:	14000115 	stw	r16,4(r2)
    6328:	14800215 	stw	r18,8(r2)
    632c:	003fe606 	br	62c8 <__alt_mem_Onchip_SRAM+0xf80062c8>

00006330 <_Bfree>:
    6330:	28000826 	beq	r5,zero,6354 <_Bfree+0x24>
    6334:	28c00117 	ldw	r3,4(r5)
    6338:	20801317 	ldw	r2,76(r4)
    633c:	18c7883a 	add	r3,r3,r3
    6340:	18c7883a 	add	r3,r3,r3
    6344:	10c5883a 	add	r2,r2,r3
    6348:	10c00017 	ldw	r3,0(r2)
    634c:	28c00015 	stw	r3,0(r5)
    6350:	11400015 	stw	r5,0(r2)
    6354:	f800283a 	ret

00006358 <__multadd>:
    6358:	defff704 	addi	sp,sp,-36
    635c:	dc800215 	stw	r18,8(sp)
    6360:	2c800417 	ldw	r18,16(r5)
    6364:	dd800615 	stw	r22,24(sp)
    6368:	dd400515 	stw	r21,20(sp)
    636c:	dd000415 	stw	r20,16(sp)
    6370:	dcc00315 	stw	r19,12(sp)
    6374:	dc400115 	stw	r17,4(sp)
    6378:	dc000015 	stw	r16,0(sp)
    637c:	dfc00815 	stw	ra,32(sp)
    6380:	ddc00715 	stw	r23,28(sp)
    6384:	2827883a 	mov	r19,r5
    6388:	2029883a 	mov	r20,r4
    638c:	3023883a 	mov	r17,r6
    6390:	3821883a 	mov	r16,r7
    6394:	2d400504 	addi	r21,r5,20
    6398:	002d883a 	mov	r22,zero
    639c:	adc00017 	ldw	r23,0(r21)
    63a0:	880b883a 	mov	r5,r17
    63a4:	ad400104 	addi	r21,r21,4
    63a8:	b93fffcc 	andi	r4,r23,65535
    63ac:	0000a0c0 	call	a0c <__mulsi3>
    63b0:	b808d43a 	srli	r4,r23,16
    63b4:	880b883a 	mov	r5,r17
    63b8:	1421883a 	add	r16,r2,r16
    63bc:	0000a0c0 	call	a0c <__mulsi3>
    63c0:	800ed43a 	srli	r7,r16,16
    63c4:	80ffffcc 	andi	r3,r16,65535
    63c8:	b5800044 	addi	r22,r22,1
    63cc:	11c5883a 	add	r2,r2,r7
    63d0:	100e943a 	slli	r7,r2,16
    63d4:	1020d43a 	srli	r16,r2,16
    63d8:	38c7883a 	add	r3,r7,r3
    63dc:	a8ffff15 	stw	r3,-4(r21)
    63e0:	b4bfee16 	blt	r22,r18,639c <__alt_mem_Onchip_SRAM+0xf800639c>
    63e4:	80000926 	beq	r16,zero,640c <__multadd+0xb4>
    63e8:	98800217 	ldw	r2,8(r19)
    63ec:	9080130e 	bge	r18,r2,643c <__multadd+0xe4>
    63f0:	90800144 	addi	r2,r18,5
    63f4:	1085883a 	add	r2,r2,r2
    63f8:	1085883a 	add	r2,r2,r2
    63fc:	9885883a 	add	r2,r19,r2
    6400:	14000015 	stw	r16,0(r2)
    6404:	94800044 	addi	r18,r18,1
    6408:	9c800415 	stw	r18,16(r19)
    640c:	9805883a 	mov	r2,r19
    6410:	dfc00817 	ldw	ra,32(sp)
    6414:	ddc00717 	ldw	r23,28(sp)
    6418:	dd800617 	ldw	r22,24(sp)
    641c:	dd400517 	ldw	r21,20(sp)
    6420:	dd000417 	ldw	r20,16(sp)
    6424:	dcc00317 	ldw	r19,12(sp)
    6428:	dc800217 	ldw	r18,8(sp)
    642c:	dc400117 	ldw	r17,4(sp)
    6430:	dc000017 	ldw	r16,0(sp)
    6434:	dec00904 	addi	sp,sp,36
    6438:	f800283a 	ret
    643c:	99400117 	ldw	r5,4(r19)
    6440:	a009883a 	mov	r4,r20
    6444:	29400044 	addi	r5,r5,1
    6448:	00062880 	call	6288 <_Balloc>
    644c:	99800417 	ldw	r6,16(r19)
    6450:	99400304 	addi	r5,r19,12
    6454:	11000304 	addi	r4,r2,12
    6458:	31800084 	addi	r6,r6,2
    645c:	318d883a 	add	r6,r6,r6
    6460:	318d883a 	add	r6,r6,r6
    6464:	1023883a 	mov	r17,r2
    6468:	0005ebc0 	call	5ebc <memcpy>
    646c:	98000a26 	beq	r19,zero,6498 <__multadd+0x140>
    6470:	98c00117 	ldw	r3,4(r19)
    6474:	a0801317 	ldw	r2,76(r20)
    6478:	18c7883a 	add	r3,r3,r3
    647c:	18c7883a 	add	r3,r3,r3
    6480:	10c5883a 	add	r2,r2,r3
    6484:	10c00017 	ldw	r3,0(r2)
    6488:	98c00015 	stw	r3,0(r19)
    648c:	14c00015 	stw	r19,0(r2)
    6490:	8827883a 	mov	r19,r17
    6494:	003fd606 	br	63f0 <__alt_mem_Onchip_SRAM+0xf80063f0>
    6498:	8827883a 	mov	r19,r17
    649c:	003fd406 	br	63f0 <__alt_mem_Onchip_SRAM+0xf80063f0>

000064a0 <__s2b>:
    64a0:	defff904 	addi	sp,sp,-28
    64a4:	dc400115 	stw	r17,4(sp)
    64a8:	dc000015 	stw	r16,0(sp)
    64ac:	2023883a 	mov	r17,r4
    64b0:	2821883a 	mov	r16,r5
    64b4:	39000204 	addi	r4,r7,8
    64b8:	01400244 	movi	r5,9
    64bc:	dcc00315 	stw	r19,12(sp)
    64c0:	dc800215 	stw	r18,8(sp)
    64c4:	dfc00615 	stw	ra,24(sp)
    64c8:	dd400515 	stw	r21,20(sp)
    64cc:	dd000415 	stw	r20,16(sp)
    64d0:	3825883a 	mov	r18,r7
    64d4:	3027883a 	mov	r19,r6
    64d8:	00008580 	call	858 <__divsi3>
    64dc:	00c00044 	movi	r3,1
    64e0:	000b883a 	mov	r5,zero
    64e4:	1880030e 	bge	r3,r2,64f4 <__s2b+0x54>
    64e8:	18c7883a 	add	r3,r3,r3
    64ec:	29400044 	addi	r5,r5,1
    64f0:	18bffd16 	blt	r3,r2,64e8 <__alt_mem_Onchip_SRAM+0xf80064e8>
    64f4:	8809883a 	mov	r4,r17
    64f8:	00062880 	call	6288 <_Balloc>
    64fc:	d8c00717 	ldw	r3,28(sp)
    6500:	10c00515 	stw	r3,20(r2)
    6504:	00c00044 	movi	r3,1
    6508:	10c00415 	stw	r3,16(r2)
    650c:	00c00244 	movi	r3,9
    6510:	1cc0210e 	bge	r3,r19,6598 <__s2b+0xf8>
    6514:	80eb883a 	add	r21,r16,r3
    6518:	a829883a 	mov	r20,r21
    651c:	84e1883a 	add	r16,r16,r19
    6520:	a1c00007 	ldb	r7,0(r20)
    6524:	01800284 	movi	r6,10
    6528:	a5000044 	addi	r20,r20,1
    652c:	100b883a 	mov	r5,r2
    6530:	39fff404 	addi	r7,r7,-48
    6534:	8809883a 	mov	r4,r17
    6538:	00063580 	call	6358 <__multadd>
    653c:	a43ff81e 	bne	r20,r16,6520 <__alt_mem_Onchip_SRAM+0xf8006520>
    6540:	ace1883a 	add	r16,r21,r19
    6544:	843ffe04 	addi	r16,r16,-8
    6548:	9c800a0e 	bge	r19,r18,6574 <__s2b+0xd4>
    654c:	94e5c83a 	sub	r18,r18,r19
    6550:	84a5883a 	add	r18,r16,r18
    6554:	81c00007 	ldb	r7,0(r16)
    6558:	01800284 	movi	r6,10
    655c:	84000044 	addi	r16,r16,1
    6560:	100b883a 	mov	r5,r2
    6564:	39fff404 	addi	r7,r7,-48
    6568:	8809883a 	mov	r4,r17
    656c:	00063580 	call	6358 <__multadd>
    6570:	84bff81e 	bne	r16,r18,6554 <__alt_mem_Onchip_SRAM+0xf8006554>
    6574:	dfc00617 	ldw	ra,24(sp)
    6578:	dd400517 	ldw	r21,20(sp)
    657c:	dd000417 	ldw	r20,16(sp)
    6580:	dcc00317 	ldw	r19,12(sp)
    6584:	dc800217 	ldw	r18,8(sp)
    6588:	dc400117 	ldw	r17,4(sp)
    658c:	dc000017 	ldw	r16,0(sp)
    6590:	dec00704 	addi	sp,sp,28
    6594:	f800283a 	ret
    6598:	84000284 	addi	r16,r16,10
    659c:	1827883a 	mov	r19,r3
    65a0:	003fe906 	br	6548 <__alt_mem_Onchip_SRAM+0xf8006548>

000065a4 <__hi0bits>:
    65a4:	20bfffec 	andhi	r2,r4,65535
    65a8:	1000141e 	bne	r2,zero,65fc <__hi0bits+0x58>
    65ac:	2008943a 	slli	r4,r4,16
    65b0:	00800404 	movi	r2,16
    65b4:	20ffc02c 	andhi	r3,r4,65280
    65b8:	1800021e 	bne	r3,zero,65c4 <__hi0bits+0x20>
    65bc:	2008923a 	slli	r4,r4,8
    65c0:	10800204 	addi	r2,r2,8
    65c4:	20fc002c 	andhi	r3,r4,61440
    65c8:	1800021e 	bne	r3,zero,65d4 <__hi0bits+0x30>
    65cc:	2008913a 	slli	r4,r4,4
    65d0:	10800104 	addi	r2,r2,4
    65d4:	20f0002c 	andhi	r3,r4,49152
    65d8:	1800031e 	bne	r3,zero,65e8 <__hi0bits+0x44>
    65dc:	2109883a 	add	r4,r4,r4
    65e0:	10800084 	addi	r2,r2,2
    65e4:	2109883a 	add	r4,r4,r4
    65e8:	20000316 	blt	r4,zero,65f8 <__hi0bits+0x54>
    65ec:	2110002c 	andhi	r4,r4,16384
    65f0:	2000041e 	bne	r4,zero,6604 <__hi0bits+0x60>
    65f4:	00800804 	movi	r2,32
    65f8:	f800283a 	ret
    65fc:	0005883a 	mov	r2,zero
    6600:	003fec06 	br	65b4 <__alt_mem_Onchip_SRAM+0xf80065b4>
    6604:	10800044 	addi	r2,r2,1
    6608:	f800283a 	ret

0000660c <__lo0bits>:
    660c:	20c00017 	ldw	r3,0(r4)
    6610:	188001cc 	andi	r2,r3,7
    6614:	10000826 	beq	r2,zero,6638 <__lo0bits+0x2c>
    6618:	1880004c 	andi	r2,r3,1
    661c:	1000211e 	bne	r2,zero,66a4 <__lo0bits+0x98>
    6620:	1880008c 	andi	r2,r3,2
    6624:	1000211e 	bne	r2,zero,66ac <__lo0bits+0xa0>
    6628:	1806d0ba 	srli	r3,r3,2
    662c:	00800084 	movi	r2,2
    6630:	20c00015 	stw	r3,0(r4)
    6634:	f800283a 	ret
    6638:	18bfffcc 	andi	r2,r3,65535
    663c:	10001326 	beq	r2,zero,668c <__lo0bits+0x80>
    6640:	0005883a 	mov	r2,zero
    6644:	19403fcc 	andi	r5,r3,255
    6648:	2800021e 	bne	r5,zero,6654 <__lo0bits+0x48>
    664c:	1806d23a 	srli	r3,r3,8
    6650:	10800204 	addi	r2,r2,8
    6654:	194003cc 	andi	r5,r3,15
    6658:	2800021e 	bne	r5,zero,6664 <__lo0bits+0x58>
    665c:	1806d13a 	srli	r3,r3,4
    6660:	10800104 	addi	r2,r2,4
    6664:	194000cc 	andi	r5,r3,3
    6668:	2800021e 	bne	r5,zero,6674 <__lo0bits+0x68>
    666c:	1806d0ba 	srli	r3,r3,2
    6670:	10800084 	addi	r2,r2,2
    6674:	1940004c 	andi	r5,r3,1
    6678:	2800081e 	bne	r5,zero,669c <__lo0bits+0x90>
    667c:	1806d07a 	srli	r3,r3,1
    6680:	1800051e 	bne	r3,zero,6698 <__lo0bits+0x8c>
    6684:	00800804 	movi	r2,32
    6688:	f800283a 	ret
    668c:	1806d43a 	srli	r3,r3,16
    6690:	00800404 	movi	r2,16
    6694:	003feb06 	br	6644 <__alt_mem_Onchip_SRAM+0xf8006644>
    6698:	10800044 	addi	r2,r2,1
    669c:	20c00015 	stw	r3,0(r4)
    66a0:	f800283a 	ret
    66a4:	0005883a 	mov	r2,zero
    66a8:	f800283a 	ret
    66ac:	1806d07a 	srli	r3,r3,1
    66b0:	00800044 	movi	r2,1
    66b4:	20c00015 	stw	r3,0(r4)
    66b8:	f800283a 	ret

000066bc <__i2b>:
    66bc:	defffd04 	addi	sp,sp,-12
    66c0:	dc000015 	stw	r16,0(sp)
    66c4:	04000044 	movi	r16,1
    66c8:	dc400115 	stw	r17,4(sp)
    66cc:	2823883a 	mov	r17,r5
    66d0:	800b883a 	mov	r5,r16
    66d4:	dfc00215 	stw	ra,8(sp)
    66d8:	00062880 	call	6288 <_Balloc>
    66dc:	14400515 	stw	r17,20(r2)
    66e0:	14000415 	stw	r16,16(r2)
    66e4:	dfc00217 	ldw	ra,8(sp)
    66e8:	dc400117 	ldw	r17,4(sp)
    66ec:	dc000017 	ldw	r16,0(sp)
    66f0:	dec00304 	addi	sp,sp,12
    66f4:	f800283a 	ret

000066f8 <__multiply>:
    66f8:	deffef04 	addi	sp,sp,-68
    66fc:	dc400815 	stw	r17,32(sp)
    6700:	dc000715 	stw	r16,28(sp)
    6704:	34400417 	ldw	r17,16(r6)
    6708:	2c000417 	ldw	r16,16(r5)
    670c:	dd800d15 	stw	r22,52(sp)
    6710:	dc800915 	stw	r18,36(sp)
    6714:	dfc01015 	stw	ra,64(sp)
    6718:	df000f15 	stw	fp,60(sp)
    671c:	ddc00e15 	stw	r23,56(sp)
    6720:	dd400c15 	stw	r21,48(sp)
    6724:	dd000b15 	stw	r20,44(sp)
    6728:	dcc00a15 	stw	r19,40(sp)
    672c:	2825883a 	mov	r18,r5
    6730:	302d883a 	mov	r22,r6
    6734:	8440050e 	bge	r16,r17,674c <__multiply+0x54>
    6738:	8007883a 	mov	r3,r16
    673c:	3025883a 	mov	r18,r6
    6740:	8821883a 	mov	r16,r17
    6744:	282d883a 	mov	r22,r5
    6748:	1823883a 	mov	r17,r3
    674c:	90800217 	ldw	r2,8(r18)
    6750:	8447883a 	add	r3,r16,r17
    6754:	d8c00215 	stw	r3,8(sp)
    6758:	91400117 	ldw	r5,4(r18)
    675c:	10c0010e 	bge	r2,r3,6764 <__multiply+0x6c>
    6760:	29400044 	addi	r5,r5,1
    6764:	00062880 	call	6288 <_Balloc>
    6768:	d8c00217 	ldw	r3,8(sp)
    676c:	d8800615 	stw	r2,24(sp)
    6770:	18eb883a 	add	r21,r3,r3
    6774:	ad6b883a 	add	r21,r21,r21
    6778:	10c00504 	addi	r3,r2,20
    677c:	1d6b883a 	add	r21,r3,r21
    6780:	d8c00115 	stw	r3,4(sp)
    6784:	dd400315 	stw	r21,12(sp)
    6788:	1805883a 	mov	r2,r3
    678c:	1d40042e 	bgeu	r3,r21,67a0 <__multiply+0xa8>
    6790:	d8c00317 	ldw	r3,12(sp)
    6794:	10000015 	stw	zero,0(r2)
    6798:	10800104 	addi	r2,r2,4
    679c:	10fffc36 	bltu	r2,r3,6790 <__alt_mem_Onchip_SRAM+0xf8006790>
    67a0:	8c63883a 	add	r17,r17,r17
    67a4:	b5800504 	addi	r22,r22,20
    67a8:	8c63883a 	add	r17,r17,r17
    67ac:	94800504 	addi	r18,r18,20
    67b0:	8421883a 	add	r16,r16,r16
    67b4:	b463883a 	add	r17,r22,r17
    67b8:	8421883a 	add	r16,r16,r16
    67bc:	dd800015 	stw	r22,0(sp)
    67c0:	dc800415 	stw	r18,16(sp)
    67c4:	dc400515 	stw	r17,20(sp)
    67c8:	9429883a 	add	r20,r18,r16
    67cc:	b4404f2e 	bgeu	r22,r17,690c <__multiply+0x214>
    67d0:	d8c00017 	ldw	r3,0(sp)
    67d4:	1c800017 	ldw	r18,0(r3)
    67d8:	947fffcc 	andi	r17,r18,65535
    67dc:	88001e26 	beq	r17,zero,6858 <__multiply+0x160>
    67e0:	dd800117 	ldw	r22,4(sp)
    67e4:	dd400417 	ldw	r21,16(sp)
    67e8:	0027883a 	mov	r19,zero
    67ec:	ac800017 	ldw	r18,0(r21)
    67f0:	b4000017 	ldw	r16,0(r22)
    67f4:	880b883a 	mov	r5,r17
    67f8:	913fffcc 	andi	r4,r18,65535
    67fc:	0000a0c0 	call	a0c <__mulsi3>
    6800:	9008d43a 	srli	r4,r18,16
    6804:	84bfffcc 	andi	r18,r16,65535
    6808:	1485883a 	add	r2,r2,r18
    680c:	14e5883a 	add	r18,r2,r19
    6810:	8020d43a 	srli	r16,r16,16
    6814:	9026d43a 	srli	r19,r18,16
    6818:	880b883a 	mov	r5,r17
    681c:	0000a0c0 	call	a0c <__mulsi3>
    6820:	1405883a 	add	r2,r2,r16
    6824:	14e1883a 	add	r16,r2,r19
    6828:	90ffffcc 	andi	r3,r18,65535
    682c:	8024943a 	slli	r18,r16,16
    6830:	ad400104 	addi	r21,r21,4
    6834:	b005883a 	mov	r2,r22
    6838:	90c6b03a 	or	r3,r18,r3
    683c:	b0c00015 	stw	r3,0(r22)
    6840:	8026d43a 	srli	r19,r16,16
    6844:	b5800104 	addi	r22,r22,4
    6848:	ad3fe836 	bltu	r21,r20,67ec <__alt_mem_Onchip_SRAM+0xf80067ec>
    684c:	d8c00017 	ldw	r3,0(sp)
    6850:	14c00115 	stw	r19,4(r2)
    6854:	1c800017 	ldw	r18,0(r3)
    6858:	9024d43a 	srli	r18,r18,16
    685c:	90002226 	beq	r18,zero,68e8 <__multiply+0x1f0>
    6860:	d8c00117 	ldw	r3,4(sp)
    6864:	dd800417 	ldw	r22,16(sp)
    6868:	002f883a 	mov	r23,zero
    686c:	1f000017 	ldw	fp,0(r3)
    6870:	1823883a 	mov	r17,r3
    6874:	182b883a 	mov	r21,r3
    6878:	e021883a 	mov	r16,fp
    687c:	00000106 	br	6884 <__multiply+0x18c>
    6880:	982b883a 	mov	r21,r19
    6884:	b100000b 	ldhu	r4,0(r22)
    6888:	8020d43a 	srli	r16,r16,16
    688c:	900b883a 	mov	r5,r18
    6890:	0000a0c0 	call	a0c <__mulsi3>
    6894:	1405883a 	add	r2,r2,r16
    6898:	15ef883a 	add	r23,r2,r23
    689c:	b804943a 	slli	r2,r23,16
    68a0:	e0ffffcc 	andi	r3,fp,65535
    68a4:	8c400104 	addi	r17,r17,4
    68a8:	10c6b03a 	or	r3,r2,r3
    68ac:	88ffff15 	stw	r3,-4(r17)
    68b0:	b5800104 	addi	r22,r22,4
    68b4:	b13fff17 	ldw	r4,-4(r22)
    68b8:	acc00104 	addi	r19,r21,4
    68bc:	900b883a 	mov	r5,r18
    68c0:	2008d43a 	srli	r4,r4,16
    68c4:	9c000017 	ldw	r16,0(r19)
    68c8:	0000a0c0 	call	a0c <__mulsi3>
    68cc:	b806d43a 	srli	r3,r23,16
    68d0:	813fffcc 	andi	r4,r16,65535
    68d4:	1105883a 	add	r2,r2,r4
    68d8:	10f9883a 	add	fp,r2,r3
    68dc:	e02ed43a 	srli	r23,fp,16
    68e0:	b53fe736 	bltu	r22,r20,6880 <__alt_mem_Onchip_SRAM+0xf8006880>
    68e4:	af000115 	stw	fp,4(r21)
    68e8:	d8c00017 	ldw	r3,0(sp)
    68ec:	d9000517 	ldw	r4,20(sp)
    68f0:	18c00104 	addi	r3,r3,4
    68f4:	d8c00015 	stw	r3,0(sp)
    68f8:	d8c00117 	ldw	r3,4(sp)
    68fc:	18c00104 	addi	r3,r3,4
    6900:	d8c00115 	stw	r3,4(sp)
    6904:	d8c00017 	ldw	r3,0(sp)
    6908:	193fb136 	bltu	r3,r4,67d0 <__alt_mem_Onchip_SRAM+0xf80067d0>
    690c:	d8c00217 	ldw	r3,8(sp)
    6910:	00c00c0e 	bge	zero,r3,6944 <__multiply+0x24c>
    6914:	d8c00317 	ldw	r3,12(sp)
    6918:	18bfff17 	ldw	r2,-4(r3)
    691c:	1d7fff04 	addi	r21,r3,-4
    6920:	10000326 	beq	r2,zero,6930 <__multiply+0x238>
    6924:	00000706 	br	6944 <__multiply+0x24c>
    6928:	a8800017 	ldw	r2,0(r21)
    692c:	1000051e 	bne	r2,zero,6944 <__multiply+0x24c>
    6930:	d8c00217 	ldw	r3,8(sp)
    6934:	ad7fff04 	addi	r21,r21,-4
    6938:	18ffffc4 	addi	r3,r3,-1
    693c:	d8c00215 	stw	r3,8(sp)
    6940:	183ff91e 	bne	r3,zero,6928 <__alt_mem_Onchip_SRAM+0xf8006928>
    6944:	d8c00617 	ldw	r3,24(sp)
    6948:	d9000217 	ldw	r4,8(sp)
    694c:	1805883a 	mov	r2,r3
    6950:	19000415 	stw	r4,16(r3)
    6954:	dfc01017 	ldw	ra,64(sp)
    6958:	df000f17 	ldw	fp,60(sp)
    695c:	ddc00e17 	ldw	r23,56(sp)
    6960:	dd800d17 	ldw	r22,52(sp)
    6964:	dd400c17 	ldw	r21,48(sp)
    6968:	dd000b17 	ldw	r20,44(sp)
    696c:	dcc00a17 	ldw	r19,40(sp)
    6970:	dc800917 	ldw	r18,36(sp)
    6974:	dc400817 	ldw	r17,32(sp)
    6978:	dc000717 	ldw	r16,28(sp)
    697c:	dec01104 	addi	sp,sp,68
    6980:	f800283a 	ret

00006984 <__pow5mult>:
    6984:	defffa04 	addi	sp,sp,-24
    6988:	dcc00315 	stw	r19,12(sp)
    698c:	dc000015 	stw	r16,0(sp)
    6990:	dfc00515 	stw	ra,20(sp)
    6994:	dd000415 	stw	r20,16(sp)
    6998:	dc800215 	stw	r18,8(sp)
    699c:	dc400115 	stw	r17,4(sp)
    69a0:	308000cc 	andi	r2,r6,3
    69a4:	3021883a 	mov	r16,r6
    69a8:	2027883a 	mov	r19,r4
    69ac:	10002f1e 	bne	r2,zero,6a6c <__pow5mult+0xe8>
    69b0:	2825883a 	mov	r18,r5
    69b4:	8021d0ba 	srai	r16,r16,2
    69b8:	80001a26 	beq	r16,zero,6a24 <__pow5mult+0xa0>
    69bc:	9c401217 	ldw	r17,72(r19)
    69c0:	8800061e 	bne	r17,zero,69dc <__pow5mult+0x58>
    69c4:	00003406 	br	6a98 <__pow5mult+0x114>
    69c8:	8021d07a 	srai	r16,r16,1
    69cc:	80001526 	beq	r16,zero,6a24 <__pow5mult+0xa0>
    69d0:	88800017 	ldw	r2,0(r17)
    69d4:	10001c26 	beq	r2,zero,6a48 <__pow5mult+0xc4>
    69d8:	1023883a 	mov	r17,r2
    69dc:	8080004c 	andi	r2,r16,1
    69e0:	103ff926 	beq	r2,zero,69c8 <__alt_mem_Onchip_SRAM+0xf80069c8>
    69e4:	880d883a 	mov	r6,r17
    69e8:	900b883a 	mov	r5,r18
    69ec:	9809883a 	mov	r4,r19
    69f0:	00066f80 	call	66f8 <__multiply>
    69f4:	90001b26 	beq	r18,zero,6a64 <__pow5mult+0xe0>
    69f8:	91000117 	ldw	r4,4(r18)
    69fc:	98c01317 	ldw	r3,76(r19)
    6a00:	8021d07a 	srai	r16,r16,1
    6a04:	2109883a 	add	r4,r4,r4
    6a08:	2109883a 	add	r4,r4,r4
    6a0c:	1907883a 	add	r3,r3,r4
    6a10:	19000017 	ldw	r4,0(r3)
    6a14:	91000015 	stw	r4,0(r18)
    6a18:	1c800015 	stw	r18,0(r3)
    6a1c:	1025883a 	mov	r18,r2
    6a20:	803feb1e 	bne	r16,zero,69d0 <__alt_mem_Onchip_SRAM+0xf80069d0>
    6a24:	9005883a 	mov	r2,r18
    6a28:	dfc00517 	ldw	ra,20(sp)
    6a2c:	dd000417 	ldw	r20,16(sp)
    6a30:	dcc00317 	ldw	r19,12(sp)
    6a34:	dc800217 	ldw	r18,8(sp)
    6a38:	dc400117 	ldw	r17,4(sp)
    6a3c:	dc000017 	ldw	r16,0(sp)
    6a40:	dec00604 	addi	sp,sp,24
    6a44:	f800283a 	ret
    6a48:	880d883a 	mov	r6,r17
    6a4c:	880b883a 	mov	r5,r17
    6a50:	9809883a 	mov	r4,r19
    6a54:	00066f80 	call	66f8 <__multiply>
    6a58:	88800015 	stw	r2,0(r17)
    6a5c:	10000015 	stw	zero,0(r2)
    6a60:	003fdd06 	br	69d8 <__alt_mem_Onchip_SRAM+0xf80069d8>
    6a64:	1025883a 	mov	r18,r2
    6a68:	003fd706 	br	69c8 <__alt_mem_Onchip_SRAM+0xf80069c8>
    6a6c:	10bfffc4 	addi	r2,r2,-1
    6a70:	1085883a 	add	r2,r2,r2
    6a74:	00c00074 	movhi	r3,1
    6a78:	18c12d04 	addi	r3,r3,1204
    6a7c:	1085883a 	add	r2,r2,r2
    6a80:	1885883a 	add	r2,r3,r2
    6a84:	11800017 	ldw	r6,0(r2)
    6a88:	000f883a 	mov	r7,zero
    6a8c:	00063580 	call	6358 <__multadd>
    6a90:	1025883a 	mov	r18,r2
    6a94:	003fc706 	br	69b4 <__alt_mem_Onchip_SRAM+0xf80069b4>
    6a98:	05000044 	movi	r20,1
    6a9c:	a00b883a 	mov	r5,r20
    6aa0:	9809883a 	mov	r4,r19
    6aa4:	00062880 	call	6288 <_Balloc>
    6aa8:	1023883a 	mov	r17,r2
    6aac:	00809c44 	movi	r2,625
    6ab0:	88800515 	stw	r2,20(r17)
    6ab4:	8d000415 	stw	r20,16(r17)
    6ab8:	9c401215 	stw	r17,72(r19)
    6abc:	88000015 	stw	zero,0(r17)
    6ac0:	003fc606 	br	69dc <__alt_mem_Onchip_SRAM+0xf80069dc>

00006ac4 <__lshift>:
    6ac4:	defff904 	addi	sp,sp,-28
    6ac8:	dd400515 	stw	r21,20(sp)
    6acc:	dcc00315 	stw	r19,12(sp)
    6ad0:	302bd17a 	srai	r21,r6,5
    6ad4:	2cc00417 	ldw	r19,16(r5)
    6ad8:	28800217 	ldw	r2,8(r5)
    6adc:	dd000415 	stw	r20,16(sp)
    6ae0:	ace7883a 	add	r19,r21,r19
    6ae4:	dc800215 	stw	r18,8(sp)
    6ae8:	dc400115 	stw	r17,4(sp)
    6aec:	dc000015 	stw	r16,0(sp)
    6af0:	dfc00615 	stw	ra,24(sp)
    6af4:	9c000044 	addi	r16,r19,1
    6af8:	2823883a 	mov	r17,r5
    6afc:	3029883a 	mov	r20,r6
    6b00:	2025883a 	mov	r18,r4
    6b04:	29400117 	ldw	r5,4(r5)
    6b08:	1400030e 	bge	r2,r16,6b18 <__lshift+0x54>
    6b0c:	1085883a 	add	r2,r2,r2
    6b10:	29400044 	addi	r5,r5,1
    6b14:	143ffd16 	blt	r2,r16,6b0c <__alt_mem_Onchip_SRAM+0xf8006b0c>
    6b18:	9009883a 	mov	r4,r18
    6b1c:	00062880 	call	6288 <_Balloc>
    6b20:	10c00504 	addi	r3,r2,20
    6b24:	0540070e 	bge	zero,r21,6b44 <__lshift+0x80>
    6b28:	ad6b883a 	add	r21,r21,r21
    6b2c:	ad6b883a 	add	r21,r21,r21
    6b30:	1809883a 	mov	r4,r3
    6b34:	1d47883a 	add	r3,r3,r21
    6b38:	20000015 	stw	zero,0(r4)
    6b3c:	21000104 	addi	r4,r4,4
    6b40:	193ffd1e 	bne	r3,r4,6b38 <__alt_mem_Onchip_SRAM+0xf8006b38>
    6b44:	8a000417 	ldw	r8,16(r17)
    6b48:	89000504 	addi	r4,r17,20
    6b4c:	a18007cc 	andi	r6,r20,31
    6b50:	4211883a 	add	r8,r8,r8
    6b54:	4211883a 	add	r8,r8,r8
    6b58:	2211883a 	add	r8,r4,r8
    6b5c:	30002326 	beq	r6,zero,6bec <__lshift+0x128>
    6b60:	02400804 	movi	r9,32
    6b64:	4993c83a 	sub	r9,r9,r6
    6b68:	000b883a 	mov	r5,zero
    6b6c:	21c00017 	ldw	r7,0(r4)
    6b70:	1815883a 	mov	r10,r3
    6b74:	18c00104 	addi	r3,r3,4
    6b78:	398e983a 	sll	r7,r7,r6
    6b7c:	21000104 	addi	r4,r4,4
    6b80:	394ab03a 	or	r5,r7,r5
    6b84:	197fff15 	stw	r5,-4(r3)
    6b88:	217fff17 	ldw	r5,-4(r4)
    6b8c:	2a4ad83a 	srl	r5,r5,r9
    6b90:	223ff636 	bltu	r4,r8,6b6c <__alt_mem_Onchip_SRAM+0xf8006b6c>
    6b94:	51400115 	stw	r5,4(r10)
    6b98:	28001a1e 	bne	r5,zero,6c04 <__lshift+0x140>
    6b9c:	843fffc4 	addi	r16,r16,-1
    6ba0:	14000415 	stw	r16,16(r2)
    6ba4:	88000826 	beq	r17,zero,6bc8 <__lshift+0x104>
    6ba8:	89000117 	ldw	r4,4(r17)
    6bac:	90c01317 	ldw	r3,76(r18)
    6bb0:	2109883a 	add	r4,r4,r4
    6bb4:	2109883a 	add	r4,r4,r4
    6bb8:	1907883a 	add	r3,r3,r4
    6bbc:	19000017 	ldw	r4,0(r3)
    6bc0:	89000015 	stw	r4,0(r17)
    6bc4:	1c400015 	stw	r17,0(r3)
    6bc8:	dfc00617 	ldw	ra,24(sp)
    6bcc:	dd400517 	ldw	r21,20(sp)
    6bd0:	dd000417 	ldw	r20,16(sp)
    6bd4:	dcc00317 	ldw	r19,12(sp)
    6bd8:	dc800217 	ldw	r18,8(sp)
    6bdc:	dc400117 	ldw	r17,4(sp)
    6be0:	dc000017 	ldw	r16,0(sp)
    6be4:	dec00704 	addi	sp,sp,28
    6be8:	f800283a 	ret
    6bec:	21400017 	ldw	r5,0(r4)
    6bf0:	18c00104 	addi	r3,r3,4
    6bf4:	21000104 	addi	r4,r4,4
    6bf8:	197fff15 	stw	r5,-4(r3)
    6bfc:	223ffb36 	bltu	r4,r8,6bec <__alt_mem_Onchip_SRAM+0xf8006bec>
    6c00:	003fe606 	br	6b9c <__alt_mem_Onchip_SRAM+0xf8006b9c>
    6c04:	9c000084 	addi	r16,r19,2
    6c08:	003fe406 	br	6b9c <__alt_mem_Onchip_SRAM+0xf8006b9c>

00006c0c <__mcmp>:
    6c0c:	20800417 	ldw	r2,16(r4)
    6c10:	28c00417 	ldw	r3,16(r5)
    6c14:	10c5c83a 	sub	r2,r2,r3
    6c18:	1000111e 	bne	r2,zero,6c60 <__mcmp+0x54>
    6c1c:	18c7883a 	add	r3,r3,r3
    6c20:	18c7883a 	add	r3,r3,r3
    6c24:	21000504 	addi	r4,r4,20
    6c28:	29400504 	addi	r5,r5,20
    6c2c:	20c5883a 	add	r2,r4,r3
    6c30:	28cb883a 	add	r5,r5,r3
    6c34:	00000106 	br	6c3c <__mcmp+0x30>
    6c38:	20800a2e 	bgeu	r4,r2,6c64 <__mcmp+0x58>
    6c3c:	10bfff04 	addi	r2,r2,-4
    6c40:	297fff04 	addi	r5,r5,-4
    6c44:	11800017 	ldw	r6,0(r2)
    6c48:	28c00017 	ldw	r3,0(r5)
    6c4c:	30fffa26 	beq	r6,r3,6c38 <__alt_mem_Onchip_SRAM+0xf8006c38>
    6c50:	30c00236 	bltu	r6,r3,6c5c <__mcmp+0x50>
    6c54:	00800044 	movi	r2,1
    6c58:	f800283a 	ret
    6c5c:	00bfffc4 	movi	r2,-1
    6c60:	f800283a 	ret
    6c64:	0005883a 	mov	r2,zero
    6c68:	f800283a 	ret

00006c6c <__mdiff>:
    6c6c:	28c00417 	ldw	r3,16(r5)
    6c70:	30800417 	ldw	r2,16(r6)
    6c74:	defffa04 	addi	sp,sp,-24
    6c78:	dcc00315 	stw	r19,12(sp)
    6c7c:	dc800215 	stw	r18,8(sp)
    6c80:	dfc00515 	stw	ra,20(sp)
    6c84:	dd000415 	stw	r20,16(sp)
    6c88:	dc400115 	stw	r17,4(sp)
    6c8c:	dc000015 	stw	r16,0(sp)
    6c90:	1887c83a 	sub	r3,r3,r2
    6c94:	2825883a 	mov	r18,r5
    6c98:	3027883a 	mov	r19,r6
    6c9c:	1800141e 	bne	r3,zero,6cf0 <__mdiff+0x84>
    6ca0:	1085883a 	add	r2,r2,r2
    6ca4:	1085883a 	add	r2,r2,r2
    6ca8:	2a000504 	addi	r8,r5,20
    6cac:	34000504 	addi	r16,r6,20
    6cb0:	4087883a 	add	r3,r8,r2
    6cb4:	8085883a 	add	r2,r16,r2
    6cb8:	00000106 	br	6cc0 <__mdiff+0x54>
    6cbc:	40c0592e 	bgeu	r8,r3,6e24 <__mdiff+0x1b8>
    6cc0:	18ffff04 	addi	r3,r3,-4
    6cc4:	10bfff04 	addi	r2,r2,-4
    6cc8:	19c00017 	ldw	r7,0(r3)
    6ccc:	11400017 	ldw	r5,0(r2)
    6cd0:	397ffa26 	beq	r7,r5,6cbc <__alt_mem_Onchip_SRAM+0xf8006cbc>
    6cd4:	3940592e 	bgeu	r7,r5,6e3c <__mdiff+0x1d0>
    6cd8:	9005883a 	mov	r2,r18
    6cdc:	4023883a 	mov	r17,r8
    6ce0:	9825883a 	mov	r18,r19
    6ce4:	05000044 	movi	r20,1
    6ce8:	1027883a 	mov	r19,r2
    6cec:	00000406 	br	6d00 <__mdiff+0x94>
    6cf0:	18005616 	blt	r3,zero,6e4c <__mdiff+0x1e0>
    6cf4:	34400504 	addi	r17,r6,20
    6cf8:	2c000504 	addi	r16,r5,20
    6cfc:	0029883a 	mov	r20,zero
    6d00:	91400117 	ldw	r5,4(r18)
    6d04:	00062880 	call	6288 <_Balloc>
    6d08:	92400417 	ldw	r9,16(r18)
    6d0c:	9b000417 	ldw	r12,16(r19)
    6d10:	12c00504 	addi	r11,r2,20
    6d14:	4a51883a 	add	r8,r9,r9
    6d18:	6319883a 	add	r12,r12,r12
    6d1c:	4211883a 	add	r8,r8,r8
    6d20:	6319883a 	add	r12,r12,r12
    6d24:	15000315 	stw	r20,12(r2)
    6d28:	8211883a 	add	r8,r16,r8
    6d2c:	8b19883a 	add	r12,r17,r12
    6d30:	0007883a 	mov	r3,zero
    6d34:	81400017 	ldw	r5,0(r16)
    6d38:	89c00017 	ldw	r7,0(r17)
    6d3c:	59800104 	addi	r6,r11,4
    6d40:	293fffcc 	andi	r4,r5,65535
    6d44:	20c7883a 	add	r3,r4,r3
    6d48:	393fffcc 	andi	r4,r7,65535
    6d4c:	1909c83a 	sub	r4,r3,r4
    6d50:	280ad43a 	srli	r5,r5,16
    6d54:	380ed43a 	srli	r7,r7,16
    6d58:	2007d43a 	srai	r3,r4,16
    6d5c:	213fffcc 	andi	r4,r4,65535
    6d60:	29cbc83a 	sub	r5,r5,r7
    6d64:	28c7883a 	add	r3,r5,r3
    6d68:	180a943a 	slli	r5,r3,16
    6d6c:	8c400104 	addi	r17,r17,4
    6d70:	84000104 	addi	r16,r16,4
    6d74:	2908b03a 	or	r4,r5,r4
    6d78:	59000015 	stw	r4,0(r11)
    6d7c:	1807d43a 	srai	r3,r3,16
    6d80:	3015883a 	mov	r10,r6
    6d84:	3017883a 	mov	r11,r6
    6d88:	8b3fea36 	bltu	r17,r12,6d34 <__alt_mem_Onchip_SRAM+0xf8006d34>
    6d8c:	8200162e 	bgeu	r16,r8,6de8 <__mdiff+0x17c>
    6d90:	8017883a 	mov	r11,r16
    6d94:	59400017 	ldw	r5,0(r11)
    6d98:	31800104 	addi	r6,r6,4
    6d9c:	5ac00104 	addi	r11,r11,4
    6da0:	293fffcc 	andi	r4,r5,65535
    6da4:	20c7883a 	add	r3,r4,r3
    6da8:	280ed43a 	srli	r7,r5,16
    6dac:	180bd43a 	srai	r5,r3,16
    6db0:	193fffcc 	andi	r4,r3,65535
    6db4:	3947883a 	add	r3,r7,r5
    6db8:	180a943a 	slli	r5,r3,16
    6dbc:	1807d43a 	srai	r3,r3,16
    6dc0:	2908b03a 	or	r4,r5,r4
    6dc4:	313fff15 	stw	r4,-4(r6)
    6dc8:	5a3ff236 	bltu	r11,r8,6d94 <__alt_mem_Onchip_SRAM+0xf8006d94>
    6dcc:	0406303a 	nor	r3,zero,r16
    6dd0:	1a07883a 	add	r3,r3,r8
    6dd4:	1806d0ba 	srli	r3,r3,2
    6dd8:	18c00044 	addi	r3,r3,1
    6ddc:	18c7883a 	add	r3,r3,r3
    6de0:	18c7883a 	add	r3,r3,r3
    6de4:	50d5883a 	add	r10,r10,r3
    6de8:	50ffff04 	addi	r3,r10,-4
    6dec:	2000041e 	bne	r4,zero,6e00 <__mdiff+0x194>
    6df0:	18ffff04 	addi	r3,r3,-4
    6df4:	19000017 	ldw	r4,0(r3)
    6df8:	4a7fffc4 	addi	r9,r9,-1
    6dfc:	203ffc26 	beq	r4,zero,6df0 <__alt_mem_Onchip_SRAM+0xf8006df0>
    6e00:	12400415 	stw	r9,16(r2)
    6e04:	dfc00517 	ldw	ra,20(sp)
    6e08:	dd000417 	ldw	r20,16(sp)
    6e0c:	dcc00317 	ldw	r19,12(sp)
    6e10:	dc800217 	ldw	r18,8(sp)
    6e14:	dc400117 	ldw	r17,4(sp)
    6e18:	dc000017 	ldw	r16,0(sp)
    6e1c:	dec00604 	addi	sp,sp,24
    6e20:	f800283a 	ret
    6e24:	000b883a 	mov	r5,zero
    6e28:	00062880 	call	6288 <_Balloc>
    6e2c:	00c00044 	movi	r3,1
    6e30:	10c00415 	stw	r3,16(r2)
    6e34:	10000515 	stw	zero,20(r2)
    6e38:	003ff206 	br	6e04 <__alt_mem_Onchip_SRAM+0xf8006e04>
    6e3c:	8023883a 	mov	r17,r16
    6e40:	0029883a 	mov	r20,zero
    6e44:	4021883a 	mov	r16,r8
    6e48:	003fad06 	br	6d00 <__alt_mem_Onchip_SRAM+0xf8006d00>
    6e4c:	9005883a 	mov	r2,r18
    6e50:	94400504 	addi	r17,r18,20
    6e54:	9c000504 	addi	r16,r19,20
    6e58:	9825883a 	mov	r18,r19
    6e5c:	05000044 	movi	r20,1
    6e60:	1027883a 	mov	r19,r2
    6e64:	003fa606 	br	6d00 <__alt_mem_Onchip_SRAM+0xf8006d00>

00006e68 <__ulp>:
    6e68:	295ffc2c 	andhi	r5,r5,32752
    6e6c:	00bf3034 	movhi	r2,64704
    6e70:	2887883a 	add	r3,r5,r2
    6e74:	00c0020e 	bge	zero,r3,6e80 <__ulp+0x18>
    6e78:	0005883a 	mov	r2,zero
    6e7c:	f800283a 	ret
    6e80:	00c7c83a 	sub	r3,zero,r3
    6e84:	1807d53a 	srai	r3,r3,20
    6e88:	008004c4 	movi	r2,19
    6e8c:	10c00b0e 	bge	r2,r3,6ebc <__ulp+0x54>
    6e90:	18bffb04 	addi	r2,r3,-20
    6e94:	01000784 	movi	r4,30
    6e98:	0007883a 	mov	r3,zero
    6e9c:	20800516 	blt	r4,r2,6eb4 <__ulp+0x4c>
    6ea0:	010007c4 	movi	r4,31
    6ea4:	2089c83a 	sub	r4,r4,r2
    6ea8:	00800044 	movi	r2,1
    6eac:	1104983a 	sll	r2,r2,r4
    6eb0:	f800283a 	ret
    6eb4:	00800044 	movi	r2,1
    6eb8:	f800283a 	ret
    6ebc:	01400234 	movhi	r5,8
    6ec0:	28c7d83a 	sra	r3,r5,r3
    6ec4:	0005883a 	mov	r2,zero
    6ec8:	f800283a 	ret

00006ecc <__b2d>:
    6ecc:	defffa04 	addi	sp,sp,-24
    6ed0:	dc000015 	stw	r16,0(sp)
    6ed4:	24000417 	ldw	r16,16(r4)
    6ed8:	dc400115 	stw	r17,4(sp)
    6edc:	24400504 	addi	r17,r4,20
    6ee0:	8421883a 	add	r16,r16,r16
    6ee4:	8421883a 	add	r16,r16,r16
    6ee8:	8c21883a 	add	r16,r17,r16
    6eec:	dc800215 	stw	r18,8(sp)
    6ef0:	84bfff17 	ldw	r18,-4(r16)
    6ef4:	dd000415 	stw	r20,16(sp)
    6ef8:	dcc00315 	stw	r19,12(sp)
    6efc:	9009883a 	mov	r4,r18
    6f00:	2829883a 	mov	r20,r5
    6f04:	dfc00515 	stw	ra,20(sp)
    6f08:	00065a40 	call	65a4 <__hi0bits>
    6f0c:	00c00804 	movi	r3,32
    6f10:	1889c83a 	sub	r4,r3,r2
    6f14:	a1000015 	stw	r4,0(r20)
    6f18:	01000284 	movi	r4,10
    6f1c:	84ffff04 	addi	r19,r16,-4
    6f20:	20801216 	blt	r4,r2,6f6c <__b2d+0xa0>
    6f24:	018002c4 	movi	r6,11
    6f28:	308dc83a 	sub	r6,r6,r2
    6f2c:	9186d83a 	srl	r3,r18,r6
    6f30:	18cffc34 	orhi	r3,r3,16368
    6f34:	8cc0212e 	bgeu	r17,r19,6fbc <__b2d+0xf0>
    6f38:	813ffe17 	ldw	r4,-8(r16)
    6f3c:	218cd83a 	srl	r6,r4,r6
    6f40:	10800544 	addi	r2,r2,21
    6f44:	9084983a 	sll	r2,r18,r2
    6f48:	1184b03a 	or	r2,r2,r6
    6f4c:	dfc00517 	ldw	ra,20(sp)
    6f50:	dd000417 	ldw	r20,16(sp)
    6f54:	dcc00317 	ldw	r19,12(sp)
    6f58:	dc800217 	ldw	r18,8(sp)
    6f5c:	dc400117 	ldw	r17,4(sp)
    6f60:	dc000017 	ldw	r16,0(sp)
    6f64:	dec00604 	addi	sp,sp,24
    6f68:	f800283a 	ret
    6f6c:	8cc00f2e 	bgeu	r17,r19,6fac <__b2d+0xe0>
    6f70:	117ffd44 	addi	r5,r2,-11
    6f74:	80bffe17 	ldw	r2,-8(r16)
    6f78:	28000e26 	beq	r5,zero,6fb4 <__b2d+0xe8>
    6f7c:	1949c83a 	sub	r4,r3,r5
    6f80:	9164983a 	sll	r18,r18,r5
    6f84:	1106d83a 	srl	r3,r2,r4
    6f88:	81bffe04 	addi	r6,r16,-8
    6f8c:	948ffc34 	orhi	r18,r18,16368
    6f90:	90c6b03a 	or	r3,r18,r3
    6f94:	89800e2e 	bgeu	r17,r6,6fd0 <__b2d+0x104>
    6f98:	81bffd17 	ldw	r6,-12(r16)
    6f9c:	1144983a 	sll	r2,r2,r5
    6fa0:	310ad83a 	srl	r5,r6,r4
    6fa4:	2884b03a 	or	r2,r5,r2
    6fa8:	003fe806 	br	6f4c <__alt_mem_Onchip_SRAM+0xf8006f4c>
    6fac:	10bffd44 	addi	r2,r2,-11
    6fb0:	1000041e 	bne	r2,zero,6fc4 <__b2d+0xf8>
    6fb4:	90cffc34 	orhi	r3,r18,16368
    6fb8:	003fe406 	br	6f4c <__alt_mem_Onchip_SRAM+0xf8006f4c>
    6fbc:	000d883a 	mov	r6,zero
    6fc0:	003fdf06 	br	6f40 <__alt_mem_Onchip_SRAM+0xf8006f40>
    6fc4:	90a4983a 	sll	r18,r18,r2
    6fc8:	0005883a 	mov	r2,zero
    6fcc:	003ff906 	br	6fb4 <__alt_mem_Onchip_SRAM+0xf8006fb4>
    6fd0:	1144983a 	sll	r2,r2,r5
    6fd4:	003fdd06 	br	6f4c <__alt_mem_Onchip_SRAM+0xf8006f4c>

00006fd8 <__d2b>:
    6fd8:	defff804 	addi	sp,sp,-32
    6fdc:	dc000215 	stw	r16,8(sp)
    6fe0:	3021883a 	mov	r16,r6
    6fe4:	dc400315 	stw	r17,12(sp)
    6fe8:	8022907a 	slli	r17,r16,1
    6fec:	dd000615 	stw	r20,24(sp)
    6ff0:	2829883a 	mov	r20,r5
    6ff4:	01400044 	movi	r5,1
    6ff8:	dcc00515 	stw	r19,20(sp)
    6ffc:	dc800415 	stw	r18,16(sp)
    7000:	dfc00715 	stw	ra,28(sp)
    7004:	3825883a 	mov	r18,r7
    7008:	8822d57a 	srli	r17,r17,21
    700c:	00062880 	call	6288 <_Balloc>
    7010:	1027883a 	mov	r19,r2
    7014:	00800434 	movhi	r2,16
    7018:	10bfffc4 	addi	r2,r2,-1
    701c:	808c703a 	and	r6,r16,r2
    7020:	88000126 	beq	r17,zero,7028 <__d2b+0x50>
    7024:	31800434 	orhi	r6,r6,16
    7028:	d9800015 	stw	r6,0(sp)
    702c:	a0002426 	beq	r20,zero,70c0 <__d2b+0xe8>
    7030:	d9000104 	addi	r4,sp,4
    7034:	dd000115 	stw	r20,4(sp)
    7038:	000660c0 	call	660c <__lo0bits>
    703c:	d8c00017 	ldw	r3,0(sp)
    7040:	10002f1e 	bne	r2,zero,7100 <__d2b+0x128>
    7044:	d9000117 	ldw	r4,4(sp)
    7048:	99000515 	stw	r4,20(r19)
    704c:	1821003a 	cmpeq	r16,r3,zero
    7050:	01000084 	movi	r4,2
    7054:	2421c83a 	sub	r16,r4,r16
    7058:	98c00615 	stw	r3,24(r19)
    705c:	9c000415 	stw	r16,16(r19)
    7060:	88001f1e 	bne	r17,zero,70e0 <__d2b+0x108>
    7064:	10bef384 	addi	r2,r2,-1074
    7068:	90800015 	stw	r2,0(r18)
    706c:	00900034 	movhi	r2,16384
    7070:	10bfffc4 	addi	r2,r2,-1
    7074:	8085883a 	add	r2,r16,r2
    7078:	1085883a 	add	r2,r2,r2
    707c:	1085883a 	add	r2,r2,r2
    7080:	9885883a 	add	r2,r19,r2
    7084:	11000517 	ldw	r4,20(r2)
    7088:	8020917a 	slli	r16,r16,5
    708c:	00065a40 	call	65a4 <__hi0bits>
    7090:	d8c00817 	ldw	r3,32(sp)
    7094:	8085c83a 	sub	r2,r16,r2
    7098:	18800015 	stw	r2,0(r3)
    709c:	9805883a 	mov	r2,r19
    70a0:	dfc00717 	ldw	ra,28(sp)
    70a4:	dd000617 	ldw	r20,24(sp)
    70a8:	dcc00517 	ldw	r19,20(sp)
    70ac:	dc800417 	ldw	r18,16(sp)
    70b0:	dc400317 	ldw	r17,12(sp)
    70b4:	dc000217 	ldw	r16,8(sp)
    70b8:	dec00804 	addi	sp,sp,32
    70bc:	f800283a 	ret
    70c0:	d809883a 	mov	r4,sp
    70c4:	000660c0 	call	660c <__lo0bits>
    70c8:	d8c00017 	ldw	r3,0(sp)
    70cc:	04000044 	movi	r16,1
    70d0:	9c000415 	stw	r16,16(r19)
    70d4:	98c00515 	stw	r3,20(r19)
    70d8:	10800804 	addi	r2,r2,32
    70dc:	883fe126 	beq	r17,zero,7064 <__alt_mem_Onchip_SRAM+0xf8007064>
    70e0:	00c00d44 	movi	r3,53
    70e4:	8c7ef344 	addi	r17,r17,-1075
    70e8:	88a3883a 	add	r17,r17,r2
    70ec:	1885c83a 	sub	r2,r3,r2
    70f0:	d8c00817 	ldw	r3,32(sp)
    70f4:	94400015 	stw	r17,0(r18)
    70f8:	18800015 	stw	r2,0(r3)
    70fc:	003fe706 	br	709c <__alt_mem_Onchip_SRAM+0xf800709c>
    7100:	01000804 	movi	r4,32
    7104:	2089c83a 	sub	r4,r4,r2
    7108:	1908983a 	sll	r4,r3,r4
    710c:	d9400117 	ldw	r5,4(sp)
    7110:	1886d83a 	srl	r3,r3,r2
    7114:	2148b03a 	or	r4,r4,r5
    7118:	99000515 	stw	r4,20(r19)
    711c:	d8c00015 	stw	r3,0(sp)
    7120:	003fca06 	br	704c <__alt_mem_Onchip_SRAM+0xf800704c>

00007124 <__ratio>:
    7124:	defff904 	addi	sp,sp,-28
    7128:	dc400315 	stw	r17,12(sp)
    712c:	2823883a 	mov	r17,r5
    7130:	d9400104 	addi	r5,sp,4
    7134:	dfc00615 	stw	ra,24(sp)
    7138:	dcc00515 	stw	r19,20(sp)
    713c:	dc800415 	stw	r18,16(sp)
    7140:	2027883a 	mov	r19,r4
    7144:	dc000215 	stw	r16,8(sp)
    7148:	0006ecc0 	call	6ecc <__b2d>
    714c:	d80b883a 	mov	r5,sp
    7150:	8809883a 	mov	r4,r17
    7154:	1025883a 	mov	r18,r2
    7158:	1821883a 	mov	r16,r3
    715c:	0006ecc0 	call	6ecc <__b2d>
    7160:	8a000417 	ldw	r8,16(r17)
    7164:	99000417 	ldw	r4,16(r19)
    7168:	d9400117 	ldw	r5,4(sp)
    716c:	2209c83a 	sub	r4,r4,r8
    7170:	2010917a 	slli	r8,r4,5
    7174:	d9000017 	ldw	r4,0(sp)
    7178:	2909c83a 	sub	r4,r5,r4
    717c:	4109883a 	add	r4,r8,r4
    7180:	01000e0e 	bge	zero,r4,71bc <__ratio+0x98>
    7184:	2008953a 	slli	r4,r4,20
    7188:	2421883a 	add	r16,r4,r16
    718c:	100d883a 	mov	r6,r2
    7190:	180f883a 	mov	r7,r3
    7194:	9009883a 	mov	r4,r18
    7198:	800b883a 	mov	r5,r16
    719c:	000b45c0 	call	b45c <__divdf3>
    71a0:	dfc00617 	ldw	ra,24(sp)
    71a4:	dcc00517 	ldw	r19,20(sp)
    71a8:	dc800417 	ldw	r18,16(sp)
    71ac:	dc400317 	ldw	r17,12(sp)
    71b0:	dc000217 	ldw	r16,8(sp)
    71b4:	dec00704 	addi	sp,sp,28
    71b8:	f800283a 	ret
    71bc:	2008953a 	slli	r4,r4,20
    71c0:	1907c83a 	sub	r3,r3,r4
    71c4:	003ff106 	br	718c <__alt_mem_Onchip_SRAM+0xf800718c>

000071c8 <_mprec_log10>:
    71c8:	defffe04 	addi	sp,sp,-8
    71cc:	dc000015 	stw	r16,0(sp)
    71d0:	dfc00115 	stw	ra,4(sp)
    71d4:	008005c4 	movi	r2,23
    71d8:	2021883a 	mov	r16,r4
    71dc:	11000d0e 	bge	r2,r4,7214 <_mprec_log10+0x4c>
    71e0:	0005883a 	mov	r2,zero
    71e4:	00cffc34 	movhi	r3,16368
    71e8:	843fffc4 	addi	r16,r16,-1
    71ec:	000d883a 	mov	r6,zero
    71f0:	01d00934 	movhi	r7,16420
    71f4:	1009883a 	mov	r4,r2
    71f8:	180b883a 	mov	r5,r3
    71fc:	000c0840 	call	c084 <__muldf3>
    7200:	803ff91e 	bne	r16,zero,71e8 <__alt_mem_Onchip_SRAM+0xf80071e8>
    7204:	dfc00117 	ldw	ra,4(sp)
    7208:	dc000017 	ldw	r16,0(sp)
    720c:	dec00204 	addi	sp,sp,8
    7210:	f800283a 	ret
    7214:	202090fa 	slli	r16,r4,3
    7218:	00800074 	movhi	r2,1
    721c:	10814404 	addi	r2,r2,1296
    7220:	1421883a 	add	r16,r2,r16
    7224:	80800017 	ldw	r2,0(r16)
    7228:	80c00117 	ldw	r3,4(r16)
    722c:	dfc00117 	ldw	ra,4(sp)
    7230:	dc000017 	ldw	r16,0(sp)
    7234:	dec00204 	addi	sp,sp,8
    7238:	f800283a 	ret

0000723c <__copybits>:
    723c:	297fffc4 	addi	r5,r5,-1
    7240:	280fd17a 	srai	r7,r5,5
    7244:	30c00417 	ldw	r3,16(r6)
    7248:	30800504 	addi	r2,r6,20
    724c:	39c00044 	addi	r7,r7,1
    7250:	18c7883a 	add	r3,r3,r3
    7254:	39cf883a 	add	r7,r7,r7
    7258:	18c7883a 	add	r3,r3,r3
    725c:	39cf883a 	add	r7,r7,r7
    7260:	10c7883a 	add	r3,r2,r3
    7264:	21cf883a 	add	r7,r4,r7
    7268:	10c00d2e 	bgeu	r2,r3,72a0 <__copybits+0x64>
    726c:	200b883a 	mov	r5,r4
    7270:	12000017 	ldw	r8,0(r2)
    7274:	29400104 	addi	r5,r5,4
    7278:	10800104 	addi	r2,r2,4
    727c:	2a3fff15 	stw	r8,-4(r5)
    7280:	10fffb36 	bltu	r2,r3,7270 <__alt_mem_Onchip_SRAM+0xf8007270>
    7284:	1985c83a 	sub	r2,r3,r6
    7288:	10bffac4 	addi	r2,r2,-21
    728c:	1004d0ba 	srli	r2,r2,2
    7290:	10800044 	addi	r2,r2,1
    7294:	1085883a 	add	r2,r2,r2
    7298:	1085883a 	add	r2,r2,r2
    729c:	2089883a 	add	r4,r4,r2
    72a0:	21c0032e 	bgeu	r4,r7,72b0 <__copybits+0x74>
    72a4:	20000015 	stw	zero,0(r4)
    72a8:	21000104 	addi	r4,r4,4
    72ac:	21fffd36 	bltu	r4,r7,72a4 <__alt_mem_Onchip_SRAM+0xf80072a4>
    72b0:	f800283a 	ret

000072b4 <__any_on>:
    72b4:	20c00417 	ldw	r3,16(r4)
    72b8:	2805d17a 	srai	r2,r5,5
    72bc:	21000504 	addi	r4,r4,20
    72c0:	18800d0e 	bge	r3,r2,72f8 <__any_on+0x44>
    72c4:	18c7883a 	add	r3,r3,r3
    72c8:	18c7883a 	add	r3,r3,r3
    72cc:	20c7883a 	add	r3,r4,r3
    72d0:	20c0192e 	bgeu	r4,r3,7338 <__any_on+0x84>
    72d4:	18bfff17 	ldw	r2,-4(r3)
    72d8:	18ffff04 	addi	r3,r3,-4
    72dc:	1000041e 	bne	r2,zero,72f0 <__any_on+0x3c>
    72e0:	20c0142e 	bgeu	r4,r3,7334 <__any_on+0x80>
    72e4:	18ffff04 	addi	r3,r3,-4
    72e8:	19400017 	ldw	r5,0(r3)
    72ec:	283ffc26 	beq	r5,zero,72e0 <__alt_mem_Onchip_SRAM+0xf80072e0>
    72f0:	00800044 	movi	r2,1
    72f4:	f800283a 	ret
    72f8:	10c00a0e 	bge	r2,r3,7324 <__any_on+0x70>
    72fc:	1085883a 	add	r2,r2,r2
    7300:	1085883a 	add	r2,r2,r2
    7304:	294007cc 	andi	r5,r5,31
    7308:	2087883a 	add	r3,r4,r2
    730c:	283ff026 	beq	r5,zero,72d0 <__alt_mem_Onchip_SRAM+0xf80072d0>
    7310:	19800017 	ldw	r6,0(r3)
    7314:	3144d83a 	srl	r2,r6,r5
    7318:	114a983a 	sll	r5,r2,r5
    731c:	317ff41e 	bne	r6,r5,72f0 <__alt_mem_Onchip_SRAM+0xf80072f0>
    7320:	003feb06 	br	72d0 <__alt_mem_Onchip_SRAM+0xf80072d0>
    7324:	1085883a 	add	r2,r2,r2
    7328:	1085883a 	add	r2,r2,r2
    732c:	2087883a 	add	r3,r4,r2
    7330:	003fe706 	br	72d0 <__alt_mem_Onchip_SRAM+0xf80072d0>
    7334:	f800283a 	ret
    7338:	0005883a 	mov	r2,zero
    733c:	f800283a 	ret

00007340 <_realloc_r>:
    7340:	defff604 	addi	sp,sp,-40
    7344:	dc800215 	stw	r18,8(sp)
    7348:	dfc00915 	stw	ra,36(sp)
    734c:	df000815 	stw	fp,32(sp)
    7350:	ddc00715 	stw	r23,28(sp)
    7354:	dd800615 	stw	r22,24(sp)
    7358:	dd400515 	stw	r21,20(sp)
    735c:	dd000415 	stw	r20,16(sp)
    7360:	dcc00315 	stw	r19,12(sp)
    7364:	dc400115 	stw	r17,4(sp)
    7368:	dc000015 	stw	r16,0(sp)
    736c:	3025883a 	mov	r18,r6
    7370:	2800b726 	beq	r5,zero,7650 <_realloc_r+0x310>
    7374:	282b883a 	mov	r21,r5
    7378:	2029883a 	mov	r20,r4
    737c:	000db800 	call	db80 <__malloc_lock>
    7380:	a8bfff17 	ldw	r2,-4(r21)
    7384:	043fff04 	movi	r16,-4
    7388:	90c002c4 	addi	r3,r18,11
    738c:	01000584 	movi	r4,22
    7390:	acfffe04 	addi	r19,r21,-8
    7394:	1420703a 	and	r16,r2,r16
    7398:	20c0332e 	bgeu	r4,r3,7468 <_realloc_r+0x128>
    739c:	047ffe04 	movi	r17,-8
    73a0:	1c62703a 	and	r17,r3,r17
    73a4:	8807883a 	mov	r3,r17
    73a8:	88005816 	blt	r17,zero,750c <_realloc_r+0x1cc>
    73ac:	8c805736 	bltu	r17,r18,750c <_realloc_r+0x1cc>
    73b0:	80c0300e 	bge	r16,r3,7474 <_realloc_r+0x134>
    73b4:	07000074 	movhi	fp,1
    73b8:	e702b804 	addi	fp,fp,2784
    73bc:	e1c00217 	ldw	r7,8(fp)
    73c0:	9c09883a 	add	r4,r19,r16
    73c4:	22000117 	ldw	r8,4(r4)
    73c8:	21c06326 	beq	r4,r7,7558 <_realloc_r+0x218>
    73cc:	017fff84 	movi	r5,-2
    73d0:	414a703a 	and	r5,r8,r5
    73d4:	214b883a 	add	r5,r4,r5
    73d8:	29800117 	ldw	r6,4(r5)
    73dc:	3180004c 	andi	r6,r6,1
    73e0:	30003f26 	beq	r6,zero,74e0 <_realloc_r+0x1a0>
    73e4:	1080004c 	andi	r2,r2,1
    73e8:	10008326 	beq	r2,zero,75f8 <_realloc_r+0x2b8>
    73ec:	900b883a 	mov	r5,r18
    73f0:	a009883a 	mov	r4,r20
    73f4:	00055cc0 	call	55cc <_malloc_r>
    73f8:	1025883a 	mov	r18,r2
    73fc:	10011e26 	beq	r2,zero,7878 <_realloc_r+0x538>
    7400:	a93fff17 	ldw	r4,-4(r21)
    7404:	10fffe04 	addi	r3,r2,-8
    7408:	00bfff84 	movi	r2,-2
    740c:	2084703a 	and	r2,r4,r2
    7410:	9885883a 	add	r2,r19,r2
    7414:	1880ee26 	beq	r3,r2,77d0 <_realloc_r+0x490>
    7418:	81bfff04 	addi	r6,r16,-4
    741c:	00800904 	movi	r2,36
    7420:	1180b836 	bltu	r2,r6,7704 <_realloc_r+0x3c4>
    7424:	00c004c4 	movi	r3,19
    7428:	19809636 	bltu	r3,r6,7684 <_realloc_r+0x344>
    742c:	9005883a 	mov	r2,r18
    7430:	a807883a 	mov	r3,r21
    7434:	19000017 	ldw	r4,0(r3)
    7438:	11000015 	stw	r4,0(r2)
    743c:	19000117 	ldw	r4,4(r3)
    7440:	11000115 	stw	r4,4(r2)
    7444:	18c00217 	ldw	r3,8(r3)
    7448:	10c00215 	stw	r3,8(r2)
    744c:	a80b883a 	mov	r5,r21
    7450:	a009883a 	mov	r4,r20
    7454:	00098a80 	call	98a8 <_free_r>
    7458:	a009883a 	mov	r4,r20
    745c:	000dba40 	call	dba4 <__malloc_unlock>
    7460:	9005883a 	mov	r2,r18
    7464:	00001206 	br	74b0 <_realloc_r+0x170>
    7468:	00c00404 	movi	r3,16
    746c:	1823883a 	mov	r17,r3
    7470:	003fce06 	br	73ac <__alt_mem_Onchip_SRAM+0xf80073ac>
    7474:	a825883a 	mov	r18,r21
    7478:	8445c83a 	sub	r2,r16,r17
    747c:	00c003c4 	movi	r3,15
    7480:	18802636 	bltu	r3,r2,751c <_realloc_r+0x1dc>
    7484:	99800117 	ldw	r6,4(r19)
    7488:	9c07883a 	add	r3,r19,r16
    748c:	3180004c 	andi	r6,r6,1
    7490:	3420b03a 	or	r16,r6,r16
    7494:	9c000115 	stw	r16,4(r19)
    7498:	18800117 	ldw	r2,4(r3)
    749c:	10800054 	ori	r2,r2,1
    74a0:	18800115 	stw	r2,4(r3)
    74a4:	a009883a 	mov	r4,r20
    74a8:	000dba40 	call	dba4 <__malloc_unlock>
    74ac:	9005883a 	mov	r2,r18
    74b0:	dfc00917 	ldw	ra,36(sp)
    74b4:	df000817 	ldw	fp,32(sp)
    74b8:	ddc00717 	ldw	r23,28(sp)
    74bc:	dd800617 	ldw	r22,24(sp)
    74c0:	dd400517 	ldw	r21,20(sp)
    74c4:	dd000417 	ldw	r20,16(sp)
    74c8:	dcc00317 	ldw	r19,12(sp)
    74cc:	dc800217 	ldw	r18,8(sp)
    74d0:	dc400117 	ldw	r17,4(sp)
    74d4:	dc000017 	ldw	r16,0(sp)
    74d8:	dec00a04 	addi	sp,sp,40
    74dc:	f800283a 	ret
    74e0:	017fff04 	movi	r5,-4
    74e4:	414a703a 	and	r5,r8,r5
    74e8:	814d883a 	add	r6,r16,r5
    74ec:	30c01f16 	blt	r6,r3,756c <_realloc_r+0x22c>
    74f0:	20800317 	ldw	r2,12(r4)
    74f4:	20c00217 	ldw	r3,8(r4)
    74f8:	a825883a 	mov	r18,r21
    74fc:	3021883a 	mov	r16,r6
    7500:	18800315 	stw	r2,12(r3)
    7504:	10c00215 	stw	r3,8(r2)
    7508:	003fdb06 	br	7478 <__alt_mem_Onchip_SRAM+0xf8007478>
    750c:	00800304 	movi	r2,12
    7510:	a0800015 	stw	r2,0(r20)
    7514:	0005883a 	mov	r2,zero
    7518:	003fe506 	br	74b0 <__alt_mem_Onchip_SRAM+0xf80074b0>
    751c:	98c00117 	ldw	r3,4(r19)
    7520:	9c4b883a 	add	r5,r19,r17
    7524:	11000054 	ori	r4,r2,1
    7528:	18c0004c 	andi	r3,r3,1
    752c:	1c62b03a 	or	r17,r3,r17
    7530:	9c400115 	stw	r17,4(r19)
    7534:	29000115 	stw	r4,4(r5)
    7538:	2885883a 	add	r2,r5,r2
    753c:	10c00117 	ldw	r3,4(r2)
    7540:	29400204 	addi	r5,r5,8
    7544:	a009883a 	mov	r4,r20
    7548:	18c00054 	ori	r3,r3,1
    754c:	10c00115 	stw	r3,4(r2)
    7550:	00098a80 	call	98a8 <_free_r>
    7554:	003fd306 	br	74a4 <__alt_mem_Onchip_SRAM+0xf80074a4>
    7558:	017fff04 	movi	r5,-4
    755c:	414a703a 	and	r5,r8,r5
    7560:	89800404 	addi	r6,r17,16
    7564:	8151883a 	add	r8,r16,r5
    7568:	4180590e 	bge	r8,r6,76d0 <_realloc_r+0x390>
    756c:	1080004c 	andi	r2,r2,1
    7570:	103f9e1e 	bne	r2,zero,73ec <__alt_mem_Onchip_SRAM+0xf80073ec>
    7574:	adbffe17 	ldw	r22,-8(r21)
    7578:	00bfff04 	movi	r2,-4
    757c:	9dadc83a 	sub	r22,r19,r22
    7580:	b1800117 	ldw	r6,4(r22)
    7584:	3084703a 	and	r2,r6,r2
    7588:	20002026 	beq	r4,zero,760c <_realloc_r+0x2cc>
    758c:	80af883a 	add	r23,r16,r2
    7590:	b96f883a 	add	r23,r23,r5
    7594:	21c05f26 	beq	r4,r7,7714 <_realloc_r+0x3d4>
    7598:	b8c01c16 	blt	r23,r3,760c <_realloc_r+0x2cc>
    759c:	20800317 	ldw	r2,12(r4)
    75a0:	20c00217 	ldw	r3,8(r4)
    75a4:	81bfff04 	addi	r6,r16,-4
    75a8:	01000904 	movi	r4,36
    75ac:	18800315 	stw	r2,12(r3)
    75b0:	10c00215 	stw	r3,8(r2)
    75b4:	b0c00217 	ldw	r3,8(r22)
    75b8:	b0800317 	ldw	r2,12(r22)
    75bc:	b4800204 	addi	r18,r22,8
    75c0:	18800315 	stw	r2,12(r3)
    75c4:	10c00215 	stw	r3,8(r2)
    75c8:	21801b36 	bltu	r4,r6,7638 <_realloc_r+0x2f8>
    75cc:	008004c4 	movi	r2,19
    75d0:	1180352e 	bgeu	r2,r6,76a8 <_realloc_r+0x368>
    75d4:	a8800017 	ldw	r2,0(r21)
    75d8:	b0800215 	stw	r2,8(r22)
    75dc:	a8800117 	ldw	r2,4(r21)
    75e0:	b0800315 	stw	r2,12(r22)
    75e4:	008006c4 	movi	r2,27
    75e8:	11807f36 	bltu	r2,r6,77e8 <_realloc_r+0x4a8>
    75ec:	b0800404 	addi	r2,r22,16
    75f0:	ad400204 	addi	r21,r21,8
    75f4:	00002d06 	br	76ac <_realloc_r+0x36c>
    75f8:	adbffe17 	ldw	r22,-8(r21)
    75fc:	00bfff04 	movi	r2,-4
    7600:	9dadc83a 	sub	r22,r19,r22
    7604:	b1000117 	ldw	r4,4(r22)
    7608:	2084703a 	and	r2,r4,r2
    760c:	b03f7726 	beq	r22,zero,73ec <__alt_mem_Onchip_SRAM+0xf80073ec>
    7610:	80af883a 	add	r23,r16,r2
    7614:	b8ff7516 	blt	r23,r3,73ec <__alt_mem_Onchip_SRAM+0xf80073ec>
    7618:	b0800317 	ldw	r2,12(r22)
    761c:	b0c00217 	ldw	r3,8(r22)
    7620:	81bfff04 	addi	r6,r16,-4
    7624:	01000904 	movi	r4,36
    7628:	18800315 	stw	r2,12(r3)
    762c:	10c00215 	stw	r3,8(r2)
    7630:	b4800204 	addi	r18,r22,8
    7634:	21bfe52e 	bgeu	r4,r6,75cc <__alt_mem_Onchip_SRAM+0xf80075cc>
    7638:	a80b883a 	mov	r5,r21
    763c:	9009883a 	mov	r4,r18
    7640:	00060040 	call	6004 <memmove>
    7644:	b821883a 	mov	r16,r23
    7648:	b027883a 	mov	r19,r22
    764c:	003f8a06 	br	7478 <__alt_mem_Onchip_SRAM+0xf8007478>
    7650:	300b883a 	mov	r5,r6
    7654:	dfc00917 	ldw	ra,36(sp)
    7658:	df000817 	ldw	fp,32(sp)
    765c:	ddc00717 	ldw	r23,28(sp)
    7660:	dd800617 	ldw	r22,24(sp)
    7664:	dd400517 	ldw	r21,20(sp)
    7668:	dd000417 	ldw	r20,16(sp)
    766c:	dcc00317 	ldw	r19,12(sp)
    7670:	dc800217 	ldw	r18,8(sp)
    7674:	dc400117 	ldw	r17,4(sp)
    7678:	dc000017 	ldw	r16,0(sp)
    767c:	dec00a04 	addi	sp,sp,40
    7680:	00055cc1 	jmpi	55cc <_malloc_r>
    7684:	a8c00017 	ldw	r3,0(r21)
    7688:	90c00015 	stw	r3,0(r18)
    768c:	a8c00117 	ldw	r3,4(r21)
    7690:	90c00115 	stw	r3,4(r18)
    7694:	00c006c4 	movi	r3,27
    7698:	19804536 	bltu	r3,r6,77b0 <_realloc_r+0x470>
    769c:	90800204 	addi	r2,r18,8
    76a0:	a8c00204 	addi	r3,r21,8
    76a4:	003f6306 	br	7434 <__alt_mem_Onchip_SRAM+0xf8007434>
    76a8:	9005883a 	mov	r2,r18
    76ac:	a8c00017 	ldw	r3,0(r21)
    76b0:	b821883a 	mov	r16,r23
    76b4:	b027883a 	mov	r19,r22
    76b8:	10c00015 	stw	r3,0(r2)
    76bc:	a8c00117 	ldw	r3,4(r21)
    76c0:	10c00115 	stw	r3,4(r2)
    76c4:	a8c00217 	ldw	r3,8(r21)
    76c8:	10c00215 	stw	r3,8(r2)
    76cc:	003f6a06 	br	7478 <__alt_mem_Onchip_SRAM+0xf8007478>
    76d0:	9c67883a 	add	r19,r19,r17
    76d4:	4445c83a 	sub	r2,r8,r17
    76d8:	e4c00215 	stw	r19,8(fp)
    76dc:	10800054 	ori	r2,r2,1
    76e0:	98800115 	stw	r2,4(r19)
    76e4:	a8bfff17 	ldw	r2,-4(r21)
    76e8:	a009883a 	mov	r4,r20
    76ec:	1080004c 	andi	r2,r2,1
    76f0:	1462b03a 	or	r17,r2,r17
    76f4:	ac7fff15 	stw	r17,-4(r21)
    76f8:	000dba40 	call	dba4 <__malloc_unlock>
    76fc:	a805883a 	mov	r2,r21
    7700:	003f6b06 	br	74b0 <__alt_mem_Onchip_SRAM+0xf80074b0>
    7704:	a80b883a 	mov	r5,r21
    7708:	9009883a 	mov	r4,r18
    770c:	00060040 	call	6004 <memmove>
    7710:	003f4e06 	br	744c <__alt_mem_Onchip_SRAM+0xf800744c>
    7714:	89000404 	addi	r4,r17,16
    7718:	b93fbc16 	blt	r23,r4,760c <__alt_mem_Onchip_SRAM+0xf800760c>
    771c:	b0800317 	ldw	r2,12(r22)
    7720:	b0c00217 	ldw	r3,8(r22)
    7724:	81bfff04 	addi	r6,r16,-4
    7728:	01000904 	movi	r4,36
    772c:	18800315 	stw	r2,12(r3)
    7730:	10c00215 	stw	r3,8(r2)
    7734:	b4800204 	addi	r18,r22,8
    7738:	21804336 	bltu	r4,r6,7848 <_realloc_r+0x508>
    773c:	008004c4 	movi	r2,19
    7740:	11803f2e 	bgeu	r2,r6,7840 <_realloc_r+0x500>
    7744:	a8800017 	ldw	r2,0(r21)
    7748:	b0800215 	stw	r2,8(r22)
    774c:	a8800117 	ldw	r2,4(r21)
    7750:	b0800315 	stw	r2,12(r22)
    7754:	008006c4 	movi	r2,27
    7758:	11803f36 	bltu	r2,r6,7858 <_realloc_r+0x518>
    775c:	b0800404 	addi	r2,r22,16
    7760:	ad400204 	addi	r21,r21,8
    7764:	a8c00017 	ldw	r3,0(r21)
    7768:	10c00015 	stw	r3,0(r2)
    776c:	a8c00117 	ldw	r3,4(r21)
    7770:	10c00115 	stw	r3,4(r2)
    7774:	a8c00217 	ldw	r3,8(r21)
    7778:	10c00215 	stw	r3,8(r2)
    777c:	b447883a 	add	r3,r22,r17
    7780:	bc45c83a 	sub	r2,r23,r17
    7784:	e0c00215 	stw	r3,8(fp)
    7788:	10800054 	ori	r2,r2,1
    778c:	18800115 	stw	r2,4(r3)
    7790:	b0800117 	ldw	r2,4(r22)
    7794:	a009883a 	mov	r4,r20
    7798:	1080004c 	andi	r2,r2,1
    779c:	1462b03a 	or	r17,r2,r17
    77a0:	b4400115 	stw	r17,4(r22)
    77a4:	000dba40 	call	dba4 <__malloc_unlock>
    77a8:	9005883a 	mov	r2,r18
    77ac:	003f4006 	br	74b0 <__alt_mem_Onchip_SRAM+0xf80074b0>
    77b0:	a8c00217 	ldw	r3,8(r21)
    77b4:	90c00215 	stw	r3,8(r18)
    77b8:	a8c00317 	ldw	r3,12(r21)
    77bc:	90c00315 	stw	r3,12(r18)
    77c0:	30801126 	beq	r6,r2,7808 <_realloc_r+0x4c8>
    77c4:	90800404 	addi	r2,r18,16
    77c8:	a8c00404 	addi	r3,r21,16
    77cc:	003f1906 	br	7434 <__alt_mem_Onchip_SRAM+0xf8007434>
    77d0:	90ffff17 	ldw	r3,-4(r18)
    77d4:	00bfff04 	movi	r2,-4
    77d8:	a825883a 	mov	r18,r21
    77dc:	1884703a 	and	r2,r3,r2
    77e0:	80a1883a 	add	r16,r16,r2
    77e4:	003f2406 	br	7478 <__alt_mem_Onchip_SRAM+0xf8007478>
    77e8:	a8800217 	ldw	r2,8(r21)
    77ec:	b0800415 	stw	r2,16(r22)
    77f0:	a8800317 	ldw	r2,12(r21)
    77f4:	b0800515 	stw	r2,20(r22)
    77f8:	31000a26 	beq	r6,r4,7824 <_realloc_r+0x4e4>
    77fc:	b0800604 	addi	r2,r22,24
    7800:	ad400404 	addi	r21,r21,16
    7804:	003fa906 	br	76ac <__alt_mem_Onchip_SRAM+0xf80076ac>
    7808:	a9000417 	ldw	r4,16(r21)
    780c:	90800604 	addi	r2,r18,24
    7810:	a8c00604 	addi	r3,r21,24
    7814:	91000415 	stw	r4,16(r18)
    7818:	a9000517 	ldw	r4,20(r21)
    781c:	91000515 	stw	r4,20(r18)
    7820:	003f0406 	br	7434 <__alt_mem_Onchip_SRAM+0xf8007434>
    7824:	a8c00417 	ldw	r3,16(r21)
    7828:	ad400604 	addi	r21,r21,24
    782c:	b0800804 	addi	r2,r22,32
    7830:	b0c00615 	stw	r3,24(r22)
    7834:	a8ffff17 	ldw	r3,-4(r21)
    7838:	b0c00715 	stw	r3,28(r22)
    783c:	003f9b06 	br	76ac <__alt_mem_Onchip_SRAM+0xf80076ac>
    7840:	9005883a 	mov	r2,r18
    7844:	003fc706 	br	7764 <__alt_mem_Onchip_SRAM+0xf8007764>
    7848:	a80b883a 	mov	r5,r21
    784c:	9009883a 	mov	r4,r18
    7850:	00060040 	call	6004 <memmove>
    7854:	003fc906 	br	777c <__alt_mem_Onchip_SRAM+0xf800777c>
    7858:	a8800217 	ldw	r2,8(r21)
    785c:	b0800415 	stw	r2,16(r22)
    7860:	a8800317 	ldw	r2,12(r21)
    7864:	b0800515 	stw	r2,20(r22)
    7868:	31000726 	beq	r6,r4,7888 <_realloc_r+0x548>
    786c:	b0800604 	addi	r2,r22,24
    7870:	ad400404 	addi	r21,r21,16
    7874:	003fbb06 	br	7764 <__alt_mem_Onchip_SRAM+0xf8007764>
    7878:	a009883a 	mov	r4,r20
    787c:	000dba40 	call	dba4 <__malloc_unlock>
    7880:	0005883a 	mov	r2,zero
    7884:	003f0a06 	br	74b0 <__alt_mem_Onchip_SRAM+0xf80074b0>
    7888:	a8c00417 	ldw	r3,16(r21)
    788c:	ad400604 	addi	r21,r21,24
    7890:	b0800804 	addi	r2,r22,32
    7894:	b0c00615 	stw	r3,24(r22)
    7898:	a8ffff17 	ldw	r3,-4(r21)
    789c:	b0c00715 	stw	r3,28(r22)
    78a0:	003fb006 	br	7764 <__alt_mem_Onchip_SRAM+0xf8007764>

000078a4 <__fpclassifyd>:
    78a4:	00a00034 	movhi	r2,32768
    78a8:	10bfffc4 	addi	r2,r2,-1
    78ac:	2884703a 	and	r2,r5,r2
    78b0:	10000726 	beq	r2,zero,78d0 <__fpclassifyd+0x2c>
    78b4:	00fffc34 	movhi	r3,65520
    78b8:	019ff834 	movhi	r6,32736
    78bc:	28c7883a 	add	r3,r5,r3
    78c0:	31bfffc4 	addi	r6,r6,-1
    78c4:	30c00536 	bltu	r6,r3,78dc <__fpclassifyd+0x38>
    78c8:	00800104 	movi	r2,4
    78cc:	f800283a 	ret
    78d0:	2000021e 	bne	r4,zero,78dc <__fpclassifyd+0x38>
    78d4:	00800084 	movi	r2,2
    78d8:	f800283a 	ret
    78dc:	00dffc34 	movhi	r3,32752
    78e0:	019ff834 	movhi	r6,32736
    78e4:	28cb883a 	add	r5,r5,r3
    78e8:	31bfffc4 	addi	r6,r6,-1
    78ec:	317ff62e 	bgeu	r6,r5,78c8 <__alt_mem_Onchip_SRAM+0xf80078c8>
    78f0:	01400434 	movhi	r5,16
    78f4:	297fffc4 	addi	r5,r5,-1
    78f8:	28800236 	bltu	r5,r2,7904 <__fpclassifyd+0x60>
    78fc:	008000c4 	movi	r2,3
    7900:	f800283a 	ret
    7904:	10c00226 	beq	r2,r3,7910 <__fpclassifyd+0x6c>
    7908:	0005883a 	mov	r2,zero
    790c:	f800283a 	ret
    7910:	2005003a 	cmpeq	r2,r4,zero
    7914:	f800283a 	ret

00007918 <_sbrk_r>:
    7918:	defffd04 	addi	sp,sp,-12
    791c:	dc000015 	stw	r16,0(sp)
    7920:	04000074 	movhi	r16,1
    7924:	dc400115 	stw	r17,4(sp)
    7928:	840f3904 	addi	r16,r16,15588
    792c:	2023883a 	mov	r17,r4
    7930:	2809883a 	mov	r4,r5
    7934:	dfc00215 	stw	ra,8(sp)
    7938:	80000015 	stw	zero,0(r16)
    793c:	000dd8c0 	call	dd8c <sbrk>
    7940:	00ffffc4 	movi	r3,-1
    7944:	10c00526 	beq	r2,r3,795c <_sbrk_r+0x44>
    7948:	dfc00217 	ldw	ra,8(sp)
    794c:	dc400117 	ldw	r17,4(sp)
    7950:	dc000017 	ldw	r16,0(sp)
    7954:	dec00304 	addi	sp,sp,12
    7958:	f800283a 	ret
    795c:	80c00017 	ldw	r3,0(r16)
    7960:	183ff926 	beq	r3,zero,7948 <__alt_mem_Onchip_SRAM+0xf8007948>
    7964:	88c00015 	stw	r3,0(r17)
    7968:	003ff706 	br	7948 <__alt_mem_Onchip_SRAM+0xf8007948>

0000796c <__sread>:
    796c:	defffe04 	addi	sp,sp,-8
    7970:	dc000015 	stw	r16,0(sp)
    7974:	2821883a 	mov	r16,r5
    7978:	2940038f 	ldh	r5,14(r5)
    797c:	dfc00115 	stw	ra,4(sp)
    7980:	0009dd40 	call	9dd4 <_read_r>
    7984:	10000716 	blt	r2,zero,79a4 <__sread+0x38>
    7988:	80c01417 	ldw	r3,80(r16)
    798c:	1887883a 	add	r3,r3,r2
    7990:	80c01415 	stw	r3,80(r16)
    7994:	dfc00117 	ldw	ra,4(sp)
    7998:	dc000017 	ldw	r16,0(sp)
    799c:	dec00204 	addi	sp,sp,8
    79a0:	f800283a 	ret
    79a4:	80c0030b 	ldhu	r3,12(r16)
    79a8:	18fbffcc 	andi	r3,r3,61439
    79ac:	80c0030d 	sth	r3,12(r16)
    79b0:	dfc00117 	ldw	ra,4(sp)
    79b4:	dc000017 	ldw	r16,0(sp)
    79b8:	dec00204 	addi	sp,sp,8
    79bc:	f800283a 	ret

000079c0 <__seofread>:
    79c0:	0005883a 	mov	r2,zero
    79c4:	f800283a 	ret

000079c8 <__swrite>:
    79c8:	2880030b 	ldhu	r2,12(r5)
    79cc:	defffb04 	addi	sp,sp,-20
    79d0:	dcc00315 	stw	r19,12(sp)
    79d4:	dc800215 	stw	r18,8(sp)
    79d8:	dc400115 	stw	r17,4(sp)
    79dc:	dc000015 	stw	r16,0(sp)
    79e0:	dfc00415 	stw	ra,16(sp)
    79e4:	10c0400c 	andi	r3,r2,256
    79e8:	2821883a 	mov	r16,r5
    79ec:	2023883a 	mov	r17,r4
    79f0:	3025883a 	mov	r18,r6
    79f4:	3827883a 	mov	r19,r7
    79f8:	18000526 	beq	r3,zero,7a10 <__swrite+0x48>
    79fc:	2940038f 	ldh	r5,14(r5)
    7a00:	01c00084 	movi	r7,2
    7a04:	000d883a 	mov	r6,zero
    7a08:	0009bb80 	call	9bb8 <_lseek_r>
    7a0c:	8080030b 	ldhu	r2,12(r16)
    7a10:	8140038f 	ldh	r5,14(r16)
    7a14:	10bbffcc 	andi	r2,r2,61439
    7a18:	980f883a 	mov	r7,r19
    7a1c:	900d883a 	mov	r6,r18
    7a20:	8809883a 	mov	r4,r17
    7a24:	8080030d 	sth	r2,12(r16)
    7a28:	dfc00417 	ldw	ra,16(sp)
    7a2c:	dcc00317 	ldw	r19,12(sp)
    7a30:	dc800217 	ldw	r18,8(sp)
    7a34:	dc400117 	ldw	r17,4(sp)
    7a38:	dc000017 	ldw	r16,0(sp)
    7a3c:	dec00504 	addi	sp,sp,20
    7a40:	00090f41 	jmpi	90f4 <_write_r>

00007a44 <__sseek>:
    7a44:	defffe04 	addi	sp,sp,-8
    7a48:	dc000015 	stw	r16,0(sp)
    7a4c:	2821883a 	mov	r16,r5
    7a50:	2940038f 	ldh	r5,14(r5)
    7a54:	dfc00115 	stw	ra,4(sp)
    7a58:	0009bb80 	call	9bb8 <_lseek_r>
    7a5c:	00ffffc4 	movi	r3,-1
    7a60:	10c00826 	beq	r2,r3,7a84 <__sseek+0x40>
    7a64:	80c0030b 	ldhu	r3,12(r16)
    7a68:	80801415 	stw	r2,80(r16)
    7a6c:	18c40014 	ori	r3,r3,4096
    7a70:	80c0030d 	sth	r3,12(r16)
    7a74:	dfc00117 	ldw	ra,4(sp)
    7a78:	dc000017 	ldw	r16,0(sp)
    7a7c:	dec00204 	addi	sp,sp,8
    7a80:	f800283a 	ret
    7a84:	80c0030b 	ldhu	r3,12(r16)
    7a88:	18fbffcc 	andi	r3,r3,61439
    7a8c:	80c0030d 	sth	r3,12(r16)
    7a90:	dfc00117 	ldw	ra,4(sp)
    7a94:	dc000017 	ldw	r16,0(sp)
    7a98:	dec00204 	addi	sp,sp,8
    7a9c:	f800283a 	ret

00007aa0 <__sclose>:
    7aa0:	2940038f 	ldh	r5,14(r5)
    7aa4:	00092a81 	jmpi	92a8 <_close_r>

00007aa8 <strcmp>:
    7aa8:	2144b03a 	or	r2,r4,r5
    7aac:	108000cc 	andi	r2,r2,3
    7ab0:	1000171e 	bne	r2,zero,7b10 <strcmp+0x68>
    7ab4:	20800017 	ldw	r2,0(r4)
    7ab8:	28c00017 	ldw	r3,0(r5)
    7abc:	10c0141e 	bne	r2,r3,7b10 <strcmp+0x68>
    7ac0:	027fbff4 	movhi	r9,65279
    7ac4:	4a7fbfc4 	addi	r9,r9,-257
    7ac8:	0086303a 	nor	r3,zero,r2
    7acc:	02202074 	movhi	r8,32897
    7ad0:	1245883a 	add	r2,r2,r9
    7ad4:	42202004 	addi	r8,r8,-32640
    7ad8:	10c4703a 	and	r2,r2,r3
    7adc:	1204703a 	and	r2,r2,r8
    7ae0:	10000226 	beq	r2,zero,7aec <strcmp+0x44>
    7ae4:	00002306 	br	7b74 <strcmp+0xcc>
    7ae8:	1000221e 	bne	r2,zero,7b74 <strcmp+0xcc>
    7aec:	21000104 	addi	r4,r4,4
    7af0:	20c00017 	ldw	r3,0(r4)
    7af4:	29400104 	addi	r5,r5,4
    7af8:	29800017 	ldw	r6,0(r5)
    7afc:	1a4f883a 	add	r7,r3,r9
    7b00:	00c4303a 	nor	r2,zero,r3
    7b04:	3884703a 	and	r2,r7,r2
    7b08:	1204703a 	and	r2,r2,r8
    7b0c:	19bff626 	beq	r3,r6,7ae8 <__alt_mem_Onchip_SRAM+0xf8007ae8>
    7b10:	20800003 	ldbu	r2,0(r4)
    7b14:	10c03fcc 	andi	r3,r2,255
    7b18:	18c0201c 	xori	r3,r3,128
    7b1c:	18ffe004 	addi	r3,r3,-128
    7b20:	18000c26 	beq	r3,zero,7b54 <strcmp+0xac>
    7b24:	29800007 	ldb	r6,0(r5)
    7b28:	19800326 	beq	r3,r6,7b38 <strcmp+0x90>
    7b2c:	00001306 	br	7b7c <strcmp+0xd4>
    7b30:	29800007 	ldb	r6,0(r5)
    7b34:	11800b1e 	bne	r2,r6,7b64 <strcmp+0xbc>
    7b38:	21000044 	addi	r4,r4,1
    7b3c:	20c00003 	ldbu	r3,0(r4)
    7b40:	29400044 	addi	r5,r5,1
    7b44:	18803fcc 	andi	r2,r3,255
    7b48:	1080201c 	xori	r2,r2,128
    7b4c:	10bfe004 	addi	r2,r2,-128
    7b50:	103ff71e 	bne	r2,zero,7b30 <__alt_mem_Onchip_SRAM+0xf8007b30>
    7b54:	0007883a 	mov	r3,zero
    7b58:	28800003 	ldbu	r2,0(r5)
    7b5c:	1885c83a 	sub	r2,r3,r2
    7b60:	f800283a 	ret
    7b64:	28800003 	ldbu	r2,0(r5)
    7b68:	18c03fcc 	andi	r3,r3,255
    7b6c:	1885c83a 	sub	r2,r3,r2
    7b70:	f800283a 	ret
    7b74:	0005883a 	mov	r2,zero
    7b78:	f800283a 	ret
    7b7c:	10c03fcc 	andi	r3,r2,255
    7b80:	003ff506 	br	7b58 <__alt_mem_Onchip_SRAM+0xf8007b58>

00007b84 <__ssprint_r>:
    7b84:	30800217 	ldw	r2,8(r6)
    7b88:	defff604 	addi	sp,sp,-40
    7b8c:	dc800215 	stw	r18,8(sp)
    7b90:	dfc00915 	stw	ra,36(sp)
    7b94:	df000815 	stw	fp,32(sp)
    7b98:	ddc00715 	stw	r23,28(sp)
    7b9c:	dd800615 	stw	r22,24(sp)
    7ba0:	dd400515 	stw	r21,20(sp)
    7ba4:	dd000415 	stw	r20,16(sp)
    7ba8:	dcc00315 	stw	r19,12(sp)
    7bac:	dc400115 	stw	r17,4(sp)
    7bb0:	dc000015 	stw	r16,0(sp)
    7bb4:	3025883a 	mov	r18,r6
    7bb8:	10005826 	beq	r2,zero,7d1c <__ssprint_r+0x198>
    7bbc:	2027883a 	mov	r19,r4
    7bc0:	35c00017 	ldw	r23,0(r6)
    7bc4:	29000017 	ldw	r4,0(r5)
    7bc8:	28800217 	ldw	r2,8(r5)
    7bcc:	2823883a 	mov	r17,r5
    7bd0:	0039883a 	mov	fp,zero
    7bd4:	0021883a 	mov	r16,zero
    7bd8:	80003926 	beq	r16,zero,7cc0 <__ssprint_r+0x13c>
    7bdc:	102b883a 	mov	r21,r2
    7be0:	102d883a 	mov	r22,r2
    7be4:	80803a36 	bltu	r16,r2,7cd0 <__ssprint_r+0x14c>
    7be8:	88c0030b 	ldhu	r3,12(r17)
    7bec:	1881200c 	andi	r2,r3,1152
    7bf0:	10002626 	beq	r2,zero,7c8c <__ssprint_r+0x108>
    7bf4:	88800517 	ldw	r2,20(r17)
    7bf8:	89400417 	ldw	r5,16(r17)
    7bfc:	81800044 	addi	r6,r16,1
    7c00:	108f883a 	add	r7,r2,r2
    7c04:	3885883a 	add	r2,r7,r2
    7c08:	100ed7fa 	srli	r7,r2,31
    7c0c:	216dc83a 	sub	r22,r4,r5
    7c10:	3589883a 	add	r4,r6,r22
    7c14:	3885883a 	add	r2,r7,r2
    7c18:	102bd07a 	srai	r21,r2,1
    7c1c:	a80d883a 	mov	r6,r21
    7c20:	a900022e 	bgeu	r21,r4,7c2c <__ssprint_r+0xa8>
    7c24:	202b883a 	mov	r21,r4
    7c28:	200d883a 	mov	r6,r4
    7c2c:	18c1000c 	andi	r3,r3,1024
    7c30:	18002a26 	beq	r3,zero,7cdc <__ssprint_r+0x158>
    7c34:	300b883a 	mov	r5,r6
    7c38:	9809883a 	mov	r4,r19
    7c3c:	00055cc0 	call	55cc <_malloc_r>
    7c40:	1029883a 	mov	r20,r2
    7c44:	10002c26 	beq	r2,zero,7cf8 <__ssprint_r+0x174>
    7c48:	89400417 	ldw	r5,16(r17)
    7c4c:	b00d883a 	mov	r6,r22
    7c50:	1009883a 	mov	r4,r2
    7c54:	0005ebc0 	call	5ebc <memcpy>
    7c58:	8880030b 	ldhu	r2,12(r17)
    7c5c:	00fedfc4 	movi	r3,-1153
    7c60:	10c4703a 	and	r2,r2,r3
    7c64:	10802014 	ori	r2,r2,128
    7c68:	8880030d 	sth	r2,12(r17)
    7c6c:	a589883a 	add	r4,r20,r22
    7c70:	adadc83a 	sub	r22,r21,r22
    7c74:	8d400515 	stw	r21,20(r17)
    7c78:	8d800215 	stw	r22,8(r17)
    7c7c:	8d000415 	stw	r20,16(r17)
    7c80:	89000015 	stw	r4,0(r17)
    7c84:	802b883a 	mov	r21,r16
    7c88:	802d883a 	mov	r22,r16
    7c8c:	b00d883a 	mov	r6,r22
    7c90:	e00b883a 	mov	r5,fp
    7c94:	00060040 	call	6004 <memmove>
    7c98:	88800217 	ldw	r2,8(r17)
    7c9c:	89000017 	ldw	r4,0(r17)
    7ca0:	90c00217 	ldw	r3,8(r18)
    7ca4:	1545c83a 	sub	r2,r2,r21
    7ca8:	2589883a 	add	r4,r4,r22
    7cac:	88800215 	stw	r2,8(r17)
    7cb0:	89000015 	stw	r4,0(r17)
    7cb4:	1c21c83a 	sub	r16,r3,r16
    7cb8:	94000215 	stw	r16,8(r18)
    7cbc:	80001726 	beq	r16,zero,7d1c <__ssprint_r+0x198>
    7cc0:	bf000017 	ldw	fp,0(r23)
    7cc4:	bc000117 	ldw	r16,4(r23)
    7cc8:	bdc00204 	addi	r23,r23,8
    7ccc:	003fc206 	br	7bd8 <__alt_mem_Onchip_SRAM+0xf8007bd8>
    7cd0:	802b883a 	mov	r21,r16
    7cd4:	802d883a 	mov	r22,r16
    7cd8:	003fec06 	br	7c8c <__alt_mem_Onchip_SRAM+0xf8007c8c>
    7cdc:	9809883a 	mov	r4,r19
    7ce0:	00073400 	call	7340 <_realloc_r>
    7ce4:	1029883a 	mov	r20,r2
    7ce8:	103fe01e 	bne	r2,zero,7c6c <__alt_mem_Onchip_SRAM+0xf8007c6c>
    7cec:	89400417 	ldw	r5,16(r17)
    7cf0:	9809883a 	mov	r4,r19
    7cf4:	00098a80 	call	98a8 <_free_r>
    7cf8:	88c0030b 	ldhu	r3,12(r17)
    7cfc:	00800304 	movi	r2,12
    7d00:	98800015 	stw	r2,0(r19)
    7d04:	18c01014 	ori	r3,r3,64
    7d08:	88c0030d 	sth	r3,12(r17)
    7d0c:	00bfffc4 	movi	r2,-1
    7d10:	90000215 	stw	zero,8(r18)
    7d14:	90000115 	stw	zero,4(r18)
    7d18:	00000206 	br	7d24 <__ssprint_r+0x1a0>
    7d1c:	90000115 	stw	zero,4(r18)
    7d20:	0005883a 	mov	r2,zero
    7d24:	dfc00917 	ldw	ra,36(sp)
    7d28:	df000817 	ldw	fp,32(sp)
    7d2c:	ddc00717 	ldw	r23,28(sp)
    7d30:	dd800617 	ldw	r22,24(sp)
    7d34:	dd400517 	ldw	r21,20(sp)
    7d38:	dd000417 	ldw	r20,16(sp)
    7d3c:	dcc00317 	ldw	r19,12(sp)
    7d40:	dc800217 	ldw	r18,8(sp)
    7d44:	dc400117 	ldw	r17,4(sp)
    7d48:	dc000017 	ldw	r16,0(sp)
    7d4c:	dec00a04 	addi	sp,sp,40
    7d50:	f800283a 	ret

00007d54 <___svfiprintf_internal_r>:
    7d54:	2880030b 	ldhu	r2,12(r5)
    7d58:	deffc804 	addi	sp,sp,-224
    7d5c:	dcc03115 	stw	r19,196(sp)
    7d60:	dfc03715 	stw	ra,220(sp)
    7d64:	df003615 	stw	fp,216(sp)
    7d68:	ddc03515 	stw	r23,212(sp)
    7d6c:	dd803415 	stw	r22,208(sp)
    7d70:	dd403315 	stw	r21,204(sp)
    7d74:	dd003215 	stw	r20,200(sp)
    7d78:	dc803015 	stw	r18,192(sp)
    7d7c:	dc402f15 	stw	r17,188(sp)
    7d80:	dc002e15 	stw	r16,184(sp)
    7d84:	d9402315 	stw	r5,140(sp)
    7d88:	d9002715 	stw	r4,156(sp)
    7d8c:	1080200c 	andi	r2,r2,128
    7d90:	d9c02415 	stw	r7,144(sp)
    7d94:	3027883a 	mov	r19,r6
    7d98:	10000226 	beq	r2,zero,7da4 <___svfiprintf_internal_r+0x50>
    7d9c:	28800417 	ldw	r2,16(r5)
    7da0:	10046d26 	beq	r2,zero,8f58 <___svfiprintf_internal_r+0x1204>
    7da4:	d8801a04 	addi	r2,sp,104
    7da8:	d8c019c4 	addi	r3,sp,103
    7dac:	05800074 	movhi	r22,1
    7db0:	10c9c83a 	sub	r4,r2,r3
    7db4:	b5817604 	addi	r22,r22,1496
    7db8:	d8801e15 	stw	r2,120(sp)
    7dbc:	d8c01f15 	stw	r3,124(sp)
    7dc0:	dec01a15 	stw	sp,104(sp)
    7dc4:	d8001c15 	stw	zero,112(sp)
    7dc8:	d8001b15 	stw	zero,108(sp)
    7dcc:	d811883a 	mov	r8,sp
    7dd0:	d8002915 	stw	zero,164(sp)
    7dd4:	d8002615 	stw	zero,152(sp)
    7dd8:	d9002c15 	stw	r4,176(sp)
    7ddc:	98800007 	ldb	r2,0(r19)
    7de0:	10031426 	beq	r2,zero,8a34 <___svfiprintf_internal_r+0xce0>
    7de4:	00c00944 	movi	r3,37
    7de8:	9825883a 	mov	r18,r19
    7dec:	10c0021e 	bne	r2,r3,7df8 <___svfiprintf_internal_r+0xa4>
    7df0:	00001406 	br	7e44 <___svfiprintf_internal_r+0xf0>
    7df4:	10c00326 	beq	r2,r3,7e04 <___svfiprintf_internal_r+0xb0>
    7df8:	94800044 	addi	r18,r18,1
    7dfc:	90800007 	ldb	r2,0(r18)
    7e00:	103ffc1e 	bne	r2,zero,7df4 <__alt_mem_Onchip_SRAM+0xf8007df4>
    7e04:	94e1c83a 	sub	r16,r18,r19
    7e08:	80000e26 	beq	r16,zero,7e44 <___svfiprintf_internal_r+0xf0>
    7e0c:	d8c01c17 	ldw	r3,112(sp)
    7e10:	d8801b17 	ldw	r2,108(sp)
    7e14:	44c00015 	stw	r19,0(r8)
    7e18:	1c07883a 	add	r3,r3,r16
    7e1c:	10800044 	addi	r2,r2,1
    7e20:	d8c01c15 	stw	r3,112(sp)
    7e24:	44000115 	stw	r16,4(r8)
    7e28:	d8801b15 	stw	r2,108(sp)
    7e2c:	00c001c4 	movi	r3,7
    7e30:	18835c16 	blt	r3,r2,8ba4 <___svfiprintf_internal_r+0xe50>
    7e34:	42000204 	addi	r8,r8,8
    7e38:	d9402617 	ldw	r5,152(sp)
    7e3c:	2c0b883a 	add	r5,r5,r16
    7e40:	d9402615 	stw	r5,152(sp)
    7e44:	90800007 	ldb	r2,0(r18)
    7e48:	1002fc26 	beq	r2,zero,8a3c <___svfiprintf_internal_r+0xce8>
    7e4c:	0023883a 	mov	r17,zero
    7e50:	00bfffc4 	movi	r2,-1
    7e54:	0021883a 	mov	r16,zero
    7e58:	94c00044 	addi	r19,r18,1
    7e5c:	90c00047 	ldb	r3,1(r18)
    7e60:	dc402105 	stb	r17,132(sp)
    7e64:	d8001d85 	stb	zero,118(sp)
    7e68:	002b883a 	mov	r21,zero
    7e6c:	d8802015 	stw	r2,128(sp)
    7e70:	d8002515 	stw	zero,148(sp)
    7e74:	04801604 	movi	r18,88
    7e78:	05000244 	movi	r20,9
    7e7c:	402f883a 	mov	r23,r8
    7e80:	8023883a 	mov	r17,r16
    7e84:	9cc00044 	addi	r19,r19,1
    7e88:	18bff804 	addi	r2,r3,-32
    7e8c:	9081fb36 	bltu	r18,r2,867c <___svfiprintf_internal_r+0x928>
    7e90:	100490ba 	slli	r2,r2,2
    7e94:	01000034 	movhi	r4,0
    7e98:	211faa04 	addi	r4,r4,32424
    7e9c:	1105883a 	add	r2,r2,r4
    7ea0:	10800017 	ldw	r2,0(r2)
    7ea4:	1000683a 	jmp	r2
    7ea8:	000080a8 	cmpgeui	zero,zero,514
    7eac:	0000867c 	xorhi	zero,zero,537
    7eb0:	0000867c 	xorhi	zero,zero,537
    7eb4:	0000809c 	xori	zero,zero,514
    7eb8:	0000867c 	xorhi	zero,zero,537
    7ebc:	0000867c 	xorhi	zero,zero,537
    7ec0:	0000867c 	xorhi	zero,zero,537
    7ec4:	0000867c 	xorhi	zero,zero,537
    7ec8:	0000867c 	xorhi	zero,zero,537
    7ecc:	0000867c 	xorhi	zero,zero,537
    7ed0:	0000800c 	andi	zero,zero,512
    7ed4:	00008208 	cmpgei	zero,zero,520
    7ed8:	0000867c 	xorhi	zero,zero,537
    7edc:	00008034 	movhi	zero,512
    7ee0:	000086b8 	rdprs	zero,zero,538
    7ee4:	0000867c 	xorhi	zero,zero,537
    7ee8:	000086ac 	andhi	zero,zero,538
    7eec:	00008640 	call	864 <__divsi3+0xc>
    7ef0:	00008640 	call	864 <__divsi3+0xc>
    7ef4:	00008640 	call	864 <__divsi3+0xc>
    7ef8:	00008640 	call	864 <__divsi3+0xc>
    7efc:	00008640 	call	864 <__divsi3+0xc>
    7f00:	00008640 	call	864 <__divsi3+0xc>
    7f04:	00008640 	call	864 <__divsi3+0xc>
    7f08:	00008640 	call	864 <__divsi3+0xc>
    7f0c:	00008640 	call	864 <__divsi3+0xc>
    7f10:	0000867c 	xorhi	zero,zero,537
    7f14:	0000867c 	xorhi	zero,zero,537
    7f18:	0000867c 	xorhi	zero,zero,537
    7f1c:	0000867c 	xorhi	zero,zero,537
    7f20:	0000867c 	xorhi	zero,zero,537
    7f24:	0000867c 	xorhi	zero,zero,537
    7f28:	0000867c 	xorhi	zero,zero,537
    7f2c:	0000867c 	xorhi	zero,zero,537
    7f30:	0000867c 	xorhi	zero,zero,537
    7f34:	0000867c 	xorhi	zero,zero,537
    7f38:	000085c4 	movi	zero,535
    7f3c:	0000867c 	xorhi	zero,zero,537
    7f40:	0000867c 	xorhi	zero,zero,537
    7f44:	0000867c 	xorhi	zero,zero,537
    7f48:	0000867c 	xorhi	zero,zero,537
    7f4c:	0000867c 	xorhi	zero,zero,537
    7f50:	0000867c 	xorhi	zero,zero,537
    7f54:	0000867c 	xorhi	zero,zero,537
    7f58:	0000867c 	xorhi	zero,zero,537
    7f5c:	0000867c 	xorhi	zero,zero,537
    7f60:	0000867c 	xorhi	zero,zero,537
    7f64:	00008774 	movhi	zero,541
    7f68:	0000867c 	xorhi	zero,zero,537
    7f6c:	0000867c 	xorhi	zero,zero,537
    7f70:	0000867c 	xorhi	zero,zero,537
    7f74:	0000867c 	xorhi	zero,zero,537
    7f78:	0000867c 	xorhi	zero,zero,537
    7f7c:	00008700 	call	870 <__divsi3+0x18>
    7f80:	0000867c 	xorhi	zero,zero,537
    7f84:	0000867c 	xorhi	zero,zero,537
    7f88:	00008400 	call	840 <main+0xa8>
    7f8c:	0000867c 	xorhi	zero,zero,537
    7f90:	0000867c 	xorhi	zero,zero,537
    7f94:	0000867c 	xorhi	zero,zero,537
    7f98:	0000867c 	xorhi	zero,zero,537
    7f9c:	0000867c 	xorhi	zero,zero,537
    7fa0:	0000867c 	xorhi	zero,zero,537
    7fa4:	0000867c 	xorhi	zero,zero,537
    7fa8:	0000867c 	xorhi	zero,zero,537
    7fac:	0000867c 	xorhi	zero,zero,537
    7fb0:	0000867c 	xorhi	zero,zero,537
    7fb4:	000082cc 	andi	zero,zero,523
    7fb8:	000084b0 	cmpltui	zero,zero,530
    7fbc:	0000867c 	xorhi	zero,zero,537
    7fc0:	0000867c 	xorhi	zero,zero,537
    7fc4:	0000867c 	xorhi	zero,zero,537
    7fc8:	000084a4 	muli	zero,zero,530
    7fcc:	000084b0 	cmpltui	zero,zero,530
    7fd0:	0000867c 	xorhi	zero,zero,537
    7fd4:	0000867c 	xorhi	zero,zero,537
    7fd8:	00008490 	cmplti	zero,zero,530
    7fdc:	0000867c 	xorhi	zero,zero,537
    7fe0:	00008450 	cmplti	zero,zero,529
    7fe4:	0000821c 	xori	zero,zero,520
    7fe8:	00008040 	call	804 <main+0x6c>
    7fec:	000085b8 	rdprs	zero,zero,534
    7ff0:	0000867c 	xorhi	zero,zero,537
    7ff4:	00008564 	muli	zero,zero,533
    7ff8:	0000867c 	xorhi	zero,zero,537
    7ffc:	00008180 	call	818 <main+0x80>
    8000:	0000867c 	xorhi	zero,zero,537
    8004:	0000867c 	xorhi	zero,zero,537
    8008:	000080cc 	andi	zero,zero,515
    800c:	d9002417 	ldw	r4,144(sp)
    8010:	d9402417 	ldw	r5,144(sp)
    8014:	21000017 	ldw	r4,0(r4)
    8018:	28800104 	addi	r2,r5,4
    801c:	d9002515 	stw	r4,148(sp)
    8020:	20032b0e 	bge	r4,zero,8cd0 <___svfiprintf_internal_r+0xf7c>
    8024:	d8c02517 	ldw	r3,148(sp)
    8028:	d8802415 	stw	r2,144(sp)
    802c:	00c7c83a 	sub	r3,zero,r3
    8030:	d8c02515 	stw	r3,148(sp)
    8034:	8c400114 	ori	r17,r17,4
    8038:	98c00007 	ldb	r3,0(r19)
    803c:	003f9106 	br	7e84 <__alt_mem_Onchip_SRAM+0xf8007e84>
    8040:	00800c04 	movi	r2,48
    8044:	d9402417 	ldw	r5,144(sp)
    8048:	d9002017 	ldw	r4,128(sp)
    804c:	d8801d05 	stb	r2,116(sp)
    8050:	00801e04 	movi	r2,120
    8054:	d8801d45 	stb	r2,117(sp)
    8058:	d8001d85 	stb	zero,118(sp)
    805c:	b811883a 	mov	r8,r23
    8060:	28c00104 	addi	r3,r5,4
    8064:	2c800017 	ldw	r18,0(r5)
    8068:	0029883a 	mov	r20,zero
    806c:	88800094 	ori	r2,r17,2
    8070:	20036316 	blt	r4,zero,8e00 <___svfiprintf_internal_r+0x10ac>
    8074:	00bfdfc4 	movi	r2,-129
    8078:	88a0703a 	and	r16,r17,r2
    807c:	d8c02415 	stw	r3,144(sp)
    8080:	84000094 	ori	r16,r16,2
    8084:	90031c26 	beq	r18,zero,8cf8 <___svfiprintf_internal_r+0xfa4>
    8088:	01400074 	movhi	r5,1
    808c:	29411504 	addi	r5,r5,1108
    8090:	002b883a 	mov	r21,zero
    8094:	d9402915 	stw	r5,164(sp)
    8098:	00002906 	br	8140 <___svfiprintf_internal_r+0x3ec>
    809c:	8c400054 	ori	r17,r17,1
    80a0:	98c00007 	ldb	r3,0(r19)
    80a4:	003f7706 	br	7e84 <__alt_mem_Onchip_SRAM+0xf8007e84>
    80a8:	a8803fcc 	andi	r2,r21,255
    80ac:	1080201c 	xori	r2,r2,128
    80b0:	10bfe004 	addi	r2,r2,-128
    80b4:	10032a1e 	bne	r2,zero,8d60 <___svfiprintf_internal_r+0x100c>
    80b8:	00c00044 	movi	r3,1
    80bc:	d8c02105 	stb	r3,132(sp)
    80c0:	05400804 	movi	r21,32
    80c4:	98c00007 	ldb	r3,0(r19)
    80c8:	003f6e06 	br	7e84 <__alt_mem_Onchip_SRAM+0xf8007e84>
    80cc:	8821883a 	mov	r16,r17
    80d0:	dc402103 	ldbu	r17,132(sp)
    80d4:	b811883a 	mov	r8,r23
    80d8:	8c403fcc 	andi	r17,r17,255
    80dc:	8803f01e 	bne	r17,zero,90a0 <___svfiprintf_internal_r+0x134c>
    80e0:	00800074 	movhi	r2,1
    80e4:	10811504 	addi	r2,r2,1108
    80e8:	d8802915 	stw	r2,164(sp)
    80ec:	8080080c 	andi	r2,r16,32
    80f0:	1000cd26 	beq	r2,zero,8428 <___svfiprintf_internal_r+0x6d4>
    80f4:	d9002417 	ldw	r4,144(sp)
    80f8:	24800017 	ldw	r18,0(r4)
    80fc:	25000117 	ldw	r20,4(r4)
    8100:	21000204 	addi	r4,r4,8
    8104:	d9002415 	stw	r4,144(sp)
    8108:	8080004c 	andi	r2,r16,1
    810c:	1002c726 	beq	r2,zero,8c2c <___svfiprintf_internal_r+0xed8>
    8110:	9504b03a 	or	r2,r18,r20
    8114:	1003061e 	bne	r2,zero,8d30 <___svfiprintf_internal_r+0xfdc>
    8118:	d9002017 	ldw	r4,128(sp)
    811c:	d8001d85 	stb	zero,118(sp)
    8120:	20033e16 	blt	r4,zero,8e1c <___svfiprintf_internal_r+0x10c8>
    8124:	00bfdfc4 	movi	r2,-129
    8128:	80a0703a 	and	r16,r16,r2
    812c:	d9402017 	ldw	r5,128(sp)
    8130:	002b883a 	mov	r21,zero
    8134:	28002826 	beq	r5,zero,81d8 <___svfiprintf_internal_r+0x484>
    8138:	0025883a 	mov	r18,zero
    813c:	0029883a 	mov	r20,zero
    8140:	d9002917 	ldw	r4,164(sp)
    8144:	dc401a04 	addi	r17,sp,104
    8148:	908003cc 	andi	r2,r18,15
    814c:	a006973a 	slli	r3,r20,28
    8150:	2085883a 	add	r2,r4,r2
    8154:	9024d13a 	srli	r18,r18,4
    8158:	10800003 	ldbu	r2,0(r2)
    815c:	a028d13a 	srli	r20,r20,4
    8160:	8c7fffc4 	addi	r17,r17,-1
    8164:	1ca4b03a 	or	r18,r3,r18
    8168:	88800005 	stb	r2,0(r17)
    816c:	9504b03a 	or	r2,r18,r20
    8170:	103ff51e 	bne	r2,zero,8148 <__alt_mem_Onchip_SRAM+0xf8008148>
    8174:	d8801e17 	ldw	r2,120(sp)
    8178:	1469c83a 	sub	r20,r2,r17
    817c:	00001906 	br	81e4 <___svfiprintf_internal_r+0x490>
    8180:	8821883a 	mov	r16,r17
    8184:	dc402103 	ldbu	r17,132(sp)
    8188:	b811883a 	mov	r8,r23
    818c:	8c403fcc 	andi	r17,r17,255
    8190:	8803d01e 	bne	r17,zero,90d4 <___svfiprintf_internal_r+0x1380>
    8194:	8080080c 	andi	r2,r16,32
    8198:	10016126 	beq	r2,zero,8720 <___svfiprintf_internal_r+0x9cc>
    819c:	d9002417 	ldw	r4,144(sp)
    81a0:	d9402017 	ldw	r5,128(sp)
    81a4:	d8001d85 	stb	zero,118(sp)
    81a8:	20c00204 	addi	r3,r4,8
    81ac:	24800017 	ldw	r18,0(r4)
    81b0:	25000117 	ldw	r20,4(r4)
    81b4:	28030f16 	blt	r5,zero,8df4 <___svfiprintf_internal_r+0x10a0>
    81b8:	013fdfc4 	movi	r4,-129
    81bc:	9504b03a 	or	r2,r18,r20
    81c0:	d8c02415 	stw	r3,144(sp)
    81c4:	8120703a 	and	r16,r16,r4
    81c8:	002b883a 	mov	r21,zero
    81cc:	1000cd1e 	bne	r2,zero,8504 <___svfiprintf_internal_r+0x7b0>
    81d0:	d8c02017 	ldw	r3,128(sp)
    81d4:	1803141e 	bne	r3,zero,8e28 <___svfiprintf_internal_r+0x10d4>
    81d8:	d8002015 	stw	zero,128(sp)
    81dc:	0029883a 	mov	r20,zero
    81e0:	dc401a04 	addi	r17,sp,104
    81e4:	dc802017 	ldw	r18,128(sp)
    81e8:	9500010e 	bge	r18,r20,81f0 <___svfiprintf_internal_r+0x49c>
    81ec:	a025883a 	mov	r18,r20
    81f0:	ad403fcc 	andi	r21,r21,255
    81f4:	ad40201c 	xori	r21,r21,128
    81f8:	ad7fe004 	addi	r21,r21,-128
    81fc:	a8003f26 	beq	r21,zero,82fc <___svfiprintf_internal_r+0x5a8>
    8200:	94800044 	addi	r18,r18,1
    8204:	00003d06 	br	82fc <___svfiprintf_internal_r+0x5a8>
    8208:	00c00044 	movi	r3,1
    820c:	d8c02105 	stb	r3,132(sp)
    8210:	05400ac4 	movi	r21,43
    8214:	98c00007 	ldb	r3,0(r19)
    8218:	003f1a06 	br	7e84 <__alt_mem_Onchip_SRAM+0xf8007e84>
    821c:	8821883a 	mov	r16,r17
    8220:	dc402103 	ldbu	r17,132(sp)
    8224:	b811883a 	mov	r8,r23
    8228:	8c403fcc 	andi	r17,r17,255
    822c:	8803a71e 	bne	r17,zero,90cc <___svfiprintf_internal_r+0x1378>
    8230:	8080080c 	andi	r2,r16,32
    8234:	10015726 	beq	r2,zero,8794 <___svfiprintf_internal_r+0xa40>
    8238:	d8c02417 	ldw	r3,144(sp)
    823c:	d9002017 	ldw	r4,128(sp)
    8240:	d8001d85 	stb	zero,118(sp)
    8244:	18800204 	addi	r2,r3,8
    8248:	1c800017 	ldw	r18,0(r3)
    824c:	1d000117 	ldw	r20,4(r3)
    8250:	2002db16 	blt	r4,zero,8dc0 <___svfiprintf_internal_r+0x106c>
    8254:	013fdfc4 	movi	r4,-129
    8258:	9506b03a 	or	r3,r18,r20
    825c:	d8802415 	stw	r2,144(sp)
    8260:	8120703a 	and	r16,r16,r4
    8264:	18015826 	beq	r3,zero,87c8 <___svfiprintf_internal_r+0xa74>
    8268:	002b883a 	mov	r21,zero
    826c:	dc401a04 	addi	r17,sp,104
    8270:	9006d0fa 	srli	r3,r18,3
    8274:	a008977a 	slli	r4,r20,29
    8278:	a028d0fa 	srli	r20,r20,3
    827c:	948001cc 	andi	r18,r18,7
    8280:	90800c04 	addi	r2,r18,48
    8284:	8c7fffc4 	addi	r17,r17,-1
    8288:	20e4b03a 	or	r18,r4,r3
    828c:	88800005 	stb	r2,0(r17)
    8290:	9506b03a 	or	r3,r18,r20
    8294:	183ff61e 	bne	r3,zero,8270 <__alt_mem_Onchip_SRAM+0xf8008270>
    8298:	80c0004c 	andi	r3,r16,1
    829c:	18028926 	beq	r3,zero,8cc4 <___svfiprintf_internal_r+0xf70>
    82a0:	10803fcc 	andi	r2,r2,255
    82a4:	1080201c 	xori	r2,r2,128
    82a8:	10bfe004 	addi	r2,r2,-128
    82ac:	00c00c04 	movi	r3,48
    82b0:	10ffb026 	beq	r2,r3,8174 <__alt_mem_Onchip_SRAM+0xf8008174>
    82b4:	88ffffc5 	stb	r3,-1(r17)
    82b8:	d8c01e17 	ldw	r3,120(sp)
    82bc:	88bfffc4 	addi	r2,r17,-1
    82c0:	1023883a 	mov	r17,r2
    82c4:	18a9c83a 	sub	r20,r3,r2
    82c8:	003fc606 	br	81e4 <__alt_mem_Onchip_SRAM+0xf80081e4>
    82cc:	d8c02417 	ldw	r3,144(sp)
    82d0:	04800044 	movi	r18,1
    82d4:	8821883a 	mov	r16,r17
    82d8:	18800017 	ldw	r2,0(r3)
    82dc:	18c00104 	addi	r3,r3,4
    82e0:	b811883a 	mov	r8,r23
    82e4:	d8001d85 	stb	zero,118(sp)
    82e8:	d8801005 	stb	r2,64(sp)
    82ec:	d8c02415 	stw	r3,144(sp)
    82f0:	9029883a 	mov	r20,r18
    82f4:	dc401004 	addi	r17,sp,64
    82f8:	d8002015 	stw	zero,128(sp)
    82fc:	80c0008c 	andi	r3,r16,2
    8300:	d8c02115 	stw	r3,132(sp)
    8304:	18000126 	beq	r3,zero,830c <___svfiprintf_internal_r+0x5b8>
    8308:	94800084 	addi	r18,r18,2
    830c:	80c0210c 	andi	r3,r16,132
    8310:	d8c02215 	stw	r3,136(sp)
    8314:	1801321e 	bne	r3,zero,87e0 <___svfiprintf_internal_r+0xa8c>
    8318:	d9002517 	ldw	r4,148(sp)
    831c:	24b9c83a 	sub	fp,r4,r18
    8320:	07012f0e 	bge	zero,fp,87e0 <___svfiprintf_internal_r+0xa8c>
    8324:	02400404 	movi	r9,16
    8328:	d8c01c17 	ldw	r3,112(sp)
    832c:	d8801b17 	ldw	r2,108(sp)
    8330:	4f03250e 	bge	r9,fp,8fc8 <___svfiprintf_internal_r+0x1274>
    8334:	01000074 	movhi	r4,1
    8338:	21017a04 	addi	r4,r4,1512
    833c:	dc002a15 	stw	r16,168(sp)
    8340:	dc402b15 	stw	r17,172(sp)
    8344:	d9002815 	stw	r4,160(sp)
    8348:	e023883a 	mov	r17,fp
    834c:	482f883a 	mov	r23,r9
    8350:	9839883a 	mov	fp,r19
    8354:	054001c4 	movi	r21,7
    8358:	9027883a 	mov	r19,r18
    835c:	dc002717 	ldw	r16,156(sp)
    8360:	dc802317 	ldw	r18,140(sp)
    8364:	00000306 	br	8374 <___svfiprintf_internal_r+0x620>
    8368:	8c7ffc04 	addi	r17,r17,-16
    836c:	42000204 	addi	r8,r8,8
    8370:	bc40130e 	bge	r23,r17,83c0 <___svfiprintf_internal_r+0x66c>
    8374:	01400074 	movhi	r5,1
    8378:	18c00404 	addi	r3,r3,16
    837c:	10800044 	addi	r2,r2,1
    8380:	29417a04 	addi	r5,r5,1512
    8384:	41400015 	stw	r5,0(r8)
    8388:	45c00115 	stw	r23,4(r8)
    838c:	d8c01c15 	stw	r3,112(sp)
    8390:	d8801b15 	stw	r2,108(sp)
    8394:	a8bff40e 	bge	r21,r2,8368 <__alt_mem_Onchip_SRAM+0xf8008368>
    8398:	d9801a04 	addi	r6,sp,104
    839c:	900b883a 	mov	r5,r18
    83a0:	8009883a 	mov	r4,r16
    83a4:	0007b840 	call	7b84 <__ssprint_r>
    83a8:	1001aa1e 	bne	r2,zero,8a54 <___svfiprintf_internal_r+0xd00>
    83ac:	8c7ffc04 	addi	r17,r17,-16
    83b0:	d8c01c17 	ldw	r3,112(sp)
    83b4:	d8801b17 	ldw	r2,108(sp)
    83b8:	d811883a 	mov	r8,sp
    83bc:	bc7fed16 	blt	r23,r17,8374 <__alt_mem_Onchip_SRAM+0xf8008374>
    83c0:	9825883a 	mov	r18,r19
    83c4:	dc002a17 	ldw	r16,168(sp)
    83c8:	e027883a 	mov	r19,fp
    83cc:	8839883a 	mov	fp,r17
    83d0:	dc402b17 	ldw	r17,172(sp)
    83d4:	d9002817 	ldw	r4,160(sp)
    83d8:	e0c7883a 	add	r3,fp,r3
    83dc:	10800044 	addi	r2,r2,1
    83e0:	41000015 	stw	r4,0(r8)
    83e4:	47000115 	stw	fp,4(r8)
    83e8:	d8c01c15 	stw	r3,112(sp)
    83ec:	d8801b15 	stw	r2,108(sp)
    83f0:	010001c4 	movi	r4,7
    83f4:	20821616 	blt	r4,r2,8c50 <___svfiprintf_internal_r+0xefc>
    83f8:	42000204 	addi	r8,r8,8
    83fc:	0000fa06 	br	87e8 <___svfiprintf_internal_r+0xa94>
    8400:	8821883a 	mov	r16,r17
    8404:	dc402103 	ldbu	r17,132(sp)
    8408:	b811883a 	mov	r8,r23
    840c:	8c403fcc 	andi	r17,r17,255
    8410:	8803361e 	bne	r17,zero,90ec <___svfiprintf_internal_r+0x1398>
    8414:	01400074 	movhi	r5,1
    8418:	29411004 	addi	r5,r5,1088
    841c:	d9402915 	stw	r5,164(sp)
    8420:	8080080c 	andi	r2,r16,32
    8424:	103f331e 	bne	r2,zero,80f4 <__alt_mem_Onchip_SRAM+0xf80080f4>
    8428:	8080040c 	andi	r2,r16,16
    842c:	1002551e 	bne	r2,zero,8d84 <___svfiprintf_internal_r+0x1030>
    8430:	8080100c 	andi	r2,r16,64
    8434:	1002a626 	beq	r2,zero,8ed0 <___svfiprintf_internal_r+0x117c>
    8438:	d8802417 	ldw	r2,144(sp)
    843c:	0029883a 	mov	r20,zero
    8440:	1480000b 	ldhu	r18,0(r2)
    8444:	10800104 	addi	r2,r2,4
    8448:	d8802415 	stw	r2,144(sp)
    844c:	003f2e06 	br	8108 <__alt_mem_Onchip_SRAM+0xf8008108>
    8450:	8821883a 	mov	r16,r17
    8454:	dc402103 	ldbu	r17,132(sp)
    8458:	b811883a 	mov	r8,r23
    845c:	8c403fcc 	andi	r17,r17,255
    8460:	88030b1e 	bne	r17,zero,9090 <___svfiprintf_internal_r+0x133c>
    8464:	8080080c 	andi	r2,r16,32
    8468:	1002271e 	bne	r2,zero,8d08 <___svfiprintf_internal_r+0xfb4>
    846c:	8080040c 	andi	r2,r16,16
    8470:	10028e26 	beq	r2,zero,8eac <___svfiprintf_internal_r+0x1158>
    8474:	d8c02417 	ldw	r3,144(sp)
    8478:	d9002617 	ldw	r4,152(sp)
    847c:	18800017 	ldw	r2,0(r3)
    8480:	18c00104 	addi	r3,r3,4
    8484:	d8c02415 	stw	r3,144(sp)
    8488:	11000015 	stw	r4,0(r2)
    848c:	003e5306 	br	7ddc <__alt_mem_Onchip_SRAM+0xf8007ddc>
    8490:	98c00007 	ldb	r3,0(r19)
    8494:	01401b04 	movi	r5,108
    8498:	19424f26 	beq	r3,r5,8dd8 <___svfiprintf_internal_r+0x1084>
    849c:	8c400414 	ori	r17,r17,16
    84a0:	003e7806 	br	7e84 <__alt_mem_Onchip_SRAM+0xf8007e84>
    84a4:	8c401014 	ori	r17,r17,64
    84a8:	98c00007 	ldb	r3,0(r19)
    84ac:	003e7506 	br	7e84 <__alt_mem_Onchip_SRAM+0xf8007e84>
    84b0:	8821883a 	mov	r16,r17
    84b4:	dc402103 	ldbu	r17,132(sp)
    84b8:	b811883a 	mov	r8,r23
    84bc:	8c403fcc 	andi	r17,r17,255
    84c0:	8802fe1e 	bne	r17,zero,90bc <___svfiprintf_internal_r+0x1368>
    84c4:	8080080c 	andi	r2,r16,32
    84c8:	10004626 	beq	r2,zero,85e4 <___svfiprintf_internal_r+0x890>
    84cc:	d9002417 	ldw	r4,144(sp)
    84d0:	20800117 	ldw	r2,4(r4)
    84d4:	24800017 	ldw	r18,0(r4)
    84d8:	21000204 	addi	r4,r4,8
    84dc:	d9002415 	stw	r4,144(sp)
    84e0:	1029883a 	mov	r20,r2
    84e4:	10004a16 	blt	r2,zero,8610 <___svfiprintf_internal_r+0x8bc>
    84e8:	d9002017 	ldw	r4,128(sp)
    84ec:	dd401d83 	ldbu	r21,118(sp)
    84f0:	2001eb16 	blt	r4,zero,8ca0 <___svfiprintf_internal_r+0xf4c>
    84f4:	00ffdfc4 	movi	r3,-129
    84f8:	9504b03a 	or	r2,r18,r20
    84fc:	80e0703a 	and	r16,r16,r3
    8500:	103f3326 	beq	r2,zero,81d0 <__alt_mem_Onchip_SRAM+0xf80081d0>
    8504:	a0009426 	beq	r20,zero,8758 <___svfiprintf_internal_r+0xa04>
    8508:	dc401a04 	addi	r17,sp,104
    850c:	402f883a 	mov	r23,r8
    8510:	9009883a 	mov	r4,r18
    8514:	a00b883a 	mov	r5,r20
    8518:	01800284 	movi	r6,10
    851c:	000f883a 	mov	r7,zero
    8520:	000a5ec0 	call	a5ec <__umoddi3>
    8524:	10800c04 	addi	r2,r2,48
    8528:	8c7fffc4 	addi	r17,r17,-1
    852c:	9009883a 	mov	r4,r18
    8530:	a00b883a 	mov	r5,r20
    8534:	88800005 	stb	r2,0(r17)
    8538:	01800284 	movi	r6,10
    853c:	000f883a 	mov	r7,zero
    8540:	0009ff00 	call	9ff0 <__udivdi3>
    8544:	1025883a 	mov	r18,r2
    8548:	10c4b03a 	or	r2,r2,r3
    854c:	1829883a 	mov	r20,r3
    8550:	103fef1e 	bne	r2,zero,8510 <__alt_mem_Onchip_SRAM+0xf8008510>
    8554:	d9001e17 	ldw	r4,120(sp)
    8558:	b811883a 	mov	r8,r23
    855c:	2469c83a 	sub	r20,r4,r17
    8560:	003f2006 	br	81e4 <__alt_mem_Onchip_SRAM+0xf80081e4>
    8564:	d8802417 	ldw	r2,144(sp)
    8568:	8821883a 	mov	r16,r17
    856c:	d8001d85 	stb	zero,118(sp)
    8570:	14400017 	ldw	r17,0(r2)
    8574:	b811883a 	mov	r8,r23
    8578:	15c00104 	addi	r23,r2,4
    857c:	88026c26 	beq	r17,zero,8f30 <___svfiprintf_internal_r+0x11dc>
    8580:	d8c02017 	ldw	r3,128(sp)
    8584:	18025f16 	blt	r3,zero,8f04 <___svfiprintf_internal_r+0x11b0>
    8588:	180d883a 	mov	r6,r3
    858c:	000b883a 	mov	r5,zero
    8590:	8809883a 	mov	r4,r17
    8594:	da002d15 	stw	r8,180(sp)
    8598:	0005dd80 	call	5dd8 <memchr>
    859c:	da002d17 	ldw	r8,180(sp)
    85a0:	1002a526 	beq	r2,zero,9038 <___svfiprintf_internal_r+0x12e4>
    85a4:	1469c83a 	sub	r20,r2,r17
    85a8:	dd401d83 	ldbu	r21,118(sp)
    85ac:	ddc02415 	stw	r23,144(sp)
    85b0:	d8002015 	stw	zero,128(sp)
    85b4:	003f0b06 	br	81e4 <__alt_mem_Onchip_SRAM+0xf80081e4>
    85b8:	8c400814 	ori	r17,r17,32
    85bc:	98c00007 	ldb	r3,0(r19)
    85c0:	003e3006 	br	7e84 <__alt_mem_Onchip_SRAM+0xf8007e84>
    85c4:	8821883a 	mov	r16,r17
    85c8:	dc402103 	ldbu	r17,132(sp)
    85cc:	b811883a 	mov	r8,r23
    85d0:	8c403fcc 	andi	r17,r17,255
    85d4:	8802b01e 	bne	r17,zero,9098 <___svfiprintf_internal_r+0x1344>
    85d8:	84000414 	ori	r16,r16,16
    85dc:	8080080c 	andi	r2,r16,32
    85e0:	103fba1e 	bne	r2,zero,84cc <__alt_mem_Onchip_SRAM+0xf80084cc>
    85e4:	8080040c 	andi	r2,r16,16
    85e8:	1001df1e 	bne	r2,zero,8d68 <___svfiprintf_internal_r+0x1014>
    85ec:	8080100c 	andi	r2,r16,64
    85f0:	10023d26 	beq	r2,zero,8ee8 <___svfiprintf_internal_r+0x1194>
    85f4:	d8802417 	ldw	r2,144(sp)
    85f8:	1480000f 	ldh	r18,0(r2)
    85fc:	10800104 	addi	r2,r2,4
    8600:	d8802415 	stw	r2,144(sp)
    8604:	9029d7fa 	srai	r20,r18,31
    8608:	a005883a 	mov	r2,r20
    860c:	103fb60e 	bge	r2,zero,84e8 <__alt_mem_Onchip_SRAM+0xf80084e8>
    8610:	d9402017 	ldw	r5,128(sp)
    8614:	04a5c83a 	sub	r18,zero,r18
    8618:	05400b44 	movi	r21,45
    861c:	9004c03a 	cmpne	r2,r18,zero
    8620:	0529c83a 	sub	r20,zero,r20
    8624:	dd401d85 	stb	r21,118(sp)
    8628:	a0a9c83a 	sub	r20,r20,r2
    862c:	28026c16 	blt	r5,zero,8fe0 <___svfiprintf_internal_r+0x128c>
    8630:	00bfdfc4 	movi	r2,-129
    8634:	80a0703a 	and	r16,r16,r2
    8638:	a03fb31e 	bne	r20,zero,8508 <__alt_mem_Onchip_SRAM+0xf8008508>
    863c:	00004606 	br	8758 <___svfiprintf_internal_r+0xa04>
    8640:	9839883a 	mov	fp,r19
    8644:	d8002515 	stw	zero,148(sp)
    8648:	1c3ff404 	addi	r16,r3,-48
    864c:	0009883a 	mov	r4,zero
    8650:	01400284 	movi	r5,10
    8654:	0000a0c0 	call	a0c <__mulsi3>
    8658:	e0c00007 	ldb	r3,0(fp)
    865c:	8089883a 	add	r4,r16,r2
    8660:	9cc00044 	addi	r19,r19,1
    8664:	1c3ff404 	addi	r16,r3,-48
    8668:	9839883a 	mov	fp,r19
    866c:	a43ff82e 	bgeu	r20,r16,8650 <__alt_mem_Onchip_SRAM+0xf8008650>
    8670:	d9002515 	stw	r4,148(sp)
    8674:	18bff804 	addi	r2,r3,-32
    8678:	90be052e 	bgeu	r18,r2,7e90 <__alt_mem_Onchip_SRAM+0xf8007e90>
    867c:	8821883a 	mov	r16,r17
    8680:	dc402103 	ldbu	r17,132(sp)
    8684:	b811883a 	mov	r8,r23
    8688:	8c403fcc 	andi	r17,r17,255
    868c:	88028d1e 	bne	r17,zero,90c4 <___svfiprintf_internal_r+0x1370>
    8690:	1800ea26 	beq	r3,zero,8a3c <___svfiprintf_internal_r+0xce8>
    8694:	04800044 	movi	r18,1
    8698:	d8c01005 	stb	r3,64(sp)
    869c:	d8001d85 	stb	zero,118(sp)
    86a0:	9029883a 	mov	r20,r18
    86a4:	dc401004 	addi	r17,sp,64
    86a8:	003f1306 	br	82f8 <__alt_mem_Onchip_SRAM+0xf80082f8>
    86ac:	8c402014 	ori	r17,r17,128
    86b0:	98c00007 	ldb	r3,0(r19)
    86b4:	003df306 	br	7e84 <__alt_mem_Onchip_SRAM+0xf8007e84>
    86b8:	98c00007 	ldb	r3,0(r19)
    86bc:	01000a84 	movi	r4,42
    86c0:	9f000044 	addi	fp,r19,1
    86c4:	19026326 	beq	r3,r4,9054 <___svfiprintf_internal_r+0x1300>
    86c8:	1c3ff404 	addi	r16,r3,-48
    86cc:	0009883a 	mov	r4,zero
    86d0:	a4025636 	bltu	r20,r16,902c <___svfiprintf_internal_r+0x12d8>
    86d4:	01400284 	movi	r5,10
    86d8:	0000a0c0 	call	a0c <__mulsi3>
    86dc:	e0c00007 	ldb	r3,0(fp)
    86e0:	1409883a 	add	r4,r2,r16
    86e4:	e4c00044 	addi	r19,fp,1
    86e8:	1c3ff404 	addi	r16,r3,-48
    86ec:	9839883a 	mov	fp,r19
    86f0:	a43ff82e 	bgeu	r20,r16,86d4 <__alt_mem_Onchip_SRAM+0xf80086d4>
    86f4:	20020c16 	blt	r4,zero,8f28 <___svfiprintf_internal_r+0x11d4>
    86f8:	d9002015 	stw	r4,128(sp)
    86fc:	003de206 	br	7e88 <__alt_mem_Onchip_SRAM+0xf8007e88>
    8700:	8821883a 	mov	r16,r17
    8704:	dc402103 	ldbu	r17,132(sp)
    8708:	b811883a 	mov	r8,r23
    870c:	8c403fcc 	andi	r17,r17,255
    8710:	8802721e 	bne	r17,zero,90dc <___svfiprintf_internal_r+0x1388>
    8714:	84000414 	ori	r16,r16,16
    8718:	8080080c 	andi	r2,r16,32
    871c:	103e9f1e 	bne	r2,zero,819c <__alt_mem_Onchip_SRAM+0xf800819c>
    8720:	8080040c 	andi	r2,r16,16
    8724:	10015326 	beq	r2,zero,8c74 <___svfiprintf_internal_r+0xf20>
    8728:	d8c02417 	ldw	r3,144(sp)
    872c:	d9002017 	ldw	r4,128(sp)
    8730:	d8001d85 	stb	zero,118(sp)
    8734:	18800104 	addi	r2,r3,4
    8738:	1c800017 	ldw	r18,0(r3)
    873c:	0029883a 	mov	r20,zero
    8740:	20015516 	blt	r4,zero,8c98 <___svfiprintf_internal_r+0xf44>
    8744:	00ffdfc4 	movi	r3,-129
    8748:	d8802415 	stw	r2,144(sp)
    874c:	80e0703a 	and	r16,r16,r3
    8750:	002b883a 	mov	r21,zero
    8754:	903e9e26 	beq	r18,zero,81d0 <__alt_mem_Onchip_SRAM+0xf80081d0>
    8758:	00800244 	movi	r2,9
    875c:	14bf6a36 	bltu	r2,r18,8508 <__alt_mem_Onchip_SRAM+0xf8008508>
    8760:	94800c04 	addi	r18,r18,48
    8764:	dc8019c5 	stb	r18,103(sp)
    8768:	dd002c17 	ldw	r20,176(sp)
    876c:	dc4019c4 	addi	r17,sp,103
    8770:	003e9c06 	br	81e4 <__alt_mem_Onchip_SRAM+0xf80081e4>
    8774:	8821883a 	mov	r16,r17
    8778:	dc402103 	ldbu	r17,132(sp)
    877c:	b811883a 	mov	r8,r23
    8780:	8c403fcc 	andi	r17,r17,255
    8784:	8802571e 	bne	r17,zero,90e4 <___svfiprintf_internal_r+0x1390>
    8788:	84000414 	ori	r16,r16,16
    878c:	8080080c 	andi	r2,r16,32
    8790:	103ea91e 	bne	r2,zero,8238 <__alt_mem_Onchip_SRAM+0xf8008238>
    8794:	8080040c 	andi	r2,r16,16
    8798:	10018026 	beq	r2,zero,8d9c <___svfiprintf_internal_r+0x1048>
    879c:	d9402417 	ldw	r5,144(sp)
    87a0:	d8c02017 	ldw	r3,128(sp)
    87a4:	d8001d85 	stb	zero,118(sp)
    87a8:	28800104 	addi	r2,r5,4
    87ac:	2c800017 	ldw	r18,0(r5)
    87b0:	0029883a 	mov	r20,zero
    87b4:	18018216 	blt	r3,zero,8dc0 <___svfiprintf_internal_r+0x106c>
    87b8:	00ffdfc4 	movi	r3,-129
    87bc:	d8802415 	stw	r2,144(sp)
    87c0:	80e0703a 	and	r16,r16,r3
    87c4:	903ea81e 	bne	r18,zero,8268 <__alt_mem_Onchip_SRAM+0xf8008268>
    87c8:	d8802017 	ldw	r2,128(sp)
    87cc:	002b883a 	mov	r21,zero
    87d0:	1001f226 	beq	r2,zero,8f9c <___svfiprintf_internal_r+0x1248>
    87d4:	0025883a 	mov	r18,zero
    87d8:	0029883a 	mov	r20,zero
    87dc:	003ea306 	br	826c <__alt_mem_Onchip_SRAM+0xf800826c>
    87e0:	d8c01c17 	ldw	r3,112(sp)
    87e4:	d8801b17 	ldw	r2,108(sp)
    87e8:	d9001d87 	ldb	r4,118(sp)
    87ec:	20000b26 	beq	r4,zero,881c <___svfiprintf_internal_r+0xac8>
    87f0:	d9001d84 	addi	r4,sp,118
    87f4:	18c00044 	addi	r3,r3,1
    87f8:	10800044 	addi	r2,r2,1
    87fc:	41000015 	stw	r4,0(r8)
    8800:	01000044 	movi	r4,1
    8804:	41000115 	stw	r4,4(r8)
    8808:	d8c01c15 	stw	r3,112(sp)
    880c:	d8801b15 	stw	r2,108(sp)
    8810:	010001c4 	movi	r4,7
    8814:	2080f316 	blt	r4,r2,8be4 <___svfiprintf_internal_r+0xe90>
    8818:	42000204 	addi	r8,r8,8
    881c:	d9402117 	ldw	r5,132(sp)
    8820:	28000b26 	beq	r5,zero,8850 <___svfiprintf_internal_r+0xafc>
    8824:	d9001d04 	addi	r4,sp,116
    8828:	18c00084 	addi	r3,r3,2
    882c:	10800044 	addi	r2,r2,1
    8830:	41000015 	stw	r4,0(r8)
    8834:	01000084 	movi	r4,2
    8838:	41000115 	stw	r4,4(r8)
    883c:	d8c01c15 	stw	r3,112(sp)
    8840:	d8801b15 	stw	r2,108(sp)
    8844:	010001c4 	movi	r4,7
    8848:	2080ef16 	blt	r4,r2,8c08 <___svfiprintf_internal_r+0xeb4>
    884c:	42000204 	addi	r8,r8,8
    8850:	d9402217 	ldw	r5,136(sp)
    8854:	01002004 	movi	r4,128
    8858:	29008f26 	beq	r5,r4,8a98 <___svfiprintf_internal_r+0xd44>
    885c:	d9002017 	ldw	r4,128(sp)
    8860:	252fc83a 	sub	r23,r4,r20
    8864:	05c0310e 	bge	zero,r23,892c <___svfiprintf_internal_r+0xbd8>
    8868:	07000404 	movi	fp,16
    886c:	e5c17d0e 	bge	fp,r23,8e64 <___svfiprintf_internal_r+0x1110>
    8870:	01000074 	movhi	r4,1
    8874:	21017604 	addi	r4,r4,1496
    8878:	dc002015 	stw	r16,128(sp)
    887c:	dc402215 	stw	r17,136(sp)
    8880:	d9002115 	stw	r4,132(sp)
    8884:	b823883a 	mov	r17,r23
    8888:	054001c4 	movi	r21,7
    888c:	982f883a 	mov	r23,r19
    8890:	dc002717 	ldw	r16,156(sp)
    8894:	9027883a 	mov	r19,r18
    8898:	dc802317 	ldw	r18,140(sp)
    889c:	00000306 	br	88ac <___svfiprintf_internal_r+0xb58>
    88a0:	8c7ffc04 	addi	r17,r17,-16
    88a4:	42000204 	addi	r8,r8,8
    88a8:	e440110e 	bge	fp,r17,88f0 <___svfiprintf_internal_r+0xb9c>
    88ac:	18c00404 	addi	r3,r3,16
    88b0:	10800044 	addi	r2,r2,1
    88b4:	45800015 	stw	r22,0(r8)
    88b8:	47000115 	stw	fp,4(r8)
    88bc:	d8c01c15 	stw	r3,112(sp)
    88c0:	d8801b15 	stw	r2,108(sp)
    88c4:	a8bff60e 	bge	r21,r2,88a0 <__alt_mem_Onchip_SRAM+0xf80088a0>
    88c8:	d9801a04 	addi	r6,sp,104
    88cc:	900b883a 	mov	r5,r18
    88d0:	8009883a 	mov	r4,r16
    88d4:	0007b840 	call	7b84 <__ssprint_r>
    88d8:	10005e1e 	bne	r2,zero,8a54 <___svfiprintf_internal_r+0xd00>
    88dc:	8c7ffc04 	addi	r17,r17,-16
    88e0:	d8c01c17 	ldw	r3,112(sp)
    88e4:	d8801b17 	ldw	r2,108(sp)
    88e8:	d811883a 	mov	r8,sp
    88ec:	e47fef16 	blt	fp,r17,88ac <__alt_mem_Onchip_SRAM+0xf80088ac>
    88f0:	9825883a 	mov	r18,r19
    88f4:	dc002017 	ldw	r16,128(sp)
    88f8:	b827883a 	mov	r19,r23
    88fc:	882f883a 	mov	r23,r17
    8900:	dc402217 	ldw	r17,136(sp)
    8904:	d9402117 	ldw	r5,132(sp)
    8908:	1dc7883a 	add	r3,r3,r23
    890c:	10800044 	addi	r2,r2,1
    8910:	41400015 	stw	r5,0(r8)
    8914:	45c00115 	stw	r23,4(r8)
    8918:	d8c01c15 	stw	r3,112(sp)
    891c:	d8801b15 	stw	r2,108(sp)
    8920:	010001c4 	movi	r4,7
    8924:	2080a616 	blt	r4,r2,8bc0 <___svfiprintf_internal_r+0xe6c>
    8928:	42000204 	addi	r8,r8,8
    892c:	a0c7883a 	add	r3,r20,r3
    8930:	10800044 	addi	r2,r2,1
    8934:	44400015 	stw	r17,0(r8)
    8938:	45000115 	stw	r20,4(r8)
    893c:	d8c01c15 	stw	r3,112(sp)
    8940:	d8801b15 	stw	r2,108(sp)
    8944:	010001c4 	movi	r4,7
    8948:	20808816 	blt	r4,r2,8b6c <___svfiprintf_internal_r+0xe18>
    894c:	42000204 	addi	r8,r8,8
    8950:	8400010c 	andi	r16,r16,4
    8954:	80002c26 	beq	r16,zero,8a08 <___svfiprintf_internal_r+0xcb4>
    8958:	d8802517 	ldw	r2,148(sp)
    895c:	14a1c83a 	sub	r16,r2,r18
    8960:	0400290e 	bge	zero,r16,8a08 <___svfiprintf_internal_r+0xcb4>
    8964:	04400404 	movi	r17,16
    8968:	d8801b17 	ldw	r2,108(sp)
    896c:	8c01a70e 	bge	r17,r16,900c <___svfiprintf_internal_r+0x12b8>
    8970:	01400074 	movhi	r5,1
    8974:	29417a04 	addi	r5,r5,1512
    8978:	d9402815 	stw	r5,160(sp)
    897c:	050001c4 	movi	r20,7
    8980:	dd402717 	ldw	r21,156(sp)
    8984:	ddc02317 	ldw	r23,140(sp)
    8988:	00000306 	br	8998 <___svfiprintf_internal_r+0xc44>
    898c:	843ffc04 	addi	r16,r16,-16
    8990:	42000204 	addi	r8,r8,8
    8994:	8c00130e 	bge	r17,r16,89e4 <___svfiprintf_internal_r+0xc90>
    8998:	01000074 	movhi	r4,1
    899c:	18c00404 	addi	r3,r3,16
    89a0:	10800044 	addi	r2,r2,1
    89a4:	21017a04 	addi	r4,r4,1512
    89a8:	41000015 	stw	r4,0(r8)
    89ac:	44400115 	stw	r17,4(r8)
    89b0:	d8c01c15 	stw	r3,112(sp)
    89b4:	d8801b15 	stw	r2,108(sp)
    89b8:	a0bff40e 	bge	r20,r2,898c <__alt_mem_Onchip_SRAM+0xf800898c>
    89bc:	d9801a04 	addi	r6,sp,104
    89c0:	b80b883a 	mov	r5,r23
    89c4:	a809883a 	mov	r4,r21
    89c8:	0007b840 	call	7b84 <__ssprint_r>
    89cc:	1000211e 	bne	r2,zero,8a54 <___svfiprintf_internal_r+0xd00>
    89d0:	843ffc04 	addi	r16,r16,-16
    89d4:	d8c01c17 	ldw	r3,112(sp)
    89d8:	d8801b17 	ldw	r2,108(sp)
    89dc:	d811883a 	mov	r8,sp
    89e0:	8c3fed16 	blt	r17,r16,8998 <__alt_mem_Onchip_SRAM+0xf8008998>
    89e4:	d9402817 	ldw	r5,160(sp)
    89e8:	1c07883a 	add	r3,r3,r16
    89ec:	10800044 	addi	r2,r2,1
    89f0:	41400015 	stw	r5,0(r8)
    89f4:	44000115 	stw	r16,4(r8)
    89f8:	d8c01c15 	stw	r3,112(sp)
    89fc:	d8801b15 	stw	r2,108(sp)
    8a00:	010001c4 	movi	r4,7
    8a04:	2080b516 	blt	r4,r2,8cdc <___svfiprintf_internal_r+0xf88>
    8a08:	d8802517 	ldw	r2,148(sp)
    8a0c:	1480010e 	bge	r2,r18,8a14 <___svfiprintf_internal_r+0xcc0>
    8a10:	9005883a 	mov	r2,r18
    8a14:	d9002617 	ldw	r4,152(sp)
    8a18:	2089883a 	add	r4,r4,r2
    8a1c:	d9002615 	stw	r4,152(sp)
    8a20:	18005a1e 	bne	r3,zero,8b8c <___svfiprintf_internal_r+0xe38>
    8a24:	98800007 	ldb	r2,0(r19)
    8a28:	d8001b15 	stw	zero,108(sp)
    8a2c:	d811883a 	mov	r8,sp
    8a30:	103cec1e 	bne	r2,zero,7de4 <__alt_mem_Onchip_SRAM+0xf8007de4>
    8a34:	9825883a 	mov	r18,r19
    8a38:	003d0206 	br	7e44 <__alt_mem_Onchip_SRAM+0xf8007e44>
    8a3c:	d8801c17 	ldw	r2,112(sp)
    8a40:	10000426 	beq	r2,zero,8a54 <___svfiprintf_internal_r+0xd00>
    8a44:	d9402317 	ldw	r5,140(sp)
    8a48:	d9002717 	ldw	r4,156(sp)
    8a4c:	d9801a04 	addi	r6,sp,104
    8a50:	0007b840 	call	7b84 <__ssprint_r>
    8a54:	d9402317 	ldw	r5,140(sp)
    8a58:	d8802617 	ldw	r2,152(sp)
    8a5c:	28c0030b 	ldhu	r3,12(r5)
    8a60:	18c0100c 	andi	r3,r3,64
    8a64:	18015c1e 	bne	r3,zero,8fd8 <___svfiprintf_internal_r+0x1284>
    8a68:	dfc03717 	ldw	ra,220(sp)
    8a6c:	df003617 	ldw	fp,216(sp)
    8a70:	ddc03517 	ldw	r23,212(sp)
    8a74:	dd803417 	ldw	r22,208(sp)
    8a78:	dd403317 	ldw	r21,204(sp)
    8a7c:	dd003217 	ldw	r20,200(sp)
    8a80:	dcc03117 	ldw	r19,196(sp)
    8a84:	dc803017 	ldw	r18,192(sp)
    8a88:	dc402f17 	ldw	r17,188(sp)
    8a8c:	dc002e17 	ldw	r16,184(sp)
    8a90:	dec03804 	addi	sp,sp,224
    8a94:	f800283a 	ret
    8a98:	d9002517 	ldw	r4,148(sp)
    8a9c:	24afc83a 	sub	r23,r4,r18
    8aa0:	05ff6e0e 	bge	zero,r23,885c <__alt_mem_Onchip_SRAM+0xf800885c>
    8aa4:	07000404 	movi	fp,16
    8aa8:	e5c15c0e 	bge	fp,r23,901c <___svfiprintf_internal_r+0x12c8>
    8aac:	01000074 	movhi	r4,1
    8ab0:	21017604 	addi	r4,r4,1496
    8ab4:	dc002215 	stw	r16,136(sp)
    8ab8:	dc402815 	stw	r17,160(sp)
    8abc:	d9002115 	stw	r4,132(sp)
    8ac0:	b823883a 	mov	r17,r23
    8ac4:	054001c4 	movi	r21,7
    8ac8:	982f883a 	mov	r23,r19
    8acc:	dc002717 	ldw	r16,156(sp)
    8ad0:	9027883a 	mov	r19,r18
    8ad4:	dc802317 	ldw	r18,140(sp)
    8ad8:	00000306 	br	8ae8 <___svfiprintf_internal_r+0xd94>
    8adc:	8c7ffc04 	addi	r17,r17,-16
    8ae0:	42000204 	addi	r8,r8,8
    8ae4:	e440110e 	bge	fp,r17,8b2c <___svfiprintf_internal_r+0xdd8>
    8ae8:	18c00404 	addi	r3,r3,16
    8aec:	10800044 	addi	r2,r2,1
    8af0:	45800015 	stw	r22,0(r8)
    8af4:	47000115 	stw	fp,4(r8)
    8af8:	d8c01c15 	stw	r3,112(sp)
    8afc:	d8801b15 	stw	r2,108(sp)
    8b00:	a8bff60e 	bge	r21,r2,8adc <__alt_mem_Onchip_SRAM+0xf8008adc>
    8b04:	d9801a04 	addi	r6,sp,104
    8b08:	900b883a 	mov	r5,r18
    8b0c:	8009883a 	mov	r4,r16
    8b10:	0007b840 	call	7b84 <__ssprint_r>
    8b14:	103fcf1e 	bne	r2,zero,8a54 <__alt_mem_Onchip_SRAM+0xf8008a54>
    8b18:	8c7ffc04 	addi	r17,r17,-16
    8b1c:	d8c01c17 	ldw	r3,112(sp)
    8b20:	d8801b17 	ldw	r2,108(sp)
    8b24:	d811883a 	mov	r8,sp
    8b28:	e47fef16 	blt	fp,r17,8ae8 <__alt_mem_Onchip_SRAM+0xf8008ae8>
    8b2c:	9825883a 	mov	r18,r19
    8b30:	dc002217 	ldw	r16,136(sp)
    8b34:	b827883a 	mov	r19,r23
    8b38:	882f883a 	mov	r23,r17
    8b3c:	dc402817 	ldw	r17,160(sp)
    8b40:	d9402117 	ldw	r5,132(sp)
    8b44:	1dc7883a 	add	r3,r3,r23
    8b48:	10800044 	addi	r2,r2,1
    8b4c:	41400015 	stw	r5,0(r8)
    8b50:	45c00115 	stw	r23,4(r8)
    8b54:	d8c01c15 	stw	r3,112(sp)
    8b58:	d8801b15 	stw	r2,108(sp)
    8b5c:	010001c4 	movi	r4,7
    8b60:	2080b716 	blt	r4,r2,8e40 <___svfiprintf_internal_r+0x10ec>
    8b64:	42000204 	addi	r8,r8,8
    8b68:	003f3c06 	br	885c <__alt_mem_Onchip_SRAM+0xf800885c>
    8b6c:	d9402317 	ldw	r5,140(sp)
    8b70:	d9002717 	ldw	r4,156(sp)
    8b74:	d9801a04 	addi	r6,sp,104
    8b78:	0007b840 	call	7b84 <__ssprint_r>
    8b7c:	103fb51e 	bne	r2,zero,8a54 <__alt_mem_Onchip_SRAM+0xf8008a54>
    8b80:	d8c01c17 	ldw	r3,112(sp)
    8b84:	d811883a 	mov	r8,sp
    8b88:	003f7106 	br	8950 <__alt_mem_Onchip_SRAM+0xf8008950>
    8b8c:	d9402317 	ldw	r5,140(sp)
    8b90:	d9002717 	ldw	r4,156(sp)
    8b94:	d9801a04 	addi	r6,sp,104
    8b98:	0007b840 	call	7b84 <__ssprint_r>
    8b9c:	103fa126 	beq	r2,zero,8a24 <__alt_mem_Onchip_SRAM+0xf8008a24>
    8ba0:	003fac06 	br	8a54 <__alt_mem_Onchip_SRAM+0xf8008a54>
    8ba4:	d9402317 	ldw	r5,140(sp)
    8ba8:	d9002717 	ldw	r4,156(sp)
    8bac:	d9801a04 	addi	r6,sp,104
    8bb0:	0007b840 	call	7b84 <__ssprint_r>
    8bb4:	103fa71e 	bne	r2,zero,8a54 <__alt_mem_Onchip_SRAM+0xf8008a54>
    8bb8:	d811883a 	mov	r8,sp
    8bbc:	003c9e06 	br	7e38 <__alt_mem_Onchip_SRAM+0xf8007e38>
    8bc0:	d9402317 	ldw	r5,140(sp)
    8bc4:	d9002717 	ldw	r4,156(sp)
    8bc8:	d9801a04 	addi	r6,sp,104
    8bcc:	0007b840 	call	7b84 <__ssprint_r>
    8bd0:	103fa01e 	bne	r2,zero,8a54 <__alt_mem_Onchip_SRAM+0xf8008a54>
    8bd4:	d8c01c17 	ldw	r3,112(sp)
    8bd8:	d8801b17 	ldw	r2,108(sp)
    8bdc:	d811883a 	mov	r8,sp
    8be0:	003f5206 	br	892c <__alt_mem_Onchip_SRAM+0xf800892c>
    8be4:	d9402317 	ldw	r5,140(sp)
    8be8:	d9002717 	ldw	r4,156(sp)
    8bec:	d9801a04 	addi	r6,sp,104
    8bf0:	0007b840 	call	7b84 <__ssprint_r>
    8bf4:	103f971e 	bne	r2,zero,8a54 <__alt_mem_Onchip_SRAM+0xf8008a54>
    8bf8:	d8c01c17 	ldw	r3,112(sp)
    8bfc:	d8801b17 	ldw	r2,108(sp)
    8c00:	d811883a 	mov	r8,sp
    8c04:	003f0506 	br	881c <__alt_mem_Onchip_SRAM+0xf800881c>
    8c08:	d9402317 	ldw	r5,140(sp)
    8c0c:	d9002717 	ldw	r4,156(sp)
    8c10:	d9801a04 	addi	r6,sp,104
    8c14:	0007b840 	call	7b84 <__ssprint_r>
    8c18:	103f8e1e 	bne	r2,zero,8a54 <__alt_mem_Onchip_SRAM+0xf8008a54>
    8c1c:	d8c01c17 	ldw	r3,112(sp)
    8c20:	d8801b17 	ldw	r2,108(sp)
    8c24:	d811883a 	mov	r8,sp
    8c28:	003f0906 	br	8850 <__alt_mem_Onchip_SRAM+0xf8008850>
    8c2c:	d9402017 	ldw	r5,128(sp)
    8c30:	d8001d85 	stb	zero,118(sp)
    8c34:	28007716 	blt	r5,zero,8e14 <___svfiprintf_internal_r+0x10c0>
    8c38:	00ffdfc4 	movi	r3,-129
    8c3c:	9504b03a 	or	r2,r18,r20
    8c40:	80e0703a 	and	r16,r16,r3
    8c44:	103d3926 	beq	r2,zero,812c <__alt_mem_Onchip_SRAM+0xf800812c>
    8c48:	002b883a 	mov	r21,zero
    8c4c:	003d3c06 	br	8140 <__alt_mem_Onchip_SRAM+0xf8008140>
    8c50:	d9402317 	ldw	r5,140(sp)
    8c54:	d9002717 	ldw	r4,156(sp)
    8c58:	d9801a04 	addi	r6,sp,104
    8c5c:	0007b840 	call	7b84 <__ssprint_r>
    8c60:	103f7c1e 	bne	r2,zero,8a54 <__alt_mem_Onchip_SRAM+0xf8008a54>
    8c64:	d8c01c17 	ldw	r3,112(sp)
    8c68:	d8801b17 	ldw	r2,108(sp)
    8c6c:	d811883a 	mov	r8,sp
    8c70:	003edd06 	br	87e8 <__alt_mem_Onchip_SRAM+0xf80087e8>
    8c74:	8080100c 	andi	r2,r16,64
    8c78:	d8001d85 	stb	zero,118(sp)
    8c7c:	10008426 	beq	r2,zero,8e90 <___svfiprintf_internal_r+0x113c>
    8c80:	d9402417 	ldw	r5,144(sp)
    8c84:	d8c02017 	ldw	r3,128(sp)
    8c88:	0029883a 	mov	r20,zero
    8c8c:	28800104 	addi	r2,r5,4
    8c90:	2c80000b 	ldhu	r18,0(r5)
    8c94:	183eab0e 	bge	r3,zero,8744 <__alt_mem_Onchip_SRAM+0xf8008744>
    8c98:	d8802415 	stw	r2,144(sp)
    8c9c:	002b883a 	mov	r21,zero
    8ca0:	9504b03a 	or	r2,r18,r20
    8ca4:	103e171e 	bne	r2,zero,8504 <__alt_mem_Onchip_SRAM+0xf8008504>
    8ca8:	00800044 	movi	r2,1
    8cac:	10803fcc 	andi	r2,r2,255
    8cb0:	00c00044 	movi	r3,1
    8cb4:	10c05c26 	beq	r2,r3,8e28 <___svfiprintf_internal_r+0x10d4>
    8cb8:	00c00084 	movi	r3,2
    8cbc:	10fd1e26 	beq	r2,r3,8138 <__alt_mem_Onchip_SRAM+0xf8008138>
    8cc0:	003ec406 	br	87d4 <__alt_mem_Onchip_SRAM+0xf80087d4>
    8cc4:	d9401e17 	ldw	r5,120(sp)
    8cc8:	2c69c83a 	sub	r20,r5,r17
    8ccc:	003d4506 	br	81e4 <__alt_mem_Onchip_SRAM+0xf80081e4>
    8cd0:	d8802415 	stw	r2,144(sp)
    8cd4:	98c00007 	ldb	r3,0(r19)
    8cd8:	003c6a06 	br	7e84 <__alt_mem_Onchip_SRAM+0xf8007e84>
    8cdc:	d9402317 	ldw	r5,140(sp)
    8ce0:	d9002717 	ldw	r4,156(sp)
    8ce4:	d9801a04 	addi	r6,sp,104
    8ce8:	0007b840 	call	7b84 <__ssprint_r>
    8cec:	103f591e 	bne	r2,zero,8a54 <__alt_mem_Onchip_SRAM+0xf8008a54>
    8cf0:	d8c01c17 	ldw	r3,112(sp)
    8cf4:	003f4406 	br	8a08 <__alt_mem_Onchip_SRAM+0xf8008a08>
    8cf8:	01400074 	movhi	r5,1
    8cfc:	29411504 	addi	r5,r5,1108
    8d00:	d9402915 	stw	r5,164(sp)
    8d04:	003d0906 	br	812c <__alt_mem_Onchip_SRAM+0xf800812c>
    8d08:	d8c02417 	ldw	r3,144(sp)
    8d0c:	d9002617 	ldw	r4,152(sp)
    8d10:	d9402417 	ldw	r5,144(sp)
    8d14:	18800017 	ldw	r2,0(r3)
    8d18:	2007d7fa 	srai	r3,r4,31
    8d1c:	29400104 	addi	r5,r5,4
    8d20:	d9402415 	stw	r5,144(sp)
    8d24:	11000015 	stw	r4,0(r2)
    8d28:	10c00115 	stw	r3,4(r2)
    8d2c:	003c2b06 	br	7ddc <__alt_mem_Onchip_SRAM+0xf8007ddc>
    8d30:	d8c01d45 	stb	r3,117(sp)
    8d34:	d8c02017 	ldw	r3,128(sp)
    8d38:	00800c04 	movi	r2,48
    8d3c:	d8801d05 	stb	r2,116(sp)
    8d40:	d8001d85 	stb	zero,118(sp)
    8d44:	80800094 	ori	r2,r16,2
    8d48:	1800ac16 	blt	r3,zero,8ffc <___svfiprintf_internal_r+0x12a8>
    8d4c:	00bfdfc4 	movi	r2,-129
    8d50:	80a0703a 	and	r16,r16,r2
    8d54:	84000094 	ori	r16,r16,2
    8d58:	002b883a 	mov	r21,zero
    8d5c:	003cf806 	br	8140 <__alt_mem_Onchip_SRAM+0xf8008140>
    8d60:	98c00007 	ldb	r3,0(r19)
    8d64:	003c4706 	br	7e84 <__alt_mem_Onchip_SRAM+0xf8007e84>
    8d68:	d9402417 	ldw	r5,144(sp)
    8d6c:	2c800017 	ldw	r18,0(r5)
    8d70:	29400104 	addi	r5,r5,4
    8d74:	d9402415 	stw	r5,144(sp)
    8d78:	9029d7fa 	srai	r20,r18,31
    8d7c:	a005883a 	mov	r2,r20
    8d80:	003dd806 	br	84e4 <__alt_mem_Onchip_SRAM+0xf80084e4>
    8d84:	d9402417 	ldw	r5,144(sp)
    8d88:	0029883a 	mov	r20,zero
    8d8c:	2c800017 	ldw	r18,0(r5)
    8d90:	29400104 	addi	r5,r5,4
    8d94:	d9402415 	stw	r5,144(sp)
    8d98:	003cdb06 	br	8108 <__alt_mem_Onchip_SRAM+0xf8008108>
    8d9c:	8080100c 	andi	r2,r16,64
    8da0:	d8001d85 	stb	zero,118(sp)
    8da4:	10003326 	beq	r2,zero,8e74 <___svfiprintf_internal_r+0x1120>
    8da8:	d9002417 	ldw	r4,144(sp)
    8dac:	d9402017 	ldw	r5,128(sp)
    8db0:	0029883a 	mov	r20,zero
    8db4:	20800104 	addi	r2,r4,4
    8db8:	2480000b 	ldhu	r18,0(r4)
    8dbc:	283e7e0e 	bge	r5,zero,87b8 <__alt_mem_Onchip_SRAM+0xf80087b8>
    8dc0:	9506b03a 	or	r3,r18,r20
    8dc4:	d8802415 	stw	r2,144(sp)
    8dc8:	183d271e 	bne	r3,zero,8268 <__alt_mem_Onchip_SRAM+0xf8008268>
    8dcc:	002b883a 	mov	r21,zero
    8dd0:	0005883a 	mov	r2,zero
    8dd4:	003fb506 	br	8cac <__alt_mem_Onchip_SRAM+0xf8008cac>
    8dd8:	98c00043 	ldbu	r3,1(r19)
    8ddc:	8c400814 	ori	r17,r17,32
    8de0:	9cc00044 	addi	r19,r19,1
    8de4:	18c03fcc 	andi	r3,r3,255
    8de8:	18c0201c 	xori	r3,r3,128
    8dec:	18ffe004 	addi	r3,r3,-128
    8df0:	003c2406 	br	7e84 <__alt_mem_Onchip_SRAM+0xf8007e84>
    8df4:	d8c02415 	stw	r3,144(sp)
    8df8:	002b883a 	mov	r21,zero
    8dfc:	003fa806 	br	8ca0 <__alt_mem_Onchip_SRAM+0xf8008ca0>
    8e00:	01000074 	movhi	r4,1
    8e04:	21011504 	addi	r4,r4,1108
    8e08:	d9002915 	stw	r4,164(sp)
    8e0c:	d8c02415 	stw	r3,144(sp)
    8e10:	1021883a 	mov	r16,r2
    8e14:	9504b03a 	or	r2,r18,r20
    8e18:	103f8b1e 	bne	r2,zero,8c48 <__alt_mem_Onchip_SRAM+0xf8008c48>
    8e1c:	002b883a 	mov	r21,zero
    8e20:	00800084 	movi	r2,2
    8e24:	003fa106 	br	8cac <__alt_mem_Onchip_SRAM+0xf8008cac>
    8e28:	0025883a 	mov	r18,zero
    8e2c:	94800c04 	addi	r18,r18,48
    8e30:	dc8019c5 	stb	r18,103(sp)
    8e34:	dd002c17 	ldw	r20,176(sp)
    8e38:	dc4019c4 	addi	r17,sp,103
    8e3c:	003ce906 	br	81e4 <__alt_mem_Onchip_SRAM+0xf80081e4>
    8e40:	d9402317 	ldw	r5,140(sp)
    8e44:	d9002717 	ldw	r4,156(sp)
    8e48:	d9801a04 	addi	r6,sp,104
    8e4c:	0007b840 	call	7b84 <__ssprint_r>
    8e50:	103f001e 	bne	r2,zero,8a54 <__alt_mem_Onchip_SRAM+0xf8008a54>
    8e54:	d8c01c17 	ldw	r3,112(sp)
    8e58:	d8801b17 	ldw	r2,108(sp)
    8e5c:	d811883a 	mov	r8,sp
    8e60:	003e7e06 	br	885c <__alt_mem_Onchip_SRAM+0xf800885c>
    8e64:	01400074 	movhi	r5,1
    8e68:	29417604 	addi	r5,r5,1496
    8e6c:	d9402115 	stw	r5,132(sp)
    8e70:	003ea406 	br	8904 <__alt_mem_Onchip_SRAM+0xf8008904>
    8e74:	d8c02417 	ldw	r3,144(sp)
    8e78:	d9002017 	ldw	r4,128(sp)
    8e7c:	0029883a 	mov	r20,zero
    8e80:	18800104 	addi	r2,r3,4
    8e84:	1c800017 	ldw	r18,0(r3)
    8e88:	203e4b0e 	bge	r4,zero,87b8 <__alt_mem_Onchip_SRAM+0xf80087b8>
    8e8c:	003fcc06 	br	8dc0 <__alt_mem_Onchip_SRAM+0xf8008dc0>
    8e90:	d9002417 	ldw	r4,144(sp)
    8e94:	d9402017 	ldw	r5,128(sp)
    8e98:	0029883a 	mov	r20,zero
    8e9c:	20800104 	addi	r2,r4,4
    8ea0:	24800017 	ldw	r18,0(r4)
    8ea4:	283e270e 	bge	r5,zero,8744 <__alt_mem_Onchip_SRAM+0xf8008744>
    8ea8:	003f7b06 	br	8c98 <__alt_mem_Onchip_SRAM+0xf8008c98>
    8eac:	8400100c 	andi	r16,r16,64
    8eb0:	80003326 	beq	r16,zero,8f80 <___svfiprintf_internal_r+0x122c>
    8eb4:	d9402417 	ldw	r5,144(sp)
    8eb8:	d8c02617 	ldw	r3,152(sp)
    8ebc:	28800017 	ldw	r2,0(r5)
    8ec0:	29400104 	addi	r5,r5,4
    8ec4:	d9402415 	stw	r5,144(sp)
    8ec8:	10c0000d 	sth	r3,0(r2)
    8ecc:	003bc306 	br	7ddc <__alt_mem_Onchip_SRAM+0xf8007ddc>
    8ed0:	d9002417 	ldw	r4,144(sp)
    8ed4:	0029883a 	mov	r20,zero
    8ed8:	24800017 	ldw	r18,0(r4)
    8edc:	21000104 	addi	r4,r4,4
    8ee0:	d9002415 	stw	r4,144(sp)
    8ee4:	003c8806 	br	8108 <__alt_mem_Onchip_SRAM+0xf8008108>
    8ee8:	d8c02417 	ldw	r3,144(sp)
    8eec:	1c800017 	ldw	r18,0(r3)
    8ef0:	18c00104 	addi	r3,r3,4
    8ef4:	d8c02415 	stw	r3,144(sp)
    8ef8:	9029d7fa 	srai	r20,r18,31
    8efc:	a005883a 	mov	r2,r20
    8f00:	003d7806 	br	84e4 <__alt_mem_Onchip_SRAM+0xf80084e4>
    8f04:	8809883a 	mov	r4,r17
    8f08:	da002d15 	stw	r8,180(sp)
    8f0c:	0000e400 	call	e40 <strlen>
    8f10:	1029883a 	mov	r20,r2
    8f14:	dd401d83 	ldbu	r21,118(sp)
    8f18:	ddc02415 	stw	r23,144(sp)
    8f1c:	d8002015 	stw	zero,128(sp)
    8f20:	da002d17 	ldw	r8,180(sp)
    8f24:	003caf06 	br	81e4 <__alt_mem_Onchip_SRAM+0xf80081e4>
    8f28:	013fffc4 	movi	r4,-1
    8f2c:	003df206 	br	86f8 <__alt_mem_Onchip_SRAM+0xf80086f8>
    8f30:	dd002017 	ldw	r20,128(sp)
    8f34:	00800184 	movi	r2,6
    8f38:	1500012e 	bgeu	r2,r20,8f40 <___svfiprintf_internal_r+0x11ec>
    8f3c:	1029883a 	mov	r20,r2
    8f40:	a025883a 	mov	r18,r20
    8f44:	a0004116 	blt	r20,zero,904c <___svfiprintf_internal_r+0x12f8>
    8f48:	04400074 	movhi	r17,1
    8f4c:	ddc02415 	stw	r23,144(sp)
    8f50:	8c411a04 	addi	r17,r17,1128
    8f54:	003ce806 	br	82f8 <__alt_mem_Onchip_SRAM+0xf80082f8>
    8f58:	04001004 	movi	r16,64
    8f5c:	800b883a 	mov	r5,r16
    8f60:	00055cc0 	call	55cc <_malloc_r>
    8f64:	d8c02317 	ldw	r3,140(sp)
    8f68:	18800015 	stw	r2,0(r3)
    8f6c:	18800415 	stw	r2,16(r3)
    8f70:	10004d26 	beq	r2,zero,90a8 <___svfiprintf_internal_r+0x1354>
    8f74:	d9402317 	ldw	r5,140(sp)
    8f78:	2c000515 	stw	r16,20(r5)
    8f7c:	003b8906 	br	7da4 <__alt_mem_Onchip_SRAM+0xf8007da4>
    8f80:	d9002417 	ldw	r4,144(sp)
    8f84:	d9402617 	ldw	r5,152(sp)
    8f88:	20800017 	ldw	r2,0(r4)
    8f8c:	21000104 	addi	r4,r4,4
    8f90:	d9002415 	stw	r4,144(sp)
    8f94:	11400015 	stw	r5,0(r2)
    8f98:	003b9006 	br	7ddc <__alt_mem_Onchip_SRAM+0xf8007ddc>
    8f9c:	8080004c 	andi	r2,r16,1
    8fa0:	002b883a 	mov	r21,zero
    8fa4:	10000526 	beq	r2,zero,8fbc <___svfiprintf_internal_r+0x1268>
    8fa8:	00800c04 	movi	r2,48
    8fac:	d88019c5 	stb	r2,103(sp)
    8fb0:	dd002c17 	ldw	r20,176(sp)
    8fb4:	dc4019c4 	addi	r17,sp,103
    8fb8:	003c8a06 	br	81e4 <__alt_mem_Onchip_SRAM+0xf80081e4>
    8fbc:	0029883a 	mov	r20,zero
    8fc0:	dc401a04 	addi	r17,sp,104
    8fc4:	003c8706 	br	81e4 <__alt_mem_Onchip_SRAM+0xf80081e4>
    8fc8:	01400074 	movhi	r5,1
    8fcc:	29417a04 	addi	r5,r5,1512
    8fd0:	d9402815 	stw	r5,160(sp)
    8fd4:	003cff06 	br	83d4 <__alt_mem_Onchip_SRAM+0xf80083d4>
    8fd8:	00bfffc4 	movi	r2,-1
    8fdc:	003ea206 	br	8a68 <__alt_mem_Onchip_SRAM+0xf8008a68>
    8fe0:	00800044 	movi	r2,1
    8fe4:	10803fcc 	andi	r2,r2,255
    8fe8:	00c00044 	movi	r3,1
    8fec:	10fd4526 	beq	r2,r3,8504 <__alt_mem_Onchip_SRAM+0xf8008504>
    8ff0:	00c00084 	movi	r3,2
    8ff4:	10fc5226 	beq	r2,r3,8140 <__alt_mem_Onchip_SRAM+0xf8008140>
    8ff8:	003c9c06 	br	826c <__alt_mem_Onchip_SRAM+0xf800826c>
    8ffc:	1021883a 	mov	r16,r2
    9000:	002b883a 	mov	r21,zero
    9004:	00800084 	movi	r2,2
    9008:	003ff606 	br	8fe4 <__alt_mem_Onchip_SRAM+0xf8008fe4>
    900c:	01000074 	movhi	r4,1
    9010:	21017a04 	addi	r4,r4,1512
    9014:	d9002815 	stw	r4,160(sp)
    9018:	003e7206 	br	89e4 <__alt_mem_Onchip_SRAM+0xf80089e4>
    901c:	01400074 	movhi	r5,1
    9020:	29417604 	addi	r5,r5,1496
    9024:	d9402115 	stw	r5,132(sp)
    9028:	003ec506 	br	8b40 <__alt_mem_Onchip_SRAM+0xf8008b40>
    902c:	e027883a 	mov	r19,fp
    9030:	d8002015 	stw	zero,128(sp)
    9034:	003b9406 	br	7e88 <__alt_mem_Onchip_SRAM+0xf8007e88>
    9038:	dd002017 	ldw	r20,128(sp)
    903c:	dd401d83 	ldbu	r21,118(sp)
    9040:	ddc02415 	stw	r23,144(sp)
    9044:	d8002015 	stw	zero,128(sp)
    9048:	003c6606 	br	81e4 <__alt_mem_Onchip_SRAM+0xf80081e4>
    904c:	0025883a 	mov	r18,zero
    9050:	003fbd06 	br	8f48 <__alt_mem_Onchip_SRAM+0xf8008f48>
    9054:	d9402417 	ldw	r5,144(sp)
    9058:	d8c02417 	ldw	r3,144(sp)
    905c:	29400017 	ldw	r5,0(r5)
    9060:	19000104 	addi	r4,r3,4
    9064:	d9002415 	stw	r4,144(sp)
    9068:	d9402015 	stw	r5,128(sp)
    906c:	98c00043 	ldbu	r3,1(r19)
    9070:	e027883a 	mov	r19,fp
    9074:	283f5b0e 	bge	r5,zero,8de4 <__alt_mem_Onchip_SRAM+0xf8008de4>
    9078:	18c03fcc 	andi	r3,r3,255
    907c:	013fffc4 	movi	r4,-1
    9080:	18c0201c 	xori	r3,r3,128
    9084:	d9002015 	stw	r4,128(sp)
    9088:	18ffe004 	addi	r3,r3,-128
    908c:	003b7d06 	br	7e84 <__alt_mem_Onchip_SRAM+0xf8007e84>
    9090:	dd401d85 	stb	r21,118(sp)
    9094:	003cf306 	br	8464 <__alt_mem_Onchip_SRAM+0xf8008464>
    9098:	dd401d85 	stb	r21,118(sp)
    909c:	003d4e06 	br	85d8 <__alt_mem_Onchip_SRAM+0xf80085d8>
    90a0:	dd401d85 	stb	r21,118(sp)
    90a4:	003c0e06 	br	80e0 <__alt_mem_Onchip_SRAM+0xf80080e0>
    90a8:	d9002717 	ldw	r4,156(sp)
    90ac:	00800304 	movi	r2,12
    90b0:	20800015 	stw	r2,0(r4)
    90b4:	00bfffc4 	movi	r2,-1
    90b8:	003e6b06 	br	8a68 <__alt_mem_Onchip_SRAM+0xf8008a68>
    90bc:	dd401d85 	stb	r21,118(sp)
    90c0:	003d0006 	br	84c4 <__alt_mem_Onchip_SRAM+0xf80084c4>
    90c4:	dd401d85 	stb	r21,118(sp)
    90c8:	003d7106 	br	8690 <__alt_mem_Onchip_SRAM+0xf8008690>
    90cc:	dd401d85 	stb	r21,118(sp)
    90d0:	003c5706 	br	8230 <__alt_mem_Onchip_SRAM+0xf8008230>
    90d4:	dd401d85 	stb	r21,118(sp)
    90d8:	003c2e06 	br	8194 <__alt_mem_Onchip_SRAM+0xf8008194>
    90dc:	dd401d85 	stb	r21,118(sp)
    90e0:	003d8c06 	br	8714 <__alt_mem_Onchip_SRAM+0xf8008714>
    90e4:	dd401d85 	stb	r21,118(sp)
    90e8:	003da706 	br	8788 <__alt_mem_Onchip_SRAM+0xf8008788>
    90ec:	dd401d85 	stb	r21,118(sp)
    90f0:	003cc806 	br	8414 <__alt_mem_Onchip_SRAM+0xf8008414>

000090f4 <_write_r>:
    90f4:	defffd04 	addi	sp,sp,-12
    90f8:	2805883a 	mov	r2,r5
    90fc:	dc000015 	stw	r16,0(sp)
    9100:	04000074 	movhi	r16,1
    9104:	dc400115 	stw	r17,4(sp)
    9108:	300b883a 	mov	r5,r6
    910c:	840f3904 	addi	r16,r16,15588
    9110:	2023883a 	mov	r17,r4
    9114:	380d883a 	mov	r6,r7
    9118:	1009883a 	mov	r4,r2
    911c:	dfc00215 	stw	ra,8(sp)
    9120:	80000015 	stw	zero,0(r16)
    9124:	000e01c0 	call	e01c <write>
    9128:	00ffffc4 	movi	r3,-1
    912c:	10c00526 	beq	r2,r3,9144 <_write_r+0x50>
    9130:	dfc00217 	ldw	ra,8(sp)
    9134:	dc400117 	ldw	r17,4(sp)
    9138:	dc000017 	ldw	r16,0(sp)
    913c:	dec00304 	addi	sp,sp,12
    9140:	f800283a 	ret
    9144:	80c00017 	ldw	r3,0(r16)
    9148:	183ff926 	beq	r3,zero,9130 <__alt_mem_Onchip_SRAM+0xf8009130>
    914c:	88c00015 	stw	r3,0(r17)
    9150:	003ff706 	br	9130 <__alt_mem_Onchip_SRAM+0xf8009130>

00009154 <__swsetup_r>:
    9154:	00800074 	movhi	r2,1
    9158:	defffd04 	addi	sp,sp,-12
    915c:	10885504 	addi	r2,r2,8532
    9160:	dc400115 	stw	r17,4(sp)
    9164:	2023883a 	mov	r17,r4
    9168:	11000017 	ldw	r4,0(r2)
    916c:	dc000015 	stw	r16,0(sp)
    9170:	dfc00215 	stw	ra,8(sp)
    9174:	2821883a 	mov	r16,r5
    9178:	20000226 	beq	r4,zero,9184 <__swsetup_r+0x30>
    917c:	20800e17 	ldw	r2,56(r4)
    9180:	10003126 	beq	r2,zero,9248 <__swsetup_r+0xf4>
    9184:	8080030b 	ldhu	r2,12(r16)
    9188:	10c0020c 	andi	r3,r2,8
    918c:	1009883a 	mov	r4,r2
    9190:	18000f26 	beq	r3,zero,91d0 <__swsetup_r+0x7c>
    9194:	80c00417 	ldw	r3,16(r16)
    9198:	18001526 	beq	r3,zero,91f0 <__swsetup_r+0x9c>
    919c:	1100004c 	andi	r4,r2,1
    91a0:	20001c1e 	bne	r4,zero,9214 <__swsetup_r+0xc0>
    91a4:	1080008c 	andi	r2,r2,2
    91a8:	1000291e 	bne	r2,zero,9250 <__swsetup_r+0xfc>
    91ac:	80800517 	ldw	r2,20(r16)
    91b0:	80800215 	stw	r2,8(r16)
    91b4:	18001c26 	beq	r3,zero,9228 <__swsetup_r+0xd4>
    91b8:	0005883a 	mov	r2,zero
    91bc:	dfc00217 	ldw	ra,8(sp)
    91c0:	dc400117 	ldw	r17,4(sp)
    91c4:	dc000017 	ldw	r16,0(sp)
    91c8:	dec00304 	addi	sp,sp,12
    91cc:	f800283a 	ret
    91d0:	2080040c 	andi	r2,r4,16
    91d4:	10002e26 	beq	r2,zero,9290 <__swsetup_r+0x13c>
    91d8:	2080010c 	andi	r2,r4,4
    91dc:	10001e1e 	bne	r2,zero,9258 <__swsetup_r+0x104>
    91e0:	80c00417 	ldw	r3,16(r16)
    91e4:	20800214 	ori	r2,r4,8
    91e8:	8080030d 	sth	r2,12(r16)
    91ec:	183feb1e 	bne	r3,zero,919c <__alt_mem_Onchip_SRAM+0xf800919c>
    91f0:	1100a00c 	andi	r4,r2,640
    91f4:	01408004 	movi	r5,512
    91f8:	217fe826 	beq	r4,r5,919c <__alt_mem_Onchip_SRAM+0xf800919c>
    91fc:	800b883a 	mov	r5,r16
    9200:	8809883a 	mov	r4,r17
    9204:	0009c180 	call	9c18 <__smakebuf_r>
    9208:	8080030b 	ldhu	r2,12(r16)
    920c:	80c00417 	ldw	r3,16(r16)
    9210:	003fe206 	br	919c <__alt_mem_Onchip_SRAM+0xf800919c>
    9214:	80800517 	ldw	r2,20(r16)
    9218:	80000215 	stw	zero,8(r16)
    921c:	0085c83a 	sub	r2,zero,r2
    9220:	80800615 	stw	r2,24(r16)
    9224:	183fe41e 	bne	r3,zero,91b8 <__alt_mem_Onchip_SRAM+0xf80091b8>
    9228:	80c0030b 	ldhu	r3,12(r16)
    922c:	0005883a 	mov	r2,zero
    9230:	1900200c 	andi	r4,r3,128
    9234:	203fe126 	beq	r4,zero,91bc <__alt_mem_Onchip_SRAM+0xf80091bc>
    9238:	18c01014 	ori	r3,r3,64
    923c:	80c0030d 	sth	r3,12(r16)
    9240:	00bfffc4 	movi	r2,-1
    9244:	003fdd06 	br	91bc <__alt_mem_Onchip_SRAM+0xf80091bc>
    9248:	0004df40 	call	4df4 <__sinit>
    924c:	003fcd06 	br	9184 <__alt_mem_Onchip_SRAM+0xf8009184>
    9250:	0005883a 	mov	r2,zero
    9254:	003fd606 	br	91b0 <__alt_mem_Onchip_SRAM+0xf80091b0>
    9258:	81400c17 	ldw	r5,48(r16)
    925c:	28000626 	beq	r5,zero,9278 <__swsetup_r+0x124>
    9260:	80801004 	addi	r2,r16,64
    9264:	28800326 	beq	r5,r2,9274 <__swsetup_r+0x120>
    9268:	8809883a 	mov	r4,r17
    926c:	00098a80 	call	98a8 <_free_r>
    9270:	8100030b 	ldhu	r4,12(r16)
    9274:	80000c15 	stw	zero,48(r16)
    9278:	80c00417 	ldw	r3,16(r16)
    927c:	00bff6c4 	movi	r2,-37
    9280:	1108703a 	and	r4,r2,r4
    9284:	80000115 	stw	zero,4(r16)
    9288:	80c00015 	stw	r3,0(r16)
    928c:	003fd506 	br	91e4 <__alt_mem_Onchip_SRAM+0xf80091e4>
    9290:	00800244 	movi	r2,9
    9294:	88800015 	stw	r2,0(r17)
    9298:	20801014 	ori	r2,r4,64
    929c:	8080030d 	sth	r2,12(r16)
    92a0:	00bfffc4 	movi	r2,-1
    92a4:	003fc506 	br	91bc <__alt_mem_Onchip_SRAM+0xf80091bc>

000092a8 <_close_r>:
    92a8:	defffd04 	addi	sp,sp,-12
    92ac:	dc000015 	stw	r16,0(sp)
    92b0:	04000074 	movhi	r16,1
    92b4:	dc400115 	stw	r17,4(sp)
    92b8:	840f3904 	addi	r16,r16,15588
    92bc:	2023883a 	mov	r17,r4
    92c0:	2809883a 	mov	r4,r5
    92c4:	dfc00215 	stw	ra,8(sp)
    92c8:	80000015 	stw	zero,0(r16)
    92cc:	000d42c0 	call	d42c <close>
    92d0:	00ffffc4 	movi	r3,-1
    92d4:	10c00526 	beq	r2,r3,92ec <_close_r+0x44>
    92d8:	dfc00217 	ldw	ra,8(sp)
    92dc:	dc400117 	ldw	r17,4(sp)
    92e0:	dc000017 	ldw	r16,0(sp)
    92e4:	dec00304 	addi	sp,sp,12
    92e8:	f800283a 	ret
    92ec:	80c00017 	ldw	r3,0(r16)
    92f0:	183ff926 	beq	r3,zero,92d8 <__alt_mem_Onchip_SRAM+0xf80092d8>
    92f4:	88c00015 	stw	r3,0(r17)
    92f8:	003ff706 	br	92d8 <__alt_mem_Onchip_SRAM+0xf80092d8>

000092fc <_calloc_r>:
    92fc:	defffe04 	addi	sp,sp,-8
    9300:	2805883a 	mov	r2,r5
    9304:	dc000015 	stw	r16,0(sp)
    9308:	300b883a 	mov	r5,r6
    930c:	2021883a 	mov	r16,r4
    9310:	1009883a 	mov	r4,r2
    9314:	dfc00115 	stw	ra,4(sp)
    9318:	0000a0c0 	call	a0c <__mulsi3>
    931c:	100b883a 	mov	r5,r2
    9320:	8009883a 	mov	r4,r16
    9324:	00055cc0 	call	55cc <_malloc_r>
    9328:	10002926 	beq	r2,zero,93d0 <_calloc_r+0xd4>
    932c:	11bfff17 	ldw	r6,-4(r2)
    9330:	1021883a 	mov	r16,r2
    9334:	00bfff04 	movi	r2,-4
    9338:	308c703a 	and	r6,r6,r2
    933c:	00c00904 	movi	r3,36
    9340:	308d883a 	add	r6,r6,r2
    9344:	19801636 	bltu	r3,r6,93a0 <_calloc_r+0xa4>
    9348:	008004c4 	movi	r2,19
    934c:	11800b2e 	bgeu	r2,r6,937c <_calloc_r+0x80>
    9350:	80000015 	stw	zero,0(r16)
    9354:	80000115 	stw	zero,4(r16)
    9358:	008006c4 	movi	r2,27
    935c:	11801a2e 	bgeu	r2,r6,93c8 <_calloc_r+0xcc>
    9360:	80000215 	stw	zero,8(r16)
    9364:	80000315 	stw	zero,12(r16)
    9368:	30c0151e 	bne	r6,r3,93c0 <_calloc_r+0xc4>
    936c:	80000415 	stw	zero,16(r16)
    9370:	80800604 	addi	r2,r16,24
    9374:	80000515 	stw	zero,20(r16)
    9378:	00000106 	br	9380 <_calloc_r+0x84>
    937c:	8005883a 	mov	r2,r16
    9380:	10000015 	stw	zero,0(r2)
    9384:	10000115 	stw	zero,4(r2)
    9388:	10000215 	stw	zero,8(r2)
    938c:	8005883a 	mov	r2,r16
    9390:	dfc00117 	ldw	ra,4(sp)
    9394:	dc000017 	ldw	r16,0(sp)
    9398:	dec00204 	addi	sp,sp,8
    939c:	f800283a 	ret
    93a0:	000b883a 	mov	r5,zero
    93a4:	8009883a 	mov	r4,r16
    93a8:	00061600 	call	6160 <memset>
    93ac:	8005883a 	mov	r2,r16
    93b0:	dfc00117 	ldw	ra,4(sp)
    93b4:	dc000017 	ldw	r16,0(sp)
    93b8:	dec00204 	addi	sp,sp,8
    93bc:	f800283a 	ret
    93c0:	80800404 	addi	r2,r16,16
    93c4:	003fee06 	br	9380 <__alt_mem_Onchip_SRAM+0xf8009380>
    93c8:	80800204 	addi	r2,r16,8
    93cc:	003fec06 	br	9380 <__alt_mem_Onchip_SRAM+0xf8009380>
    93d0:	0005883a 	mov	r2,zero
    93d4:	003fee06 	br	9390 <__alt_mem_Onchip_SRAM+0xf8009390>

000093d8 <_fclose_r>:
    93d8:	28003926 	beq	r5,zero,94c0 <_fclose_r+0xe8>
    93dc:	defffc04 	addi	sp,sp,-16
    93e0:	dc400115 	stw	r17,4(sp)
    93e4:	dc000015 	stw	r16,0(sp)
    93e8:	dfc00315 	stw	ra,12(sp)
    93ec:	dc800215 	stw	r18,8(sp)
    93f0:	2023883a 	mov	r17,r4
    93f4:	2821883a 	mov	r16,r5
    93f8:	20000226 	beq	r4,zero,9404 <_fclose_r+0x2c>
    93fc:	20800e17 	ldw	r2,56(r4)
    9400:	10002726 	beq	r2,zero,94a0 <_fclose_r+0xc8>
    9404:	8080030f 	ldh	r2,12(r16)
    9408:	1000071e 	bne	r2,zero,9428 <_fclose_r+0x50>
    940c:	0005883a 	mov	r2,zero
    9410:	dfc00317 	ldw	ra,12(sp)
    9414:	dc800217 	ldw	r18,8(sp)
    9418:	dc400117 	ldw	r17,4(sp)
    941c:	dc000017 	ldw	r16,0(sp)
    9420:	dec00404 	addi	sp,sp,16
    9424:	f800283a 	ret
    9428:	800b883a 	mov	r5,r16
    942c:	8809883a 	mov	r4,r17
    9430:	00094dc0 	call	94dc <__sflush_r>
    9434:	1025883a 	mov	r18,r2
    9438:	80800b17 	ldw	r2,44(r16)
    943c:	10000426 	beq	r2,zero,9450 <_fclose_r+0x78>
    9440:	81400717 	ldw	r5,28(r16)
    9444:	8809883a 	mov	r4,r17
    9448:	103ee83a 	callr	r2
    944c:	10001616 	blt	r2,zero,94a8 <_fclose_r+0xd0>
    9450:	8080030b 	ldhu	r2,12(r16)
    9454:	1080200c 	andi	r2,r2,128
    9458:	1000151e 	bne	r2,zero,94b0 <_fclose_r+0xd8>
    945c:	81400c17 	ldw	r5,48(r16)
    9460:	28000526 	beq	r5,zero,9478 <_fclose_r+0xa0>
    9464:	80801004 	addi	r2,r16,64
    9468:	28800226 	beq	r5,r2,9474 <_fclose_r+0x9c>
    946c:	8809883a 	mov	r4,r17
    9470:	00098a80 	call	98a8 <_free_r>
    9474:	80000c15 	stw	zero,48(r16)
    9478:	81401117 	ldw	r5,68(r16)
    947c:	28000326 	beq	r5,zero,948c <_fclose_r+0xb4>
    9480:	8809883a 	mov	r4,r17
    9484:	00098a80 	call	98a8 <_free_r>
    9488:	80001115 	stw	zero,68(r16)
    948c:	0004e040 	call	4e04 <__sfp_lock_acquire>
    9490:	8000030d 	sth	zero,12(r16)
    9494:	0004e080 	call	4e08 <__sfp_lock_release>
    9498:	9005883a 	mov	r2,r18
    949c:	003fdc06 	br	9410 <__alt_mem_Onchip_SRAM+0xf8009410>
    94a0:	0004df40 	call	4df4 <__sinit>
    94a4:	003fd706 	br	9404 <__alt_mem_Onchip_SRAM+0xf8009404>
    94a8:	04bfffc4 	movi	r18,-1
    94ac:	003fe806 	br	9450 <__alt_mem_Onchip_SRAM+0xf8009450>
    94b0:	81400417 	ldw	r5,16(r16)
    94b4:	8809883a 	mov	r4,r17
    94b8:	00098a80 	call	98a8 <_free_r>
    94bc:	003fe706 	br	945c <__alt_mem_Onchip_SRAM+0xf800945c>
    94c0:	0005883a 	mov	r2,zero
    94c4:	f800283a 	ret

000094c8 <fclose>:
    94c8:	00800074 	movhi	r2,1
    94cc:	10885504 	addi	r2,r2,8532
    94d0:	200b883a 	mov	r5,r4
    94d4:	11000017 	ldw	r4,0(r2)
    94d8:	00093d81 	jmpi	93d8 <_fclose_r>

000094dc <__sflush_r>:
    94dc:	2880030b 	ldhu	r2,12(r5)
    94e0:	defffb04 	addi	sp,sp,-20
    94e4:	dcc00315 	stw	r19,12(sp)
    94e8:	dc400115 	stw	r17,4(sp)
    94ec:	dfc00415 	stw	ra,16(sp)
    94f0:	dc800215 	stw	r18,8(sp)
    94f4:	dc000015 	stw	r16,0(sp)
    94f8:	10c0020c 	andi	r3,r2,8
    94fc:	2823883a 	mov	r17,r5
    9500:	2027883a 	mov	r19,r4
    9504:	1800311e 	bne	r3,zero,95cc <__sflush_r+0xf0>
    9508:	28c00117 	ldw	r3,4(r5)
    950c:	10820014 	ori	r2,r2,2048
    9510:	2880030d 	sth	r2,12(r5)
    9514:	00c04b0e 	bge	zero,r3,9644 <__sflush_r+0x168>
    9518:	8a000a17 	ldw	r8,40(r17)
    951c:	40002326 	beq	r8,zero,95ac <__sflush_r+0xd0>
    9520:	9c000017 	ldw	r16,0(r19)
    9524:	10c4000c 	andi	r3,r2,4096
    9528:	98000015 	stw	zero,0(r19)
    952c:	18004826 	beq	r3,zero,9650 <__sflush_r+0x174>
    9530:	89801417 	ldw	r6,80(r17)
    9534:	10c0010c 	andi	r3,r2,4
    9538:	18000626 	beq	r3,zero,9554 <__sflush_r+0x78>
    953c:	88c00117 	ldw	r3,4(r17)
    9540:	88800c17 	ldw	r2,48(r17)
    9544:	30cdc83a 	sub	r6,r6,r3
    9548:	10000226 	beq	r2,zero,9554 <__sflush_r+0x78>
    954c:	88800f17 	ldw	r2,60(r17)
    9550:	308dc83a 	sub	r6,r6,r2
    9554:	89400717 	ldw	r5,28(r17)
    9558:	000f883a 	mov	r7,zero
    955c:	9809883a 	mov	r4,r19
    9560:	403ee83a 	callr	r8
    9564:	00ffffc4 	movi	r3,-1
    9568:	10c04426 	beq	r2,r3,967c <__sflush_r+0x1a0>
    956c:	88c0030b 	ldhu	r3,12(r17)
    9570:	89000417 	ldw	r4,16(r17)
    9574:	88000115 	stw	zero,4(r17)
    9578:	197dffcc 	andi	r5,r3,63487
    957c:	8940030d 	sth	r5,12(r17)
    9580:	89000015 	stw	r4,0(r17)
    9584:	18c4000c 	andi	r3,r3,4096
    9588:	18002c1e 	bne	r3,zero,963c <__sflush_r+0x160>
    958c:	89400c17 	ldw	r5,48(r17)
    9590:	9c000015 	stw	r16,0(r19)
    9594:	28000526 	beq	r5,zero,95ac <__sflush_r+0xd0>
    9598:	88801004 	addi	r2,r17,64
    959c:	28800226 	beq	r5,r2,95a8 <__sflush_r+0xcc>
    95a0:	9809883a 	mov	r4,r19
    95a4:	00098a80 	call	98a8 <_free_r>
    95a8:	88000c15 	stw	zero,48(r17)
    95ac:	0005883a 	mov	r2,zero
    95b0:	dfc00417 	ldw	ra,16(sp)
    95b4:	dcc00317 	ldw	r19,12(sp)
    95b8:	dc800217 	ldw	r18,8(sp)
    95bc:	dc400117 	ldw	r17,4(sp)
    95c0:	dc000017 	ldw	r16,0(sp)
    95c4:	dec00504 	addi	sp,sp,20
    95c8:	f800283a 	ret
    95cc:	2c800417 	ldw	r18,16(r5)
    95d0:	903ff626 	beq	r18,zero,95ac <__alt_mem_Onchip_SRAM+0xf80095ac>
    95d4:	2c000017 	ldw	r16,0(r5)
    95d8:	108000cc 	andi	r2,r2,3
    95dc:	2c800015 	stw	r18,0(r5)
    95e0:	84a1c83a 	sub	r16,r16,r18
    95e4:	1000131e 	bne	r2,zero,9634 <__sflush_r+0x158>
    95e8:	28800517 	ldw	r2,20(r5)
    95ec:	88800215 	stw	r2,8(r17)
    95f0:	04000316 	blt	zero,r16,9600 <__sflush_r+0x124>
    95f4:	003fed06 	br	95ac <__alt_mem_Onchip_SRAM+0xf80095ac>
    95f8:	90a5883a 	add	r18,r18,r2
    95fc:	043feb0e 	bge	zero,r16,95ac <__alt_mem_Onchip_SRAM+0xf80095ac>
    9600:	88800917 	ldw	r2,36(r17)
    9604:	89400717 	ldw	r5,28(r17)
    9608:	800f883a 	mov	r7,r16
    960c:	900d883a 	mov	r6,r18
    9610:	9809883a 	mov	r4,r19
    9614:	103ee83a 	callr	r2
    9618:	80a1c83a 	sub	r16,r16,r2
    961c:	00bff616 	blt	zero,r2,95f8 <__alt_mem_Onchip_SRAM+0xf80095f8>
    9620:	88c0030b 	ldhu	r3,12(r17)
    9624:	00bfffc4 	movi	r2,-1
    9628:	18c01014 	ori	r3,r3,64
    962c:	88c0030d 	sth	r3,12(r17)
    9630:	003fdf06 	br	95b0 <__alt_mem_Onchip_SRAM+0xf80095b0>
    9634:	0005883a 	mov	r2,zero
    9638:	003fec06 	br	95ec <__alt_mem_Onchip_SRAM+0xf80095ec>
    963c:	88801415 	stw	r2,80(r17)
    9640:	003fd206 	br	958c <__alt_mem_Onchip_SRAM+0xf800958c>
    9644:	28c00f17 	ldw	r3,60(r5)
    9648:	00ffb316 	blt	zero,r3,9518 <__alt_mem_Onchip_SRAM+0xf8009518>
    964c:	003fd706 	br	95ac <__alt_mem_Onchip_SRAM+0xf80095ac>
    9650:	89400717 	ldw	r5,28(r17)
    9654:	000d883a 	mov	r6,zero
    9658:	01c00044 	movi	r7,1
    965c:	9809883a 	mov	r4,r19
    9660:	403ee83a 	callr	r8
    9664:	100d883a 	mov	r6,r2
    9668:	00bfffc4 	movi	r2,-1
    966c:	30801426 	beq	r6,r2,96c0 <__sflush_r+0x1e4>
    9670:	8880030b 	ldhu	r2,12(r17)
    9674:	8a000a17 	ldw	r8,40(r17)
    9678:	003fae06 	br	9534 <__alt_mem_Onchip_SRAM+0xf8009534>
    967c:	98c00017 	ldw	r3,0(r19)
    9680:	183fba26 	beq	r3,zero,956c <__alt_mem_Onchip_SRAM+0xf800956c>
    9684:	01000744 	movi	r4,29
    9688:	19000626 	beq	r3,r4,96a4 <__sflush_r+0x1c8>
    968c:	01000584 	movi	r4,22
    9690:	19000426 	beq	r3,r4,96a4 <__sflush_r+0x1c8>
    9694:	88c0030b 	ldhu	r3,12(r17)
    9698:	18c01014 	ori	r3,r3,64
    969c:	88c0030d 	sth	r3,12(r17)
    96a0:	003fc306 	br	95b0 <__alt_mem_Onchip_SRAM+0xf80095b0>
    96a4:	8880030b 	ldhu	r2,12(r17)
    96a8:	88c00417 	ldw	r3,16(r17)
    96ac:	88000115 	stw	zero,4(r17)
    96b0:	10bdffcc 	andi	r2,r2,63487
    96b4:	8880030d 	sth	r2,12(r17)
    96b8:	88c00015 	stw	r3,0(r17)
    96bc:	003fb306 	br	958c <__alt_mem_Onchip_SRAM+0xf800958c>
    96c0:	98800017 	ldw	r2,0(r19)
    96c4:	103fea26 	beq	r2,zero,9670 <__alt_mem_Onchip_SRAM+0xf8009670>
    96c8:	00c00744 	movi	r3,29
    96cc:	10c00226 	beq	r2,r3,96d8 <__sflush_r+0x1fc>
    96d0:	00c00584 	movi	r3,22
    96d4:	10c0031e 	bne	r2,r3,96e4 <__sflush_r+0x208>
    96d8:	9c000015 	stw	r16,0(r19)
    96dc:	0005883a 	mov	r2,zero
    96e0:	003fb306 	br	95b0 <__alt_mem_Onchip_SRAM+0xf80095b0>
    96e4:	88c0030b 	ldhu	r3,12(r17)
    96e8:	3005883a 	mov	r2,r6
    96ec:	18c01014 	ori	r3,r3,64
    96f0:	88c0030d 	sth	r3,12(r17)
    96f4:	003fae06 	br	95b0 <__alt_mem_Onchip_SRAM+0xf80095b0>

000096f8 <_fflush_r>:
    96f8:	defffd04 	addi	sp,sp,-12
    96fc:	dc000115 	stw	r16,4(sp)
    9700:	dfc00215 	stw	ra,8(sp)
    9704:	2021883a 	mov	r16,r4
    9708:	20000226 	beq	r4,zero,9714 <_fflush_r+0x1c>
    970c:	20800e17 	ldw	r2,56(r4)
    9710:	10000c26 	beq	r2,zero,9744 <_fflush_r+0x4c>
    9714:	2880030f 	ldh	r2,12(r5)
    9718:	1000051e 	bne	r2,zero,9730 <_fflush_r+0x38>
    971c:	0005883a 	mov	r2,zero
    9720:	dfc00217 	ldw	ra,8(sp)
    9724:	dc000117 	ldw	r16,4(sp)
    9728:	dec00304 	addi	sp,sp,12
    972c:	f800283a 	ret
    9730:	8009883a 	mov	r4,r16
    9734:	dfc00217 	ldw	ra,8(sp)
    9738:	dc000117 	ldw	r16,4(sp)
    973c:	dec00304 	addi	sp,sp,12
    9740:	00094dc1 	jmpi	94dc <__sflush_r>
    9744:	d9400015 	stw	r5,0(sp)
    9748:	0004df40 	call	4df4 <__sinit>
    974c:	d9400017 	ldw	r5,0(sp)
    9750:	003ff006 	br	9714 <__alt_mem_Onchip_SRAM+0xf8009714>

00009754 <fflush>:
    9754:	20000526 	beq	r4,zero,976c <fflush+0x18>
    9758:	00800074 	movhi	r2,1
    975c:	10885504 	addi	r2,r2,8532
    9760:	200b883a 	mov	r5,r4
    9764:	11000017 	ldw	r4,0(r2)
    9768:	00096f81 	jmpi	96f8 <_fflush_r>
    976c:	00800074 	movhi	r2,1
    9770:	10885404 	addi	r2,r2,8528
    9774:	11000017 	ldw	r4,0(r2)
    9778:	01400074 	movhi	r5,1
    977c:	2965be04 	addi	r5,r5,-26888
    9780:	00053d01 	jmpi	53d0 <_fwalk_reent>

00009784 <_malloc_trim_r>:
    9784:	defffb04 	addi	sp,sp,-20
    9788:	dcc00315 	stw	r19,12(sp)
    978c:	04c00074 	movhi	r19,1
    9790:	dc800215 	stw	r18,8(sp)
    9794:	dc400115 	stw	r17,4(sp)
    9798:	dc000015 	stw	r16,0(sp)
    979c:	dfc00415 	stw	ra,16(sp)
    97a0:	2821883a 	mov	r16,r5
    97a4:	9cc2b804 	addi	r19,r19,2784
    97a8:	2025883a 	mov	r18,r4
    97ac:	000db800 	call	db80 <__malloc_lock>
    97b0:	98800217 	ldw	r2,8(r19)
    97b4:	14400117 	ldw	r17,4(r2)
    97b8:	00bfff04 	movi	r2,-4
    97bc:	88a2703a 	and	r17,r17,r2
    97c0:	8c21c83a 	sub	r16,r17,r16
    97c4:	8403fbc4 	addi	r16,r16,4079
    97c8:	8020d33a 	srli	r16,r16,12
    97cc:	0083ffc4 	movi	r2,4095
    97d0:	843fffc4 	addi	r16,r16,-1
    97d4:	8020933a 	slli	r16,r16,12
    97d8:	1400060e 	bge	r2,r16,97f4 <_malloc_trim_r+0x70>
    97dc:	000b883a 	mov	r5,zero
    97e0:	9009883a 	mov	r4,r18
    97e4:	00079180 	call	7918 <_sbrk_r>
    97e8:	98c00217 	ldw	r3,8(r19)
    97ec:	1c47883a 	add	r3,r3,r17
    97f0:	10c00a26 	beq	r2,r3,981c <_malloc_trim_r+0x98>
    97f4:	9009883a 	mov	r4,r18
    97f8:	000dba40 	call	dba4 <__malloc_unlock>
    97fc:	0005883a 	mov	r2,zero
    9800:	dfc00417 	ldw	ra,16(sp)
    9804:	dcc00317 	ldw	r19,12(sp)
    9808:	dc800217 	ldw	r18,8(sp)
    980c:	dc400117 	ldw	r17,4(sp)
    9810:	dc000017 	ldw	r16,0(sp)
    9814:	dec00504 	addi	sp,sp,20
    9818:	f800283a 	ret
    981c:	040bc83a 	sub	r5,zero,r16
    9820:	9009883a 	mov	r4,r18
    9824:	00079180 	call	7918 <_sbrk_r>
    9828:	00ffffc4 	movi	r3,-1
    982c:	10c00d26 	beq	r2,r3,9864 <_malloc_trim_r+0xe0>
    9830:	00c00074 	movhi	r3,1
    9834:	18cf4b04 	addi	r3,r3,15660
    9838:	18800017 	ldw	r2,0(r3)
    983c:	99000217 	ldw	r4,8(r19)
    9840:	8c23c83a 	sub	r17,r17,r16
    9844:	8c400054 	ori	r17,r17,1
    9848:	1421c83a 	sub	r16,r2,r16
    984c:	24400115 	stw	r17,4(r4)
    9850:	9009883a 	mov	r4,r18
    9854:	1c000015 	stw	r16,0(r3)
    9858:	000dba40 	call	dba4 <__malloc_unlock>
    985c:	00800044 	movi	r2,1
    9860:	003fe706 	br	9800 <__alt_mem_Onchip_SRAM+0xf8009800>
    9864:	000b883a 	mov	r5,zero
    9868:	9009883a 	mov	r4,r18
    986c:	00079180 	call	7918 <_sbrk_r>
    9870:	99000217 	ldw	r4,8(r19)
    9874:	014003c4 	movi	r5,15
    9878:	1107c83a 	sub	r3,r2,r4
    987c:	28ffdd0e 	bge	r5,r3,97f4 <__alt_mem_Onchip_SRAM+0xf80097f4>
    9880:	01400074 	movhi	r5,1
    9884:	29485704 	addi	r5,r5,8540
    9888:	29400017 	ldw	r5,0(r5)
    988c:	18c00054 	ori	r3,r3,1
    9890:	20c00115 	stw	r3,4(r4)
    9894:	00c00074 	movhi	r3,1
    9898:	1145c83a 	sub	r2,r2,r5
    989c:	18cf4b04 	addi	r3,r3,15660
    98a0:	18800015 	stw	r2,0(r3)
    98a4:	003fd306 	br	97f4 <__alt_mem_Onchip_SRAM+0xf80097f4>

000098a8 <_free_r>:
    98a8:	28004126 	beq	r5,zero,99b0 <_free_r+0x108>
    98ac:	defffd04 	addi	sp,sp,-12
    98b0:	dc400115 	stw	r17,4(sp)
    98b4:	dc000015 	stw	r16,0(sp)
    98b8:	2023883a 	mov	r17,r4
    98bc:	2821883a 	mov	r16,r5
    98c0:	dfc00215 	stw	ra,8(sp)
    98c4:	000db800 	call	db80 <__malloc_lock>
    98c8:	81ffff17 	ldw	r7,-4(r16)
    98cc:	00bfff84 	movi	r2,-2
    98d0:	01000074 	movhi	r4,1
    98d4:	81bffe04 	addi	r6,r16,-8
    98d8:	3884703a 	and	r2,r7,r2
    98dc:	2102b804 	addi	r4,r4,2784
    98e0:	308b883a 	add	r5,r6,r2
    98e4:	2a400117 	ldw	r9,4(r5)
    98e8:	22000217 	ldw	r8,8(r4)
    98ec:	00ffff04 	movi	r3,-4
    98f0:	48c6703a 	and	r3,r9,r3
    98f4:	2a005726 	beq	r5,r8,9a54 <_free_r+0x1ac>
    98f8:	28c00115 	stw	r3,4(r5)
    98fc:	39c0004c 	andi	r7,r7,1
    9900:	3800091e 	bne	r7,zero,9928 <_free_r+0x80>
    9904:	823ffe17 	ldw	r8,-8(r16)
    9908:	22400204 	addi	r9,r4,8
    990c:	320dc83a 	sub	r6,r6,r8
    9910:	31c00217 	ldw	r7,8(r6)
    9914:	1205883a 	add	r2,r2,r8
    9918:	3a406526 	beq	r7,r9,9ab0 <_free_r+0x208>
    991c:	32000317 	ldw	r8,12(r6)
    9920:	3a000315 	stw	r8,12(r7)
    9924:	41c00215 	stw	r7,8(r8)
    9928:	28cf883a 	add	r7,r5,r3
    992c:	39c00117 	ldw	r7,4(r7)
    9930:	39c0004c 	andi	r7,r7,1
    9934:	38003a26 	beq	r7,zero,9a20 <_free_r+0x178>
    9938:	10c00054 	ori	r3,r2,1
    993c:	30c00115 	stw	r3,4(r6)
    9940:	3087883a 	add	r3,r6,r2
    9944:	18800015 	stw	r2,0(r3)
    9948:	00c07fc4 	movi	r3,511
    994c:	18801936 	bltu	r3,r2,99b4 <_free_r+0x10c>
    9950:	1004d0fa 	srli	r2,r2,3
    9954:	01c00044 	movi	r7,1
    9958:	21400117 	ldw	r5,4(r4)
    995c:	10c00044 	addi	r3,r2,1
    9960:	18c7883a 	add	r3,r3,r3
    9964:	1005d0ba 	srai	r2,r2,2
    9968:	18c7883a 	add	r3,r3,r3
    996c:	18c7883a 	add	r3,r3,r3
    9970:	1907883a 	add	r3,r3,r4
    9974:	3884983a 	sll	r2,r7,r2
    9978:	19c00017 	ldw	r7,0(r3)
    997c:	1a3ffe04 	addi	r8,r3,-8
    9980:	1144b03a 	or	r2,r2,r5
    9984:	32000315 	stw	r8,12(r6)
    9988:	31c00215 	stw	r7,8(r6)
    998c:	20800115 	stw	r2,4(r4)
    9990:	19800015 	stw	r6,0(r3)
    9994:	39800315 	stw	r6,12(r7)
    9998:	8809883a 	mov	r4,r17
    999c:	dfc00217 	ldw	ra,8(sp)
    99a0:	dc400117 	ldw	r17,4(sp)
    99a4:	dc000017 	ldw	r16,0(sp)
    99a8:	dec00304 	addi	sp,sp,12
    99ac:	000dba41 	jmpi	dba4 <__malloc_unlock>
    99b0:	f800283a 	ret
    99b4:	100ad27a 	srli	r5,r2,9
    99b8:	00c00104 	movi	r3,4
    99bc:	19404a36 	bltu	r3,r5,9ae8 <_free_r+0x240>
    99c0:	100ad1ba 	srli	r5,r2,6
    99c4:	28c00e44 	addi	r3,r5,57
    99c8:	18c7883a 	add	r3,r3,r3
    99cc:	29400e04 	addi	r5,r5,56
    99d0:	18c7883a 	add	r3,r3,r3
    99d4:	18c7883a 	add	r3,r3,r3
    99d8:	1909883a 	add	r4,r3,r4
    99dc:	20c00017 	ldw	r3,0(r4)
    99e0:	01c00074 	movhi	r7,1
    99e4:	213ffe04 	addi	r4,r4,-8
    99e8:	39c2b804 	addi	r7,r7,2784
    99ec:	20c04426 	beq	r4,r3,9b00 <_free_r+0x258>
    99f0:	01ffff04 	movi	r7,-4
    99f4:	19400117 	ldw	r5,4(r3)
    99f8:	29ca703a 	and	r5,r5,r7
    99fc:	1140022e 	bgeu	r2,r5,9a08 <_free_r+0x160>
    9a00:	18c00217 	ldw	r3,8(r3)
    9a04:	20fffb1e 	bne	r4,r3,99f4 <__alt_mem_Onchip_SRAM+0xf80099f4>
    9a08:	19000317 	ldw	r4,12(r3)
    9a0c:	31000315 	stw	r4,12(r6)
    9a10:	30c00215 	stw	r3,8(r6)
    9a14:	21800215 	stw	r6,8(r4)
    9a18:	19800315 	stw	r6,12(r3)
    9a1c:	003fde06 	br	9998 <__alt_mem_Onchip_SRAM+0xf8009998>
    9a20:	29c00217 	ldw	r7,8(r5)
    9a24:	10c5883a 	add	r2,r2,r3
    9a28:	00c00074 	movhi	r3,1
    9a2c:	18c2ba04 	addi	r3,r3,2792
    9a30:	38c03b26 	beq	r7,r3,9b20 <_free_r+0x278>
    9a34:	2a000317 	ldw	r8,12(r5)
    9a38:	11400054 	ori	r5,r2,1
    9a3c:	3087883a 	add	r3,r6,r2
    9a40:	3a000315 	stw	r8,12(r7)
    9a44:	41c00215 	stw	r7,8(r8)
    9a48:	31400115 	stw	r5,4(r6)
    9a4c:	18800015 	stw	r2,0(r3)
    9a50:	003fbd06 	br	9948 <__alt_mem_Onchip_SRAM+0xf8009948>
    9a54:	39c0004c 	andi	r7,r7,1
    9a58:	10c5883a 	add	r2,r2,r3
    9a5c:	3800071e 	bne	r7,zero,9a7c <_free_r+0x1d4>
    9a60:	81fffe17 	ldw	r7,-8(r16)
    9a64:	31cdc83a 	sub	r6,r6,r7
    9a68:	30c00317 	ldw	r3,12(r6)
    9a6c:	31400217 	ldw	r5,8(r6)
    9a70:	11c5883a 	add	r2,r2,r7
    9a74:	28c00315 	stw	r3,12(r5)
    9a78:	19400215 	stw	r5,8(r3)
    9a7c:	10c00054 	ori	r3,r2,1
    9a80:	30c00115 	stw	r3,4(r6)
    9a84:	00c00074 	movhi	r3,1
    9a88:	18c85804 	addi	r3,r3,8544
    9a8c:	18c00017 	ldw	r3,0(r3)
    9a90:	21800215 	stw	r6,8(r4)
    9a94:	10ffc036 	bltu	r2,r3,9998 <__alt_mem_Onchip_SRAM+0xf8009998>
    9a98:	00800074 	movhi	r2,1
    9a9c:	108f3f04 	addi	r2,r2,15612
    9aa0:	11400017 	ldw	r5,0(r2)
    9aa4:	8809883a 	mov	r4,r17
    9aa8:	00097840 	call	9784 <_malloc_trim_r>
    9aac:	003fba06 	br	9998 <__alt_mem_Onchip_SRAM+0xf8009998>
    9ab0:	28c9883a 	add	r4,r5,r3
    9ab4:	21000117 	ldw	r4,4(r4)
    9ab8:	2100004c 	andi	r4,r4,1
    9abc:	2000391e 	bne	r4,zero,9ba4 <_free_r+0x2fc>
    9ac0:	29c00217 	ldw	r7,8(r5)
    9ac4:	29000317 	ldw	r4,12(r5)
    9ac8:	1885883a 	add	r2,r3,r2
    9acc:	10c00054 	ori	r3,r2,1
    9ad0:	39000315 	stw	r4,12(r7)
    9ad4:	21c00215 	stw	r7,8(r4)
    9ad8:	30c00115 	stw	r3,4(r6)
    9adc:	308d883a 	add	r6,r6,r2
    9ae0:	30800015 	stw	r2,0(r6)
    9ae4:	003fac06 	br	9998 <__alt_mem_Onchip_SRAM+0xf8009998>
    9ae8:	00c00504 	movi	r3,20
    9aec:	19401536 	bltu	r3,r5,9b44 <_free_r+0x29c>
    9af0:	28c01704 	addi	r3,r5,92
    9af4:	18c7883a 	add	r3,r3,r3
    9af8:	294016c4 	addi	r5,r5,91
    9afc:	003fb406 	br	99d0 <__alt_mem_Onchip_SRAM+0xf80099d0>
    9b00:	280bd0ba 	srai	r5,r5,2
    9b04:	00c00044 	movi	r3,1
    9b08:	38800117 	ldw	r2,4(r7)
    9b0c:	194a983a 	sll	r5,r3,r5
    9b10:	2007883a 	mov	r3,r4
    9b14:	2884b03a 	or	r2,r5,r2
    9b18:	38800115 	stw	r2,4(r7)
    9b1c:	003fbb06 	br	9a0c <__alt_mem_Onchip_SRAM+0xf8009a0c>
    9b20:	21800515 	stw	r6,20(r4)
    9b24:	21800415 	stw	r6,16(r4)
    9b28:	10c00054 	ori	r3,r2,1
    9b2c:	31c00315 	stw	r7,12(r6)
    9b30:	31c00215 	stw	r7,8(r6)
    9b34:	30c00115 	stw	r3,4(r6)
    9b38:	308d883a 	add	r6,r6,r2
    9b3c:	30800015 	stw	r2,0(r6)
    9b40:	003f9506 	br	9998 <__alt_mem_Onchip_SRAM+0xf8009998>
    9b44:	00c01504 	movi	r3,84
    9b48:	19400536 	bltu	r3,r5,9b60 <_free_r+0x2b8>
    9b4c:	100ad33a 	srli	r5,r2,12
    9b50:	28c01bc4 	addi	r3,r5,111
    9b54:	18c7883a 	add	r3,r3,r3
    9b58:	29401b84 	addi	r5,r5,110
    9b5c:	003f9c06 	br	99d0 <__alt_mem_Onchip_SRAM+0xf80099d0>
    9b60:	00c05504 	movi	r3,340
    9b64:	19400536 	bltu	r3,r5,9b7c <_free_r+0x2d4>
    9b68:	100ad3fa 	srli	r5,r2,15
    9b6c:	28c01e04 	addi	r3,r5,120
    9b70:	18c7883a 	add	r3,r3,r3
    9b74:	29401dc4 	addi	r5,r5,119
    9b78:	003f9506 	br	99d0 <__alt_mem_Onchip_SRAM+0xf80099d0>
    9b7c:	00c15504 	movi	r3,1364
    9b80:	19400536 	bltu	r3,r5,9b98 <_free_r+0x2f0>
    9b84:	100ad4ba 	srli	r5,r2,18
    9b88:	28c01f44 	addi	r3,r5,125
    9b8c:	18c7883a 	add	r3,r3,r3
    9b90:	29401f04 	addi	r5,r5,124
    9b94:	003f8e06 	br	99d0 <__alt_mem_Onchip_SRAM+0xf80099d0>
    9b98:	00c03f84 	movi	r3,254
    9b9c:	01401f84 	movi	r5,126
    9ba0:	003f8b06 	br	99d0 <__alt_mem_Onchip_SRAM+0xf80099d0>
    9ba4:	10c00054 	ori	r3,r2,1
    9ba8:	30c00115 	stw	r3,4(r6)
    9bac:	308d883a 	add	r6,r6,r2
    9bb0:	30800015 	stw	r2,0(r6)
    9bb4:	003f7806 	br	9998 <__alt_mem_Onchip_SRAM+0xf8009998>

00009bb8 <_lseek_r>:
    9bb8:	defffd04 	addi	sp,sp,-12
    9bbc:	2805883a 	mov	r2,r5
    9bc0:	dc000015 	stw	r16,0(sp)
    9bc4:	04000074 	movhi	r16,1
    9bc8:	dc400115 	stw	r17,4(sp)
    9bcc:	300b883a 	mov	r5,r6
    9bd0:	840f3904 	addi	r16,r16,15588
    9bd4:	2023883a 	mov	r17,r4
    9bd8:	380d883a 	mov	r6,r7
    9bdc:	1009883a 	mov	r4,r2
    9be0:	dfc00215 	stw	ra,8(sp)
    9be4:	80000015 	stw	zero,0(r16)
    9be8:	000da280 	call	da28 <lseek>
    9bec:	00ffffc4 	movi	r3,-1
    9bf0:	10c00526 	beq	r2,r3,9c08 <_lseek_r+0x50>
    9bf4:	dfc00217 	ldw	ra,8(sp)
    9bf8:	dc400117 	ldw	r17,4(sp)
    9bfc:	dc000017 	ldw	r16,0(sp)
    9c00:	dec00304 	addi	sp,sp,12
    9c04:	f800283a 	ret
    9c08:	80c00017 	ldw	r3,0(r16)
    9c0c:	183ff926 	beq	r3,zero,9bf4 <__alt_mem_Onchip_SRAM+0xf8009bf4>
    9c10:	88c00015 	stw	r3,0(r17)
    9c14:	003ff706 	br	9bf4 <__alt_mem_Onchip_SRAM+0xf8009bf4>

00009c18 <__smakebuf_r>:
    9c18:	2880030b 	ldhu	r2,12(r5)
    9c1c:	10c0008c 	andi	r3,r2,2
    9c20:	1800411e 	bne	r3,zero,9d28 <__smakebuf_r+0x110>
    9c24:	deffec04 	addi	sp,sp,-80
    9c28:	dc000f15 	stw	r16,60(sp)
    9c2c:	2821883a 	mov	r16,r5
    9c30:	2940038f 	ldh	r5,14(r5)
    9c34:	dc401015 	stw	r17,64(sp)
    9c38:	dfc01315 	stw	ra,76(sp)
    9c3c:	dcc01215 	stw	r19,72(sp)
    9c40:	dc801115 	stw	r18,68(sp)
    9c44:	2023883a 	mov	r17,r4
    9c48:	28001c16 	blt	r5,zero,9cbc <__smakebuf_r+0xa4>
    9c4c:	d80d883a 	mov	r6,sp
    9c50:	0009e340 	call	9e34 <_fstat_r>
    9c54:	10001816 	blt	r2,zero,9cb8 <__smakebuf_r+0xa0>
    9c58:	d8800117 	ldw	r2,4(sp)
    9c5c:	00e00014 	movui	r3,32768
    9c60:	10bc000c 	andi	r2,r2,61440
    9c64:	14c80020 	cmpeqi	r19,r2,8192
    9c68:	10c03726 	beq	r2,r3,9d48 <__smakebuf_r+0x130>
    9c6c:	80c0030b 	ldhu	r3,12(r16)
    9c70:	18c20014 	ori	r3,r3,2048
    9c74:	80c0030d 	sth	r3,12(r16)
    9c78:	00c80004 	movi	r3,8192
    9c7c:	10c0521e 	bne	r2,r3,9dc8 <__smakebuf_r+0x1b0>
    9c80:	8140038f 	ldh	r5,14(r16)
    9c84:	8809883a 	mov	r4,r17
    9c88:	0009e900 	call	9e90 <_isatty_r>
    9c8c:	10004c26 	beq	r2,zero,9dc0 <__smakebuf_r+0x1a8>
    9c90:	8080030b 	ldhu	r2,12(r16)
    9c94:	80c010c4 	addi	r3,r16,67
    9c98:	80c00015 	stw	r3,0(r16)
    9c9c:	10800054 	ori	r2,r2,1
    9ca0:	8080030d 	sth	r2,12(r16)
    9ca4:	00800044 	movi	r2,1
    9ca8:	80c00415 	stw	r3,16(r16)
    9cac:	80800515 	stw	r2,20(r16)
    9cb0:	04810004 	movi	r18,1024
    9cb4:	00000706 	br	9cd4 <__smakebuf_r+0xbc>
    9cb8:	8080030b 	ldhu	r2,12(r16)
    9cbc:	10c0200c 	andi	r3,r2,128
    9cc0:	18001f1e 	bne	r3,zero,9d40 <__smakebuf_r+0x128>
    9cc4:	04810004 	movi	r18,1024
    9cc8:	10820014 	ori	r2,r2,2048
    9ccc:	8080030d 	sth	r2,12(r16)
    9cd0:	0027883a 	mov	r19,zero
    9cd4:	900b883a 	mov	r5,r18
    9cd8:	8809883a 	mov	r4,r17
    9cdc:	00055cc0 	call	55cc <_malloc_r>
    9ce0:	10002c26 	beq	r2,zero,9d94 <__smakebuf_r+0x17c>
    9ce4:	80c0030b 	ldhu	r3,12(r16)
    9ce8:	01000034 	movhi	r4,0
    9cec:	2112a704 	addi	r4,r4,19100
    9cf0:	89000f15 	stw	r4,60(r17)
    9cf4:	18c02014 	ori	r3,r3,128
    9cf8:	80c0030d 	sth	r3,12(r16)
    9cfc:	80800015 	stw	r2,0(r16)
    9d00:	80800415 	stw	r2,16(r16)
    9d04:	84800515 	stw	r18,20(r16)
    9d08:	98001a1e 	bne	r19,zero,9d74 <__smakebuf_r+0x15c>
    9d0c:	dfc01317 	ldw	ra,76(sp)
    9d10:	dcc01217 	ldw	r19,72(sp)
    9d14:	dc801117 	ldw	r18,68(sp)
    9d18:	dc401017 	ldw	r17,64(sp)
    9d1c:	dc000f17 	ldw	r16,60(sp)
    9d20:	dec01404 	addi	sp,sp,80
    9d24:	f800283a 	ret
    9d28:	288010c4 	addi	r2,r5,67
    9d2c:	28800015 	stw	r2,0(r5)
    9d30:	28800415 	stw	r2,16(r5)
    9d34:	00800044 	movi	r2,1
    9d38:	28800515 	stw	r2,20(r5)
    9d3c:	f800283a 	ret
    9d40:	04801004 	movi	r18,64
    9d44:	003fe006 	br	9cc8 <__alt_mem_Onchip_SRAM+0xf8009cc8>
    9d48:	81000a17 	ldw	r4,40(r16)
    9d4c:	00c00034 	movhi	r3,0
    9d50:	18de9104 	addi	r3,r3,31300
    9d54:	20ffc51e 	bne	r4,r3,9c6c <__alt_mem_Onchip_SRAM+0xf8009c6c>
    9d58:	8080030b 	ldhu	r2,12(r16)
    9d5c:	04810004 	movi	r18,1024
    9d60:	84801315 	stw	r18,76(r16)
    9d64:	1484b03a 	or	r2,r2,r18
    9d68:	8080030d 	sth	r2,12(r16)
    9d6c:	0027883a 	mov	r19,zero
    9d70:	003fd806 	br	9cd4 <__alt_mem_Onchip_SRAM+0xf8009cd4>
    9d74:	8140038f 	ldh	r5,14(r16)
    9d78:	8809883a 	mov	r4,r17
    9d7c:	0009e900 	call	9e90 <_isatty_r>
    9d80:	103fe226 	beq	r2,zero,9d0c <__alt_mem_Onchip_SRAM+0xf8009d0c>
    9d84:	8080030b 	ldhu	r2,12(r16)
    9d88:	10800054 	ori	r2,r2,1
    9d8c:	8080030d 	sth	r2,12(r16)
    9d90:	003fde06 	br	9d0c <__alt_mem_Onchip_SRAM+0xf8009d0c>
    9d94:	8080030b 	ldhu	r2,12(r16)
    9d98:	10c0800c 	andi	r3,r2,512
    9d9c:	183fdb1e 	bne	r3,zero,9d0c <__alt_mem_Onchip_SRAM+0xf8009d0c>
    9da0:	10800094 	ori	r2,r2,2
    9da4:	80c010c4 	addi	r3,r16,67
    9da8:	8080030d 	sth	r2,12(r16)
    9dac:	00800044 	movi	r2,1
    9db0:	80c00015 	stw	r3,0(r16)
    9db4:	80c00415 	stw	r3,16(r16)
    9db8:	80800515 	stw	r2,20(r16)
    9dbc:	003fd306 	br	9d0c <__alt_mem_Onchip_SRAM+0xf8009d0c>
    9dc0:	04810004 	movi	r18,1024
    9dc4:	003fc306 	br	9cd4 <__alt_mem_Onchip_SRAM+0xf8009cd4>
    9dc8:	0027883a 	mov	r19,zero
    9dcc:	04810004 	movi	r18,1024
    9dd0:	003fc006 	br	9cd4 <__alt_mem_Onchip_SRAM+0xf8009cd4>

00009dd4 <_read_r>:
    9dd4:	defffd04 	addi	sp,sp,-12
    9dd8:	2805883a 	mov	r2,r5
    9ddc:	dc000015 	stw	r16,0(sp)
    9de0:	04000074 	movhi	r16,1
    9de4:	dc400115 	stw	r17,4(sp)
    9de8:	300b883a 	mov	r5,r6
    9dec:	840f3904 	addi	r16,r16,15588
    9df0:	2023883a 	mov	r17,r4
    9df4:	380d883a 	mov	r6,r7
    9df8:	1009883a 	mov	r4,r2
    9dfc:	dfc00215 	stw	ra,8(sp)
    9e00:	80000015 	stw	zero,0(r16)
    9e04:	000dc040 	call	dc04 <read>
    9e08:	00ffffc4 	movi	r3,-1
    9e0c:	10c00526 	beq	r2,r3,9e24 <_read_r+0x50>
    9e10:	dfc00217 	ldw	ra,8(sp)
    9e14:	dc400117 	ldw	r17,4(sp)
    9e18:	dc000017 	ldw	r16,0(sp)
    9e1c:	dec00304 	addi	sp,sp,12
    9e20:	f800283a 	ret
    9e24:	80c00017 	ldw	r3,0(r16)
    9e28:	183ff926 	beq	r3,zero,9e10 <__alt_mem_Onchip_SRAM+0xf8009e10>
    9e2c:	88c00015 	stw	r3,0(r17)
    9e30:	003ff706 	br	9e10 <__alt_mem_Onchip_SRAM+0xf8009e10>

00009e34 <_fstat_r>:
    9e34:	defffd04 	addi	sp,sp,-12
    9e38:	2805883a 	mov	r2,r5
    9e3c:	dc000015 	stw	r16,0(sp)
    9e40:	04000074 	movhi	r16,1
    9e44:	dc400115 	stw	r17,4(sp)
    9e48:	840f3904 	addi	r16,r16,15588
    9e4c:	2023883a 	mov	r17,r4
    9e50:	300b883a 	mov	r5,r6
    9e54:	1009883a 	mov	r4,r2
    9e58:	dfc00215 	stw	ra,8(sp)
    9e5c:	80000015 	stw	zero,0(r16)
    9e60:	000d56c0 	call	d56c <fstat>
    9e64:	00ffffc4 	movi	r3,-1
    9e68:	10c00526 	beq	r2,r3,9e80 <_fstat_r+0x4c>
    9e6c:	dfc00217 	ldw	ra,8(sp)
    9e70:	dc400117 	ldw	r17,4(sp)
    9e74:	dc000017 	ldw	r16,0(sp)
    9e78:	dec00304 	addi	sp,sp,12
    9e7c:	f800283a 	ret
    9e80:	80c00017 	ldw	r3,0(r16)
    9e84:	183ff926 	beq	r3,zero,9e6c <__alt_mem_Onchip_SRAM+0xf8009e6c>
    9e88:	88c00015 	stw	r3,0(r17)
    9e8c:	003ff706 	br	9e6c <__alt_mem_Onchip_SRAM+0xf8009e6c>

00009e90 <_isatty_r>:
    9e90:	defffd04 	addi	sp,sp,-12
    9e94:	dc000015 	stw	r16,0(sp)
    9e98:	04000074 	movhi	r16,1
    9e9c:	dc400115 	stw	r17,4(sp)
    9ea0:	840f3904 	addi	r16,r16,15588
    9ea4:	2023883a 	mov	r17,r4
    9ea8:	2809883a 	mov	r4,r5
    9eac:	dfc00215 	stw	ra,8(sp)
    9eb0:	80000015 	stw	zero,0(r16)
    9eb4:	000d8540 	call	d854 <isatty>
    9eb8:	00ffffc4 	movi	r3,-1
    9ebc:	10c00526 	beq	r2,r3,9ed4 <_isatty_r+0x44>
    9ec0:	dfc00217 	ldw	ra,8(sp)
    9ec4:	dc400117 	ldw	r17,4(sp)
    9ec8:	dc000017 	ldw	r16,0(sp)
    9ecc:	dec00304 	addi	sp,sp,12
    9ed0:	f800283a 	ret
    9ed4:	80c00017 	ldw	r3,0(r16)
    9ed8:	183ff926 	beq	r3,zero,9ec0 <__alt_mem_Onchip_SRAM+0xf8009ec0>
    9edc:	88c00015 	stw	r3,0(r17)
    9ee0:	003ff706 	br	9ec0 <__alt_mem_Onchip_SRAM+0xf8009ec0>

00009ee4 <__muldi3>:
    9ee4:	defff604 	addi	sp,sp,-40
    9ee8:	dd800615 	stw	r22,24(sp)
    9eec:	dd400515 	stw	r21,20(sp)
    9ef0:	dc400115 	stw	r17,4(sp)
    9ef4:	357fffcc 	andi	r21,r6,65535
    9ef8:	2022d43a 	srli	r17,r4,16
    9efc:	25bfffcc 	andi	r22,r4,65535
    9f00:	dcc00315 	stw	r19,12(sp)
    9f04:	dc800215 	stw	r18,8(sp)
    9f08:	2027883a 	mov	r19,r4
    9f0c:	2825883a 	mov	r18,r5
    9f10:	b009883a 	mov	r4,r22
    9f14:	a80b883a 	mov	r5,r21
    9f18:	dfc00915 	stw	ra,36(sp)
    9f1c:	df000815 	stw	fp,32(sp)
    9f20:	ddc00715 	stw	r23,28(sp)
    9f24:	3839883a 	mov	fp,r7
    9f28:	302ed43a 	srli	r23,r6,16
    9f2c:	dd000415 	stw	r20,16(sp)
    9f30:	dc000015 	stw	r16,0(sp)
    9f34:	3029883a 	mov	r20,r6
    9f38:	0000a0c0 	call	a0c <__mulsi3>
    9f3c:	a80b883a 	mov	r5,r21
    9f40:	8809883a 	mov	r4,r17
    9f44:	1021883a 	mov	r16,r2
    9f48:	0000a0c0 	call	a0c <__mulsi3>
    9f4c:	8809883a 	mov	r4,r17
    9f50:	b80b883a 	mov	r5,r23
    9f54:	102b883a 	mov	r21,r2
    9f58:	0000a0c0 	call	a0c <__mulsi3>
    9f5c:	b80b883a 	mov	r5,r23
    9f60:	b009883a 	mov	r4,r22
    9f64:	1023883a 	mov	r17,r2
    9f68:	0000a0c0 	call	a0c <__mulsi3>
    9f6c:	8006d43a 	srli	r3,r16,16
    9f70:	1545883a 	add	r2,r2,r21
    9f74:	1885883a 	add	r2,r3,r2
    9f78:	1540022e 	bgeu	r2,r21,9f84 <__muldi3+0xa0>
    9f7c:	00c00074 	movhi	r3,1
    9f80:	88e3883a 	add	r17,r17,r3
    9f84:	1006d43a 	srli	r3,r2,16
    9f88:	1004943a 	slli	r2,r2,16
    9f8c:	e00b883a 	mov	r5,fp
    9f90:	9809883a 	mov	r4,r19
    9f94:	843fffcc 	andi	r16,r16,65535
    9f98:	1c63883a 	add	r17,r3,r17
    9f9c:	1421883a 	add	r16,r2,r16
    9fa0:	0000a0c0 	call	a0c <__mulsi3>
    9fa4:	900b883a 	mov	r5,r18
    9fa8:	a009883a 	mov	r4,r20
    9fac:	1027883a 	mov	r19,r2
    9fb0:	0000a0c0 	call	a0c <__mulsi3>
    9fb4:	9885883a 	add	r2,r19,r2
    9fb8:	1447883a 	add	r3,r2,r17
    9fbc:	8005883a 	mov	r2,r16
    9fc0:	dfc00917 	ldw	ra,36(sp)
    9fc4:	df000817 	ldw	fp,32(sp)
    9fc8:	ddc00717 	ldw	r23,28(sp)
    9fcc:	dd800617 	ldw	r22,24(sp)
    9fd0:	dd400517 	ldw	r21,20(sp)
    9fd4:	dd000417 	ldw	r20,16(sp)
    9fd8:	dcc00317 	ldw	r19,12(sp)
    9fdc:	dc800217 	ldw	r18,8(sp)
    9fe0:	dc400117 	ldw	r17,4(sp)
    9fe4:	dc000017 	ldw	r16,0(sp)
    9fe8:	dec00a04 	addi	sp,sp,40
    9fec:	f800283a 	ret

00009ff0 <__udivdi3>:
    9ff0:	defff404 	addi	sp,sp,-48
    9ff4:	dcc00515 	stw	r19,20(sp)
    9ff8:	dc000215 	stw	r16,8(sp)
    9ffc:	dfc00b15 	stw	ra,44(sp)
    a000:	df000a15 	stw	fp,40(sp)
    a004:	ddc00915 	stw	r23,36(sp)
    a008:	dd800815 	stw	r22,32(sp)
    a00c:	dd400715 	stw	r21,28(sp)
    a010:	dd000615 	stw	r20,24(sp)
    a014:	dc800415 	stw	r18,16(sp)
    a018:	dc400315 	stw	r17,12(sp)
    a01c:	2027883a 	mov	r19,r4
    a020:	2821883a 	mov	r16,r5
    a024:	3800461e 	bne	r7,zero,a140 <__udivdi3+0x150>
    a028:	3023883a 	mov	r17,r6
    a02c:	2025883a 	mov	r18,r4
    a030:	2980572e 	bgeu	r5,r6,a190 <__udivdi3+0x1a0>
    a034:	00bfffd4 	movui	r2,65535
    a038:	282d883a 	mov	r22,r5
    a03c:	1180b236 	bltu	r2,r6,a308 <__udivdi3+0x318>
    a040:	00803fc4 	movi	r2,255
    a044:	1185803a 	cmpltu	r2,r2,r6
    a048:	100490fa 	slli	r2,r2,3
    a04c:	3086d83a 	srl	r3,r6,r2
    a050:	01000074 	movhi	r4,1
    a054:	2100ca44 	addi	r4,r4,809
    a058:	20c7883a 	add	r3,r4,r3
    a05c:	18c00003 	ldbu	r3,0(r3)
    a060:	1885883a 	add	r2,r3,r2
    a064:	00c00804 	movi	r3,32
    a068:	1887c83a 	sub	r3,r3,r2
    a06c:	18000526 	beq	r3,zero,a084 <__udivdi3+0x94>
    a070:	80e0983a 	sll	r16,r16,r3
    a074:	9884d83a 	srl	r2,r19,r2
    a078:	30e2983a 	sll	r17,r6,r3
    a07c:	98e4983a 	sll	r18,r19,r3
    a080:	142cb03a 	or	r22,r2,r16
    a084:	882ad43a 	srli	r21,r17,16
    a088:	b009883a 	mov	r4,r22
    a08c:	8d3fffcc 	andi	r20,r17,65535
    a090:	a80b883a 	mov	r5,r21
    a094:	00009b40 	call	9b4 <__umodsi3>
    a098:	b009883a 	mov	r4,r22
    a09c:	a80b883a 	mov	r5,r21
    a0a0:	1027883a 	mov	r19,r2
    a0a4:	00009500 	call	950 <__udivsi3>
    a0a8:	100b883a 	mov	r5,r2
    a0ac:	a009883a 	mov	r4,r20
    a0b0:	102d883a 	mov	r22,r2
    a0b4:	0000a0c0 	call	a0c <__mulsi3>
    a0b8:	9826943a 	slli	r19,r19,16
    a0bc:	9006d43a 	srli	r3,r18,16
    a0c0:	1cc6b03a 	or	r3,r3,r19
    a0c4:	1880052e 	bgeu	r3,r2,a0dc <__udivdi3+0xec>
    a0c8:	1c47883a 	add	r3,r3,r17
    a0cc:	b13fffc4 	addi	r4,r22,-1
    a0d0:	1c400136 	bltu	r3,r17,a0d8 <__udivdi3+0xe8>
    a0d4:	18814236 	bltu	r3,r2,a5e0 <__udivdi3+0x5f0>
    a0d8:	202d883a 	mov	r22,r4
    a0dc:	18a1c83a 	sub	r16,r3,r2
    a0e0:	8009883a 	mov	r4,r16
    a0e4:	a80b883a 	mov	r5,r21
    a0e8:	00009b40 	call	9b4 <__umodsi3>
    a0ec:	1027883a 	mov	r19,r2
    a0f0:	8009883a 	mov	r4,r16
    a0f4:	a80b883a 	mov	r5,r21
    a0f8:	9826943a 	slli	r19,r19,16
    a0fc:	00009500 	call	950 <__udivsi3>
    a100:	100b883a 	mov	r5,r2
    a104:	a009883a 	mov	r4,r20
    a108:	94bfffcc 	andi	r18,r18,65535
    a10c:	1021883a 	mov	r16,r2
    a110:	94e4b03a 	or	r18,r18,r19
    a114:	0000a0c0 	call	a0c <__mulsi3>
    a118:	9080052e 	bgeu	r18,r2,a130 <__udivdi3+0x140>
    a11c:	8ca5883a 	add	r18,r17,r18
    a120:	80ffffc4 	addi	r3,r16,-1
    a124:	94410c36 	bltu	r18,r17,a558 <__udivdi3+0x568>
    a128:	90810b2e 	bgeu	r18,r2,a558 <__udivdi3+0x568>
    a12c:	843fff84 	addi	r16,r16,-2
    a130:	b004943a 	slli	r2,r22,16
    a134:	0007883a 	mov	r3,zero
    a138:	1404b03a 	or	r2,r2,r16
    a13c:	00005e06 	br	a2b8 <__udivdi3+0x2c8>
    a140:	29c05b36 	bltu	r5,r7,a2b0 <__udivdi3+0x2c0>
    a144:	00bfffd4 	movui	r2,65535
    a148:	11c0672e 	bgeu	r2,r7,a2e8 <__udivdi3+0x2f8>
    a14c:	00804034 	movhi	r2,256
    a150:	10bfffc4 	addi	r2,r2,-1
    a154:	11c10a36 	bltu	r2,r7,a580 <__udivdi3+0x590>
    a158:	00800404 	movi	r2,16
    a15c:	3886d83a 	srl	r3,r7,r2
    a160:	01000074 	movhi	r4,1
    a164:	2100ca44 	addi	r4,r4,809
    a168:	20c7883a 	add	r3,r4,r3
    a16c:	18c00003 	ldbu	r3,0(r3)
    a170:	05c00804 	movi	r23,32
    a174:	1885883a 	add	r2,r3,r2
    a178:	b8afc83a 	sub	r23,r23,r2
    a17c:	b800671e 	bne	r23,zero,a31c <__udivdi3+0x32c>
    a180:	3c010536 	bltu	r7,r16,a598 <__udivdi3+0x5a8>
    a184:	9985403a 	cmpgeu	r2,r19,r6
    a188:	0007883a 	mov	r3,zero
    a18c:	00004a06 	br	a2b8 <__udivdi3+0x2c8>
    a190:	3000041e 	bne	r6,zero,a1a4 <__udivdi3+0x1b4>
    a194:	000b883a 	mov	r5,zero
    a198:	01000044 	movi	r4,1
    a19c:	00009500 	call	950 <__udivsi3>
    a1a0:	1023883a 	mov	r17,r2
    a1a4:	00bfffd4 	movui	r2,65535
    a1a8:	1440532e 	bgeu	r2,r17,a2f8 <__udivdi3+0x308>
    a1ac:	00804034 	movhi	r2,256
    a1b0:	10bfffc4 	addi	r2,r2,-1
    a1b4:	1440f436 	bltu	r2,r17,a588 <__udivdi3+0x598>
    a1b8:	00800404 	movi	r2,16
    a1bc:	8886d83a 	srl	r3,r17,r2
    a1c0:	01000074 	movhi	r4,1
    a1c4:	2100ca44 	addi	r4,r4,809
    a1c8:	20c7883a 	add	r3,r4,r3
    a1cc:	18c00003 	ldbu	r3,0(r3)
    a1d0:	1885883a 	add	r2,r3,r2
    a1d4:	00c00804 	movi	r3,32
    a1d8:	1887c83a 	sub	r3,r3,r2
    a1dc:	1800a51e 	bne	r3,zero,a474 <__udivdi3+0x484>
    a1e0:	882ad43a 	srli	r21,r17,16
    a1e4:	8461c83a 	sub	r16,r16,r17
    a1e8:	8d3fffcc 	andi	r20,r17,65535
    a1ec:	00c00044 	movi	r3,1
    a1f0:	a80b883a 	mov	r5,r21
    a1f4:	8009883a 	mov	r4,r16
    a1f8:	d8c00115 	stw	r3,4(sp)
    a1fc:	00009b40 	call	9b4 <__umodsi3>
    a200:	a80b883a 	mov	r5,r21
    a204:	8009883a 	mov	r4,r16
    a208:	1027883a 	mov	r19,r2
    a20c:	00009500 	call	950 <__udivsi3>
    a210:	a00b883a 	mov	r5,r20
    a214:	1009883a 	mov	r4,r2
    a218:	102d883a 	mov	r22,r2
    a21c:	0000a0c0 	call	a0c <__mulsi3>
    a220:	9826943a 	slli	r19,r19,16
    a224:	900ed43a 	srli	r7,r18,16
    a228:	d8c00117 	ldw	r3,4(sp)
    a22c:	3cceb03a 	or	r7,r7,r19
    a230:	3880052e 	bgeu	r7,r2,a248 <__udivdi3+0x258>
    a234:	3c4f883a 	add	r7,r7,r17
    a238:	b13fffc4 	addi	r4,r22,-1
    a23c:	3c400136 	bltu	r7,r17,a244 <__udivdi3+0x254>
    a240:	3880e436 	bltu	r7,r2,a5d4 <__udivdi3+0x5e4>
    a244:	202d883a 	mov	r22,r4
    a248:	38a1c83a 	sub	r16,r7,r2
    a24c:	8009883a 	mov	r4,r16
    a250:	a80b883a 	mov	r5,r21
    a254:	d8c00115 	stw	r3,4(sp)
    a258:	00009b40 	call	9b4 <__umodsi3>
    a25c:	1027883a 	mov	r19,r2
    a260:	8009883a 	mov	r4,r16
    a264:	a80b883a 	mov	r5,r21
    a268:	9826943a 	slli	r19,r19,16
    a26c:	00009500 	call	950 <__udivsi3>
    a270:	a00b883a 	mov	r5,r20
    a274:	1009883a 	mov	r4,r2
    a278:	94bfffcc 	andi	r18,r18,65535
    a27c:	1021883a 	mov	r16,r2
    a280:	94e4b03a 	or	r18,r18,r19
    a284:	0000a0c0 	call	a0c <__mulsi3>
    a288:	d8c00117 	ldw	r3,4(sp)
    a28c:	9080052e 	bgeu	r18,r2,a2a4 <__udivdi3+0x2b4>
    a290:	8ca5883a 	add	r18,r17,r18
    a294:	813fffc4 	addi	r4,r16,-1
    a298:	9440ad36 	bltu	r18,r17,a550 <__udivdi3+0x560>
    a29c:	9080ac2e 	bgeu	r18,r2,a550 <__udivdi3+0x560>
    a2a0:	843fff84 	addi	r16,r16,-2
    a2a4:	b004943a 	slli	r2,r22,16
    a2a8:	1404b03a 	or	r2,r2,r16
    a2ac:	00000206 	br	a2b8 <__udivdi3+0x2c8>
    a2b0:	0007883a 	mov	r3,zero
    a2b4:	0005883a 	mov	r2,zero
    a2b8:	dfc00b17 	ldw	ra,44(sp)
    a2bc:	df000a17 	ldw	fp,40(sp)
    a2c0:	ddc00917 	ldw	r23,36(sp)
    a2c4:	dd800817 	ldw	r22,32(sp)
    a2c8:	dd400717 	ldw	r21,28(sp)
    a2cc:	dd000617 	ldw	r20,24(sp)
    a2d0:	dcc00517 	ldw	r19,20(sp)
    a2d4:	dc800417 	ldw	r18,16(sp)
    a2d8:	dc400317 	ldw	r17,12(sp)
    a2dc:	dc000217 	ldw	r16,8(sp)
    a2e0:	dec00c04 	addi	sp,sp,48
    a2e4:	f800283a 	ret
    a2e8:	00803fc4 	movi	r2,255
    a2ec:	11c5803a 	cmpltu	r2,r2,r7
    a2f0:	100490fa 	slli	r2,r2,3
    a2f4:	003f9906 	br	a15c <__alt_mem_Onchip_SRAM+0xf800a15c>
    a2f8:	00803fc4 	movi	r2,255
    a2fc:	1445803a 	cmpltu	r2,r2,r17
    a300:	100490fa 	slli	r2,r2,3
    a304:	003fad06 	br	a1bc <__alt_mem_Onchip_SRAM+0xf800a1bc>
    a308:	00804034 	movhi	r2,256
    a30c:	10bfffc4 	addi	r2,r2,-1
    a310:	11809f36 	bltu	r2,r6,a590 <__udivdi3+0x5a0>
    a314:	00800404 	movi	r2,16
    a318:	003f4c06 	br	a04c <__alt_mem_Onchip_SRAM+0xf800a04c>
    a31c:	3dce983a 	sll	r7,r7,r23
    a320:	30b8d83a 	srl	fp,r6,r2
    a324:	80a2d83a 	srl	r17,r16,r2
    a328:	35cc983a 	sll	r6,r6,r23
    a32c:	3f38b03a 	or	fp,r7,fp
    a330:	e024d43a 	srli	r18,fp,16
    a334:	9884d83a 	srl	r2,r19,r2
    a338:	85e0983a 	sll	r16,r16,r23
    a33c:	8809883a 	mov	r4,r17
    a340:	900b883a 	mov	r5,r18
    a344:	d9800015 	stw	r6,0(sp)
    a348:	1420b03a 	or	r16,r2,r16
    a34c:	00009b40 	call	9b4 <__umodsi3>
    a350:	900b883a 	mov	r5,r18
    a354:	8809883a 	mov	r4,r17
    a358:	1029883a 	mov	r20,r2
    a35c:	e5bfffcc 	andi	r22,fp,65535
    a360:	00009500 	call	950 <__udivsi3>
    a364:	100b883a 	mov	r5,r2
    a368:	b009883a 	mov	r4,r22
    a36c:	102b883a 	mov	r21,r2
    a370:	0000a0c0 	call	a0c <__mulsi3>
    a374:	a028943a 	slli	r20,r20,16
    a378:	8006d43a 	srli	r3,r16,16
    a37c:	1d06b03a 	or	r3,r3,r20
    a380:	1880042e 	bgeu	r3,r2,a394 <__udivdi3+0x3a4>
    a384:	1f07883a 	add	r3,r3,fp
    a388:	a93fffc4 	addi	r4,r21,-1
    a38c:	1f00892e 	bgeu	r3,fp,a5b4 <__udivdi3+0x5c4>
    a390:	202b883a 	mov	r21,r4
    a394:	18a3c83a 	sub	r17,r3,r2
    a398:	8809883a 	mov	r4,r17
    a39c:	900b883a 	mov	r5,r18
    a3a0:	00009b40 	call	9b4 <__umodsi3>
    a3a4:	1029883a 	mov	r20,r2
    a3a8:	8809883a 	mov	r4,r17
    a3ac:	900b883a 	mov	r5,r18
    a3b0:	a028943a 	slli	r20,r20,16
    a3b4:	00009500 	call	950 <__udivsi3>
    a3b8:	100b883a 	mov	r5,r2
    a3bc:	b009883a 	mov	r4,r22
    a3c0:	843fffcc 	andi	r16,r16,65535
    a3c4:	1023883a 	mov	r17,r2
    a3c8:	8520b03a 	or	r16,r16,r20
    a3cc:	0000a0c0 	call	a0c <__mulsi3>
    a3d0:	8080042e 	bgeu	r16,r2,a3e4 <__udivdi3+0x3f4>
    a3d4:	8721883a 	add	r16,r16,fp
    a3d8:	88ffffc4 	addi	r3,r17,-1
    a3dc:	8700712e 	bgeu	r16,fp,a5a4 <__udivdi3+0x5b4>
    a3e0:	1823883a 	mov	r17,r3
    a3e4:	a80e943a 	slli	r7,r21,16
    a3e8:	d8c00017 	ldw	r3,0(sp)
    a3ec:	80a1c83a 	sub	r16,r16,r2
    a3f0:	3c64b03a 	or	r18,r7,r17
    a3f4:	1d3fffcc 	andi	r20,r3,65535
    a3f8:	9022d43a 	srli	r17,r18,16
    a3fc:	95bfffcc 	andi	r22,r18,65535
    a400:	a00b883a 	mov	r5,r20
    a404:	b009883a 	mov	r4,r22
    a408:	182ad43a 	srli	r21,r3,16
    a40c:	0000a0c0 	call	a0c <__mulsi3>
    a410:	a00b883a 	mov	r5,r20
    a414:	8809883a 	mov	r4,r17
    a418:	1039883a 	mov	fp,r2
    a41c:	0000a0c0 	call	a0c <__mulsi3>
    a420:	8809883a 	mov	r4,r17
    a424:	a80b883a 	mov	r5,r21
    a428:	1029883a 	mov	r20,r2
    a42c:	0000a0c0 	call	a0c <__mulsi3>
    a430:	a80b883a 	mov	r5,r21
    a434:	b009883a 	mov	r4,r22
    a438:	1023883a 	mov	r17,r2
    a43c:	0000a0c0 	call	a0c <__mulsi3>
    a440:	e006d43a 	srli	r3,fp,16
    a444:	1505883a 	add	r2,r2,r20
    a448:	1887883a 	add	r3,r3,r2
    a44c:	1d00022e 	bgeu	r3,r20,a458 <__udivdi3+0x468>
    a450:	00800074 	movhi	r2,1
    a454:	88a3883a 	add	r17,r17,r2
    a458:	1804d43a 	srli	r2,r3,16
    a45c:	1463883a 	add	r17,r2,r17
    a460:	84404436 	bltu	r16,r17,a574 <__udivdi3+0x584>
    a464:	84403e26 	beq	r16,r17,a560 <__udivdi3+0x570>
    a468:	9005883a 	mov	r2,r18
    a46c:	0007883a 	mov	r3,zero
    a470:	003f9106 	br	a2b8 <__alt_mem_Onchip_SRAM+0xf800a2b8>
    a474:	88e2983a 	sll	r17,r17,r3
    a478:	80aed83a 	srl	r23,r16,r2
    a47c:	80e0983a 	sll	r16,r16,r3
    a480:	882ad43a 	srli	r21,r17,16
    a484:	9884d83a 	srl	r2,r19,r2
    a488:	b809883a 	mov	r4,r23
    a48c:	a80b883a 	mov	r5,r21
    a490:	98e4983a 	sll	r18,r19,r3
    a494:	142cb03a 	or	r22,r2,r16
    a498:	00009b40 	call	9b4 <__umodsi3>
    a49c:	b809883a 	mov	r4,r23
    a4a0:	a80b883a 	mov	r5,r21
    a4a4:	1027883a 	mov	r19,r2
    a4a8:	8d3fffcc 	andi	r20,r17,65535
    a4ac:	00009500 	call	950 <__udivsi3>
    a4b0:	a009883a 	mov	r4,r20
    a4b4:	100b883a 	mov	r5,r2
    a4b8:	102f883a 	mov	r23,r2
    a4bc:	0000a0c0 	call	a0c <__mulsi3>
    a4c0:	9826943a 	slli	r19,r19,16
    a4c4:	b008d43a 	srli	r4,r22,16
    a4c8:	24c8b03a 	or	r4,r4,r19
    a4cc:	2080062e 	bgeu	r4,r2,a4e8 <__udivdi3+0x4f8>
    a4d0:	2449883a 	add	r4,r4,r17
    a4d4:	b8ffffc4 	addi	r3,r23,-1
    a4d8:	24403c36 	bltu	r4,r17,a5cc <__udivdi3+0x5dc>
    a4dc:	20803b2e 	bgeu	r4,r2,a5cc <__udivdi3+0x5dc>
    a4e0:	bdffff84 	addi	r23,r23,-2
    a4e4:	2449883a 	add	r4,r4,r17
    a4e8:	20a1c83a 	sub	r16,r4,r2
    a4ec:	a80b883a 	mov	r5,r21
    a4f0:	8009883a 	mov	r4,r16
    a4f4:	00009b40 	call	9b4 <__umodsi3>
    a4f8:	a80b883a 	mov	r5,r21
    a4fc:	8009883a 	mov	r4,r16
    a500:	1027883a 	mov	r19,r2
    a504:	00009500 	call	950 <__udivsi3>
    a508:	a009883a 	mov	r4,r20
    a50c:	100b883a 	mov	r5,r2
    a510:	9826943a 	slli	r19,r19,16
    a514:	1039883a 	mov	fp,r2
    a518:	0000a0c0 	call	a0c <__mulsi3>
    a51c:	b13fffcc 	andi	r4,r22,65535
    a520:	24c8b03a 	or	r4,r4,r19
    a524:	2080062e 	bgeu	r4,r2,a540 <__udivdi3+0x550>
    a528:	2449883a 	add	r4,r4,r17
    a52c:	e0ffffc4 	addi	r3,fp,-1
    a530:	24402436 	bltu	r4,r17,a5c4 <__udivdi3+0x5d4>
    a534:	2080232e 	bgeu	r4,r2,a5c4 <__udivdi3+0x5d4>
    a538:	e73fff84 	addi	fp,fp,-2
    a53c:	2449883a 	add	r4,r4,r17
    a540:	b82e943a 	slli	r23,r23,16
    a544:	20a1c83a 	sub	r16,r4,r2
    a548:	bf06b03a 	or	r3,r23,fp
    a54c:	003f2806 	br	a1f0 <__alt_mem_Onchip_SRAM+0xf800a1f0>
    a550:	2021883a 	mov	r16,r4
    a554:	003f5306 	br	a2a4 <__alt_mem_Onchip_SRAM+0xf800a2a4>
    a558:	1821883a 	mov	r16,r3
    a55c:	003ef406 	br	a130 <__alt_mem_Onchip_SRAM+0xf800a130>
    a560:	1806943a 	slli	r3,r3,16
    a564:	9de6983a 	sll	r19,r19,r23
    a568:	e73fffcc 	andi	fp,fp,65535
    a56c:	1f07883a 	add	r3,r3,fp
    a570:	98ffbd2e 	bgeu	r19,r3,a468 <__alt_mem_Onchip_SRAM+0xf800a468>
    a574:	90bfffc4 	addi	r2,r18,-1
    a578:	0007883a 	mov	r3,zero
    a57c:	003f4e06 	br	a2b8 <__alt_mem_Onchip_SRAM+0xf800a2b8>
    a580:	00800604 	movi	r2,24
    a584:	003ef506 	br	a15c <__alt_mem_Onchip_SRAM+0xf800a15c>
    a588:	00800604 	movi	r2,24
    a58c:	003f0b06 	br	a1bc <__alt_mem_Onchip_SRAM+0xf800a1bc>
    a590:	00800604 	movi	r2,24
    a594:	003ead06 	br	a04c <__alt_mem_Onchip_SRAM+0xf800a04c>
    a598:	0007883a 	mov	r3,zero
    a59c:	00800044 	movi	r2,1
    a5a0:	003f4506 	br	a2b8 <__alt_mem_Onchip_SRAM+0xf800a2b8>
    a5a4:	80bf8e2e 	bgeu	r16,r2,a3e0 <__alt_mem_Onchip_SRAM+0xf800a3e0>
    a5a8:	8c7fff84 	addi	r17,r17,-2
    a5ac:	8721883a 	add	r16,r16,fp
    a5b0:	003f8c06 	br	a3e4 <__alt_mem_Onchip_SRAM+0xf800a3e4>
    a5b4:	18bf762e 	bgeu	r3,r2,a390 <__alt_mem_Onchip_SRAM+0xf800a390>
    a5b8:	ad7fff84 	addi	r21,r21,-2
    a5bc:	1f07883a 	add	r3,r3,fp
    a5c0:	003f7406 	br	a394 <__alt_mem_Onchip_SRAM+0xf800a394>
    a5c4:	1839883a 	mov	fp,r3
    a5c8:	003fdd06 	br	a540 <__alt_mem_Onchip_SRAM+0xf800a540>
    a5cc:	182f883a 	mov	r23,r3
    a5d0:	003fc506 	br	a4e8 <__alt_mem_Onchip_SRAM+0xf800a4e8>
    a5d4:	b5bfff84 	addi	r22,r22,-2
    a5d8:	3c4f883a 	add	r7,r7,r17
    a5dc:	003f1a06 	br	a248 <__alt_mem_Onchip_SRAM+0xf800a248>
    a5e0:	b5bfff84 	addi	r22,r22,-2
    a5e4:	1c47883a 	add	r3,r3,r17
    a5e8:	003ebc06 	br	a0dc <__alt_mem_Onchip_SRAM+0xf800a0dc>

0000a5ec <__umoddi3>:
    a5ec:	defff304 	addi	sp,sp,-52
    a5f0:	df000b15 	stw	fp,44(sp)
    a5f4:	dc400415 	stw	r17,16(sp)
    a5f8:	dc000315 	stw	r16,12(sp)
    a5fc:	dfc00c15 	stw	ra,48(sp)
    a600:	ddc00a15 	stw	r23,40(sp)
    a604:	dd800915 	stw	r22,36(sp)
    a608:	dd400815 	stw	r21,32(sp)
    a60c:	dd000715 	stw	r20,28(sp)
    a610:	dcc00615 	stw	r19,24(sp)
    a614:	dc800515 	stw	r18,20(sp)
    a618:	2021883a 	mov	r16,r4
    a61c:	2823883a 	mov	r17,r5
    a620:	2839883a 	mov	fp,r5
    a624:	3800401e 	bne	r7,zero,a728 <__umoddi3+0x13c>
    a628:	3027883a 	mov	r19,r6
    a62c:	2029883a 	mov	r20,r4
    a630:	2980552e 	bgeu	r5,r6,a788 <__umoddi3+0x19c>
    a634:	00bfffd4 	movui	r2,65535
    a638:	1180a236 	bltu	r2,r6,a8c4 <__umoddi3+0x2d8>
    a63c:	01003fc4 	movi	r4,255
    a640:	2189803a 	cmpltu	r4,r4,r6
    a644:	200890fa 	slli	r4,r4,3
    a648:	3104d83a 	srl	r2,r6,r4
    a64c:	00c00074 	movhi	r3,1
    a650:	18c0ca44 	addi	r3,r3,809
    a654:	1885883a 	add	r2,r3,r2
    a658:	10c00003 	ldbu	r3,0(r2)
    a65c:	00800804 	movi	r2,32
    a660:	1909883a 	add	r4,r3,r4
    a664:	1125c83a 	sub	r18,r2,r4
    a668:	90000526 	beq	r18,zero,a680 <__umoddi3+0x94>
    a66c:	8ca2983a 	sll	r17,r17,r18
    a670:	8108d83a 	srl	r4,r16,r4
    a674:	34a6983a 	sll	r19,r6,r18
    a678:	84a8983a 	sll	r20,r16,r18
    a67c:	2478b03a 	or	fp,r4,r17
    a680:	982cd43a 	srli	r22,r19,16
    a684:	e009883a 	mov	r4,fp
    a688:	9dffffcc 	andi	r23,r19,65535
    a68c:	b00b883a 	mov	r5,r22
    a690:	00009b40 	call	9b4 <__umodsi3>
    a694:	b00b883a 	mov	r5,r22
    a698:	e009883a 	mov	r4,fp
    a69c:	102b883a 	mov	r21,r2
    a6a0:	00009500 	call	950 <__udivsi3>
    a6a4:	100b883a 	mov	r5,r2
    a6a8:	b809883a 	mov	r4,r23
    a6ac:	0000a0c0 	call	a0c <__mulsi3>
    a6b0:	a82a943a 	slli	r21,r21,16
    a6b4:	a006d43a 	srli	r3,r20,16
    a6b8:	1d46b03a 	or	r3,r3,r21
    a6bc:	1880032e 	bgeu	r3,r2,a6cc <__umoddi3+0xe0>
    a6c0:	1cc7883a 	add	r3,r3,r19
    a6c4:	1cc00136 	bltu	r3,r19,a6cc <__umoddi3+0xe0>
    a6c8:	18813136 	bltu	r3,r2,ab90 <__umoddi3+0x5a4>
    a6cc:	18a1c83a 	sub	r16,r3,r2
    a6d0:	b00b883a 	mov	r5,r22
    a6d4:	8009883a 	mov	r4,r16
    a6d8:	00009b40 	call	9b4 <__umodsi3>
    a6dc:	b00b883a 	mov	r5,r22
    a6e0:	8009883a 	mov	r4,r16
    a6e4:	1023883a 	mov	r17,r2
    a6e8:	00009500 	call	950 <__udivsi3>
    a6ec:	100b883a 	mov	r5,r2
    a6f0:	b809883a 	mov	r4,r23
    a6f4:	8822943a 	slli	r17,r17,16
    a6f8:	0000a0c0 	call	a0c <__mulsi3>
    a6fc:	a0ffffcc 	andi	r3,r20,65535
    a700:	1c46b03a 	or	r3,r3,r17
    a704:	1880042e 	bgeu	r3,r2,a718 <__umoddi3+0x12c>
    a708:	1cc7883a 	add	r3,r3,r19
    a70c:	1cc00236 	bltu	r3,r19,a718 <__umoddi3+0x12c>
    a710:	1880012e 	bgeu	r3,r2,a718 <__umoddi3+0x12c>
    a714:	1cc7883a 	add	r3,r3,r19
    a718:	1885c83a 	sub	r2,r3,r2
    a71c:	1484d83a 	srl	r2,r2,r18
    a720:	0007883a 	mov	r3,zero
    a724:	00005306 	br	a874 <__umoddi3+0x288>
    a728:	29c05036 	bltu	r5,r7,a86c <__umoddi3+0x280>
    a72c:	00bfffd4 	movui	r2,65535
    a730:	11c05c2e 	bgeu	r2,r7,a8a4 <__umoddi3+0x2b8>
    a734:	00804034 	movhi	r2,256
    a738:	10bfffc4 	addi	r2,r2,-1
    a73c:	11c10636 	bltu	r2,r7,ab58 <__umoddi3+0x56c>
    a740:	01000404 	movi	r4,16
    a744:	3904d83a 	srl	r2,r7,r4
    a748:	00c00074 	movhi	r3,1
    a74c:	18c0ca44 	addi	r3,r3,809
    a750:	1885883a 	add	r2,r3,r2
    a754:	14c00003 	ldbu	r19,0(r2)
    a758:	00c00804 	movi	r3,32
    a75c:	9927883a 	add	r19,r19,r4
    a760:	1ce9c83a 	sub	r20,r3,r19
    a764:	a0005c1e 	bne	r20,zero,a8d8 <__umoddi3+0x2ec>
    a768:	3c400136 	bltu	r7,r17,a770 <__umoddi3+0x184>
    a76c:	81810a36 	bltu	r16,r6,ab98 <__umoddi3+0x5ac>
    a770:	8185c83a 	sub	r2,r16,r6
    a774:	89e3c83a 	sub	r17,r17,r7
    a778:	8089803a 	cmpltu	r4,r16,r2
    a77c:	8939c83a 	sub	fp,r17,r4
    a780:	e007883a 	mov	r3,fp
    a784:	00003b06 	br	a874 <__umoddi3+0x288>
    a788:	3000041e 	bne	r6,zero,a79c <__umoddi3+0x1b0>
    a78c:	000b883a 	mov	r5,zero
    a790:	01000044 	movi	r4,1
    a794:	00009500 	call	950 <__udivsi3>
    a798:	1027883a 	mov	r19,r2
    a79c:	00bfffd4 	movui	r2,65535
    a7a0:	14c0442e 	bgeu	r2,r19,a8b4 <__umoddi3+0x2c8>
    a7a4:	00804034 	movhi	r2,256
    a7a8:	10bfffc4 	addi	r2,r2,-1
    a7ac:	14c0ec36 	bltu	r2,r19,ab60 <__umoddi3+0x574>
    a7b0:	00800404 	movi	r2,16
    a7b4:	9886d83a 	srl	r3,r19,r2
    a7b8:	01000074 	movhi	r4,1
    a7bc:	2100ca44 	addi	r4,r4,809
    a7c0:	20c7883a 	add	r3,r4,r3
    a7c4:	18c00003 	ldbu	r3,0(r3)
    a7c8:	1887883a 	add	r3,r3,r2
    a7cc:	00800804 	movi	r2,32
    a7d0:	10e5c83a 	sub	r18,r2,r3
    a7d4:	9000ab1e 	bne	r18,zero,aa84 <__umoddi3+0x498>
    a7d8:	982cd43a 	srli	r22,r19,16
    a7dc:	8ce3c83a 	sub	r17,r17,r19
    a7e0:	9dffffcc 	andi	r23,r19,65535
    a7e4:	b00b883a 	mov	r5,r22
    a7e8:	8809883a 	mov	r4,r17
    a7ec:	00009b40 	call	9b4 <__umodsi3>
    a7f0:	b00b883a 	mov	r5,r22
    a7f4:	8809883a 	mov	r4,r17
    a7f8:	102b883a 	mov	r21,r2
    a7fc:	00009500 	call	950 <__udivsi3>
    a800:	b80b883a 	mov	r5,r23
    a804:	1009883a 	mov	r4,r2
    a808:	0000a0c0 	call	a0c <__mulsi3>
    a80c:	a82a943a 	slli	r21,r21,16
    a810:	a006d43a 	srli	r3,r20,16
    a814:	1d46b03a 	or	r3,r3,r21
    a818:	1880042e 	bgeu	r3,r2,a82c <__umoddi3+0x240>
    a81c:	1cc7883a 	add	r3,r3,r19
    a820:	1cc00236 	bltu	r3,r19,a82c <__umoddi3+0x240>
    a824:	1880012e 	bgeu	r3,r2,a82c <__umoddi3+0x240>
    a828:	1cc7883a 	add	r3,r3,r19
    a82c:	18a1c83a 	sub	r16,r3,r2
    a830:	b00b883a 	mov	r5,r22
    a834:	8009883a 	mov	r4,r16
    a838:	00009b40 	call	9b4 <__umodsi3>
    a83c:	1023883a 	mov	r17,r2
    a840:	b00b883a 	mov	r5,r22
    a844:	8009883a 	mov	r4,r16
    a848:	00009500 	call	950 <__udivsi3>
    a84c:	8822943a 	slli	r17,r17,16
    a850:	b80b883a 	mov	r5,r23
    a854:	1009883a 	mov	r4,r2
    a858:	0000a0c0 	call	a0c <__mulsi3>
    a85c:	a53fffcc 	andi	r20,r20,65535
    a860:	a446b03a 	or	r3,r20,r17
    a864:	18bfac2e 	bgeu	r3,r2,a718 <__alt_mem_Onchip_SRAM+0xf800a718>
    a868:	003fa706 	br	a708 <__alt_mem_Onchip_SRAM+0xf800a708>
    a86c:	2005883a 	mov	r2,r4
    a870:	2807883a 	mov	r3,r5
    a874:	dfc00c17 	ldw	ra,48(sp)
    a878:	df000b17 	ldw	fp,44(sp)
    a87c:	ddc00a17 	ldw	r23,40(sp)
    a880:	dd800917 	ldw	r22,36(sp)
    a884:	dd400817 	ldw	r21,32(sp)
    a888:	dd000717 	ldw	r20,28(sp)
    a88c:	dcc00617 	ldw	r19,24(sp)
    a890:	dc800517 	ldw	r18,20(sp)
    a894:	dc400417 	ldw	r17,16(sp)
    a898:	dc000317 	ldw	r16,12(sp)
    a89c:	dec00d04 	addi	sp,sp,52
    a8a0:	f800283a 	ret
    a8a4:	04c03fc4 	movi	r19,255
    a8a8:	99c9803a 	cmpltu	r4,r19,r7
    a8ac:	200890fa 	slli	r4,r4,3
    a8b0:	003fa406 	br	a744 <__alt_mem_Onchip_SRAM+0xf800a744>
    a8b4:	00803fc4 	movi	r2,255
    a8b8:	14c5803a 	cmpltu	r2,r2,r19
    a8bc:	100490fa 	slli	r2,r2,3
    a8c0:	003fbc06 	br	a7b4 <__alt_mem_Onchip_SRAM+0xf800a7b4>
    a8c4:	00804034 	movhi	r2,256
    a8c8:	10bfffc4 	addi	r2,r2,-1
    a8cc:	1180a636 	bltu	r2,r6,ab68 <__umoddi3+0x57c>
    a8d0:	01000404 	movi	r4,16
    a8d4:	003f5c06 	br	a648 <__alt_mem_Onchip_SRAM+0xf800a648>
    a8d8:	3d0e983a 	sll	r7,r7,r20
    a8dc:	34ead83a 	srl	r21,r6,r19
    a8e0:	8cc6d83a 	srl	r3,r17,r19
    a8e4:	8d10983a 	sll	r8,r17,r20
    a8e8:	3d6ab03a 	or	r21,r7,r21
    a8ec:	a82cd43a 	srli	r22,r21,16
    a8f0:	84e2d83a 	srl	r17,r16,r19
    a8f4:	1809883a 	mov	r4,r3
    a8f8:	b00b883a 	mov	r5,r22
    a8fc:	8a22b03a 	or	r17,r17,r8
    a900:	3524983a 	sll	r18,r6,r20
    a904:	dc400015 	stw	r17,0(sp)
    a908:	d8c00115 	stw	r3,4(sp)
    a90c:	00009b40 	call	9b4 <__umodsi3>
    a910:	d8c00117 	ldw	r3,4(sp)
    a914:	b00b883a 	mov	r5,r22
    a918:	1039883a 	mov	fp,r2
    a91c:	1809883a 	mov	r4,r3
    a920:	00009500 	call	950 <__udivsi3>
    a924:	adffffcc 	andi	r23,r21,65535
    a928:	100b883a 	mov	r5,r2
    a92c:	b809883a 	mov	r4,r23
    a930:	1023883a 	mov	r17,r2
    a934:	0000a0c0 	call	a0c <__mulsi3>
    a938:	d9400017 	ldw	r5,0(sp)
    a93c:	e008943a 	slli	r4,fp,16
    a940:	8520983a 	sll	r16,r16,r20
    a944:	2806d43a 	srli	r3,r5,16
    a948:	1906b03a 	or	r3,r3,r4
    a94c:	1880042e 	bgeu	r3,r2,a960 <__umoddi3+0x374>
    a950:	1d47883a 	add	r3,r3,r21
    a954:	893fffc4 	addi	r4,r17,-1
    a958:	1d40892e 	bgeu	r3,r21,ab80 <__umoddi3+0x594>
    a95c:	2023883a 	mov	r17,r4
    a960:	18b9c83a 	sub	fp,r3,r2
    a964:	b00b883a 	mov	r5,r22
    a968:	e009883a 	mov	r4,fp
    a96c:	00009b40 	call	9b4 <__umodsi3>
    a970:	b00b883a 	mov	r5,r22
    a974:	e009883a 	mov	r4,fp
    a978:	d8800215 	stw	r2,8(sp)
    a97c:	00009500 	call	950 <__udivsi3>
    a980:	100b883a 	mov	r5,r2
    a984:	b809883a 	mov	r4,r23
    a988:	102d883a 	mov	r22,r2
    a98c:	0000a0c0 	call	a0c <__mulsi3>
    a990:	d9800217 	ldw	r6,8(sp)
    a994:	d8c00017 	ldw	r3,0(sp)
    a998:	300c943a 	slli	r6,r6,16
    a99c:	1a3fffcc 	andi	r8,r3,65535
    a9a0:	4190b03a 	or	r8,r8,r6
    a9a4:	4080042e 	bgeu	r8,r2,a9b8 <__umoddi3+0x3cc>
    a9a8:	4551883a 	add	r8,r8,r21
    a9ac:	b0ffffc4 	addi	r3,r22,-1
    a9b0:	45406f2e 	bgeu	r8,r21,ab70 <__umoddi3+0x584>
    a9b4:	182d883a 	mov	r22,r3
    a9b8:	880e943a 	slli	r7,r17,16
    a9bc:	9006d43a 	srli	r3,r18,16
    a9c0:	91bfffcc 	andi	r6,r18,65535
    a9c4:	3dacb03a 	or	r22,r7,r22
    a9c8:	b02ed43a 	srli	r23,r22,16
    a9cc:	b5bfffcc 	andi	r22,r22,65535
    a9d0:	300b883a 	mov	r5,r6
    a9d4:	b009883a 	mov	r4,r22
    a9d8:	40a3c83a 	sub	r17,r8,r2
    a9dc:	d8c00115 	stw	r3,4(sp)
    a9e0:	d9800215 	stw	r6,8(sp)
    a9e4:	0000a0c0 	call	a0c <__mulsi3>
    a9e8:	d9800217 	ldw	r6,8(sp)
    a9ec:	b809883a 	mov	r4,r23
    a9f0:	1039883a 	mov	fp,r2
    a9f4:	300b883a 	mov	r5,r6
    a9f8:	0000a0c0 	call	a0c <__mulsi3>
    a9fc:	d8c00117 	ldw	r3,4(sp)
    aa00:	b809883a 	mov	r4,r23
    aa04:	d8800215 	stw	r2,8(sp)
    aa08:	180b883a 	mov	r5,r3
    aa0c:	0000a0c0 	call	a0c <__mulsi3>
    aa10:	d8c00117 	ldw	r3,4(sp)
    aa14:	b009883a 	mov	r4,r22
    aa18:	102f883a 	mov	r23,r2
    aa1c:	180b883a 	mov	r5,r3
    aa20:	0000a0c0 	call	a0c <__mulsi3>
    aa24:	d9800217 	ldw	r6,8(sp)
    aa28:	e006d43a 	srli	r3,fp,16
    aa2c:	1185883a 	add	r2,r2,r6
    aa30:	1885883a 	add	r2,r3,r2
    aa34:	1180022e 	bgeu	r2,r6,aa40 <__umoddi3+0x454>
    aa38:	00c00074 	movhi	r3,1
    aa3c:	b8ef883a 	add	r23,r23,r3
    aa40:	1006d43a 	srli	r3,r2,16
    aa44:	1004943a 	slli	r2,r2,16
    aa48:	e73fffcc 	andi	fp,fp,65535
    aa4c:	1dc7883a 	add	r3,r3,r23
    aa50:	1739883a 	add	fp,r2,fp
    aa54:	88c03a36 	bltu	r17,r3,ab40 <__umoddi3+0x554>
    aa58:	88c05126 	beq	r17,r3,aba0 <__umoddi3+0x5b4>
    aa5c:	88c9c83a 	sub	r4,r17,r3
    aa60:	e00f883a 	mov	r7,fp
    aa64:	81cfc83a 	sub	r7,r16,r7
    aa68:	81c7803a 	cmpltu	r3,r16,r7
    aa6c:	20c7c83a 	sub	r3,r4,r3
    aa70:	1cc4983a 	sll	r2,r3,r19
    aa74:	3d0ed83a 	srl	r7,r7,r20
    aa78:	1d06d83a 	srl	r3,r3,r20
    aa7c:	11c4b03a 	or	r2,r2,r7
    aa80:	003f7c06 	br	a874 <__alt_mem_Onchip_SRAM+0xf800a874>
    aa84:	9ca6983a 	sll	r19,r19,r18
    aa88:	88f8d83a 	srl	fp,r17,r3
    aa8c:	80c4d83a 	srl	r2,r16,r3
    aa90:	982cd43a 	srli	r22,r19,16
    aa94:	8ca2983a 	sll	r17,r17,r18
    aa98:	e009883a 	mov	r4,fp
    aa9c:	b00b883a 	mov	r5,r22
    aaa0:	146ab03a 	or	r21,r2,r17
    aaa4:	00009b40 	call	9b4 <__umodsi3>
    aaa8:	b00b883a 	mov	r5,r22
    aaac:	e009883a 	mov	r4,fp
    aab0:	1029883a 	mov	r20,r2
    aab4:	9dffffcc 	andi	r23,r19,65535
    aab8:	00009500 	call	950 <__udivsi3>
    aabc:	b809883a 	mov	r4,r23
    aac0:	100b883a 	mov	r5,r2
    aac4:	0000a0c0 	call	a0c <__mulsi3>
    aac8:	a008943a 	slli	r4,r20,16
    aacc:	a806d43a 	srli	r3,r21,16
    aad0:	84a8983a 	sll	r20,r16,r18
    aad4:	1906b03a 	or	r3,r3,r4
    aad8:	1880042e 	bgeu	r3,r2,aaec <__umoddi3+0x500>
    aadc:	1cc7883a 	add	r3,r3,r19
    aae0:	1cc00236 	bltu	r3,r19,aaec <__umoddi3+0x500>
    aae4:	1880012e 	bgeu	r3,r2,aaec <__umoddi3+0x500>
    aae8:	1cc7883a 	add	r3,r3,r19
    aaec:	18a3c83a 	sub	r17,r3,r2
    aaf0:	b00b883a 	mov	r5,r22
    aaf4:	8809883a 	mov	r4,r17
    aaf8:	00009b40 	call	9b4 <__umodsi3>
    aafc:	b00b883a 	mov	r5,r22
    ab00:	8809883a 	mov	r4,r17
    ab04:	1021883a 	mov	r16,r2
    ab08:	00009500 	call	950 <__udivsi3>
    ab0c:	100b883a 	mov	r5,r2
    ab10:	b809883a 	mov	r4,r23
    ab14:	8020943a 	slli	r16,r16,16
    ab18:	0000a0c0 	call	a0c <__mulsi3>
    ab1c:	a8ffffcc 	andi	r3,r21,65535
    ab20:	1c06b03a 	or	r3,r3,r16
    ab24:	1880042e 	bgeu	r3,r2,ab38 <__umoddi3+0x54c>
    ab28:	1cc7883a 	add	r3,r3,r19
    ab2c:	1cc00236 	bltu	r3,r19,ab38 <__umoddi3+0x54c>
    ab30:	1880012e 	bgeu	r3,r2,ab38 <__umoddi3+0x54c>
    ab34:	1cc7883a 	add	r3,r3,r19
    ab38:	18a3c83a 	sub	r17,r3,r2
    ab3c:	003f2906 	br	a7e4 <__alt_mem_Onchip_SRAM+0xf800a7e4>
    ab40:	e48fc83a 	sub	r7,fp,r18
    ab44:	1d49c83a 	sub	r4,r3,r21
    ab48:	e1f9803a 	cmpltu	fp,fp,r7
    ab4c:	2739c83a 	sub	fp,r4,fp
    ab50:	8f09c83a 	sub	r4,r17,fp
    ab54:	003fc306 	br	aa64 <__alt_mem_Onchip_SRAM+0xf800aa64>
    ab58:	01000604 	movi	r4,24
    ab5c:	003ef906 	br	a744 <__alt_mem_Onchip_SRAM+0xf800a744>
    ab60:	00800604 	movi	r2,24
    ab64:	003f1306 	br	a7b4 <__alt_mem_Onchip_SRAM+0xf800a7b4>
    ab68:	01000604 	movi	r4,24
    ab6c:	003eb606 	br	a648 <__alt_mem_Onchip_SRAM+0xf800a648>
    ab70:	40bf902e 	bgeu	r8,r2,a9b4 <__alt_mem_Onchip_SRAM+0xf800a9b4>
    ab74:	b5bfff84 	addi	r22,r22,-2
    ab78:	4551883a 	add	r8,r8,r21
    ab7c:	003f8e06 	br	a9b8 <__alt_mem_Onchip_SRAM+0xf800a9b8>
    ab80:	18bf762e 	bgeu	r3,r2,a95c <__alt_mem_Onchip_SRAM+0xf800a95c>
    ab84:	8c7fff84 	addi	r17,r17,-2
    ab88:	1d47883a 	add	r3,r3,r21
    ab8c:	003f7406 	br	a960 <__alt_mem_Onchip_SRAM+0xf800a960>
    ab90:	1cc7883a 	add	r3,r3,r19
    ab94:	003ecd06 	br	a6cc <__alt_mem_Onchip_SRAM+0xf800a6cc>
    ab98:	8005883a 	mov	r2,r16
    ab9c:	003ef806 	br	a780 <__alt_mem_Onchip_SRAM+0xf800a780>
    aba0:	873fe736 	bltu	r16,fp,ab40 <__alt_mem_Onchip_SRAM+0xf800ab40>
    aba4:	e00f883a 	mov	r7,fp
    aba8:	0009883a 	mov	r4,zero
    abac:	003fad06 	br	aa64 <__alt_mem_Onchip_SRAM+0xf800aa64>

0000abb0 <__adddf3>:
    abb0:	02c00434 	movhi	r11,16
    abb4:	5affffc4 	addi	r11,r11,-1
    abb8:	2806d7fa 	srli	r3,r5,31
    abbc:	2ad4703a 	and	r10,r5,r11
    abc0:	3ad2703a 	and	r9,r7,r11
    abc4:	3804d53a 	srli	r2,r7,20
    abc8:	3018d77a 	srli	r12,r6,29
    abcc:	280ad53a 	srli	r5,r5,20
    abd0:	501490fa 	slli	r10,r10,3
    abd4:	2010d77a 	srli	r8,r4,29
    abd8:	481290fa 	slli	r9,r9,3
    abdc:	380ed7fa 	srli	r7,r7,31
    abe0:	defffb04 	addi	sp,sp,-20
    abe4:	dc800215 	stw	r18,8(sp)
    abe8:	dc400115 	stw	r17,4(sp)
    abec:	dc000015 	stw	r16,0(sp)
    abf0:	dfc00415 	stw	ra,16(sp)
    abf4:	dcc00315 	stw	r19,12(sp)
    abf8:	1c803fcc 	andi	r18,r3,255
    abfc:	2c01ffcc 	andi	r16,r5,2047
    ac00:	5210b03a 	or	r8,r10,r8
    ac04:	202290fa 	slli	r17,r4,3
    ac08:	1081ffcc 	andi	r2,r2,2047
    ac0c:	4b12b03a 	or	r9,r9,r12
    ac10:	300c90fa 	slli	r6,r6,3
    ac14:	91c07526 	beq	r18,r7,adec <__adddf3+0x23c>
    ac18:	8087c83a 	sub	r3,r16,r2
    ac1c:	00c0ab0e 	bge	zero,r3,aecc <__adddf3+0x31c>
    ac20:	10002a1e 	bne	r2,zero,accc <__adddf3+0x11c>
    ac24:	4984b03a 	or	r2,r9,r6
    ac28:	1000961e 	bne	r2,zero,ae84 <__adddf3+0x2d4>
    ac2c:	888001cc 	andi	r2,r17,7
    ac30:	10000726 	beq	r2,zero,ac50 <__adddf3+0xa0>
    ac34:	888003cc 	andi	r2,r17,15
    ac38:	00c00104 	movi	r3,4
    ac3c:	10c00426 	beq	r2,r3,ac50 <__adddf3+0xa0>
    ac40:	88c7883a 	add	r3,r17,r3
    ac44:	1c63803a 	cmpltu	r17,r3,r17
    ac48:	4451883a 	add	r8,r8,r17
    ac4c:	1823883a 	mov	r17,r3
    ac50:	4080202c 	andhi	r2,r8,128
    ac54:	10005926 	beq	r2,zero,adbc <__adddf3+0x20c>
    ac58:	84000044 	addi	r16,r16,1
    ac5c:	0081ffc4 	movi	r2,2047
    ac60:	8080ba26 	beq	r16,r2,af4c <__adddf3+0x39c>
    ac64:	00bfe034 	movhi	r2,65408
    ac68:	10bfffc4 	addi	r2,r2,-1
    ac6c:	4090703a 	and	r8,r8,r2
    ac70:	4004977a 	slli	r2,r8,29
    ac74:	4010927a 	slli	r8,r8,9
    ac78:	8822d0fa 	srli	r17,r17,3
    ac7c:	8401ffcc 	andi	r16,r16,2047
    ac80:	4010d33a 	srli	r8,r8,12
    ac84:	9007883a 	mov	r3,r18
    ac88:	1444b03a 	or	r2,r2,r17
    ac8c:	8401ffcc 	andi	r16,r16,2047
    ac90:	8020953a 	slli	r16,r16,20
    ac94:	18c03fcc 	andi	r3,r3,255
    ac98:	01000434 	movhi	r4,16
    ac9c:	213fffc4 	addi	r4,r4,-1
    aca0:	180697fa 	slli	r3,r3,31
    aca4:	4110703a 	and	r8,r8,r4
    aca8:	4410b03a 	or	r8,r8,r16
    acac:	40c6b03a 	or	r3,r8,r3
    acb0:	dfc00417 	ldw	ra,16(sp)
    acb4:	dcc00317 	ldw	r19,12(sp)
    acb8:	dc800217 	ldw	r18,8(sp)
    acbc:	dc400117 	ldw	r17,4(sp)
    acc0:	dc000017 	ldw	r16,0(sp)
    acc4:	dec00504 	addi	sp,sp,20
    acc8:	f800283a 	ret
    accc:	0081ffc4 	movi	r2,2047
    acd0:	80bfd626 	beq	r16,r2,ac2c <__alt_mem_Onchip_SRAM+0xf800ac2c>
    acd4:	4a402034 	orhi	r9,r9,128
    acd8:	00800e04 	movi	r2,56
    acdc:	10c09f16 	blt	r2,r3,af5c <__adddf3+0x3ac>
    ace0:	008007c4 	movi	r2,31
    ace4:	10c0c216 	blt	r2,r3,aff0 <__adddf3+0x440>
    ace8:	00800804 	movi	r2,32
    acec:	10c5c83a 	sub	r2,r2,r3
    acf0:	488a983a 	sll	r5,r9,r2
    acf4:	30c8d83a 	srl	r4,r6,r3
    acf8:	3084983a 	sll	r2,r6,r2
    acfc:	48c6d83a 	srl	r3,r9,r3
    ad00:	290cb03a 	or	r6,r5,r4
    ad04:	1004c03a 	cmpne	r2,r2,zero
    ad08:	308cb03a 	or	r6,r6,r2
    ad0c:	898dc83a 	sub	r6,r17,r6
    ad10:	89a3803a 	cmpltu	r17,r17,r6
    ad14:	40d1c83a 	sub	r8,r8,r3
    ad18:	4451c83a 	sub	r8,r8,r17
    ad1c:	3023883a 	mov	r17,r6
    ad20:	4080202c 	andhi	r2,r8,128
    ad24:	10002326 	beq	r2,zero,adb4 <__adddf3+0x204>
    ad28:	04c02034 	movhi	r19,128
    ad2c:	9cffffc4 	addi	r19,r19,-1
    ad30:	44e6703a 	and	r19,r8,r19
    ad34:	98007626 	beq	r19,zero,af10 <__adddf3+0x360>
    ad38:	9809883a 	mov	r4,r19
    ad3c:	0000bc80 	call	bc8 <__clzsi2>
    ad40:	10fffe04 	addi	r3,r2,-8
    ad44:	010007c4 	movi	r4,31
    ad48:	20c07716 	blt	r4,r3,af28 <__adddf3+0x378>
    ad4c:	00800804 	movi	r2,32
    ad50:	10c5c83a 	sub	r2,r2,r3
    ad54:	8884d83a 	srl	r2,r17,r2
    ad58:	98d0983a 	sll	r8,r19,r3
    ad5c:	88e2983a 	sll	r17,r17,r3
    ad60:	1204b03a 	or	r2,r2,r8
    ad64:	1c007416 	blt	r3,r16,af38 <__adddf3+0x388>
    ad68:	1c21c83a 	sub	r16,r3,r16
    ad6c:	82000044 	addi	r8,r16,1
    ad70:	00c007c4 	movi	r3,31
    ad74:	1a009116 	blt	r3,r8,afbc <__adddf3+0x40c>
    ad78:	00c00804 	movi	r3,32
    ad7c:	1a07c83a 	sub	r3,r3,r8
    ad80:	8a08d83a 	srl	r4,r17,r8
    ad84:	88e2983a 	sll	r17,r17,r3
    ad88:	10c6983a 	sll	r3,r2,r3
    ad8c:	1210d83a 	srl	r8,r2,r8
    ad90:	8804c03a 	cmpne	r2,r17,zero
    ad94:	1906b03a 	or	r3,r3,r4
    ad98:	18a2b03a 	or	r17,r3,r2
    ad9c:	0021883a 	mov	r16,zero
    ada0:	003fa206 	br	ac2c <__alt_mem_Onchip_SRAM+0xf800ac2c>
    ada4:	1890b03a 	or	r8,r3,r2
    ada8:	40017d26 	beq	r8,zero,b3a0 <__adddf3+0x7f0>
    adac:	1011883a 	mov	r8,r2
    adb0:	1823883a 	mov	r17,r3
    adb4:	888001cc 	andi	r2,r17,7
    adb8:	103f9e1e 	bne	r2,zero,ac34 <__alt_mem_Onchip_SRAM+0xf800ac34>
    adbc:	4004977a 	slli	r2,r8,29
    adc0:	8822d0fa 	srli	r17,r17,3
    adc4:	4010d0fa 	srli	r8,r8,3
    adc8:	9007883a 	mov	r3,r18
    adcc:	1444b03a 	or	r2,r2,r17
    add0:	0101ffc4 	movi	r4,2047
    add4:	81002426 	beq	r16,r4,ae68 <__adddf3+0x2b8>
    add8:	8120703a 	and	r16,r16,r4
    addc:	01000434 	movhi	r4,16
    ade0:	213fffc4 	addi	r4,r4,-1
    ade4:	4110703a 	and	r8,r8,r4
    ade8:	003fa806 	br	ac8c <__alt_mem_Onchip_SRAM+0xf800ac8c>
    adec:	8089c83a 	sub	r4,r16,r2
    adf0:	01005e0e 	bge	zero,r4,af6c <__adddf3+0x3bc>
    adf4:	10002b26 	beq	r2,zero,aea4 <__adddf3+0x2f4>
    adf8:	0081ffc4 	movi	r2,2047
    adfc:	80bf8b26 	beq	r16,r2,ac2c <__alt_mem_Onchip_SRAM+0xf800ac2c>
    ae00:	4a402034 	orhi	r9,r9,128
    ae04:	00800e04 	movi	r2,56
    ae08:	1100a40e 	bge	r2,r4,b09c <__adddf3+0x4ec>
    ae0c:	498cb03a 	or	r6,r9,r6
    ae10:	300ac03a 	cmpne	r5,r6,zero
    ae14:	0013883a 	mov	r9,zero
    ae18:	2c4b883a 	add	r5,r5,r17
    ae1c:	2c63803a 	cmpltu	r17,r5,r17
    ae20:	4a11883a 	add	r8,r9,r8
    ae24:	8a11883a 	add	r8,r17,r8
    ae28:	2823883a 	mov	r17,r5
    ae2c:	4080202c 	andhi	r2,r8,128
    ae30:	103fe026 	beq	r2,zero,adb4 <__alt_mem_Onchip_SRAM+0xf800adb4>
    ae34:	84000044 	addi	r16,r16,1
    ae38:	0081ffc4 	movi	r2,2047
    ae3c:	8080d226 	beq	r16,r2,b188 <__adddf3+0x5d8>
    ae40:	00bfe034 	movhi	r2,65408
    ae44:	10bfffc4 	addi	r2,r2,-1
    ae48:	4090703a 	and	r8,r8,r2
    ae4c:	880ad07a 	srli	r5,r17,1
    ae50:	400897fa 	slli	r4,r8,31
    ae54:	88c0004c 	andi	r3,r17,1
    ae58:	28e2b03a 	or	r17,r5,r3
    ae5c:	4010d07a 	srli	r8,r8,1
    ae60:	2462b03a 	or	r17,r4,r17
    ae64:	003f7106 	br	ac2c <__alt_mem_Onchip_SRAM+0xf800ac2c>
    ae68:	4088b03a 	or	r4,r8,r2
    ae6c:	20014526 	beq	r4,zero,b384 <__adddf3+0x7d4>
    ae70:	01000434 	movhi	r4,16
    ae74:	42000234 	orhi	r8,r8,8
    ae78:	213fffc4 	addi	r4,r4,-1
    ae7c:	4110703a 	and	r8,r8,r4
    ae80:	003f8206 	br	ac8c <__alt_mem_Onchip_SRAM+0xf800ac8c>
    ae84:	18ffffc4 	addi	r3,r3,-1
    ae88:	1800491e 	bne	r3,zero,afb0 <__adddf3+0x400>
    ae8c:	898bc83a 	sub	r5,r17,r6
    ae90:	8963803a 	cmpltu	r17,r17,r5
    ae94:	4251c83a 	sub	r8,r8,r9
    ae98:	4451c83a 	sub	r8,r8,r17
    ae9c:	2823883a 	mov	r17,r5
    aea0:	003f9f06 	br	ad20 <__alt_mem_Onchip_SRAM+0xf800ad20>
    aea4:	4984b03a 	or	r2,r9,r6
    aea8:	103f6026 	beq	r2,zero,ac2c <__alt_mem_Onchip_SRAM+0xf800ac2c>
    aeac:	213fffc4 	addi	r4,r4,-1
    aeb0:	2000931e 	bne	r4,zero,b100 <__adddf3+0x550>
    aeb4:	898d883a 	add	r6,r17,r6
    aeb8:	3463803a 	cmpltu	r17,r6,r17
    aebc:	4251883a 	add	r8,r8,r9
    aec0:	8a11883a 	add	r8,r17,r8
    aec4:	3023883a 	mov	r17,r6
    aec8:	003fd806 	br	ae2c <__alt_mem_Onchip_SRAM+0xf800ae2c>
    aecc:	1800541e 	bne	r3,zero,b020 <__adddf3+0x470>
    aed0:	80800044 	addi	r2,r16,1
    aed4:	1081ffcc 	andi	r2,r2,2047
    aed8:	00c00044 	movi	r3,1
    aedc:	1880a00e 	bge	r3,r2,b160 <__adddf3+0x5b0>
    aee0:	8989c83a 	sub	r4,r17,r6
    aee4:	8905803a 	cmpltu	r2,r17,r4
    aee8:	4267c83a 	sub	r19,r8,r9
    aeec:	98a7c83a 	sub	r19,r19,r2
    aef0:	9880202c 	andhi	r2,r19,128
    aef4:	10006326 	beq	r2,zero,b084 <__adddf3+0x4d4>
    aef8:	3463c83a 	sub	r17,r6,r17
    aefc:	4a07c83a 	sub	r3,r9,r8
    af00:	344d803a 	cmpltu	r6,r6,r17
    af04:	19a7c83a 	sub	r19,r3,r6
    af08:	3825883a 	mov	r18,r7
    af0c:	983f8a1e 	bne	r19,zero,ad38 <__alt_mem_Onchip_SRAM+0xf800ad38>
    af10:	8809883a 	mov	r4,r17
    af14:	0000bc80 	call	bc8 <__clzsi2>
    af18:	10800804 	addi	r2,r2,32
    af1c:	10fffe04 	addi	r3,r2,-8
    af20:	010007c4 	movi	r4,31
    af24:	20ff890e 	bge	r4,r3,ad4c <__alt_mem_Onchip_SRAM+0xf800ad4c>
    af28:	10bff604 	addi	r2,r2,-40
    af2c:	8884983a 	sll	r2,r17,r2
    af30:	0023883a 	mov	r17,zero
    af34:	1c3f8c0e 	bge	r3,r16,ad68 <__alt_mem_Onchip_SRAM+0xf800ad68>
    af38:	023fe034 	movhi	r8,65408
    af3c:	423fffc4 	addi	r8,r8,-1
    af40:	80e1c83a 	sub	r16,r16,r3
    af44:	1210703a 	and	r8,r2,r8
    af48:	003f3806 	br	ac2c <__alt_mem_Onchip_SRAM+0xf800ac2c>
    af4c:	9007883a 	mov	r3,r18
    af50:	0011883a 	mov	r8,zero
    af54:	0005883a 	mov	r2,zero
    af58:	003f4c06 	br	ac8c <__alt_mem_Onchip_SRAM+0xf800ac8c>
    af5c:	498cb03a 	or	r6,r9,r6
    af60:	300cc03a 	cmpne	r6,r6,zero
    af64:	0007883a 	mov	r3,zero
    af68:	003f6806 	br	ad0c <__alt_mem_Onchip_SRAM+0xf800ad0c>
    af6c:	20009c1e 	bne	r4,zero,b1e0 <__adddf3+0x630>
    af70:	80800044 	addi	r2,r16,1
    af74:	1141ffcc 	andi	r5,r2,2047
    af78:	01000044 	movi	r4,1
    af7c:	2140670e 	bge	r4,r5,b11c <__adddf3+0x56c>
    af80:	0101ffc4 	movi	r4,2047
    af84:	11007f26 	beq	r2,r4,b184 <__adddf3+0x5d4>
    af88:	898d883a 	add	r6,r17,r6
    af8c:	4247883a 	add	r3,r8,r9
    af90:	3451803a 	cmpltu	r8,r6,r17
    af94:	40d1883a 	add	r8,r8,r3
    af98:	402297fa 	slli	r17,r8,31
    af9c:	300cd07a 	srli	r6,r6,1
    afa0:	4010d07a 	srli	r8,r8,1
    afa4:	1021883a 	mov	r16,r2
    afa8:	89a2b03a 	or	r17,r17,r6
    afac:	003f1f06 	br	ac2c <__alt_mem_Onchip_SRAM+0xf800ac2c>
    afb0:	0081ffc4 	movi	r2,2047
    afb4:	80bf481e 	bne	r16,r2,acd8 <__alt_mem_Onchip_SRAM+0xf800acd8>
    afb8:	003f1c06 	br	ac2c <__alt_mem_Onchip_SRAM+0xf800ac2c>
    afbc:	843ff844 	addi	r16,r16,-31
    afc0:	01000804 	movi	r4,32
    afc4:	1406d83a 	srl	r3,r2,r16
    afc8:	41005026 	beq	r8,r4,b10c <__adddf3+0x55c>
    afcc:	01001004 	movi	r4,64
    afd0:	2211c83a 	sub	r8,r4,r8
    afd4:	1204983a 	sll	r2,r2,r8
    afd8:	88a2b03a 	or	r17,r17,r2
    afdc:	8822c03a 	cmpne	r17,r17,zero
    afe0:	1c62b03a 	or	r17,r3,r17
    afe4:	0011883a 	mov	r8,zero
    afe8:	0021883a 	mov	r16,zero
    afec:	003f7106 	br	adb4 <__alt_mem_Onchip_SRAM+0xf800adb4>
    aff0:	193ff804 	addi	r4,r3,-32
    aff4:	00800804 	movi	r2,32
    aff8:	4908d83a 	srl	r4,r9,r4
    affc:	18804526 	beq	r3,r2,b114 <__adddf3+0x564>
    b000:	00801004 	movi	r2,64
    b004:	10c5c83a 	sub	r2,r2,r3
    b008:	4886983a 	sll	r3,r9,r2
    b00c:	198cb03a 	or	r6,r3,r6
    b010:	300cc03a 	cmpne	r6,r6,zero
    b014:	218cb03a 	or	r6,r4,r6
    b018:	0007883a 	mov	r3,zero
    b01c:	003f3b06 	br	ad0c <__alt_mem_Onchip_SRAM+0xf800ad0c>
    b020:	80002a26 	beq	r16,zero,b0cc <__adddf3+0x51c>
    b024:	0101ffc4 	movi	r4,2047
    b028:	11006826 	beq	r2,r4,b1cc <__adddf3+0x61c>
    b02c:	00c7c83a 	sub	r3,zero,r3
    b030:	42002034 	orhi	r8,r8,128
    b034:	01000e04 	movi	r4,56
    b038:	20c07c16 	blt	r4,r3,b22c <__adddf3+0x67c>
    b03c:	010007c4 	movi	r4,31
    b040:	20c0da16 	blt	r4,r3,b3ac <__adddf3+0x7fc>
    b044:	01000804 	movi	r4,32
    b048:	20c9c83a 	sub	r4,r4,r3
    b04c:	4114983a 	sll	r10,r8,r4
    b050:	88cad83a 	srl	r5,r17,r3
    b054:	8908983a 	sll	r4,r17,r4
    b058:	40c6d83a 	srl	r3,r8,r3
    b05c:	5162b03a 	or	r17,r10,r5
    b060:	2008c03a 	cmpne	r4,r4,zero
    b064:	8922b03a 	or	r17,r17,r4
    b068:	3463c83a 	sub	r17,r6,r17
    b06c:	48c7c83a 	sub	r3,r9,r3
    b070:	344d803a 	cmpltu	r6,r6,r17
    b074:	1991c83a 	sub	r8,r3,r6
    b078:	1021883a 	mov	r16,r2
    b07c:	3825883a 	mov	r18,r7
    b080:	003f2706 	br	ad20 <__alt_mem_Onchip_SRAM+0xf800ad20>
    b084:	24d0b03a 	or	r8,r4,r19
    b088:	40001b1e 	bne	r8,zero,b0f8 <__adddf3+0x548>
    b08c:	0005883a 	mov	r2,zero
    b090:	0007883a 	mov	r3,zero
    b094:	0021883a 	mov	r16,zero
    b098:	003f4d06 	br	add0 <__alt_mem_Onchip_SRAM+0xf800add0>
    b09c:	008007c4 	movi	r2,31
    b0a0:	11003c16 	blt	r2,r4,b194 <__adddf3+0x5e4>
    b0a4:	00800804 	movi	r2,32
    b0a8:	1105c83a 	sub	r2,r2,r4
    b0ac:	488e983a 	sll	r7,r9,r2
    b0b0:	310ad83a 	srl	r5,r6,r4
    b0b4:	3084983a 	sll	r2,r6,r2
    b0b8:	4912d83a 	srl	r9,r9,r4
    b0bc:	394ab03a 	or	r5,r7,r5
    b0c0:	1004c03a 	cmpne	r2,r2,zero
    b0c4:	288ab03a 	or	r5,r5,r2
    b0c8:	003f5306 	br	ae18 <__alt_mem_Onchip_SRAM+0xf800ae18>
    b0cc:	4448b03a 	or	r4,r8,r17
    b0d0:	20003e26 	beq	r4,zero,b1cc <__adddf3+0x61c>
    b0d4:	00c6303a 	nor	r3,zero,r3
    b0d8:	18003a1e 	bne	r3,zero,b1c4 <__adddf3+0x614>
    b0dc:	3463c83a 	sub	r17,r6,r17
    b0e0:	4a07c83a 	sub	r3,r9,r8
    b0e4:	344d803a 	cmpltu	r6,r6,r17
    b0e8:	1991c83a 	sub	r8,r3,r6
    b0ec:	1021883a 	mov	r16,r2
    b0f0:	3825883a 	mov	r18,r7
    b0f4:	003f0a06 	br	ad20 <__alt_mem_Onchip_SRAM+0xf800ad20>
    b0f8:	2023883a 	mov	r17,r4
    b0fc:	003f0d06 	br	ad34 <__alt_mem_Onchip_SRAM+0xf800ad34>
    b100:	0081ffc4 	movi	r2,2047
    b104:	80bf3f1e 	bne	r16,r2,ae04 <__alt_mem_Onchip_SRAM+0xf800ae04>
    b108:	003ec806 	br	ac2c <__alt_mem_Onchip_SRAM+0xf800ac2c>
    b10c:	0005883a 	mov	r2,zero
    b110:	003fb106 	br	afd8 <__alt_mem_Onchip_SRAM+0xf800afd8>
    b114:	0007883a 	mov	r3,zero
    b118:	003fbc06 	br	b00c <__alt_mem_Onchip_SRAM+0xf800b00c>
    b11c:	4444b03a 	or	r2,r8,r17
    b120:	8000871e 	bne	r16,zero,b340 <__adddf3+0x790>
    b124:	1000ba26 	beq	r2,zero,b410 <__adddf3+0x860>
    b128:	4984b03a 	or	r2,r9,r6
    b12c:	103ebf26 	beq	r2,zero,ac2c <__alt_mem_Onchip_SRAM+0xf800ac2c>
    b130:	8985883a 	add	r2,r17,r6
    b134:	4247883a 	add	r3,r8,r9
    b138:	1451803a 	cmpltu	r8,r2,r17
    b13c:	40d1883a 	add	r8,r8,r3
    b140:	40c0202c 	andhi	r3,r8,128
    b144:	1023883a 	mov	r17,r2
    b148:	183f1a26 	beq	r3,zero,adb4 <__alt_mem_Onchip_SRAM+0xf800adb4>
    b14c:	00bfe034 	movhi	r2,65408
    b150:	10bfffc4 	addi	r2,r2,-1
    b154:	2021883a 	mov	r16,r4
    b158:	4090703a 	and	r8,r8,r2
    b15c:	003eb306 	br	ac2c <__alt_mem_Onchip_SRAM+0xf800ac2c>
    b160:	4444b03a 	or	r2,r8,r17
    b164:	8000291e 	bne	r16,zero,b20c <__adddf3+0x65c>
    b168:	10004b1e 	bne	r2,zero,b298 <__adddf3+0x6e8>
    b16c:	4990b03a 	or	r8,r9,r6
    b170:	40008b26 	beq	r8,zero,b3a0 <__adddf3+0x7f0>
    b174:	4811883a 	mov	r8,r9
    b178:	3023883a 	mov	r17,r6
    b17c:	3825883a 	mov	r18,r7
    b180:	003eaa06 	br	ac2c <__alt_mem_Onchip_SRAM+0xf800ac2c>
    b184:	1021883a 	mov	r16,r2
    b188:	0011883a 	mov	r8,zero
    b18c:	0005883a 	mov	r2,zero
    b190:	003f0f06 	br	add0 <__alt_mem_Onchip_SRAM+0xf800add0>
    b194:	217ff804 	addi	r5,r4,-32
    b198:	00800804 	movi	r2,32
    b19c:	494ad83a 	srl	r5,r9,r5
    b1a0:	20807d26 	beq	r4,r2,b398 <__adddf3+0x7e8>
    b1a4:	00801004 	movi	r2,64
    b1a8:	1109c83a 	sub	r4,r2,r4
    b1ac:	4912983a 	sll	r9,r9,r4
    b1b0:	498cb03a 	or	r6,r9,r6
    b1b4:	300cc03a 	cmpne	r6,r6,zero
    b1b8:	298ab03a 	or	r5,r5,r6
    b1bc:	0013883a 	mov	r9,zero
    b1c0:	003f1506 	br	ae18 <__alt_mem_Onchip_SRAM+0xf800ae18>
    b1c4:	0101ffc4 	movi	r4,2047
    b1c8:	113f9a1e 	bne	r2,r4,b034 <__alt_mem_Onchip_SRAM+0xf800b034>
    b1cc:	4811883a 	mov	r8,r9
    b1d0:	3023883a 	mov	r17,r6
    b1d4:	1021883a 	mov	r16,r2
    b1d8:	3825883a 	mov	r18,r7
    b1dc:	003e9306 	br	ac2c <__alt_mem_Onchip_SRAM+0xf800ac2c>
    b1e0:	8000161e 	bne	r16,zero,b23c <__adddf3+0x68c>
    b1e4:	444ab03a 	or	r5,r8,r17
    b1e8:	28005126 	beq	r5,zero,b330 <__adddf3+0x780>
    b1ec:	0108303a 	nor	r4,zero,r4
    b1f0:	20004d1e 	bne	r4,zero,b328 <__adddf3+0x778>
    b1f4:	89a3883a 	add	r17,r17,r6
    b1f8:	4253883a 	add	r9,r8,r9
    b1fc:	898d803a 	cmpltu	r6,r17,r6
    b200:	3251883a 	add	r8,r6,r9
    b204:	1021883a 	mov	r16,r2
    b208:	003f0806 	br	ae2c <__alt_mem_Onchip_SRAM+0xf800ae2c>
    b20c:	1000301e 	bne	r2,zero,b2d0 <__adddf3+0x720>
    b210:	4984b03a 	or	r2,r9,r6
    b214:	10007126 	beq	r2,zero,b3dc <__adddf3+0x82c>
    b218:	4811883a 	mov	r8,r9
    b21c:	3023883a 	mov	r17,r6
    b220:	3825883a 	mov	r18,r7
    b224:	0401ffc4 	movi	r16,2047
    b228:	003e8006 	br	ac2c <__alt_mem_Onchip_SRAM+0xf800ac2c>
    b22c:	4462b03a 	or	r17,r8,r17
    b230:	8822c03a 	cmpne	r17,r17,zero
    b234:	0007883a 	mov	r3,zero
    b238:	003f8b06 	br	b068 <__alt_mem_Onchip_SRAM+0xf800b068>
    b23c:	0141ffc4 	movi	r5,2047
    b240:	11403b26 	beq	r2,r5,b330 <__adddf3+0x780>
    b244:	0109c83a 	sub	r4,zero,r4
    b248:	42002034 	orhi	r8,r8,128
    b24c:	01400e04 	movi	r5,56
    b250:	29006716 	blt	r5,r4,b3f0 <__adddf3+0x840>
    b254:	014007c4 	movi	r5,31
    b258:	29007016 	blt	r5,r4,b41c <__adddf3+0x86c>
    b25c:	01400804 	movi	r5,32
    b260:	290bc83a 	sub	r5,r5,r4
    b264:	4154983a 	sll	r10,r8,r5
    b268:	890ed83a 	srl	r7,r17,r4
    b26c:	894a983a 	sll	r5,r17,r5
    b270:	4108d83a 	srl	r4,r8,r4
    b274:	51e2b03a 	or	r17,r10,r7
    b278:	280ac03a 	cmpne	r5,r5,zero
    b27c:	8962b03a 	or	r17,r17,r5
    b280:	89a3883a 	add	r17,r17,r6
    b284:	2253883a 	add	r9,r4,r9
    b288:	898d803a 	cmpltu	r6,r17,r6
    b28c:	3251883a 	add	r8,r6,r9
    b290:	1021883a 	mov	r16,r2
    b294:	003ee506 	br	ae2c <__alt_mem_Onchip_SRAM+0xf800ae2c>
    b298:	4984b03a 	or	r2,r9,r6
    b29c:	103e6326 	beq	r2,zero,ac2c <__alt_mem_Onchip_SRAM+0xf800ac2c>
    b2a0:	8987c83a 	sub	r3,r17,r6
    b2a4:	88c9803a 	cmpltu	r4,r17,r3
    b2a8:	4245c83a 	sub	r2,r8,r9
    b2ac:	1105c83a 	sub	r2,r2,r4
    b2b0:	1100202c 	andhi	r4,r2,128
    b2b4:	203ebb26 	beq	r4,zero,ada4 <__alt_mem_Onchip_SRAM+0xf800ada4>
    b2b8:	3463c83a 	sub	r17,r6,r17
    b2bc:	4a07c83a 	sub	r3,r9,r8
    b2c0:	344d803a 	cmpltu	r6,r6,r17
    b2c4:	1991c83a 	sub	r8,r3,r6
    b2c8:	3825883a 	mov	r18,r7
    b2cc:	003e5706 	br	ac2c <__alt_mem_Onchip_SRAM+0xf800ac2c>
    b2d0:	4984b03a 	or	r2,r9,r6
    b2d4:	10002e26 	beq	r2,zero,b390 <__adddf3+0x7e0>
    b2d8:	4004d0fa 	srli	r2,r8,3
    b2dc:	8822d0fa 	srli	r17,r17,3
    b2e0:	4010977a 	slli	r8,r8,29
    b2e4:	10c0022c 	andhi	r3,r2,8
    b2e8:	4462b03a 	or	r17,r8,r17
    b2ec:	18000826 	beq	r3,zero,b310 <__adddf3+0x760>
    b2f0:	4808d0fa 	srli	r4,r9,3
    b2f4:	20c0022c 	andhi	r3,r4,8
    b2f8:	1800051e 	bne	r3,zero,b310 <__adddf3+0x760>
    b2fc:	300cd0fa 	srli	r6,r6,3
    b300:	4806977a 	slli	r3,r9,29
    b304:	2005883a 	mov	r2,r4
    b308:	3825883a 	mov	r18,r7
    b30c:	19a2b03a 	or	r17,r3,r6
    b310:	8810d77a 	srli	r8,r17,29
    b314:	100490fa 	slli	r2,r2,3
    b318:	882290fa 	slli	r17,r17,3
    b31c:	0401ffc4 	movi	r16,2047
    b320:	4090b03a 	or	r8,r8,r2
    b324:	003e4106 	br	ac2c <__alt_mem_Onchip_SRAM+0xf800ac2c>
    b328:	0141ffc4 	movi	r5,2047
    b32c:	117fc71e 	bne	r2,r5,b24c <__alt_mem_Onchip_SRAM+0xf800b24c>
    b330:	4811883a 	mov	r8,r9
    b334:	3023883a 	mov	r17,r6
    b338:	1021883a 	mov	r16,r2
    b33c:	003e3b06 	br	ac2c <__alt_mem_Onchip_SRAM+0xf800ac2c>
    b340:	10002f26 	beq	r2,zero,b400 <__adddf3+0x850>
    b344:	4984b03a 	or	r2,r9,r6
    b348:	10001126 	beq	r2,zero,b390 <__adddf3+0x7e0>
    b34c:	4004d0fa 	srli	r2,r8,3
    b350:	8822d0fa 	srli	r17,r17,3
    b354:	4010977a 	slli	r8,r8,29
    b358:	10c0022c 	andhi	r3,r2,8
    b35c:	4462b03a 	or	r17,r8,r17
    b360:	183feb26 	beq	r3,zero,b310 <__alt_mem_Onchip_SRAM+0xf800b310>
    b364:	4808d0fa 	srli	r4,r9,3
    b368:	20c0022c 	andhi	r3,r4,8
    b36c:	183fe81e 	bne	r3,zero,b310 <__alt_mem_Onchip_SRAM+0xf800b310>
    b370:	300cd0fa 	srli	r6,r6,3
    b374:	4806977a 	slli	r3,r9,29
    b378:	2005883a 	mov	r2,r4
    b37c:	19a2b03a 	or	r17,r3,r6
    b380:	003fe306 	br	b310 <__alt_mem_Onchip_SRAM+0xf800b310>
    b384:	0011883a 	mov	r8,zero
    b388:	0005883a 	mov	r2,zero
    b38c:	003e3f06 	br	ac8c <__alt_mem_Onchip_SRAM+0xf800ac8c>
    b390:	0401ffc4 	movi	r16,2047
    b394:	003e2506 	br	ac2c <__alt_mem_Onchip_SRAM+0xf800ac2c>
    b398:	0013883a 	mov	r9,zero
    b39c:	003f8406 	br	b1b0 <__alt_mem_Onchip_SRAM+0xf800b1b0>
    b3a0:	0005883a 	mov	r2,zero
    b3a4:	0007883a 	mov	r3,zero
    b3a8:	003e8906 	br	add0 <__alt_mem_Onchip_SRAM+0xf800add0>
    b3ac:	197ff804 	addi	r5,r3,-32
    b3b0:	01000804 	movi	r4,32
    b3b4:	414ad83a 	srl	r5,r8,r5
    b3b8:	19002426 	beq	r3,r4,b44c <__adddf3+0x89c>
    b3bc:	01001004 	movi	r4,64
    b3c0:	20c7c83a 	sub	r3,r4,r3
    b3c4:	40c6983a 	sll	r3,r8,r3
    b3c8:	1c46b03a 	or	r3,r3,r17
    b3cc:	1806c03a 	cmpne	r3,r3,zero
    b3d0:	28e2b03a 	or	r17,r5,r3
    b3d4:	0007883a 	mov	r3,zero
    b3d8:	003f2306 	br	b068 <__alt_mem_Onchip_SRAM+0xf800b068>
    b3dc:	0007883a 	mov	r3,zero
    b3e0:	5811883a 	mov	r8,r11
    b3e4:	00bfffc4 	movi	r2,-1
    b3e8:	0401ffc4 	movi	r16,2047
    b3ec:	003e7806 	br	add0 <__alt_mem_Onchip_SRAM+0xf800add0>
    b3f0:	4462b03a 	or	r17,r8,r17
    b3f4:	8822c03a 	cmpne	r17,r17,zero
    b3f8:	0009883a 	mov	r4,zero
    b3fc:	003fa006 	br	b280 <__alt_mem_Onchip_SRAM+0xf800b280>
    b400:	4811883a 	mov	r8,r9
    b404:	3023883a 	mov	r17,r6
    b408:	0401ffc4 	movi	r16,2047
    b40c:	003e0706 	br	ac2c <__alt_mem_Onchip_SRAM+0xf800ac2c>
    b410:	4811883a 	mov	r8,r9
    b414:	3023883a 	mov	r17,r6
    b418:	003e0406 	br	ac2c <__alt_mem_Onchip_SRAM+0xf800ac2c>
    b41c:	21fff804 	addi	r7,r4,-32
    b420:	01400804 	movi	r5,32
    b424:	41ced83a 	srl	r7,r8,r7
    b428:	21400a26 	beq	r4,r5,b454 <__adddf3+0x8a4>
    b42c:	01401004 	movi	r5,64
    b430:	2909c83a 	sub	r4,r5,r4
    b434:	4108983a 	sll	r4,r8,r4
    b438:	2448b03a 	or	r4,r4,r17
    b43c:	2008c03a 	cmpne	r4,r4,zero
    b440:	3922b03a 	or	r17,r7,r4
    b444:	0009883a 	mov	r4,zero
    b448:	003f8d06 	br	b280 <__alt_mem_Onchip_SRAM+0xf800b280>
    b44c:	0007883a 	mov	r3,zero
    b450:	003fdd06 	br	b3c8 <__alt_mem_Onchip_SRAM+0xf800b3c8>
    b454:	0009883a 	mov	r4,zero
    b458:	003ff706 	br	b438 <__alt_mem_Onchip_SRAM+0xf800b438>

0000b45c <__divdf3>:
    b45c:	defff004 	addi	sp,sp,-64
    b460:	dc800815 	stw	r18,32(sp)
    b464:	2824d53a 	srli	r18,r5,20
    b468:	dd800c15 	stw	r22,48(sp)
    b46c:	282cd7fa 	srli	r22,r5,31
    b470:	dc000615 	stw	r16,24(sp)
    b474:	04000434 	movhi	r16,16
    b478:	843fffc4 	addi	r16,r16,-1
    b47c:	dfc00f15 	stw	ra,60(sp)
    b480:	df000e15 	stw	fp,56(sp)
    b484:	ddc00d15 	stw	r23,52(sp)
    b488:	dd400b15 	stw	r21,44(sp)
    b48c:	dd000a15 	stw	r20,40(sp)
    b490:	dcc00915 	stw	r19,36(sp)
    b494:	dc400715 	stw	r17,28(sp)
    b498:	9481ffcc 	andi	r18,r18,2047
    b49c:	2c20703a 	and	r16,r5,r16
    b4a0:	b2003fcc 	andi	r8,r22,255
    b4a4:	90006126 	beq	r18,zero,b62c <__divdf3+0x1d0>
    b4a8:	0081ffc4 	movi	r2,2047
    b4ac:	202b883a 	mov	r21,r4
    b4b0:	90803726 	beq	r18,r2,b590 <__divdf3+0x134>
    b4b4:	80800434 	orhi	r2,r16,16
    b4b8:	100490fa 	slli	r2,r2,3
    b4bc:	2020d77a 	srli	r16,r4,29
    b4c0:	202a90fa 	slli	r21,r4,3
    b4c4:	94bf0044 	addi	r18,r18,-1023
    b4c8:	80a0b03a 	or	r16,r16,r2
    b4cc:	0013883a 	mov	r9,zero
    b4d0:	000b883a 	mov	r5,zero
    b4d4:	3806d53a 	srli	r3,r7,20
    b4d8:	382ed7fa 	srli	r23,r7,31
    b4dc:	04400434 	movhi	r17,16
    b4e0:	8c7fffc4 	addi	r17,r17,-1
    b4e4:	18c1ffcc 	andi	r3,r3,2047
    b4e8:	3029883a 	mov	r20,r6
    b4ec:	3c62703a 	and	r17,r7,r17
    b4f0:	bf003fcc 	andi	fp,r23,255
    b4f4:	18006e26 	beq	r3,zero,b6b0 <__divdf3+0x254>
    b4f8:	0081ffc4 	movi	r2,2047
    b4fc:	18806626 	beq	r3,r2,b698 <__divdf3+0x23c>
    b500:	88800434 	orhi	r2,r17,16
    b504:	100490fa 	slli	r2,r2,3
    b508:	3022d77a 	srli	r17,r6,29
    b50c:	302890fa 	slli	r20,r6,3
    b510:	18ff0044 	addi	r3,r3,-1023
    b514:	88a2b03a 	or	r17,r17,r2
    b518:	000f883a 	mov	r7,zero
    b51c:	b5e6f03a 	xor	r19,r22,r23
    b520:	3a4cb03a 	or	r6,r7,r9
    b524:	008003c4 	movi	r2,15
    b528:	9809883a 	mov	r4,r19
    b52c:	90c7c83a 	sub	r3,r18,r3
    b530:	9cc03fcc 	andi	r19,r19,255
    b534:	11809636 	bltu	r2,r6,b790 <__divdf3+0x334>
    b538:	300c90ba 	slli	r6,r6,2
    b53c:	00800074 	movhi	r2,1
    b540:	10ad5404 	addi	r2,r2,-19120
    b544:	308d883a 	add	r6,r6,r2
    b548:	30800017 	ldw	r2,0(r6)
    b54c:	1000683a 	jmp	r2
    b550:	0000b790 	cmplti	zero,zero,734
    b554:	0000b5c8 	cmpgei	zero,zero,727
    b558:	0000b780 	call	b78 <__floatsisf+0xd4>
    b55c:	0000b5bc 	xorhi	zero,zero,726
    b560:	0000b780 	call	b78 <__floatsisf+0xd4>
    b564:	0000b754 	movui	zero,733
    b568:	0000b780 	call	b78 <__floatsisf+0xd4>
    b56c:	0000b5bc 	xorhi	zero,zero,726
    b570:	0000b5c8 	cmpgei	zero,zero,727
    b574:	0000b5c8 	cmpgei	zero,zero,727
    b578:	0000b754 	movui	zero,733
    b57c:	0000b5bc 	xorhi	zero,zero,726
    b580:	0000b5ac 	andhi	zero,zero,726
    b584:	0000b5ac 	andhi	zero,zero,726
    b588:	0000b5ac 	andhi	zero,zero,726
    b58c:	0000bb18 	cmpnei	zero,zero,748
    b590:	2404b03a 	or	r2,r4,r16
    b594:	10006c1e 	bne	r2,zero,b748 <__divdf3+0x2ec>
    b598:	02400204 	movi	r9,8
    b59c:	0021883a 	mov	r16,zero
    b5a0:	002b883a 	mov	r21,zero
    b5a4:	01400084 	movi	r5,2
    b5a8:	003fca06 	br	b4d4 <__alt_mem_Onchip_SRAM+0xf800b4d4>
    b5ac:	8023883a 	mov	r17,r16
    b5b0:	a829883a 	mov	r20,r21
    b5b4:	4039883a 	mov	fp,r8
    b5b8:	280f883a 	mov	r7,r5
    b5bc:	00800084 	movi	r2,2
    b5c0:	3881601e 	bne	r7,r2,bb44 <__divdf3+0x6e8>
    b5c4:	e027883a 	mov	r19,fp
    b5c8:	9900004c 	andi	r4,r19,1
    b5cc:	0081ffc4 	movi	r2,2047
    b5d0:	0021883a 	mov	r16,zero
    b5d4:	002b883a 	mov	r21,zero
    b5d8:	1004953a 	slli	r2,r2,20
    b5dc:	20c03fcc 	andi	r3,r4,255
    b5e0:	01400434 	movhi	r5,16
    b5e4:	297fffc4 	addi	r5,r5,-1
    b5e8:	180697fa 	slli	r3,r3,31
    b5ec:	8160703a 	and	r16,r16,r5
    b5f0:	80a0b03a 	or	r16,r16,r2
    b5f4:	80c6b03a 	or	r3,r16,r3
    b5f8:	a805883a 	mov	r2,r21
    b5fc:	dfc00f17 	ldw	ra,60(sp)
    b600:	df000e17 	ldw	fp,56(sp)
    b604:	ddc00d17 	ldw	r23,52(sp)
    b608:	dd800c17 	ldw	r22,48(sp)
    b60c:	dd400b17 	ldw	r21,44(sp)
    b610:	dd000a17 	ldw	r20,40(sp)
    b614:	dcc00917 	ldw	r19,36(sp)
    b618:	dc800817 	ldw	r18,32(sp)
    b61c:	dc400717 	ldw	r17,28(sp)
    b620:	dc000617 	ldw	r16,24(sp)
    b624:	dec01004 	addi	sp,sp,64
    b628:	f800283a 	ret
    b62c:	2404b03a 	or	r2,r4,r16
    b630:	2023883a 	mov	r17,r4
    b634:	10003f26 	beq	r2,zero,b734 <__divdf3+0x2d8>
    b638:	80015e26 	beq	r16,zero,bbb4 <__divdf3+0x758>
    b63c:	8009883a 	mov	r4,r16
    b640:	d9800215 	stw	r6,8(sp)
    b644:	d9c00515 	stw	r7,20(sp)
    b648:	da000415 	stw	r8,16(sp)
    b64c:	0000bc80 	call	bc8 <__clzsi2>
    b650:	d9800217 	ldw	r6,8(sp)
    b654:	d9c00517 	ldw	r7,20(sp)
    b658:	da000417 	ldw	r8,16(sp)
    b65c:	113ffd44 	addi	r4,r2,-11
    b660:	00c00704 	movi	r3,28
    b664:	19014f16 	blt	r3,r4,bba4 <__divdf3+0x748>
    b668:	00c00744 	movi	r3,29
    b66c:	157ffe04 	addi	r21,r2,-8
    b670:	1907c83a 	sub	r3,r3,r4
    b674:	8560983a 	sll	r16,r16,r21
    b678:	88c6d83a 	srl	r3,r17,r3
    b67c:	8d6a983a 	sll	r21,r17,r21
    b680:	1c20b03a 	or	r16,r3,r16
    b684:	1080fcc4 	addi	r2,r2,1011
    b688:	00a5c83a 	sub	r18,zero,r2
    b68c:	0013883a 	mov	r9,zero
    b690:	000b883a 	mov	r5,zero
    b694:	003f8f06 	br	b4d4 <__alt_mem_Onchip_SRAM+0xf800b4d4>
    b698:	3444b03a 	or	r2,r6,r17
    b69c:	1000231e 	bne	r2,zero,b72c <__divdf3+0x2d0>
    b6a0:	0023883a 	mov	r17,zero
    b6a4:	0029883a 	mov	r20,zero
    b6a8:	01c00084 	movi	r7,2
    b6ac:	003f9b06 	br	b51c <__alt_mem_Onchip_SRAM+0xf800b51c>
    b6b0:	3444b03a 	or	r2,r6,r17
    b6b4:	10001926 	beq	r2,zero,b71c <__divdf3+0x2c0>
    b6b8:	88014b26 	beq	r17,zero,bbe8 <__divdf3+0x78c>
    b6bc:	8809883a 	mov	r4,r17
    b6c0:	d9400115 	stw	r5,4(sp)
    b6c4:	d9800215 	stw	r6,8(sp)
    b6c8:	da000415 	stw	r8,16(sp)
    b6cc:	da400315 	stw	r9,12(sp)
    b6d0:	0000bc80 	call	bc8 <__clzsi2>
    b6d4:	d9400117 	ldw	r5,4(sp)
    b6d8:	d9800217 	ldw	r6,8(sp)
    b6dc:	da000417 	ldw	r8,16(sp)
    b6e0:	da400317 	ldw	r9,12(sp)
    b6e4:	113ffd44 	addi	r4,r2,-11
    b6e8:	00c00704 	movi	r3,28
    b6ec:	19013a16 	blt	r3,r4,bbd8 <__divdf3+0x77c>
    b6f0:	00c00744 	movi	r3,29
    b6f4:	153ffe04 	addi	r20,r2,-8
    b6f8:	1907c83a 	sub	r3,r3,r4
    b6fc:	8d22983a 	sll	r17,r17,r20
    b700:	30c6d83a 	srl	r3,r6,r3
    b704:	3528983a 	sll	r20,r6,r20
    b708:	1c62b03a 	or	r17,r3,r17
    b70c:	1080fcc4 	addi	r2,r2,1011
    b710:	0087c83a 	sub	r3,zero,r2
    b714:	000f883a 	mov	r7,zero
    b718:	003f8006 	br	b51c <__alt_mem_Onchip_SRAM+0xf800b51c>
    b71c:	0023883a 	mov	r17,zero
    b720:	0029883a 	mov	r20,zero
    b724:	01c00044 	movi	r7,1
    b728:	003f7c06 	br	b51c <__alt_mem_Onchip_SRAM+0xf800b51c>
    b72c:	01c000c4 	movi	r7,3
    b730:	003f7a06 	br	b51c <__alt_mem_Onchip_SRAM+0xf800b51c>
    b734:	02400104 	movi	r9,4
    b738:	0021883a 	mov	r16,zero
    b73c:	002b883a 	mov	r21,zero
    b740:	01400044 	movi	r5,1
    b744:	003f6306 	br	b4d4 <__alt_mem_Onchip_SRAM+0xf800b4d4>
    b748:	02400304 	movi	r9,12
    b74c:	014000c4 	movi	r5,3
    b750:	003f6006 	br	b4d4 <__alt_mem_Onchip_SRAM+0xf800b4d4>
    b754:	04000434 	movhi	r16,16
    b758:	0009883a 	mov	r4,zero
    b75c:	843fffc4 	addi	r16,r16,-1
    b760:	057fffc4 	movi	r21,-1
    b764:	0081ffc4 	movi	r2,2047
    b768:	003f9b06 	br	b5d8 <__alt_mem_Onchip_SRAM+0xf800b5d8>
    b76c:	00c00044 	movi	r3,1
    b770:	1887c83a 	sub	r3,r3,r2
    b774:	01000e04 	movi	r4,56
    b778:	20c1530e 	bge	r4,r3,bcc8 <__divdf3+0x86c>
    b77c:	9900004c 	andi	r4,r19,1
    b780:	0005883a 	mov	r2,zero
    b784:	0021883a 	mov	r16,zero
    b788:	002b883a 	mov	r21,zero
    b78c:	003f9206 	br	b5d8 <__alt_mem_Onchip_SRAM+0xf800b5d8>
    b790:	8c012e36 	bltu	r17,r16,bc4c <__divdf3+0x7f0>
    b794:	84412c26 	beq	r16,r17,bc48 <__divdf3+0x7ec>
    b798:	a82f883a 	mov	r23,r21
    b79c:	18ffffc4 	addi	r3,r3,-1
    b7a0:	002b883a 	mov	r21,zero
    b7a4:	a004d63a 	srli	r2,r20,24
    b7a8:	8822923a 	slli	r17,r17,8
    b7ac:	a028923a 	slli	r20,r20,8
    b7b0:	8009883a 	mov	r4,r16
    b7b4:	88acb03a 	or	r22,r17,r2
    b7b8:	dd000015 	stw	r20,0(sp)
    b7bc:	b028d43a 	srli	r20,r22,16
    b7c0:	d8c00215 	stw	r3,8(sp)
    b7c4:	b4bfffcc 	andi	r18,r22,65535
    b7c8:	a00b883a 	mov	r5,r20
    b7cc:	00009500 	call	950 <__udivsi3>
    b7d0:	100b883a 	mov	r5,r2
    b7d4:	9009883a 	mov	r4,r18
    b7d8:	1023883a 	mov	r17,r2
    b7dc:	0000a0c0 	call	a0c <__mulsi3>
    b7e0:	8009883a 	mov	r4,r16
    b7e4:	a00b883a 	mov	r5,r20
    b7e8:	1039883a 	mov	fp,r2
    b7ec:	00009b40 	call	9b4 <__umodsi3>
    b7f0:	1004943a 	slli	r2,r2,16
    b7f4:	b808d43a 	srli	r4,r23,16
    b7f8:	d8c00217 	ldw	r3,8(sp)
    b7fc:	2084b03a 	or	r2,r4,r2
    b800:	1700062e 	bgeu	r2,fp,b81c <__divdf3+0x3c0>
    b804:	1585883a 	add	r2,r2,r22
    b808:	893fffc4 	addi	r4,r17,-1
    b80c:	15811d36 	bltu	r2,r22,bc84 <__divdf3+0x828>
    b810:	17011c2e 	bgeu	r2,fp,bc84 <__divdf3+0x828>
    b814:	8c7fff84 	addi	r17,r17,-2
    b818:	1585883a 	add	r2,r2,r22
    b81c:	1739c83a 	sub	fp,r2,fp
    b820:	a00b883a 	mov	r5,r20
    b824:	e009883a 	mov	r4,fp
    b828:	d8c00215 	stw	r3,8(sp)
    b82c:	00009500 	call	950 <__udivsi3>
    b830:	100b883a 	mov	r5,r2
    b834:	9009883a 	mov	r4,r18
    b838:	1021883a 	mov	r16,r2
    b83c:	0000a0c0 	call	a0c <__mulsi3>
    b840:	a00b883a 	mov	r5,r20
    b844:	e009883a 	mov	r4,fp
    b848:	d8800415 	stw	r2,16(sp)
    b84c:	00009b40 	call	9b4 <__umodsi3>
    b850:	1004943a 	slli	r2,r2,16
    b854:	da000417 	ldw	r8,16(sp)
    b858:	bdffffcc 	andi	r23,r23,65535
    b85c:	b884b03a 	or	r2,r23,r2
    b860:	d8c00217 	ldw	r3,8(sp)
    b864:	1200062e 	bgeu	r2,r8,b880 <__divdf3+0x424>
    b868:	1585883a 	add	r2,r2,r22
    b86c:	813fffc4 	addi	r4,r16,-1
    b870:	15810236 	bltu	r2,r22,bc7c <__divdf3+0x820>
    b874:	1201012e 	bgeu	r2,r8,bc7c <__divdf3+0x820>
    b878:	843fff84 	addi	r16,r16,-2
    b87c:	1585883a 	add	r2,r2,r22
    b880:	8822943a 	slli	r17,r17,16
    b884:	d9800017 	ldw	r6,0(sp)
    b888:	1211c83a 	sub	r8,r2,r8
    b88c:	8c22b03a 	or	r17,r17,r16
    b890:	373fffcc 	andi	fp,r6,65535
    b894:	8abfffcc 	andi	r10,r17,65535
    b898:	8820d43a 	srli	r16,r17,16
    b89c:	5009883a 	mov	r4,r10
    b8a0:	e00b883a 	mov	r5,fp
    b8a4:	302ed43a 	srli	r23,r6,16
    b8a8:	d8c00215 	stw	r3,8(sp)
    b8ac:	da000415 	stw	r8,16(sp)
    b8b0:	da800115 	stw	r10,4(sp)
    b8b4:	0000a0c0 	call	a0c <__mulsi3>
    b8b8:	800b883a 	mov	r5,r16
    b8bc:	e009883a 	mov	r4,fp
    b8c0:	d8800515 	stw	r2,20(sp)
    b8c4:	0000a0c0 	call	a0c <__mulsi3>
    b8c8:	8009883a 	mov	r4,r16
    b8cc:	b80b883a 	mov	r5,r23
    b8d0:	d8800315 	stw	r2,12(sp)
    b8d4:	0000a0c0 	call	a0c <__mulsi3>
    b8d8:	da800117 	ldw	r10,4(sp)
    b8dc:	b80b883a 	mov	r5,r23
    b8e0:	1021883a 	mov	r16,r2
    b8e4:	5009883a 	mov	r4,r10
    b8e8:	0000a0c0 	call	a0c <__mulsi3>
    b8ec:	d9c00517 	ldw	r7,20(sp)
    b8f0:	da400317 	ldw	r9,12(sp)
    b8f4:	d8c00217 	ldw	r3,8(sp)
    b8f8:	3808d43a 	srli	r4,r7,16
    b8fc:	1245883a 	add	r2,r2,r9
    b900:	da000417 	ldw	r8,16(sp)
    b904:	2085883a 	add	r2,r4,r2
    b908:	1240022e 	bgeu	r2,r9,b914 <__divdf3+0x4b8>
    b90c:	01000074 	movhi	r4,1
    b910:	8121883a 	add	r16,r16,r4
    b914:	1008d43a 	srli	r4,r2,16
    b918:	1004943a 	slli	r2,r2,16
    b91c:	39ffffcc 	andi	r7,r7,65535
    b920:	2409883a 	add	r4,r4,r16
    b924:	11c5883a 	add	r2,r2,r7
    b928:	4100bb36 	bltu	r8,r4,bc18 <__divdf3+0x7bc>
    b92c:	4100d726 	beq	r8,r4,bc8c <__divdf3+0x830>
    b930:	4109c83a 	sub	r4,r8,r4
    b934:	a8a1c83a 	sub	r16,r21,r2
    b938:	ac2b803a 	cmpltu	r21,r21,r16
    b93c:	256bc83a 	sub	r21,r4,r21
    b940:	b540d926 	beq	r22,r21,bca8 <__divdf3+0x84c>
    b944:	a00b883a 	mov	r5,r20
    b948:	a809883a 	mov	r4,r21
    b94c:	d8c00215 	stw	r3,8(sp)
    b950:	00009500 	call	950 <__udivsi3>
    b954:	100b883a 	mov	r5,r2
    b958:	9009883a 	mov	r4,r18
    b95c:	d8800515 	stw	r2,20(sp)
    b960:	0000a0c0 	call	a0c <__mulsi3>
    b964:	a809883a 	mov	r4,r21
    b968:	a00b883a 	mov	r5,r20
    b96c:	d8800415 	stw	r2,16(sp)
    b970:	00009b40 	call	9b4 <__umodsi3>
    b974:	1004943a 	slli	r2,r2,16
    b978:	8008d43a 	srli	r4,r16,16
    b97c:	da000417 	ldw	r8,16(sp)
    b980:	d8c00217 	ldw	r3,8(sp)
    b984:	2084b03a 	or	r2,r4,r2
    b988:	d9c00517 	ldw	r7,20(sp)
    b98c:	1200062e 	bgeu	r2,r8,b9a8 <__divdf3+0x54c>
    b990:	1585883a 	add	r2,r2,r22
    b994:	393fffc4 	addi	r4,r7,-1
    b998:	1580c536 	bltu	r2,r22,bcb0 <__divdf3+0x854>
    b99c:	1200c42e 	bgeu	r2,r8,bcb0 <__divdf3+0x854>
    b9a0:	39ffff84 	addi	r7,r7,-2
    b9a4:	1585883a 	add	r2,r2,r22
    b9a8:	122bc83a 	sub	r21,r2,r8
    b9ac:	a00b883a 	mov	r5,r20
    b9b0:	a809883a 	mov	r4,r21
    b9b4:	d8c00215 	stw	r3,8(sp)
    b9b8:	d9c00515 	stw	r7,20(sp)
    b9bc:	00009500 	call	950 <__udivsi3>
    b9c0:	9009883a 	mov	r4,r18
    b9c4:	100b883a 	mov	r5,r2
    b9c8:	d8800415 	stw	r2,16(sp)
    b9cc:	0000a0c0 	call	a0c <__mulsi3>
    b9d0:	a809883a 	mov	r4,r21
    b9d4:	a00b883a 	mov	r5,r20
    b9d8:	1025883a 	mov	r18,r2
    b9dc:	00009b40 	call	9b4 <__umodsi3>
    b9e0:	1004943a 	slli	r2,r2,16
    b9e4:	813fffcc 	andi	r4,r16,65535
    b9e8:	d8c00217 	ldw	r3,8(sp)
    b9ec:	20a0b03a 	or	r16,r4,r2
    b9f0:	d9c00517 	ldw	r7,20(sp)
    b9f4:	da000417 	ldw	r8,16(sp)
    b9f8:	8480062e 	bgeu	r16,r18,ba14 <__divdf3+0x5b8>
    b9fc:	85a1883a 	add	r16,r16,r22
    ba00:	40bfffc4 	addi	r2,r8,-1
    ba04:	8580ac36 	bltu	r16,r22,bcb8 <__divdf3+0x85c>
    ba08:	8480ab2e 	bgeu	r16,r18,bcb8 <__divdf3+0x85c>
    ba0c:	423fff84 	addi	r8,r8,-2
    ba10:	85a1883a 	add	r16,r16,r22
    ba14:	3804943a 	slli	r2,r7,16
    ba18:	84a1c83a 	sub	r16,r16,r18
    ba1c:	e009883a 	mov	r4,fp
    ba20:	1228b03a 	or	r20,r2,r8
    ba24:	a1ffffcc 	andi	r7,r20,65535
    ba28:	a024d43a 	srli	r18,r20,16
    ba2c:	380b883a 	mov	r5,r7
    ba30:	d8c00215 	stw	r3,8(sp)
    ba34:	d9c00515 	stw	r7,20(sp)
    ba38:	0000a0c0 	call	a0c <__mulsi3>
    ba3c:	900b883a 	mov	r5,r18
    ba40:	e009883a 	mov	r4,fp
    ba44:	102b883a 	mov	r21,r2
    ba48:	0000a0c0 	call	a0c <__mulsi3>
    ba4c:	900b883a 	mov	r5,r18
    ba50:	b809883a 	mov	r4,r23
    ba54:	1039883a 	mov	fp,r2
    ba58:	0000a0c0 	call	a0c <__mulsi3>
    ba5c:	d9c00517 	ldw	r7,20(sp)
    ba60:	b80b883a 	mov	r5,r23
    ba64:	1025883a 	mov	r18,r2
    ba68:	3809883a 	mov	r4,r7
    ba6c:	0000a0c0 	call	a0c <__mulsi3>
    ba70:	a808d43a 	srli	r4,r21,16
    ba74:	1705883a 	add	r2,r2,fp
    ba78:	d8c00217 	ldw	r3,8(sp)
    ba7c:	2085883a 	add	r2,r4,r2
    ba80:	1700022e 	bgeu	r2,fp,ba8c <__divdf3+0x630>
    ba84:	01000074 	movhi	r4,1
    ba88:	9125883a 	add	r18,r18,r4
    ba8c:	1008d43a 	srli	r4,r2,16
    ba90:	1004943a 	slli	r2,r2,16
    ba94:	ad7fffcc 	andi	r21,r21,65535
    ba98:	2489883a 	add	r4,r4,r18
    ba9c:	1545883a 	add	r2,r2,r21
    baa0:	81003836 	bltu	r16,r4,bb84 <__divdf3+0x728>
    baa4:	81003626 	beq	r16,r4,bb80 <__divdf3+0x724>
    baa8:	a5000054 	ori	r20,r20,1
    baac:	1880ffc4 	addi	r2,r3,1023
    bab0:	00bf2e0e 	bge	zero,r2,b76c <__alt_mem_Onchip_SRAM+0xf800b76c>
    bab4:	a10001cc 	andi	r4,r20,7
    bab8:	20000726 	beq	r4,zero,bad8 <__divdf3+0x67c>
    babc:	a10003cc 	andi	r4,r20,15
    bac0:	01400104 	movi	r5,4
    bac4:	21400426 	beq	r4,r5,bad8 <__divdf3+0x67c>
    bac8:	a149883a 	add	r4,r20,r5
    bacc:	2529803a 	cmpltu	r20,r4,r20
    bad0:	8d23883a 	add	r17,r17,r20
    bad4:	2029883a 	mov	r20,r4
    bad8:	8900402c 	andhi	r4,r17,256
    badc:	20000426 	beq	r4,zero,baf0 <__divdf3+0x694>
    bae0:	18810004 	addi	r2,r3,1024
    bae4:	00ffc034 	movhi	r3,65280
    bae8:	18ffffc4 	addi	r3,r3,-1
    baec:	88e2703a 	and	r17,r17,r3
    baf0:	00c1ff84 	movi	r3,2046
    baf4:	18beb416 	blt	r3,r2,b5c8 <__alt_mem_Onchip_SRAM+0xf800b5c8>
    baf8:	a028d0fa 	srli	r20,r20,3
    bafc:	882a977a 	slli	r21,r17,29
    bb00:	8820927a 	slli	r16,r17,9
    bb04:	1081ffcc 	andi	r2,r2,2047
    bb08:	ad2ab03a 	or	r21,r21,r20
    bb0c:	8020d33a 	srli	r16,r16,12
    bb10:	9900004c 	andi	r4,r19,1
    bb14:	003eb006 	br	b5d8 <__alt_mem_Onchip_SRAM+0xf800b5d8>
    bb18:	8080022c 	andhi	r2,r16,8
    bb1c:	10001226 	beq	r2,zero,bb68 <__divdf3+0x70c>
    bb20:	8880022c 	andhi	r2,r17,8
    bb24:	1000101e 	bne	r2,zero,bb68 <__divdf3+0x70c>
    bb28:	00800434 	movhi	r2,16
    bb2c:	8c000234 	orhi	r16,r17,8
    bb30:	10bfffc4 	addi	r2,r2,-1
    bb34:	b809883a 	mov	r4,r23
    bb38:	80a0703a 	and	r16,r16,r2
    bb3c:	a02b883a 	mov	r21,r20
    bb40:	003f0806 	br	b764 <__alt_mem_Onchip_SRAM+0xf800b764>
    bb44:	008000c4 	movi	r2,3
    bb48:	3880b126 	beq	r7,r2,be10 <__divdf3+0x9b4>
    bb4c:	00800044 	movi	r2,1
    bb50:	38805b1e 	bne	r7,r2,bcc0 <__divdf3+0x864>
    bb54:	e009883a 	mov	r4,fp
    bb58:	0005883a 	mov	r2,zero
    bb5c:	0021883a 	mov	r16,zero
    bb60:	002b883a 	mov	r21,zero
    bb64:	003e9c06 	br	b5d8 <__alt_mem_Onchip_SRAM+0xf800b5d8>
    bb68:	00800434 	movhi	r2,16
    bb6c:	84000234 	orhi	r16,r16,8
    bb70:	10bfffc4 	addi	r2,r2,-1
    bb74:	b009883a 	mov	r4,r22
    bb78:	80a0703a 	and	r16,r16,r2
    bb7c:	003ef906 	br	b764 <__alt_mem_Onchip_SRAM+0xf800b764>
    bb80:	103fca26 	beq	r2,zero,baac <__alt_mem_Onchip_SRAM+0xf800baac>
    bb84:	b421883a 	add	r16,r22,r16
    bb88:	a17fffc4 	addi	r5,r20,-1
    bb8c:	8580422e 	bgeu	r16,r22,bc98 <__divdf3+0x83c>
    bb90:	2829883a 	mov	r20,r5
    bb94:	813fc41e 	bne	r16,r4,baa8 <__alt_mem_Onchip_SRAM+0xf800baa8>
    bb98:	d9800017 	ldw	r6,0(sp)
    bb9c:	30bfc21e 	bne	r6,r2,baa8 <__alt_mem_Onchip_SRAM+0xf800baa8>
    bba0:	003fc206 	br	baac <__alt_mem_Onchip_SRAM+0xf800baac>
    bba4:	143ff604 	addi	r16,r2,-40
    bba8:	8c20983a 	sll	r16,r17,r16
    bbac:	002b883a 	mov	r21,zero
    bbb0:	003eb406 	br	b684 <__alt_mem_Onchip_SRAM+0xf800b684>
    bbb4:	d9800215 	stw	r6,8(sp)
    bbb8:	d9c00515 	stw	r7,20(sp)
    bbbc:	da000415 	stw	r8,16(sp)
    bbc0:	0000bc80 	call	bc8 <__clzsi2>
    bbc4:	10800804 	addi	r2,r2,32
    bbc8:	da000417 	ldw	r8,16(sp)
    bbcc:	d9c00517 	ldw	r7,20(sp)
    bbd0:	d9800217 	ldw	r6,8(sp)
    bbd4:	003ea106 	br	b65c <__alt_mem_Onchip_SRAM+0xf800b65c>
    bbd8:	147ff604 	addi	r17,r2,-40
    bbdc:	3462983a 	sll	r17,r6,r17
    bbe0:	0029883a 	mov	r20,zero
    bbe4:	003ec906 	br	b70c <__alt_mem_Onchip_SRAM+0xf800b70c>
    bbe8:	3009883a 	mov	r4,r6
    bbec:	d9400115 	stw	r5,4(sp)
    bbf0:	d9800215 	stw	r6,8(sp)
    bbf4:	da000415 	stw	r8,16(sp)
    bbf8:	da400315 	stw	r9,12(sp)
    bbfc:	0000bc80 	call	bc8 <__clzsi2>
    bc00:	10800804 	addi	r2,r2,32
    bc04:	da400317 	ldw	r9,12(sp)
    bc08:	da000417 	ldw	r8,16(sp)
    bc0c:	d9800217 	ldw	r6,8(sp)
    bc10:	d9400117 	ldw	r5,4(sp)
    bc14:	003eb306 	br	b6e4 <__alt_mem_Onchip_SRAM+0xf800b6e4>
    bc18:	d9800017 	ldw	r6,0(sp)
    bc1c:	a9ab883a 	add	r21,r21,r6
    bc20:	a98b803a 	cmpltu	r5,r21,r6
    bc24:	2d8b883a 	add	r5,r5,r22
    bc28:	2a11883a 	add	r8,r5,r8
    bc2c:	897fffc4 	addi	r5,r17,-1
    bc30:	b2000c2e 	bgeu	r22,r8,bc64 <__divdf3+0x808>
    bc34:	41003f36 	bltu	r8,r4,bd34 <__divdf3+0x8d8>
    bc38:	22006c26 	beq	r4,r8,bdec <__divdf3+0x990>
    bc3c:	4109c83a 	sub	r4,r8,r4
    bc40:	2823883a 	mov	r17,r5
    bc44:	003f3b06 	br	b934 <__alt_mem_Onchip_SRAM+0xf800b934>
    bc48:	ad3ed336 	bltu	r21,r20,b798 <__alt_mem_Onchip_SRAM+0xf800b798>
    bc4c:	a804d07a 	srli	r2,r21,1
    bc50:	802e97fa 	slli	r23,r16,31
    bc54:	a82a97fa 	slli	r21,r21,31
    bc58:	8020d07a 	srli	r16,r16,1
    bc5c:	b8aeb03a 	or	r23,r23,r2
    bc60:	003ed006 	br	b7a4 <__alt_mem_Onchip_SRAM+0xf800b7a4>
    bc64:	b23ff51e 	bne	r22,r8,bc3c <__alt_mem_Onchip_SRAM+0xf800bc3c>
    bc68:	d9800017 	ldw	r6,0(sp)
    bc6c:	a9bff12e 	bgeu	r21,r6,bc34 <__alt_mem_Onchip_SRAM+0xf800bc34>
    bc70:	b109c83a 	sub	r4,r22,r4
    bc74:	2823883a 	mov	r17,r5
    bc78:	003f2e06 	br	b934 <__alt_mem_Onchip_SRAM+0xf800b934>
    bc7c:	2021883a 	mov	r16,r4
    bc80:	003eff06 	br	b880 <__alt_mem_Onchip_SRAM+0xf800b880>
    bc84:	2023883a 	mov	r17,r4
    bc88:	003ee406 	br	b81c <__alt_mem_Onchip_SRAM+0xf800b81c>
    bc8c:	a8bfe236 	bltu	r21,r2,bc18 <__alt_mem_Onchip_SRAM+0xf800bc18>
    bc90:	0009883a 	mov	r4,zero
    bc94:	003f2706 	br	b934 <__alt_mem_Onchip_SRAM+0xf800b934>
    bc98:	81002d36 	bltu	r16,r4,bd50 <__divdf3+0x8f4>
    bc9c:	24005626 	beq	r4,r16,bdf8 <__divdf3+0x99c>
    bca0:	2829883a 	mov	r20,r5
    bca4:	003f8006 	br	baa8 <__alt_mem_Onchip_SRAM+0xf800baa8>
    bca8:	053fffc4 	movi	r20,-1
    bcac:	003f7f06 	br	baac <__alt_mem_Onchip_SRAM+0xf800baac>
    bcb0:	200f883a 	mov	r7,r4
    bcb4:	003f3c06 	br	b9a8 <__alt_mem_Onchip_SRAM+0xf800b9a8>
    bcb8:	1011883a 	mov	r8,r2
    bcbc:	003f5506 	br	ba14 <__alt_mem_Onchip_SRAM+0xf800ba14>
    bcc0:	e027883a 	mov	r19,fp
    bcc4:	003f7906 	br	baac <__alt_mem_Onchip_SRAM+0xf800baac>
    bcc8:	010007c4 	movi	r4,31
    bccc:	20c02816 	blt	r4,r3,bd70 <__divdf3+0x914>
    bcd0:	00800804 	movi	r2,32
    bcd4:	10c5c83a 	sub	r2,r2,r3
    bcd8:	888a983a 	sll	r5,r17,r2
    bcdc:	a0c8d83a 	srl	r4,r20,r3
    bce0:	a084983a 	sll	r2,r20,r2
    bce4:	88e2d83a 	srl	r17,r17,r3
    bce8:	2906b03a 	or	r3,r5,r4
    bcec:	1004c03a 	cmpne	r2,r2,zero
    bcf0:	1886b03a 	or	r3,r3,r2
    bcf4:	188001cc 	andi	r2,r3,7
    bcf8:	10000726 	beq	r2,zero,bd18 <__divdf3+0x8bc>
    bcfc:	188003cc 	andi	r2,r3,15
    bd00:	01000104 	movi	r4,4
    bd04:	11000426 	beq	r2,r4,bd18 <__divdf3+0x8bc>
    bd08:	1805883a 	mov	r2,r3
    bd0c:	10c00104 	addi	r3,r2,4
    bd10:	1885803a 	cmpltu	r2,r3,r2
    bd14:	88a3883a 	add	r17,r17,r2
    bd18:	8880202c 	andhi	r2,r17,128
    bd1c:	10002926 	beq	r2,zero,bdc4 <__divdf3+0x968>
    bd20:	9900004c 	andi	r4,r19,1
    bd24:	00800044 	movi	r2,1
    bd28:	0021883a 	mov	r16,zero
    bd2c:	002b883a 	mov	r21,zero
    bd30:	003e2906 	br	b5d8 <__alt_mem_Onchip_SRAM+0xf800b5d8>
    bd34:	d9800017 	ldw	r6,0(sp)
    bd38:	8c7fff84 	addi	r17,r17,-2
    bd3c:	a9ab883a 	add	r21,r21,r6
    bd40:	a98b803a 	cmpltu	r5,r21,r6
    bd44:	2d8b883a 	add	r5,r5,r22
    bd48:	2a11883a 	add	r8,r5,r8
    bd4c:	003ef806 	br	b930 <__alt_mem_Onchip_SRAM+0xf800b930>
    bd50:	d9800017 	ldw	r6,0(sp)
    bd54:	318f883a 	add	r7,r6,r6
    bd58:	398b803a 	cmpltu	r5,r7,r6
    bd5c:	2d8d883a 	add	r6,r5,r22
    bd60:	81a1883a 	add	r16,r16,r6
    bd64:	a17fff84 	addi	r5,r20,-2
    bd68:	d9c00015 	stw	r7,0(sp)
    bd6c:	003f8806 	br	bb90 <__alt_mem_Onchip_SRAM+0xf800bb90>
    bd70:	013ff844 	movi	r4,-31
    bd74:	2085c83a 	sub	r2,r4,r2
    bd78:	8888d83a 	srl	r4,r17,r2
    bd7c:	00800804 	movi	r2,32
    bd80:	18802126 	beq	r3,r2,be08 <__divdf3+0x9ac>
    bd84:	04001004 	movi	r16,64
    bd88:	80c7c83a 	sub	r3,r16,r3
    bd8c:	88e0983a 	sll	r16,r17,r3
    bd90:	8504b03a 	or	r2,r16,r20
    bd94:	1004c03a 	cmpne	r2,r2,zero
    bd98:	2084b03a 	or	r2,r4,r2
    bd9c:	144001cc 	andi	r17,r2,7
    bda0:	88000d1e 	bne	r17,zero,bdd8 <__divdf3+0x97c>
    bda4:	0021883a 	mov	r16,zero
    bda8:	102ad0fa 	srli	r21,r2,3
    bdac:	9900004c 	andi	r4,r19,1
    bdb0:	0005883a 	mov	r2,zero
    bdb4:	ac6ab03a 	or	r21,r21,r17
    bdb8:	003e0706 	br	b5d8 <__alt_mem_Onchip_SRAM+0xf800b5d8>
    bdbc:	1007883a 	mov	r3,r2
    bdc0:	0023883a 	mov	r17,zero
    bdc4:	8820927a 	slli	r16,r17,9
    bdc8:	1805883a 	mov	r2,r3
    bdcc:	8822977a 	slli	r17,r17,29
    bdd0:	8020d33a 	srli	r16,r16,12
    bdd4:	003ff406 	br	bda8 <__alt_mem_Onchip_SRAM+0xf800bda8>
    bdd8:	10c003cc 	andi	r3,r2,15
    bddc:	01000104 	movi	r4,4
    bde0:	193ff626 	beq	r3,r4,bdbc <__alt_mem_Onchip_SRAM+0xf800bdbc>
    bde4:	0023883a 	mov	r17,zero
    bde8:	003fc806 	br	bd0c <__alt_mem_Onchip_SRAM+0xf800bd0c>
    bdec:	a8bfd136 	bltu	r21,r2,bd34 <__alt_mem_Onchip_SRAM+0xf800bd34>
    bdf0:	2823883a 	mov	r17,r5
    bdf4:	003fa606 	br	bc90 <__alt_mem_Onchip_SRAM+0xf800bc90>
    bdf8:	d9800017 	ldw	r6,0(sp)
    bdfc:	30bfd436 	bltu	r6,r2,bd50 <__alt_mem_Onchip_SRAM+0xf800bd50>
    be00:	2829883a 	mov	r20,r5
    be04:	003f6406 	br	bb98 <__alt_mem_Onchip_SRAM+0xf800bb98>
    be08:	0021883a 	mov	r16,zero
    be0c:	003fe006 	br	bd90 <__alt_mem_Onchip_SRAM+0xf800bd90>
    be10:	00800434 	movhi	r2,16
    be14:	8c000234 	orhi	r16,r17,8
    be18:	10bfffc4 	addi	r2,r2,-1
    be1c:	e009883a 	mov	r4,fp
    be20:	80a0703a 	and	r16,r16,r2
    be24:	a02b883a 	mov	r21,r20
    be28:	003e4e06 	br	b764 <__alt_mem_Onchip_SRAM+0xf800b764>

0000be2c <__eqdf2>:
    be2c:	2804d53a 	srli	r2,r5,20
    be30:	3806d53a 	srli	r3,r7,20
    be34:	02000434 	movhi	r8,16
    be38:	423fffc4 	addi	r8,r8,-1
    be3c:	1081ffcc 	andi	r2,r2,2047
    be40:	0281ffc4 	movi	r10,2047
    be44:	2a12703a 	and	r9,r5,r8
    be48:	18c1ffcc 	andi	r3,r3,2047
    be4c:	3a10703a 	and	r8,r7,r8
    be50:	280ad7fa 	srli	r5,r5,31
    be54:	380ed7fa 	srli	r7,r7,31
    be58:	12801026 	beq	r2,r10,be9c <__eqdf2+0x70>
    be5c:	0281ffc4 	movi	r10,2047
    be60:	1a800a26 	beq	r3,r10,be8c <__eqdf2+0x60>
    be64:	10c00226 	beq	r2,r3,be70 <__eqdf2+0x44>
    be68:	00800044 	movi	r2,1
    be6c:	f800283a 	ret
    be70:	4a3ffd1e 	bne	r9,r8,be68 <__alt_mem_Onchip_SRAM+0xf800be68>
    be74:	21bffc1e 	bne	r4,r6,be68 <__alt_mem_Onchip_SRAM+0xf800be68>
    be78:	29c00c26 	beq	r5,r7,beac <__eqdf2+0x80>
    be7c:	103ffa1e 	bne	r2,zero,be68 <__alt_mem_Onchip_SRAM+0xf800be68>
    be80:	2244b03a 	or	r2,r4,r9
    be84:	1004c03a 	cmpne	r2,r2,zero
    be88:	f800283a 	ret
    be8c:	3214b03a 	or	r10,r6,r8
    be90:	503ff426 	beq	r10,zero,be64 <__alt_mem_Onchip_SRAM+0xf800be64>
    be94:	00800044 	movi	r2,1
    be98:	f800283a 	ret
    be9c:	2254b03a 	or	r10,r4,r9
    bea0:	503fee26 	beq	r10,zero,be5c <__alt_mem_Onchip_SRAM+0xf800be5c>
    bea4:	00800044 	movi	r2,1
    bea8:	f800283a 	ret
    beac:	0005883a 	mov	r2,zero
    beb0:	f800283a 	ret

0000beb4 <__gedf2>:
    beb4:	2804d53a 	srli	r2,r5,20
    beb8:	3806d53a 	srli	r3,r7,20
    bebc:	02000434 	movhi	r8,16
    bec0:	423fffc4 	addi	r8,r8,-1
    bec4:	1081ffcc 	andi	r2,r2,2047
    bec8:	0241ffc4 	movi	r9,2047
    becc:	2a14703a 	and	r10,r5,r8
    bed0:	18c1ffcc 	andi	r3,r3,2047
    bed4:	3a10703a 	and	r8,r7,r8
    bed8:	280ad7fa 	srli	r5,r5,31
    bedc:	380ed7fa 	srli	r7,r7,31
    bee0:	12401d26 	beq	r2,r9,bf58 <__gedf2+0xa4>
    bee4:	0241ffc4 	movi	r9,2047
    bee8:	1a401226 	beq	r3,r9,bf34 <__gedf2+0x80>
    beec:	1000081e 	bne	r2,zero,bf10 <__gedf2+0x5c>
    bef0:	2296b03a 	or	r11,r4,r10
    bef4:	5813003a 	cmpeq	r9,r11,zero
    bef8:	1800091e 	bne	r3,zero,bf20 <__gedf2+0x6c>
    befc:	3218b03a 	or	r12,r6,r8
    bf00:	6000071e 	bne	r12,zero,bf20 <__gedf2+0x6c>
    bf04:	0005883a 	mov	r2,zero
    bf08:	5800101e 	bne	r11,zero,bf4c <__gedf2+0x98>
    bf0c:	f800283a 	ret
    bf10:	18000c1e 	bne	r3,zero,bf44 <__gedf2+0x90>
    bf14:	3212b03a 	or	r9,r6,r8
    bf18:	48000c26 	beq	r9,zero,bf4c <__gedf2+0x98>
    bf1c:	0013883a 	mov	r9,zero
    bf20:	39c03fcc 	andi	r7,r7,255
    bf24:	48000826 	beq	r9,zero,bf48 <__gedf2+0x94>
    bf28:	38000926 	beq	r7,zero,bf50 <__gedf2+0x9c>
    bf2c:	00800044 	movi	r2,1
    bf30:	f800283a 	ret
    bf34:	3212b03a 	or	r9,r6,r8
    bf38:	483fec26 	beq	r9,zero,beec <__alt_mem_Onchip_SRAM+0xf800beec>
    bf3c:	00bfff84 	movi	r2,-2
    bf40:	f800283a 	ret
    bf44:	39c03fcc 	andi	r7,r7,255
    bf48:	29c00626 	beq	r5,r7,bf64 <__gedf2+0xb0>
    bf4c:	283ff726 	beq	r5,zero,bf2c <__alt_mem_Onchip_SRAM+0xf800bf2c>
    bf50:	00bfffc4 	movi	r2,-1
    bf54:	f800283a 	ret
    bf58:	2292b03a 	or	r9,r4,r10
    bf5c:	483fe126 	beq	r9,zero,bee4 <__alt_mem_Onchip_SRAM+0xf800bee4>
    bf60:	003ff606 	br	bf3c <__alt_mem_Onchip_SRAM+0xf800bf3c>
    bf64:	18bff916 	blt	r3,r2,bf4c <__alt_mem_Onchip_SRAM+0xf800bf4c>
    bf68:	10c00316 	blt	r2,r3,bf78 <__gedf2+0xc4>
    bf6c:	42bff736 	bltu	r8,r10,bf4c <__alt_mem_Onchip_SRAM+0xf800bf4c>
    bf70:	52000326 	beq	r10,r8,bf80 <__gedf2+0xcc>
    bf74:	5200042e 	bgeu	r10,r8,bf88 <__gedf2+0xd4>
    bf78:	283fec1e 	bne	r5,zero,bf2c <__alt_mem_Onchip_SRAM+0xf800bf2c>
    bf7c:	003ff406 	br	bf50 <__alt_mem_Onchip_SRAM+0xf800bf50>
    bf80:	313ff236 	bltu	r6,r4,bf4c <__alt_mem_Onchip_SRAM+0xf800bf4c>
    bf84:	21bffc36 	bltu	r4,r6,bf78 <__alt_mem_Onchip_SRAM+0xf800bf78>
    bf88:	0005883a 	mov	r2,zero
    bf8c:	f800283a 	ret

0000bf90 <__ledf2>:
    bf90:	2804d53a 	srli	r2,r5,20
    bf94:	3810d53a 	srli	r8,r7,20
    bf98:	00c00434 	movhi	r3,16
    bf9c:	18ffffc4 	addi	r3,r3,-1
    bfa0:	1081ffcc 	andi	r2,r2,2047
    bfa4:	0241ffc4 	movi	r9,2047
    bfa8:	28d4703a 	and	r10,r5,r3
    bfac:	4201ffcc 	andi	r8,r8,2047
    bfb0:	38c6703a 	and	r3,r7,r3
    bfb4:	280ad7fa 	srli	r5,r5,31
    bfb8:	380ed7fa 	srli	r7,r7,31
    bfbc:	12401f26 	beq	r2,r9,c03c <__ledf2+0xac>
    bfc0:	0241ffc4 	movi	r9,2047
    bfc4:	42401426 	beq	r8,r9,c018 <__ledf2+0x88>
    bfc8:	1000091e 	bne	r2,zero,bff0 <__ledf2+0x60>
    bfcc:	2296b03a 	or	r11,r4,r10
    bfd0:	5813003a 	cmpeq	r9,r11,zero
    bfd4:	29403fcc 	andi	r5,r5,255
    bfd8:	40000a1e 	bne	r8,zero,c004 <__ledf2+0x74>
    bfdc:	30d8b03a 	or	r12,r6,r3
    bfe0:	6000081e 	bne	r12,zero,c004 <__ledf2+0x74>
    bfe4:	0005883a 	mov	r2,zero
    bfe8:	5800111e 	bne	r11,zero,c030 <__ledf2+0xa0>
    bfec:	f800283a 	ret
    bff0:	29403fcc 	andi	r5,r5,255
    bff4:	40000c1e 	bne	r8,zero,c028 <__ledf2+0x98>
    bff8:	30d2b03a 	or	r9,r6,r3
    bffc:	48000c26 	beq	r9,zero,c030 <__ledf2+0xa0>
    c000:	0013883a 	mov	r9,zero
    c004:	39c03fcc 	andi	r7,r7,255
    c008:	48000826 	beq	r9,zero,c02c <__ledf2+0x9c>
    c00c:	38001126 	beq	r7,zero,c054 <__ledf2+0xc4>
    c010:	00800044 	movi	r2,1
    c014:	f800283a 	ret
    c018:	30d2b03a 	or	r9,r6,r3
    c01c:	483fea26 	beq	r9,zero,bfc8 <__alt_mem_Onchip_SRAM+0xf800bfc8>
    c020:	00800084 	movi	r2,2
    c024:	f800283a 	ret
    c028:	39c03fcc 	andi	r7,r7,255
    c02c:	39400726 	beq	r7,r5,c04c <__ledf2+0xbc>
    c030:	2800081e 	bne	r5,zero,c054 <__ledf2+0xc4>
    c034:	00800044 	movi	r2,1
    c038:	f800283a 	ret
    c03c:	2292b03a 	or	r9,r4,r10
    c040:	483fdf26 	beq	r9,zero,bfc0 <__alt_mem_Onchip_SRAM+0xf800bfc0>
    c044:	00800084 	movi	r2,2
    c048:	f800283a 	ret
    c04c:	4080030e 	bge	r8,r2,c05c <__ledf2+0xcc>
    c050:	383fef26 	beq	r7,zero,c010 <__alt_mem_Onchip_SRAM+0xf800c010>
    c054:	00bfffc4 	movi	r2,-1
    c058:	f800283a 	ret
    c05c:	123feb16 	blt	r2,r8,c00c <__alt_mem_Onchip_SRAM+0xf800c00c>
    c060:	1abff336 	bltu	r3,r10,c030 <__alt_mem_Onchip_SRAM+0xf800c030>
    c064:	50c00326 	beq	r10,r3,c074 <__ledf2+0xe4>
    c068:	50c0042e 	bgeu	r10,r3,c07c <__ledf2+0xec>
    c06c:	283fe81e 	bne	r5,zero,c010 <__alt_mem_Onchip_SRAM+0xf800c010>
    c070:	003ff806 	br	c054 <__alt_mem_Onchip_SRAM+0xf800c054>
    c074:	313fee36 	bltu	r6,r4,c030 <__alt_mem_Onchip_SRAM+0xf800c030>
    c078:	21bffc36 	bltu	r4,r6,c06c <__alt_mem_Onchip_SRAM+0xf800c06c>
    c07c:	0005883a 	mov	r2,zero
    c080:	f800283a 	ret

0000c084 <__muldf3>:
    c084:	deffee04 	addi	sp,sp,-72
    c088:	dd000c15 	stw	r20,48(sp)
    c08c:	2828d53a 	srli	r20,r5,20
    c090:	ddc00f15 	stw	r23,60(sp)
    c094:	282ed7fa 	srli	r23,r5,31
    c098:	dc000815 	stw	r16,32(sp)
    c09c:	04000434 	movhi	r16,16
    c0a0:	dcc00b15 	stw	r19,44(sp)
    c0a4:	843fffc4 	addi	r16,r16,-1
    c0a8:	dfc01115 	stw	ra,68(sp)
    c0ac:	df001015 	stw	fp,64(sp)
    c0b0:	dd800e15 	stw	r22,56(sp)
    c0b4:	dd400d15 	stw	r21,52(sp)
    c0b8:	dc800a15 	stw	r18,40(sp)
    c0bc:	dc400915 	stw	r17,36(sp)
    c0c0:	a501ffcc 	andi	r20,r20,2047
    c0c4:	2c20703a 	and	r16,r5,r16
    c0c8:	b827883a 	mov	r19,r23
    c0cc:	ba403fcc 	andi	r9,r23,255
    c0d0:	a0006026 	beq	r20,zero,c254 <__muldf3+0x1d0>
    c0d4:	0081ffc4 	movi	r2,2047
    c0d8:	202d883a 	mov	r22,r4
    c0dc:	a0803626 	beq	r20,r2,c1b8 <__muldf3+0x134>
    c0e0:	84000434 	orhi	r16,r16,16
    c0e4:	200ad77a 	srli	r5,r4,29
    c0e8:	800490fa 	slli	r2,r16,3
    c0ec:	202c90fa 	slli	r22,r4,3
    c0f0:	a53f0044 	addi	r20,r20,-1023
    c0f4:	28a0b03a 	or	r16,r5,r2
    c0f8:	002b883a 	mov	r21,zero
    c0fc:	000b883a 	mov	r5,zero
    c100:	3804d53a 	srli	r2,r7,20
    c104:	3838d7fa 	srli	fp,r7,31
    c108:	04400434 	movhi	r17,16
    c10c:	8c7fffc4 	addi	r17,r17,-1
    c110:	1081ffcc 	andi	r2,r2,2047
    c114:	3025883a 	mov	r18,r6
    c118:	3c62703a 	and	r17,r7,r17
    c11c:	e2803fcc 	andi	r10,fp,255
    c120:	10006d26 	beq	r2,zero,c2d8 <__muldf3+0x254>
    c124:	00c1ffc4 	movi	r3,2047
    c128:	10c06526 	beq	r2,r3,c2c0 <__muldf3+0x23c>
    c12c:	8c400434 	orhi	r17,r17,16
    c130:	300ed77a 	srli	r7,r6,29
    c134:	880690fa 	slli	r3,r17,3
    c138:	302490fa 	slli	r18,r6,3
    c13c:	10bf0044 	addi	r2,r2,-1023
    c140:	38e2b03a 	or	r17,r7,r3
    c144:	000f883a 	mov	r7,zero
    c148:	a087883a 	add	r3,r20,r2
    c14c:	010003c4 	movi	r4,15
    c150:	3d44b03a 	or	r2,r7,r21
    c154:	e5ccf03a 	xor	r6,fp,r23
    c158:	1a000044 	addi	r8,r3,1
    c15c:	20809b36 	bltu	r4,r2,c3cc <__muldf3+0x348>
    c160:	100490ba 	slli	r2,r2,2
    c164:	01000074 	movhi	r4,1
    c168:	21305e04 	addi	r4,r4,-16008
    c16c:	1105883a 	add	r2,r2,r4
    c170:	10800017 	ldw	r2,0(r2)
    c174:	1000683a 	jmp	r2
    c178:	0000c3cc 	andi	zero,zero,783
    c17c:	0000c1d8 	cmpnei	zero,zero,775
    c180:	0000c1d8 	cmpnei	zero,zero,775
    c184:	0000c1d4 	movui	zero,775
    c188:	0000c3a8 	cmpgeui	zero,zero,782
    c18c:	0000c3a8 	cmpgeui	zero,zero,782
    c190:	0000c390 	cmplti	zero,zero,782
    c194:	0000c1d4 	movui	zero,775
    c198:	0000c3a8 	cmpgeui	zero,zero,782
    c19c:	0000c390 	cmplti	zero,zero,782
    c1a0:	0000c3a8 	cmpgeui	zero,zero,782
    c1a4:	0000c1d4 	movui	zero,775
    c1a8:	0000c3b8 	rdprs	zero,zero,782
    c1ac:	0000c3b8 	rdprs	zero,zero,782
    c1b0:	0000c3b8 	rdprs	zero,zero,782
    c1b4:	0000c718 	cmpnei	zero,zero,796
    c1b8:	2404b03a 	or	r2,r4,r16
    c1bc:	1000711e 	bne	r2,zero,c384 <__muldf3+0x300>
    c1c0:	05400204 	movi	r21,8
    c1c4:	0021883a 	mov	r16,zero
    c1c8:	002d883a 	mov	r22,zero
    c1cc:	01400084 	movi	r5,2
    c1d0:	003fcb06 	br	c100 <__alt_mem_Onchip_SRAM+0xf800c100>
    c1d4:	500d883a 	mov	r6,r10
    c1d8:	00800084 	movi	r2,2
    c1dc:	38805926 	beq	r7,r2,c344 <__muldf3+0x2c0>
    c1e0:	008000c4 	movi	r2,3
    c1e4:	3881bb26 	beq	r7,r2,c8d4 <__muldf3+0x850>
    c1e8:	00800044 	movi	r2,1
    c1ec:	3881961e 	bne	r7,r2,c848 <__muldf3+0x7c4>
    c1f0:	3027883a 	mov	r19,r6
    c1f4:	0005883a 	mov	r2,zero
    c1f8:	0021883a 	mov	r16,zero
    c1fc:	002d883a 	mov	r22,zero
    c200:	1004953a 	slli	r2,r2,20
    c204:	98c03fcc 	andi	r3,r19,255
    c208:	04400434 	movhi	r17,16
    c20c:	8c7fffc4 	addi	r17,r17,-1
    c210:	180697fa 	slli	r3,r3,31
    c214:	8460703a 	and	r16,r16,r17
    c218:	80a0b03a 	or	r16,r16,r2
    c21c:	80c6b03a 	or	r3,r16,r3
    c220:	b005883a 	mov	r2,r22
    c224:	dfc01117 	ldw	ra,68(sp)
    c228:	df001017 	ldw	fp,64(sp)
    c22c:	ddc00f17 	ldw	r23,60(sp)
    c230:	dd800e17 	ldw	r22,56(sp)
    c234:	dd400d17 	ldw	r21,52(sp)
    c238:	dd000c17 	ldw	r20,48(sp)
    c23c:	dcc00b17 	ldw	r19,44(sp)
    c240:	dc800a17 	ldw	r18,40(sp)
    c244:	dc400917 	ldw	r17,36(sp)
    c248:	dc000817 	ldw	r16,32(sp)
    c24c:	dec01204 	addi	sp,sp,72
    c250:	f800283a 	ret
    c254:	2404b03a 	or	r2,r4,r16
    c258:	202b883a 	mov	r21,r4
    c25c:	10004426 	beq	r2,zero,c370 <__muldf3+0x2ec>
    c260:	80015126 	beq	r16,zero,c7a8 <__muldf3+0x724>
    c264:	8009883a 	mov	r4,r16
    c268:	d9800715 	stw	r6,28(sp)
    c26c:	d9c00215 	stw	r7,8(sp)
    c270:	da400415 	stw	r9,16(sp)
    c274:	0000bc80 	call	bc8 <__clzsi2>
    c278:	d9800717 	ldw	r6,28(sp)
    c27c:	d9c00217 	ldw	r7,8(sp)
    c280:	da400417 	ldw	r9,16(sp)
    c284:	113ffd44 	addi	r4,r2,-11
    c288:	00c00704 	movi	r3,28
    c28c:	19014216 	blt	r3,r4,c798 <__muldf3+0x714>
    c290:	00c00744 	movi	r3,29
    c294:	15bffe04 	addi	r22,r2,-8
    c298:	1907c83a 	sub	r3,r3,r4
    c29c:	85a0983a 	sll	r16,r16,r22
    c2a0:	a8c6d83a 	srl	r3,r21,r3
    c2a4:	adac983a 	sll	r22,r21,r22
    c2a8:	1c20b03a 	or	r16,r3,r16
    c2ac:	1080fcc4 	addi	r2,r2,1011
    c2b0:	00a9c83a 	sub	r20,zero,r2
    c2b4:	002b883a 	mov	r21,zero
    c2b8:	000b883a 	mov	r5,zero
    c2bc:	003f9006 	br	c100 <__alt_mem_Onchip_SRAM+0xf800c100>
    c2c0:	3446b03a 	or	r3,r6,r17
    c2c4:	1800281e 	bne	r3,zero,c368 <__muldf3+0x2e4>
    c2c8:	0023883a 	mov	r17,zero
    c2cc:	0025883a 	mov	r18,zero
    c2d0:	01c00084 	movi	r7,2
    c2d4:	003f9c06 	br	c148 <__alt_mem_Onchip_SRAM+0xf800c148>
    c2d8:	3446b03a 	or	r3,r6,r17
    c2dc:	18001e26 	beq	r3,zero,c358 <__muldf3+0x2d4>
    c2e0:	88012126 	beq	r17,zero,c768 <__muldf3+0x6e4>
    c2e4:	8809883a 	mov	r4,r17
    c2e8:	d9400215 	stw	r5,8(sp)
    c2ec:	d9800715 	stw	r6,28(sp)
    c2f0:	da400415 	stw	r9,16(sp)
    c2f4:	da800315 	stw	r10,12(sp)
    c2f8:	0000bc80 	call	bc8 <__clzsi2>
    c2fc:	d9400217 	ldw	r5,8(sp)
    c300:	d9800717 	ldw	r6,28(sp)
    c304:	da400417 	ldw	r9,16(sp)
    c308:	da800317 	ldw	r10,12(sp)
    c30c:	113ffd44 	addi	r4,r2,-11
    c310:	00c00704 	movi	r3,28
    c314:	19011016 	blt	r3,r4,c758 <__muldf3+0x6d4>
    c318:	00c00744 	movi	r3,29
    c31c:	14bffe04 	addi	r18,r2,-8
    c320:	1907c83a 	sub	r3,r3,r4
    c324:	8ca2983a 	sll	r17,r17,r18
    c328:	30c6d83a 	srl	r3,r6,r3
    c32c:	34a4983a 	sll	r18,r6,r18
    c330:	1c62b03a 	or	r17,r3,r17
    c334:	1080fcc4 	addi	r2,r2,1011
    c338:	0085c83a 	sub	r2,zero,r2
    c33c:	000f883a 	mov	r7,zero
    c340:	003f8106 	br	c148 <__alt_mem_Onchip_SRAM+0xf800c148>
    c344:	3027883a 	mov	r19,r6
    c348:	0081ffc4 	movi	r2,2047
    c34c:	0021883a 	mov	r16,zero
    c350:	002d883a 	mov	r22,zero
    c354:	003faa06 	br	c200 <__alt_mem_Onchip_SRAM+0xf800c200>
    c358:	0023883a 	mov	r17,zero
    c35c:	0025883a 	mov	r18,zero
    c360:	01c00044 	movi	r7,1
    c364:	003f7806 	br	c148 <__alt_mem_Onchip_SRAM+0xf800c148>
    c368:	01c000c4 	movi	r7,3
    c36c:	003f7606 	br	c148 <__alt_mem_Onchip_SRAM+0xf800c148>
    c370:	05400104 	movi	r21,4
    c374:	0021883a 	mov	r16,zero
    c378:	002d883a 	mov	r22,zero
    c37c:	01400044 	movi	r5,1
    c380:	003f5f06 	br	c100 <__alt_mem_Onchip_SRAM+0xf800c100>
    c384:	05400304 	movi	r21,12
    c388:	014000c4 	movi	r5,3
    c38c:	003f5c06 	br	c100 <__alt_mem_Onchip_SRAM+0xf800c100>
    c390:	04000434 	movhi	r16,16
    c394:	0027883a 	mov	r19,zero
    c398:	843fffc4 	addi	r16,r16,-1
    c39c:	05bfffc4 	movi	r22,-1
    c3a0:	0081ffc4 	movi	r2,2047
    c3a4:	003f9606 	br	c200 <__alt_mem_Onchip_SRAM+0xf800c200>
    c3a8:	8023883a 	mov	r17,r16
    c3ac:	b025883a 	mov	r18,r22
    c3b0:	280f883a 	mov	r7,r5
    c3b4:	003f8806 	br	c1d8 <__alt_mem_Onchip_SRAM+0xf800c1d8>
    c3b8:	8023883a 	mov	r17,r16
    c3bc:	b025883a 	mov	r18,r22
    c3c0:	480d883a 	mov	r6,r9
    c3c4:	280f883a 	mov	r7,r5
    c3c8:	003f8306 	br	c1d8 <__alt_mem_Onchip_SRAM+0xf800c1d8>
    c3cc:	b026d43a 	srli	r19,r22,16
    c3d0:	902ed43a 	srli	r23,r18,16
    c3d4:	b5bfffcc 	andi	r22,r22,65535
    c3d8:	94bfffcc 	andi	r18,r18,65535
    c3dc:	b00b883a 	mov	r5,r22
    c3e0:	9009883a 	mov	r4,r18
    c3e4:	d8c00515 	stw	r3,20(sp)
    c3e8:	d9800715 	stw	r6,28(sp)
    c3ec:	da000615 	stw	r8,24(sp)
    c3f0:	0000a0c0 	call	a0c <__mulsi3>
    c3f4:	980b883a 	mov	r5,r19
    c3f8:	9009883a 	mov	r4,r18
    c3fc:	1029883a 	mov	r20,r2
    c400:	0000a0c0 	call	a0c <__mulsi3>
    c404:	b80b883a 	mov	r5,r23
    c408:	9809883a 	mov	r4,r19
    c40c:	102b883a 	mov	r21,r2
    c410:	0000a0c0 	call	a0c <__mulsi3>
    c414:	b809883a 	mov	r4,r23
    c418:	b00b883a 	mov	r5,r22
    c41c:	1039883a 	mov	fp,r2
    c420:	0000a0c0 	call	a0c <__mulsi3>
    c424:	a008d43a 	srli	r4,r20,16
    c428:	1545883a 	add	r2,r2,r21
    c42c:	d8c00517 	ldw	r3,20(sp)
    c430:	2085883a 	add	r2,r4,r2
    c434:	d9800717 	ldw	r6,28(sp)
    c438:	da000617 	ldw	r8,24(sp)
    c43c:	1540022e 	bgeu	r2,r21,c448 <__muldf3+0x3c4>
    c440:	01000074 	movhi	r4,1
    c444:	e139883a 	add	fp,fp,r4
    c448:	100e943a 	slli	r7,r2,16
    c44c:	1004d43a 	srli	r2,r2,16
    c450:	882ad43a 	srli	r21,r17,16
    c454:	a53fffcc 	andi	r20,r20,65535
    c458:	8c7fffcc 	andi	r17,r17,65535
    c45c:	3d29883a 	add	r20,r7,r20
    c460:	b00b883a 	mov	r5,r22
    c464:	8809883a 	mov	r4,r17
    c468:	d8c00515 	stw	r3,20(sp)
    c46c:	d9800715 	stw	r6,28(sp)
    c470:	da000615 	stw	r8,24(sp)
    c474:	dd000115 	stw	r20,4(sp)
    c478:	d8800015 	stw	r2,0(sp)
    c47c:	0000a0c0 	call	a0c <__mulsi3>
    c480:	980b883a 	mov	r5,r19
    c484:	8809883a 	mov	r4,r17
    c488:	d8800215 	stw	r2,8(sp)
    c48c:	0000a0c0 	call	a0c <__mulsi3>
    c490:	9809883a 	mov	r4,r19
    c494:	a80b883a 	mov	r5,r21
    c498:	1029883a 	mov	r20,r2
    c49c:	0000a0c0 	call	a0c <__mulsi3>
    c4a0:	b00b883a 	mov	r5,r22
    c4a4:	a809883a 	mov	r4,r21
    c4a8:	d8800415 	stw	r2,16(sp)
    c4ac:	0000a0c0 	call	a0c <__mulsi3>
    c4b0:	d9c00217 	ldw	r7,8(sp)
    c4b4:	1505883a 	add	r2,r2,r20
    c4b8:	d8c00517 	ldw	r3,20(sp)
    c4bc:	3826d43a 	srli	r19,r7,16
    c4c0:	d9800717 	ldw	r6,28(sp)
    c4c4:	da000617 	ldw	r8,24(sp)
    c4c8:	9885883a 	add	r2,r19,r2
    c4cc:	da400417 	ldw	r9,16(sp)
    c4d0:	1500022e 	bgeu	r2,r20,c4dc <__muldf3+0x458>
    c4d4:	01000074 	movhi	r4,1
    c4d8:	4913883a 	add	r9,r9,r4
    c4dc:	1028d43a 	srli	r20,r2,16
    c4e0:	1004943a 	slli	r2,r2,16
    c4e4:	802cd43a 	srli	r22,r16,16
    c4e8:	843fffcc 	andi	r16,r16,65535
    c4ec:	3cffffcc 	andi	r19,r7,65535
    c4f0:	9009883a 	mov	r4,r18
    c4f4:	800b883a 	mov	r5,r16
    c4f8:	a269883a 	add	r20,r20,r9
    c4fc:	d8c00515 	stw	r3,20(sp)
    c500:	d9800715 	stw	r6,28(sp)
    c504:	da000615 	stw	r8,24(sp)
    c508:	14e7883a 	add	r19,r2,r19
    c50c:	0000a0c0 	call	a0c <__mulsi3>
    c510:	9009883a 	mov	r4,r18
    c514:	b00b883a 	mov	r5,r22
    c518:	d8800315 	stw	r2,12(sp)
    c51c:	0000a0c0 	call	a0c <__mulsi3>
    c520:	b809883a 	mov	r4,r23
    c524:	b00b883a 	mov	r5,r22
    c528:	d8800215 	stw	r2,8(sp)
    c52c:	0000a0c0 	call	a0c <__mulsi3>
    c530:	b80b883a 	mov	r5,r23
    c534:	8009883a 	mov	r4,r16
    c538:	d8800415 	stw	r2,16(sp)
    c53c:	0000a0c0 	call	a0c <__mulsi3>
    c540:	da800317 	ldw	r10,12(sp)
    c544:	d9c00217 	ldw	r7,8(sp)
    c548:	d9000017 	ldw	r4,0(sp)
    c54c:	502ed43a 	srli	r23,r10,16
    c550:	11c5883a 	add	r2,r2,r7
    c554:	24e5883a 	add	r18,r4,r19
    c558:	b885883a 	add	r2,r23,r2
    c55c:	d8c00517 	ldw	r3,20(sp)
    c560:	d9800717 	ldw	r6,28(sp)
    c564:	da000617 	ldw	r8,24(sp)
    c568:	da400417 	ldw	r9,16(sp)
    c56c:	11c0022e 	bgeu	r2,r7,c578 <__muldf3+0x4f4>
    c570:	01000074 	movhi	r4,1
    c574:	4913883a 	add	r9,r9,r4
    c578:	100ed43a 	srli	r7,r2,16
    c57c:	1004943a 	slli	r2,r2,16
    c580:	55ffffcc 	andi	r23,r10,65535
    c584:	3a53883a 	add	r9,r7,r9
    c588:	8809883a 	mov	r4,r17
    c58c:	800b883a 	mov	r5,r16
    c590:	d8c00515 	stw	r3,20(sp)
    c594:	d9800715 	stw	r6,28(sp)
    c598:	da000615 	stw	r8,24(sp)
    c59c:	da400415 	stw	r9,16(sp)
    c5a0:	15ef883a 	add	r23,r2,r23
    c5a4:	0000a0c0 	call	a0c <__mulsi3>
    c5a8:	8809883a 	mov	r4,r17
    c5ac:	b00b883a 	mov	r5,r22
    c5b0:	d8800215 	stw	r2,8(sp)
    c5b4:	0000a0c0 	call	a0c <__mulsi3>
    c5b8:	b00b883a 	mov	r5,r22
    c5bc:	a809883a 	mov	r4,r21
    c5c0:	d8800315 	stw	r2,12(sp)
    c5c4:	0000a0c0 	call	a0c <__mulsi3>
    c5c8:	8009883a 	mov	r4,r16
    c5cc:	a80b883a 	mov	r5,r21
    c5d0:	1023883a 	mov	r17,r2
    c5d4:	0000a0c0 	call	a0c <__mulsi3>
    c5d8:	d9c00217 	ldw	r7,8(sp)
    c5dc:	da800317 	ldw	r10,12(sp)
    c5e0:	d8c00517 	ldw	r3,20(sp)
    c5e4:	3808d43a 	srli	r4,r7,16
    c5e8:	1285883a 	add	r2,r2,r10
    c5ec:	d9800717 	ldw	r6,28(sp)
    c5f0:	2085883a 	add	r2,r4,r2
    c5f4:	da000617 	ldw	r8,24(sp)
    c5f8:	da400417 	ldw	r9,16(sp)
    c5fc:	1280022e 	bgeu	r2,r10,c608 <__muldf3+0x584>
    c600:	01000074 	movhi	r4,1
    c604:	8923883a 	add	r17,r17,r4
    c608:	1008943a 	slli	r4,r2,16
    c60c:	39ffffcc 	andi	r7,r7,65535
    c610:	e4b9883a 	add	fp,fp,r18
    c614:	21cf883a 	add	r7,r4,r7
    c618:	e4e7803a 	cmpltu	r19,fp,r19
    c61c:	3d0f883a 	add	r7,r7,r20
    c620:	bf39883a 	add	fp,r23,fp
    c624:	99c9883a 	add	r4,r19,r7
    c628:	e5ef803a 	cmpltu	r23,fp,r23
    c62c:	490b883a 	add	r5,r9,r4
    c630:	1004d43a 	srli	r2,r2,16
    c634:	b965883a 	add	r18,r23,r5
    c638:	24c9803a 	cmpltu	r4,r4,r19
    c63c:	3d29803a 	cmpltu	r20,r7,r20
    c640:	a128b03a 	or	r20,r20,r4
    c644:	95ef803a 	cmpltu	r23,r18,r23
    c648:	2a53803a 	cmpltu	r9,r5,r9
    c64c:	a0a9883a 	add	r20,r20,r2
    c650:	4deeb03a 	or	r23,r9,r23
    c654:	a5ef883a 	add	r23,r20,r23
    c658:	bc63883a 	add	r17,r23,r17
    c65c:	e004927a 	slli	r2,fp,9
    c660:	d9000117 	ldw	r4,4(sp)
    c664:	882e927a 	slli	r23,r17,9
    c668:	9022d5fa 	srli	r17,r18,23
    c66c:	e038d5fa 	srli	fp,fp,23
    c670:	1104b03a 	or	r2,r2,r4
    c674:	9024927a 	slli	r18,r18,9
    c678:	1004c03a 	cmpne	r2,r2,zero
    c67c:	bc62b03a 	or	r17,r23,r17
    c680:	1738b03a 	or	fp,r2,fp
    c684:	8880402c 	andhi	r2,r17,256
    c688:	e4a4b03a 	or	r18,fp,r18
    c68c:	10000726 	beq	r2,zero,c6ac <__muldf3+0x628>
    c690:	9006d07a 	srli	r3,r18,1
    c694:	880497fa 	slli	r2,r17,31
    c698:	9480004c 	andi	r18,r18,1
    c69c:	8822d07a 	srli	r17,r17,1
    c6a0:	1ca4b03a 	or	r18,r3,r18
    c6a4:	14a4b03a 	or	r18,r2,r18
    c6a8:	4007883a 	mov	r3,r8
    c6ac:	1880ffc4 	addi	r2,r3,1023
    c6b0:	0080460e 	bge	zero,r2,c7cc <__muldf3+0x748>
    c6b4:	910001cc 	andi	r4,r18,7
    c6b8:	20000726 	beq	r4,zero,c6d8 <__muldf3+0x654>
    c6bc:	910003cc 	andi	r4,r18,15
    c6c0:	01400104 	movi	r5,4
    c6c4:	21400426 	beq	r4,r5,c6d8 <__muldf3+0x654>
    c6c8:	9149883a 	add	r4,r18,r5
    c6cc:	24a5803a 	cmpltu	r18,r4,r18
    c6d0:	8ca3883a 	add	r17,r17,r18
    c6d4:	2025883a 	mov	r18,r4
    c6d8:	8900402c 	andhi	r4,r17,256
    c6dc:	20000426 	beq	r4,zero,c6f0 <__muldf3+0x66c>
    c6e0:	18810004 	addi	r2,r3,1024
    c6e4:	00ffc034 	movhi	r3,65280
    c6e8:	18ffffc4 	addi	r3,r3,-1
    c6ec:	88e2703a 	and	r17,r17,r3
    c6f0:	00c1ff84 	movi	r3,2046
    c6f4:	18bf1316 	blt	r3,r2,c344 <__alt_mem_Onchip_SRAM+0xf800c344>
    c6f8:	882c977a 	slli	r22,r17,29
    c6fc:	9024d0fa 	srli	r18,r18,3
    c700:	8822927a 	slli	r17,r17,9
    c704:	1081ffcc 	andi	r2,r2,2047
    c708:	b4acb03a 	or	r22,r22,r18
    c70c:	8820d33a 	srli	r16,r17,12
    c710:	3027883a 	mov	r19,r6
    c714:	003eba06 	br	c200 <__alt_mem_Onchip_SRAM+0xf800c200>
    c718:	8080022c 	andhi	r2,r16,8
    c71c:	10000926 	beq	r2,zero,c744 <__muldf3+0x6c0>
    c720:	8880022c 	andhi	r2,r17,8
    c724:	1000071e 	bne	r2,zero,c744 <__muldf3+0x6c0>
    c728:	00800434 	movhi	r2,16
    c72c:	8c000234 	orhi	r16,r17,8
    c730:	10bfffc4 	addi	r2,r2,-1
    c734:	e027883a 	mov	r19,fp
    c738:	80a0703a 	and	r16,r16,r2
    c73c:	902d883a 	mov	r22,r18
    c740:	003f1706 	br	c3a0 <__alt_mem_Onchip_SRAM+0xf800c3a0>
    c744:	00800434 	movhi	r2,16
    c748:	84000234 	orhi	r16,r16,8
    c74c:	10bfffc4 	addi	r2,r2,-1
    c750:	80a0703a 	and	r16,r16,r2
    c754:	003f1206 	br	c3a0 <__alt_mem_Onchip_SRAM+0xf800c3a0>
    c758:	147ff604 	addi	r17,r2,-40
    c75c:	3462983a 	sll	r17,r6,r17
    c760:	0025883a 	mov	r18,zero
    c764:	003ef306 	br	c334 <__alt_mem_Onchip_SRAM+0xf800c334>
    c768:	3009883a 	mov	r4,r6
    c76c:	d9400215 	stw	r5,8(sp)
    c770:	d9800715 	stw	r6,28(sp)
    c774:	da400415 	stw	r9,16(sp)
    c778:	da800315 	stw	r10,12(sp)
    c77c:	0000bc80 	call	bc8 <__clzsi2>
    c780:	10800804 	addi	r2,r2,32
    c784:	da800317 	ldw	r10,12(sp)
    c788:	da400417 	ldw	r9,16(sp)
    c78c:	d9800717 	ldw	r6,28(sp)
    c790:	d9400217 	ldw	r5,8(sp)
    c794:	003edd06 	br	c30c <__alt_mem_Onchip_SRAM+0xf800c30c>
    c798:	143ff604 	addi	r16,r2,-40
    c79c:	ac20983a 	sll	r16,r21,r16
    c7a0:	002d883a 	mov	r22,zero
    c7a4:	003ec106 	br	c2ac <__alt_mem_Onchip_SRAM+0xf800c2ac>
    c7a8:	d9800715 	stw	r6,28(sp)
    c7ac:	d9c00215 	stw	r7,8(sp)
    c7b0:	da400415 	stw	r9,16(sp)
    c7b4:	0000bc80 	call	bc8 <__clzsi2>
    c7b8:	10800804 	addi	r2,r2,32
    c7bc:	da400417 	ldw	r9,16(sp)
    c7c0:	d9c00217 	ldw	r7,8(sp)
    c7c4:	d9800717 	ldw	r6,28(sp)
    c7c8:	003eae06 	br	c284 <__alt_mem_Onchip_SRAM+0xf800c284>
    c7cc:	00c00044 	movi	r3,1
    c7d0:	1887c83a 	sub	r3,r3,r2
    c7d4:	01000e04 	movi	r4,56
    c7d8:	20fe8516 	blt	r4,r3,c1f0 <__alt_mem_Onchip_SRAM+0xf800c1f0>
    c7dc:	010007c4 	movi	r4,31
    c7e0:	20c01b16 	blt	r4,r3,c850 <__muldf3+0x7cc>
    c7e4:	00800804 	movi	r2,32
    c7e8:	10c5c83a 	sub	r2,r2,r3
    c7ec:	888a983a 	sll	r5,r17,r2
    c7f0:	90c8d83a 	srl	r4,r18,r3
    c7f4:	9084983a 	sll	r2,r18,r2
    c7f8:	88e2d83a 	srl	r17,r17,r3
    c7fc:	2906b03a 	or	r3,r5,r4
    c800:	1004c03a 	cmpne	r2,r2,zero
    c804:	1886b03a 	or	r3,r3,r2
    c808:	188001cc 	andi	r2,r3,7
    c80c:	10000726 	beq	r2,zero,c82c <__muldf3+0x7a8>
    c810:	188003cc 	andi	r2,r3,15
    c814:	01000104 	movi	r4,4
    c818:	11000426 	beq	r2,r4,c82c <__muldf3+0x7a8>
    c81c:	1805883a 	mov	r2,r3
    c820:	10c00104 	addi	r3,r2,4
    c824:	1885803a 	cmpltu	r2,r3,r2
    c828:	88a3883a 	add	r17,r17,r2
    c82c:	8880202c 	andhi	r2,r17,128
    c830:	10001c26 	beq	r2,zero,c8a4 <__muldf3+0x820>
    c834:	3027883a 	mov	r19,r6
    c838:	00800044 	movi	r2,1
    c83c:	0021883a 	mov	r16,zero
    c840:	002d883a 	mov	r22,zero
    c844:	003e6e06 	br	c200 <__alt_mem_Onchip_SRAM+0xf800c200>
    c848:	4007883a 	mov	r3,r8
    c84c:	003f9706 	br	c6ac <__alt_mem_Onchip_SRAM+0xf800c6ac>
    c850:	017ff844 	movi	r5,-31
    c854:	2885c83a 	sub	r2,r5,r2
    c858:	888ad83a 	srl	r5,r17,r2
    c85c:	00800804 	movi	r2,32
    c860:	18801a26 	beq	r3,r2,c8cc <__muldf3+0x848>
    c864:	01001004 	movi	r4,64
    c868:	20c7c83a 	sub	r3,r4,r3
    c86c:	88e2983a 	sll	r17,r17,r3
    c870:	8ca4b03a 	or	r18,r17,r18
    c874:	9004c03a 	cmpne	r2,r18,zero
    c878:	2884b03a 	or	r2,r5,r2
    c87c:	144001cc 	andi	r17,r2,7
    c880:	88000d1e 	bne	r17,zero,c8b8 <__muldf3+0x834>
    c884:	0021883a 	mov	r16,zero
    c888:	102cd0fa 	srli	r22,r2,3
    c88c:	3027883a 	mov	r19,r6
    c890:	0005883a 	mov	r2,zero
    c894:	b46cb03a 	or	r22,r22,r17
    c898:	003e5906 	br	c200 <__alt_mem_Onchip_SRAM+0xf800c200>
    c89c:	1007883a 	mov	r3,r2
    c8a0:	0023883a 	mov	r17,zero
    c8a4:	8820927a 	slli	r16,r17,9
    c8a8:	1805883a 	mov	r2,r3
    c8ac:	8822977a 	slli	r17,r17,29
    c8b0:	8020d33a 	srli	r16,r16,12
    c8b4:	003ff406 	br	c888 <__alt_mem_Onchip_SRAM+0xf800c888>
    c8b8:	10c003cc 	andi	r3,r2,15
    c8bc:	01000104 	movi	r4,4
    c8c0:	193ff626 	beq	r3,r4,c89c <__alt_mem_Onchip_SRAM+0xf800c89c>
    c8c4:	0023883a 	mov	r17,zero
    c8c8:	003fd506 	br	c820 <__alt_mem_Onchip_SRAM+0xf800c820>
    c8cc:	0023883a 	mov	r17,zero
    c8d0:	003fe706 	br	c870 <__alt_mem_Onchip_SRAM+0xf800c870>
    c8d4:	00800434 	movhi	r2,16
    c8d8:	8c000234 	orhi	r16,r17,8
    c8dc:	10bfffc4 	addi	r2,r2,-1
    c8e0:	3027883a 	mov	r19,r6
    c8e4:	80a0703a 	and	r16,r16,r2
    c8e8:	902d883a 	mov	r22,r18
    c8ec:	003eac06 	br	c3a0 <__alt_mem_Onchip_SRAM+0xf800c3a0>

0000c8f0 <__subdf3>:
    c8f0:	02000434 	movhi	r8,16
    c8f4:	423fffc4 	addi	r8,r8,-1
    c8f8:	defffb04 	addi	sp,sp,-20
    c8fc:	2a14703a 	and	r10,r5,r8
    c900:	3812d53a 	srli	r9,r7,20
    c904:	3a10703a 	and	r8,r7,r8
    c908:	2006d77a 	srli	r3,r4,29
    c90c:	3004d77a 	srli	r2,r6,29
    c910:	dc000015 	stw	r16,0(sp)
    c914:	501490fa 	slli	r10,r10,3
    c918:	2820d53a 	srli	r16,r5,20
    c91c:	401090fa 	slli	r8,r8,3
    c920:	dc800215 	stw	r18,8(sp)
    c924:	dc400115 	stw	r17,4(sp)
    c928:	dfc00415 	stw	ra,16(sp)
    c92c:	202290fa 	slli	r17,r4,3
    c930:	dcc00315 	stw	r19,12(sp)
    c934:	4a41ffcc 	andi	r9,r9,2047
    c938:	0101ffc4 	movi	r4,2047
    c93c:	2824d7fa 	srli	r18,r5,31
    c940:	8401ffcc 	andi	r16,r16,2047
    c944:	50c6b03a 	or	r3,r10,r3
    c948:	380ed7fa 	srli	r7,r7,31
    c94c:	408ab03a 	or	r5,r8,r2
    c950:	300c90fa 	slli	r6,r6,3
    c954:	49009626 	beq	r9,r4,cbb0 <__subdf3+0x2c0>
    c958:	39c0005c 	xori	r7,r7,1
    c95c:	8245c83a 	sub	r2,r16,r9
    c960:	3c807426 	beq	r7,r18,cb34 <__subdf3+0x244>
    c964:	0080af0e 	bge	zero,r2,cc24 <__subdf3+0x334>
    c968:	48002a1e 	bne	r9,zero,ca14 <__subdf3+0x124>
    c96c:	2988b03a 	or	r4,r5,r6
    c970:	20009a1e 	bne	r4,zero,cbdc <__subdf3+0x2ec>
    c974:	888001cc 	andi	r2,r17,7
    c978:	10000726 	beq	r2,zero,c998 <__subdf3+0xa8>
    c97c:	888003cc 	andi	r2,r17,15
    c980:	01000104 	movi	r4,4
    c984:	11000426 	beq	r2,r4,c998 <__subdf3+0xa8>
    c988:	890b883a 	add	r5,r17,r4
    c98c:	2c63803a 	cmpltu	r17,r5,r17
    c990:	1c47883a 	add	r3,r3,r17
    c994:	2823883a 	mov	r17,r5
    c998:	1880202c 	andhi	r2,r3,128
    c99c:	10005926 	beq	r2,zero,cb04 <__subdf3+0x214>
    c9a0:	84000044 	addi	r16,r16,1
    c9a4:	0081ffc4 	movi	r2,2047
    c9a8:	8080be26 	beq	r16,r2,cca4 <__subdf3+0x3b4>
    c9ac:	017fe034 	movhi	r5,65408
    c9b0:	297fffc4 	addi	r5,r5,-1
    c9b4:	1946703a 	and	r3,r3,r5
    c9b8:	1804977a 	slli	r2,r3,29
    c9bc:	1806927a 	slli	r3,r3,9
    c9c0:	8822d0fa 	srli	r17,r17,3
    c9c4:	8401ffcc 	andi	r16,r16,2047
    c9c8:	180ad33a 	srli	r5,r3,12
    c9cc:	9100004c 	andi	r4,r18,1
    c9d0:	1444b03a 	or	r2,r2,r17
    c9d4:	80c1ffcc 	andi	r3,r16,2047
    c9d8:	1820953a 	slli	r16,r3,20
    c9dc:	20c03fcc 	andi	r3,r4,255
    c9e0:	180897fa 	slli	r4,r3,31
    c9e4:	00c00434 	movhi	r3,16
    c9e8:	18ffffc4 	addi	r3,r3,-1
    c9ec:	28c6703a 	and	r3,r5,r3
    c9f0:	1c06b03a 	or	r3,r3,r16
    c9f4:	1906b03a 	or	r3,r3,r4
    c9f8:	dfc00417 	ldw	ra,16(sp)
    c9fc:	dcc00317 	ldw	r19,12(sp)
    ca00:	dc800217 	ldw	r18,8(sp)
    ca04:	dc400117 	ldw	r17,4(sp)
    ca08:	dc000017 	ldw	r16,0(sp)
    ca0c:	dec00504 	addi	sp,sp,20
    ca10:	f800283a 	ret
    ca14:	0101ffc4 	movi	r4,2047
    ca18:	813fd626 	beq	r16,r4,c974 <__alt_mem_Onchip_SRAM+0xf800c974>
    ca1c:	29402034 	orhi	r5,r5,128
    ca20:	01000e04 	movi	r4,56
    ca24:	2080a316 	blt	r4,r2,ccb4 <__subdf3+0x3c4>
    ca28:	010007c4 	movi	r4,31
    ca2c:	2080c616 	blt	r4,r2,cd48 <__subdf3+0x458>
    ca30:	01000804 	movi	r4,32
    ca34:	2089c83a 	sub	r4,r4,r2
    ca38:	2910983a 	sll	r8,r5,r4
    ca3c:	308ed83a 	srl	r7,r6,r2
    ca40:	3108983a 	sll	r4,r6,r4
    ca44:	2884d83a 	srl	r2,r5,r2
    ca48:	41ccb03a 	or	r6,r8,r7
    ca4c:	2008c03a 	cmpne	r4,r4,zero
    ca50:	310cb03a 	or	r6,r6,r4
    ca54:	898dc83a 	sub	r6,r17,r6
    ca58:	89a3803a 	cmpltu	r17,r17,r6
    ca5c:	1887c83a 	sub	r3,r3,r2
    ca60:	1c47c83a 	sub	r3,r3,r17
    ca64:	3023883a 	mov	r17,r6
    ca68:	1880202c 	andhi	r2,r3,128
    ca6c:	10002326 	beq	r2,zero,cafc <__subdf3+0x20c>
    ca70:	04c02034 	movhi	r19,128
    ca74:	9cffffc4 	addi	r19,r19,-1
    ca78:	1ce6703a 	and	r19,r3,r19
    ca7c:	98007a26 	beq	r19,zero,cc68 <__subdf3+0x378>
    ca80:	9809883a 	mov	r4,r19
    ca84:	0000bc80 	call	bc8 <__clzsi2>
    ca88:	113ffe04 	addi	r4,r2,-8
    ca8c:	00c007c4 	movi	r3,31
    ca90:	19007b16 	blt	r3,r4,cc80 <__subdf3+0x390>
    ca94:	00800804 	movi	r2,32
    ca98:	1105c83a 	sub	r2,r2,r4
    ca9c:	8884d83a 	srl	r2,r17,r2
    caa0:	9906983a 	sll	r3,r19,r4
    caa4:	8922983a 	sll	r17,r17,r4
    caa8:	10c4b03a 	or	r2,r2,r3
    caac:	24007816 	blt	r4,r16,cc90 <__subdf3+0x3a0>
    cab0:	2421c83a 	sub	r16,r4,r16
    cab4:	80c00044 	addi	r3,r16,1
    cab8:	010007c4 	movi	r4,31
    cabc:	20c09516 	blt	r4,r3,cd14 <__subdf3+0x424>
    cac0:	01400804 	movi	r5,32
    cac4:	28cbc83a 	sub	r5,r5,r3
    cac8:	88c8d83a 	srl	r4,r17,r3
    cacc:	8962983a 	sll	r17,r17,r5
    cad0:	114a983a 	sll	r5,r2,r5
    cad4:	10c6d83a 	srl	r3,r2,r3
    cad8:	8804c03a 	cmpne	r2,r17,zero
    cadc:	290ab03a 	or	r5,r5,r4
    cae0:	28a2b03a 	or	r17,r5,r2
    cae4:	0021883a 	mov	r16,zero
    cae8:	003fa206 	br	c974 <__alt_mem_Onchip_SRAM+0xf800c974>
    caec:	2090b03a 	or	r8,r4,r2
    caf0:	40018e26 	beq	r8,zero,d12c <__subdf3+0x83c>
    caf4:	1007883a 	mov	r3,r2
    caf8:	2023883a 	mov	r17,r4
    cafc:	888001cc 	andi	r2,r17,7
    cb00:	103f9e1e 	bne	r2,zero,c97c <__alt_mem_Onchip_SRAM+0xf800c97c>
    cb04:	1804977a 	slli	r2,r3,29
    cb08:	8822d0fa 	srli	r17,r17,3
    cb0c:	1810d0fa 	srli	r8,r3,3
    cb10:	9100004c 	andi	r4,r18,1
    cb14:	1444b03a 	or	r2,r2,r17
    cb18:	00c1ffc4 	movi	r3,2047
    cb1c:	80c02826 	beq	r16,r3,cbc0 <__subdf3+0x2d0>
    cb20:	01400434 	movhi	r5,16
    cb24:	297fffc4 	addi	r5,r5,-1
    cb28:	80e0703a 	and	r16,r16,r3
    cb2c:	414a703a 	and	r5,r8,r5
    cb30:	003fa806 	br	c9d4 <__alt_mem_Onchip_SRAM+0xf800c9d4>
    cb34:	0080630e 	bge	zero,r2,ccc4 <__subdf3+0x3d4>
    cb38:	48003026 	beq	r9,zero,cbfc <__subdf3+0x30c>
    cb3c:	0101ffc4 	movi	r4,2047
    cb40:	813f8c26 	beq	r16,r4,c974 <__alt_mem_Onchip_SRAM+0xf800c974>
    cb44:	29402034 	orhi	r5,r5,128
    cb48:	01000e04 	movi	r4,56
    cb4c:	2080a90e 	bge	r4,r2,cdf4 <__subdf3+0x504>
    cb50:	298cb03a 	or	r6,r5,r6
    cb54:	3012c03a 	cmpne	r9,r6,zero
    cb58:	0005883a 	mov	r2,zero
    cb5c:	4c53883a 	add	r9,r9,r17
    cb60:	4c63803a 	cmpltu	r17,r9,r17
    cb64:	10c7883a 	add	r3,r2,r3
    cb68:	88c7883a 	add	r3,r17,r3
    cb6c:	4823883a 	mov	r17,r9
    cb70:	1880202c 	andhi	r2,r3,128
    cb74:	1000d026 	beq	r2,zero,ceb8 <__subdf3+0x5c8>
    cb78:	84000044 	addi	r16,r16,1
    cb7c:	0081ffc4 	movi	r2,2047
    cb80:	8080fe26 	beq	r16,r2,cf7c <__subdf3+0x68c>
    cb84:	00bfe034 	movhi	r2,65408
    cb88:	10bfffc4 	addi	r2,r2,-1
    cb8c:	1886703a 	and	r3,r3,r2
    cb90:	880ad07a 	srli	r5,r17,1
    cb94:	180497fa 	slli	r2,r3,31
    cb98:	8900004c 	andi	r4,r17,1
    cb9c:	2922b03a 	or	r17,r5,r4
    cba0:	1806d07a 	srli	r3,r3,1
    cba4:	1462b03a 	or	r17,r2,r17
    cba8:	3825883a 	mov	r18,r7
    cbac:	003f7106 	br	c974 <__alt_mem_Onchip_SRAM+0xf800c974>
    cbb0:	2984b03a 	or	r2,r5,r6
    cbb4:	103f6826 	beq	r2,zero,c958 <__alt_mem_Onchip_SRAM+0xf800c958>
    cbb8:	39c03fcc 	andi	r7,r7,255
    cbbc:	003f6706 	br	c95c <__alt_mem_Onchip_SRAM+0xf800c95c>
    cbc0:	4086b03a 	or	r3,r8,r2
    cbc4:	18015226 	beq	r3,zero,d110 <__subdf3+0x820>
    cbc8:	00c00434 	movhi	r3,16
    cbcc:	41400234 	orhi	r5,r8,8
    cbd0:	18ffffc4 	addi	r3,r3,-1
    cbd4:	28ca703a 	and	r5,r5,r3
    cbd8:	003f7e06 	br	c9d4 <__alt_mem_Onchip_SRAM+0xf800c9d4>
    cbdc:	10bfffc4 	addi	r2,r2,-1
    cbe0:	1000491e 	bne	r2,zero,cd08 <__subdf3+0x418>
    cbe4:	898fc83a 	sub	r7,r17,r6
    cbe8:	89e3803a 	cmpltu	r17,r17,r7
    cbec:	1947c83a 	sub	r3,r3,r5
    cbf0:	1c47c83a 	sub	r3,r3,r17
    cbf4:	3823883a 	mov	r17,r7
    cbf8:	003f9b06 	br	ca68 <__alt_mem_Onchip_SRAM+0xf800ca68>
    cbfc:	2988b03a 	or	r4,r5,r6
    cc00:	203f5c26 	beq	r4,zero,c974 <__alt_mem_Onchip_SRAM+0xf800c974>
    cc04:	10bfffc4 	addi	r2,r2,-1
    cc08:	1000931e 	bne	r2,zero,ce58 <__subdf3+0x568>
    cc0c:	898d883a 	add	r6,r17,r6
    cc10:	3463803a 	cmpltu	r17,r6,r17
    cc14:	1947883a 	add	r3,r3,r5
    cc18:	88c7883a 	add	r3,r17,r3
    cc1c:	3023883a 	mov	r17,r6
    cc20:	003fd306 	br	cb70 <__alt_mem_Onchip_SRAM+0xf800cb70>
    cc24:	1000541e 	bne	r2,zero,cd78 <__subdf3+0x488>
    cc28:	80800044 	addi	r2,r16,1
    cc2c:	1081ffcc 	andi	r2,r2,2047
    cc30:	01000044 	movi	r4,1
    cc34:	2080a20e 	bge	r4,r2,cec0 <__subdf3+0x5d0>
    cc38:	8989c83a 	sub	r4,r17,r6
    cc3c:	8905803a 	cmpltu	r2,r17,r4
    cc40:	1967c83a 	sub	r19,r3,r5
    cc44:	98a7c83a 	sub	r19,r19,r2
    cc48:	9880202c 	andhi	r2,r19,128
    cc4c:	10006326 	beq	r2,zero,cddc <__subdf3+0x4ec>
    cc50:	3463c83a 	sub	r17,r6,r17
    cc54:	28c7c83a 	sub	r3,r5,r3
    cc58:	344d803a 	cmpltu	r6,r6,r17
    cc5c:	19a7c83a 	sub	r19,r3,r6
    cc60:	3825883a 	mov	r18,r7
    cc64:	983f861e 	bne	r19,zero,ca80 <__alt_mem_Onchip_SRAM+0xf800ca80>
    cc68:	8809883a 	mov	r4,r17
    cc6c:	0000bc80 	call	bc8 <__clzsi2>
    cc70:	10800804 	addi	r2,r2,32
    cc74:	113ffe04 	addi	r4,r2,-8
    cc78:	00c007c4 	movi	r3,31
    cc7c:	193f850e 	bge	r3,r4,ca94 <__alt_mem_Onchip_SRAM+0xf800ca94>
    cc80:	10bff604 	addi	r2,r2,-40
    cc84:	8884983a 	sll	r2,r17,r2
    cc88:	0023883a 	mov	r17,zero
    cc8c:	243f880e 	bge	r4,r16,cab0 <__alt_mem_Onchip_SRAM+0xf800cab0>
    cc90:	00ffe034 	movhi	r3,65408
    cc94:	18ffffc4 	addi	r3,r3,-1
    cc98:	8121c83a 	sub	r16,r16,r4
    cc9c:	10c6703a 	and	r3,r2,r3
    cca0:	003f3406 	br	c974 <__alt_mem_Onchip_SRAM+0xf800c974>
    cca4:	9100004c 	andi	r4,r18,1
    cca8:	000b883a 	mov	r5,zero
    ccac:	0005883a 	mov	r2,zero
    ccb0:	003f4806 	br	c9d4 <__alt_mem_Onchip_SRAM+0xf800c9d4>
    ccb4:	298cb03a 	or	r6,r5,r6
    ccb8:	300cc03a 	cmpne	r6,r6,zero
    ccbc:	0005883a 	mov	r2,zero
    ccc0:	003f6406 	br	ca54 <__alt_mem_Onchip_SRAM+0xf800ca54>
    ccc4:	10009a1e 	bne	r2,zero,cf30 <__subdf3+0x640>
    ccc8:	82400044 	addi	r9,r16,1
    cccc:	4881ffcc 	andi	r2,r9,2047
    ccd0:	02800044 	movi	r10,1
    ccd4:	5080670e 	bge	r10,r2,ce74 <__subdf3+0x584>
    ccd8:	0081ffc4 	movi	r2,2047
    ccdc:	4880af26 	beq	r9,r2,cf9c <__subdf3+0x6ac>
    cce0:	898d883a 	add	r6,r17,r6
    cce4:	1945883a 	add	r2,r3,r5
    cce8:	3447803a 	cmpltu	r3,r6,r17
    ccec:	1887883a 	add	r3,r3,r2
    ccf0:	182297fa 	slli	r17,r3,31
    ccf4:	300cd07a 	srli	r6,r6,1
    ccf8:	1806d07a 	srli	r3,r3,1
    ccfc:	4821883a 	mov	r16,r9
    cd00:	89a2b03a 	or	r17,r17,r6
    cd04:	003f1b06 	br	c974 <__alt_mem_Onchip_SRAM+0xf800c974>
    cd08:	0101ffc4 	movi	r4,2047
    cd0c:	813f441e 	bne	r16,r4,ca20 <__alt_mem_Onchip_SRAM+0xf800ca20>
    cd10:	003f1806 	br	c974 <__alt_mem_Onchip_SRAM+0xf800c974>
    cd14:	843ff844 	addi	r16,r16,-31
    cd18:	01400804 	movi	r5,32
    cd1c:	1408d83a 	srl	r4,r2,r16
    cd20:	19405026 	beq	r3,r5,ce64 <__subdf3+0x574>
    cd24:	01401004 	movi	r5,64
    cd28:	28c7c83a 	sub	r3,r5,r3
    cd2c:	10c4983a 	sll	r2,r2,r3
    cd30:	88a2b03a 	or	r17,r17,r2
    cd34:	8822c03a 	cmpne	r17,r17,zero
    cd38:	2462b03a 	or	r17,r4,r17
    cd3c:	0007883a 	mov	r3,zero
    cd40:	0021883a 	mov	r16,zero
    cd44:	003f6d06 	br	cafc <__alt_mem_Onchip_SRAM+0xf800cafc>
    cd48:	11fff804 	addi	r7,r2,-32
    cd4c:	01000804 	movi	r4,32
    cd50:	29ced83a 	srl	r7,r5,r7
    cd54:	11004526 	beq	r2,r4,ce6c <__subdf3+0x57c>
    cd58:	01001004 	movi	r4,64
    cd5c:	2089c83a 	sub	r4,r4,r2
    cd60:	2904983a 	sll	r2,r5,r4
    cd64:	118cb03a 	or	r6,r2,r6
    cd68:	300cc03a 	cmpne	r6,r6,zero
    cd6c:	398cb03a 	or	r6,r7,r6
    cd70:	0005883a 	mov	r2,zero
    cd74:	003f3706 	br	ca54 <__alt_mem_Onchip_SRAM+0xf800ca54>
    cd78:	80002a26 	beq	r16,zero,ce24 <__subdf3+0x534>
    cd7c:	0101ffc4 	movi	r4,2047
    cd80:	49006626 	beq	r9,r4,cf1c <__subdf3+0x62c>
    cd84:	0085c83a 	sub	r2,zero,r2
    cd88:	18c02034 	orhi	r3,r3,128
    cd8c:	01000e04 	movi	r4,56
    cd90:	20807e16 	blt	r4,r2,cf8c <__subdf3+0x69c>
    cd94:	010007c4 	movi	r4,31
    cd98:	2080e716 	blt	r4,r2,d138 <__subdf3+0x848>
    cd9c:	01000804 	movi	r4,32
    cda0:	2089c83a 	sub	r4,r4,r2
    cda4:	1914983a 	sll	r10,r3,r4
    cda8:	8890d83a 	srl	r8,r17,r2
    cdac:	8908983a 	sll	r4,r17,r4
    cdb0:	1884d83a 	srl	r2,r3,r2
    cdb4:	5222b03a 	or	r17,r10,r8
    cdb8:	2006c03a 	cmpne	r3,r4,zero
    cdbc:	88e2b03a 	or	r17,r17,r3
    cdc0:	3463c83a 	sub	r17,r6,r17
    cdc4:	2885c83a 	sub	r2,r5,r2
    cdc8:	344d803a 	cmpltu	r6,r6,r17
    cdcc:	1187c83a 	sub	r3,r2,r6
    cdd0:	4821883a 	mov	r16,r9
    cdd4:	3825883a 	mov	r18,r7
    cdd8:	003f2306 	br	ca68 <__alt_mem_Onchip_SRAM+0xf800ca68>
    cddc:	24d0b03a 	or	r8,r4,r19
    cde0:	40001b1e 	bne	r8,zero,ce50 <__subdf3+0x560>
    cde4:	0005883a 	mov	r2,zero
    cde8:	0009883a 	mov	r4,zero
    cdec:	0021883a 	mov	r16,zero
    cdf0:	003f4906 	br	cb18 <__alt_mem_Onchip_SRAM+0xf800cb18>
    cdf4:	010007c4 	movi	r4,31
    cdf8:	20803a16 	blt	r4,r2,cee4 <__subdf3+0x5f4>
    cdfc:	01000804 	movi	r4,32
    ce00:	2089c83a 	sub	r4,r4,r2
    ce04:	2912983a 	sll	r9,r5,r4
    ce08:	3090d83a 	srl	r8,r6,r2
    ce0c:	3108983a 	sll	r4,r6,r4
    ce10:	2884d83a 	srl	r2,r5,r2
    ce14:	4a12b03a 	or	r9,r9,r8
    ce18:	2008c03a 	cmpne	r4,r4,zero
    ce1c:	4912b03a 	or	r9,r9,r4
    ce20:	003f4e06 	br	cb5c <__alt_mem_Onchip_SRAM+0xf800cb5c>
    ce24:	1c48b03a 	or	r4,r3,r17
    ce28:	20003c26 	beq	r4,zero,cf1c <__subdf3+0x62c>
    ce2c:	0084303a 	nor	r2,zero,r2
    ce30:	1000381e 	bne	r2,zero,cf14 <__subdf3+0x624>
    ce34:	3463c83a 	sub	r17,r6,r17
    ce38:	28c5c83a 	sub	r2,r5,r3
    ce3c:	344d803a 	cmpltu	r6,r6,r17
    ce40:	1187c83a 	sub	r3,r2,r6
    ce44:	4821883a 	mov	r16,r9
    ce48:	3825883a 	mov	r18,r7
    ce4c:	003f0606 	br	ca68 <__alt_mem_Onchip_SRAM+0xf800ca68>
    ce50:	2023883a 	mov	r17,r4
    ce54:	003f0906 	br	ca7c <__alt_mem_Onchip_SRAM+0xf800ca7c>
    ce58:	0101ffc4 	movi	r4,2047
    ce5c:	813f3a1e 	bne	r16,r4,cb48 <__alt_mem_Onchip_SRAM+0xf800cb48>
    ce60:	003ec406 	br	c974 <__alt_mem_Onchip_SRAM+0xf800c974>
    ce64:	0005883a 	mov	r2,zero
    ce68:	003fb106 	br	cd30 <__alt_mem_Onchip_SRAM+0xf800cd30>
    ce6c:	0005883a 	mov	r2,zero
    ce70:	003fbc06 	br	cd64 <__alt_mem_Onchip_SRAM+0xf800cd64>
    ce74:	1c44b03a 	or	r2,r3,r17
    ce78:	80008e1e 	bne	r16,zero,d0b4 <__subdf3+0x7c4>
    ce7c:	1000c826 	beq	r2,zero,d1a0 <__subdf3+0x8b0>
    ce80:	2984b03a 	or	r2,r5,r6
    ce84:	103ebb26 	beq	r2,zero,c974 <__alt_mem_Onchip_SRAM+0xf800c974>
    ce88:	8989883a 	add	r4,r17,r6
    ce8c:	1945883a 	add	r2,r3,r5
    ce90:	2447803a 	cmpltu	r3,r4,r17
    ce94:	1887883a 	add	r3,r3,r2
    ce98:	1880202c 	andhi	r2,r3,128
    ce9c:	2023883a 	mov	r17,r4
    cea0:	103f1626 	beq	r2,zero,cafc <__alt_mem_Onchip_SRAM+0xf800cafc>
    cea4:	00bfe034 	movhi	r2,65408
    cea8:	10bfffc4 	addi	r2,r2,-1
    ceac:	5021883a 	mov	r16,r10
    ceb0:	1886703a 	and	r3,r3,r2
    ceb4:	003eaf06 	br	c974 <__alt_mem_Onchip_SRAM+0xf800c974>
    ceb8:	3825883a 	mov	r18,r7
    cebc:	003f0f06 	br	cafc <__alt_mem_Onchip_SRAM+0xf800cafc>
    cec0:	1c44b03a 	or	r2,r3,r17
    cec4:	8000251e 	bne	r16,zero,cf5c <__subdf3+0x66c>
    cec8:	1000661e 	bne	r2,zero,d064 <__subdf3+0x774>
    cecc:	2990b03a 	or	r8,r5,r6
    ced0:	40009626 	beq	r8,zero,d12c <__subdf3+0x83c>
    ced4:	2807883a 	mov	r3,r5
    ced8:	3023883a 	mov	r17,r6
    cedc:	3825883a 	mov	r18,r7
    cee0:	003ea406 	br	c974 <__alt_mem_Onchip_SRAM+0xf800c974>
    cee4:	127ff804 	addi	r9,r2,-32
    cee8:	01000804 	movi	r4,32
    ceec:	2a52d83a 	srl	r9,r5,r9
    cef0:	11008c26 	beq	r2,r4,d124 <__subdf3+0x834>
    cef4:	01001004 	movi	r4,64
    cef8:	2085c83a 	sub	r2,r4,r2
    cefc:	2884983a 	sll	r2,r5,r2
    cf00:	118cb03a 	or	r6,r2,r6
    cf04:	300cc03a 	cmpne	r6,r6,zero
    cf08:	4992b03a 	or	r9,r9,r6
    cf0c:	0005883a 	mov	r2,zero
    cf10:	003f1206 	br	cb5c <__alt_mem_Onchip_SRAM+0xf800cb5c>
    cf14:	0101ffc4 	movi	r4,2047
    cf18:	493f9c1e 	bne	r9,r4,cd8c <__alt_mem_Onchip_SRAM+0xf800cd8c>
    cf1c:	2807883a 	mov	r3,r5
    cf20:	3023883a 	mov	r17,r6
    cf24:	4821883a 	mov	r16,r9
    cf28:	3825883a 	mov	r18,r7
    cf2c:	003e9106 	br	c974 <__alt_mem_Onchip_SRAM+0xf800c974>
    cf30:	80001f1e 	bne	r16,zero,cfb0 <__subdf3+0x6c0>
    cf34:	1c48b03a 	or	r4,r3,r17
    cf38:	20005a26 	beq	r4,zero,d0a4 <__subdf3+0x7b4>
    cf3c:	0084303a 	nor	r2,zero,r2
    cf40:	1000561e 	bne	r2,zero,d09c <__subdf3+0x7ac>
    cf44:	89a3883a 	add	r17,r17,r6
    cf48:	1945883a 	add	r2,r3,r5
    cf4c:	898d803a 	cmpltu	r6,r17,r6
    cf50:	3087883a 	add	r3,r6,r2
    cf54:	4821883a 	mov	r16,r9
    cf58:	003f0506 	br	cb70 <__alt_mem_Onchip_SRAM+0xf800cb70>
    cf5c:	10002b1e 	bne	r2,zero,d00c <__subdf3+0x71c>
    cf60:	2984b03a 	or	r2,r5,r6
    cf64:	10008026 	beq	r2,zero,d168 <__subdf3+0x878>
    cf68:	2807883a 	mov	r3,r5
    cf6c:	3023883a 	mov	r17,r6
    cf70:	3825883a 	mov	r18,r7
    cf74:	0401ffc4 	movi	r16,2047
    cf78:	003e7e06 	br	c974 <__alt_mem_Onchip_SRAM+0xf800c974>
    cf7c:	3809883a 	mov	r4,r7
    cf80:	0011883a 	mov	r8,zero
    cf84:	0005883a 	mov	r2,zero
    cf88:	003ee306 	br	cb18 <__alt_mem_Onchip_SRAM+0xf800cb18>
    cf8c:	1c62b03a 	or	r17,r3,r17
    cf90:	8822c03a 	cmpne	r17,r17,zero
    cf94:	0005883a 	mov	r2,zero
    cf98:	003f8906 	br	cdc0 <__alt_mem_Onchip_SRAM+0xf800cdc0>
    cf9c:	3809883a 	mov	r4,r7
    cfa0:	4821883a 	mov	r16,r9
    cfa4:	0011883a 	mov	r8,zero
    cfa8:	0005883a 	mov	r2,zero
    cfac:	003eda06 	br	cb18 <__alt_mem_Onchip_SRAM+0xf800cb18>
    cfb0:	0101ffc4 	movi	r4,2047
    cfb4:	49003b26 	beq	r9,r4,d0a4 <__subdf3+0x7b4>
    cfb8:	0085c83a 	sub	r2,zero,r2
    cfbc:	18c02034 	orhi	r3,r3,128
    cfc0:	01000e04 	movi	r4,56
    cfc4:	20806e16 	blt	r4,r2,d180 <__subdf3+0x890>
    cfc8:	010007c4 	movi	r4,31
    cfcc:	20807716 	blt	r4,r2,d1ac <__subdf3+0x8bc>
    cfd0:	01000804 	movi	r4,32
    cfd4:	2089c83a 	sub	r4,r4,r2
    cfd8:	1914983a 	sll	r10,r3,r4
    cfdc:	8890d83a 	srl	r8,r17,r2
    cfe0:	8908983a 	sll	r4,r17,r4
    cfe4:	1884d83a 	srl	r2,r3,r2
    cfe8:	5222b03a 	or	r17,r10,r8
    cfec:	2006c03a 	cmpne	r3,r4,zero
    cff0:	88e2b03a 	or	r17,r17,r3
    cff4:	89a3883a 	add	r17,r17,r6
    cff8:	1145883a 	add	r2,r2,r5
    cffc:	898d803a 	cmpltu	r6,r17,r6
    d000:	3087883a 	add	r3,r6,r2
    d004:	4821883a 	mov	r16,r9
    d008:	003ed906 	br	cb70 <__alt_mem_Onchip_SRAM+0xf800cb70>
    d00c:	2984b03a 	or	r2,r5,r6
    d010:	10004226 	beq	r2,zero,d11c <__subdf3+0x82c>
    d014:	1808d0fa 	srli	r4,r3,3
    d018:	8822d0fa 	srli	r17,r17,3
    d01c:	1806977a 	slli	r3,r3,29
    d020:	2080022c 	andhi	r2,r4,8
    d024:	1c62b03a 	or	r17,r3,r17
    d028:	10000826 	beq	r2,zero,d04c <__subdf3+0x75c>
    d02c:	2812d0fa 	srli	r9,r5,3
    d030:	4880022c 	andhi	r2,r9,8
    d034:	1000051e 	bne	r2,zero,d04c <__subdf3+0x75c>
    d038:	300cd0fa 	srli	r6,r6,3
    d03c:	2804977a 	slli	r2,r5,29
    d040:	4809883a 	mov	r4,r9
    d044:	3825883a 	mov	r18,r7
    d048:	11a2b03a 	or	r17,r2,r6
    d04c:	8806d77a 	srli	r3,r17,29
    d050:	200890fa 	slli	r4,r4,3
    d054:	882290fa 	slli	r17,r17,3
    d058:	0401ffc4 	movi	r16,2047
    d05c:	1906b03a 	or	r3,r3,r4
    d060:	003e4406 	br	c974 <__alt_mem_Onchip_SRAM+0xf800c974>
    d064:	2984b03a 	or	r2,r5,r6
    d068:	103e4226 	beq	r2,zero,c974 <__alt_mem_Onchip_SRAM+0xf800c974>
    d06c:	8989c83a 	sub	r4,r17,r6
    d070:	8911803a 	cmpltu	r8,r17,r4
    d074:	1945c83a 	sub	r2,r3,r5
    d078:	1205c83a 	sub	r2,r2,r8
    d07c:	1200202c 	andhi	r8,r2,128
    d080:	403e9a26 	beq	r8,zero,caec <__alt_mem_Onchip_SRAM+0xf800caec>
    d084:	3463c83a 	sub	r17,r6,r17
    d088:	28c5c83a 	sub	r2,r5,r3
    d08c:	344d803a 	cmpltu	r6,r6,r17
    d090:	1187c83a 	sub	r3,r2,r6
    d094:	3825883a 	mov	r18,r7
    d098:	003e3606 	br	c974 <__alt_mem_Onchip_SRAM+0xf800c974>
    d09c:	0101ffc4 	movi	r4,2047
    d0a0:	493fc71e 	bne	r9,r4,cfc0 <__alt_mem_Onchip_SRAM+0xf800cfc0>
    d0a4:	2807883a 	mov	r3,r5
    d0a8:	3023883a 	mov	r17,r6
    d0ac:	4821883a 	mov	r16,r9
    d0b0:	003e3006 	br	c974 <__alt_mem_Onchip_SRAM+0xf800c974>
    d0b4:	10003626 	beq	r2,zero,d190 <__subdf3+0x8a0>
    d0b8:	2984b03a 	or	r2,r5,r6
    d0bc:	10001726 	beq	r2,zero,d11c <__subdf3+0x82c>
    d0c0:	1808d0fa 	srli	r4,r3,3
    d0c4:	8822d0fa 	srli	r17,r17,3
    d0c8:	1806977a 	slli	r3,r3,29
    d0cc:	2080022c 	andhi	r2,r4,8
    d0d0:	1c62b03a 	or	r17,r3,r17
    d0d4:	10000726 	beq	r2,zero,d0f4 <__subdf3+0x804>
    d0d8:	2812d0fa 	srli	r9,r5,3
    d0dc:	4880022c 	andhi	r2,r9,8
    d0e0:	1000041e 	bne	r2,zero,d0f4 <__subdf3+0x804>
    d0e4:	300cd0fa 	srli	r6,r6,3
    d0e8:	2804977a 	slli	r2,r5,29
    d0ec:	4809883a 	mov	r4,r9
    d0f0:	11a2b03a 	or	r17,r2,r6
    d0f4:	8806d77a 	srli	r3,r17,29
    d0f8:	200890fa 	slli	r4,r4,3
    d0fc:	882290fa 	slli	r17,r17,3
    d100:	3825883a 	mov	r18,r7
    d104:	1906b03a 	or	r3,r3,r4
    d108:	0401ffc4 	movi	r16,2047
    d10c:	003e1906 	br	c974 <__alt_mem_Onchip_SRAM+0xf800c974>
    d110:	000b883a 	mov	r5,zero
    d114:	0005883a 	mov	r2,zero
    d118:	003e2e06 	br	c9d4 <__alt_mem_Onchip_SRAM+0xf800c9d4>
    d11c:	0401ffc4 	movi	r16,2047
    d120:	003e1406 	br	c974 <__alt_mem_Onchip_SRAM+0xf800c974>
    d124:	0005883a 	mov	r2,zero
    d128:	003f7506 	br	cf00 <__alt_mem_Onchip_SRAM+0xf800cf00>
    d12c:	0005883a 	mov	r2,zero
    d130:	0009883a 	mov	r4,zero
    d134:	003e7806 	br	cb18 <__alt_mem_Onchip_SRAM+0xf800cb18>
    d138:	123ff804 	addi	r8,r2,-32
    d13c:	01000804 	movi	r4,32
    d140:	1a10d83a 	srl	r8,r3,r8
    d144:	11002526 	beq	r2,r4,d1dc <__subdf3+0x8ec>
    d148:	01001004 	movi	r4,64
    d14c:	2085c83a 	sub	r2,r4,r2
    d150:	1884983a 	sll	r2,r3,r2
    d154:	1444b03a 	or	r2,r2,r17
    d158:	1004c03a 	cmpne	r2,r2,zero
    d15c:	40a2b03a 	or	r17,r8,r2
    d160:	0005883a 	mov	r2,zero
    d164:	003f1606 	br	cdc0 <__alt_mem_Onchip_SRAM+0xf800cdc0>
    d168:	02000434 	movhi	r8,16
    d16c:	0009883a 	mov	r4,zero
    d170:	423fffc4 	addi	r8,r8,-1
    d174:	00bfffc4 	movi	r2,-1
    d178:	0401ffc4 	movi	r16,2047
    d17c:	003e6606 	br	cb18 <__alt_mem_Onchip_SRAM+0xf800cb18>
    d180:	1c62b03a 	or	r17,r3,r17
    d184:	8822c03a 	cmpne	r17,r17,zero
    d188:	0005883a 	mov	r2,zero
    d18c:	003f9906 	br	cff4 <__alt_mem_Onchip_SRAM+0xf800cff4>
    d190:	2807883a 	mov	r3,r5
    d194:	3023883a 	mov	r17,r6
    d198:	0401ffc4 	movi	r16,2047
    d19c:	003df506 	br	c974 <__alt_mem_Onchip_SRAM+0xf800c974>
    d1a0:	2807883a 	mov	r3,r5
    d1a4:	3023883a 	mov	r17,r6
    d1a8:	003df206 	br	c974 <__alt_mem_Onchip_SRAM+0xf800c974>
    d1ac:	123ff804 	addi	r8,r2,-32
    d1b0:	01000804 	movi	r4,32
    d1b4:	1a10d83a 	srl	r8,r3,r8
    d1b8:	11000a26 	beq	r2,r4,d1e4 <__subdf3+0x8f4>
    d1bc:	01001004 	movi	r4,64
    d1c0:	2085c83a 	sub	r2,r4,r2
    d1c4:	1884983a 	sll	r2,r3,r2
    d1c8:	1444b03a 	or	r2,r2,r17
    d1cc:	1004c03a 	cmpne	r2,r2,zero
    d1d0:	40a2b03a 	or	r17,r8,r2
    d1d4:	0005883a 	mov	r2,zero
    d1d8:	003f8606 	br	cff4 <__alt_mem_Onchip_SRAM+0xf800cff4>
    d1dc:	0005883a 	mov	r2,zero
    d1e0:	003fdc06 	br	d154 <__alt_mem_Onchip_SRAM+0xf800d154>
    d1e4:	0005883a 	mov	r2,zero
    d1e8:	003ff706 	br	d1c8 <__alt_mem_Onchip_SRAM+0xf800d1c8>

0000d1ec <__fixdfsi>:
    d1ec:	280cd53a 	srli	r6,r5,20
    d1f0:	00c00434 	movhi	r3,16
    d1f4:	18ffffc4 	addi	r3,r3,-1
    d1f8:	3181ffcc 	andi	r6,r6,2047
    d1fc:	01c0ff84 	movi	r7,1022
    d200:	28c6703a 	and	r3,r5,r3
    d204:	280ad7fa 	srli	r5,r5,31
    d208:	3980120e 	bge	r7,r6,d254 <__fixdfsi+0x68>
    d20c:	00810744 	movi	r2,1053
    d210:	11800c16 	blt	r2,r6,d244 <__fixdfsi+0x58>
    d214:	00810cc4 	movi	r2,1075
    d218:	1185c83a 	sub	r2,r2,r6
    d21c:	01c007c4 	movi	r7,31
    d220:	18c00434 	orhi	r3,r3,16
    d224:	38800d16 	blt	r7,r2,d25c <__fixdfsi+0x70>
    d228:	31befb44 	addi	r6,r6,-1043
    d22c:	2084d83a 	srl	r2,r4,r2
    d230:	1986983a 	sll	r3,r3,r6
    d234:	1884b03a 	or	r2,r3,r2
    d238:	28000726 	beq	r5,zero,d258 <__fixdfsi+0x6c>
    d23c:	0085c83a 	sub	r2,zero,r2
    d240:	f800283a 	ret
    d244:	00a00034 	movhi	r2,32768
    d248:	10bfffc4 	addi	r2,r2,-1
    d24c:	2885883a 	add	r2,r5,r2
    d250:	f800283a 	ret
    d254:	0005883a 	mov	r2,zero
    d258:	f800283a 	ret
    d25c:	008104c4 	movi	r2,1043
    d260:	1185c83a 	sub	r2,r2,r6
    d264:	1884d83a 	srl	r2,r3,r2
    d268:	003ff306 	br	d238 <__alt_mem_Onchip_SRAM+0xf800d238>

0000d26c <__floatsidf>:
    d26c:	defffd04 	addi	sp,sp,-12
    d270:	dfc00215 	stw	ra,8(sp)
    d274:	dc400115 	stw	r17,4(sp)
    d278:	dc000015 	stw	r16,0(sp)
    d27c:	20002b26 	beq	r4,zero,d32c <__floatsidf+0xc0>
    d280:	2023883a 	mov	r17,r4
    d284:	2020d7fa 	srli	r16,r4,31
    d288:	20002d16 	blt	r4,zero,d340 <__floatsidf+0xd4>
    d28c:	8809883a 	mov	r4,r17
    d290:	0000bc80 	call	bc8 <__clzsi2>
    d294:	01410784 	movi	r5,1054
    d298:	288bc83a 	sub	r5,r5,r2
    d29c:	01010cc4 	movi	r4,1075
    d2a0:	2149c83a 	sub	r4,r4,r5
    d2a4:	00c007c4 	movi	r3,31
    d2a8:	1900160e 	bge	r3,r4,d304 <__floatsidf+0x98>
    d2ac:	00c104c4 	movi	r3,1043
    d2b0:	1947c83a 	sub	r3,r3,r5
    d2b4:	88c6983a 	sll	r3,r17,r3
    d2b8:	00800434 	movhi	r2,16
    d2bc:	10bfffc4 	addi	r2,r2,-1
    d2c0:	1886703a 	and	r3,r3,r2
    d2c4:	2941ffcc 	andi	r5,r5,2047
    d2c8:	800d883a 	mov	r6,r16
    d2cc:	0005883a 	mov	r2,zero
    d2d0:	280a953a 	slli	r5,r5,20
    d2d4:	31803fcc 	andi	r6,r6,255
    d2d8:	01000434 	movhi	r4,16
    d2dc:	300c97fa 	slli	r6,r6,31
    d2e0:	213fffc4 	addi	r4,r4,-1
    d2e4:	1906703a 	and	r3,r3,r4
    d2e8:	1946b03a 	or	r3,r3,r5
    d2ec:	1986b03a 	or	r3,r3,r6
    d2f0:	dfc00217 	ldw	ra,8(sp)
    d2f4:	dc400117 	ldw	r17,4(sp)
    d2f8:	dc000017 	ldw	r16,0(sp)
    d2fc:	dec00304 	addi	sp,sp,12
    d300:	f800283a 	ret
    d304:	00c002c4 	movi	r3,11
    d308:	1887c83a 	sub	r3,r3,r2
    d30c:	88c6d83a 	srl	r3,r17,r3
    d310:	8904983a 	sll	r2,r17,r4
    d314:	01000434 	movhi	r4,16
    d318:	213fffc4 	addi	r4,r4,-1
    d31c:	2941ffcc 	andi	r5,r5,2047
    d320:	1906703a 	and	r3,r3,r4
    d324:	800d883a 	mov	r6,r16
    d328:	003fe906 	br	d2d0 <__alt_mem_Onchip_SRAM+0xf800d2d0>
    d32c:	000d883a 	mov	r6,zero
    d330:	000b883a 	mov	r5,zero
    d334:	0007883a 	mov	r3,zero
    d338:	0005883a 	mov	r2,zero
    d33c:	003fe406 	br	d2d0 <__alt_mem_Onchip_SRAM+0xf800d2d0>
    d340:	0123c83a 	sub	r17,zero,r4
    d344:	003fd106 	br	d28c <__alt_mem_Onchip_SRAM+0xf800d28c>

0000d348 <__floatunsidf>:
    d348:	defffe04 	addi	sp,sp,-8
    d34c:	dc000015 	stw	r16,0(sp)
    d350:	dfc00115 	stw	ra,4(sp)
    d354:	2021883a 	mov	r16,r4
    d358:	20002226 	beq	r4,zero,d3e4 <__floatunsidf+0x9c>
    d35c:	0000bc80 	call	bc8 <__clzsi2>
    d360:	01010784 	movi	r4,1054
    d364:	2089c83a 	sub	r4,r4,r2
    d368:	01810cc4 	movi	r6,1075
    d36c:	310dc83a 	sub	r6,r6,r4
    d370:	00c007c4 	movi	r3,31
    d374:	1980120e 	bge	r3,r6,d3c0 <__floatunsidf+0x78>
    d378:	00c104c4 	movi	r3,1043
    d37c:	1907c83a 	sub	r3,r3,r4
    d380:	80ca983a 	sll	r5,r16,r3
    d384:	00800434 	movhi	r2,16
    d388:	10bfffc4 	addi	r2,r2,-1
    d38c:	2101ffcc 	andi	r4,r4,2047
    d390:	0021883a 	mov	r16,zero
    d394:	288a703a 	and	r5,r5,r2
    d398:	2008953a 	slli	r4,r4,20
    d39c:	00c00434 	movhi	r3,16
    d3a0:	18ffffc4 	addi	r3,r3,-1
    d3a4:	28c6703a 	and	r3,r5,r3
    d3a8:	8005883a 	mov	r2,r16
    d3ac:	1906b03a 	or	r3,r3,r4
    d3b0:	dfc00117 	ldw	ra,4(sp)
    d3b4:	dc000017 	ldw	r16,0(sp)
    d3b8:	dec00204 	addi	sp,sp,8
    d3bc:	f800283a 	ret
    d3c0:	00c002c4 	movi	r3,11
    d3c4:	188bc83a 	sub	r5,r3,r2
    d3c8:	814ad83a 	srl	r5,r16,r5
    d3cc:	00c00434 	movhi	r3,16
    d3d0:	18ffffc4 	addi	r3,r3,-1
    d3d4:	81a0983a 	sll	r16,r16,r6
    d3d8:	2101ffcc 	andi	r4,r4,2047
    d3dc:	28ca703a 	and	r5,r5,r3
    d3e0:	003fed06 	br	d398 <__alt_mem_Onchip_SRAM+0xf800d398>
    d3e4:	0009883a 	mov	r4,zero
    d3e8:	000b883a 	mov	r5,zero
    d3ec:	003fea06 	br	d398 <__alt_mem_Onchip_SRAM+0xf800d398>

0000d3f0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d3f0:	defffe04 	addi	sp,sp,-8
    d3f4:	dfc00115 	stw	ra,4(sp)
    d3f8:	df000015 	stw	fp,0(sp)
    d3fc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d400:	d0a01317 	ldw	r2,-32692(gp)
    d404:	10000326 	beq	r2,zero,d414 <alt_get_errno+0x24>
    d408:	d0a01317 	ldw	r2,-32692(gp)
    d40c:	103ee83a 	callr	r2
    d410:	00000106 	br	d418 <alt_get_errno+0x28>
    d414:	d0a6ee04 	addi	r2,gp,-25672
}
    d418:	e037883a 	mov	sp,fp
    d41c:	dfc00117 	ldw	ra,4(sp)
    d420:	df000017 	ldw	fp,0(sp)
    d424:	dec00204 	addi	sp,sp,8
    d428:	f800283a 	ret

0000d42c <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
    d42c:	defffb04 	addi	sp,sp,-20
    d430:	dfc00415 	stw	ra,16(sp)
    d434:	df000315 	stw	fp,12(sp)
    d438:	df000304 	addi	fp,sp,12
    d43c:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
    d440:	e0bfff17 	ldw	r2,-4(fp)
    d444:	10000816 	blt	r2,zero,d468 <close+0x3c>
    d448:	01400304 	movi	r5,12
    d44c:	e13fff17 	ldw	r4,-4(fp)
    d450:	0000a0c0 	call	a0c <__mulsi3>
    d454:	1007883a 	mov	r3,r2
    d458:	00800074 	movhi	r2,1
    d45c:	1083c404 	addi	r2,r2,3856
    d460:	1885883a 	add	r2,r3,r2
    d464:	00000106 	br	d46c <close+0x40>
    d468:	0005883a 	mov	r2,zero
    d46c:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
    d470:	e0bffd17 	ldw	r2,-12(fp)
    d474:	10001926 	beq	r2,zero,d4dc <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
    d478:	e0bffd17 	ldw	r2,-12(fp)
    d47c:	10800017 	ldw	r2,0(r2)
    d480:	10800417 	ldw	r2,16(r2)
    d484:	10000626 	beq	r2,zero,d4a0 <close+0x74>
    d488:	e0bffd17 	ldw	r2,-12(fp)
    d48c:	10800017 	ldw	r2,0(r2)
    d490:	10800417 	ldw	r2,16(r2)
    d494:	e13ffd17 	ldw	r4,-12(fp)
    d498:	103ee83a 	callr	r2
    d49c:	00000106 	br	d4a4 <close+0x78>
    d4a0:	0005883a 	mov	r2,zero
    d4a4:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
    d4a8:	e13fff17 	ldw	r4,-4(fp)
    d4ac:	000dd080 	call	dd08 <alt_release_fd>
    if (rval < 0)
    d4b0:	e0bffe17 	ldw	r2,-8(fp)
    d4b4:	1000070e 	bge	r2,zero,d4d4 <close+0xa8>
    {
      ALT_ERRNO = -rval;
    d4b8:	000d3f00 	call	d3f0 <alt_get_errno>
    d4bc:	1007883a 	mov	r3,r2
    d4c0:	e0bffe17 	ldw	r2,-8(fp)
    d4c4:	0085c83a 	sub	r2,zero,r2
    d4c8:	18800015 	stw	r2,0(r3)
      return -1;
    d4cc:	00bfffc4 	movi	r2,-1
    d4d0:	00000706 	br	d4f0 <close+0xc4>
    }
    return 0;
    d4d4:	0005883a 	mov	r2,zero
    d4d8:	00000506 	br	d4f0 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d4dc:	000d3f00 	call	d3f0 <alt_get_errno>
    d4e0:	1007883a 	mov	r3,r2
    d4e4:	00801444 	movi	r2,81
    d4e8:	18800015 	stw	r2,0(r3)
    return -1;
    d4ec:	00bfffc4 	movi	r2,-1
  }
}
    d4f0:	e037883a 	mov	sp,fp
    d4f4:	dfc00117 	ldw	ra,4(sp)
    d4f8:	df000017 	ldw	fp,0(sp)
    d4fc:	dec00204 	addi	sp,sp,8
    d500:	f800283a 	ret

0000d504 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
    d504:	defffc04 	addi	sp,sp,-16
    d508:	df000315 	stw	fp,12(sp)
    d50c:	df000304 	addi	fp,sp,12
    d510:	e13ffd15 	stw	r4,-12(fp)
    d514:	e17ffe15 	stw	r5,-8(fp)
    d518:	e1bfff15 	stw	r6,-4(fp)
  return len;
    d51c:	e0bfff17 	ldw	r2,-4(fp)
}
    d520:	e037883a 	mov	sp,fp
    d524:	df000017 	ldw	fp,0(sp)
    d528:	dec00104 	addi	sp,sp,4
    d52c:	f800283a 	ret

0000d530 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d530:	defffe04 	addi	sp,sp,-8
    d534:	dfc00115 	stw	ra,4(sp)
    d538:	df000015 	stw	fp,0(sp)
    d53c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d540:	d0a01317 	ldw	r2,-32692(gp)
    d544:	10000326 	beq	r2,zero,d554 <alt_get_errno+0x24>
    d548:	d0a01317 	ldw	r2,-32692(gp)
    d54c:	103ee83a 	callr	r2
    d550:	00000106 	br	d558 <alt_get_errno+0x28>
    d554:	d0a6ee04 	addi	r2,gp,-25672
}
    d558:	e037883a 	mov	sp,fp
    d55c:	dfc00117 	ldw	ra,4(sp)
    d560:	df000017 	ldw	fp,0(sp)
    d564:	dec00204 	addi	sp,sp,8
    d568:	f800283a 	ret

0000d56c <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
    d56c:	defffb04 	addi	sp,sp,-20
    d570:	dfc00415 	stw	ra,16(sp)
    d574:	df000315 	stw	fp,12(sp)
    d578:	df000304 	addi	fp,sp,12
    d57c:	e13ffe15 	stw	r4,-8(fp)
    d580:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d584:	e0bffe17 	ldw	r2,-8(fp)
    d588:	10000816 	blt	r2,zero,d5ac <fstat+0x40>
    d58c:	01400304 	movi	r5,12
    d590:	e13ffe17 	ldw	r4,-8(fp)
    d594:	0000a0c0 	call	a0c <__mulsi3>
    d598:	1007883a 	mov	r3,r2
    d59c:	00800074 	movhi	r2,1
    d5a0:	1083c404 	addi	r2,r2,3856
    d5a4:	1885883a 	add	r2,r3,r2
    d5a8:	00000106 	br	d5b0 <fstat+0x44>
    d5ac:	0005883a 	mov	r2,zero
    d5b0:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
    d5b4:	e0bffd17 	ldw	r2,-12(fp)
    d5b8:	10001026 	beq	r2,zero,d5fc <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
    d5bc:	e0bffd17 	ldw	r2,-12(fp)
    d5c0:	10800017 	ldw	r2,0(r2)
    d5c4:	10800817 	ldw	r2,32(r2)
    d5c8:	10000726 	beq	r2,zero,d5e8 <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
    d5cc:	e0bffd17 	ldw	r2,-12(fp)
    d5d0:	10800017 	ldw	r2,0(r2)
    d5d4:	10800817 	ldw	r2,32(r2)
    d5d8:	e17fff17 	ldw	r5,-4(fp)
    d5dc:	e13ffd17 	ldw	r4,-12(fp)
    d5e0:	103ee83a 	callr	r2
    d5e4:	00000a06 	br	d610 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
    d5e8:	e0bfff17 	ldw	r2,-4(fp)
    d5ec:	00c80004 	movi	r3,8192
    d5f0:	10c00115 	stw	r3,4(r2)
      return 0;
    d5f4:	0005883a 	mov	r2,zero
    d5f8:	00000506 	br	d610 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d5fc:	000d5300 	call	d530 <alt_get_errno>
    d600:	1007883a 	mov	r3,r2
    d604:	00801444 	movi	r2,81
    d608:	18800015 	stw	r2,0(r3)
    return -1;
    d60c:	00bfffc4 	movi	r2,-1
  }
}
    d610:	e037883a 	mov	sp,fp
    d614:	dfc00117 	ldw	ra,4(sp)
    d618:	df000017 	ldw	fp,0(sp)
    d61c:	dec00204 	addi	sp,sp,8
    d620:	f800283a 	ret

0000d624 <gettimeofday>:
 */
 

#if defined (__GNUC__) && (__GNUC__ >= 4)
int ALT_GETTIMEOFDAY (struct timeval  *ptimeval, void *ptimezone_vptr)
{
    d624:	defff404 	addi	sp,sp,-48
    d628:	dfc00b15 	stw	ra,44(sp)
    d62c:	df000a15 	stw	fp,40(sp)
    d630:	dd000915 	stw	r20,36(sp)
    d634:	dcc00815 	stw	r19,32(sp)
    d638:	dc800715 	stw	r18,28(sp)
    d63c:	dc400615 	stw	r17,24(sp)
    d640:	dc000515 	stw	r16,20(sp)
    d644:	df000a04 	addi	fp,sp,40
    d648:	e13ff915 	stw	r4,-28(fp)
    d64c:	e17ffa15 	stw	r5,-24(fp)
  struct timezone *ptimezone = (struct timezone*)ptimezone_vptr;
    d650:	e0bffa17 	ldw	r2,-24(fp)
    d654:	e0bff615 	stw	r2,-40(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
    d658:	d0a6fd17 	ldw	r2,-25612(gp)
#else
int ALT_GETTIMEOFDAY (struct timeval  *ptimeval, struct timezone *ptimezone)
{
#endif
  
  alt_u32 nticks = alt_nticks (); 
    d65c:	e0bff715 	stw	r2,-36(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
    d660:	d0a6fc17 	ldw	r2,-25616(gp)
  alt_u32 tick_rate = alt_ticks_per_second ();
    d664:	e0bff815 	stw	r2,-32(fp)
   * non-zero system clock rate. If the system clock is not running, an error
   * is generated and the contents of "ptimeval" and "ptimezone" are not
   * updated.
   */

  if (tick_rate)
    d668:	e0bff817 	ldw	r2,-32(fp)
    d66c:	10005f26 	beq	r2,zero,d7ec <gettimeofday+0x1c8>
  {
    ptimeval->tv_sec  = alt_resettime.tv_sec  + nticks/tick_rate;
    d670:	d0a6f717 	ldw	r2,-25636(gp)
    d674:	1029883a 	mov	r20,r2
    d678:	e17ff817 	ldw	r5,-32(fp)
    d67c:	e13ff717 	ldw	r4,-36(fp)
    d680:	00009500 	call	950 <__udivsi3>
    d684:	a085883a 	add	r2,r20,r2
    d688:	1007883a 	mov	r3,r2
    d68c:	e0bff917 	ldw	r2,-28(fp)
    d690:	10c00015 	stw	r3,0(r2)
    ptimeval->tv_usec = alt_resettime.tv_usec +
    d694:	d0a6f817 	ldw	r2,-25632(gp)
    d698:	1029883a 	mov	r20,r2
     (alt_u32)(((alt_u64)nticks*(ALT_US/tick_rate))%ALT_US);
    d69c:	e0bff717 	ldw	r2,-36(fp)
    d6a0:	1021883a 	mov	r16,r2
    d6a4:	0023883a 	mov	r17,zero
    d6a8:	e17ff817 	ldw	r5,-32(fp)
    d6ac:	010003f4 	movhi	r4,15
    d6b0:	21109004 	addi	r4,r4,16960
    d6b4:	00009500 	call	950 <__udivsi3>
    d6b8:	1025883a 	mov	r18,r2
    d6bc:	0027883a 	mov	r19,zero
    d6c0:	900d883a 	mov	r6,r18
    d6c4:	980f883a 	mov	r7,r19
    d6c8:	8009883a 	mov	r4,r16
    d6cc:	880b883a 	mov	r5,r17
    d6d0:	0009ee40 	call	9ee4 <__muldi3>
    d6d4:	1009883a 	mov	r4,r2
    d6d8:	180b883a 	mov	r5,r3
    d6dc:	2005883a 	mov	r2,r4
    d6e0:	2807883a 	mov	r3,r5
    d6e4:	018003f4 	movhi	r6,15
    d6e8:	31909004 	addi	r6,r6,16960
    d6ec:	000f883a 	mov	r7,zero
    d6f0:	1009883a 	mov	r4,r2
    d6f4:	180b883a 	mov	r5,r3
    d6f8:	000a5ec0 	call	a5ec <__umoddi3>
    d6fc:	1009883a 	mov	r4,r2
    d700:	180b883a 	mov	r5,r3
    d704:	2005883a 	mov	r2,r4
    d708:	2807883a 	mov	r3,r5
   */

  if (tick_rate)
  {
    ptimeval->tv_sec  = alt_resettime.tv_sec  + nticks/tick_rate;
    ptimeval->tv_usec = alt_resettime.tv_usec +
    d70c:	a085883a 	add	r2,r20,r2
    d710:	1007883a 	mov	r3,r2
    d714:	e0bff917 	ldw	r2,-28(fp)
    d718:	10c00115 	stw	r3,4(r2)
     (alt_u32)(((alt_u64)nticks*(ALT_US/tick_rate))%ALT_US);
      
    while(ptimeval->tv_usec < 0) {
    d71c:	00001406 	br	d770 <gettimeofday+0x14c>
      if (ptimeval->tv_sec <= 0)
    d720:	e0bff917 	ldw	r2,-28(fp)
    d724:	10800017 	ldw	r2,0(r2)
    d728:	00800516 	blt	zero,r2,d740 <gettimeofday+0x11c>
      {
          ptimeval->tv_sec = 0;
    d72c:	e0bff917 	ldw	r2,-28(fp)
    d730:	10000015 	stw	zero,0(r2)
          ptimeval->tv_usec = 0;
    d734:	e0bff917 	ldw	r2,-28(fp)
    d738:	10000115 	stw	zero,4(r2)
          break;
    d73c:	00000f06 	br	d77c <gettimeofday+0x158>
      }
      else
      {
          ptimeval->tv_sec--;
    d740:	e0bff917 	ldw	r2,-28(fp)
    d744:	10800017 	ldw	r2,0(r2)
    d748:	10ffffc4 	addi	r3,r2,-1
    d74c:	e0bff917 	ldw	r2,-28(fp)
    d750:	10c00015 	stw	r3,0(r2)
          ptimeval->tv_usec += ALT_US;
    d754:	e0bff917 	ldw	r2,-28(fp)
    d758:	10c00117 	ldw	r3,4(r2)
    d75c:	008003f4 	movhi	r2,15
    d760:	10909004 	addi	r2,r2,16960
    d764:	1887883a 	add	r3,r3,r2
    d768:	e0bff917 	ldw	r2,-28(fp)
    d76c:	10c00115 	stw	r3,4(r2)
  {
    ptimeval->tv_sec  = alt_resettime.tv_sec  + nticks/tick_rate;
    ptimeval->tv_usec = alt_resettime.tv_usec +
     (alt_u32)(((alt_u64)nticks*(ALT_US/tick_rate))%ALT_US);
      
    while(ptimeval->tv_usec < 0) {
    d770:	e0bff917 	ldw	r2,-28(fp)
    d774:	10800117 	ldw	r2,4(r2)
    d778:	103fe916 	blt	r2,zero,d720 <__alt_mem_Onchip_SRAM+0xf800d720>
          ptimeval->tv_sec--;
          ptimeval->tv_usec += ALT_US;
      }
    }
    
    while(ptimeval->tv_usec >= ALT_US) {
    d77c:	00000c06 	br	d7b0 <gettimeofday+0x18c>
      ptimeval->tv_sec++;
    d780:	e0bff917 	ldw	r2,-28(fp)
    d784:	10800017 	ldw	r2,0(r2)
    d788:	10c00044 	addi	r3,r2,1
    d78c:	e0bff917 	ldw	r2,-28(fp)
    d790:	10c00015 	stw	r3,0(r2)
      ptimeval->tv_usec -= ALT_US;
    d794:	e0bff917 	ldw	r2,-28(fp)
    d798:	10c00117 	ldw	r3,4(r2)
    d79c:	00bffc74 	movhi	r2,65521
    d7a0:	10af7004 	addi	r2,r2,-16960
    d7a4:	1887883a 	add	r3,r3,r2
    d7a8:	e0bff917 	ldw	r2,-28(fp)
    d7ac:	10c00115 	stw	r3,4(r2)
          ptimeval->tv_sec--;
          ptimeval->tv_usec += ALT_US;
      }
    }
    
    while(ptimeval->tv_usec >= ALT_US) {
    d7b0:	e0bff917 	ldw	r2,-28(fp)
    d7b4:	10c00117 	ldw	r3,4(r2)
    d7b8:	008003f4 	movhi	r2,15
    d7bc:	10908fc4 	addi	r2,r2,16959
    d7c0:	10ffef16 	blt	r2,r3,d780 <__alt_mem_Onchip_SRAM+0xf800d780>
      ptimeval->tv_sec++;
      ptimeval->tv_usec -= ALT_US;
    }
      
    if (ptimezone)
    d7c4:	e0bff617 	ldw	r2,-40(fp)
    d7c8:	10000626 	beq	r2,zero,d7e4 <gettimeofday+0x1c0>
    { 
      ptimezone->tz_minuteswest = alt_timezone.tz_minuteswest;
    d7cc:	d0e6f517 	ldw	r3,-25644(gp)
    d7d0:	e0bff617 	ldw	r2,-40(fp)
    d7d4:	10c00015 	stw	r3,0(r2)
      ptimezone->tz_dsttime     = alt_timezone.tz_dsttime;
    d7d8:	d0e6f617 	ldw	r3,-25640(gp)
    d7dc:	e0bff617 	ldw	r2,-40(fp)
    d7e0:	10c00115 	stw	r3,4(r2)
    }

    return 0;
    d7e4:	0005883a 	mov	r2,zero
    d7e8:	00000106 	br	d7f0 <gettimeofday+0x1cc>
  }

  return -ENOTSUP;
    d7ec:	00bfde84 	movi	r2,-134
}
    d7f0:	e6fffb04 	addi	sp,fp,-20
    d7f4:	dfc00617 	ldw	ra,24(sp)
    d7f8:	df000517 	ldw	fp,20(sp)
    d7fc:	dd000417 	ldw	r20,16(sp)
    d800:	dcc00317 	ldw	r19,12(sp)
    d804:	dc800217 	ldw	r18,8(sp)
    d808:	dc400117 	ldw	r17,4(sp)
    d80c:	dc000017 	ldw	r16,0(sp)
    d810:	dec00704 	addi	sp,sp,28
    d814:	f800283a 	ret

0000d818 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d818:	defffe04 	addi	sp,sp,-8
    d81c:	dfc00115 	stw	ra,4(sp)
    d820:	df000015 	stw	fp,0(sp)
    d824:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d828:	d0a01317 	ldw	r2,-32692(gp)
    d82c:	10000326 	beq	r2,zero,d83c <alt_get_errno+0x24>
    d830:	d0a01317 	ldw	r2,-32692(gp)
    d834:	103ee83a 	callr	r2
    d838:	00000106 	br	d840 <alt_get_errno+0x28>
    d83c:	d0a6ee04 	addi	r2,gp,-25672
}
    d840:	e037883a 	mov	sp,fp
    d844:	dfc00117 	ldw	ra,4(sp)
    d848:	df000017 	ldw	fp,0(sp)
    d84c:	dec00204 	addi	sp,sp,8
    d850:	f800283a 	ret

0000d854 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
    d854:	deffed04 	addi	sp,sp,-76
    d858:	dfc01215 	stw	ra,72(sp)
    d85c:	df001115 	stw	fp,68(sp)
    d860:	df001104 	addi	fp,sp,68
    d864:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d868:	e0bfff17 	ldw	r2,-4(fp)
    d86c:	10000816 	blt	r2,zero,d890 <isatty+0x3c>
    d870:	01400304 	movi	r5,12
    d874:	e13fff17 	ldw	r4,-4(fp)
    d878:	0000a0c0 	call	a0c <__mulsi3>
    d87c:	1007883a 	mov	r3,r2
    d880:	00800074 	movhi	r2,1
    d884:	1083c404 	addi	r2,r2,3856
    d888:	1885883a 	add	r2,r3,r2
    d88c:	00000106 	br	d894 <isatty+0x40>
    d890:	0005883a 	mov	r2,zero
    d894:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
    d898:	e0bfef17 	ldw	r2,-68(fp)
    d89c:	10000e26 	beq	r2,zero,d8d8 <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
    d8a0:	e0bfef17 	ldw	r2,-68(fp)
    d8a4:	10800017 	ldw	r2,0(r2)
    d8a8:	10800817 	ldw	r2,32(r2)
    d8ac:	1000021e 	bne	r2,zero,d8b8 <isatty+0x64>
    {
      return 1;
    d8b0:	00800044 	movi	r2,1
    d8b4:	00000d06 	br	d8ec <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
    d8b8:	e0bff004 	addi	r2,fp,-64
    d8bc:	100b883a 	mov	r5,r2
    d8c0:	e13fff17 	ldw	r4,-4(fp)
    d8c4:	000d56c0 	call	d56c <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
    d8c8:	e0bff117 	ldw	r2,-60(fp)
    d8cc:	10880020 	cmpeqi	r2,r2,8192
    d8d0:	10803fcc 	andi	r2,r2,255
    d8d4:	00000506 	br	d8ec <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d8d8:	000d8180 	call	d818 <alt_get_errno>
    d8dc:	1007883a 	mov	r3,r2
    d8e0:	00801444 	movi	r2,81
    d8e4:	18800015 	stw	r2,0(r3)
    return 0;
    d8e8:	0005883a 	mov	r2,zero
  }
}
    d8ec:	e037883a 	mov	sp,fp
    d8f0:	dfc00117 	ldw	ra,4(sp)
    d8f4:	df000017 	ldw	fp,0(sp)
    d8f8:	dec00204 	addi	sp,sp,8
    d8fc:	f800283a 	ret

0000d900 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
    d900:	defffc04 	addi	sp,sp,-16
    d904:	df000315 	stw	fp,12(sp)
    d908:	df000304 	addi	fp,sp,12
    d90c:	e13ffd15 	stw	r4,-12(fp)
    d910:	e17ffe15 	stw	r5,-8(fp)
    d914:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
    d918:	e0fffe17 	ldw	r3,-8(fp)
    d91c:	e0bffd17 	ldw	r2,-12(fp)
    d920:	18800c26 	beq	r3,r2,d954 <alt_load_section+0x54>
  {
    while( to != end )
    d924:	00000806 	br	d948 <alt_load_section+0x48>
    {
      *to++ = *from++;
    d928:	e0bffe17 	ldw	r2,-8(fp)
    d92c:	10c00104 	addi	r3,r2,4
    d930:	e0fffe15 	stw	r3,-8(fp)
    d934:	e0fffd17 	ldw	r3,-12(fp)
    d938:	19000104 	addi	r4,r3,4
    d93c:	e13ffd15 	stw	r4,-12(fp)
    d940:	18c00017 	ldw	r3,0(r3)
    d944:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
    d948:	e0fffe17 	ldw	r3,-8(fp)
    d94c:	e0bfff17 	ldw	r2,-4(fp)
    d950:	18bff51e 	bne	r3,r2,d928 <__alt_mem_Onchip_SRAM+0xf800d928>
    {
      *to++ = *from++;
    }
  }
}
    d954:	0001883a 	nop
    d958:	e037883a 	mov	sp,fp
    d95c:	df000017 	ldw	fp,0(sp)
    d960:	dec00104 	addi	sp,sp,4
    d964:	f800283a 	ret

0000d968 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
    d968:	defffe04 	addi	sp,sp,-8
    d96c:	dfc00115 	stw	ra,4(sp)
    d970:	df000015 	stw	fp,0(sp)
    d974:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
    d978:	01800074 	movhi	r6,1
    d97c:	31886504 	addi	r6,r6,8596
    d980:	01400074 	movhi	r5,1
    d984:	29419104 	addi	r5,r5,1604
    d988:	01000074 	movhi	r4,1
    d98c:	21086504 	addi	r4,r4,8596
    d990:	000d9000 	call	d900 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
    d994:	01800034 	movhi	r6,0
    d998:	31808c04 	addi	r6,r6,560
    d99c:	01400034 	movhi	r5,0
    d9a0:	29400804 	addi	r5,r5,32
    d9a4:	01000034 	movhi	r4,0
    d9a8:	21000804 	addi	r4,r4,32
    d9ac:	000d9000 	call	d900 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
    d9b0:	01800074 	movhi	r6,1
    d9b4:	31819104 	addi	r6,r6,1604
    d9b8:	01400074 	movhi	r5,1
    d9bc:	2940c204 	addi	r5,r5,776
    d9c0:	01000074 	movhi	r4,1
    d9c4:	2100c204 	addi	r4,r4,776
    d9c8:	000d9000 	call	d900 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
    d9cc:	000f3f40 	call	f3f4 <alt_dcache_flush_all>
  alt_icache_flush_all();
    d9d0:	000f6440 	call	f644 <alt_icache_flush_all>
}
    d9d4:	0001883a 	nop
    d9d8:	e037883a 	mov	sp,fp
    d9dc:	dfc00117 	ldw	ra,4(sp)
    d9e0:	df000017 	ldw	fp,0(sp)
    d9e4:	dec00204 	addi	sp,sp,8
    d9e8:	f800283a 	ret

0000d9ec <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d9ec:	defffe04 	addi	sp,sp,-8
    d9f0:	dfc00115 	stw	ra,4(sp)
    d9f4:	df000015 	stw	fp,0(sp)
    d9f8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d9fc:	d0a01317 	ldw	r2,-32692(gp)
    da00:	10000326 	beq	r2,zero,da10 <alt_get_errno+0x24>
    da04:	d0a01317 	ldw	r2,-32692(gp)
    da08:	103ee83a 	callr	r2
    da0c:	00000106 	br	da14 <alt_get_errno+0x28>
    da10:	d0a6ee04 	addi	r2,gp,-25672
}
    da14:	e037883a 	mov	sp,fp
    da18:	dfc00117 	ldw	ra,4(sp)
    da1c:	df000017 	ldw	fp,0(sp)
    da20:	dec00204 	addi	sp,sp,8
    da24:	f800283a 	ret

0000da28 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
    da28:	defff904 	addi	sp,sp,-28
    da2c:	dfc00615 	stw	ra,24(sp)
    da30:	df000515 	stw	fp,20(sp)
    da34:	df000504 	addi	fp,sp,20
    da38:	e13ffd15 	stw	r4,-12(fp)
    da3c:	e17ffe15 	stw	r5,-8(fp)
    da40:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
    da44:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    da48:	e0bffd17 	ldw	r2,-12(fp)
    da4c:	10000816 	blt	r2,zero,da70 <lseek+0x48>
    da50:	01400304 	movi	r5,12
    da54:	e13ffd17 	ldw	r4,-12(fp)
    da58:	0000a0c0 	call	a0c <__mulsi3>
    da5c:	1007883a 	mov	r3,r2
    da60:	00800074 	movhi	r2,1
    da64:	1083c404 	addi	r2,r2,3856
    da68:	1885883a 	add	r2,r3,r2
    da6c:	00000106 	br	da74 <lseek+0x4c>
    da70:	0005883a 	mov	r2,zero
    da74:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
    da78:	e0bffc17 	ldw	r2,-16(fp)
    da7c:	10001026 	beq	r2,zero,dac0 <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
    da80:	e0bffc17 	ldw	r2,-16(fp)
    da84:	10800017 	ldw	r2,0(r2)
    da88:	10800717 	ldw	r2,28(r2)
    da8c:	10000926 	beq	r2,zero,dab4 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
    da90:	e0bffc17 	ldw	r2,-16(fp)
    da94:	10800017 	ldw	r2,0(r2)
    da98:	10800717 	ldw	r2,28(r2)
    da9c:	e1bfff17 	ldw	r6,-4(fp)
    daa0:	e17ffe17 	ldw	r5,-8(fp)
    daa4:	e13ffc17 	ldw	r4,-16(fp)
    daa8:	103ee83a 	callr	r2
    daac:	e0bffb15 	stw	r2,-20(fp)
    dab0:	00000506 	br	dac8 <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
    dab4:	00bfde84 	movi	r2,-134
    dab8:	e0bffb15 	stw	r2,-20(fp)
    dabc:	00000206 	br	dac8 <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
    dac0:	00bfebc4 	movi	r2,-81
    dac4:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
    dac8:	e0bffb17 	ldw	r2,-20(fp)
    dacc:	1000070e 	bge	r2,zero,daec <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
    dad0:	000d9ec0 	call	d9ec <alt_get_errno>
    dad4:	1007883a 	mov	r3,r2
    dad8:	e0bffb17 	ldw	r2,-20(fp)
    dadc:	0085c83a 	sub	r2,zero,r2
    dae0:	18800015 	stw	r2,0(r3)
    rc = -1;
    dae4:	00bfffc4 	movi	r2,-1
    dae8:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
    daec:	e0bffb17 	ldw	r2,-20(fp)
}
    daf0:	e037883a 	mov	sp,fp
    daf4:	dfc00117 	ldw	ra,4(sp)
    daf8:	df000017 	ldw	fp,0(sp)
    dafc:	dec00204 	addi	sp,sp,8
    db00:	f800283a 	ret

0000db04 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
    db04:	defffd04 	addi	sp,sp,-12
    db08:	dfc00215 	stw	ra,8(sp)
    db0c:	df000115 	stw	fp,4(sp)
    db10:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
    db14:	0009883a 	mov	r4,zero
    db18:	000e1500 	call	e150 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
    db1c:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
    db20:	000e1880 	call	e188 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
    db24:	01800074 	movhi	r6,1
    db28:	31818104 	addi	r6,r6,1540
    db2c:	01400074 	movhi	r5,1
    db30:	29418104 	addi	r5,r5,1540
    db34:	01000074 	movhi	r4,1
    db38:	21018104 	addi	r4,r4,1540
    db3c:	000f9e80 	call	f9e8 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
    db40:	000f4f40 	call	f4f4 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
    db44:	01000074 	movhi	r4,1
    db48:	213d5504 	addi	r4,r4,-2732
    db4c:	000ff740 	call	ff74 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
    db50:	d0a6f917 	ldw	r2,-25628(gp)
    db54:	d0e6fa17 	ldw	r3,-25624(gp)
    db58:	d126fb17 	ldw	r4,-25620(gp)
    db5c:	200d883a 	mov	r6,r4
    db60:	180b883a 	mov	r5,r3
    db64:	1009883a 	mov	r4,r2
    db68:	00007980 	call	798 <main>
    db6c:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
    db70:	01000044 	movi	r4,1
    db74:	000d42c0 	call	d42c <close>
  exit (result);
    db78:	e13fff17 	ldw	r4,-4(fp)
    db7c:	000ff880 	call	ff88 <exit>

0000db80 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
    db80:	defffe04 	addi	sp,sp,-8
    db84:	df000115 	stw	fp,4(sp)
    db88:	df000104 	addi	fp,sp,4
    db8c:	e13fff15 	stw	r4,-4(fp)
}
    db90:	0001883a 	nop
    db94:	e037883a 	mov	sp,fp
    db98:	df000017 	ldw	fp,0(sp)
    db9c:	dec00104 	addi	sp,sp,4
    dba0:	f800283a 	ret

0000dba4 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
    dba4:	defffe04 	addi	sp,sp,-8
    dba8:	df000115 	stw	fp,4(sp)
    dbac:	df000104 	addi	fp,sp,4
    dbb0:	e13fff15 	stw	r4,-4(fp)
}
    dbb4:	0001883a 	nop
    dbb8:	e037883a 	mov	sp,fp
    dbbc:	df000017 	ldw	fp,0(sp)
    dbc0:	dec00104 	addi	sp,sp,4
    dbc4:	f800283a 	ret

0000dbc8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    dbc8:	defffe04 	addi	sp,sp,-8
    dbcc:	dfc00115 	stw	ra,4(sp)
    dbd0:	df000015 	stw	fp,0(sp)
    dbd4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    dbd8:	d0a01317 	ldw	r2,-32692(gp)
    dbdc:	10000326 	beq	r2,zero,dbec <alt_get_errno+0x24>
    dbe0:	d0a01317 	ldw	r2,-32692(gp)
    dbe4:	103ee83a 	callr	r2
    dbe8:	00000106 	br	dbf0 <alt_get_errno+0x28>
    dbec:	d0a6ee04 	addi	r2,gp,-25672
}
    dbf0:	e037883a 	mov	sp,fp
    dbf4:	dfc00117 	ldw	ra,4(sp)
    dbf8:	df000017 	ldw	fp,0(sp)
    dbfc:	dec00204 	addi	sp,sp,8
    dc00:	f800283a 	ret

0000dc04 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
    dc04:	defff904 	addi	sp,sp,-28
    dc08:	dfc00615 	stw	ra,24(sp)
    dc0c:	df000515 	stw	fp,20(sp)
    dc10:	df000504 	addi	fp,sp,20
    dc14:	e13ffd15 	stw	r4,-12(fp)
    dc18:	e17ffe15 	stw	r5,-8(fp)
    dc1c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    dc20:	e0bffd17 	ldw	r2,-12(fp)
    dc24:	10000816 	blt	r2,zero,dc48 <read+0x44>
    dc28:	01400304 	movi	r5,12
    dc2c:	e13ffd17 	ldw	r4,-12(fp)
    dc30:	0000a0c0 	call	a0c <__mulsi3>
    dc34:	1007883a 	mov	r3,r2
    dc38:	00800074 	movhi	r2,1
    dc3c:	1083c404 	addi	r2,r2,3856
    dc40:	1885883a 	add	r2,r3,r2
    dc44:	00000106 	br	dc4c <read+0x48>
    dc48:	0005883a 	mov	r2,zero
    dc4c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
    dc50:	e0bffb17 	ldw	r2,-20(fp)
    dc54:	10002226 	beq	r2,zero,dce0 <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    dc58:	e0bffb17 	ldw	r2,-20(fp)
    dc5c:	10800217 	ldw	r2,8(r2)
    dc60:	108000cc 	andi	r2,r2,3
    dc64:	10800060 	cmpeqi	r2,r2,1
    dc68:	1000181e 	bne	r2,zero,dccc <read+0xc8>
        (fd->dev->read))
    dc6c:	e0bffb17 	ldw	r2,-20(fp)
    dc70:	10800017 	ldw	r2,0(r2)
    dc74:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    dc78:	10001426 	beq	r2,zero,dccc <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
    dc7c:	e0bffb17 	ldw	r2,-20(fp)
    dc80:	10800017 	ldw	r2,0(r2)
    dc84:	10800517 	ldw	r2,20(r2)
    dc88:	e0ffff17 	ldw	r3,-4(fp)
    dc8c:	180d883a 	mov	r6,r3
    dc90:	e17ffe17 	ldw	r5,-8(fp)
    dc94:	e13ffb17 	ldw	r4,-20(fp)
    dc98:	103ee83a 	callr	r2
    dc9c:	e0bffc15 	stw	r2,-16(fp)
    dca0:	e0bffc17 	ldw	r2,-16(fp)
    dca4:	1000070e 	bge	r2,zero,dcc4 <read+0xc0>
        {
          ALT_ERRNO = -rval;
    dca8:	000dbc80 	call	dbc8 <alt_get_errno>
    dcac:	1007883a 	mov	r3,r2
    dcb0:	e0bffc17 	ldw	r2,-16(fp)
    dcb4:	0085c83a 	sub	r2,zero,r2
    dcb8:	18800015 	stw	r2,0(r3)
          return -1;
    dcbc:	00bfffc4 	movi	r2,-1
    dcc0:	00000c06 	br	dcf4 <read+0xf0>
        }
        return rval;
    dcc4:	e0bffc17 	ldw	r2,-16(fp)
    dcc8:	00000a06 	br	dcf4 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
    dccc:	000dbc80 	call	dbc8 <alt_get_errno>
    dcd0:	1007883a 	mov	r3,r2
    dcd4:	00800344 	movi	r2,13
    dcd8:	18800015 	stw	r2,0(r3)
    dcdc:	00000406 	br	dcf0 <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
    dce0:	000dbc80 	call	dbc8 <alt_get_errno>
    dce4:	1007883a 	mov	r3,r2
    dce8:	00801444 	movi	r2,81
    dcec:	18800015 	stw	r2,0(r3)
  }
  return -1;
    dcf0:	00bfffc4 	movi	r2,-1
}
    dcf4:	e037883a 	mov	sp,fp
    dcf8:	dfc00117 	ldw	ra,4(sp)
    dcfc:	df000017 	ldw	fp,0(sp)
    dd00:	dec00204 	addi	sp,sp,8
    dd04:	f800283a 	ret

0000dd08 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
    dd08:	defffc04 	addi	sp,sp,-16
    dd0c:	dfc00315 	stw	ra,12(sp)
    dd10:	df000215 	stw	fp,8(sp)
    dd14:	dc000115 	stw	r16,4(sp)
    dd18:	df000204 	addi	fp,sp,8
    dd1c:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
    dd20:	e0bffe17 	ldw	r2,-8(fp)
    dd24:	108000d0 	cmplti	r2,r2,3
    dd28:	1000111e 	bne	r2,zero,dd70 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
    dd2c:	04000074 	movhi	r16,1
    dd30:	8403c404 	addi	r16,r16,3856
    dd34:	e0bffe17 	ldw	r2,-8(fp)
    dd38:	01400304 	movi	r5,12
    dd3c:	1009883a 	mov	r4,r2
    dd40:	0000a0c0 	call	a0c <__mulsi3>
    dd44:	8085883a 	add	r2,r16,r2
    dd48:	10800204 	addi	r2,r2,8
    dd4c:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
    dd50:	04000074 	movhi	r16,1
    dd54:	8403c404 	addi	r16,r16,3856
    dd58:	e0bffe17 	ldw	r2,-8(fp)
    dd5c:	01400304 	movi	r5,12
    dd60:	1009883a 	mov	r4,r2
    dd64:	0000a0c0 	call	a0c <__mulsi3>
    dd68:	8085883a 	add	r2,r16,r2
    dd6c:	10000015 	stw	zero,0(r2)
  }
}
    dd70:	0001883a 	nop
    dd74:	e6ffff04 	addi	sp,fp,-4
    dd78:	dfc00217 	ldw	ra,8(sp)
    dd7c:	df000117 	ldw	fp,4(sp)
    dd80:	dc000017 	ldw	r16,0(sp)
    dd84:	dec00304 	addi	sp,sp,12
    dd88:	f800283a 	ret

0000dd8c <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
    dd8c:	defff904 	addi	sp,sp,-28
    dd90:	df000615 	stw	fp,24(sp)
    dd94:	df000604 	addi	fp,sp,24
    dd98:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    dd9c:	0005303a 	rdctl	r2,status
    dda0:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    dda4:	e0fffe17 	ldw	r3,-8(fp)
    dda8:	00bfff84 	movi	r2,-2
    ddac:	1884703a 	and	r2,r3,r2
    ddb0:	1001703a 	wrctl	status,r2
  
  return context;
    ddb4:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
    ddb8:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
    ddbc:	d0a01417 	ldw	r2,-32688(gp)
    ddc0:	10c000c4 	addi	r3,r2,3
    ddc4:	00bfff04 	movi	r2,-4
    ddc8:	1884703a 	and	r2,r3,r2
    ddcc:	d0a01415 	stw	r2,-32688(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
    ddd0:	d0e01417 	ldw	r3,-32688(gp)
    ddd4:	e0bfff17 	ldw	r2,-4(fp)
    ddd8:	1887883a 	add	r3,r3,r2
    dddc:	00810034 	movhi	r2,1024
    dde0:	10800004 	addi	r2,r2,0
    dde4:	10c0062e 	bgeu	r2,r3,de00 <sbrk+0x74>
    dde8:	e0bffb17 	ldw	r2,-20(fp)
    ddec:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    ddf0:	e0bffa17 	ldw	r2,-24(fp)
    ddf4:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
    ddf8:	00bfffc4 	movi	r2,-1
    ddfc:	00000b06 	br	de2c <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
    de00:	d0a01417 	ldw	r2,-32688(gp)
    de04:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
    de08:	d0e01417 	ldw	r3,-32688(gp)
    de0c:	e0bfff17 	ldw	r2,-4(fp)
    de10:	1885883a 	add	r2,r3,r2
    de14:	d0a01415 	stw	r2,-32688(gp)
    de18:	e0bffb17 	ldw	r2,-20(fp)
    de1c:	e0bffc15 	stw	r2,-16(fp)
    de20:	e0bffc17 	ldw	r2,-16(fp)
    de24:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
    de28:	e0bffd17 	ldw	r2,-12(fp)
} 
    de2c:	e037883a 	mov	sp,fp
    de30:	df000017 	ldw	fp,0(sp)
    de34:	dec00104 	addi	sp,sp,4
    de38:	f800283a 	ret

0000de3c <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
    de3c:	defffa04 	addi	sp,sp,-24
    de40:	df000515 	stw	fp,20(sp)
    de44:	df000504 	addi	fp,sp,20
    de48:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    de4c:	0005303a 	rdctl	r2,status
    de50:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    de54:	e0fffc17 	ldw	r3,-16(fp)
    de58:	00bfff84 	movi	r2,-2
    de5c:	1884703a 	and	r2,r3,r2
    de60:	1001703a 	wrctl	status,r2
  
  return context;
    de64:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
    de68:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
    de6c:	e0bfff17 	ldw	r2,-4(fp)
    de70:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
    de74:	e0bffd17 	ldw	r2,-12(fp)
    de78:	10800017 	ldw	r2,0(r2)
    de7c:	e0fffd17 	ldw	r3,-12(fp)
    de80:	18c00117 	ldw	r3,4(r3)
    de84:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
    de88:	e0bffd17 	ldw	r2,-12(fp)
    de8c:	10800117 	ldw	r2,4(r2)
    de90:	e0fffd17 	ldw	r3,-12(fp)
    de94:	18c00017 	ldw	r3,0(r3)
    de98:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
    de9c:	e0bffd17 	ldw	r2,-12(fp)
    dea0:	e0fffd17 	ldw	r3,-12(fp)
    dea4:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
    dea8:	e0bffd17 	ldw	r2,-12(fp)
    deac:	e0fffd17 	ldw	r3,-12(fp)
    deb0:	10c00015 	stw	r3,0(r2)
    deb4:	e0bffb17 	ldw	r2,-20(fp)
    deb8:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    debc:	e0bffe17 	ldw	r2,-8(fp)
    dec0:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
    dec4:	0001883a 	nop
    dec8:	e037883a 	mov	sp,fp
    decc:	df000017 	ldw	fp,0(sp)
    ded0:	dec00104 	addi	sp,sp,4
    ded4:	f800283a 	ret

0000ded8 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
    ded8:	defffb04 	addi	sp,sp,-20
    dedc:	dfc00415 	stw	ra,16(sp)
    dee0:	df000315 	stw	fp,12(sp)
    dee4:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
    dee8:	d0a01517 	ldw	r2,-32684(gp)
    deec:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
    def0:	d0a6fd17 	ldw	r2,-25612(gp)
    def4:	10800044 	addi	r2,r2,1
    def8:	d0a6fd15 	stw	r2,-25612(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
    defc:	00002e06 	br	dfb8 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
    df00:	e0bffd17 	ldw	r2,-12(fp)
    df04:	10800017 	ldw	r2,0(r2)
    df08:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
    df0c:	e0bffd17 	ldw	r2,-12(fp)
    df10:	10800403 	ldbu	r2,16(r2)
    df14:	10803fcc 	andi	r2,r2,255
    df18:	10000426 	beq	r2,zero,df2c <alt_tick+0x54>
    df1c:	d0a6fd17 	ldw	r2,-25612(gp)
    df20:	1000021e 	bne	r2,zero,df2c <alt_tick+0x54>
    {
      alarm->rollover = 0;
    df24:	e0bffd17 	ldw	r2,-12(fp)
    df28:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
    df2c:	e0bffd17 	ldw	r2,-12(fp)
    df30:	10800217 	ldw	r2,8(r2)
    df34:	d0e6fd17 	ldw	r3,-25612(gp)
    df38:	18801d36 	bltu	r3,r2,dfb0 <alt_tick+0xd8>
    df3c:	e0bffd17 	ldw	r2,-12(fp)
    df40:	10800403 	ldbu	r2,16(r2)
    df44:	10803fcc 	andi	r2,r2,255
    df48:	1000191e 	bne	r2,zero,dfb0 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
    df4c:	e0bffd17 	ldw	r2,-12(fp)
    df50:	10800317 	ldw	r2,12(r2)
    df54:	e0fffd17 	ldw	r3,-12(fp)
    df58:	18c00517 	ldw	r3,20(r3)
    df5c:	1809883a 	mov	r4,r3
    df60:	103ee83a 	callr	r2
    df64:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
    df68:	e0bfff17 	ldw	r2,-4(fp)
    df6c:	1000031e 	bne	r2,zero,df7c <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
    df70:	e13ffd17 	ldw	r4,-12(fp)
    df74:	000de3c0 	call	de3c <alt_alarm_stop>
    df78:	00000d06 	br	dfb0 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
    df7c:	e0bffd17 	ldw	r2,-12(fp)
    df80:	10c00217 	ldw	r3,8(r2)
    df84:	e0bfff17 	ldw	r2,-4(fp)
    df88:	1887883a 	add	r3,r3,r2
    df8c:	e0bffd17 	ldw	r2,-12(fp)
    df90:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
    df94:	e0bffd17 	ldw	r2,-12(fp)
    df98:	10c00217 	ldw	r3,8(r2)
    df9c:	d0a6fd17 	ldw	r2,-25612(gp)
    dfa0:	1880032e 	bgeu	r3,r2,dfb0 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
    dfa4:	e0bffd17 	ldw	r2,-12(fp)
    dfa8:	00c00044 	movi	r3,1
    dfac:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
    dfb0:	e0bffe17 	ldw	r2,-8(fp)
    dfb4:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
    dfb8:	e0fffd17 	ldw	r3,-12(fp)
    dfbc:	d0a01504 	addi	r2,gp,-32684
    dfc0:	18bfcf1e 	bne	r3,r2,df00 <__alt_mem_Onchip_SRAM+0xf800df00>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
    dfc4:	0001883a 	nop
}
    dfc8:	0001883a 	nop
    dfcc:	e037883a 	mov	sp,fp
    dfd0:	dfc00117 	ldw	ra,4(sp)
    dfd4:	df000017 	ldw	fp,0(sp)
    dfd8:	dec00204 	addi	sp,sp,8
    dfdc:	f800283a 	ret

0000dfe0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    dfe0:	defffe04 	addi	sp,sp,-8
    dfe4:	dfc00115 	stw	ra,4(sp)
    dfe8:	df000015 	stw	fp,0(sp)
    dfec:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    dff0:	d0a01317 	ldw	r2,-32692(gp)
    dff4:	10000326 	beq	r2,zero,e004 <alt_get_errno+0x24>
    dff8:	d0a01317 	ldw	r2,-32692(gp)
    dffc:	103ee83a 	callr	r2
    e000:	00000106 	br	e008 <alt_get_errno+0x28>
    e004:	d0a6ee04 	addi	r2,gp,-25672
}
    e008:	e037883a 	mov	sp,fp
    e00c:	dfc00117 	ldw	ra,4(sp)
    e010:	df000017 	ldw	fp,0(sp)
    e014:	dec00204 	addi	sp,sp,8
    e018:	f800283a 	ret

0000e01c <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
    e01c:	defff904 	addi	sp,sp,-28
    e020:	dfc00615 	stw	ra,24(sp)
    e024:	df000515 	stw	fp,20(sp)
    e028:	df000504 	addi	fp,sp,20
    e02c:	e13ffd15 	stw	r4,-12(fp)
    e030:	e17ffe15 	stw	r5,-8(fp)
    e034:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    e038:	e0bffd17 	ldw	r2,-12(fp)
    e03c:	10000816 	blt	r2,zero,e060 <write+0x44>
    e040:	01400304 	movi	r5,12
    e044:	e13ffd17 	ldw	r4,-12(fp)
    e048:	0000a0c0 	call	a0c <__mulsi3>
    e04c:	1007883a 	mov	r3,r2
    e050:	00800074 	movhi	r2,1
    e054:	1083c404 	addi	r2,r2,3856
    e058:	1885883a 	add	r2,r3,r2
    e05c:	00000106 	br	e064 <write+0x48>
    e060:	0005883a 	mov	r2,zero
    e064:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
    e068:	e0bffb17 	ldw	r2,-20(fp)
    e06c:	10002126 	beq	r2,zero,e0f4 <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
    e070:	e0bffb17 	ldw	r2,-20(fp)
    e074:	10800217 	ldw	r2,8(r2)
    e078:	108000cc 	andi	r2,r2,3
    e07c:	10001826 	beq	r2,zero,e0e0 <write+0xc4>
    e080:	e0bffb17 	ldw	r2,-20(fp)
    e084:	10800017 	ldw	r2,0(r2)
    e088:	10800617 	ldw	r2,24(r2)
    e08c:	10001426 	beq	r2,zero,e0e0 <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
    e090:	e0bffb17 	ldw	r2,-20(fp)
    e094:	10800017 	ldw	r2,0(r2)
    e098:	10800617 	ldw	r2,24(r2)
    e09c:	e0ffff17 	ldw	r3,-4(fp)
    e0a0:	180d883a 	mov	r6,r3
    e0a4:	e17ffe17 	ldw	r5,-8(fp)
    e0a8:	e13ffb17 	ldw	r4,-20(fp)
    e0ac:	103ee83a 	callr	r2
    e0b0:	e0bffc15 	stw	r2,-16(fp)
    e0b4:	e0bffc17 	ldw	r2,-16(fp)
    e0b8:	1000070e 	bge	r2,zero,e0d8 <write+0xbc>
      {
        ALT_ERRNO = -rval;
    e0bc:	000dfe00 	call	dfe0 <alt_get_errno>
    e0c0:	1007883a 	mov	r3,r2
    e0c4:	e0bffc17 	ldw	r2,-16(fp)
    e0c8:	0085c83a 	sub	r2,zero,r2
    e0cc:	18800015 	stw	r2,0(r3)
        return -1;
    e0d0:	00bfffc4 	movi	r2,-1
    e0d4:	00000c06 	br	e108 <write+0xec>
      }
      return rval;
    e0d8:	e0bffc17 	ldw	r2,-16(fp)
    e0dc:	00000a06 	br	e108 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
    e0e0:	000dfe00 	call	dfe0 <alt_get_errno>
    e0e4:	1007883a 	mov	r3,r2
    e0e8:	00800344 	movi	r2,13
    e0ec:	18800015 	stw	r2,0(r3)
    e0f0:	00000406 	br	e104 <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
    e0f4:	000dfe00 	call	dfe0 <alt_get_errno>
    e0f8:	1007883a 	mov	r3,r2
    e0fc:	00801444 	movi	r2,81
    e100:	18800015 	stw	r2,0(r3)
  }
  return -1;
    e104:	00bfffc4 	movi	r2,-1
}
    e108:	e037883a 	mov	sp,fp
    e10c:	dfc00117 	ldw	ra,4(sp)
    e110:	df000017 	ldw	fp,0(sp)
    e114:	dec00204 	addi	sp,sp,8
    e118:	f800283a 	ret

0000e11c <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
    e11c:	defffd04 	addi	sp,sp,-12
    e120:	dfc00215 	stw	ra,8(sp)
    e124:	df000115 	stw	fp,4(sp)
    e128:	df000104 	addi	fp,sp,4
    e12c:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
    e130:	d1601004 	addi	r5,gp,-32704
    e134:	e13fff17 	ldw	r4,-4(fp)
    e138:	000f4500 	call	f450 <alt_dev_llist_insert>
}
    e13c:	e037883a 	mov	sp,fp
    e140:	dfc00117 	ldw	ra,4(sp)
    e144:	df000017 	ldw	fp,0(sp)
    e148:	dec00204 	addi	sp,sp,8
    e14c:	f800283a 	ret

0000e150 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
    e150:	defffd04 	addi	sp,sp,-12
    e154:	dfc00215 	stw	ra,8(sp)
    e158:	df000115 	stw	fp,4(sp)
    e15c:	df000104 	addi	fp,sp,4
    e160:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2, Nios2);
    e164:	000fce80 	call	fce8 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
    e168:	00800044 	movi	r2,1
    e16c:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
    e170:	0001883a 	nop
    e174:	e037883a 	mov	sp,fp
    e178:	dfc00117 	ldw	ra,4(sp)
    e17c:	df000017 	ldw	fp,0(sp)
    e180:	dec00204 	addi	sp,sp,8
    e184:	f800283a 	ret

0000e188 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
    e188:	defffe04 	addi	sp,sp,-8
    e18c:	dfc00115 	stw	ra,4(sp)
    e190:	df000015 	stw	fp,0(sp)
    e194:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( INTERVAL_TIMER, Interval_Timer);
    e198:	01c00204 	movi	r7,8
    e19c:	000d883a 	mov	r6,zero
    e1a0:	000b883a 	mov	r5,zero
    e1a4:	013fc834 	movhi	r4,65312
    e1a8:	21080004 	addi	r4,r4,8192
    e1ac:	000ece00 	call	ece0 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_TIMER_INIT ( INTERVAL_TIMER_2, Interval_Timer_2);
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, JTAG_UART);
    e1b0:	01800204 	movi	r6,8
    e1b4:	000b883a 	mov	r5,zero
    e1b8:	01000074 	movhi	r4,1
    e1bc:	21042e04 	addi	r4,r4,4280
    e1c0:	000e3640 	call	e364 <altera_avalon_jtag_uart_init>
    e1c4:	01000074 	movhi	r4,1
    e1c8:	21042404 	addi	r4,r4,4240
    e1cc:	000e11c0 	call	e11c <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, SysID);
    e1d0:	0001883a 	nop
    ALTERA_MODULAR_ADC_INIT ( JOYSTICK_ADC, JoyStick_ADC);
    e1d4:	01bfffc4 	movi	r6,-1
    e1d8:	017fffc4 	movi	r5,-1
    e1dc:	01000074 	movhi	r4,1
    e1e0:	21083c04 	addi	r4,r4,8432
    e1e4:	000eeb00 	call	eeb0 <altera_modular_adc_init>
}
    e1e8:	0001883a 	nop
    e1ec:	e037883a 	mov	sp,fp
    e1f0:	dfc00117 	ldw	ra,4(sp)
    e1f4:	df000017 	ldw	fp,0(sp)
    e1f8:	dec00204 	addi	sp,sp,8
    e1fc:	f800283a 	ret

0000e200 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
    e200:	defffa04 	addi	sp,sp,-24
    e204:	dfc00515 	stw	ra,20(sp)
    e208:	df000415 	stw	fp,16(sp)
    e20c:	df000404 	addi	fp,sp,16
    e210:	e13ffd15 	stw	r4,-12(fp)
    e214:	e17ffe15 	stw	r5,-8(fp)
    e218:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    e21c:	e0bffd17 	ldw	r2,-12(fp)
    e220:	10800017 	ldw	r2,0(r2)
    e224:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
    e228:	e0bffc17 	ldw	r2,-16(fp)
    e22c:	10c00a04 	addi	r3,r2,40
    e230:	e0bffd17 	ldw	r2,-12(fp)
    e234:	10800217 	ldw	r2,8(r2)
    e238:	100f883a 	mov	r7,r2
    e23c:	e1bfff17 	ldw	r6,-4(fp)
    e240:	e17ffe17 	ldw	r5,-8(fp)
    e244:	1809883a 	mov	r4,r3
    e248:	000e8280 	call	e828 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
    e24c:	e037883a 	mov	sp,fp
    e250:	dfc00117 	ldw	ra,4(sp)
    e254:	df000017 	ldw	fp,0(sp)
    e258:	dec00204 	addi	sp,sp,8
    e25c:	f800283a 	ret

0000e260 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
    e260:	defffa04 	addi	sp,sp,-24
    e264:	dfc00515 	stw	ra,20(sp)
    e268:	df000415 	stw	fp,16(sp)
    e26c:	df000404 	addi	fp,sp,16
    e270:	e13ffd15 	stw	r4,-12(fp)
    e274:	e17ffe15 	stw	r5,-8(fp)
    e278:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    e27c:	e0bffd17 	ldw	r2,-12(fp)
    e280:	10800017 	ldw	r2,0(r2)
    e284:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
    e288:	e0bffc17 	ldw	r2,-16(fp)
    e28c:	10c00a04 	addi	r3,r2,40
    e290:	e0bffd17 	ldw	r2,-12(fp)
    e294:	10800217 	ldw	r2,8(r2)
    e298:	100f883a 	mov	r7,r2
    e29c:	e1bfff17 	ldw	r6,-4(fp)
    e2a0:	e17ffe17 	ldw	r5,-8(fp)
    e2a4:	1809883a 	mov	r4,r3
    e2a8:	000ea440 	call	ea44 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
    e2ac:	e037883a 	mov	sp,fp
    e2b0:	dfc00117 	ldw	ra,4(sp)
    e2b4:	df000017 	ldw	fp,0(sp)
    e2b8:	dec00204 	addi	sp,sp,8
    e2bc:	f800283a 	ret

0000e2c0 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
    e2c0:	defffc04 	addi	sp,sp,-16
    e2c4:	dfc00315 	stw	ra,12(sp)
    e2c8:	df000215 	stw	fp,8(sp)
    e2cc:	df000204 	addi	fp,sp,8
    e2d0:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    e2d4:	e0bfff17 	ldw	r2,-4(fp)
    e2d8:	10800017 	ldw	r2,0(r2)
    e2dc:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
    e2e0:	e0bffe17 	ldw	r2,-8(fp)
    e2e4:	10c00a04 	addi	r3,r2,40
    e2e8:	e0bfff17 	ldw	r2,-4(fp)
    e2ec:	10800217 	ldw	r2,8(r2)
    e2f0:	100b883a 	mov	r5,r2
    e2f4:	1809883a 	mov	r4,r3
    e2f8:	000e6d00 	call	e6d0 <altera_avalon_jtag_uart_close>
}
    e2fc:	e037883a 	mov	sp,fp
    e300:	dfc00117 	ldw	ra,4(sp)
    e304:	df000017 	ldw	fp,0(sp)
    e308:	dec00204 	addi	sp,sp,8
    e30c:	f800283a 	ret

0000e310 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
    e310:	defffa04 	addi	sp,sp,-24
    e314:	dfc00515 	stw	ra,20(sp)
    e318:	df000415 	stw	fp,16(sp)
    e31c:	df000404 	addi	fp,sp,16
    e320:	e13ffd15 	stw	r4,-12(fp)
    e324:	e17ffe15 	stw	r5,-8(fp)
    e328:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
    e32c:	e0bffd17 	ldw	r2,-12(fp)
    e330:	10800017 	ldw	r2,0(r2)
    e334:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
    e338:	e0bffc17 	ldw	r2,-16(fp)
    e33c:	10800a04 	addi	r2,r2,40
    e340:	e1bfff17 	ldw	r6,-4(fp)
    e344:	e17ffe17 	ldw	r5,-8(fp)
    e348:	1009883a 	mov	r4,r2
    e34c:	000e7380 	call	e738 <altera_avalon_jtag_uart_ioctl>
}
    e350:	e037883a 	mov	sp,fp
    e354:	dfc00117 	ldw	ra,4(sp)
    e358:	df000017 	ldw	fp,0(sp)
    e35c:	dec00204 	addi	sp,sp,8
    e360:	f800283a 	ret

0000e364 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
    e364:	defffa04 	addi	sp,sp,-24
    e368:	dfc00515 	stw	ra,20(sp)
    e36c:	df000415 	stw	fp,16(sp)
    e370:	df000404 	addi	fp,sp,16
    e374:	e13ffd15 	stw	r4,-12(fp)
    e378:	e17ffe15 	stw	r5,-8(fp)
    e37c:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    e380:	e0bffd17 	ldw	r2,-12(fp)
    e384:	00c00044 	movi	r3,1
    e388:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
    e38c:	e0bffd17 	ldw	r2,-12(fp)
    e390:	10800017 	ldw	r2,0(r2)
    e394:	10800104 	addi	r2,r2,4
    e398:	1007883a 	mov	r3,r2
    e39c:	e0bffd17 	ldw	r2,-12(fp)
    e3a0:	10800817 	ldw	r2,32(r2)
    e3a4:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
    e3a8:	e0bffe17 	ldw	r2,-8(fp)
    e3ac:	e0ffff17 	ldw	r3,-4(fp)
    e3b0:	d8000015 	stw	zero,0(sp)
    e3b4:	e1fffd17 	ldw	r7,-12(fp)
    e3b8:	01800074 	movhi	r6,1
    e3bc:	31b90904 	addi	r6,r6,-7132
    e3c0:	180b883a 	mov	r5,r3
    e3c4:	1009883a 	mov	r4,r2
    e3c8:	000f6640 	call	f664 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
    e3cc:	e0bffd17 	ldw	r2,-12(fp)
    e3d0:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
    e3d4:	e0bffd17 	ldw	r2,-12(fp)
    e3d8:	10800204 	addi	r2,r2,8
    e3dc:	d0e6fc17 	ldw	r3,-25616(gp)
    e3e0:	e1fffd17 	ldw	r7,-12(fp)
    e3e4:	01800074 	movhi	r6,1
    e3e8:	31b98c04 	addi	r6,r6,-6608
    e3ec:	180b883a 	mov	r5,r3
    e3f0:	1009883a 	mov	r4,r2
    e3f4:	000f2c80 	call	f2c8 <alt_alarm_start>
    e3f8:	1000040e 	bge	r2,zero,e40c <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
    e3fc:	e0fffd17 	ldw	r3,-12(fp)
    e400:	00a00034 	movhi	r2,32768
    e404:	10bfffc4 	addi	r2,r2,-1
    e408:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
    e40c:	0001883a 	nop
    e410:	e037883a 	mov	sp,fp
    e414:	dfc00117 	ldw	ra,4(sp)
    e418:	df000017 	ldw	fp,0(sp)
    e41c:	dec00204 	addi	sp,sp,8
    e420:	f800283a 	ret

0000e424 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
    e424:	defff804 	addi	sp,sp,-32
    e428:	df000715 	stw	fp,28(sp)
    e42c:	df000704 	addi	fp,sp,28
    e430:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
    e434:	e0bfff17 	ldw	r2,-4(fp)
    e438:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
    e43c:	e0bffb17 	ldw	r2,-20(fp)
    e440:	10800017 	ldw	r2,0(r2)
    e444:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    e448:	e0bffc17 	ldw	r2,-16(fp)
    e44c:	10800104 	addi	r2,r2,4
    e450:	10800037 	ldwio	r2,0(r2)
    e454:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
    e458:	e0bffd17 	ldw	r2,-12(fp)
    e45c:	1080c00c 	andi	r2,r2,768
    e460:	10006d26 	beq	r2,zero,e618 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
    e464:	e0bffd17 	ldw	r2,-12(fp)
    e468:	1080400c 	andi	r2,r2,256
    e46c:	10003526 	beq	r2,zero,e544 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
    e470:	00800074 	movhi	r2,1
    e474:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e478:	e0bffb17 	ldw	r2,-20(fp)
    e47c:	10800a17 	ldw	r2,40(r2)
    e480:	10800044 	addi	r2,r2,1
    e484:	1081ffcc 	andi	r2,r2,2047
    e488:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
    e48c:	e0bffb17 	ldw	r2,-20(fp)
    e490:	10c00b17 	ldw	r3,44(r2)
    e494:	e0bffe17 	ldw	r2,-8(fp)
    e498:	18801526 	beq	r3,r2,e4f0 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
    e49c:	e0bffc17 	ldw	r2,-16(fp)
    e4a0:	10800037 	ldwio	r2,0(r2)
    e4a4:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
    e4a8:	e0bff917 	ldw	r2,-28(fp)
    e4ac:	10a0000c 	andi	r2,r2,32768
    e4b0:	10001126 	beq	r2,zero,e4f8 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
    e4b4:	e0bffb17 	ldw	r2,-20(fp)
    e4b8:	10800a17 	ldw	r2,40(r2)
    e4bc:	e0fff917 	ldw	r3,-28(fp)
    e4c0:	1809883a 	mov	r4,r3
    e4c4:	e0fffb17 	ldw	r3,-20(fp)
    e4c8:	1885883a 	add	r2,r3,r2
    e4cc:	10800e04 	addi	r2,r2,56
    e4d0:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e4d4:	e0bffb17 	ldw	r2,-20(fp)
    e4d8:	10800a17 	ldw	r2,40(r2)
    e4dc:	10800044 	addi	r2,r2,1
    e4e0:	10c1ffcc 	andi	r3,r2,2047
    e4e4:	e0bffb17 	ldw	r2,-20(fp)
    e4e8:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
    e4ec:	003fe206 	br	e478 <__alt_mem_Onchip_SRAM+0xf800e478>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
    e4f0:	0001883a 	nop
    e4f4:	00000106 	br	e4fc <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
    e4f8:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
    e4fc:	e0bff917 	ldw	r2,-28(fp)
    e500:	10bfffec 	andhi	r2,r2,65535
    e504:	10000f26 	beq	r2,zero,e544 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    e508:	e0bffb17 	ldw	r2,-20(fp)
    e50c:	10c00817 	ldw	r3,32(r2)
    e510:	00bfff84 	movi	r2,-2
    e514:	1886703a 	and	r3,r3,r2
    e518:	e0bffb17 	ldw	r2,-20(fp)
    e51c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
    e520:	e0bffc17 	ldw	r2,-16(fp)
    e524:	10800104 	addi	r2,r2,4
    e528:	1007883a 	mov	r3,r2
    e52c:	e0bffb17 	ldw	r2,-20(fp)
    e530:	10800817 	ldw	r2,32(r2)
    e534:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    e538:	e0bffc17 	ldw	r2,-16(fp)
    e53c:	10800104 	addi	r2,r2,4
    e540:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    e544:	e0bffd17 	ldw	r2,-12(fp)
    e548:	1080800c 	andi	r2,r2,512
    e54c:	103fbe26 	beq	r2,zero,e448 <__alt_mem_Onchip_SRAM+0xf800e448>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
    e550:	e0bffd17 	ldw	r2,-12(fp)
    e554:	1004d43a 	srli	r2,r2,16
    e558:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
    e55c:	00001406 	br	e5b0 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
    e560:	e0bffc17 	ldw	r2,-16(fp)
    e564:	e0fffb17 	ldw	r3,-20(fp)
    e568:	18c00d17 	ldw	r3,52(r3)
    e56c:	e13ffb17 	ldw	r4,-20(fp)
    e570:	20c7883a 	add	r3,r4,r3
    e574:	18c20e04 	addi	r3,r3,2104
    e578:	18c00003 	ldbu	r3,0(r3)
    e57c:	18c03fcc 	andi	r3,r3,255
    e580:	18c0201c 	xori	r3,r3,128
    e584:	18ffe004 	addi	r3,r3,-128
    e588:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e58c:	e0bffb17 	ldw	r2,-20(fp)
    e590:	10800d17 	ldw	r2,52(r2)
    e594:	10800044 	addi	r2,r2,1
    e598:	10c1ffcc 	andi	r3,r2,2047
    e59c:	e0bffb17 	ldw	r2,-20(fp)
    e5a0:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
    e5a4:	e0bffa17 	ldw	r2,-24(fp)
    e5a8:	10bfffc4 	addi	r2,r2,-1
    e5ac:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
    e5b0:	e0bffa17 	ldw	r2,-24(fp)
    e5b4:	10000526 	beq	r2,zero,e5cc <altera_avalon_jtag_uart_irq+0x1a8>
    e5b8:	e0bffb17 	ldw	r2,-20(fp)
    e5bc:	10c00d17 	ldw	r3,52(r2)
    e5c0:	e0bffb17 	ldw	r2,-20(fp)
    e5c4:	10800c17 	ldw	r2,48(r2)
    e5c8:	18bfe51e 	bne	r3,r2,e560 <__alt_mem_Onchip_SRAM+0xf800e560>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
    e5cc:	e0bffa17 	ldw	r2,-24(fp)
    e5d0:	103f9d26 	beq	r2,zero,e448 <__alt_mem_Onchip_SRAM+0xf800e448>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    e5d4:	e0bffb17 	ldw	r2,-20(fp)
    e5d8:	10c00817 	ldw	r3,32(r2)
    e5dc:	00bfff44 	movi	r2,-3
    e5e0:	1886703a 	and	r3,r3,r2
    e5e4:	e0bffb17 	ldw	r2,-20(fp)
    e5e8:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e5ec:	e0bffb17 	ldw	r2,-20(fp)
    e5f0:	10800017 	ldw	r2,0(r2)
    e5f4:	10800104 	addi	r2,r2,4
    e5f8:	1007883a 	mov	r3,r2
    e5fc:	e0bffb17 	ldw	r2,-20(fp)
    e600:	10800817 	ldw	r2,32(r2)
    e604:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    e608:	e0bffc17 	ldw	r2,-16(fp)
    e60c:	10800104 	addi	r2,r2,4
    e610:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
    e614:	003f8c06 	br	e448 <__alt_mem_Onchip_SRAM+0xf800e448>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
    e618:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
    e61c:	0001883a 	nop
    e620:	e037883a 	mov	sp,fp
    e624:	df000017 	ldw	fp,0(sp)
    e628:	dec00104 	addi	sp,sp,4
    e62c:	f800283a 	ret

0000e630 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
    e630:	defff804 	addi	sp,sp,-32
    e634:	df000715 	stw	fp,28(sp)
    e638:	df000704 	addi	fp,sp,28
    e63c:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
    e640:	e0bffb17 	ldw	r2,-20(fp)
    e644:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
    e648:	e0bff917 	ldw	r2,-28(fp)
    e64c:	10800017 	ldw	r2,0(r2)
    e650:	10800104 	addi	r2,r2,4
    e654:	10800037 	ldwio	r2,0(r2)
    e658:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
    e65c:	e0bffa17 	ldw	r2,-24(fp)
    e660:	1081000c 	andi	r2,r2,1024
    e664:	10000b26 	beq	r2,zero,e694 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
    e668:	e0bff917 	ldw	r2,-28(fp)
    e66c:	10800017 	ldw	r2,0(r2)
    e670:	10800104 	addi	r2,r2,4
    e674:	1007883a 	mov	r3,r2
    e678:	e0bff917 	ldw	r2,-28(fp)
    e67c:	10800817 	ldw	r2,32(r2)
    e680:	10810014 	ori	r2,r2,1024
    e684:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
    e688:	e0bff917 	ldw	r2,-28(fp)
    e68c:	10000915 	stw	zero,36(r2)
    e690:	00000a06 	br	e6bc <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
    e694:	e0bff917 	ldw	r2,-28(fp)
    e698:	10c00917 	ldw	r3,36(r2)
    e69c:	00a00034 	movhi	r2,32768
    e6a0:	10bfff04 	addi	r2,r2,-4
    e6a4:	10c00536 	bltu	r2,r3,e6bc <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
    e6a8:	e0bff917 	ldw	r2,-28(fp)
    e6ac:	10800917 	ldw	r2,36(r2)
    e6b0:	10c00044 	addi	r3,r2,1
    e6b4:	e0bff917 	ldw	r2,-28(fp)
    e6b8:	10c00915 	stw	r3,36(r2)
    e6bc:	d0a6fc17 	ldw	r2,-25616(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
    e6c0:	e037883a 	mov	sp,fp
    e6c4:	df000017 	ldw	fp,0(sp)
    e6c8:	dec00104 	addi	sp,sp,4
    e6cc:	f800283a 	ret

0000e6d0 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
    e6d0:	defffd04 	addi	sp,sp,-12
    e6d4:	df000215 	stw	fp,8(sp)
    e6d8:	df000204 	addi	fp,sp,8
    e6dc:	e13ffe15 	stw	r4,-8(fp)
    e6e0:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    e6e4:	00000506 	br	e6fc <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
    e6e8:	e0bfff17 	ldw	r2,-4(fp)
    e6ec:	1090000c 	andi	r2,r2,16384
    e6f0:	10000226 	beq	r2,zero,e6fc <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
    e6f4:	00bffd44 	movi	r2,-11
    e6f8:	00000b06 	br	e728 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    e6fc:	e0bffe17 	ldw	r2,-8(fp)
    e700:	10c00d17 	ldw	r3,52(r2)
    e704:	e0bffe17 	ldw	r2,-8(fp)
    e708:	10800c17 	ldw	r2,48(r2)
    e70c:	18800526 	beq	r3,r2,e724 <altera_avalon_jtag_uart_close+0x54>
    e710:	e0bffe17 	ldw	r2,-8(fp)
    e714:	10c00917 	ldw	r3,36(r2)
    e718:	e0bffe17 	ldw	r2,-8(fp)
    e71c:	10800117 	ldw	r2,4(r2)
    e720:	18bff136 	bltu	r3,r2,e6e8 <__alt_mem_Onchip_SRAM+0xf800e6e8>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
    e724:	0005883a 	mov	r2,zero
}
    e728:	e037883a 	mov	sp,fp
    e72c:	df000017 	ldw	fp,0(sp)
    e730:	dec00104 	addi	sp,sp,4
    e734:	f800283a 	ret

0000e738 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
    e738:	defffa04 	addi	sp,sp,-24
    e73c:	df000515 	stw	fp,20(sp)
    e740:	df000504 	addi	fp,sp,20
    e744:	e13ffd15 	stw	r4,-12(fp)
    e748:	e17ffe15 	stw	r5,-8(fp)
    e74c:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
    e750:	00bff9c4 	movi	r2,-25
    e754:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
    e758:	e0bffe17 	ldw	r2,-8(fp)
    e75c:	10da8060 	cmpeqi	r3,r2,27137
    e760:	1800031e 	bne	r3,zero,e770 <altera_avalon_jtag_uart_ioctl+0x38>
    e764:	109a80a0 	cmpeqi	r2,r2,27138
    e768:	1000181e 	bne	r2,zero,e7cc <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
    e76c:	00002906 	br	e814 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
    e770:	e0bffd17 	ldw	r2,-12(fp)
    e774:	10c00117 	ldw	r3,4(r2)
    e778:	00a00034 	movhi	r2,32768
    e77c:	10bfffc4 	addi	r2,r2,-1
    e780:	18802126 	beq	r3,r2,e808 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
    e784:	e0bfff17 	ldw	r2,-4(fp)
    e788:	10800017 	ldw	r2,0(r2)
    e78c:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
    e790:	e0bffc17 	ldw	r2,-16(fp)
    e794:	10800090 	cmplti	r2,r2,2
    e798:	1000061e 	bne	r2,zero,e7b4 <altera_avalon_jtag_uart_ioctl+0x7c>
    e79c:	e0fffc17 	ldw	r3,-16(fp)
    e7a0:	00a00034 	movhi	r2,32768
    e7a4:	10bfffc4 	addi	r2,r2,-1
    e7a8:	18800226 	beq	r3,r2,e7b4 <altera_avalon_jtag_uart_ioctl+0x7c>
    e7ac:	e0bffc17 	ldw	r2,-16(fp)
    e7b0:	00000206 	br	e7bc <altera_avalon_jtag_uart_ioctl+0x84>
    e7b4:	00a00034 	movhi	r2,32768
    e7b8:	10bfff84 	addi	r2,r2,-2
    e7bc:	e0fffd17 	ldw	r3,-12(fp)
    e7c0:	18800115 	stw	r2,4(r3)
      rc = 0;
    e7c4:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
    e7c8:	00000f06 	br	e808 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
    e7cc:	e0bffd17 	ldw	r2,-12(fp)
    e7d0:	10c00117 	ldw	r3,4(r2)
    e7d4:	00a00034 	movhi	r2,32768
    e7d8:	10bfffc4 	addi	r2,r2,-1
    e7dc:	18800c26 	beq	r3,r2,e810 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
    e7e0:	e0bffd17 	ldw	r2,-12(fp)
    e7e4:	10c00917 	ldw	r3,36(r2)
    e7e8:	e0bffd17 	ldw	r2,-12(fp)
    e7ec:	10800117 	ldw	r2,4(r2)
    e7f0:	1885803a 	cmpltu	r2,r3,r2
    e7f4:	10c03fcc 	andi	r3,r2,255
    e7f8:	e0bfff17 	ldw	r2,-4(fp)
    e7fc:	10c00015 	stw	r3,0(r2)
      rc = 0;
    e800:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
    e804:	00000206 	br	e810 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
    e808:	0001883a 	nop
    e80c:	00000106 	br	e814 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
    e810:	0001883a 	nop

  default:
    break;
  }

  return rc;
    e814:	e0bffb17 	ldw	r2,-20(fp)
}
    e818:	e037883a 	mov	sp,fp
    e81c:	df000017 	ldw	fp,0(sp)
    e820:	dec00104 	addi	sp,sp,4
    e824:	f800283a 	ret

0000e828 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
    e828:	defff304 	addi	sp,sp,-52
    e82c:	dfc00c15 	stw	ra,48(sp)
    e830:	df000b15 	stw	fp,44(sp)
    e834:	df000b04 	addi	fp,sp,44
    e838:	e13ffc15 	stw	r4,-16(fp)
    e83c:	e17ffd15 	stw	r5,-12(fp)
    e840:	e1bffe15 	stw	r6,-8(fp)
    e844:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
    e848:	e0bffd17 	ldw	r2,-12(fp)
    e84c:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    e850:	00004706 	br	e970 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
    e854:	e0bffc17 	ldw	r2,-16(fp)
    e858:	10800a17 	ldw	r2,40(r2)
    e85c:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
    e860:	e0bffc17 	ldw	r2,-16(fp)
    e864:	10800b17 	ldw	r2,44(r2)
    e868:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
    e86c:	e0fff717 	ldw	r3,-36(fp)
    e870:	e0bff817 	ldw	r2,-32(fp)
    e874:	18800536 	bltu	r3,r2,e88c <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
    e878:	e0fff717 	ldw	r3,-36(fp)
    e87c:	e0bff817 	ldw	r2,-32(fp)
    e880:	1885c83a 	sub	r2,r3,r2
    e884:	e0bff615 	stw	r2,-40(fp)
    e888:	00000406 	br	e89c <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
    e88c:	00c20004 	movi	r3,2048
    e890:	e0bff817 	ldw	r2,-32(fp)
    e894:	1885c83a 	sub	r2,r3,r2
    e898:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
    e89c:	e0bff617 	ldw	r2,-40(fp)
    e8a0:	10001e26 	beq	r2,zero,e91c <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
    e8a4:	e0fffe17 	ldw	r3,-8(fp)
    e8a8:	e0bff617 	ldw	r2,-40(fp)
    e8ac:	1880022e 	bgeu	r3,r2,e8b8 <altera_avalon_jtag_uart_read+0x90>
        n = space;
    e8b0:	e0bffe17 	ldw	r2,-8(fp)
    e8b4:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
    e8b8:	e0bffc17 	ldw	r2,-16(fp)
    e8bc:	10c00e04 	addi	r3,r2,56
    e8c0:	e0bff817 	ldw	r2,-32(fp)
    e8c4:	1885883a 	add	r2,r3,r2
    e8c8:	e1bff617 	ldw	r6,-40(fp)
    e8cc:	100b883a 	mov	r5,r2
    e8d0:	e13ff517 	ldw	r4,-44(fp)
    e8d4:	0005ebc0 	call	5ebc <memcpy>
      ptr   += n;
    e8d8:	e0fff517 	ldw	r3,-44(fp)
    e8dc:	e0bff617 	ldw	r2,-40(fp)
    e8e0:	1885883a 	add	r2,r3,r2
    e8e4:	e0bff515 	stw	r2,-44(fp)
      space -= n;
    e8e8:	e0fffe17 	ldw	r3,-8(fp)
    e8ec:	e0bff617 	ldw	r2,-40(fp)
    e8f0:	1885c83a 	sub	r2,r3,r2
    e8f4:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e8f8:	e0fff817 	ldw	r3,-32(fp)
    e8fc:	e0bff617 	ldw	r2,-40(fp)
    e900:	1885883a 	add	r2,r3,r2
    e904:	10c1ffcc 	andi	r3,r2,2047
    e908:	e0bffc17 	ldw	r2,-16(fp)
    e90c:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
    e910:	e0bffe17 	ldw	r2,-8(fp)
    e914:	00bfcf16 	blt	zero,r2,e854 <__alt_mem_Onchip_SRAM+0xf800e854>
    e918:	00000106 	br	e920 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
    e91c:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
    e920:	e0fff517 	ldw	r3,-44(fp)
    e924:	e0bffd17 	ldw	r2,-12(fp)
    e928:	1880141e 	bne	r3,r2,e97c <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
    e92c:	e0bfff17 	ldw	r2,-4(fp)
    e930:	1090000c 	andi	r2,r2,16384
    e934:	1000131e 	bne	r2,zero,e984 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
    e938:	0001883a 	nop
    e93c:	e0bffc17 	ldw	r2,-16(fp)
    e940:	10c00a17 	ldw	r3,40(r2)
    e944:	e0bff717 	ldw	r2,-36(fp)
    e948:	1880051e 	bne	r3,r2,e960 <altera_avalon_jtag_uart_read+0x138>
    e94c:	e0bffc17 	ldw	r2,-16(fp)
    e950:	10c00917 	ldw	r3,36(r2)
    e954:	e0bffc17 	ldw	r2,-16(fp)
    e958:	10800117 	ldw	r2,4(r2)
    e95c:	18bff736 	bltu	r3,r2,e93c <__alt_mem_Onchip_SRAM+0xf800e93c>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
    e960:	e0bffc17 	ldw	r2,-16(fp)
    e964:	10c00a17 	ldw	r3,40(r2)
    e968:	e0bff717 	ldw	r2,-36(fp)
    e96c:	18800726 	beq	r3,r2,e98c <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    e970:	e0bffe17 	ldw	r2,-8(fp)
    e974:	00bfb716 	blt	zero,r2,e854 <__alt_mem_Onchip_SRAM+0xf800e854>
    e978:	00000506 	br	e990 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
    e97c:	0001883a 	nop
    e980:	00000306 	br	e990 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
    e984:	0001883a 	nop
    e988:	00000106 	br	e990 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
    e98c:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
    e990:	e0fff517 	ldw	r3,-44(fp)
    e994:	e0bffd17 	ldw	r2,-12(fp)
    e998:	18801826 	beq	r3,r2,e9fc <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e99c:	0005303a 	rdctl	r2,status
    e9a0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e9a4:	e0fffb17 	ldw	r3,-20(fp)
    e9a8:	00bfff84 	movi	r2,-2
    e9ac:	1884703a 	and	r2,r3,r2
    e9b0:	1001703a 	wrctl	status,r2
  
  return context;
    e9b4:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
    e9b8:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    e9bc:	e0bffc17 	ldw	r2,-16(fp)
    e9c0:	10800817 	ldw	r2,32(r2)
    e9c4:	10c00054 	ori	r3,r2,1
    e9c8:	e0bffc17 	ldw	r2,-16(fp)
    e9cc:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e9d0:	e0bffc17 	ldw	r2,-16(fp)
    e9d4:	10800017 	ldw	r2,0(r2)
    e9d8:	10800104 	addi	r2,r2,4
    e9dc:	1007883a 	mov	r3,r2
    e9e0:	e0bffc17 	ldw	r2,-16(fp)
    e9e4:	10800817 	ldw	r2,32(r2)
    e9e8:	18800035 	stwio	r2,0(r3)
    e9ec:	e0bffa17 	ldw	r2,-24(fp)
    e9f0:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e9f4:	e0bff917 	ldw	r2,-28(fp)
    e9f8:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
    e9fc:	e0fff517 	ldw	r3,-44(fp)
    ea00:	e0bffd17 	ldw	r2,-12(fp)
    ea04:	18800426 	beq	r3,r2,ea18 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
    ea08:	e0fff517 	ldw	r3,-44(fp)
    ea0c:	e0bffd17 	ldw	r2,-12(fp)
    ea10:	1885c83a 	sub	r2,r3,r2
    ea14:	00000606 	br	ea30 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
    ea18:	e0bfff17 	ldw	r2,-4(fp)
    ea1c:	1090000c 	andi	r2,r2,16384
    ea20:	10000226 	beq	r2,zero,ea2c <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
    ea24:	00bffd44 	movi	r2,-11
    ea28:	00000106 	br	ea30 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
    ea2c:	00bffec4 	movi	r2,-5
}
    ea30:	e037883a 	mov	sp,fp
    ea34:	dfc00117 	ldw	ra,4(sp)
    ea38:	df000017 	ldw	fp,0(sp)
    ea3c:	dec00204 	addi	sp,sp,8
    ea40:	f800283a 	ret

0000ea44 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
    ea44:	defff304 	addi	sp,sp,-52
    ea48:	dfc00c15 	stw	ra,48(sp)
    ea4c:	df000b15 	stw	fp,44(sp)
    ea50:	df000b04 	addi	fp,sp,44
    ea54:	e13ffc15 	stw	r4,-16(fp)
    ea58:	e17ffd15 	stw	r5,-12(fp)
    ea5c:	e1bffe15 	stw	r6,-8(fp)
    ea60:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
    ea64:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
    ea68:	e0bffd17 	ldw	r2,-12(fp)
    ea6c:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    ea70:	00003706 	br	eb50 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
    ea74:	e0bffc17 	ldw	r2,-16(fp)
    ea78:	10800c17 	ldw	r2,48(r2)
    ea7c:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
    ea80:	e0bffc17 	ldw	r2,-16(fp)
    ea84:	10800d17 	ldw	r2,52(r2)
    ea88:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
    ea8c:	e0fff917 	ldw	r3,-28(fp)
    ea90:	e0bff517 	ldw	r2,-44(fp)
    ea94:	1880062e 	bgeu	r3,r2,eab0 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
    ea98:	e0fff517 	ldw	r3,-44(fp)
    ea9c:	e0bff917 	ldw	r2,-28(fp)
    eaa0:	1885c83a 	sub	r2,r3,r2
    eaa4:	10bfffc4 	addi	r2,r2,-1
    eaa8:	e0bff615 	stw	r2,-40(fp)
    eaac:	00000b06 	br	eadc <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
    eab0:	e0bff517 	ldw	r2,-44(fp)
    eab4:	10000526 	beq	r2,zero,eacc <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
    eab8:	00c20004 	movi	r3,2048
    eabc:	e0bff917 	ldw	r2,-28(fp)
    eac0:	1885c83a 	sub	r2,r3,r2
    eac4:	e0bff615 	stw	r2,-40(fp)
    eac8:	00000406 	br	eadc <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
    eacc:	00c1ffc4 	movi	r3,2047
    ead0:	e0bff917 	ldw	r2,-28(fp)
    ead4:	1885c83a 	sub	r2,r3,r2
    ead8:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
    eadc:	e0bff617 	ldw	r2,-40(fp)
    eae0:	10001e26 	beq	r2,zero,eb5c <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
    eae4:	e0fffe17 	ldw	r3,-8(fp)
    eae8:	e0bff617 	ldw	r2,-40(fp)
    eaec:	1880022e 	bgeu	r3,r2,eaf8 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
    eaf0:	e0bffe17 	ldw	r2,-8(fp)
    eaf4:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
    eaf8:	e0bffc17 	ldw	r2,-16(fp)
    eafc:	10c20e04 	addi	r3,r2,2104
    eb00:	e0bff917 	ldw	r2,-28(fp)
    eb04:	1885883a 	add	r2,r3,r2
    eb08:	e1bff617 	ldw	r6,-40(fp)
    eb0c:	e17ffd17 	ldw	r5,-12(fp)
    eb10:	1009883a 	mov	r4,r2
    eb14:	0005ebc0 	call	5ebc <memcpy>
      ptr   += n;
    eb18:	e0fffd17 	ldw	r3,-12(fp)
    eb1c:	e0bff617 	ldw	r2,-40(fp)
    eb20:	1885883a 	add	r2,r3,r2
    eb24:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
    eb28:	e0fffe17 	ldw	r3,-8(fp)
    eb2c:	e0bff617 	ldw	r2,-40(fp)
    eb30:	1885c83a 	sub	r2,r3,r2
    eb34:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    eb38:	e0fff917 	ldw	r3,-28(fp)
    eb3c:	e0bff617 	ldw	r2,-40(fp)
    eb40:	1885883a 	add	r2,r3,r2
    eb44:	10c1ffcc 	andi	r3,r2,2047
    eb48:	e0bffc17 	ldw	r2,-16(fp)
    eb4c:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    eb50:	e0bffe17 	ldw	r2,-8(fp)
    eb54:	00bfc716 	blt	zero,r2,ea74 <__alt_mem_Onchip_SRAM+0xf800ea74>
    eb58:	00000106 	br	eb60 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
    eb5c:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    eb60:	0005303a 	rdctl	r2,status
    eb64:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    eb68:	e0fffb17 	ldw	r3,-20(fp)
    eb6c:	00bfff84 	movi	r2,-2
    eb70:	1884703a 	and	r2,r3,r2
    eb74:	1001703a 	wrctl	status,r2
  
  return context;
    eb78:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
    eb7c:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    eb80:	e0bffc17 	ldw	r2,-16(fp)
    eb84:	10800817 	ldw	r2,32(r2)
    eb88:	10c00094 	ori	r3,r2,2
    eb8c:	e0bffc17 	ldw	r2,-16(fp)
    eb90:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    eb94:	e0bffc17 	ldw	r2,-16(fp)
    eb98:	10800017 	ldw	r2,0(r2)
    eb9c:	10800104 	addi	r2,r2,4
    eba0:	1007883a 	mov	r3,r2
    eba4:	e0bffc17 	ldw	r2,-16(fp)
    eba8:	10800817 	ldw	r2,32(r2)
    ebac:	18800035 	stwio	r2,0(r3)
    ebb0:	e0bffa17 	ldw	r2,-24(fp)
    ebb4:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    ebb8:	e0bff817 	ldw	r2,-32(fp)
    ebbc:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    ebc0:	e0bffe17 	ldw	r2,-8(fp)
    ebc4:	0080100e 	bge	zero,r2,ec08 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
    ebc8:	e0bfff17 	ldw	r2,-4(fp)
    ebcc:	1090000c 	andi	r2,r2,16384
    ebd0:	1000101e 	bne	r2,zero,ec14 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
    ebd4:	0001883a 	nop
    ebd8:	e0bffc17 	ldw	r2,-16(fp)
    ebdc:	10c00d17 	ldw	r3,52(r2)
    ebe0:	e0bff517 	ldw	r2,-44(fp)
    ebe4:	1880051e 	bne	r3,r2,ebfc <altera_avalon_jtag_uart_write+0x1b8>
    ebe8:	e0bffc17 	ldw	r2,-16(fp)
    ebec:	10c00917 	ldw	r3,36(r2)
    ebf0:	e0bffc17 	ldw	r2,-16(fp)
    ebf4:	10800117 	ldw	r2,4(r2)
    ebf8:	18bff736 	bltu	r3,r2,ebd8 <__alt_mem_Onchip_SRAM+0xf800ebd8>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
    ebfc:	e0bffc17 	ldw	r2,-16(fp)
    ec00:	10800917 	ldw	r2,36(r2)
    ec04:	1000051e 	bne	r2,zero,ec1c <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
    ec08:	e0bffe17 	ldw	r2,-8(fp)
    ec0c:	00bfd016 	blt	zero,r2,eb50 <__alt_mem_Onchip_SRAM+0xf800eb50>
    ec10:	00000306 	br	ec20 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
    ec14:	0001883a 	nop
    ec18:	00000106 	br	ec20 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
    ec1c:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
    ec20:	e0fffd17 	ldw	r3,-12(fp)
    ec24:	e0bff717 	ldw	r2,-36(fp)
    ec28:	18800426 	beq	r3,r2,ec3c <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
    ec2c:	e0fffd17 	ldw	r3,-12(fp)
    ec30:	e0bff717 	ldw	r2,-36(fp)
    ec34:	1885c83a 	sub	r2,r3,r2
    ec38:	00000606 	br	ec54 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
    ec3c:	e0bfff17 	ldw	r2,-4(fp)
    ec40:	1090000c 	andi	r2,r2,16384
    ec44:	10000226 	beq	r2,zero,ec50 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
    ec48:	00bffd44 	movi	r2,-11
    ec4c:	00000106 	br	ec54 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
    ec50:	00bffec4 	movi	r2,-5
}
    ec54:	e037883a 	mov	sp,fp
    ec58:	dfc00117 	ldw	ra,4(sp)
    ec5c:	df000017 	ldw	fp,0(sp)
    ec60:	dec00204 	addi	sp,sp,8
    ec64:	f800283a 	ret

0000ec68 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
    ec68:	defffa04 	addi	sp,sp,-24
    ec6c:	dfc00515 	stw	ra,20(sp)
    ec70:	df000415 	stw	fp,16(sp)
    ec74:	df000404 	addi	fp,sp,16
    ec78:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
    ec7c:	0007883a 	mov	r3,zero
    ec80:	e0bfff17 	ldw	r2,-4(fp)
    ec84:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
    ec88:	e0bfff17 	ldw	r2,-4(fp)
    ec8c:	10800104 	addi	r2,r2,4
    ec90:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    ec94:	0005303a 	rdctl	r2,status
    ec98:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    ec9c:	e0fffd17 	ldw	r3,-12(fp)
    eca0:	00bfff84 	movi	r2,-2
    eca4:	1884703a 	and	r2,r3,r2
    eca8:	1001703a 	wrctl	status,r2
  
  return context;
    ecac:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
    ecb0:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
    ecb4:	000ded80 	call	ded8 <alt_tick>
    ecb8:	e0bffc17 	ldw	r2,-16(fp)
    ecbc:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    ecc0:	e0bffe17 	ldw	r2,-8(fp)
    ecc4:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
    ecc8:	0001883a 	nop
    eccc:	e037883a 	mov	sp,fp
    ecd0:	dfc00117 	ldw	ra,4(sp)
    ecd4:	df000017 	ldw	fp,0(sp)
    ecd8:	dec00204 	addi	sp,sp,8
    ecdc:	f800283a 	ret

0000ece0 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
    ece0:	defff804 	addi	sp,sp,-32
    ece4:	dfc00715 	stw	ra,28(sp)
    ece8:	df000615 	stw	fp,24(sp)
    ecec:	df000604 	addi	fp,sp,24
    ecf0:	e13ffc15 	stw	r4,-16(fp)
    ecf4:	e17ffd15 	stw	r5,-12(fp)
    ecf8:	e1bffe15 	stw	r6,-8(fp)
    ecfc:	e1ffff15 	stw	r7,-4(fp)
    ed00:	e0bfff17 	ldw	r2,-4(fp)
    ed04:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
    ed08:	d0a6fc17 	ldw	r2,-25616(gp)
    ed0c:	1000021e 	bne	r2,zero,ed18 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
    ed10:	e0bffb17 	ldw	r2,-20(fp)
    ed14:	d0a6fc15 	stw	r2,-25616(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
    ed18:	e0bffc17 	ldw	r2,-16(fp)
    ed1c:	10800104 	addi	r2,r2,4
    ed20:	00c001c4 	movi	r3,7
    ed24:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
    ed28:	d8000015 	stw	zero,0(sp)
    ed2c:	e1fffc17 	ldw	r7,-16(fp)
    ed30:	01800074 	movhi	r6,1
    ed34:	31bb1a04 	addi	r6,r6,-5016
    ed38:	e17ffe17 	ldw	r5,-8(fp)
    ed3c:	e13ffd17 	ldw	r4,-12(fp)
    ed40:	000f6640 	call	f664 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
    ed44:	0001883a 	nop
    ed48:	e037883a 	mov	sp,fp
    ed4c:	dfc00117 	ldw	ra,4(sp)
    ed50:	df000017 	ldw	fp,0(sp)
    ed54:	dec00204 	addi	sp,sp,8
    ed58:	f800283a 	ret

0000ed5c <alt_adc_irq>:
 * alt_adc_irq()
 *
 * Interrupt handler for the altera modular adc.
 */
static void alt_adc_irq(void *context)
{
    ed5c:	defff904 	addi	sp,sp,-28
    ed60:	dfc00615 	stw	ra,24(sp)
    ed64:	df000515 	stw	fp,20(sp)
    ed68:	df000504 	addi	fp,sp,20
    ed6c:	e13fff15 	stw	r4,-4(fp)
    alt_modular_adc_dev *dev = (alt_modular_adc_dev *) context;
    ed70:	e0bfff17 	ldw	r2,-4(fp)
    ed74:	e0bffb15 	stw	r2,-20(fp)
    alt_irq_context cpu_sr = 0;
    ed78:	e03ffc15 	stw	zero,-16(fp)

	if(NULL != dev)
    ed7c:	e0bffb17 	ldw	r2,-20(fp)
    ed80:	10001a26 	beq	r2,zero,edec <alt_adc_irq+0x90>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    ed84:	0005303a 	rdctl	r2,status
    ed88:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    ed8c:	e0fffe17 	ldw	r3,-8(fp)
    ed90:	00bfff84 	movi	r2,-2
    ed94:	1884703a 	and	r2,r3,r2
    ed98:	1001703a 	wrctl	status,r2
  
  return context;
    ed9c:	e0bffe17 	ldw	r2,-8(fp)
	{
	    cpu_sr = alt_irq_disable_all();
    eda0:	e0bffc15 	stw	r2,-16(fp)
		* Other interrupts are explicitly disabled if callbacks
		* are registered because there is no guarantee that they are 
		* pre-emption-safe. This allows the driver to support 
		* interrupt pre-emption.
		*/
		if(dev->callback) 
    eda4:	e0bffb17 	ldw	r2,-20(fp)
    eda8:	10800a17 	ldw	r2,40(r2)
    edac:	10000626 	beq	r2,zero,edc8 <alt_adc_irq+0x6c>
		{
			dev->callback (dev->callback_context);
    edb0:	e0bffb17 	ldw	r2,-20(fp)
    edb4:	10800a17 	ldw	r2,40(r2)
    edb8:	e0fffb17 	ldw	r3,-20(fp)
    edbc:	18c00b17 	ldw	r3,44(r3)
    edc0:	1809883a 	mov	r4,r3
    edc4:	103ee83a 	callr	r2
		}
    
		/* clear the IRQ status */
		adc_clear_interrupt_status(dev->sample_store_base);
    edc8:	e0bffb17 	ldw	r2,-20(fp)
    edcc:	10800c17 	ldw	r2,48(r2)
    edd0:	1009883a 	mov	r4,r2
    edd4:	000f2080 	call	f208 <adc_clear_interrupt_status>
    edd8:	e0bffc17 	ldw	r2,-16(fp)
    eddc:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    ede0:	e0bffd17 	ldw	r2,-12(fp)
    ede4:	1001703a 	wrctl	status,r2
	    
		alt_irq_enable_all(cpu_sr);
	}
	
    return;
    ede8:	0001883a 	nop
    edec:	0001883a 	nop
}
    edf0:	e037883a 	mov	sp,fp
    edf4:	dfc00117 	ldw	ra,4(sp)
    edf8:	df000017 	ldw	fp,0(sp)
    edfc:	dec00204 	addi	sp,sp,8
    ee00:	f800283a 	ret

0000ee04 <alt_adc_word_read>:
 * Returns:
 * 0 -> success
 * -EINVAL -> Invalid arguments
**/
int alt_adc_word_read (alt_u32 sample_store_base, alt_u32* dest_ptr, alt_u32 len)
{
    ee04:	defff804 	addi	sp,sp,-32
    ee08:	df000715 	stw	fp,28(sp)
    ee0c:	df000704 	addi	fp,sp,28
    ee10:	e13ffd15 	stw	r4,-12(fp)
    ee14:	e17ffe15 	stw	r5,-8(fp)
    ee18:	e1bfff15 	stw	r6,-4(fp)
    alt_u32 word = 0;
    ee1c:	e03ff915 	stw	zero,-28(fp)
    alt_u32 word_length = len;
    ee20:	e0bfff17 	ldw	r2,-4(fp)
    ee24:	e0bffb15 	stw	r2,-20(fp)
    alt_u32* dest_buf = dest_ptr;
    ee28:	e0bffe17 	ldw	r2,-8(fp)
    ee2c:	e0bffa15 	stw	r2,-24(fp)
    alt_u32 base = sample_store_base;
    ee30:	e0bffd17 	ldw	r2,-12(fp)
    ee34:	e0bffc15 	stw	r2,-16(fp)
     
    /* return -EINVAL if invalid arguments passed into function */
    if(NULL == dest_buf)
    ee38:	e0bffa17 	ldw	r2,-24(fp)
    ee3c:	1000021e 	bne	r2,zero,ee48 <alt_adc_word_read+0x44>
    {
    	return -EINVAL;
    ee40:	00bffa84 	movi	r2,-22
    ee44:	00001606 	br	eea0 <alt_adc_word_read+0x9c>
    }

    for(word = 0; word < word_length; word++)
    ee48:	e03ff915 	stw	zero,-28(fp)
    ee4c:	00001006 	br	ee90 <alt_adc_word_read+0x8c>
    {
       *dest_buf = IORD_32DIRECT((base + (word * 4)),0);
    ee50:	e0bff917 	ldw	r2,-28(fp)
    ee54:	1085883a 	add	r2,r2,r2
    ee58:	1085883a 	add	r2,r2,r2
    ee5c:	1007883a 	mov	r3,r2
    ee60:	e0bffc17 	ldw	r2,-16(fp)
    ee64:	1885883a 	add	r2,r3,r2
    ee68:	10800037 	ldwio	r2,0(r2)
    ee6c:	1007883a 	mov	r3,r2
    ee70:	e0bffa17 	ldw	r2,-24(fp)
    ee74:	10c00015 	stw	r3,0(r2)

       dest_buf++;
    ee78:	e0bffa17 	ldw	r2,-24(fp)
    ee7c:	10800104 	addi	r2,r2,4
    ee80:	e0bffa15 	stw	r2,-24(fp)
    if(NULL == dest_buf)
    {
    	return -EINVAL;
    }

    for(word = 0; word < word_length; word++)
    ee84:	e0bff917 	ldw	r2,-28(fp)
    ee88:	10800044 	addi	r2,r2,1
    ee8c:	e0bff915 	stw	r2,-28(fp)
    ee90:	e0fff917 	ldw	r3,-28(fp)
    ee94:	e0bffb17 	ldw	r2,-20(fp)
    ee98:	18bfed36 	bltu	r3,r2,ee50 <__alt_mem_Onchip_SRAM+0xf800ee50>
       *dest_buf = IORD_32DIRECT((base + (word * 4)),0);

       dest_buf++;
    }

    return 0;
    ee9c:	0005883a 	mov	r2,zero

}
    eea0:	e037883a 	mov	sp,fp
    eea4:	df000017 	ldw	fp,0(sp)
    eea8:	dec00104 	addi	sp,sp,4
    eeac:	f800283a 	ret

0000eeb0 <altera_modular_adc_init>:


void altera_modular_adc_init(alt_modular_adc_dev* dev, alt_32 ic_id, alt_32 irq)
{
    eeb0:	defffa04 	addi	sp,sp,-24
    eeb4:	dfc00515 	stw	ra,20(sp)
    eeb8:	df000415 	stw	fp,16(sp)
    eebc:	df000404 	addi	fp,sp,16
    eec0:	e13ffd15 	stw	r4,-12(fp)
    eec4:	e17ffe15 	stw	r5,-8(fp)
    eec8:	e1bfff15 	stw	r6,-4(fp)
    extern alt_llist altera_modular_adc_list;
    alt_dev_llist_insert((alt_dev_llist*) dev, &altera_modular_adc_list);
    eecc:	d1601704 	addi	r5,gp,-32676
    eed0:	e13ffd17 	ldw	r4,-12(fp)
    eed4:	000f4500 	call	f450 <alt_dev_llist_insert>
	
	if ((0 <= ic_id) && (0 <= irq))
    eed8:	e0bffe17 	ldw	r2,-8(fp)
    eedc:	10000b16 	blt	r2,zero,ef0c <altera_modular_adc_init+0x5c>
    eee0:	e0bfff17 	ldw	r2,-4(fp)
    eee4:	10000916 	blt	r2,zero,ef0c <altera_modular_adc_init+0x5c>
	{
          /* Install IRQ handler */
	  #ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
              alt_ic_isr_register(ic_id, irq, alt_adc_irq, 
    eee8:	e0bffe17 	ldw	r2,-8(fp)
    eeec:	e0ffff17 	ldw	r3,-4(fp)
    eef0:	d8000015 	stw	zero,0(sp)
    eef4:	e1fffd17 	ldw	r7,-12(fp)
    eef8:	01800074 	movhi	r6,1
    eefc:	31bb5704 	addi	r6,r6,-4772
    ef00:	180b883a 	mov	r5,r3
    ef04:	1009883a 	mov	r4,r2
    ef08:	000f6640 	call	f664 <alt_ic_isr_register>
                      dev, NULL);
          #else
             alt_irq_register(irq, dev, alt_adc_irq);
          #endif 
	}
}
    ef0c:	0001883a 	nop
    ef10:	e037883a 	mov	sp,fp
    ef14:	dfc00117 	ldw	ra,4(sp)
    ef18:	df000017 	ldw	fp,0(sp)
    ef1c:	dec00204 	addi	sp,sp,8
    ef20:	f800283a 	ret

0000ef24 <alt_adc_register_callback>:
void alt_adc_register_callback(
	alt_modular_adc_dev *dev,
	alt_adc_callback callback,
	void *context,
	alt_u32 sample_store_base)
{
    ef24:	defffa04 	addi	sp,sp,-24
    ef28:	dfc00515 	stw	ra,20(sp)
    ef2c:	df000415 	stw	fp,16(sp)
    ef30:	df000404 	addi	fp,sp,16
    ef34:	e13ffc15 	stw	r4,-16(fp)
    ef38:	e17ffd15 	stw	r5,-12(fp)
    ef3c:	e1bffe15 	stw	r6,-8(fp)
    ef40:	e1ffff15 	stw	r7,-4(fp)
    dev->callback         = callback;
    ef44:	e0bffc17 	ldw	r2,-16(fp)
    ef48:	e0fffd17 	ldw	r3,-12(fp)
    ef4c:	10c00a15 	stw	r3,40(r2)
    dev->callback_context = context;
    ef50:	e0bffc17 	ldw	r2,-16(fp)
    ef54:	e0fffe17 	ldw	r3,-8(fp)
    ef58:	10c00b15 	stw	r3,44(r2)
    dev->sample_store_base = sample_store_base;
    ef5c:	e0bffc17 	ldw	r2,-16(fp)
    ef60:	e0ffff17 	ldw	r3,-4(fp)
    ef64:	10c00c15 	stw	r3,48(r2)
	
	if(NULL != callback)
    ef68:	e0bffd17 	ldw	r2,-12(fp)
    ef6c:	10000726 	beq	r2,zero,ef8c <alt_adc_register_callback+0x68>
	{
                adc_clear_interrupt_status(sample_store_base);
    ef70:	e0bfff17 	ldw	r2,-4(fp)
    ef74:	1009883a 	mov	r4,r2
    ef78:	000f2080 	call	f208 <adc_clear_interrupt_status>
		adc_interrupt_enable(sample_store_base);
    ef7c:	e0bfff17 	ldw	r2,-4(fp)
    ef80:	1009883a 	mov	r4,r2
    ef84:	000f17c0 	call	f17c <adc_interrupt_enable>
                adc_clear_interrupt_status(sample_store_base);
	}
	
    
	
    return ;
    ef88:	00000706 	br	efa8 <alt_adc_register_callback+0x84>
                adc_clear_interrupt_status(sample_store_base);
		adc_interrupt_enable(sample_store_base);
	}
	else
	{
		adc_interrupt_disable(sample_store_base);
    ef8c:	e0bfff17 	ldw	r2,-4(fp)
    ef90:	1009883a 	mov	r4,r2
    ef94:	000f1c00 	call	f1c0 <adc_interrupt_disable>
                adc_clear_interrupt_status(sample_store_base);
    ef98:	e0bfff17 	ldw	r2,-4(fp)
    ef9c:	1009883a 	mov	r4,r2
    efa0:	000f2080 	call	f208 <adc_clear_interrupt_status>
	}
	
    
	
    return ;
    efa4:	0001883a 	nop
}
    efa8:	e037883a 	mov	sp,fp
    efac:	dfc00117 	ldw	ra,4(sp)
    efb0:	df000017 	ldw	fp,0(sp)
    efb4:	dec00204 	addi	sp,sp,8
    efb8:	f800283a 	ret

0000efbc <altera_modular_adc_open>:

alt_modular_adc_dev* altera_modular_adc_open (const char *name)
{
    efbc:	defffc04 	addi	sp,sp,-16
    efc0:	dfc00315 	stw	ra,12(sp)
    efc4:	df000215 	stw	fp,8(sp)
    efc8:	df000204 	addi	fp,sp,8
    efcc:	e13fff15 	stw	r4,-4(fp)
    alt_modular_adc_dev *dev = NULL;
    efd0:	e03ffe15 	stw	zero,-8(fp)

    /* Find requested device */
    dev = (alt_modular_adc_dev*) alt_find_dev (name, &altera_modular_adc_list);
    efd4:	d1601704 	addi	r5,gp,-32676
    efd8:	e13fff17 	ldw	r4,-4(fp)
    efdc:	000f5b40 	call	f5b4 <alt_find_dev>
    efe0:	e0bffe15 	stw	r2,-8(fp)

    return dev;
    efe4:	e0bffe17 	ldw	r2,-8(fp)
}
    efe8:	e037883a 	mov	sp,fp
    efec:	dfc00117 	ldw	ra,4(sp)
    eff0:	df000017 	ldw	fp,0(sp)
    eff4:	dec00204 	addi	sp,sp,8
    eff8:	f800283a 	ret

0000effc <adc_stop>:

void adc_stop(int sequencer_base)
{
    effc:	defffe04 	addi	sp,sp,-8
    f000:	df000115 	stw	fp,4(sp)
    f004:	df000104 	addi	fp,sp,4
    f008:	e13fff15 	stw	r4,-4(fp)
    ALTERA_MODULAR_ADC_SEQUENCER_STOP(sequencer_base);
    f00c:	e0bfff17 	ldw	r2,-4(fp)
    f010:	e0ffff17 	ldw	r3,-4(fp)
    f014:	19000037 	ldwio	r4,0(r3)
    f018:	00ffff84 	movi	r3,-2
    f01c:	20c6703a 	and	r3,r4,r3
    f020:	10c00035 	stwio	r3,0(r2)
    f024:	0001883a 	nop
    f028:	e0bfff17 	ldw	r2,-4(fp)
    f02c:	10800037 	ldwio	r2,0(r2)
    f030:	1080004c 	andi	r2,r2,1
    f034:	103ffc1e 	bne	r2,zero,f028 <__alt_mem_Onchip_SRAM+0xf800f028>
}
    f038:	0001883a 	nop
    f03c:	e037883a 	mov	sp,fp
    f040:	df000017 	ldw	fp,0(sp)
    f044:	dec00104 	addi	sp,sp,4
    f048:	f800283a 	ret

0000f04c <adc_start>:

void adc_start(int sequencer_base)
{
    f04c:	defffe04 	addi	sp,sp,-8
    f050:	df000115 	stw	fp,4(sp)
    f054:	df000104 	addi	fp,sp,4
    f058:	e13fff15 	stw	r4,-4(fp)
    ALTERA_MODULAR_ADC_SEQUENCER_START(sequencer_base);
    f05c:	e0bfff17 	ldw	r2,-4(fp)
    f060:	e0ffff17 	ldw	r3,-4(fp)
    f064:	18c00037 	ldwio	r3,0(r3)
    f068:	18c00054 	ori	r3,r3,1
    f06c:	10c00035 	stwio	r3,0(r2)
}
    f070:	0001883a 	nop
    f074:	e037883a 	mov	sp,fp
    f078:	df000017 	ldw	fp,0(sp)
    f07c:	dec00104 	addi	sp,sp,4
    f080:	f800283a 	ret

0000f084 <adc_set_mode_run_once>:

void adc_set_mode_run_once(int sequencer_base)
{
    f084:	defffe04 	addi	sp,sp,-8
    f088:	df000115 	stw	fp,4(sp)
    f08c:	df000104 	addi	fp,sp,4
    f090:	e13fff15 	stw	r4,-4(fp)
    /* Note: Stop the ADC before calling this function,
       changing ADC mode while RUN bit is set has no effect. */
    ALTERA_MODULAR_ADC_SEQUENCER_MODE_RUN_ONCE(sequencer_base);
    f094:	e0bfff17 	ldw	r2,-4(fp)
    f098:	e0ffff17 	ldw	r3,-4(fp)
    f09c:	19000037 	ldwio	r4,0(r3)
    f0a0:	00fffc44 	movi	r3,-15
    f0a4:	20c6703a 	and	r3,r4,r3
    f0a8:	18c00094 	ori	r3,r3,2
    f0ac:	10c00035 	stwio	r3,0(r2)
}
    f0b0:	0001883a 	nop
    f0b4:	e037883a 	mov	sp,fp
    f0b8:	df000017 	ldw	fp,0(sp)
    f0bc:	dec00104 	addi	sp,sp,4
    f0c0:	f800283a 	ret

0000f0c4 <adc_set_mode_run_continuously>:

void adc_set_mode_run_continuously(int sequencer_base)
{
    f0c4:	defffe04 	addi	sp,sp,-8
    f0c8:	df000115 	stw	fp,4(sp)
    f0cc:	df000104 	addi	fp,sp,4
    f0d0:	e13fff15 	stw	r4,-4(fp)
    /* Note: Stop the ADC before calling this function,
       changing ADC mode while RUN bit is set has no effect. */
    ALTERA_MODULAR_ADC_SEQUENCER_MODE_RUN_CONTINUOUSLY(sequencer_base);
    f0d4:	e0bfff17 	ldw	r2,-4(fp)
    f0d8:	e0ffff17 	ldw	r3,-4(fp)
    f0dc:	19000037 	ldwio	r4,0(r3)
    f0e0:	00fffc44 	movi	r3,-15
    f0e4:	20c6703a 	and	r3,r4,r3
    f0e8:	10c00035 	stwio	r3,0(r2)
}
    f0ec:	0001883a 	nop
    f0f0:	e037883a 	mov	sp,fp
    f0f4:	df000017 	ldw	fp,0(sp)
    f0f8:	dec00104 	addi	sp,sp,4
    f0fc:	f800283a 	ret

0000f100 <adc_recalibrate>:

void adc_recalibrate(int sequencer_base)
{
    f100:	defffc04 	addi	sp,sp,-16
    f104:	dfc00315 	stw	ra,12(sp)
    f108:	df000215 	stw	fp,8(sp)
    f10c:	df000204 	addi	fp,sp,8
    f110:	e13fff15 	stw	r4,-4(fp)
         2. Start the ADC Sequencer Core.
         5. Poll for RUN bit to be clear
         6. Restore CMD register
     */
    alt_u32 backup_cmd_reg;
    backup_cmd_reg = IORD_ALTERA_MODULAR_ADC_SEQUENCER_CMD_REG(sequencer_base);
    f114:	e0bfff17 	ldw	r2,-4(fp)
    f118:	10800037 	ldwio	r2,0(r2)
    f11c:	e0bffe15 	stw	r2,-8(fp)
    adc_stop(sequencer_base);
    f120:	e13fff17 	ldw	r4,-4(fp)
    f124:	000effc0 	call	effc <adc_stop>
    ALTERA_MODULAR_ADC_SEQUENCER_MODE_RUN_RECALIBRATION(sequencer_base);
    f128:	e0bfff17 	ldw	r2,-4(fp)
    f12c:	e0ffff17 	ldw	r3,-4(fp)
    f130:	18c00037 	ldwio	r3,0(r3)
    f134:	18c00394 	ori	r3,r3,14
    f138:	10c00035 	stwio	r3,0(r2)
    adc_start(sequencer_base);
    f13c:	e13fff17 	ldw	r4,-4(fp)
    f140:	000f04c0 	call	f04c <adc_start>
    while(IORD_ALTERA_MODULAR_ADC_SEQUENCER_CMD_REG(sequencer_base)
    f144:	0001883a 	nop
    f148:	e0bfff17 	ldw	r2,-4(fp)
    f14c:	10800037 	ldwio	r2,0(r2)
             & ALTERA_MODULAR_ADC_SEQUENCER_CMD_RUN_MSK);
    f150:	1080004c 	andi	r2,r2,1
    alt_u32 backup_cmd_reg;
    backup_cmd_reg = IORD_ALTERA_MODULAR_ADC_SEQUENCER_CMD_REG(sequencer_base);
    adc_stop(sequencer_base);
    ALTERA_MODULAR_ADC_SEQUENCER_MODE_RUN_RECALIBRATION(sequencer_base);
    adc_start(sequencer_base);
    while(IORD_ALTERA_MODULAR_ADC_SEQUENCER_CMD_REG(sequencer_base)
    f154:	103ffc1e 	bne	r2,zero,f148 <__alt_mem_Onchip_SRAM+0xf800f148>
             & ALTERA_MODULAR_ADC_SEQUENCER_CMD_RUN_MSK);
    IOWR_ALTERA_MODULAR_ADC_SEQUENCER_CMD_REG(sequencer_base, backup_cmd_reg);
    f158:	e0bfff17 	ldw	r2,-4(fp)
    f15c:	e0fffe17 	ldw	r3,-8(fp)
    f160:	10c00035 	stwio	r3,0(r2)
}
    f164:	0001883a 	nop
    f168:	e037883a 	mov	sp,fp
    f16c:	dfc00117 	ldw	ra,4(sp)
    f170:	df000017 	ldw	fp,0(sp)
    f174:	dec00204 	addi	sp,sp,8
    f178:	f800283a 	ret

0000f17c <adc_interrupt_enable>:

void adc_interrupt_enable(int sample_store_base)
{
    f17c:	defffe04 	addi	sp,sp,-8
    f180:	df000115 	stw	fp,4(sp)
    f184:	df000104 	addi	fp,sp,4
    f188:	e13fff15 	stw	r4,-4(fp)
    ALTERA_MODULAR_ADC_SAMPLE_STORAGE_IRQ_ENABLE(sample_store_base);
    f18c:	e0bfff17 	ldw	r2,-4(fp)
    f190:	10804004 	addi	r2,r2,256
    f194:	1007883a 	mov	r3,r2
    f198:	e0bfff17 	ldw	r2,-4(fp)
    f19c:	10804004 	addi	r2,r2,256
    f1a0:	10800037 	ldwio	r2,0(r2)
    f1a4:	10800054 	ori	r2,r2,1
    f1a8:	18800035 	stwio	r2,0(r3)
}
    f1ac:	0001883a 	nop
    f1b0:	e037883a 	mov	sp,fp
    f1b4:	df000017 	ldw	fp,0(sp)
    f1b8:	dec00104 	addi	sp,sp,4
    f1bc:	f800283a 	ret

0000f1c0 <adc_interrupt_disable>:

void adc_interrupt_disable(int sample_store_base)
{
    f1c0:	defffe04 	addi	sp,sp,-8
    f1c4:	df000115 	stw	fp,4(sp)
    f1c8:	df000104 	addi	fp,sp,4
    f1cc:	e13fff15 	stw	r4,-4(fp)
    ALTERA_MODULAR_ADC_SAMPLE_STORAGE_IRQ_DISABLE(sample_store_base);
    f1d0:	e0bfff17 	ldw	r2,-4(fp)
    f1d4:	10804004 	addi	r2,r2,256
    f1d8:	1009883a 	mov	r4,r2
    f1dc:	e0bfff17 	ldw	r2,-4(fp)
    f1e0:	10804004 	addi	r2,r2,256
    f1e4:	10c00037 	ldwio	r3,0(r2)
    f1e8:	00bfff84 	movi	r2,-2
    f1ec:	1884703a 	and	r2,r3,r2
    f1f0:	20800035 	stwio	r2,0(r4)
}
    f1f4:	0001883a 	nop
    f1f8:	e037883a 	mov	sp,fp
    f1fc:	df000017 	ldw	fp,0(sp)
    f200:	dec00104 	addi	sp,sp,4
    f204:	f800283a 	ret

0000f208 <adc_clear_interrupt_status>:

void adc_clear_interrupt_status(int sample_store_base)
{
    f208:	defffe04 	addi	sp,sp,-8
    f20c:	df000115 	stw	fp,4(sp)
    f210:	df000104 	addi	fp,sp,4
    f214:	e13fff15 	stw	r4,-4(fp)
    CLEAR_ALTERA_MODULAR_ADC_SAMPLE_STORAGE_IRQ_STATUS(sample_store_base);
    f218:	e0bfff17 	ldw	r2,-4(fp)
    f21c:	10804104 	addi	r2,r2,260
    f220:	1007883a 	mov	r3,r2
    f224:	e0bfff17 	ldw	r2,-4(fp)
    f228:	10804104 	addi	r2,r2,260
    f22c:	10800037 	ldwio	r2,0(r2)
    f230:	10800054 	ori	r2,r2,1
    f234:	18800035 	stwio	r2,0(r3)
}
    f238:	0001883a 	nop
    f23c:	e037883a 	mov	sp,fp
    f240:	df000017 	ldw	fp,0(sp)
    f244:	dec00104 	addi	sp,sp,4
    f248:	f800283a 	ret

0000f24c <adc_interrupt_asserted>:

int adc_interrupt_asserted(int sample_store_base)
{
    f24c:	defffe04 	addi	sp,sp,-8
    f250:	df000115 	stw	fp,4(sp)
    f254:	df000104 	addi	fp,sp,4
    f258:	e13fff15 	stw	r4,-4(fp)
    return((READ_ALTERA_MODULAR_ADC_SAMPLE_STORAGE_IRQ_STATUS(sample_store_base)==1) ? -1 : 0);
    f25c:	e0bfff17 	ldw	r2,-4(fp)
    f260:	10804104 	addi	r2,r2,260
    f264:	10800037 	ldwio	r2,0(r2)
    f268:	1080004c 	andi	r2,r2,1
    f26c:	10000226 	beq	r2,zero,f278 <adc_interrupt_asserted+0x2c>
    f270:	00bfffc4 	movi	r2,-1
    f274:	00000106 	br	f27c <adc_interrupt_asserted+0x30>
    f278:	0005883a 	mov	r2,zero
}
    f27c:	e037883a 	mov	sp,fp
    f280:	df000017 	ldw	fp,0(sp)
    f284:	dec00104 	addi	sp,sp,4
    f288:	f800283a 	ret

0000f28c <adc_wait_for_interrupt>:

void adc_wait_for_interrupt(int sample_store_base)
{
    f28c:	defffe04 	addi	sp,sp,-8
    f290:	df000115 	stw	fp,4(sp)
    f294:	df000104 	addi	fp,sp,4
    f298:	e13fff15 	stw	r4,-4(fp)
    WAIT_FOR_ALTERA_MODULAR_ADC_SAMPLE_STORAGE_IRQ(sample_store_base);
    f29c:	0001883a 	nop
    f2a0:	e0bfff17 	ldw	r2,-4(fp)
    f2a4:	10804104 	addi	r2,r2,260
    f2a8:	10800037 	ldwio	r2,0(r2)
    f2ac:	1080004c 	andi	r2,r2,1
    f2b0:	103ffb26 	beq	r2,zero,f2a0 <__alt_mem_Onchip_SRAM+0xf800f2a0>
}
    f2b4:	0001883a 	nop
    f2b8:	e037883a 	mov	sp,fp
    f2bc:	df000017 	ldw	fp,0(sp)
    f2c0:	dec00104 	addi	sp,sp,4
    f2c4:	f800283a 	ret

0000f2c8 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
    f2c8:	defff504 	addi	sp,sp,-44
    f2cc:	df000a15 	stw	fp,40(sp)
    f2d0:	df000a04 	addi	fp,sp,40
    f2d4:	e13ffc15 	stw	r4,-16(fp)
    f2d8:	e17ffd15 	stw	r5,-12(fp)
    f2dc:	e1bffe15 	stw	r6,-8(fp)
    f2e0:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
    f2e4:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
    f2e8:	d0a6fc17 	ldw	r2,-25616(gp)
  
  if (alt_ticks_per_second ())
    f2ec:	10003c26 	beq	r2,zero,f3e0 <alt_alarm_start+0x118>
  {
    if (alarm)
    f2f0:	e0bffc17 	ldw	r2,-16(fp)
    f2f4:	10003826 	beq	r2,zero,f3d8 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
    f2f8:	e0bffc17 	ldw	r2,-16(fp)
    f2fc:	e0fffe17 	ldw	r3,-8(fp)
    f300:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
    f304:	e0bffc17 	ldw	r2,-16(fp)
    f308:	e0ffff17 	ldw	r3,-4(fp)
    f30c:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    f310:	0005303a 	rdctl	r2,status
    f314:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    f318:	e0fff917 	ldw	r3,-28(fp)
    f31c:	00bfff84 	movi	r2,-2
    f320:	1884703a 	and	r2,r3,r2
    f324:	1001703a 	wrctl	status,r2
  
  return context;
    f328:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
    f32c:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
    f330:	d0a6fd17 	ldw	r2,-25612(gp)
      
      current_nticks = alt_nticks();
    f334:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
    f338:	e0fffd17 	ldw	r3,-12(fp)
    f33c:	e0bff617 	ldw	r2,-40(fp)
    f340:	1885883a 	add	r2,r3,r2
    f344:	10c00044 	addi	r3,r2,1
    f348:	e0bffc17 	ldw	r2,-16(fp)
    f34c:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
    f350:	e0bffc17 	ldw	r2,-16(fp)
    f354:	10c00217 	ldw	r3,8(r2)
    f358:	e0bff617 	ldw	r2,-40(fp)
    f35c:	1880042e 	bgeu	r3,r2,f370 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
    f360:	e0bffc17 	ldw	r2,-16(fp)
    f364:	00c00044 	movi	r3,1
    f368:	10c00405 	stb	r3,16(r2)
    f36c:	00000206 	br	f378 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
    f370:	e0bffc17 	ldw	r2,-16(fp)
    f374:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
    f378:	e0bffc17 	ldw	r2,-16(fp)
    f37c:	d0e01504 	addi	r3,gp,-32684
    f380:	e0fffa15 	stw	r3,-24(fp)
    f384:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
    f388:	e0bffb17 	ldw	r2,-20(fp)
    f38c:	e0fffa17 	ldw	r3,-24(fp)
    f390:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
    f394:	e0bffa17 	ldw	r2,-24(fp)
    f398:	10c00017 	ldw	r3,0(r2)
    f39c:	e0bffb17 	ldw	r2,-20(fp)
    f3a0:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
    f3a4:	e0bffa17 	ldw	r2,-24(fp)
    f3a8:	10800017 	ldw	r2,0(r2)
    f3ac:	e0fffb17 	ldw	r3,-20(fp)
    f3b0:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
    f3b4:	e0bffa17 	ldw	r2,-24(fp)
    f3b8:	e0fffb17 	ldw	r3,-20(fp)
    f3bc:	10c00015 	stw	r3,0(r2)
    f3c0:	e0bff817 	ldw	r2,-32(fp)
    f3c4:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    f3c8:	e0bff717 	ldw	r2,-36(fp)
    f3cc:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
    f3d0:	0005883a 	mov	r2,zero
    f3d4:	00000306 	br	f3e4 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
    f3d8:	00bffa84 	movi	r2,-22
    f3dc:	00000106 	br	f3e4 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
    f3e0:	00bfde84 	movi	r2,-134
  }
}
    f3e4:	e037883a 	mov	sp,fp
    f3e8:	df000017 	ldw	fp,0(sp)
    f3ec:	dec00104 	addi	sp,sp,4
    f3f0:	f800283a 	ret

0000f3f4 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
    f3f4:	deffff04 	addi	sp,sp,-4
    f3f8:	df000015 	stw	fp,0(sp)
    f3fc:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
    f400:	0001883a 	nop
    f404:	e037883a 	mov	sp,fp
    f408:	df000017 	ldw	fp,0(sp)
    f40c:	dec00104 	addi	sp,sp,4
    f410:	f800283a 	ret

0000f414 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    f414:	defffe04 	addi	sp,sp,-8
    f418:	dfc00115 	stw	ra,4(sp)
    f41c:	df000015 	stw	fp,0(sp)
    f420:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    f424:	d0a01317 	ldw	r2,-32692(gp)
    f428:	10000326 	beq	r2,zero,f438 <alt_get_errno+0x24>
    f42c:	d0a01317 	ldw	r2,-32692(gp)
    f430:	103ee83a 	callr	r2
    f434:	00000106 	br	f43c <alt_get_errno+0x28>
    f438:	d0a6ee04 	addi	r2,gp,-25672
}
    f43c:	e037883a 	mov	sp,fp
    f440:	dfc00117 	ldw	ra,4(sp)
    f444:	df000017 	ldw	fp,0(sp)
    f448:	dec00204 	addi	sp,sp,8
    f44c:	f800283a 	ret

0000f450 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
    f450:	defffa04 	addi	sp,sp,-24
    f454:	dfc00515 	stw	ra,20(sp)
    f458:	df000415 	stw	fp,16(sp)
    f45c:	df000404 	addi	fp,sp,16
    f460:	e13ffe15 	stw	r4,-8(fp)
    f464:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
    f468:	e0bffe17 	ldw	r2,-8(fp)
    f46c:	10000326 	beq	r2,zero,f47c <alt_dev_llist_insert+0x2c>
    f470:	e0bffe17 	ldw	r2,-8(fp)
    f474:	10800217 	ldw	r2,8(r2)
    f478:	1000061e 	bne	r2,zero,f494 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
    f47c:	000f4140 	call	f414 <alt_get_errno>
    f480:	1007883a 	mov	r3,r2
    f484:	00800584 	movi	r2,22
    f488:	18800015 	stw	r2,0(r3)
    return -EINVAL;
    f48c:	00bffa84 	movi	r2,-22
    f490:	00001306 	br	f4e0 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
    f494:	e0bffe17 	ldw	r2,-8(fp)
    f498:	e0ffff17 	ldw	r3,-4(fp)
    f49c:	e0fffc15 	stw	r3,-16(fp)
    f4a0:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
    f4a4:	e0bffd17 	ldw	r2,-12(fp)
    f4a8:	e0fffc17 	ldw	r3,-16(fp)
    f4ac:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
    f4b0:	e0bffc17 	ldw	r2,-16(fp)
    f4b4:	10c00017 	ldw	r3,0(r2)
    f4b8:	e0bffd17 	ldw	r2,-12(fp)
    f4bc:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
    f4c0:	e0bffc17 	ldw	r2,-16(fp)
    f4c4:	10800017 	ldw	r2,0(r2)
    f4c8:	e0fffd17 	ldw	r3,-12(fp)
    f4cc:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
    f4d0:	e0bffc17 	ldw	r2,-16(fp)
    f4d4:	e0fffd17 	ldw	r3,-12(fp)
    f4d8:	10c00015 	stw	r3,0(r2)

  return 0;  
    f4dc:	0005883a 	mov	r2,zero
}
    f4e0:	e037883a 	mov	sp,fp
    f4e4:	dfc00117 	ldw	ra,4(sp)
    f4e8:	df000017 	ldw	fp,0(sp)
    f4ec:	dec00204 	addi	sp,sp,8
    f4f0:	f800283a 	ret

0000f4f4 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
    f4f4:	defffd04 	addi	sp,sp,-12
    f4f8:	dfc00215 	stw	ra,8(sp)
    f4fc:	df000115 	stw	fp,4(sp)
    f500:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
    f504:	00800074 	movhi	r2,1
    f508:	1080c104 	addi	r2,r2,772
    f50c:	e0bfff15 	stw	r2,-4(fp)
    f510:	00000606 	br	f52c <_do_ctors+0x38>
        (*ctor) (); 
    f514:	e0bfff17 	ldw	r2,-4(fp)
    f518:	10800017 	ldw	r2,0(r2)
    f51c:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
    f520:	e0bfff17 	ldw	r2,-4(fp)
    f524:	10bfff04 	addi	r2,r2,-4
    f528:	e0bfff15 	stw	r2,-4(fp)
    f52c:	e0ffff17 	ldw	r3,-4(fp)
    f530:	00800074 	movhi	r2,1
    f534:	1080c204 	addi	r2,r2,776
    f538:	18bff62e 	bgeu	r3,r2,f514 <__alt_mem_Onchip_SRAM+0xf800f514>
        (*ctor) (); 
}
    f53c:	0001883a 	nop
    f540:	e037883a 	mov	sp,fp
    f544:	dfc00117 	ldw	ra,4(sp)
    f548:	df000017 	ldw	fp,0(sp)
    f54c:	dec00204 	addi	sp,sp,8
    f550:	f800283a 	ret

0000f554 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
    f554:	defffd04 	addi	sp,sp,-12
    f558:	dfc00215 	stw	ra,8(sp)
    f55c:	df000115 	stw	fp,4(sp)
    f560:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
    f564:	00800074 	movhi	r2,1
    f568:	1080c104 	addi	r2,r2,772
    f56c:	e0bfff15 	stw	r2,-4(fp)
    f570:	00000606 	br	f58c <_do_dtors+0x38>
        (*dtor) (); 
    f574:	e0bfff17 	ldw	r2,-4(fp)
    f578:	10800017 	ldw	r2,0(r2)
    f57c:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
    f580:	e0bfff17 	ldw	r2,-4(fp)
    f584:	10bfff04 	addi	r2,r2,-4
    f588:	e0bfff15 	stw	r2,-4(fp)
    f58c:	e0ffff17 	ldw	r3,-4(fp)
    f590:	00800074 	movhi	r2,1
    f594:	1080c204 	addi	r2,r2,776
    f598:	18bff62e 	bgeu	r3,r2,f574 <__alt_mem_Onchip_SRAM+0xf800f574>
        (*dtor) (); 
}
    f59c:	0001883a 	nop
    f5a0:	e037883a 	mov	sp,fp
    f5a4:	dfc00117 	ldw	ra,4(sp)
    f5a8:	df000017 	ldw	fp,0(sp)
    f5ac:	dec00204 	addi	sp,sp,8
    f5b0:	f800283a 	ret

0000f5b4 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
    f5b4:	defffa04 	addi	sp,sp,-24
    f5b8:	dfc00515 	stw	ra,20(sp)
    f5bc:	df000415 	stw	fp,16(sp)
    f5c0:	df000404 	addi	fp,sp,16
    f5c4:	e13ffe15 	stw	r4,-8(fp)
    f5c8:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
    f5cc:	e0bfff17 	ldw	r2,-4(fp)
    f5d0:	10800017 	ldw	r2,0(r2)
    f5d4:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
    f5d8:	e13ffe17 	ldw	r4,-8(fp)
    f5dc:	0000e400 	call	e40 <strlen>
    f5e0:	10800044 	addi	r2,r2,1
    f5e4:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
    f5e8:	00000d06 	br	f620 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
    f5ec:	e0bffc17 	ldw	r2,-16(fp)
    f5f0:	10800217 	ldw	r2,8(r2)
    f5f4:	e0fffd17 	ldw	r3,-12(fp)
    f5f8:	180d883a 	mov	r6,r3
    f5fc:	e17ffe17 	ldw	r5,-8(fp)
    f600:	1009883a 	mov	r4,r2
    f604:	000ffc00 	call	ffc0 <memcmp>
    f608:	1000021e 	bne	r2,zero,f614 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
    f60c:	e0bffc17 	ldw	r2,-16(fp)
    f610:	00000706 	br	f630 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
    f614:	e0bffc17 	ldw	r2,-16(fp)
    f618:	10800017 	ldw	r2,0(r2)
    f61c:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
    f620:	e0fffc17 	ldw	r3,-16(fp)
    f624:	e0bfff17 	ldw	r2,-4(fp)
    f628:	18bff01e 	bne	r3,r2,f5ec <__alt_mem_Onchip_SRAM+0xf800f5ec>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
    f62c:	0005883a 	mov	r2,zero
}
    f630:	e037883a 	mov	sp,fp
    f634:	dfc00117 	ldw	ra,4(sp)
    f638:	df000017 	ldw	fp,0(sp)
    f63c:	dec00204 	addi	sp,sp,8
    f640:	f800283a 	ret

0000f644 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
    f644:	deffff04 	addi	sp,sp,-4
    f648:	df000015 	stw	fp,0(sp)
    f64c:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
    f650:	0001883a 	nop
    f654:	e037883a 	mov	sp,fp
    f658:	df000017 	ldw	fp,0(sp)
    f65c:	dec00104 	addi	sp,sp,4
    f660:	f800283a 	ret

0000f664 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
    f664:	defff904 	addi	sp,sp,-28
    f668:	dfc00615 	stw	ra,24(sp)
    f66c:	df000515 	stw	fp,20(sp)
    f670:	df000504 	addi	fp,sp,20
    f674:	e13ffc15 	stw	r4,-16(fp)
    f678:	e17ffd15 	stw	r5,-12(fp)
    f67c:	e1bffe15 	stw	r6,-8(fp)
    f680:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
    f684:	e0800217 	ldw	r2,8(fp)
    f688:	d8800015 	stw	r2,0(sp)
    f68c:	e1ffff17 	ldw	r7,-4(fp)
    f690:	e1bffe17 	ldw	r6,-8(fp)
    f694:	e17ffd17 	ldw	r5,-12(fp)
    f698:	e13ffc17 	ldw	r4,-16(fp)
    f69c:	000f8140 	call	f814 <alt_iic_isr_register>
}  
    f6a0:	e037883a 	mov	sp,fp
    f6a4:	dfc00117 	ldw	ra,4(sp)
    f6a8:	df000017 	ldw	fp,0(sp)
    f6ac:	dec00204 	addi	sp,sp,8
    f6b0:	f800283a 	ret

0000f6b4 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
    f6b4:	defff904 	addi	sp,sp,-28
    f6b8:	df000615 	stw	fp,24(sp)
    f6bc:	df000604 	addi	fp,sp,24
    f6c0:	e13ffe15 	stw	r4,-8(fp)
    f6c4:	e17fff15 	stw	r5,-4(fp)
    f6c8:	e0bfff17 	ldw	r2,-4(fp)
    f6cc:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    f6d0:	0005303a 	rdctl	r2,status
    f6d4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    f6d8:	e0fffb17 	ldw	r3,-20(fp)
    f6dc:	00bfff84 	movi	r2,-2
    f6e0:	1884703a 	and	r2,r3,r2
    f6e4:	1001703a 	wrctl	status,r2
  
  return context;
    f6e8:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
    f6ec:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
    f6f0:	00c00044 	movi	r3,1
    f6f4:	e0bffa17 	ldw	r2,-24(fp)
    f6f8:	1884983a 	sll	r2,r3,r2
    f6fc:	1007883a 	mov	r3,r2
    f700:	d0a6fe17 	ldw	r2,-25608(gp)
    f704:	1884b03a 	or	r2,r3,r2
    f708:	d0a6fe15 	stw	r2,-25608(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    f70c:	d0a6fe17 	ldw	r2,-25608(gp)
    f710:	100170fa 	wrctl	ienable,r2
    f714:	e0bffc17 	ldw	r2,-16(fp)
    f718:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    f71c:	e0bffd17 	ldw	r2,-12(fp)
    f720:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
    f724:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
    f728:	0001883a 	nop
}
    f72c:	e037883a 	mov	sp,fp
    f730:	df000017 	ldw	fp,0(sp)
    f734:	dec00104 	addi	sp,sp,4
    f738:	f800283a 	ret

0000f73c <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
    f73c:	defff904 	addi	sp,sp,-28
    f740:	df000615 	stw	fp,24(sp)
    f744:	df000604 	addi	fp,sp,24
    f748:	e13ffe15 	stw	r4,-8(fp)
    f74c:	e17fff15 	stw	r5,-4(fp)
    f750:	e0bfff17 	ldw	r2,-4(fp)
    f754:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    f758:	0005303a 	rdctl	r2,status
    f75c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    f760:	e0fffb17 	ldw	r3,-20(fp)
    f764:	00bfff84 	movi	r2,-2
    f768:	1884703a 	and	r2,r3,r2
    f76c:	1001703a 	wrctl	status,r2
  
  return context;
    f770:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
    f774:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
    f778:	00c00044 	movi	r3,1
    f77c:	e0bffa17 	ldw	r2,-24(fp)
    f780:	1884983a 	sll	r2,r3,r2
    f784:	0084303a 	nor	r2,zero,r2
    f788:	1007883a 	mov	r3,r2
    f78c:	d0a6fe17 	ldw	r2,-25608(gp)
    f790:	1884703a 	and	r2,r3,r2
    f794:	d0a6fe15 	stw	r2,-25608(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    f798:	d0a6fe17 	ldw	r2,-25608(gp)
    f79c:	100170fa 	wrctl	ienable,r2
    f7a0:	e0bffc17 	ldw	r2,-16(fp)
    f7a4:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    f7a8:	e0bffd17 	ldw	r2,-12(fp)
    f7ac:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
    f7b0:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
    f7b4:	0001883a 	nop
}
    f7b8:	e037883a 	mov	sp,fp
    f7bc:	df000017 	ldw	fp,0(sp)
    f7c0:	dec00104 	addi	sp,sp,4
    f7c4:	f800283a 	ret

0000f7c8 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
    f7c8:	defffc04 	addi	sp,sp,-16
    f7cc:	df000315 	stw	fp,12(sp)
    f7d0:	df000304 	addi	fp,sp,12
    f7d4:	e13ffe15 	stw	r4,-8(fp)
    f7d8:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
    f7dc:	000530fa 	rdctl	r2,ienable
    f7e0:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
    f7e4:	00c00044 	movi	r3,1
    f7e8:	e0bfff17 	ldw	r2,-4(fp)
    f7ec:	1884983a 	sll	r2,r3,r2
    f7f0:	1007883a 	mov	r3,r2
    f7f4:	e0bffd17 	ldw	r2,-12(fp)
    f7f8:	1884703a 	and	r2,r3,r2
    f7fc:	1004c03a 	cmpne	r2,r2,zero
    f800:	10803fcc 	andi	r2,r2,255
}
    f804:	e037883a 	mov	sp,fp
    f808:	df000017 	ldw	fp,0(sp)
    f80c:	dec00104 	addi	sp,sp,4
    f810:	f800283a 	ret

0000f814 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
    f814:	defff504 	addi	sp,sp,-44
    f818:	dfc00a15 	stw	ra,40(sp)
    f81c:	df000915 	stw	fp,36(sp)
    f820:	df000904 	addi	fp,sp,36
    f824:	e13ffc15 	stw	r4,-16(fp)
    f828:	e17ffd15 	stw	r5,-12(fp)
    f82c:	e1bffe15 	stw	r6,-8(fp)
    f830:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
    f834:	00bffa84 	movi	r2,-22
    f838:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
    f83c:	e0bffd17 	ldw	r2,-12(fp)
    f840:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
    f844:	e0bff817 	ldw	r2,-32(fp)
    f848:	10800808 	cmpgei	r2,r2,32
    f84c:	1000271e 	bne	r2,zero,f8ec <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    f850:	0005303a 	rdctl	r2,status
    f854:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    f858:	e0fffb17 	ldw	r3,-20(fp)
    f85c:	00bfff84 	movi	r2,-2
    f860:	1884703a 	and	r2,r3,r2
    f864:	1001703a 	wrctl	status,r2
  
  return context;
    f868:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
    f86c:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
    f870:	00800074 	movhi	r2,1
    f874:	108f5504 	addi	r2,r2,15700
    f878:	e0fff817 	ldw	r3,-32(fp)
    f87c:	180690fa 	slli	r3,r3,3
    f880:	10c5883a 	add	r2,r2,r3
    f884:	e0fffe17 	ldw	r3,-8(fp)
    f888:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
    f88c:	00800074 	movhi	r2,1
    f890:	108f5504 	addi	r2,r2,15700
    f894:	e0fff817 	ldw	r3,-32(fp)
    f898:	180690fa 	slli	r3,r3,3
    f89c:	10c5883a 	add	r2,r2,r3
    f8a0:	10800104 	addi	r2,r2,4
    f8a4:	e0ffff17 	ldw	r3,-4(fp)
    f8a8:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
    f8ac:	e0bffe17 	ldw	r2,-8(fp)
    f8b0:	10000526 	beq	r2,zero,f8c8 <alt_iic_isr_register+0xb4>
    f8b4:	e0bff817 	ldw	r2,-32(fp)
    f8b8:	100b883a 	mov	r5,r2
    f8bc:	e13ffc17 	ldw	r4,-16(fp)
    f8c0:	000f6b40 	call	f6b4 <alt_ic_irq_enable>
    f8c4:	00000406 	br	f8d8 <alt_iic_isr_register+0xc4>
    f8c8:	e0bff817 	ldw	r2,-32(fp)
    f8cc:	100b883a 	mov	r5,r2
    f8d0:	e13ffc17 	ldw	r4,-16(fp)
    f8d4:	000f73c0 	call	f73c <alt_ic_irq_disable>
    f8d8:	e0bff715 	stw	r2,-36(fp)
    f8dc:	e0bffa17 	ldw	r2,-24(fp)
    f8e0:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    f8e4:	e0bff917 	ldw	r2,-28(fp)
    f8e8:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
    f8ec:	e0bff717 	ldw	r2,-36(fp)
}
    f8f0:	e037883a 	mov	sp,fp
    f8f4:	dfc00117 	ldw	ra,4(sp)
    f8f8:	df000017 	ldw	fp,0(sp)
    f8fc:	dec00204 	addi	sp,sp,8
    f900:	f800283a 	ret

0000f904 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
    f904:	defff804 	addi	sp,sp,-32
    f908:	dfc00715 	stw	ra,28(sp)
    f90c:	df000615 	stw	fp,24(sp)
    f910:	dc000515 	stw	r16,20(sp)
    f914:	df000604 	addi	fp,sp,24
    f918:	e13ffb15 	stw	r4,-20(fp)
    f91c:	e17ffc15 	stw	r5,-16(fp)
    f920:	e1bffd15 	stw	r6,-12(fp)
    f924:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
    f928:	e1bffe17 	ldw	r6,-8(fp)
    f92c:	e17ffd17 	ldw	r5,-12(fp)
    f930:	e13ffc17 	ldw	r4,-16(fp)
    f934:	000fb8c0 	call	fb8c <open>
    f938:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
    f93c:	e0bffa17 	ldw	r2,-24(fp)
    f940:	10002216 	blt	r2,zero,f9cc <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
    f944:	04000074 	movhi	r16,1
    f948:	8403c404 	addi	r16,r16,3856
    f94c:	e0bffa17 	ldw	r2,-24(fp)
    f950:	01400304 	movi	r5,12
    f954:	1009883a 	mov	r4,r2
    f958:	0000a0c0 	call	a0c <__mulsi3>
    f95c:	8085883a 	add	r2,r16,r2
    f960:	10c00017 	ldw	r3,0(r2)
    f964:	e0bffb17 	ldw	r2,-20(fp)
    f968:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
    f96c:	04000074 	movhi	r16,1
    f970:	8403c404 	addi	r16,r16,3856
    f974:	e0bffa17 	ldw	r2,-24(fp)
    f978:	01400304 	movi	r5,12
    f97c:	1009883a 	mov	r4,r2
    f980:	0000a0c0 	call	a0c <__mulsi3>
    f984:	8085883a 	add	r2,r16,r2
    f988:	10800104 	addi	r2,r2,4
    f98c:	10c00017 	ldw	r3,0(r2)
    f990:	e0bffb17 	ldw	r2,-20(fp)
    f994:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
    f998:	04000074 	movhi	r16,1
    f99c:	8403c404 	addi	r16,r16,3856
    f9a0:	e0bffa17 	ldw	r2,-24(fp)
    f9a4:	01400304 	movi	r5,12
    f9a8:	1009883a 	mov	r4,r2
    f9ac:	0000a0c0 	call	a0c <__mulsi3>
    f9b0:	8085883a 	add	r2,r16,r2
    f9b4:	10800204 	addi	r2,r2,8
    f9b8:	10c00017 	ldw	r3,0(r2)
    f9bc:	e0bffb17 	ldw	r2,-20(fp)
    f9c0:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
    f9c4:	e13ffa17 	ldw	r4,-24(fp)
    f9c8:	000dd080 	call	dd08 <alt_release_fd>
  }
} 
    f9cc:	0001883a 	nop
    f9d0:	e6ffff04 	addi	sp,fp,-4
    f9d4:	dfc00217 	ldw	ra,8(sp)
    f9d8:	df000117 	ldw	fp,4(sp)
    f9dc:	dc000017 	ldw	r16,0(sp)
    f9e0:	dec00304 	addi	sp,sp,12
    f9e4:	f800283a 	ret

0000f9e8 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
    f9e8:	defffb04 	addi	sp,sp,-20
    f9ec:	dfc00415 	stw	ra,16(sp)
    f9f0:	df000315 	stw	fp,12(sp)
    f9f4:	df000304 	addi	fp,sp,12
    f9f8:	e13ffd15 	stw	r4,-12(fp)
    f9fc:	e17ffe15 	stw	r5,-8(fp)
    fa00:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
    fa04:	01c07fc4 	movi	r7,511
    fa08:	01800044 	movi	r6,1
    fa0c:	e17ffd17 	ldw	r5,-12(fp)
    fa10:	01000074 	movhi	r4,1
    fa14:	2103c704 	addi	r4,r4,3868
    fa18:	000f9040 	call	f904 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
    fa1c:	01c07fc4 	movi	r7,511
    fa20:	000d883a 	mov	r6,zero
    fa24:	e17ffe17 	ldw	r5,-8(fp)
    fa28:	01000074 	movhi	r4,1
    fa2c:	2103c404 	addi	r4,r4,3856
    fa30:	000f9040 	call	f904 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
    fa34:	01c07fc4 	movi	r7,511
    fa38:	01800044 	movi	r6,1
    fa3c:	e17fff17 	ldw	r5,-4(fp)
    fa40:	01000074 	movhi	r4,1
    fa44:	2103ca04 	addi	r4,r4,3880
    fa48:	000f9040 	call	f904 <alt_open_fd>
}  
    fa4c:	0001883a 	nop
    fa50:	e037883a 	mov	sp,fp
    fa54:	dfc00117 	ldw	ra,4(sp)
    fa58:	df000017 	ldw	fp,0(sp)
    fa5c:	dec00204 	addi	sp,sp,8
    fa60:	f800283a 	ret

0000fa64 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    fa64:	defffe04 	addi	sp,sp,-8
    fa68:	dfc00115 	stw	ra,4(sp)
    fa6c:	df000015 	stw	fp,0(sp)
    fa70:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    fa74:	d0a01317 	ldw	r2,-32692(gp)
    fa78:	10000326 	beq	r2,zero,fa88 <alt_get_errno+0x24>
    fa7c:	d0a01317 	ldw	r2,-32692(gp)
    fa80:	103ee83a 	callr	r2
    fa84:	00000106 	br	fa8c <alt_get_errno+0x28>
    fa88:	d0a6ee04 	addi	r2,gp,-25672
}
    fa8c:	e037883a 	mov	sp,fp
    fa90:	dfc00117 	ldw	ra,4(sp)
    fa94:	df000017 	ldw	fp,0(sp)
    fa98:	dec00204 	addi	sp,sp,8
    fa9c:	f800283a 	ret

0000faa0 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
    faa0:	defffb04 	addi	sp,sp,-20
    faa4:	dfc00415 	stw	ra,16(sp)
    faa8:	df000315 	stw	fp,12(sp)
    faac:	dc000215 	stw	r16,8(sp)
    fab0:	df000304 	addi	fp,sp,12
    fab4:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
    fab8:	e0bffe17 	ldw	r2,-8(fp)
    fabc:	10800217 	ldw	r2,8(r2)
    fac0:	10d00034 	orhi	r3,r2,16384
    fac4:	e0bffe17 	ldw	r2,-8(fp)
    fac8:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
    facc:	e03ffd15 	stw	zero,-12(fp)
    fad0:	00002306 	br	fb60 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
    fad4:	04000074 	movhi	r16,1
    fad8:	8403c404 	addi	r16,r16,3856
    fadc:	e0bffd17 	ldw	r2,-12(fp)
    fae0:	01400304 	movi	r5,12
    fae4:	1009883a 	mov	r4,r2
    fae8:	0000a0c0 	call	a0c <__mulsi3>
    faec:	8085883a 	add	r2,r16,r2
    faf0:	10c00017 	ldw	r3,0(r2)
    faf4:	e0bffe17 	ldw	r2,-8(fp)
    faf8:	10800017 	ldw	r2,0(r2)
    fafc:	1880151e 	bne	r3,r2,fb54 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
    fb00:	04000074 	movhi	r16,1
    fb04:	8403c404 	addi	r16,r16,3856
    fb08:	e0bffd17 	ldw	r2,-12(fp)
    fb0c:	01400304 	movi	r5,12
    fb10:	1009883a 	mov	r4,r2
    fb14:	0000a0c0 	call	a0c <__mulsi3>
    fb18:	8085883a 	add	r2,r16,r2
    fb1c:	10800204 	addi	r2,r2,8
    fb20:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
    fb24:	10000b0e 	bge	r2,zero,fb54 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
    fb28:	01400304 	movi	r5,12
    fb2c:	e13ffd17 	ldw	r4,-12(fp)
    fb30:	0000a0c0 	call	a0c <__mulsi3>
    fb34:	1007883a 	mov	r3,r2
    fb38:	00800074 	movhi	r2,1
    fb3c:	1083c404 	addi	r2,r2,3856
    fb40:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
    fb44:	e0bffe17 	ldw	r2,-8(fp)
    fb48:	18800226 	beq	r3,r2,fb54 <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
    fb4c:	00bffcc4 	movi	r2,-13
    fb50:	00000806 	br	fb74 <alt_file_locked+0xd4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
    fb54:	e0bffd17 	ldw	r2,-12(fp)
    fb58:	10800044 	addi	r2,r2,1
    fb5c:	e0bffd15 	stw	r2,-12(fp)
    fb60:	d0a01217 	ldw	r2,-32696(gp)
    fb64:	1007883a 	mov	r3,r2
    fb68:	e0bffd17 	ldw	r2,-12(fp)
    fb6c:	18bfd92e 	bgeu	r3,r2,fad4 <__alt_mem_Onchip_SRAM+0xf800fad4>
    }
  }
  
  /* The device is not locked */
 
  return 0;
    fb70:	0005883a 	mov	r2,zero
}
    fb74:	e6ffff04 	addi	sp,fp,-4
    fb78:	dfc00217 	ldw	ra,8(sp)
    fb7c:	df000117 	ldw	fp,4(sp)
    fb80:	dc000017 	ldw	r16,0(sp)
    fb84:	dec00304 	addi	sp,sp,12
    fb88:	f800283a 	ret

0000fb8c <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
    fb8c:	defff604 	addi	sp,sp,-40
    fb90:	dfc00915 	stw	ra,36(sp)
    fb94:	df000815 	stw	fp,32(sp)
    fb98:	df000804 	addi	fp,sp,32
    fb9c:	e13ffd15 	stw	r4,-12(fp)
    fba0:	e17ffe15 	stw	r5,-8(fp)
    fba4:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
    fba8:	00bfffc4 	movi	r2,-1
    fbac:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
    fbb0:	00bffb44 	movi	r2,-19
    fbb4:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
    fbb8:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
    fbbc:	d1601004 	addi	r5,gp,-32704
    fbc0:	e13ffd17 	ldw	r4,-12(fp)
    fbc4:	000f5b40 	call	f5b4 <alt_find_dev>
    fbc8:	e0bff815 	stw	r2,-32(fp)
    fbcc:	e0bff817 	ldw	r2,-32(fp)
    fbd0:	1000051e 	bne	r2,zero,fbe8 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
    fbd4:	e13ffd17 	ldw	r4,-12(fp)
    fbd8:	000fd0c0 	call	fd0c <alt_find_file>
    fbdc:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
    fbe0:	00800044 	movi	r2,1
    fbe4:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
    fbe8:	e0bff817 	ldw	r2,-32(fp)
    fbec:	10002b26 	beq	r2,zero,fc9c <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
    fbf0:	e13ff817 	ldw	r4,-32(fp)
    fbf4:	000fe140 	call	fe14 <alt_get_fd>
    fbf8:	e0bff915 	stw	r2,-28(fp)
    fbfc:	e0bff917 	ldw	r2,-28(fp)
    fc00:	1000030e 	bge	r2,zero,fc10 <open+0x84>
    {
      status = index;
    fc04:	e0bff917 	ldw	r2,-28(fp)
    fc08:	e0bffa15 	stw	r2,-24(fp)
    fc0c:	00002506 	br	fca4 <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
    fc10:	01400304 	movi	r5,12
    fc14:	e13ff917 	ldw	r4,-28(fp)
    fc18:	0000a0c0 	call	a0c <__mulsi3>
    fc1c:	1007883a 	mov	r3,r2
    fc20:	00800074 	movhi	r2,1
    fc24:	1083c404 	addi	r2,r2,3856
    fc28:	1885883a 	add	r2,r3,r2
    fc2c:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
    fc30:	e0fffe17 	ldw	r3,-8(fp)
    fc34:	00900034 	movhi	r2,16384
    fc38:	10bfffc4 	addi	r2,r2,-1
    fc3c:	1886703a 	and	r3,r3,r2
    fc40:	e0bffc17 	ldw	r2,-16(fp)
    fc44:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
    fc48:	e0bffb17 	ldw	r2,-20(fp)
    fc4c:	1000051e 	bne	r2,zero,fc64 <open+0xd8>
    fc50:	e13ffc17 	ldw	r4,-16(fp)
    fc54:	000faa00 	call	faa0 <alt_file_locked>
    fc58:	e0bffa15 	stw	r2,-24(fp)
    fc5c:	e0bffa17 	ldw	r2,-24(fp)
    fc60:	10001016 	blt	r2,zero,fca4 <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
    fc64:	e0bff817 	ldw	r2,-32(fp)
    fc68:	10800317 	ldw	r2,12(r2)
    fc6c:	10000826 	beq	r2,zero,fc90 <open+0x104>
    fc70:	e0bff817 	ldw	r2,-32(fp)
    fc74:	10800317 	ldw	r2,12(r2)
    fc78:	e1ffff17 	ldw	r7,-4(fp)
    fc7c:	e1bffe17 	ldw	r6,-8(fp)
    fc80:	e17ffd17 	ldw	r5,-12(fp)
    fc84:	e13ffc17 	ldw	r4,-16(fp)
    fc88:	103ee83a 	callr	r2
    fc8c:	00000106 	br	fc94 <open+0x108>
    fc90:	0005883a 	mov	r2,zero
    fc94:	e0bffa15 	stw	r2,-24(fp)
    fc98:	00000206 	br	fca4 <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
    fc9c:	00bffb44 	movi	r2,-19
    fca0:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
    fca4:	e0bffa17 	ldw	r2,-24(fp)
    fca8:	1000090e 	bge	r2,zero,fcd0 <open+0x144>
  {
    alt_release_fd (index);  
    fcac:	e13ff917 	ldw	r4,-28(fp)
    fcb0:	000dd080 	call	dd08 <alt_release_fd>
    ALT_ERRNO = -status;
    fcb4:	000fa640 	call	fa64 <alt_get_errno>
    fcb8:	1007883a 	mov	r3,r2
    fcbc:	e0bffa17 	ldw	r2,-24(fp)
    fcc0:	0085c83a 	sub	r2,zero,r2
    fcc4:	18800015 	stw	r2,0(r3)
    return -1;
    fcc8:	00bfffc4 	movi	r2,-1
    fccc:	00000106 	br	fcd4 <open+0x148>
  }
  
  /* return the reference upon success */

  return index;
    fcd0:	e0bff917 	ldw	r2,-28(fp)
}
    fcd4:	e037883a 	mov	sp,fp
    fcd8:	dfc00117 	ldw	ra,4(sp)
    fcdc:	df000017 	ldw	fp,0(sp)
    fce0:	dec00204 	addi	sp,sp,8
    fce4:	f800283a 	ret

0000fce8 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
    fce8:	deffff04 	addi	sp,sp,-4
    fcec:	df000015 	stw	fp,0(sp)
    fcf0:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
    fcf4:	000170fa 	wrctl	ienable,zero
}
    fcf8:	0001883a 	nop
    fcfc:	e037883a 	mov	sp,fp
    fd00:	df000017 	ldw	fp,0(sp)
    fd04:	dec00104 	addi	sp,sp,4
    fd08:	f800283a 	ret

0000fd0c <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
    fd0c:	defffb04 	addi	sp,sp,-20
    fd10:	dfc00415 	stw	ra,16(sp)
    fd14:	df000315 	stw	fp,12(sp)
    fd18:	df000304 	addi	fp,sp,12
    fd1c:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
    fd20:	d0a00e17 	ldw	r2,-32712(gp)
    fd24:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
    fd28:	00003106 	br	fdf0 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
    fd2c:	e0bffd17 	ldw	r2,-12(fp)
    fd30:	10800217 	ldw	r2,8(r2)
    fd34:	1009883a 	mov	r4,r2
    fd38:	0000e400 	call	e40 <strlen>
    fd3c:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
    fd40:	e0bffd17 	ldw	r2,-12(fp)
    fd44:	10c00217 	ldw	r3,8(r2)
    fd48:	e0bffe17 	ldw	r2,-8(fp)
    fd4c:	10bfffc4 	addi	r2,r2,-1
    fd50:	1885883a 	add	r2,r3,r2
    fd54:	10800003 	ldbu	r2,0(r2)
    fd58:	10803fcc 	andi	r2,r2,255
    fd5c:	1080201c 	xori	r2,r2,128
    fd60:	10bfe004 	addi	r2,r2,-128
    fd64:	10800bd8 	cmpnei	r2,r2,47
    fd68:	1000031e 	bne	r2,zero,fd78 <alt_find_file+0x6c>
    {
      len -= 1;
    fd6c:	e0bffe17 	ldw	r2,-8(fp)
    fd70:	10bfffc4 	addi	r2,r2,-1
    fd74:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
    fd78:	e0bffe17 	ldw	r2,-8(fp)
    fd7c:	e0ffff17 	ldw	r3,-4(fp)
    fd80:	1885883a 	add	r2,r3,r2
    fd84:	10800003 	ldbu	r2,0(r2)
    fd88:	10803fcc 	andi	r2,r2,255
    fd8c:	1080201c 	xori	r2,r2,128
    fd90:	10bfe004 	addi	r2,r2,-128
    fd94:	10800be0 	cmpeqi	r2,r2,47
    fd98:	1000081e 	bne	r2,zero,fdbc <alt_find_file+0xb0>
    fd9c:	e0bffe17 	ldw	r2,-8(fp)
    fda0:	e0ffff17 	ldw	r3,-4(fp)
    fda4:	1885883a 	add	r2,r3,r2
    fda8:	10800003 	ldbu	r2,0(r2)
    fdac:	10803fcc 	andi	r2,r2,255
    fdb0:	1080201c 	xori	r2,r2,128
    fdb4:	10bfe004 	addi	r2,r2,-128
    fdb8:	10000a1e 	bne	r2,zero,fde4 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    fdbc:	e0bffd17 	ldw	r2,-12(fp)
    fdc0:	10800217 	ldw	r2,8(r2)
    fdc4:	e0fffe17 	ldw	r3,-8(fp)
    fdc8:	180d883a 	mov	r6,r3
    fdcc:	e17fff17 	ldw	r5,-4(fp)
    fdd0:	1009883a 	mov	r4,r2
    fdd4:	000ffc00 	call	ffc0 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
    fdd8:	1000021e 	bne	r2,zero,fde4 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
    fddc:	e0bffd17 	ldw	r2,-12(fp)
    fde0:	00000706 	br	fe00 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
    fde4:	e0bffd17 	ldw	r2,-12(fp)
    fde8:	10800017 	ldw	r2,0(r2)
    fdec:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
    fdf0:	e0fffd17 	ldw	r3,-12(fp)
    fdf4:	d0a00e04 	addi	r2,gp,-32712
    fdf8:	18bfcc1e 	bne	r3,r2,fd2c <__alt_mem_Onchip_SRAM+0xf800fd2c>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
    fdfc:	0005883a 	mov	r2,zero
}
    fe00:	e037883a 	mov	sp,fp
    fe04:	dfc00117 	ldw	ra,4(sp)
    fe08:	df000017 	ldw	fp,0(sp)
    fe0c:	dec00204 	addi	sp,sp,8
    fe10:	f800283a 	ret

0000fe14 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
    fe14:	defffa04 	addi	sp,sp,-24
    fe18:	dfc00515 	stw	ra,20(sp)
    fe1c:	df000415 	stw	fp,16(sp)
    fe20:	dc000315 	stw	r16,12(sp)
    fe24:	df000404 	addi	fp,sp,16
    fe28:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
    fe2c:	00bffa04 	movi	r2,-24
    fe30:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
    fe34:	e03ffc15 	stw	zero,-16(fp)
    fe38:	00001d06 	br	feb0 <alt_get_fd+0x9c>
  {
    if (!alt_fd_list[i].dev)
    fe3c:	04000074 	movhi	r16,1
    fe40:	8403c404 	addi	r16,r16,3856
    fe44:	e0bffc17 	ldw	r2,-16(fp)
    fe48:	01400304 	movi	r5,12
    fe4c:	1009883a 	mov	r4,r2
    fe50:	0000a0c0 	call	a0c <__mulsi3>
    fe54:	8085883a 	add	r2,r16,r2
    fe58:	10800017 	ldw	r2,0(r2)
    fe5c:	1000111e 	bne	r2,zero,fea4 <alt_get_fd+0x90>
    {
      alt_fd_list[i].dev = dev;
    fe60:	04000074 	movhi	r16,1
    fe64:	8403c404 	addi	r16,r16,3856
    fe68:	e0bffc17 	ldw	r2,-16(fp)
    fe6c:	01400304 	movi	r5,12
    fe70:	1009883a 	mov	r4,r2
    fe74:	0000a0c0 	call	a0c <__mulsi3>
    fe78:	8085883a 	add	r2,r16,r2
    fe7c:	e0fffe17 	ldw	r3,-8(fp)
    fe80:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
    fe84:	d0e01217 	ldw	r3,-32696(gp)
    fe88:	e0bffc17 	ldw	r2,-16(fp)
    fe8c:	1880020e 	bge	r3,r2,fe98 <alt_get_fd+0x84>
      {
        alt_max_fd = i;
    fe90:	e0bffc17 	ldw	r2,-16(fp)
    fe94:	d0a01215 	stw	r2,-32696(gp)
      }
      rc = i;
    fe98:	e0bffc17 	ldw	r2,-16(fp)
    fe9c:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
    fea0:	00000606 	br	febc <alt_get_fd+0xa8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
    fea4:	e0bffc17 	ldw	r2,-16(fp)
    fea8:	10800044 	addi	r2,r2,1
    feac:	e0bffc15 	stw	r2,-16(fp)
    feb0:	e0bffc17 	ldw	r2,-16(fp)
    feb4:	10800810 	cmplti	r2,r2,32
    feb8:	103fe01e 	bne	r2,zero,fe3c <__alt_mem_Onchip_SRAM+0xf800fe3c>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
    febc:	e0bffd17 	ldw	r2,-12(fp)
}
    fec0:	e6ffff04 	addi	sp,fp,-4
    fec4:	dfc00217 	ldw	ra,8(sp)
    fec8:	df000117 	ldw	fp,4(sp)
    fecc:	dc000017 	ldw	r16,0(sp)
    fed0:	dec00304 	addi	sp,sp,12
    fed4:	f800283a 	ret

0000fed8 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
    fed8:	defffe04 	addi	sp,sp,-8
    fedc:	df000115 	stw	fp,4(sp)
    fee0:	df000104 	addi	fp,sp,4
    fee4:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
    fee8:	e0bfff17 	ldw	r2,-4(fp)
    feec:	10bffe84 	addi	r2,r2,-6
    fef0:	10c00428 	cmpgeui	r3,r2,16
    fef4:	18001a1e 	bne	r3,zero,ff60 <alt_exception_cause_generated_bad_addr+0x88>
    fef8:	100690ba 	slli	r3,r2,2
    fefc:	00800074 	movhi	r2,1
    ff00:	10bfc404 	addi	r2,r2,-240
    ff04:	1885883a 	add	r2,r3,r2
    ff08:	10800017 	ldw	r2,0(r2)
    ff0c:	1000683a 	jmp	r2
    ff10:	0000ff50 	cmplti	zero,zero,1021
    ff14:	0000ff50 	cmplti	zero,zero,1021
    ff18:	0000ff60 	cmpeqi	zero,zero,1021
    ff1c:	0000ff60 	cmpeqi	zero,zero,1021
    ff20:	0000ff60 	cmpeqi	zero,zero,1021
    ff24:	0000ff50 	cmplti	zero,zero,1021
    ff28:	0000ff58 	cmpnei	zero,zero,1021
    ff2c:	0000ff60 	cmpeqi	zero,zero,1021
    ff30:	0000ff50 	cmplti	zero,zero,1021
    ff34:	0000ff50 	cmplti	zero,zero,1021
    ff38:	0000ff60 	cmpeqi	zero,zero,1021
    ff3c:	0000ff50 	cmplti	zero,zero,1021
    ff40:	0000ff58 	cmpnei	zero,zero,1021
    ff44:	0000ff60 	cmpeqi	zero,zero,1021
    ff48:	0000ff60 	cmpeqi	zero,zero,1021
    ff4c:	0000ff50 	cmplti	zero,zero,1021
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
    ff50:	00800044 	movi	r2,1
    ff54:	00000306 	br	ff64 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
    ff58:	0005883a 	mov	r2,zero
    ff5c:	00000106 	br	ff64 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
    ff60:	0005883a 	mov	r2,zero
  }
}
    ff64:	e037883a 	mov	sp,fp
    ff68:	df000017 	ldw	fp,0(sp)
    ff6c:	dec00104 	addi	sp,sp,4
    ff70:	f800283a 	ret

0000ff74 <atexit>:
    ff74:	200b883a 	mov	r5,r4
    ff78:	000f883a 	mov	r7,zero
    ff7c:	000d883a 	mov	r6,zero
    ff80:	0009883a 	mov	r4,zero
    ff84:	001003c1 	jmpi	1003c <__register_exitproc>

0000ff88 <exit>:
    ff88:	defffe04 	addi	sp,sp,-8
    ff8c:	000b883a 	mov	r5,zero
    ff90:	dc000015 	stw	r16,0(sp)
    ff94:	dfc00115 	stw	ra,4(sp)
    ff98:	2021883a 	mov	r16,r4
    ff9c:	00101540 	call	10154 <__call_exitprocs>
    ffa0:	00800074 	movhi	r2,1
    ffa4:	10885404 	addi	r2,r2,8528
    ffa8:	11000017 	ldw	r4,0(r2)
    ffac:	20800f17 	ldw	r2,60(r4)
    ffb0:	10000126 	beq	r2,zero,ffb8 <exit+0x30>
    ffb4:	103ee83a 	callr	r2
    ffb8:	8009883a 	mov	r4,r16
    ffbc:	00102d40 	call	102d4 <_exit>

0000ffc0 <memcmp>:
    ffc0:	01c000c4 	movi	r7,3
    ffc4:	3980192e 	bgeu	r7,r6,1002c <memcmp+0x6c>
    ffc8:	2144b03a 	or	r2,r4,r5
    ffcc:	11c4703a 	and	r2,r2,r7
    ffd0:	10000f26 	beq	r2,zero,10010 <memcmp+0x50>
    ffd4:	20800003 	ldbu	r2,0(r4)
    ffd8:	28c00003 	ldbu	r3,0(r5)
    ffdc:	10c0151e 	bne	r2,r3,10034 <memcmp+0x74>
    ffe0:	31bfff84 	addi	r6,r6,-2
    ffe4:	01ffffc4 	movi	r7,-1
    ffe8:	00000406 	br	fffc <memcmp+0x3c>
    ffec:	20800003 	ldbu	r2,0(r4)
    fff0:	28c00003 	ldbu	r3,0(r5)
    fff4:	31bfffc4 	addi	r6,r6,-1
    fff8:	10c00e1e 	bne	r2,r3,10034 <memcmp+0x74>
    fffc:	21000044 	addi	r4,r4,1
   10000:	29400044 	addi	r5,r5,1
   10004:	31fff91e 	bne	r6,r7,ffec <__alt_mem_Onchip_SRAM+0xf800ffec>
   10008:	0005883a 	mov	r2,zero
   1000c:	f800283a 	ret
   10010:	20c00017 	ldw	r3,0(r4)
   10014:	28800017 	ldw	r2,0(r5)
   10018:	18bfee1e 	bne	r3,r2,ffd4 <__alt_mem_Onchip_SRAM+0xf800ffd4>
   1001c:	31bfff04 	addi	r6,r6,-4
   10020:	21000104 	addi	r4,r4,4
   10024:	29400104 	addi	r5,r5,4
   10028:	39bff936 	bltu	r7,r6,10010 <__alt_mem_Onchip_SRAM+0xf8010010>
   1002c:	303fe91e 	bne	r6,zero,ffd4 <__alt_mem_Onchip_SRAM+0xf800ffd4>
   10030:	003ff506 	br	10008 <__alt_mem_Onchip_SRAM+0xf8010008>
   10034:	10c5c83a 	sub	r2,r2,r3
   10038:	f800283a 	ret

0001003c <__register_exitproc>:
   1003c:	defffa04 	addi	sp,sp,-24
   10040:	dc000315 	stw	r16,12(sp)
   10044:	04000074 	movhi	r16,1
   10048:	84085404 	addi	r16,r16,8528
   1004c:	80c00017 	ldw	r3,0(r16)
   10050:	dc400415 	stw	r17,16(sp)
   10054:	dfc00515 	stw	ra,20(sp)
   10058:	18805217 	ldw	r2,328(r3)
   1005c:	2023883a 	mov	r17,r4
   10060:	10003726 	beq	r2,zero,10140 <__register_exitproc+0x104>
   10064:	10c00117 	ldw	r3,4(r2)
   10068:	010007c4 	movi	r4,31
   1006c:	20c00e16 	blt	r4,r3,100a8 <__register_exitproc+0x6c>
   10070:	1a000044 	addi	r8,r3,1
   10074:	8800221e 	bne	r17,zero,10100 <__register_exitproc+0xc4>
   10078:	18c00084 	addi	r3,r3,2
   1007c:	18c7883a 	add	r3,r3,r3
   10080:	18c7883a 	add	r3,r3,r3
   10084:	12000115 	stw	r8,4(r2)
   10088:	10c7883a 	add	r3,r2,r3
   1008c:	19400015 	stw	r5,0(r3)
   10090:	0005883a 	mov	r2,zero
   10094:	dfc00517 	ldw	ra,20(sp)
   10098:	dc400417 	ldw	r17,16(sp)
   1009c:	dc000317 	ldw	r16,12(sp)
   100a0:	dec00604 	addi	sp,sp,24
   100a4:	f800283a 	ret
   100a8:	00800034 	movhi	r2,0
   100ac:	10800004 	addi	r2,r2,0
   100b0:	10002626 	beq	r2,zero,1014c <__register_exitproc+0x110>
   100b4:	01006404 	movi	r4,400
   100b8:	d9400015 	stw	r5,0(sp)
   100bc:	d9800115 	stw	r6,4(sp)
   100c0:	d9c00215 	stw	r7,8(sp)
   100c4:	00000000 	call	0 <__reset>
   100c8:	d9400017 	ldw	r5,0(sp)
   100cc:	d9800117 	ldw	r6,4(sp)
   100d0:	d9c00217 	ldw	r7,8(sp)
   100d4:	10001d26 	beq	r2,zero,1014c <__register_exitproc+0x110>
   100d8:	81000017 	ldw	r4,0(r16)
   100dc:	10000115 	stw	zero,4(r2)
   100e0:	02000044 	movi	r8,1
   100e4:	22405217 	ldw	r9,328(r4)
   100e8:	0007883a 	mov	r3,zero
   100ec:	12400015 	stw	r9,0(r2)
   100f0:	20805215 	stw	r2,328(r4)
   100f4:	10006215 	stw	zero,392(r2)
   100f8:	10006315 	stw	zero,396(r2)
   100fc:	883fde26 	beq	r17,zero,10078 <__alt_mem_Onchip_SRAM+0xf8010078>
   10100:	18c9883a 	add	r4,r3,r3
   10104:	2109883a 	add	r4,r4,r4
   10108:	1109883a 	add	r4,r2,r4
   1010c:	21802215 	stw	r6,136(r4)
   10110:	01800044 	movi	r6,1
   10114:	12406217 	ldw	r9,392(r2)
   10118:	30cc983a 	sll	r6,r6,r3
   1011c:	4992b03a 	or	r9,r9,r6
   10120:	12406215 	stw	r9,392(r2)
   10124:	21c04215 	stw	r7,264(r4)
   10128:	01000084 	movi	r4,2
   1012c:	893fd21e 	bne	r17,r4,10078 <__alt_mem_Onchip_SRAM+0xf8010078>
   10130:	11006317 	ldw	r4,396(r2)
   10134:	218cb03a 	or	r6,r4,r6
   10138:	11806315 	stw	r6,396(r2)
   1013c:	003fce06 	br	10078 <__alt_mem_Onchip_SRAM+0xf8010078>
   10140:	18805304 	addi	r2,r3,332
   10144:	18805215 	stw	r2,328(r3)
   10148:	003fc606 	br	10064 <__alt_mem_Onchip_SRAM+0xf8010064>
   1014c:	00bfffc4 	movi	r2,-1
   10150:	003fd006 	br	10094 <__alt_mem_Onchip_SRAM+0xf8010094>

00010154 <__call_exitprocs>:
   10154:	defff504 	addi	sp,sp,-44
   10158:	df000915 	stw	fp,36(sp)
   1015c:	dd400615 	stw	r21,24(sp)
   10160:	dc800315 	stw	r18,12(sp)
   10164:	dfc00a15 	stw	ra,40(sp)
   10168:	ddc00815 	stw	r23,32(sp)
   1016c:	dd800715 	stw	r22,28(sp)
   10170:	dd000515 	stw	r20,20(sp)
   10174:	dcc00415 	stw	r19,16(sp)
   10178:	dc400215 	stw	r17,8(sp)
   1017c:	dc000115 	stw	r16,4(sp)
   10180:	d9000015 	stw	r4,0(sp)
   10184:	2839883a 	mov	fp,r5
   10188:	04800044 	movi	r18,1
   1018c:	057fffc4 	movi	r21,-1
   10190:	00800074 	movhi	r2,1
   10194:	10885404 	addi	r2,r2,8528
   10198:	12000017 	ldw	r8,0(r2)
   1019c:	45005217 	ldw	r20,328(r8)
   101a0:	44c05204 	addi	r19,r8,328
   101a4:	a0001c26 	beq	r20,zero,10218 <__call_exitprocs+0xc4>
   101a8:	a0800117 	ldw	r2,4(r20)
   101ac:	15ffffc4 	addi	r23,r2,-1
   101b0:	b8000d16 	blt	r23,zero,101e8 <__call_exitprocs+0x94>
   101b4:	14000044 	addi	r16,r2,1
   101b8:	8421883a 	add	r16,r16,r16
   101bc:	8421883a 	add	r16,r16,r16
   101c0:	84402004 	addi	r17,r16,128
   101c4:	a463883a 	add	r17,r20,r17
   101c8:	a421883a 	add	r16,r20,r16
   101cc:	e0001e26 	beq	fp,zero,10248 <__call_exitprocs+0xf4>
   101d0:	80804017 	ldw	r2,256(r16)
   101d4:	e0801c26 	beq	fp,r2,10248 <__call_exitprocs+0xf4>
   101d8:	bdffffc4 	addi	r23,r23,-1
   101dc:	843fff04 	addi	r16,r16,-4
   101e0:	8c7fff04 	addi	r17,r17,-4
   101e4:	bd7ff91e 	bne	r23,r21,101cc <__alt_mem_Onchip_SRAM+0xf80101cc>
   101e8:	00800034 	movhi	r2,0
   101ec:	10800004 	addi	r2,r2,0
   101f0:	10000926 	beq	r2,zero,10218 <__call_exitprocs+0xc4>
   101f4:	a0800117 	ldw	r2,4(r20)
   101f8:	1000301e 	bne	r2,zero,102bc <__call_exitprocs+0x168>
   101fc:	a0800017 	ldw	r2,0(r20)
   10200:	10003226 	beq	r2,zero,102cc <__call_exitprocs+0x178>
   10204:	a009883a 	mov	r4,r20
   10208:	98800015 	stw	r2,0(r19)
   1020c:	00000000 	call	0 <__reset>
   10210:	9d000017 	ldw	r20,0(r19)
   10214:	a03fe41e 	bne	r20,zero,101a8 <__alt_mem_Onchip_SRAM+0xf80101a8>
   10218:	dfc00a17 	ldw	ra,40(sp)
   1021c:	df000917 	ldw	fp,36(sp)
   10220:	ddc00817 	ldw	r23,32(sp)
   10224:	dd800717 	ldw	r22,28(sp)
   10228:	dd400617 	ldw	r21,24(sp)
   1022c:	dd000517 	ldw	r20,20(sp)
   10230:	dcc00417 	ldw	r19,16(sp)
   10234:	dc800317 	ldw	r18,12(sp)
   10238:	dc400217 	ldw	r17,8(sp)
   1023c:	dc000117 	ldw	r16,4(sp)
   10240:	dec00b04 	addi	sp,sp,44
   10244:	f800283a 	ret
   10248:	a0800117 	ldw	r2,4(r20)
   1024c:	80c00017 	ldw	r3,0(r16)
   10250:	10bfffc4 	addi	r2,r2,-1
   10254:	15c01426 	beq	r2,r23,102a8 <__call_exitprocs+0x154>
   10258:	80000015 	stw	zero,0(r16)
   1025c:	183fde26 	beq	r3,zero,101d8 <__alt_mem_Onchip_SRAM+0xf80101d8>
   10260:	95c8983a 	sll	r4,r18,r23
   10264:	a0806217 	ldw	r2,392(r20)
   10268:	a5800117 	ldw	r22,4(r20)
   1026c:	2084703a 	and	r2,r4,r2
   10270:	10000b26 	beq	r2,zero,102a0 <__call_exitprocs+0x14c>
   10274:	a0806317 	ldw	r2,396(r20)
   10278:	2088703a 	and	r4,r4,r2
   1027c:	20000c1e 	bne	r4,zero,102b0 <__call_exitprocs+0x15c>
   10280:	89400017 	ldw	r5,0(r17)
   10284:	d9000017 	ldw	r4,0(sp)
   10288:	183ee83a 	callr	r3
   1028c:	a0800117 	ldw	r2,4(r20)
   10290:	15bfbf1e 	bne	r2,r22,10190 <__alt_mem_Onchip_SRAM+0xf8010190>
   10294:	98800017 	ldw	r2,0(r19)
   10298:	153fcf26 	beq	r2,r20,101d8 <__alt_mem_Onchip_SRAM+0xf80101d8>
   1029c:	003fbc06 	br	10190 <__alt_mem_Onchip_SRAM+0xf8010190>
   102a0:	183ee83a 	callr	r3
   102a4:	003ff906 	br	1028c <__alt_mem_Onchip_SRAM+0xf801028c>
   102a8:	a5c00115 	stw	r23,4(r20)
   102ac:	003feb06 	br	1025c <__alt_mem_Onchip_SRAM+0xf801025c>
   102b0:	89000017 	ldw	r4,0(r17)
   102b4:	183ee83a 	callr	r3
   102b8:	003ff406 	br	1028c <__alt_mem_Onchip_SRAM+0xf801028c>
   102bc:	a0800017 	ldw	r2,0(r20)
   102c0:	a027883a 	mov	r19,r20
   102c4:	1029883a 	mov	r20,r2
   102c8:	003fb606 	br	101a4 <__alt_mem_Onchip_SRAM+0xf80101a4>
   102cc:	0005883a 	mov	r2,zero
   102d0:	003ffb06 	br	102c0 <__alt_mem_Onchip_SRAM+0xf80102c0>

000102d4 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   102d4:	defffd04 	addi	sp,sp,-12
   102d8:	df000215 	stw	fp,8(sp)
   102dc:	df000204 	addi	fp,sp,8
   102e0:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   102e4:	0001883a 	nop
   102e8:	e0bfff17 	ldw	r2,-4(fp)
   102ec:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   102f0:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   102f4:	10000226 	beq	r2,zero,10300 <_exit+0x2c>
    ALT_SIM_FAIL();
   102f8:	002af070 	cmpltui	zero,zero,43969
   102fc:	00000106 	br	10304 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   10300:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   10304:	003fff06 	br	10304 <__alt_mem_Onchip_SRAM+0xf8010304>
