
CE2830Lab.elf:     file format elf32-littlenios2
CE2830Lab.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000230

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00000020 paddr 0x00000020 align 2**12
         filesz 0x00016d88 memsz 0x00016d88 flags r-x
    LOAD off    0x00017da8 vaddr 0x00016da8 paddr 0x00018970 align 2**12
         filesz 0x00001bc8 memsz 0x00001bc8 flags rw-
    LOAD off    0x0001a538 vaddr 0x0001a538 paddr 0x0001a538 align 2**12
         filesz 0x00000000 memsz 0x00000170 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00000000  00000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000210  00000020  00000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0001679c  00000230  00000230  00001230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000003dc  000169cc  000169cc  000179cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001bc8  00016da8  00018970  00017da8  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000170  0001a538  0001a538  0001a538  2**2
                  ALLOC, SMALL_DATA
  6 .SDRAM        00000000  0001a6a8  0001a6a8  00019970  2**0
                  CONTENTS
  7 .Onchip_SRAM  00000000  08000000  08000000  00019970  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  00019970  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 000011c0  00000000  00000000  00019998  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   0002c780  00000000  00000000  0001ab58  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 0000b337  00000000  00000000  000472d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000e77a  00000000  00000000  0005260f  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00003070  00000000  00000000  00060d8c  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00004cd1  00000000  00000000  00063dfc  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    0001d090  00000000  00000000  00068acd  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000040  00000000  00000000  00085b60  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00001bc8  00000000  00000000  00085ba0  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  0008baf2  2**0
                  CONTENTS, READONLY
 19 .cpu          00000005  00000000  00000000  0008baf5  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  0008bafa  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  0008bafb  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  0008bafc  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  0008bb00  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  0008bb04  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   00000009  00000000  00000000  0008bb08  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    00000009  00000000  00000000  0008bb11  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   00000009  00000000  00000000  0008bb1a  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 0000000f  00000000  00000000  0008bb23  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 0000003d  00000000  00000000  0008bb32  2**0
                  CONTENTS, READONLY
 30 .jdi          00006bd6  00000000  00000000  0008bb6f  2**0
                  CONTENTS, READONLY
 31 .sopcinfo     000c55f0  00000000  00000000  00092745  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .entry	00000000 .entry
00000020 l    d  .exceptions	00000000 .exceptions
00000230 l    d  .text	00000000 .text
000169cc l    d  .rodata	00000000 .rodata
00016da8 l    d  .rwdata	00000000 .rwdata
0001a538 l    d  .bss	00000000 .bss
0001a6a8 l    d  .SDRAM	00000000 .SDRAM
08000000 l    d  .Onchip_SRAM	00000000 .Onchip_SRAM
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../CE2830Lab_bsp//obj/HAL/src/crt0.o
00000268 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 ServoAPI.c
00000000 l    df *ABS*	00000000 SevenSegs.c
000188f4 l     O .rwdata	00000004 HEX0HEX3
000188f8 l     O .rwdata	00000004 HEX4HEX5
00000000 l    df *ABS*	00000000 accelerometer.c
000188fc l     O .rwdata	00000004 acceleromter
00000000 l    df *ABS*	00000000 adc.c
00018900 l     O .rwdata	00000004 samples
00018904 l     O .rwdata	00000004 sequencerCmd
00000000 l    df *ABS*	00000000 camera.c
00018908 l     O .rwdata	00000004 camera
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 main.c
0001890c l     O .rwdata	00000004 HEX0HEX3
00018910 l     O .rwdata	00000004 HEX4HEX5
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 fixsfsi.c
00000000 l    df *ABS*	00000000 floatsisf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00016b4e l     O .rodata	00000010 zeroes.4389
00016b5e l     O .rodata	00000010 blanks.4388
00000000 l    df *ABS*	00000000 time.c
00000000 l    df *ABS*	00000000 vfprintf.c
00016b6e l     O .rodata	00000010 zeroes.4404
00005a54 l     F .text	000000bc __sbprintf
00016b7e l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00005c64 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
000077bc l     F .text	00000008 __fp_unlock
000077d0 l     F .text	0000019c __sinit.part.1
0000796c l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 gettimeofdayr.c
00000000 l    df *ABS*	00000000 impure.c
00016da8 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 locale.c
000171ec l     O .rwdata	00000020 lc_ctype_charset
000171cc l     O .rwdata	00000020 lc_message_charset
0001720c l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
00016bb0 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
00016cd4 l     O .rodata	00000010 zeroes.4333
00016ce4 l     O .rodata	00000010 blanks.4332
00000000 l    df *ABS*	00000000 vfprintf.c
0000c574 l     F .text	000000fc __sprint_r.part.0
00016cf4 l     O .rodata	00000010 zeroes.4349
0000dbb0 l     F .text	000000bc __sbprintf
00016d04 l     O .rodata	00000010 blanks.4348
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
00011ac4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
00011bd8 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
00011c04 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_gettod.c
00000000 l    df *ABS*	00000000 alt_isatty.c
00011eec l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
00011fd4 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
000120c0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0001229c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00018950 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 alt_write.c
000126b4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
000127f0 l     F .text	00000034 alt_dev_reg
000177f4 l     O .rwdata	00000038 camera_i2c
0001782c l     O .rwdata	00001060 JTAG_UART
0001888c l     O .rwdata	0000003c JoyStick_ADC
000188c8 l     O .rwdata	0000002c Accelerometer_SPI
00000000 l    df *ABS*	00000000 altera_avalon_i2c.c
000128ec l     F .text	00000110 optional_irq_callback
00012a4c l     F .text	0000009c alt_avalon_i2c_irq
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
00014728 l     F .text	0000020c altera_avalon_jtag_uart_irq
00014934 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
00014f6c l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_modular_adc.c
00015060 l     F .text	000000a8 alt_adc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00015870 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
00015d60 l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
00015ec0 l     F .text	0000003c alt_get_errno
00015efc l     F .text	000000ec alt_file_locked
00000000 l    df *ABS*	00000000 alt_printf.c
00000000 l    df *ABS*	00000000 alt_putchar.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
0001a57c g     O .bss	00000004 alt_instruction_exception_handler
0000118c g     F .text	00000018 putchar
0000a4e0 g     F .text	00000074 _mprec_log10
00015300 g     F .text	00000050 adc_stop
0000a5cc g     F .text	0000008c __any_on
0000e2bc g     F .text	00000054 _isatty_r
00016bbc g     O .rodata	00000028 __mprec_tinytens
000121d8 g     F .text	0000007c alt_main
000003d4 g     F .text	00000098 ASCII_to_7Seg
00018918 g     O .rwdata	00000004 pushbuttons
000011a4 g     F .text	000000c0 _puts_r
0001a5a8 g     O .bss	00000100 alt_irq
0000e310 g     F .text	00000060 _lseek_r
00018970 g       *ABS*	00000000 __flash_rwdata_start
00010500 g     F .text	00000088 .hidden __eqdf2
000085f0 g     F .text	0000005c _gettimeofday_r
0001a6a8 g       *ABS*	00000000 __alt_heap_start
00001148 g     F .text	0000003c printf
00000a08 g     F .text	000000b8 cam_write_data
0000e3d0 g     F .text	0000009c _wcrtomb_r
0000aec4 g     F .text	0000005c __sseek
00007b1c g     F .text	00000010 __sinit
0000dc6c g     F .text	00000140 __swbuf_r
0000864c g     F .text	0000007c _setlocale_r
00007974 g     F .text	00000078 __sfmoreglue
00013144 g     F .text	000000a8 alt_avalon_i2c_rx_read
00012278 g     F .text	00000024 __malloc_unlock
0000071c g     F .text	000000b0 acc_steady_servo
0001435c g     F .text	00000044 alt_avalon_i2c_enabled_ints_get
00012ec8 g     F .text	00000094 alt_avalon_i2c_master_config_speed_get
0000931c g     F .text	0000015c memmove
00000310 g     F .text	00000034 servo_pan
00007b04 g     F .text	00000018 _cleanup
00013bac g     F .text	0000020c alt_avalon_i2c_master_transmit_using_interrupts
000095a0 g     F .text	000000a8 _Balloc
00000f20 g     F .text	00000070 .hidden __fixsfsi
00010588 g     F .text	000000dc .hidden __gtdf2
000163ac g     F .text	00000024 altera_nios2_gen2_irq_init
00000000 g     F .entry	0000000c __reset
000154c4 g     F .text	00000048 adc_interrupt_disable
00000020 g       *ABS*	00000000 __flash_exceptions_start
0000e260 g     F .text	0000005c _fstat_r
0001a538 g     O .bss	00000004 errno
0000ae40 g     F .text	00000008 __seofread
0000b1d4 g     F .text	000013a0 ___svfiprintf_internal_r
000151b4 g     F .text	00000074 altera_modular_adc_init
0001a568 g     O .bss	00000004 alt_argv
000208f4 g       *ABS*	00000000 _gp
000143a0 g     F .text	0000004c alt_avalon_i2c_rx_fifo_threshold_get
00013058 g     F .text	00000044 alt_avalon_i2c_is_busy
00017674 g     O .rwdata	00000180 alt_fd_list
00001184 g     F .text	00000008 _putchar_r
00012dfc g     F .text	000000cc alt_avalon_i2c_master_config_set
00015a10 g     F .text	00000090 alt_find_dev
000091d4 g     F .text	00000148 memcpy
000077c4 g     F .text	0000000c _cleanup_r
00011940 g     F .text	000000dc .hidden __floatsidf
000153c8 g     F .text	0000003c adc_set_mode_run_continuously
00015e44 g     F .text	0000007c alt_io_redirect
00010664 g     F .text	000000f4 .hidden __ltdf2
000169cc g       *ABS*	00000000 __DTOR_END__
000139ec g     F .text	000001c0 alt_avalon_i2c_master_transmit
00001264 g     F .text	00000014 puts
0001659c g     F .text	0000009c alt_exception_cause_generated_bad_addr
0000ad24 g     F .text	00000074 __fpclassifyd
0000a43c g     F .text	000000a4 __ratio
0000db94 g     F .text	0000001c __vfiprintf_internal
00014b2c g     F .text	0000021c altera_avalon_jtag_uart_read
00001118 g     F .text	00000030 _printf_r
00000e3c g     F .text	00000064 .hidden __udivsi3
00011f28 g     F .text	000000ac isatty
00016c0c g     O .rodata	000000c8 __mprec_tens
000086c8 g     F .text	0000000c __locale_charset
0001a554 g     O .bss	00000008 alt_timezone
00012c68 g     F .text	00000098 alt_avalon_i2c_enable
0001a550 g     O .bss	00000004 __malloc_top_pad
00014290 g     F .text	00000068 alt_avalon_i2c_int_disable
00018928 g     O .rwdata	00000004 __mb_cur_max
000086f8 g     F .text	0000000c _localeconv_r
000099d4 g     F .text	0000003c __i2b
00007fa0 g     F .text	000004c8 __sfvwrite_r
0000046c g     F .text	00000100 num_to_7Seg
0000ad98 g     F .text	00000054 _sbrk_r
0000e370 g     F .text	00000060 _read_r
00018964 g     O .rwdata	00000008 altera_modular_adc_list
00018948 g     O .rwdata	00000004 alt_max_fd
0000df54 g     F .text	000000f0 _fclose_r
0000778c g     F .text	00000030 fflush
0001a54c g     O .bss	00000004 __malloc_max_sbrked_mem
00013db8 g     F .text	00000210 alt_avalon_i2c_master_receive
0000f284 g     F .text	000008ac .hidden __adddf3
0000a1e4 g     F .text	0000010c __b2d
0000ecc0 g     F .text	000005c4 .hidden __umoddi3
000120fc g     F .text	000000dc lseek
000142f8 g     F .text	00000064 alt_avalon_i2c_int_enable
00018920 g     O .rwdata	00000004 _global_impure_ptr
0000a7c0 g     F .text	00000564 _realloc_r
0001a6a8 g       *ABS*	00000000 __bss_end
00015c70 g     F .text	000000f0 alt_iic_isr_register
000125ac g     F .text	00000108 alt_tick
0000e6c4 g     F .text	000005fc .hidden __udivdi3
000141b8 g     F .text	00000058 alt_avalon_i2c_int_status_get
0000e1bc g     F .text	00000024 _fputwc_r
00015590 g     F .text	0000003c adc_wait_for_interrupt
00016be4 g     O .rodata	00000028 __mprec_bigtens
000097b8 g     F .text	00000104 __s2b
00011a1c g     F .text	000000a8 .hidden __floatunsidf
00009f24 g     F .text	00000060 __mcmp
0000056c g     F .text	00000090 acc_read_x
0001891c g     O .rwdata	00000004 slideSwitches
00007b3c g     F .text	00000018 __fp_lock_all
00015c24 g     F .text	0000004c alt_ic_irq_enabled
00012510 g     F .text	0000009c alt_alarm_stop
00012ae8 g     F .text	00000054 alt_avalon_i2c_register_callback
00000884 g     F .text	000000c8 read_joystick
0001a578 g     O .bss	00000004 alt_irq_active
00012b3c g     F .text	000000ec alt_avalon_i2c_init
000000fc g     F .exceptions	000000d4 alt_irq_handler
0001764c g     O .rwdata	00000028 alt_dev_null
00015388 g     F .text	00000040 adc_set_mode_run_once
00015850 g     F .text	00000020 alt_dcache_flush_all
000098bc g     F .text	00000068 __hi0bits
000118c0 g     F .text	00000080 .hidden __fixdfsi
0000084c g     F .text	00000038 read_channel2
00018970 g       *ABS*	00000000 __ram_rwdata_end
00018940 g     O .rwdata	00000008 alt_dev_list
000126f0 g     F .text	00000100 write
0000a658 g     F .text	000000a0 _putc_r
00013478 g     F .text	0000004c alt_avalon_i2c_check_arblost
00014254 g     F .text	0000003c alt_avalon_i2c_int_clear
00016da8 g       *ABS*	00000000 __ram_rodata_end
00011c40 g     F .text	000000b8 fstat
00000000 g       *ABS*	00000000 __alt_mem_SDRAM
00010664 g     F .text	000000f4 .hidden __ledf2
00000bfc g     F .text	00000054 delay_1ms
0001895c g     O .rwdata	00000008 alt_avalon_i2c_list
00015350 g     F .text	00000038 adc_start
00009c9c g     F .text	00000140 __pow5mult
0000c688 g     F .text	0000150c ___vfiprintf_internal_r
0001a544 g     O .bss	00000004 __nlocale_changed
00000ea0 g     F .text	00000058 .hidden __umodsi3
0001a6a8 g       *ABS*	00000000 end
00018914 g     O .rwdata	00000004 leds
00000ba4 g     F .text	00000058 delay_1s
00014668 g     F .text	000000c0 altera_avalon_jtag_uart_init
000001d0 g     F .exceptions	00000060 alt_instruction_exception_entry
00012c28 g     F .text	00000040 alt_avalon_i2c_open
000169cc g       *ABS*	00000000 __CTOR_LIST__
04000000 g       *ABS*	00000000 __alt_stack_pointer
00013600 g     F .text	000000e8 alt_avalon_i2c_master_tx
00014fe4 g     F .text	0000007c alt_avalon_timer_sc_init
000010b4 g     F .text	00000064 .hidden __clzsi2
00014d48 g     F .text	00000224 altera_avalon_jtag_uart_write
00007b2c g     F .text	00000004 __sfp_lock_acquire
000090f0 g     F .text	000000e4 memchr
0000375c g     F .text	000022dc ___vfprintf_internal_r
000012f4 g     F .text	00000058 _sprintf_r
00007c90 g     F .text	00000310 _free_r
00016144 g     F .text	0000022c alt_printf
000086d4 g     F .text	00000010 __locale_mb_cur_max
00016818 g     F .text	00000180 __call_exitprocs
0001a540 g     O .bss	00000004 __mlocale_changed
000129fc g     F .text	00000050 alt_avalon_i2c_register_optional_irq_handler
0001892c g     O .rwdata	00000004 __malloc_sbrk_base
00000230 g     F .text	0000003c _start
0001a570 g     O .bss	00000004 _alt_tick_rate
00013fc8 g     F .text	000001f0 alt_avalon_i2c_master_receive_using_interrupts
00001290 g     F .text	00000064 rand
000143ec g     F .text	00000064 alt_avalon_i2c_rx_fifo_threshold_set
00000344 g     F .text	00000060 servo_randomMovement
00009ddc g     F .text	00000148 __lshift
0001a574 g     O .bss	00000004 _alt_nticks
000122d8 g     F .text	00000104 read
0001285c g     F .text	00000090 alt_sys_init
00000f90 g     F .text	00000124 .hidden __floatsisf
0000b004 g     F .text	000001d0 __ssprint_r
00016700 g     F .text	00000118 __register_exitproc
00013824 g     F .text	000001c8 alt_avalon_i2c_master_tx_rx
00009a10 g     F .text	0000028c __multiply
000149d4 g     F .text	00000068 altera_avalon_jtag_uart_close
00000ef8 g     F .text	00000028 .hidden __mulsi3
00016da8 g       *ABS*	00000000 __ram_rwdata_start
000169cc g       *ABS*	00000000 __ram_rodata_start
0001a580 g     O .bss	00000028 __malloc_current_mallinfo
000009c4 g     F .text	00000024 cam_setReg
0000a2f0 g     F .text	0000014c __d2b
000002d8 g     F .text	00000038 servo_center
00014504 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
000164d8 g     F .text	000000c4 alt_get_fd
000156f8 g     F .text	00000158 alt_busy_sleep
0000de24 g     F .text	00000054 _close_r
00016684 g     F .text	0000007c memcmp
0001309c g     F .text	000000a8 alt_avalon_i2c_rx_read_available
000145c4 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
0001a6a8 g       *ABS*	00000000 __alt_stack_base
00014614 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00005b10 g     F .text	00000154 __swsetup_r
00015480 g     F .text	00000044 adc_interrupt_enable
0000fb30 g     F .text	000009d0 .hidden __divdf3
000079ec g     F .text	00000118 __sfp
0000a554 g     F .text	00000078 __copybits
00017244 g     O .rwdata	00000408 __malloc_av_
00007b38 g     F .text	00000004 __sinit_lock_release
000009e8 g     F .text	00000020 cam_getReg
00010758 g     F .text	0000086c .hidden __muldf3
0000adec g     F .text	00000054 __sread
000163d0 g     F .text	00000108 alt_find_file
000158ac g     F .text	000000a4 alt_dev_llist_insert
00012254 g     F .text	00000024 __malloc_lock
00012460 g     F .text	000000b0 sbrk
00001450 g     F .text	000022bc ___svfprintf_internal_r
000134c4 g     F .text	0000013c alt_avalon_i2c_interrupt_transaction_status
0001342c g     F .text	0000004c alt_avalon_i2c_check_nack
00007730 g     F .text	0000005c _fflush_r
0000de78 g     F .text	000000dc _calloc_r
00011cf8 g     F .text	000001f4 gettimeofday
0001a538 g       *ABS*	00000000 __bss_start
00009478 g     F .text	00000128 memset
00000c50 g     F .text	000000f4 main
00000814 g     F .text	00000038 read_channel1
000133f8 g     F .text	00000034 alt_avalon_i2c_master_target_set
0001a56c g     O .bss	00000004 alt_envp
0001a548 g     O .bss	00000004 __malloc_max_total_mem
00000ac0 g     F .text	000000e4 cam_read_data
00014564 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0000ddac g     F .text	00000018 __swbuf
00001278 g     F .text	00000018 srand
00014210 g     F .text	00000044 alt_avalon_i2c_int_raw_status_get
00015108 g     F .text	000000ac alt_adc_word_read
0000af20 g     F .text	00000008 __sclose
04000000 g       *ABS*	00000000 __alt_heap_limit
0000e044 g     F .text	00000014 fclose
00005e8c g     F .text	00001688 _dtoa_r
000088e4 g     F .text	0000080c _malloc_r
0000e52c g     F .text	00000030 __ascii_wctomb
0000370c g     F .text	00000050 time
0001894c g     O .rwdata	00000004 alt_errno
00008468 g     F .text	000000c4 _fwalk
0000026c g     F .text	0000006c servo_setAngle
0000a6f8 g     F .text	000000c8 putc
00000d44 g     F .text	00000084 .hidden __divsi3
00007b6c g     F .text	00000124 _malloc_trim_r
000169cc g       *ABS*	00000000 __CTOR_END__
0000af28 g     F .text	000000dc strcmp
000169cc g       *ABS*	00000000 __flash_rodata_start
000169cc g       *ABS*	00000000 __DTOR_LIST__
00010500 g     F .text	00000088 .hidden __nedf2
00012824 g     F .text	00000038 alt_irq_init
000123dc g     F .text	00000084 alt_release_fd
0000134c g     F .text	0000006c sprintf
00016a06 g     O .rodata	00000100 .hidden __clz_tab
000005fc g     F .text	00000090 acc_read_y
0001a53c g     O .bss	00000004 _PathLocale
00016638 g     F .text	00000014 atexit
0000ddc4 g     F .text	00000060 _write_r
00008704 g     F .text	00000018 setlocale
00018924 g     O .rwdata	00000004 _impure_ptr
0001a564 g     O .bss	00000004 alt_argc
000007cc g     F .text	00000048 adc_init
00007514 g     F .text	0000021c __sflush_r
000159b0 g     F .text	00000060 _do_dtors
000086f0 g     F .text	00000008 __locale_cjk_lang
000133c0 g     F .text	00000038 alt_avalon_i2c_master_target_get
000132d0 g     F .text	000000f0 alt_avalon_i2c_send_address
00000020 g       .exceptions	00000000 alt_irq_entry
0000a180 g     F .text	00000064 __ulp
00007b54 g     F .text	00000018 __fp_unlock_all
00018938 g     O .rwdata	00000008 alt_fs_list
0001a55c g     O .bss	00000008 alt_resettime
00000020 g       *ABS*	00000000 __ram_exceptions_start
0000871c g     F .text	0000000c localeconv
0001449c g     F .text	00000068 alt_avalon_i2c_tfr_cmd_fifo_threshold_set
00015ac0 g     F .text	00000050 alt_ic_isr_register
00012d00 g     F .text	0000004c alt_avalon_i2c_disable
00018970 g       *ABS*	00000000 _edata
0001a6a8 g       *ABS*	00000000 _end
00015550 g     F .text	00000040 adc_interrupt_asserted
0000e058 g     F .text	00000164 __fputwc
00000230 g       *ABS*	00000000 __ram_exceptions_end
00014a3c g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
08000000 g       *ABS*	00000000 __alt_mem_Onchip_SRAM
00012d4c g     F .text	000000b0 alt_avalon_i2c_master_config_get
00015b98 g     F .text	0000008c alt_ic_irq_disable
0000ae48 g     F .text	0000007c __swrite
00018930 g     O .rwdata	00000004 __malloc_trim_threshold
0001550c g     F .text	00000044 adc_clear_interrupt_status
000086e4 g     F .text	0000000c __locale_msgcharset
0001664c g     F .text	00000038 exit
0000852c g     F .text	000000c4 _fwalk_reent
00009f84 g     F .text	000001fc __mdiff
00000dc8 g     F .text	00000074 .hidden __modsi3
000003a4 g     F .text	00000030 clearSevenSegs
04000000 g       *ABS*	00000000 __alt_data_end
00000020 g     F .exceptions	00000000 alt_exception
00007b30 g     F .text	00000004 __sfp_lock_release
00012f5c g     F .text	000000fc alt_avalon_i2c_master_config_speed_set
000131ec g     F .text	000000e4 alt_avalon_i2c_cmd_write
000152c0 g     F .text	00000040 altera_modular_adc_open
0000068c g     F .text	00000090 acc_read_z
00016998 g     F .text	00000034 _exit
000155cc g     F .text	0000012c alt_alarm_start
0000094c g     F .text	00000078 cam_init
0000e5b8 g     F .text	0000010c .hidden __muldi3
00008728 g     F .text	000001bc __smakebuf_r
000013b8 g     F .text	00000098 strlen
00015fe8 g     F .text	0000015c open
00010588 g     F .text	000000dc .hidden __gedf2
00016370 g     F .text	0000003c alt_putchar
00015404 g     F .text	0000007c adc_recalibrate
00018934 g     O .rwdata	00000004 __wctomb
0000c670 g     F .text	00000018 __sprint_r
00015aa0 g     F .text	00000020 alt_icache_flush_all
0001896c g     O .rwdata	00000004 alt_priority_mask
00015b10 g     F .text	00000088 alt_ic_irq_enable
00005a38 g     F .text	0000001c __vfprintf_internal
0000e55c g     F .text	0000005c _wctomb_r
00010fc4 g     F .text	000008fc .hidden __subdf3
00009924 g     F .text	000000b0 __lo0bits
00018954 g     O .rwdata	00000008 alt_alarm_list
00015950 g     F .text	00000060 _do_ctors
0000e46c g     F .text	000000c0 wcrtomb
00011b00 g     F .text	000000d8 close
00014450 g     F .text	0000004c alt_avalon_i2c_tfr_cmd_fifo_threshold_get
0001203c g     F .text	00000084 alt_load
000136e8 g     F .text	0000013c alt_avalon_i2c_master_rx
0000e1e0 g     F .text	00000080 fputwc
00015228 g     F .text	00000098 alt_adc_register_callback
00007b34 g     F .text	00000004 __sinit_lock_acquire
00009670 g     F .text	00000148 __multadd
00009648 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   0:	00400034 	movhi	at,0
    ori r1, r1, %lo(_start)
   4:	08408c14 	ori	at,at,560
    jmp r1
   8:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  20:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  24:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  28:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  2c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  30:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  34:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  38:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  3c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  40:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  44:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  48:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  4c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  50:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  54:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  58:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  5c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  60:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  64:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  68:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  6c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  70:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  74:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  78:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  7c:	10000326 	beq	r2,zero,8c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  80:	20000226 	beq	r4,zero,8c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  84:	00000fc0 	call	fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  88:	00000706 	br	a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  8c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  90:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  94:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  98:	00001d00 	call	1d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  9c:	1000021e 	bne	r2,zero,a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  f8:	ef80083a 	eret

000000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  fc:	defff904 	addi	sp,sp,-28
 100:	dfc00615 	stw	ra,24(sp)
 104:	df000515 	stw	fp,20(sp)
 108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 10c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 110:	0005313a 	rdctl	r2,ipending
 114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 11c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 124:	00800044 	movi	r2,1
 128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 12c:	e0fffb17 	ldw	r3,-20(fp)
 130:	e0bffc17 	ldw	r2,-16(fp)
 134:	1884703a 	and	r2,r3,r2
 138:	10001426 	beq	r2,zero,18c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 13c:	008000b4 	movhi	r2,2
 140:	10a96a04 	addi	r2,r2,-23128
 144:	e0fffd17 	ldw	r3,-12(fp)
 148:	180690fa 	slli	r3,r3,3
 14c:	10c5883a 	add	r2,r2,r3
 150:	10c00017 	ldw	r3,0(r2)
 154:	008000b4 	movhi	r2,2
 158:	10a96a04 	addi	r2,r2,-23128
 15c:	e13ffd17 	ldw	r4,-12(fp)
 160:	200890fa 	slli	r4,r4,3
 164:	1105883a 	add	r2,r2,r4
 168:	10800104 	addi	r2,r2,4
 16c:	10800017 	ldw	r2,0(r2)
 170:	1009883a 	mov	r4,r2
 174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 17c:	0005313a 	rdctl	r2,ipending
 180:	e0bfff15 	stw	r2,-4(fp)

  return active;
 184:	e0bfff17 	ldw	r2,-4(fp)
 188:	00000706 	br	1a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 18c:	e0bffc17 	ldw	r2,-16(fp)
 190:	1085883a 	add	r2,r2,r2
 194:	e0bffc15 	stw	r2,-16(fp)
      i++;
 198:	e0bffd17 	ldw	r2,-12(fp)
 19c:	10800044 	addi	r2,r2,1
 1a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 1a4:	003fe106 	br	12c <__alt_mem_Onchip_SRAM+0xf800012c>

    active = alt_irq_pending ();
 1a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 1ac:	e0bffb17 	ldw	r2,-20(fp)
 1b0:	103fdb1e 	bne	r2,zero,120 <__alt_mem_Onchip_SRAM+0xf8000120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 1b4:	0001883a 	nop
}
 1b8:	0001883a 	nop
 1bc:	e037883a 	mov	sp,fp
 1c0:	dfc00117 	ldw	ra,4(sp)
 1c4:	df000017 	ldw	fp,0(sp)
 1c8:	dec00204 	addi	sp,sp,8
 1cc:	f800283a 	ret

000001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 1d0:	defffb04 	addi	sp,sp,-20
 1d4:	dfc00415 	stw	ra,16(sp)
 1d8:	df000315 	stw	fp,12(sp)
 1dc:	df000304 	addi	fp,sp,12
 1e0:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
 1e4:	00bfffc4 	movi	r2,-1
 1e8:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
 1ec:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 1f0:	d0a72217 	ldw	r2,-25464(gp)
 1f4:	10000726 	beq	r2,zero,214 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 1f8:	d0a72217 	ldw	r2,-25464(gp)
 1fc:	e0fffd17 	ldw	r3,-12(fp)
 200:	e1bffe17 	ldw	r6,-8(fp)
 204:	e17fff17 	ldw	r5,-4(fp)
 208:	1809883a 	mov	r4,r3
 20c:	103ee83a 	callr	r2
 210:	00000206 	br	21c <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 214:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 218:	0005883a 	mov	r2,zero
}
 21c:	e037883a 	mov	sp,fp
 220:	dfc00117 	ldw	ra,4(sp)
 224:	df000017 	ldw	fp,0(sp)
 228:	dec00204 	addi	sp,sp,8
 22c:	f800283a 	ret

Disassembly of section .text:

00000230 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
     230:	06c10034 	movhi	sp,1024
    ori sp, sp, %lo(__alt_stack_pointer)
     234:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
     238:	068000b4 	movhi	gp,2
    ori gp, gp, %lo(_gp)
     23c:	d6823d14 	ori	gp,gp,2292
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
     240:	00800074 	movhi	r2,1
    ori r2, r2, %lo(__bss_start)
     244:	10a94e14 	ori	r2,r2,42296

    movhi r3, %hi(__bss_end)
     248:	00c00074 	movhi	r3,1
    ori r3, r3, %lo(__bss_end)
     24c:	18e9aa14 	ori	r3,r3,42664

    beq r2, r3, 1f
     250:	10c00326 	beq	r2,r3,260 <_start+0x30>

0:
    stw zero, (r2)
     254:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
     258:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
     25c:	10fffd36 	bltu	r2,r3,254 <__alt_mem_Onchip_SRAM+0xf8000254>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
     260:	001203c0 	call	1203c <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
     264:	00121d80 	call	121d8 <alt_main>

00000268 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
     268:	003fff06 	br	268 <__alt_mem_Onchip_SRAM+0xf8000268>

0000026c <servo_setAngle>:
 */

#include "ServoAPI.h"


bool servo_setAngle(SERVO servo, alt_8 angle){
     26c:	defffc04 	addi	sp,sp,-16
     270:	df000315 	stw	fp,12(sp)
     274:	df000304 	addi	fp,sp,12
     278:	e13ffe15 	stw	r4,-8(fp)
     27c:	2805883a 	mov	r2,r5
     280:	e0bfff05 	stb	r2,-4(fp)
	volatile alt_u32* addr = (alt_u32*) servo;
     284:	e0bffe17 	ldw	r2,-8(fp)
     288:	e0bffd15 	stw	r2,-12(fp)
	if((angle > 45) || (angle < -45)){
     28c:	e0bfff07 	ldb	r2,-4(fp)
     290:	10800b88 	cmpgei	r2,r2,46
     294:	1000031e 	bne	r2,zero,2a4 <servo_setAngle+0x38>
     298:	e0bfff07 	ldb	r2,-4(fp)
     29c:	10bff4c8 	cmpgei	r2,r2,-45
     2a0:	1000021e 	bne	r2,zero,2ac <servo_setAngle+0x40>
		return false;
     2a4:	0005883a 	mov	r2,zero
     2a8:	00000706 	br	2c8 <servo_setAngle+0x5c>
	} else {
		*addr = ((alt_u8) (((100/45)*angle)+100));
     2ac:	e0bfff03 	ldbu	r2,-4(fp)
     2b0:	10800c84 	addi	r2,r2,50
     2b4:	1085883a 	add	r2,r2,r2
     2b8:	10c03fcc 	andi	r3,r2,255
     2bc:	e0bffd17 	ldw	r2,-12(fp)
     2c0:	10c00015 	stw	r3,0(r2)
		return true;
     2c4:	00800044 	movi	r2,1
	}
}
     2c8:	e037883a 	mov	sp,fp
     2cc:	df000017 	ldw	fp,0(sp)
     2d0:	dec00104 	addi	sp,sp,4
     2d4:	f800283a 	ret

000002d8 <servo_center>:

bool servo_center(SERVO servo){
     2d8:	defffd04 	addi	sp,sp,-12
     2dc:	df000215 	stw	fp,8(sp)
     2e0:	df000204 	addi	fp,sp,8
     2e4:	e13fff15 	stw	r4,-4(fp)
	volatile alt_u32* addr = (alt_u32*) servo;
     2e8:	e0bfff17 	ldw	r2,-4(fp)
     2ec:	e0bffe15 	stw	r2,-8(fp)
	*addr = 100;
     2f0:	e0bffe17 	ldw	r2,-8(fp)
     2f4:	00c01904 	movi	r3,100
     2f8:	10c00015 	stw	r3,0(r2)
	return true;
     2fc:	00800044 	movi	r2,1
}
     300:	e037883a 	mov	sp,fp
     304:	df000017 	ldw	fp,0(sp)
     308:	dec00104 	addi	sp,sp,4
     30c:	f800283a 	ret

00000310 <servo_pan>:

bool servo_pan(SERVO servo, alt_u32 speed, float cycles){
     310:	defffb04 	addi	sp,sp,-20
     314:	df000415 	stw	fp,16(sp)
     318:	df000404 	addi	fp,sp,16
     31c:	e13ffd15 	stw	r4,-12(fp)
     320:	e17ffe15 	stw	r5,-8(fp)
     324:	e1bfff15 	stw	r6,-4(fp)
	volatile alt_u32* addr = (alt_u32*) servo;
     328:	e0bffd17 	ldw	r2,-12(fp)
     32c:	e0bffc15 	stw	r2,-16(fp)
	//TODO
	return false;
     330:	0005883a 	mov	r2,zero
}
     334:	e037883a 	mov	sp,fp
     338:	df000017 	ldw	fp,0(sp)
     33c:	dec00104 	addi	sp,sp,4
     340:	f800283a 	ret

00000344 <servo_randomMovement>:

bool servo_randomMovement(SERVO servo){
     344:	defffc04 	addi	sp,sp,-16
     348:	dfc00315 	stw	ra,12(sp)
     34c:	df000215 	stw	fp,8(sp)
     350:	df000204 	addi	fp,sp,8
     354:	e13fff15 	stw	r4,-4(fp)
	volatile alt_u32* addr = (alt_u32*) servo;
     358:	e0bfff17 	ldw	r2,-4(fp)
     35c:	e0bffe15 	stw	r2,-8(fp)
	srand(time(0));
     360:	0009883a 	mov	r4,zero
     364:	000370c0 	call	370c <time>
     368:	1009883a 	mov	r4,r2
     36c:	00012780 	call	1278 <srand>
	*addr = ((alt_u8)(rand()%200));
     370:	00012900 	call	1290 <rand>
     374:	01403204 	movi	r5,200
     378:	1009883a 	mov	r4,r2
     37c:	0000dc80 	call	dc8 <__modsi3>
     380:	10c03fcc 	andi	r3,r2,255
     384:	e0bffe17 	ldw	r2,-8(fp)
     388:	10c00015 	stw	r3,0(r2)
	return true;
     38c:	00800044 	movi	r2,1
}
     390:	e037883a 	mov	sp,fp
     394:	dfc00117 	ldw	ra,4(sp)
     398:	df000017 	ldw	fp,0(sp)
     39c:	dec00204 	addi	sp,sp,8
     3a0:	f800283a 	ret

000003a4 <clearSevenSegs>:
 */
#include "alt_types.h"
#include "SevenSegs.h"
#include <stdio.h>

void clearSevenSegs(){
     3a4:	deffff04 	addi	sp,sp,-4
     3a8:	df000015 	stw	fp,0(sp)
     3ac:	d839883a 	mov	fp,sp
	*HEX0HEX3 = 0;
     3b0:	d0a00017 	ldw	r2,-32768(gp)
     3b4:	10000015 	stw	zero,0(r2)
    *HEX4HEX5 = 0;
     3b8:	d0a00117 	ldw	r2,-32764(gp)
     3bc:	10000015 	stw	zero,0(r2)
}
     3c0:	0001883a 	nop
     3c4:	e037883a 	mov	sp,fp
     3c8:	df000017 	ldw	fp,0(sp)
     3cc:	dec00104 	addi	sp,sp,4
     3d0:	f800283a 	ret

000003d4 <ASCII_to_7Seg>:

char ASCII_to_7Seg(char c){
     3d4:	defffb04 	addi	sp,sp,-20
     3d8:	df000415 	stw	fp,16(sp)
     3dc:	df000404 	addi	fp,sp,16
     3e0:	2005883a 	mov	r2,r4
     3e4:	e0bfff05 	stb	r2,-4(fp)
	if(c != 0){
     3e8:	e0bfff07 	ldb	r2,-4(fp)
     3ec:	10000326 	beq	r2,zero,3fc <ASCII_to_7Seg+0x28>
		c -= 0x30;
     3f0:	e0bfff03 	ldbu	r2,-4(fp)
     3f4:	10bff404 	addi	r2,r2,-48
     3f8:	e0bfff05 	stb	r2,-4(fp)
	}
	char HEXMap[10] = {0b0111111,
     3fc:	00800fc4 	movi	r2,63
     400:	e0bffc05 	stb	r2,-16(fp)
     404:	00800184 	movi	r2,6
     408:	e0bffc45 	stb	r2,-15(fp)
     40c:	008016c4 	movi	r2,91
     410:	e0bffc85 	stb	r2,-14(fp)
     414:	008013c4 	movi	r2,79
     418:	e0bffcc5 	stb	r2,-13(fp)
     41c:	00801984 	movi	r2,102
     420:	e0bffd05 	stb	r2,-12(fp)
     424:	00801b44 	movi	r2,109
     428:	e0bffd45 	stb	r2,-11(fp)
     42c:	00801f04 	movi	r2,124
     430:	e0bffd85 	stb	r2,-10(fp)
     434:	008001c4 	movi	r2,7
     438:	e0bffdc5 	stb	r2,-9(fp)
     43c:	00801fc4 	movi	r2,127
     440:	e0bffe05 	stb	r2,-8(fp)
     444:	008019c4 	movi	r2,103
     448:	e0bffe45 	stb	r2,-7(fp)
			0b1101101,
			0b1111100,
			0b0000111,
			0b1111111,
			0b1100111};
	return HEXMap[c];
     44c:	e0bfff07 	ldb	r2,-4(fp)
     450:	e0fffc04 	addi	r3,fp,-16
     454:	1885883a 	add	r2,r3,r2
     458:	10800003 	ldbu	r2,0(r2)
};
     45c:	e037883a 	mov	sp,fp
     460:	df000017 	ldw	fp,0(sp)
     464:	dec00104 	addi	sp,sp,4
     468:	f800283a 	ret

0000046c <num_to_7Seg>:

void num_to_7Seg(alt_u16 num){
     46c:	defff904 	addi	sp,sp,-28
     470:	dfc00615 	stw	ra,24(sp)
     474:	df000515 	stw	fp,20(sp)
     478:	df000504 	addi	fp,sp,20
     47c:	2005883a 	mov	r2,r4
     480:	e0bfff0d 	sth	r2,-4(fp)
	char BCDOut[6] = {0};
     484:	e03ffd15 	stw	zero,-12(fp)
     488:	e03ffe0d 	sth	zero,-8(fp)
	sprintf(BCDOut, "%d", (num>9999 ? 9999 : num));
     48c:	e0bfff0b 	ldhu	r2,-4(fp)
     490:	1089c428 	cmpgeui	r2,r2,10000
     494:	1000021e 	bne	r2,zero,4a0 <num_to_7Seg+0x34>
     498:	e0bfff0b 	ldhu	r2,-4(fp)
     49c:	00000106 	br	4a4 <num_to_7Seg+0x38>
     4a0:	0089c3c4 	movi	r2,9999
     4a4:	e0fffd04 	addi	r3,fp,-12
     4a8:	100d883a 	mov	r6,r2
     4ac:	01400074 	movhi	r5,1
     4b0:	295a7304 	addi	r5,r5,27084
     4b4:	1809883a 	mov	r4,r3
     4b8:	000134c0 	call	134c <sprintf>
	alt_u32 HexOut = 0;
     4bc:	e03ffb15 	stw	zero,-20(fp)
	for(int i = 0; i <= 3; i++){
     4c0:	e03ffc15 	stw	zero,-16(fp)
     4c4:	00001d06 	br	53c <num_to_7Seg+0xd0>
		if(BCDOut[i] != 0){
     4c8:	e0fffd04 	addi	r3,fp,-12
     4cc:	e0bffc17 	ldw	r2,-16(fp)
     4d0:	1885883a 	add	r2,r3,r2
     4d4:	10800003 	ldbu	r2,0(r2)
     4d8:	10803fcc 	andi	r2,r2,255
     4dc:	1080201c 	xori	r2,r2,128
     4e0:	10bfe004 	addi	r2,r2,-128
     4e4:	10001226 	beq	r2,zero,530 <num_to_7Seg+0xc4>
			HexOut = HexOut << 8;
     4e8:	e0bffb17 	ldw	r2,-20(fp)
     4ec:	1004923a 	slli	r2,r2,8
     4f0:	e0bffb15 	stw	r2,-20(fp)
			HexOut |= ASCII_to_7Seg(BCDOut[i]);
     4f4:	e0fffd04 	addi	r3,fp,-12
     4f8:	e0bffc17 	ldw	r2,-16(fp)
     4fc:	1885883a 	add	r2,r3,r2
     500:	10800003 	ldbu	r2,0(r2)
     504:	10803fcc 	andi	r2,r2,255
     508:	1080201c 	xori	r2,r2,128
     50c:	10bfe004 	addi	r2,r2,-128
     510:	1009883a 	mov	r4,r2
     514:	00003d40 	call	3d4 <ASCII_to_7Seg>
     518:	10803fcc 	andi	r2,r2,255
     51c:	1080201c 	xori	r2,r2,128
     520:	10bfe004 	addi	r2,r2,-128
     524:	e0fffb17 	ldw	r3,-20(fp)
     528:	1884b03a 	or	r2,r3,r2
     52c:	e0bffb15 	stw	r2,-20(fp)

void num_to_7Seg(alt_u16 num){
	char BCDOut[6] = {0};
	sprintf(BCDOut, "%d", (num>9999 ? 9999 : num));
	alt_u32 HexOut = 0;
	for(int i = 0; i <= 3; i++){
     530:	e0bffc17 	ldw	r2,-16(fp)
     534:	10800044 	addi	r2,r2,1
     538:	e0bffc15 	stw	r2,-16(fp)
     53c:	e0bffc17 	ldw	r2,-16(fp)
     540:	10800110 	cmplti	r2,r2,4
     544:	103fe01e 	bne	r2,zero,4c8 <__alt_mem_Onchip_SRAM+0xf80004c8>
		if(BCDOut[i] != 0){
			HexOut = HexOut << 8;
			HexOut |= ASCII_to_7Seg(BCDOut[i]);
		}
	}
	*HEX0HEX3 = HexOut;
     548:	d0a00017 	ldw	r2,-32768(gp)
     54c:	e0fffb17 	ldw	r3,-20(fp)
     550:	10c00015 	stw	r3,0(r2)
}
     554:	0001883a 	nop
     558:	e037883a 	mov	sp,fp
     55c:	dfc00117 	ldw	ra,4(sp)
     560:	df000017 	ldw	fp,0(sp)
     564:	dec00204 	addi	sp,sp,8
     568:	f800283a 	ret

0000056c <acc_read_x>:
#include "accelerometer.h"
#include "ServoAPI.h"

 static volatile ACCELEROMETER* acceleromter = (alt_u32*) ACCELEROMETER_BASE;

 int acc_read_x(){
     56c:	defffe04 	addi	sp,sp,-8
     570:	df000115 	stw	fp,4(sp)
     574:	df000104 	addi	fp,sp,4
     acceleromter->address = DATAX0;
     578:	d0a00217 	ldw	r2,-32760(gp)
     57c:	00c00c84 	movi	r3,50
     580:	10c00005 	stb	r3,0(r2)
     alt_16 data = 0x0000|acceleromter->data;
     584:	d0a00217 	ldw	r2,-32760(gp)
     588:	10800043 	ldbu	r2,1(r2)
     58c:	10803fcc 	andi	r2,r2,255
     590:	e0bfff0d 	sth	r2,-4(fp)
     acceleromter->address = DATAX1;
     594:	d0a00217 	ldw	r2,-32760(gp)
     598:	00c00cc4 	movi	r3,51
     59c:	10c00005 	stb	r3,0(r2)
     data |= ((acceleromter->data&0x01)<<8);
     5a0:	d0a00217 	ldw	r2,-32760(gp)
     5a4:	10800043 	ldbu	r2,1(r2)
     5a8:	10803fcc 	andi	r2,r2,255
     5ac:	1080004c 	andi	r2,r2,1
     5b0:	1004923a 	slli	r2,r2,8
     5b4:	1007883a 	mov	r3,r2
     5b8:	e0bfff0b 	ldhu	r2,-4(fp)
     5bc:	1884b03a 	or	r2,r3,r2
     5c0:	e0bfff0d 	sth	r2,-4(fp)
     if(acceleromter->data&0x02 == 2){
     5c4:	d0a00217 	ldw	r2,-32760(gp)
     5c8:	10800043 	ldbu	r2,1(r2)
     5cc:	10803fcc 	andi	r2,r2,255
     5d0:	1080004c 	andi	r2,r2,1
     5d4:	10000426 	beq	r2,zero,5e8 <acc_read_x+0x7c>
         data |= (0b1111111<<9);
     5d8:	e0ffff0b 	ldhu	r3,-4(fp)
     5dc:	00bf8004 	movi	r2,-512
     5e0:	1884b03a 	or	r2,r3,r2
     5e4:	e0bfff0d 	sth	r2,-4(fp)
     }
     return (int)data;
     5e8:	e0bfff0f 	ldh	r2,-4(fp)
 }
     5ec:	e037883a 	mov	sp,fp
     5f0:	df000017 	ldw	fp,0(sp)
     5f4:	dec00104 	addi	sp,sp,4
     5f8:	f800283a 	ret

000005fc <acc_read_y>:

int acc_read_y(){
     5fc:	defffe04 	addi	sp,sp,-8
     600:	df000115 	stw	fp,4(sp)
     604:	df000104 	addi	fp,sp,4
     acceleromter->address = DATAY0;
     608:	d0a00217 	ldw	r2,-32760(gp)
     60c:	00c00d04 	movi	r3,52
     610:	10c00005 	stb	r3,0(r2)
     alt_16 data = 0x0000|acceleromter->data;
     614:	d0a00217 	ldw	r2,-32760(gp)
     618:	10800043 	ldbu	r2,1(r2)
     61c:	10803fcc 	andi	r2,r2,255
     620:	e0bfff0d 	sth	r2,-4(fp)
     acceleromter->address = DATAY1;
     624:	d0a00217 	ldw	r2,-32760(gp)
     628:	00c00d44 	movi	r3,53
     62c:	10c00005 	stb	r3,0(r2)
     data |= ((acceleromter->data&0x01)<<8);
     630:	d0a00217 	ldw	r2,-32760(gp)
     634:	10800043 	ldbu	r2,1(r2)
     638:	10803fcc 	andi	r2,r2,255
     63c:	1080004c 	andi	r2,r2,1
     640:	1004923a 	slli	r2,r2,8
     644:	1007883a 	mov	r3,r2
     648:	e0bfff0b 	ldhu	r2,-4(fp)
     64c:	1884b03a 	or	r2,r3,r2
     650:	e0bfff0d 	sth	r2,-4(fp)
     if(acceleromter->data&0x02 == 2){
     654:	d0a00217 	ldw	r2,-32760(gp)
     658:	10800043 	ldbu	r2,1(r2)
     65c:	10803fcc 	andi	r2,r2,255
     660:	1080004c 	andi	r2,r2,1
     664:	10000426 	beq	r2,zero,678 <acc_read_y+0x7c>
         data |= (0b1111111<<9);
     668:	e0ffff0b 	ldhu	r3,-4(fp)
     66c:	00bf8004 	movi	r2,-512
     670:	1884b03a 	or	r2,r3,r2
     674:	e0bfff0d 	sth	r2,-4(fp)
     }
     return (int)data;
     678:	e0bfff0f 	ldh	r2,-4(fp)
 }
     67c:	e037883a 	mov	sp,fp
     680:	df000017 	ldw	fp,0(sp)
     684:	dec00104 	addi	sp,sp,4
     688:	f800283a 	ret

0000068c <acc_read_z>:

 int acc_read_z(){
     68c:	defffe04 	addi	sp,sp,-8
     690:	df000115 	stw	fp,4(sp)
     694:	df000104 	addi	fp,sp,4
     acceleromter->address = DATAZ0;
     698:	d0a00217 	ldw	r2,-32760(gp)
     69c:	00c00d84 	movi	r3,54
     6a0:	10c00005 	stb	r3,0(r2)
     alt_16 data = 0x0000|acceleromter->data;
     6a4:	d0a00217 	ldw	r2,-32760(gp)
     6a8:	10800043 	ldbu	r2,1(r2)
     6ac:	10803fcc 	andi	r2,r2,255
     6b0:	e0bfff0d 	sth	r2,-4(fp)
     acceleromter->address = DATAZ1;
     6b4:	d0a00217 	ldw	r2,-32760(gp)
     6b8:	00c00dc4 	movi	r3,55
     6bc:	10c00005 	stb	r3,0(r2)
     data |= ((acceleromter->data&0x01)<<8);
     6c0:	d0a00217 	ldw	r2,-32760(gp)
     6c4:	10800043 	ldbu	r2,1(r2)
     6c8:	10803fcc 	andi	r2,r2,255
     6cc:	1080004c 	andi	r2,r2,1
     6d0:	1004923a 	slli	r2,r2,8
     6d4:	1007883a 	mov	r3,r2
     6d8:	e0bfff0b 	ldhu	r2,-4(fp)
     6dc:	1884b03a 	or	r2,r3,r2
     6e0:	e0bfff0d 	sth	r2,-4(fp)
     if(acceleromter->data&0x02 == 2){
     6e4:	d0a00217 	ldw	r2,-32760(gp)
     6e8:	10800043 	ldbu	r2,1(r2)
     6ec:	10803fcc 	andi	r2,r2,255
     6f0:	1080004c 	andi	r2,r2,1
     6f4:	10000426 	beq	r2,zero,708 <acc_read_z+0x7c>
         data |= (0b1111111<<9);
     6f8:	e0ffff0b 	ldhu	r3,-4(fp)
     6fc:	00bf8004 	movi	r2,-512
     700:	1884b03a 	or	r2,r3,r2
     704:	e0bfff0d 	sth	r2,-4(fp)
     }
     return (int)data;
     708:	e0bfff0f 	ldh	r2,-4(fp)
 }
     70c:	e037883a 	mov	sp,fp
     710:	df000017 	ldw	fp,0(sp)
     714:	dec00104 	addi	sp,sp,4
     718:	f800283a 	ret

0000071c <acc_steady_servo>:

 void acc_steady_servo(){
     71c:	defffe04 	addi	sp,sp,-8
     720:	dfc00115 	stw	ra,4(sp)
     724:	df000015 	stw	fp,0(sp)
     728:	d839883a 	mov	fp,sp
	 servo_setAngle(SERVO_X, (alt_8)(-acc_read_y()*0.1765));
     72c:	00005fc0 	call	5fc <acc_read_y>
     730:	0085c83a 	sub	r2,zero,r2
     734:	1009883a 	mov	r4,r2
     738:	0000f900 	call	f90 <__floatsisf>
     73c:	1007883a 	mov	r3,r2
     740:	008f8d74 	movhi	r2,15925
     744:	10af1a84 	addi	r2,r2,-17302
     748:	1885ff32 	custom	252,r2,r3,r2
     74c:	1009883a 	mov	r4,r2
     750:	0000f200 	call	f20 <__fixsfsi>
     754:	10803fcc 	andi	r2,r2,255
     758:	1080201c 	xori	r2,r2,128
     75c:	10bfe004 	addi	r2,r2,-128
     760:	100b883a 	mov	r5,r2
     764:	013fc834 	movhi	r4,65312
     768:	21002404 	addi	r4,r4,144
     76c:	000026c0 	call	26c <servo_setAngle>
	 servo_setAngle(SERVO_Y, (alt_8)(-acc_read_x()*0.1765));
     770:	000056c0 	call	56c <acc_read_x>
     774:	0085c83a 	sub	r2,zero,r2
     778:	1009883a 	mov	r4,r2
     77c:	0000f900 	call	f90 <__floatsisf>
     780:	1007883a 	mov	r3,r2
     784:	008f8d74 	movhi	r2,15925
     788:	10af1a84 	addi	r2,r2,-17302
     78c:	1885ff32 	custom	252,r2,r3,r2
     790:	1009883a 	mov	r4,r2
     794:	0000f200 	call	f20 <__fixsfsi>
     798:	10803fcc 	andi	r2,r2,255
     79c:	1080201c 	xori	r2,r2,128
     7a0:	10bfe004 	addi	r2,r2,-128
     7a4:	100b883a 	mov	r5,r2
     7a8:	013fc834 	movhi	r4,65312
     7ac:	21002804 	addi	r4,r4,160
     7b0:	000026c0 	call	26c <servo_setAngle>
 }
     7b4:	0001883a 	nop
     7b8:	e037883a 	mov	sp,fp
     7bc:	dfc00117 	ldw	ra,4(sp)
     7c0:	df000017 	ldw	fp,0(sp)
     7c4:	dec00204 	addi	sp,sp,8
     7c8:	f800283a 	ret

000007cc <adc_init>:
#include "adc.h"

static volatile ADC_SAMPLE_STORE* samples = (alt_u32*) ADC_SAMPLE_STORE_BASE;
static volatile alt_u32* sequencerCmd = (alt_u32*) ADC_SEQUENCER_BASE;

void adc_init() {
     7cc:	defffe04 	addi	sp,sp,-8
     7d0:	df000115 	stw	fp,4(sp)
     7d4:	df000104 	addi	fp,sp,4
	alt_u32 data = *sequencerCmd;
     7d8:	d0a00417 	ldw	r2,-32752(gp)
     7dc:	10800017 	ldw	r2,0(r2)
     7e0:	e0bfff15 	stw	r2,-4(fp)
	data = (data&0xF) | 0b0001;
     7e4:	e0bfff17 	ldw	r2,-4(fp)
     7e8:	1080038c 	andi	r2,r2,14
     7ec:	10800054 	ori	r2,r2,1
     7f0:	e0bfff15 	stw	r2,-4(fp)
	*sequencerCmd = data;
     7f4:	d0a00417 	ldw	r2,-32752(gp)
     7f8:	e0ffff17 	ldw	r3,-4(fp)
     7fc:	10c00015 	stw	r3,0(r2)
}
     800:	0001883a 	nop
     804:	e037883a 	mov	sp,fp
     808:	df000017 	ldw	fp,0(sp)
     80c:	dec00104 	addi	sp,sp,4
     810:	f800283a 	ret

00000814 <read_channel1>:

alt_u16 read_channel1() {
     814:	defffe04 	addi	sp,sp,-8
     818:	df000115 	stw	fp,4(sp)
     81c:	df000104 	addi	fp,sp,4
    alt_u32 data = samples->slot0;
     820:	d0a00317 	ldw	r2,-32756(gp)
     824:	10800017 	ldw	r2,0(r2)
     828:	e0bfff15 	stw	r2,-4(fp)
    data &= 0xFFF;
     82c:	e0bfff17 	ldw	r2,-4(fp)
     830:	1083ffcc 	andi	r2,r2,4095
     834:	e0bfff15 	stw	r2,-4(fp)
    return data;
     838:	e0bfff17 	ldw	r2,-4(fp)
}
     83c:	e037883a 	mov	sp,fp
     840:	df000017 	ldw	fp,0(sp)
     844:	dec00104 	addi	sp,sp,4
     848:	f800283a 	ret

0000084c <read_channel2>:

alt_u16 read_channel2() {
     84c:	defffe04 	addi	sp,sp,-8
     850:	df000115 	stw	fp,4(sp)
     854:	df000104 	addi	fp,sp,4
    alt_u32 data = samples->slot1;
     858:	d0a00317 	ldw	r2,-32756(gp)
     85c:	10800117 	ldw	r2,4(r2)
     860:	e0bfff15 	stw	r2,-4(fp)
    data &= 0xFFF;
     864:	e0bfff17 	ldw	r2,-4(fp)
     868:	1083ffcc 	andi	r2,r2,4095
     86c:	e0bfff15 	stw	r2,-4(fp)
    return data;
     870:	e0bfff17 	ldw	r2,-4(fp)
}
     874:	e037883a 	mov	sp,fp
     878:	df000017 	ldw	fp,0(sp)
     87c:	dec00104 	addi	sp,sp,4
     880:	f800283a 	ret

00000884 <read_joystick>:

void read_joystick() {
     884:	defffe04 	addi	sp,sp,-8
     888:	dfc00115 	stw	ra,4(sp)
     88c:	df000015 	stw	fp,0(sp)
     890:	d839883a 	mov	fp,sp
	servo_setAngle(SERVO_Y, (alt_8) (read_channel1() / 4000.0 * 90 - 45));
     894:	00008140 	call	814 <read_channel1>
     898:	10bfffcc 	andi	r2,r2,65535
     89c:	1009883a 	mov	r4,r2
     8a0:	0000f900 	call	f90 <__floatsisf>
     8a4:	1007883a 	mov	r3,r2
     8a8:	00915eb4 	movhi	r2,17786
     8ac:	1887fff2 	custom	255,r3,r3,r2
     8b0:	0090ad34 	movhi	r2,17076
     8b4:	1887ff32 	custom	252,r3,r3,r2
     8b8:	00908d34 	movhi	r2,16948
     8bc:	1885ffb2 	custom	254,r2,r3,r2
     8c0:	1009883a 	mov	r4,r2
     8c4:	0000f200 	call	f20 <__fixsfsi>
     8c8:	10803fcc 	andi	r2,r2,255
     8cc:	1080201c 	xori	r2,r2,128
     8d0:	10bfe004 	addi	r2,r2,-128
     8d4:	100b883a 	mov	r5,r2
     8d8:	013fc834 	movhi	r4,65312
     8dc:	21002804 	addi	r4,r4,160
     8e0:	000026c0 	call	26c <servo_setAngle>
	servo_setAngle(SERVO_X, (alt_8) (read_channel2() / 4000.0 * 90 - 45));
     8e4:	000084c0 	call	84c <read_channel2>
     8e8:	10bfffcc 	andi	r2,r2,65535
     8ec:	1009883a 	mov	r4,r2
     8f0:	0000f900 	call	f90 <__floatsisf>
     8f4:	1007883a 	mov	r3,r2
     8f8:	00915eb4 	movhi	r2,17786
     8fc:	1887fff2 	custom	255,r3,r3,r2
     900:	0090ad34 	movhi	r2,17076
     904:	1887ff32 	custom	252,r3,r3,r2
     908:	00908d34 	movhi	r2,16948
     90c:	1885ffb2 	custom	254,r2,r3,r2
     910:	1009883a 	mov	r4,r2
     914:	0000f200 	call	f20 <__fixsfsi>
     918:	10803fcc 	andi	r2,r2,255
     91c:	1080201c 	xori	r2,r2,128
     920:	10bfe004 	addi	r2,r2,-128
     924:	100b883a 	mov	r5,r2
     928:	013fc834 	movhi	r4,65312
     92c:	21002404 	addi	r4,r4,144
     930:	000026c0 	call	26c <servo_setAngle>
}
     934:	0001883a 	nop
     938:	e037883a 	mov	sp,fp
     93c:	dfc00117 	ldw	ra,4(sp)
     940:	df000017 	ldw	fp,0(sp)
     944:	dec00204 	addi	sp,sp,8
     948:	f800283a 	ret

0000094c <cam_init>:

#include "camera.h"

static volatile CAMERA* camera = (alt_u32*) CAM_BASE;

void cam_init() {
     94c:	deffff04 	addi	sp,sp,-4
     950:	df000015 	stw	fp,0(sp)
     954:	d839883a 	mov	fp,sp
    // TODO
	//turn disable peripheral core
	camera->CTRL &= 0xFFFFFFFE;
     958:	d0a00517 	ldw	r2,-32748(gp)
     95c:	d0e00517 	ldw	r3,-32748(gp)
     960:	19000217 	ldw	r4,8(r3)
     964:	00ffff84 	movi	r3,-2
     968:	20c6703a 	and	r3,r4,r3
     96c:	10c00215 	stw	r3,8(r2)
	//set to standard transfer mode
	camera->CTRL &= 0xFFFFFFFD;
     970:	d0a00517 	ldw	r2,-32748(gp)
     974:	d0e00517 	ldw	r3,-32748(gp)
     978:	19000217 	ldw	r4,8(r3)
     97c:	00ffff44 	movi	r3,-3
     980:	20c6703a 	and	r3,r4,r3
     984:	10c00215 	stw	r3,8(r2)
	//enable rx and tx interrupts
	camera->ISER |= 0x3;
     988:	d0a00517 	ldw	r2,-32748(gp)
     98c:	d0e00517 	ldw	r3,-32748(gp)
     990:	18c00317 	ldw	r3,12(r3)
     994:	18c000d4 	ori	r3,r3,3
     998:	10c00315 	stw	r3,12(r2)
	//enable peripheral core
	camera->CTRL |= 0b1;
     99c:	d0a00517 	ldw	r2,-32748(gp)
     9a0:	d0e00517 	ldw	r3,-32748(gp)
     9a4:	18c00217 	ldw	r3,8(r3)
     9a8:	18c00054 	ori	r3,r3,1
     9ac:	10c00215 	stw	r3,8(r2)
}
     9b0:	0001883a 	nop
     9b4:	e037883a 	mov	sp,fp
     9b8:	df000017 	ldw	fp,0(sp)
     9bc:	dec00104 	addi	sp,sp,4
     9c0:	f800283a 	ret

000009c4 <cam_setReg>:

void cam_setReg(alt_u32* cmd) {
     9c4:	defffe04 	addi	sp,sp,-8
     9c8:	df000115 	stw	fp,4(sp)
     9cc:	df000104 	addi	fp,sp,4
     9d0:	e13fff15 	stw	r4,-4(fp)
    // TODO
}
     9d4:	0001883a 	nop
     9d8:	e037883a 	mov	sp,fp
     9dc:	df000017 	ldw	fp,0(sp)
     9e0:	dec00104 	addi	sp,sp,4
     9e4:	f800283a 	ret

000009e8 <cam_getReg>:

alt_u32 cam_getReg() {
     9e8:	deffff04 	addi	sp,sp,-4
     9ec:	df000015 	stw	fp,0(sp)
     9f0:	d839883a 	mov	fp,sp
    // TODO
    return 0;
     9f4:	0005883a 	mov	r2,zero
}
     9f8:	e037883a 	mov	sp,fp
     9fc:	df000017 	ldw	fp,0(sp)
     a00:	dec00104 	addi	sp,sp,4
     a04:	f800283a 	ret

00000a08 <cam_write_data>:

void cam_write_data(int addr, int data){
     a08:	defffd04 	addi	sp,sp,-12
     a0c:	df000215 	stw	fp,8(sp)
     a10:	df000204 	addi	fp,sp,8
     a14:	e13ffe15 	stw	r4,-8(fp)
     a18:	e17fff15 	stw	r5,-4(fp)
	//assert start bit
	camera->TFR_CMD |= 1<<9;
     a1c:	d0a00517 	ldw	r2,-32748(gp)
     a20:	d0e00517 	ldw	r3,-32748(gp)
     a24:	18c00017 	ldw	r3,0(r3)
     a28:	18c08014 	ori	r3,r3,512
     a2c:	10c00015 	stw	r3,0(r2)
	//wait for transmit ready
	while(!(camera->ISR&0b1 == 1)){};
     a30:	0001883a 	nop
     a34:	d0a00517 	ldw	r2,-32748(gp)
     a38:	10800417 	ldw	r2,16(r2)
     a3c:	1080004c 	andi	r2,r2,1
     a40:	103ffc26 	beq	r2,zero,a34 <__alt_mem_Onchip_SRAM+0xf8000a34>
	//assert write ID
	camera->TFR_CMD = 42;
     a44:	d0a00517 	ldw	r2,-32748(gp)
     a48:	00c00a84 	movi	r3,42
     a4c:	10c00015 	stw	r3,0(r2)
	//wait for transmit ready
	while(!(camera->ISR&0b1 == 1)){};
     a50:	0001883a 	nop
     a54:	d0a00517 	ldw	r2,-32748(gp)
     a58:	10800417 	ldw	r2,16(r2)
     a5c:	1080004c 	andi	r2,r2,1
     a60:	103ffc26 	beq	r2,zero,a54 <__alt_mem_Onchip_SRAM+0xf8000a54>
	//specify address (shift for write bit)
	camera->TFR_CMD = addr<<1;
     a64:	d0e00517 	ldw	r3,-32748(gp)
     a68:	e0bffe17 	ldw	r2,-8(fp)
     a6c:	1085883a 	add	r2,r2,r2
     a70:	18800015 	stw	r2,0(r3)
	//wait for transmit ready
	while(!(camera->ISR&0b1 == 1)){};
     a74:	0001883a 	nop
     a78:	d0a00517 	ldw	r2,-32748(gp)
     a7c:	10800417 	ldw	r2,16(r2)
     a80:	1080004c 	andi	r2,r2,1
     a84:	103ffc26 	beq	r2,zero,a78 <__alt_mem_Onchip_SRAM+0xf8000a78>
	//actually write data (shift for write bit)
	camera->TFR_CMD = data<<1;
     a88:	d0e00517 	ldw	r3,-32748(gp)
     a8c:	e0bfff17 	ldw	r2,-4(fp)
     a90:	1085883a 	add	r2,r2,r2
     a94:	18800015 	stw	r2,0(r3)
	//stop transmit
	camera->TFR_CMD |= 1<<8;
     a98:	d0a00517 	ldw	r2,-32748(gp)
     a9c:	d0e00517 	ldw	r3,-32748(gp)
     aa0:	18c00017 	ldw	r3,0(r3)
     aa4:	18c04014 	ori	r3,r3,256
     aa8:	10c00015 	stw	r3,0(r2)


}
     aac:	0001883a 	nop
     ab0:	e037883a 	mov	sp,fp
     ab4:	df000017 	ldw	fp,0(sp)
     ab8:	dec00104 	addi	sp,sp,4
     abc:	f800283a 	ret

00000ac0 <cam_read_data>:

alt_u8 cam_read_data(int addr){
     ac0:	defffd04 	addi	sp,sp,-12
     ac4:	df000215 	stw	fp,8(sp)
     ac8:	df000204 	addi	fp,sp,8
     acc:	e13fff15 	stw	r4,-4(fp)
	//assert start bit
	camera->TFR_CMD |= 1<<9;
     ad0:	d0a00517 	ldw	r2,-32748(gp)
     ad4:	d0e00517 	ldw	r3,-32748(gp)
     ad8:	18c00017 	ldw	r3,0(r3)
     adc:	18c08014 	ori	r3,r3,512
     ae0:	10c00015 	stw	r3,0(r2)
	//wait for transmit ready
	while(!(camera->ISR&0b1 == 1)){};
     ae4:	0001883a 	nop
     ae8:	d0a00517 	ldw	r2,-32748(gp)
     aec:	10800417 	ldw	r2,16(r2)
     af0:	1080004c 	andi	r2,r2,1
     af4:	103ffc26 	beq	r2,zero,ae8 <__alt_mem_Onchip_SRAM+0xf8000ae8>
	//assert write ID
	camera->TFR_CMD = 42;
     af8:	d0a00517 	ldw	r2,-32748(gp)
     afc:	00c00a84 	movi	r3,42
     b00:	10c00015 	stw	r3,0(r2)
	//wait for transmit ready
	while(!(camera->ISR&0b1 == 1)){};
     b04:	0001883a 	nop
     b08:	d0a00517 	ldw	r2,-32748(gp)
     b0c:	10800417 	ldw	r2,16(r2)
     b10:	1080004c 	andi	r2,r2,1
     b14:	103ffc26 	beq	r2,zero,b08 <__alt_mem_Onchip_SRAM+0xf8000b08>
	//specify address (shift for write bit)
	camera->TFR_CMD = addr<<1;
     b18:	d0e00517 	ldw	r3,-32748(gp)
     b1c:	e0bfff17 	ldw	r2,-4(fp)
     b20:	1085883a 	add	r2,r2,r2
     b24:	18800015 	stw	r2,0(r3)
	//stop transmit
	//camera->TFR_CMD |= 1<<8;
	//do i need to restart transmit here? doc's just stay stop
	camera->TFR_CMD |= 1<<9;
     b28:	d0a00517 	ldw	r2,-32748(gp)
     b2c:	d0e00517 	ldw	r3,-32748(gp)
     b30:	18c00017 	ldw	r3,0(r3)
     b34:	18c08014 	ori	r3,r3,512
     b38:	10c00015 	stw	r3,0(r2)
	//wait for transmit ready
	while(!(camera->ISR&0b1 == 1)){};
     b3c:	0001883a 	nop
     b40:	d0a00517 	ldw	r2,-32748(gp)
     b44:	10800417 	ldw	r2,16(r2)
     b48:	1080004c 	andi	r2,r2,1
     b4c:	103ffc26 	beq	r2,zero,b40 <__alt_mem_Onchip_SRAM+0xf8000b40>
	//assert read ID
	camera->TFR_CMD = 43;
     b50:	d0a00517 	ldw	r2,-32748(gp)
     b54:	00c00ac4 	movi	r3,43
     b58:	10c00015 	stw	r3,0(r2)
	//wait for receive ready
	while(!(camera->ISR&2 == 2)){};
     b5c:	0001883a 	nop
     b60:	d0a00517 	ldw	r2,-32748(gp)
     b64:	10800417 	ldw	r2,16(r2)
     b68:	1080004c 	andi	r2,r2,1
     b6c:	103ffc26 	beq	r2,zero,b60 <__alt_mem_Onchip_SRAM+0xf8000b60>
	//read and return
	alt_u8 ret = camera->RX_DATA&0xFF;
     b70:	d0a00517 	ldw	r2,-32748(gp)
     b74:	10800117 	ldw	r2,4(r2)
     b78:	e0bffe05 	stb	r2,-8(fp)
	//stop transmit
	camera->TFR_CMD |= 1<<8;
     b7c:	d0a00517 	ldw	r2,-32748(gp)
     b80:	d0e00517 	ldw	r3,-32748(gp)
     b84:	18c00017 	ldw	r3,0(r3)
     b88:	18c04014 	ori	r3,r3,256
     b8c:	10c00015 	stw	r3,0(r2)
	return ret;
     b90:	e0bffe03 	ldbu	r2,-8(fp)

}
     b94:	e037883a 	mov	sp,fp
     b98:	df000017 	ldw	fp,0(sp)
     b9c:	dec00104 	addi	sp,sp,4
     ba0:	f800283a 	ret

00000ba4 <delay_1s>:
 */

#include "alt_types.h"
#include "delay.h"  //include declaration header file

void delay_1s(alt_u32 n){
     ba4:	defffc04 	addi	sp,sp,-16
     ba8:	dfc00315 	stw	ra,12(sp)
     bac:	df000215 	stw	fp,8(sp)
     bb0:	df000204 	addi	fp,sp,8
     bb4:	e13fff15 	stw	r4,-4(fp)
	int i = 500000*n;
     bb8:	01400234 	movhi	r5,8
     bbc:	29684804 	addi	r5,r5,-24288
     bc0:	e13fff17 	ldw	r4,-4(fp)
     bc4:	0000ef80 	call	ef8 <__mulsi3>
     bc8:	e0bffe15 	stw	r2,-8(fp)
	while(i>0){
     bcc:	00000306 	br	bdc <delay_1s+0x38>
		i--;
     bd0:	e0bffe17 	ldw	r2,-8(fp)
     bd4:	10bfffc4 	addi	r2,r2,-1
     bd8:	e0bffe15 	stw	r2,-8(fp)
#include "alt_types.h"
#include "delay.h"  //include declaration header file

void delay_1s(alt_u32 n){
	int i = 500000*n;
	while(i>0){
     bdc:	e0bffe17 	ldw	r2,-8(fp)
     be0:	00bffb16 	blt	zero,r2,bd0 <__alt_mem_Onchip_SRAM+0xf8000bd0>
		i--;
	}
}
     be4:	0001883a 	nop
     be8:	e037883a 	mov	sp,fp
     bec:	dfc00117 	ldw	ra,4(sp)
     bf0:	df000017 	ldw	fp,0(sp)
     bf4:	dec00204 	addi	sp,sp,8
     bf8:	f800283a 	ret

00000bfc <delay_1ms>:
void delay_1ms(alt_u32 n){
     bfc:	defffc04 	addi	sp,sp,-16
     c00:	dfc00315 	stw	ra,12(sp)
     c04:	df000215 	stw	fp,8(sp)
     c08:	df000204 	addi	fp,sp,8
     c0c:	e13fff15 	stw	r4,-4(fp)
	int i = 500*n;
     c10:	01407d04 	movi	r5,500
     c14:	e13fff17 	ldw	r4,-4(fp)
     c18:	0000ef80 	call	ef8 <__mulsi3>
     c1c:	e0bffe15 	stw	r2,-8(fp)
	while(i>0){
     c20:	00000306 	br	c30 <delay_1ms+0x34>
		i--;
     c24:	e0bffe17 	ldw	r2,-8(fp)
     c28:	10bfffc4 	addi	r2,r2,-1
     c2c:	e0bffe15 	stw	r2,-8(fp)
		i--;
	}
}
void delay_1ms(alt_u32 n){
	int i = 500*n;
	while(i>0){
     c30:	e0bffe17 	ldw	r2,-8(fp)
     c34:	00bffb16 	blt	zero,r2,c24 <__alt_mem_Onchip_SRAM+0xf8000c24>
		i--;
	}
}
     c38:	0001883a 	nop
     c3c:	e037883a 	mov	sp,fp
     c40:	dfc00117 	ldw	ra,4(sp)
     c44:	df000017 	ldw	fp,0(sp)
     c48:	dec00204 	addi	sp,sp,8
     c4c:	f800283a 	ret

00000c50 <main>:
 * 2: move servos
 */
#define DEBUG 2


int main(){
     c50:	defffd04 	addi	sp,sp,-12
     c54:	dfc00215 	stw	ra,8(sp)
     c58:	df000115 	stw	fp,4(sp)
     c5c:	dc000015 	stw	r16,0(sp)
     c60:	df000104 	addi	fp,sp,4
  printf("Welcome to the test display!\n");
     c64:	01000074 	movhi	r4,1
     c68:	211a7404 	addi	r4,r4,27088
     c6c:	00012640 	call	1264 <puts>
  //clear on boot up
  clearSevenSegs();
     c70:	00003a40 	call	3a4 <clearSevenSegs>
  //initalize ADC
  adc_init();
     c74:	00007cc0 	call	7cc <adc_init>
  cam_init();
     c78:	000094c0 	call	94c <cam_init>
  cam_write_data(0x01,0x40);
     c7c:	01401004 	movi	r5,64
     c80:	01000044 	movi	r4,1
     c84:	0000a080 	call	a08 <cam_write_data>
  while(1){

	//determine if switch 0 is on or off. if on display channel 1
	//else if off, display channel 2 on the hex display
	while (DEBUG == 2) {
		if(((*slideSwitches)&1) == 1){
     c88:	d0a00a17 	ldw	r2,-32728(gp)
     c8c:	1080000b 	ldhu	r2,0(r2)
     c90:	10bfffcc 	andi	r2,r2,65535
     c94:	1080004c 	andi	r2,r2,1
     c98:	10000f26 	beq	r2,zero,cd8 <main+0x88>
			*HEX4HEX5 = (*HEX4HEX5&0x0000)|(ASCII_to_7Seg('1')<< 8);
     c9c:	d0a00717 	ldw	r2,-32740(gp)
     ca0:	10800017 	ldw	r2,0(r2)
     ca4:	d4200717 	ldw	r16,-32740(gp)
     ca8:	01000c44 	movi	r4,49
     cac:	00003d40 	call	3d4 <ASCII_to_7Seg>
     cb0:	10803fcc 	andi	r2,r2,255
     cb4:	1080201c 	xori	r2,r2,128
     cb8:	10bfe004 	addi	r2,r2,-128
     cbc:	1004923a 	slli	r2,r2,8
     cc0:	80800015 	stw	r2,0(r16)
			num_to_7Seg(read_channel1());
     cc4:	00008140 	call	814 <read_channel1>
     cc8:	10bfffcc 	andi	r2,r2,65535
     ccc:	1009883a 	mov	r4,r2
     cd0:	000046c0 	call	46c <num_to_7Seg>
     cd4:	00000e06 	br	d10 <main+0xc0>
		} else {
			*HEX4HEX5 = (*HEX4HEX5&0x0000)|(ASCII_to_7Seg('0')<< 8);
     cd8:	d0a00717 	ldw	r2,-32740(gp)
     cdc:	10800017 	ldw	r2,0(r2)
     ce0:	d4200717 	ldw	r16,-32740(gp)
     ce4:	01000c04 	movi	r4,48
     ce8:	00003d40 	call	3d4 <ASCII_to_7Seg>
     cec:	10803fcc 	andi	r2,r2,255
     cf0:	1080201c 	xori	r2,r2,128
     cf4:	10bfe004 	addi	r2,r2,-128
     cf8:	1004923a 	slli	r2,r2,8
     cfc:	80800015 	stw	r2,0(r16)
			num_to_7Seg(read_channel2());
     d00:	000084c0 	call	84c <read_channel2>
     d04:	10bfffcc 	andi	r2,r2,65535
     d08:	1009883a 	mov	r4,r2
     d0c:	000046c0 	call	46c <num_to_7Seg>
		}
		//read_joystick();
		acc_steady_servo();
     d10:	000071c0 	call	71c <acc_steady_servo>
		//printf("X: %d\n", acc_read_x());
		//printf("Y: %d\n", acc_read_y());
		//printf("Z: %d\n", acc_read_z());
		printf("camera blue gain: %d\n", cam_read_data(0x01));
     d14:	01000044 	movi	r4,1
     d18:	0000ac00 	call	ac0 <cam_read_data>
     d1c:	10803fcc 	andi	r2,r2,255
     d20:	100b883a 	mov	r5,r2
     d24:	01000074 	movhi	r4,1
     d28:	211a7c04 	addi	r4,r4,27120
     d2c:	00011480 	call	1148 <printf>
		printf("\n");
     d30:	01000284 	movi	r4,10
     d34:	000118c0 	call	118c <putchar>
		delay_1ms(200);
     d38:	01003204 	movi	r4,200
     d3c:	0000bfc0 	call	bfc <delay_1ms>
	}
     d40:	003fd106 	br	c88 <__alt_mem_Onchip_SRAM+0xf8000c88>

00000d44 <__divsi3>:
     d44:	20001b16 	blt	r4,zero,db4 <__divsi3+0x70>
     d48:	000f883a 	mov	r7,zero
     d4c:	28001616 	blt	r5,zero,da8 <__divsi3+0x64>
     d50:	200d883a 	mov	r6,r4
     d54:	29001a2e 	bgeu	r5,r4,dc0 <__divsi3+0x7c>
     d58:	00800804 	movi	r2,32
     d5c:	00c00044 	movi	r3,1
     d60:	00000106 	br	d68 <__divsi3+0x24>
     d64:	10000d26 	beq	r2,zero,d9c <__divsi3+0x58>
     d68:	294b883a 	add	r5,r5,r5
     d6c:	10bfffc4 	addi	r2,r2,-1
     d70:	18c7883a 	add	r3,r3,r3
     d74:	293ffb36 	bltu	r5,r4,d64 <__alt_mem_Onchip_SRAM+0xf8000d64>
     d78:	0005883a 	mov	r2,zero
     d7c:	18000726 	beq	r3,zero,d9c <__divsi3+0x58>
     d80:	0005883a 	mov	r2,zero
     d84:	31400236 	bltu	r6,r5,d90 <__divsi3+0x4c>
     d88:	314dc83a 	sub	r6,r6,r5
     d8c:	10c4b03a 	or	r2,r2,r3
     d90:	1806d07a 	srli	r3,r3,1
     d94:	280ad07a 	srli	r5,r5,1
     d98:	183ffa1e 	bne	r3,zero,d84 <__alt_mem_Onchip_SRAM+0xf8000d84>
     d9c:	38000126 	beq	r7,zero,da4 <__divsi3+0x60>
     da0:	0085c83a 	sub	r2,zero,r2
     da4:	f800283a 	ret
     da8:	014bc83a 	sub	r5,zero,r5
     dac:	39c0005c 	xori	r7,r7,1
     db0:	003fe706 	br	d50 <__alt_mem_Onchip_SRAM+0xf8000d50>
     db4:	0109c83a 	sub	r4,zero,r4
     db8:	01c00044 	movi	r7,1
     dbc:	003fe306 	br	d4c <__alt_mem_Onchip_SRAM+0xf8000d4c>
     dc0:	00c00044 	movi	r3,1
     dc4:	003fee06 	br	d80 <__alt_mem_Onchip_SRAM+0xf8000d80>

00000dc8 <__modsi3>:
     dc8:	20001716 	blt	r4,zero,e28 <__modsi3+0x60>
     dcc:	000f883a 	mov	r7,zero
     dd0:	2005883a 	mov	r2,r4
     dd4:	28001216 	blt	r5,zero,e20 <__modsi3+0x58>
     dd8:	2900162e 	bgeu	r5,r4,e34 <__modsi3+0x6c>
     ddc:	01800804 	movi	r6,32
     de0:	00c00044 	movi	r3,1
     de4:	00000106 	br	dec <__modsi3+0x24>
     de8:	30000a26 	beq	r6,zero,e14 <__modsi3+0x4c>
     dec:	294b883a 	add	r5,r5,r5
     df0:	31bfffc4 	addi	r6,r6,-1
     df4:	18c7883a 	add	r3,r3,r3
     df8:	293ffb36 	bltu	r5,r4,de8 <__alt_mem_Onchip_SRAM+0xf8000de8>
     dfc:	18000526 	beq	r3,zero,e14 <__modsi3+0x4c>
     e00:	1806d07a 	srli	r3,r3,1
     e04:	11400136 	bltu	r2,r5,e0c <__modsi3+0x44>
     e08:	1145c83a 	sub	r2,r2,r5
     e0c:	280ad07a 	srli	r5,r5,1
     e10:	183ffb1e 	bne	r3,zero,e00 <__alt_mem_Onchip_SRAM+0xf8000e00>
     e14:	38000126 	beq	r7,zero,e1c <__modsi3+0x54>
     e18:	0085c83a 	sub	r2,zero,r2
     e1c:	f800283a 	ret
     e20:	014bc83a 	sub	r5,zero,r5
     e24:	003fec06 	br	dd8 <__alt_mem_Onchip_SRAM+0xf8000dd8>
     e28:	0109c83a 	sub	r4,zero,r4
     e2c:	01c00044 	movi	r7,1
     e30:	003fe706 	br	dd0 <__alt_mem_Onchip_SRAM+0xf8000dd0>
     e34:	00c00044 	movi	r3,1
     e38:	003ff106 	br	e00 <__alt_mem_Onchip_SRAM+0xf8000e00>

00000e3c <__udivsi3>:
     e3c:	200d883a 	mov	r6,r4
     e40:	2900152e 	bgeu	r5,r4,e98 <__udivsi3+0x5c>
     e44:	28001416 	blt	r5,zero,e98 <__udivsi3+0x5c>
     e48:	00800804 	movi	r2,32
     e4c:	00c00044 	movi	r3,1
     e50:	00000206 	br	e5c <__udivsi3+0x20>
     e54:	10000e26 	beq	r2,zero,e90 <__udivsi3+0x54>
     e58:	28000516 	blt	r5,zero,e70 <__udivsi3+0x34>
     e5c:	294b883a 	add	r5,r5,r5
     e60:	10bfffc4 	addi	r2,r2,-1
     e64:	18c7883a 	add	r3,r3,r3
     e68:	293ffa36 	bltu	r5,r4,e54 <__alt_mem_Onchip_SRAM+0xf8000e54>
     e6c:	18000826 	beq	r3,zero,e90 <__udivsi3+0x54>
     e70:	0005883a 	mov	r2,zero
     e74:	31400236 	bltu	r6,r5,e80 <__udivsi3+0x44>
     e78:	314dc83a 	sub	r6,r6,r5
     e7c:	10c4b03a 	or	r2,r2,r3
     e80:	1806d07a 	srli	r3,r3,1
     e84:	280ad07a 	srli	r5,r5,1
     e88:	183ffa1e 	bne	r3,zero,e74 <__alt_mem_Onchip_SRAM+0xf8000e74>
     e8c:	f800283a 	ret
     e90:	0005883a 	mov	r2,zero
     e94:	f800283a 	ret
     e98:	00c00044 	movi	r3,1
     e9c:	003ff406 	br	e70 <__alt_mem_Onchip_SRAM+0xf8000e70>

00000ea0 <__umodsi3>:
     ea0:	2005883a 	mov	r2,r4
     ea4:	2900122e 	bgeu	r5,r4,ef0 <__umodsi3+0x50>
     ea8:	28001116 	blt	r5,zero,ef0 <__umodsi3+0x50>
     eac:	01800804 	movi	r6,32
     eb0:	00c00044 	movi	r3,1
     eb4:	00000206 	br	ec0 <__umodsi3+0x20>
     eb8:	30000c26 	beq	r6,zero,eec <__umodsi3+0x4c>
     ebc:	28000516 	blt	r5,zero,ed4 <__umodsi3+0x34>
     ec0:	294b883a 	add	r5,r5,r5
     ec4:	31bfffc4 	addi	r6,r6,-1
     ec8:	18c7883a 	add	r3,r3,r3
     ecc:	293ffa36 	bltu	r5,r4,eb8 <__alt_mem_Onchip_SRAM+0xf8000eb8>
     ed0:	18000626 	beq	r3,zero,eec <__umodsi3+0x4c>
     ed4:	1806d07a 	srli	r3,r3,1
     ed8:	11400136 	bltu	r2,r5,ee0 <__umodsi3+0x40>
     edc:	1145c83a 	sub	r2,r2,r5
     ee0:	280ad07a 	srli	r5,r5,1
     ee4:	183ffb1e 	bne	r3,zero,ed4 <__alt_mem_Onchip_SRAM+0xf8000ed4>
     ee8:	f800283a 	ret
     eec:	f800283a 	ret
     ef0:	00c00044 	movi	r3,1
     ef4:	003ff706 	br	ed4 <__alt_mem_Onchip_SRAM+0xf8000ed4>

00000ef8 <__mulsi3>:
     ef8:	0005883a 	mov	r2,zero
     efc:	20000726 	beq	r4,zero,f1c <__mulsi3+0x24>
     f00:	20c0004c 	andi	r3,r4,1
     f04:	2008d07a 	srli	r4,r4,1
     f08:	18000126 	beq	r3,zero,f10 <__mulsi3+0x18>
     f0c:	1145883a 	add	r2,r2,r5
     f10:	294b883a 	add	r5,r5,r5
     f14:	203ffa1e 	bne	r4,zero,f00 <__alt_mem_Onchip_SRAM+0xf8000f00>
     f18:	f800283a 	ret
     f1c:	f800283a 	ret

00000f20 <__fixsfsi>:
     f20:	200ad5fa 	srli	r5,r4,23
     f24:	00c02034 	movhi	r3,128
     f28:	18ffffc4 	addi	r3,r3,-1
     f2c:	29403fcc 	andi	r5,r5,255
     f30:	00801f84 	movi	r2,126
     f34:	1906703a 	and	r3,r3,r4
     f38:	2008d7fa 	srli	r4,r4,31
     f3c:	11400e0e 	bge	r2,r5,f78 <__fixsfsi+0x58>
     f40:	00802744 	movi	r2,157
     f44:	11400816 	blt	r2,r5,f68 <__fixsfsi+0x48>
     f48:	00802544 	movi	r2,149
     f4c:	18c02034 	orhi	r3,r3,128
     f50:	11400b0e 	bge	r2,r5,f80 <__fixsfsi+0x60>
     f54:	28bfda84 	addi	r2,r5,-150
     f58:	1884983a 	sll	r2,r3,r2
     f5c:	20000726 	beq	r4,zero,f7c <__fixsfsi+0x5c>
     f60:	0085c83a 	sub	r2,zero,r2
     f64:	f800283a 	ret
     f68:	00a00034 	movhi	r2,32768
     f6c:	10bfffc4 	addi	r2,r2,-1
     f70:	2085883a 	add	r2,r4,r2
     f74:	f800283a 	ret
     f78:	0005883a 	mov	r2,zero
     f7c:	f800283a 	ret
     f80:	00802584 	movi	r2,150
     f84:	1145c83a 	sub	r2,r2,r5
     f88:	1884d83a 	srl	r2,r3,r2
     f8c:	003ff306 	br	f5c <__alt_mem_Onchip_SRAM+0xf8000f5c>

00000f90 <__floatsisf>:
     f90:	defffd04 	addi	sp,sp,-12
     f94:	dfc00215 	stw	ra,8(sp)
     f98:	dc400115 	stw	r17,4(sp)
     f9c:	dc000015 	stw	r16,0(sp)
     fa0:	20003526 	beq	r4,zero,1078 <__floatsisf+0xe8>
     fa4:	2021883a 	mov	r16,r4
     fa8:	2022d7fa 	srli	r17,r4,31
     fac:	20003616 	blt	r4,zero,1088 <__floatsisf+0xf8>
     fb0:	8009883a 	mov	r4,r16
     fb4:	00010b40 	call	10b4 <__clzsi2>
     fb8:	00c02784 	movi	r3,158
     fbc:	1887c83a 	sub	r3,r3,r2
     fc0:	01002584 	movi	r4,150
     fc4:	20c01416 	blt	r4,r3,1018 <__floatsisf+0x88>
     fc8:	20c9c83a 	sub	r4,r4,r3
     fcc:	8120983a 	sll	r16,r16,r4
     fd0:	00802034 	movhi	r2,128
     fd4:	10bfffc4 	addi	r2,r2,-1
     fd8:	8809883a 	mov	r4,r17
     fdc:	80a0703a 	and	r16,r16,r2
     fe0:	18803fcc 	andi	r2,r3,255
     fe4:	100695fa 	slli	r3,r2,23
     fe8:	20803fcc 	andi	r2,r4,255
     fec:	100897fa 	slli	r4,r2,31
     ff0:	00802034 	movhi	r2,128
     ff4:	10bfffc4 	addi	r2,r2,-1
     ff8:	8084703a 	and	r2,r16,r2
     ffc:	10c4b03a 	or	r2,r2,r3
    1000:	1104b03a 	or	r2,r2,r4
    1004:	dfc00217 	ldw	ra,8(sp)
    1008:	dc400117 	ldw	r17,4(sp)
    100c:	dc000017 	ldw	r16,0(sp)
    1010:	dec00304 	addi	sp,sp,12
    1014:	f800283a 	ret
    1018:	01002644 	movi	r4,153
    101c:	20c01c16 	blt	r4,r3,1090 <__floatsisf+0x100>
    1020:	20c9c83a 	sub	r4,r4,r3
    1024:	8120983a 	sll	r16,r16,r4
    1028:	013f0034 	movhi	r4,64512
    102c:	213fffc4 	addi	r4,r4,-1
    1030:	814001cc 	andi	r5,r16,7
    1034:	8108703a 	and	r4,r16,r4
    1038:	28000426 	beq	r5,zero,104c <__floatsisf+0xbc>
    103c:	840003cc 	andi	r16,r16,15
    1040:	01400104 	movi	r5,4
    1044:	81400126 	beq	r16,r5,104c <__floatsisf+0xbc>
    1048:	2149883a 	add	r4,r4,r5
    104c:	2141002c 	andhi	r5,r4,1024
    1050:	28000526 	beq	r5,zero,1068 <__floatsisf+0xd8>
    1054:	00c027c4 	movi	r3,159
    1058:	1887c83a 	sub	r3,r3,r2
    105c:	00bf0034 	movhi	r2,64512
    1060:	10bfffc4 	addi	r2,r2,-1
    1064:	2088703a 	and	r4,r4,r2
    1068:	202091ba 	slli	r16,r4,6
    106c:	8809883a 	mov	r4,r17
    1070:	8020d27a 	srli	r16,r16,9
    1074:	003fda06 	br	fe0 <__alt_mem_Onchip_SRAM+0xf8000fe0>
    1078:	0009883a 	mov	r4,zero
    107c:	0007883a 	mov	r3,zero
    1080:	0021883a 	mov	r16,zero
    1084:	003fd606 	br	fe0 <__alt_mem_Onchip_SRAM+0xf8000fe0>
    1088:	0121c83a 	sub	r16,zero,r4
    108c:	003fc806 	br	fb0 <__alt_mem_Onchip_SRAM+0xf8000fb0>
    1090:	01002e44 	movi	r4,185
    1094:	20c9c83a 	sub	r4,r4,r3
    1098:	01400144 	movi	r5,5
    109c:	8108983a 	sll	r4,r16,r4
    10a0:	288bc83a 	sub	r5,r5,r2
    10a4:	8160d83a 	srl	r16,r16,r5
    10a8:	2008c03a 	cmpne	r4,r4,zero
    10ac:	8120b03a 	or	r16,r16,r4
    10b0:	003fdd06 	br	1028 <__alt_mem_Onchip_SRAM+0xf8001028>

000010b4 <__clzsi2>:
    10b4:	00bfffd4 	movui	r2,65535
    10b8:	11000536 	bltu	r2,r4,10d0 <__clzsi2+0x1c>
    10bc:	00803fc4 	movi	r2,255
    10c0:	11000f36 	bltu	r2,r4,1100 <__clzsi2+0x4c>
    10c4:	00800804 	movi	r2,32
    10c8:	0007883a 	mov	r3,zero
    10cc:	00000506 	br	10e4 <__clzsi2+0x30>
    10d0:	00804034 	movhi	r2,256
    10d4:	10bfffc4 	addi	r2,r2,-1
    10d8:	11000c2e 	bgeu	r2,r4,110c <__clzsi2+0x58>
    10dc:	00800204 	movi	r2,8
    10e0:	00c00604 	movi	r3,24
    10e4:	20c8d83a 	srl	r4,r4,r3
    10e8:	00c00074 	movhi	r3,1
    10ec:	18da8184 	addi	r3,r3,27142
    10f0:	1909883a 	add	r4,r3,r4
    10f4:	20c00003 	ldbu	r3,0(r4)
    10f8:	10c5c83a 	sub	r2,r2,r3
    10fc:	f800283a 	ret
    1100:	00800604 	movi	r2,24
    1104:	00c00204 	movi	r3,8
    1108:	003ff606 	br	10e4 <__alt_mem_Onchip_SRAM+0xf80010e4>
    110c:	00800404 	movi	r2,16
    1110:	1007883a 	mov	r3,r2
    1114:	003ff306 	br	10e4 <__alt_mem_Onchip_SRAM+0xf80010e4>

00001118 <_printf_r>:
    1118:	defffd04 	addi	sp,sp,-12
    111c:	2805883a 	mov	r2,r5
    1120:	dfc00015 	stw	ra,0(sp)
    1124:	d9800115 	stw	r6,4(sp)
    1128:	d9c00215 	stw	r7,8(sp)
    112c:	21400217 	ldw	r5,8(r4)
    1130:	d9c00104 	addi	r7,sp,4
    1134:	100d883a 	mov	r6,r2
    1138:	000375c0 	call	375c <___vfprintf_internal_r>
    113c:	dfc00017 	ldw	ra,0(sp)
    1140:	dec00304 	addi	sp,sp,12
    1144:	f800283a 	ret

00001148 <printf>:
    1148:	defffc04 	addi	sp,sp,-16
    114c:	dfc00015 	stw	ra,0(sp)
    1150:	d9400115 	stw	r5,4(sp)
    1154:	d9800215 	stw	r6,8(sp)
    1158:	d9c00315 	stw	r7,12(sp)
    115c:	008000b4 	movhi	r2,2
    1160:	10a24904 	addi	r2,r2,-30428
    1164:	10800017 	ldw	r2,0(r2)
    1168:	200b883a 	mov	r5,r4
    116c:	d9800104 	addi	r6,sp,4
    1170:	11000217 	ldw	r4,8(r2)
    1174:	0005a380 	call	5a38 <__vfprintf_internal>
    1178:	dfc00017 	ldw	ra,0(sp)
    117c:	dec00404 	addi	sp,sp,16
    1180:	f800283a 	ret

00001184 <_putchar_r>:
    1184:	21800217 	ldw	r6,8(r4)
    1188:	000a6581 	jmpi	a658 <_putc_r>

0000118c <putchar>:
    118c:	008000b4 	movhi	r2,2
    1190:	10a24904 	addi	r2,r2,-30428
    1194:	200b883a 	mov	r5,r4
    1198:	11000017 	ldw	r4,0(r2)
    119c:	21800217 	ldw	r6,8(r4)
    11a0:	000a6581 	jmpi	a658 <_putc_r>

000011a4 <_puts_r>:
    11a4:	defff604 	addi	sp,sp,-40
    11a8:	dc000715 	stw	r16,28(sp)
    11ac:	2021883a 	mov	r16,r4
    11b0:	2809883a 	mov	r4,r5
    11b4:	dc400815 	stw	r17,32(sp)
    11b8:	dfc00915 	stw	ra,36(sp)
    11bc:	2823883a 	mov	r17,r5
    11c0:	00013b80 	call	13b8 <strlen>
    11c4:	10c00044 	addi	r3,r2,1
    11c8:	d8800115 	stw	r2,4(sp)
    11cc:	00800074 	movhi	r2,1
    11d0:	109ac204 	addi	r2,r2,27400
    11d4:	d8800215 	stw	r2,8(sp)
    11d8:	00800044 	movi	r2,1
    11dc:	d8800315 	stw	r2,12(sp)
    11e0:	00800084 	movi	r2,2
    11e4:	dc400015 	stw	r17,0(sp)
    11e8:	d8c00615 	stw	r3,24(sp)
    11ec:	dec00415 	stw	sp,16(sp)
    11f0:	d8800515 	stw	r2,20(sp)
    11f4:	80000226 	beq	r16,zero,1200 <_puts_r+0x5c>
    11f8:	80800e17 	ldw	r2,56(r16)
    11fc:	10001426 	beq	r2,zero,1250 <_puts_r+0xac>
    1200:	81400217 	ldw	r5,8(r16)
    1204:	2880030b 	ldhu	r2,12(r5)
    1208:	10c8000c 	andi	r3,r2,8192
    120c:	1800061e 	bne	r3,zero,1228 <_puts_r+0x84>
    1210:	29001917 	ldw	r4,100(r5)
    1214:	00f7ffc4 	movi	r3,-8193
    1218:	10880014 	ori	r2,r2,8192
    121c:	20c6703a 	and	r3,r4,r3
    1220:	2880030d 	sth	r2,12(r5)
    1224:	28c01915 	stw	r3,100(r5)
    1228:	d9800404 	addi	r6,sp,16
    122c:	8009883a 	mov	r4,r16
    1230:	0007fa00 	call	7fa0 <__sfvwrite_r>
    1234:	1000091e 	bne	r2,zero,125c <_puts_r+0xb8>
    1238:	00800284 	movi	r2,10
    123c:	dfc00917 	ldw	ra,36(sp)
    1240:	dc400817 	ldw	r17,32(sp)
    1244:	dc000717 	ldw	r16,28(sp)
    1248:	dec00a04 	addi	sp,sp,40
    124c:	f800283a 	ret
    1250:	8009883a 	mov	r4,r16
    1254:	0007b1c0 	call	7b1c <__sinit>
    1258:	003fe906 	br	1200 <__alt_mem_Onchip_SRAM+0xf8001200>
    125c:	00bfffc4 	movi	r2,-1
    1260:	003ff606 	br	123c <__alt_mem_Onchip_SRAM+0xf800123c>

00001264 <puts>:
    1264:	008000b4 	movhi	r2,2
    1268:	10a24904 	addi	r2,r2,-30428
    126c:	200b883a 	mov	r5,r4
    1270:	11000017 	ldw	r4,0(r2)
    1274:	00011a41 	jmpi	11a4 <_puts_r>

00001278 <srand>:
    1278:	008000b4 	movhi	r2,2
    127c:	10a24904 	addi	r2,r2,-30428
    1280:	10800017 	ldw	r2,0(r2)
    1284:	11002915 	stw	r4,164(r2)
    1288:	10002a15 	stw	zero,168(r2)
    128c:	f800283a 	ret

00001290 <rand>:
    1290:	008000b4 	movhi	r2,2
    1294:	defffe04 	addi	sp,sp,-8
    1298:	10a24904 	addi	r2,r2,-30428
    129c:	dc000015 	stw	r16,0(sp)
    12a0:	14000017 	ldw	r16,0(r2)
    12a4:	dfc00115 	stw	ra,4(sp)
    12a8:	01932574 	movhi	r6,19605
    12ac:	81002917 	ldw	r4,164(r16)
    12b0:	81402a17 	ldw	r5,168(r16)
    12b4:	01d614b4 	movhi	r7,22610
    12b8:	319fcb44 	addi	r6,r6,32557
    12bc:	39fd0b44 	addi	r7,r7,-3027
    12c0:	000e5b80 	call	e5b8 <__muldi3>
    12c4:	11000044 	addi	r4,r2,1
    12c8:	2085803a 	cmpltu	r2,r4,r2
    12cc:	10c7883a 	add	r3,r2,r3
    12d0:	00a00034 	movhi	r2,32768
    12d4:	10bfffc4 	addi	r2,r2,-1
    12d8:	1884703a 	and	r2,r3,r2
    12dc:	81002915 	stw	r4,164(r16)
    12e0:	80c02a15 	stw	r3,168(r16)
    12e4:	dfc00117 	ldw	ra,4(sp)
    12e8:	dc000017 	ldw	r16,0(sp)
    12ec:	dec00204 	addi	sp,sp,8
    12f0:	f800283a 	ret

000012f4 <_sprintf_r>:
    12f4:	deffe404 	addi	sp,sp,-112
    12f8:	2807883a 	mov	r3,r5
    12fc:	dfc01a15 	stw	ra,104(sp)
    1300:	d9c01b15 	stw	r7,108(sp)
    1304:	00a00034 	movhi	r2,32768
    1308:	10bfffc4 	addi	r2,r2,-1
    130c:	02008204 	movi	r8,520
    1310:	d8800215 	stw	r2,8(sp)
    1314:	d8800515 	stw	r2,20(sp)
    1318:	d9c01b04 	addi	r7,sp,108
    131c:	d80b883a 	mov	r5,sp
    1320:	00bfffc4 	movi	r2,-1
    1324:	d8c00015 	stw	r3,0(sp)
    1328:	d8c00415 	stw	r3,16(sp)
    132c:	da00030d 	sth	r8,12(sp)
    1330:	d880038d 	sth	r2,14(sp)
    1334:	00014500 	call	1450 <___svfprintf_internal_r>
    1338:	d8c00017 	ldw	r3,0(sp)
    133c:	18000005 	stb	zero,0(r3)
    1340:	dfc01a17 	ldw	ra,104(sp)
    1344:	dec01c04 	addi	sp,sp,112
    1348:	f800283a 	ret

0000134c <sprintf>:
    134c:	deffe304 	addi	sp,sp,-116
    1350:	2007883a 	mov	r3,r4
    1354:	dfc01a15 	stw	ra,104(sp)
    1358:	d9801b15 	stw	r6,108(sp)
    135c:	d9c01c15 	stw	r7,112(sp)
    1360:	010000b4 	movhi	r4,2
    1364:	21224904 	addi	r4,r4,-30428
    1368:	21000017 	ldw	r4,0(r4)
    136c:	00a00034 	movhi	r2,32768
    1370:	10bfffc4 	addi	r2,r2,-1
    1374:	280d883a 	mov	r6,r5
    1378:	02008204 	movi	r8,520
    137c:	d8800215 	stw	r2,8(sp)
    1380:	d8800515 	stw	r2,20(sp)
    1384:	d9c01b04 	addi	r7,sp,108
    1388:	d80b883a 	mov	r5,sp
    138c:	00bfffc4 	movi	r2,-1
    1390:	d8c00015 	stw	r3,0(sp)
    1394:	d8c00415 	stw	r3,16(sp)
    1398:	da00030d 	sth	r8,12(sp)
    139c:	d880038d 	sth	r2,14(sp)
    13a0:	00014500 	call	1450 <___svfprintf_internal_r>
    13a4:	d8c00017 	ldw	r3,0(sp)
    13a8:	18000005 	stb	zero,0(r3)
    13ac:	dfc01a17 	ldw	ra,104(sp)
    13b0:	dec01d04 	addi	sp,sp,116
    13b4:	f800283a 	ret

000013b8 <strlen>:
    13b8:	208000cc 	andi	r2,r4,3
    13bc:	10002026 	beq	r2,zero,1440 <strlen+0x88>
    13c0:	20800007 	ldb	r2,0(r4)
    13c4:	10002026 	beq	r2,zero,1448 <strlen+0x90>
    13c8:	2005883a 	mov	r2,r4
    13cc:	00000206 	br	13d8 <strlen+0x20>
    13d0:	10c00007 	ldb	r3,0(r2)
    13d4:	18001826 	beq	r3,zero,1438 <strlen+0x80>
    13d8:	10800044 	addi	r2,r2,1
    13dc:	10c000cc 	andi	r3,r2,3
    13e0:	183ffb1e 	bne	r3,zero,13d0 <__alt_mem_Onchip_SRAM+0xf80013d0>
    13e4:	10c00017 	ldw	r3,0(r2)
    13e8:	01ffbff4 	movhi	r7,65279
    13ec:	39ffbfc4 	addi	r7,r7,-257
    13f0:	00ca303a 	nor	r5,zero,r3
    13f4:	01a02074 	movhi	r6,32897
    13f8:	19c7883a 	add	r3,r3,r7
    13fc:	31a02004 	addi	r6,r6,-32640
    1400:	1946703a 	and	r3,r3,r5
    1404:	1986703a 	and	r3,r3,r6
    1408:	1800091e 	bne	r3,zero,1430 <strlen+0x78>
    140c:	10800104 	addi	r2,r2,4
    1410:	10c00017 	ldw	r3,0(r2)
    1414:	19cb883a 	add	r5,r3,r7
    1418:	00c6303a 	nor	r3,zero,r3
    141c:	28c6703a 	and	r3,r5,r3
    1420:	1986703a 	and	r3,r3,r6
    1424:	183ff926 	beq	r3,zero,140c <__alt_mem_Onchip_SRAM+0xf800140c>
    1428:	00000106 	br	1430 <strlen+0x78>
    142c:	10800044 	addi	r2,r2,1
    1430:	10c00007 	ldb	r3,0(r2)
    1434:	183ffd1e 	bne	r3,zero,142c <__alt_mem_Onchip_SRAM+0xf800142c>
    1438:	1105c83a 	sub	r2,r2,r4
    143c:	f800283a 	ret
    1440:	2005883a 	mov	r2,r4
    1444:	003fe706 	br	13e4 <__alt_mem_Onchip_SRAM+0xf80013e4>
    1448:	0005883a 	mov	r2,zero
    144c:	f800283a 	ret

00001450 <___svfprintf_internal_r>:
    1450:	deffb704 	addi	sp,sp,-292
    1454:	dfc04815 	stw	ra,288(sp)
    1458:	ddc04615 	stw	r23,280(sp)
    145c:	d9402d15 	stw	r5,180(sp)
    1460:	d9003915 	stw	r4,228(sp)
    1464:	302f883a 	mov	r23,r6
    1468:	d9c02e15 	stw	r7,184(sp)
    146c:	df004715 	stw	fp,284(sp)
    1470:	dd804515 	stw	r22,276(sp)
    1474:	dd404415 	stw	r21,272(sp)
    1478:	dd004315 	stw	r20,268(sp)
    147c:	dcc04215 	stw	r19,264(sp)
    1480:	dc804115 	stw	r18,260(sp)
    1484:	dc404015 	stw	r17,256(sp)
    1488:	dc003f15 	stw	r16,252(sp)
    148c:	00086f80 	call	86f8 <_localeconv_r>
    1490:	10800017 	ldw	r2,0(r2)
    1494:	1009883a 	mov	r4,r2
    1498:	d8803415 	stw	r2,208(sp)
    149c:	00013b80 	call	13b8 <strlen>
    14a0:	d8c02d17 	ldw	r3,180(sp)
    14a4:	d8803815 	stw	r2,224(sp)
    14a8:	1880030b 	ldhu	r2,12(r3)
    14ac:	1080200c 	andi	r2,r2,128
    14b0:	10000226 	beq	r2,zero,14bc <___svfprintf_internal_r+0x6c>
    14b4:	18800417 	ldw	r2,16(r3)
    14b8:	1006b126 	beq	r2,zero,2f80 <___svfprintf_internal_r+0x1b30>
    14bc:	dcc03917 	ldw	r19,228(sp)
    14c0:	d8c00404 	addi	r3,sp,16
    14c4:	05400074 	movhi	r21,1
    14c8:	d9001e04 	addi	r4,sp,120
    14cc:	ad5ad384 	addi	r21,r21,27470
    14d0:	d8c01e15 	stw	r3,120(sp)
    14d4:	d8002015 	stw	zero,128(sp)
    14d8:	d8001f15 	stw	zero,124(sp)
    14dc:	d8003315 	stw	zero,204(sp)
    14e0:	d8003615 	stw	zero,216(sp)
    14e4:	d8003715 	stw	zero,220(sp)
    14e8:	1811883a 	mov	r8,r3
    14ec:	d8003a15 	stw	zero,232(sp)
    14f0:	d8003b15 	stw	zero,236(sp)
    14f4:	d8002f15 	stw	zero,188(sp)
    14f8:	d9002815 	stw	r4,160(sp)
    14fc:	b8800007 	ldb	r2,0(r23)
    1500:	10027726 	beq	r2,zero,1ee0 <___svfprintf_internal_r+0xa90>
    1504:	00c00944 	movi	r3,37
    1508:	b823883a 	mov	r17,r23
    150c:	10c0021e 	bne	r2,r3,1518 <___svfprintf_internal_r+0xc8>
    1510:	00001406 	br	1564 <___svfprintf_internal_r+0x114>
    1514:	10c00326 	beq	r2,r3,1524 <___svfprintf_internal_r+0xd4>
    1518:	8c400044 	addi	r17,r17,1
    151c:	88800007 	ldb	r2,0(r17)
    1520:	103ffc1e 	bne	r2,zero,1514 <__alt_mem_Onchip_SRAM+0xf8001514>
    1524:	8de1c83a 	sub	r16,r17,r23
    1528:	80000e26 	beq	r16,zero,1564 <___svfprintf_internal_r+0x114>
    152c:	d8c02017 	ldw	r3,128(sp)
    1530:	d8801f17 	ldw	r2,124(sp)
    1534:	45c00015 	stw	r23,0(r8)
    1538:	1c07883a 	add	r3,r3,r16
    153c:	10800044 	addi	r2,r2,1
    1540:	d8c02015 	stw	r3,128(sp)
    1544:	44000115 	stw	r16,4(r8)
    1548:	d8801f15 	stw	r2,124(sp)
    154c:	00c001c4 	movi	r3,7
    1550:	18809916 	blt	r3,r2,17b8 <___svfprintf_internal_r+0x368>
    1554:	42000204 	addi	r8,r8,8
    1558:	d9402f17 	ldw	r5,188(sp)
    155c:	2c0b883a 	add	r5,r5,r16
    1560:	d9402f15 	stw	r5,188(sp)
    1564:	88800007 	ldb	r2,0(r17)
    1568:	10009a26 	beq	r2,zero,17d4 <___svfprintf_internal_r+0x384>
    156c:	8dc00044 	addi	r23,r17,1
    1570:	8c400047 	ldb	r17,1(r17)
    1574:	0021883a 	mov	r16,zero
    1578:	00bfffc4 	movi	r2,-1
    157c:	0025883a 	mov	r18,zero
    1580:	dc002905 	stb	r16,164(sp)
    1584:	d8002785 	stb	zero,158(sp)
    1588:	d8002b05 	stb	zero,172(sp)
    158c:	d8802a15 	stw	r2,168(sp)
    1590:	d8003115 	stw	zero,196(sp)
    1594:	05001604 	movi	r20,88
    1598:	05800244 	movi	r22,9
    159c:	4039883a 	mov	fp,r8
    15a0:	9021883a 	mov	r16,r18
    15a4:	bdc00044 	addi	r23,r23,1
    15a8:	88bff804 	addi	r2,r17,-32
    15ac:	a0831e36 	bltu	r20,r2,2228 <___svfprintf_internal_r+0xdd8>
    15b0:	100490ba 	slli	r2,r2,2
    15b4:	00c00034 	movhi	r3,0
    15b8:	18c57204 	addi	r3,r3,5576
    15bc:	10c5883a 	add	r2,r2,r3
    15c0:	10800017 	ldw	r2,0(r2)
    15c4:	1000683a 	jmp	r2
    15c8:	00002170 	cmpltui	zero,zero,133
    15cc:	00002228 	cmpgeui	zero,zero,136
    15d0:	00002228 	cmpgeui	zero,zero,136
    15d4:	00002164 	muli	zero,zero,133
    15d8:	00002228 	cmpgeui	zero,zero,136
    15dc:	00002228 	cmpgeui	zero,zero,136
    15e0:	00002228 	cmpgeui	zero,zero,136
    15e4:	00002228 	cmpgeui	zero,zero,136
    15e8:	00002228 	cmpgeui	zero,zero,136
    15ec:	00002228 	cmpgeui	zero,zero,136
    15f0:	00001830 	cmpltui	zero,zero,96
    15f4:	00002074 	movhi	zero,129
    15f8:	00002228 	cmpgeui	zero,zero,136
    15fc:	0000173c 	xorhi	zero,zero,92
    1600:	00001854 	movui	zero,97
    1604:	00002228 	cmpgeui	zero,zero,136
    1608:	000018e0 	cmpeqi	zero,zero,99
    160c:	000018a4 	muli	zero,zero,98
    1610:	000018a4 	muli	zero,zero,98
    1614:	000018a4 	muli	zero,zero,98
    1618:	000018a4 	muli	zero,zero,98
    161c:	000018a4 	muli	zero,zero,98
    1620:	000018a4 	muli	zero,zero,98
    1624:	000018a4 	muli	zero,zero,98
    1628:	000018a4 	muli	zero,zero,98
    162c:	000018a4 	muli	zero,zero,98
    1630:	00002228 	cmpgeui	zero,zero,136
    1634:	00002228 	cmpgeui	zero,zero,136
    1638:	00002228 	cmpgeui	zero,zero,136
    163c:	00002228 	cmpgeui	zero,zero,136
    1640:	00002228 	cmpgeui	zero,zero,136
    1644:	00002228 	cmpgeui	zero,zero,136
    1648:	00002228 	cmpgeui	zero,zero,136
    164c:	00002228 	cmpgeui	zero,zero,136
    1650:	00002228 	cmpgeui	zero,zero,136
    1654:	00002228 	cmpgeui	zero,zero,136
    1658:	000019a4 	muli	zero,zero,102
    165c:	000018ec 	andhi	zero,zero,99
    1660:	00002228 	cmpgeui	zero,zero,136
    1664:	000018ec 	andhi	zero,zero,99
    1668:	00002228 	cmpgeui	zero,zero,136
    166c:	00002228 	cmpgeui	zero,zero,136
    1670:	00002228 	cmpgeui	zero,zero,136
    1674:	00002228 	cmpgeui	zero,zero,136
    1678:	00001998 	cmpnei	zero,zero,102
    167c:	00002228 	cmpgeui	zero,zero,136
    1680:	00002228 	cmpgeui	zero,zero,136
    1684:	00001a6c 	andhi	zero,zero,105
    1688:	00002228 	cmpgeui	zero,zero,136
    168c:	00002228 	cmpgeui	zero,zero,136
    1690:	00002228 	cmpgeui	zero,zero,136
    1694:	00002228 	cmpgeui	zero,zero,136
    1698:	00002228 	cmpgeui	zero,zero,136
    169c:	00001ee8 	cmpgeui	zero,zero,123
    16a0:	00002228 	cmpgeui	zero,zero,136
    16a4:	00002228 	cmpgeui	zero,zero,136
    16a8:	00001f54 	movui	zero,125
    16ac:	00002228 	cmpgeui	zero,zero,136
    16b0:	00002228 	cmpgeui	zero,zero,136
    16b4:	00002228 	cmpgeui	zero,zero,136
    16b8:	00002228 	cmpgeui	zero,zero,136
    16bc:	00002228 	cmpgeui	zero,zero,136
    16c0:	00002228 	cmpgeui	zero,zero,136
    16c4:	00002228 	cmpgeui	zero,zero,136
    16c8:	00002228 	cmpgeui	zero,zero,136
    16cc:	00002228 	cmpgeui	zero,zero,136
    16d0:	00002228 	cmpgeui	zero,zero,136
    16d4:	00002010 	cmplti	zero,zero,128
    16d8:	00002190 	cmplti	zero,zero,134
    16dc:	000018ec 	andhi	zero,zero,99
    16e0:	000018ec 	andhi	zero,zero,99
    16e4:	000018ec 	andhi	zero,zero,99
    16e8:	00002204 	movi	zero,136
    16ec:	00002190 	cmplti	zero,zero,134
    16f0:	00002228 	cmpgeui	zero,zero,136
    16f4:	00002228 	cmpgeui	zero,zero,136
    16f8:	000021b0 	cmpltui	zero,zero,134
    16fc:	00002228 	cmpgeui	zero,zero,136
    1700:	000021c4 	movi	zero,135
    1704:	00002054 	movui	zero,129
    1708:	00001748 	cmpgei	zero,zero,93
    170c:	0000208c 	andi	zero,zero,130
    1710:	00002228 	cmpgeui	zero,zero,136
    1714:	00002098 	cmpnei	zero,zero,130
    1718:	00002228 	cmpgeui	zero,zero,136
    171c:	000020fc 	xorhi	zero,zero,131
    1720:	00002228 	cmpgeui	zero,zero,136
    1724:	00002228 	cmpgeui	zero,zero,136
    1728:	0000211c 	xori	zero,zero,132
    172c:	d8c03117 	ldw	r3,196(sp)
    1730:	d8802e15 	stw	r2,184(sp)
    1734:	00c7c83a 	sub	r3,zero,r3
    1738:	d8c03115 	stw	r3,196(sp)
    173c:	84000114 	ori	r16,r16,4
    1740:	bc400007 	ldb	r17,0(r23)
    1744:	003f9706 	br	15a4 <__alt_mem_Onchip_SRAM+0xf80015a4>
    1748:	00800c04 	movi	r2,48
    174c:	d8802705 	stb	r2,156(sp)
    1750:	00801e04 	movi	r2,120
    1754:	d8802745 	stb	r2,157(sp)
    1758:	d9002a17 	ldw	r4,168(sp)
    175c:	d8802e17 	ldw	r2,184(sp)
    1760:	d8002785 	stb	zero,158(sp)
    1764:	e011883a 	mov	r8,fp
    1768:	10c00104 	addi	r3,r2,4
    176c:	15000017 	ldw	r20,0(r2)
    1770:	002d883a 	mov	r22,zero
    1774:	80800094 	ori	r2,r16,2
    1778:	2002b616 	blt	r4,zero,2254 <___svfprintf_internal_r+0xe04>
    177c:	00bfdfc4 	movi	r2,-129
    1780:	80a4703a 	and	r18,r16,r2
    1784:	d8c02e15 	stw	r3,184(sp)
    1788:	94800094 	ori	r18,r18,2
    178c:	a002a01e 	bne	r20,zero,2210 <___svfprintf_internal_r+0xdc0>
    1790:	01400074 	movhi	r5,1
    1794:	295acc04 	addi	r5,r5,27440
    1798:	d9403a15 	stw	r5,232(sp)
    179c:	04401e04 	movi	r17,120
    17a0:	d8c02a17 	ldw	r3,168(sp)
    17a4:	0039883a 	mov	fp,zero
    17a8:	1801e626 	beq	r3,zero,1f44 <___svfprintf_internal_r+0xaf4>
    17ac:	0029883a 	mov	r20,zero
    17b0:	002d883a 	mov	r22,zero
    17b4:	00020506 	br	1fcc <___svfprintf_internal_r+0xb7c>
    17b8:	d9402d17 	ldw	r5,180(sp)
    17bc:	d9801e04 	addi	r6,sp,120
    17c0:	9809883a 	mov	r4,r19
    17c4:	000b0040 	call	b004 <__ssprint_r>
    17c8:	1000081e 	bne	r2,zero,17ec <___svfprintf_internal_r+0x39c>
    17cc:	da000404 	addi	r8,sp,16
    17d0:	003f6106 	br	1558 <__alt_mem_Onchip_SRAM+0xf8001558>
    17d4:	d8802017 	ldw	r2,128(sp)
    17d8:	10000426 	beq	r2,zero,17ec <___svfprintf_internal_r+0x39c>
    17dc:	d9402d17 	ldw	r5,180(sp)
    17e0:	d9003917 	ldw	r4,228(sp)
    17e4:	d9801e04 	addi	r6,sp,120
    17e8:	000b0040 	call	b004 <__ssprint_r>
    17ec:	d8802d17 	ldw	r2,180(sp)
    17f0:	10c0030b 	ldhu	r3,12(r2)
    17f4:	d8802f17 	ldw	r2,188(sp)
    17f8:	18c0100c 	andi	r3,r3,64
    17fc:	1806251e 	bne	r3,zero,3094 <___svfprintf_internal_r+0x1c44>
    1800:	dfc04817 	ldw	ra,288(sp)
    1804:	df004717 	ldw	fp,284(sp)
    1808:	ddc04617 	ldw	r23,280(sp)
    180c:	dd804517 	ldw	r22,276(sp)
    1810:	dd404417 	ldw	r21,272(sp)
    1814:	dd004317 	ldw	r20,268(sp)
    1818:	dcc04217 	ldw	r19,264(sp)
    181c:	dc804117 	ldw	r18,260(sp)
    1820:	dc404017 	ldw	r17,256(sp)
    1824:	dc003f17 	ldw	r16,252(sp)
    1828:	dec04904 	addi	sp,sp,292
    182c:	f800283a 	ret
    1830:	d9002e17 	ldw	r4,184(sp)
    1834:	d9402e17 	ldw	r5,184(sp)
    1838:	21000017 	ldw	r4,0(r4)
    183c:	28800104 	addi	r2,r5,4
    1840:	d9003115 	stw	r4,196(sp)
    1844:	203fb916 	blt	r4,zero,172c <__alt_mem_Onchip_SRAM+0xf800172c>
    1848:	d8802e15 	stw	r2,184(sp)
    184c:	bc400007 	ldb	r17,0(r23)
    1850:	003f5406 	br	15a4 <__alt_mem_Onchip_SRAM+0xf80015a4>
    1854:	bc400007 	ldb	r17,0(r23)
    1858:	01000a84 	movi	r4,42
    185c:	b8c00044 	addi	r3,r23,1
    1860:	89076926 	beq	r17,r4,3608 <___svfprintf_internal_r+0x21b8>
    1864:	8cbff404 	addi	r18,r17,-48
    1868:	b486b936 	bltu	r22,r18,3350 <___svfprintf_internal_r+0x1f00>
    186c:	0009883a 	mov	r4,zero
    1870:	1823883a 	mov	r17,r3
    1874:	01400284 	movi	r5,10
    1878:	0000ef80 	call	ef8 <__mulsi3>
    187c:	88c00007 	ldb	r3,0(r17)
    1880:	1489883a 	add	r4,r2,r18
    1884:	8dc00044 	addi	r23,r17,1
    1888:	1cbff404 	addi	r18,r3,-48
    188c:	b823883a 	mov	r17,r23
    1890:	b4bff82e 	bgeu	r22,r18,1874 <__alt_mem_Onchip_SRAM+0xf8001874>
    1894:	1823883a 	mov	r17,r3
    1898:	20060416 	blt	r4,zero,30ac <___svfprintf_internal_r+0x1c5c>
    189c:	d9002a15 	stw	r4,168(sp)
    18a0:	003f4106 	br	15a8 <__alt_mem_Onchip_SRAM+0xf80015a8>
    18a4:	8cbff404 	addi	r18,r17,-48
    18a8:	d8003115 	stw	zero,196(sp)
    18ac:	0009883a 	mov	r4,zero
    18b0:	b823883a 	mov	r17,r23
    18b4:	01400284 	movi	r5,10
    18b8:	0000ef80 	call	ef8 <__mulsi3>
    18bc:	88c00007 	ldb	r3,0(r17)
    18c0:	9089883a 	add	r4,r18,r2
    18c4:	bdc00044 	addi	r23,r23,1
    18c8:	1cbff404 	addi	r18,r3,-48
    18cc:	b823883a 	mov	r17,r23
    18d0:	b4bff82e 	bgeu	r22,r18,18b4 <__alt_mem_Onchip_SRAM+0xf80018b4>
    18d4:	1823883a 	mov	r17,r3
    18d8:	d9003115 	stw	r4,196(sp)
    18dc:	003f3206 	br	15a8 <__alt_mem_Onchip_SRAM+0xf80015a8>
    18e0:	84002014 	ori	r16,r16,128
    18e4:	bc400007 	ldb	r17,0(r23)
    18e8:	003f2e06 	br	15a4 <__alt_mem_Onchip_SRAM+0xf80015a4>
    18ec:	8025883a 	mov	r18,r16
    18f0:	dc002903 	ldbu	r16,164(sp)
    18f4:	e011883a 	mov	r8,fp
    18f8:	84003fcc 	andi	r16,r16,255
    18fc:	8007721e 	bne	r16,zero,36c8 <___svfprintf_internal_r+0x2278>
    1900:	9080020c 	andi	r2,r18,8
    1904:	1004a526 	beq	r2,zero,2b9c <___svfprintf_internal_r+0x174c>
    1908:	d9002e17 	ldw	r4,184(sp)
    190c:	d9402e17 	ldw	r5,184(sp)
    1910:	d8802e17 	ldw	r2,184(sp)
    1914:	21000017 	ldw	r4,0(r4)
    1918:	29400117 	ldw	r5,4(r5)
    191c:	10800204 	addi	r2,r2,8
    1920:	d9003615 	stw	r4,216(sp)
    1924:	d9403715 	stw	r5,220(sp)
    1928:	d8802e15 	stw	r2,184(sp)
    192c:	d9003617 	ldw	r4,216(sp)
    1930:	d9403717 	ldw	r5,220(sp)
    1934:	da003e15 	stw	r8,248(sp)
    1938:	04000044 	movi	r16,1
    193c:	000ad240 	call	ad24 <__fpclassifyd>
    1940:	da003e17 	ldw	r8,248(sp)
    1944:	1404731e 	bne	r2,r16,2b14 <___svfprintf_internal_r+0x16c4>
    1948:	d9003617 	ldw	r4,216(sp)
    194c:	d9403717 	ldw	r5,220(sp)
    1950:	000d883a 	mov	r6,zero
    1954:	000f883a 	mov	r7,zero
    1958:	00106640 	call	10664 <__ledf2>
    195c:	da003e17 	ldw	r8,248(sp)
    1960:	10061b16 	blt	r2,zero,31d0 <___svfprintf_internal_r+0x1d80>
    1964:	df002783 	ldbu	fp,158(sp)
    1968:	008011c4 	movi	r2,71
    196c:	1445810e 	bge	r2,r17,2f74 <___svfprintf_internal_r+0x1b24>
    1970:	04000074 	movhi	r16,1
    1974:	841ac404 	addi	r16,r16,27408
    1978:	00c000c4 	movi	r3,3
    197c:	00bfdfc4 	movi	r2,-129
    1980:	d8c02915 	stw	r3,164(sp)
    1984:	90a4703a 	and	r18,r18,r2
    1988:	d8c02b15 	stw	r3,172(sp)
    198c:	d8002a15 	stw	zero,168(sp)
    1990:	d8003215 	stw	zero,200(sp)
    1994:	00006c06 	br	1b48 <___svfprintf_internal_r+0x6f8>
    1998:	84000214 	ori	r16,r16,8
    199c:	bc400007 	ldb	r17,0(r23)
    19a0:	003f0006 	br	15a4 <__alt_mem_Onchip_SRAM+0xf80015a4>
    19a4:	8025883a 	mov	r18,r16
    19a8:	dc002903 	ldbu	r16,164(sp)
    19ac:	e011883a 	mov	r8,fp
    19b0:	84003fcc 	andi	r16,r16,255
    19b4:	80073f1e 	bne	r16,zero,36b4 <___svfprintf_internal_r+0x2264>
    19b8:	94800414 	ori	r18,r18,16
    19bc:	9080080c 	andi	r2,r18,32
    19c0:	1003bb26 	beq	r2,zero,28b0 <___svfprintf_internal_r+0x1460>
    19c4:	d9002e17 	ldw	r4,184(sp)
    19c8:	20800117 	ldw	r2,4(r4)
    19cc:	25000017 	ldw	r20,0(r4)
    19d0:	21000204 	addi	r4,r4,8
    19d4:	d9002e15 	stw	r4,184(sp)
    19d8:	102d883a 	mov	r22,r2
    19dc:	1003bd16 	blt	r2,zero,28d4 <___svfprintf_internal_r+0x1484>
    19e0:	d9002a17 	ldw	r4,168(sp)
    19e4:	df002783 	ldbu	fp,158(sp)
    19e8:	2003d016 	blt	r4,zero,292c <___svfprintf_internal_r+0x14dc>
    19ec:	00ffdfc4 	movi	r3,-129
    19f0:	a584b03a 	or	r2,r20,r22
    19f4:	90e4703a 	and	r18,r18,r3
    19f8:	10015026 	beq	r2,zero,1f3c <___svfprintf_internal_r+0xaec>
    19fc:	b0037026 	beq	r22,zero,27c0 <___svfprintf_internal_r+0x1370>
    1a00:	dc402915 	stw	r17,164(sp)
    1a04:	dc001e04 	addi	r16,sp,120
    1a08:	b023883a 	mov	r17,r22
    1a0c:	402d883a 	mov	r22,r8
    1a10:	a009883a 	mov	r4,r20
    1a14:	880b883a 	mov	r5,r17
    1a18:	01800284 	movi	r6,10
    1a1c:	000f883a 	mov	r7,zero
    1a20:	000ecc00 	call	ecc0 <__umoddi3>
    1a24:	10800c04 	addi	r2,r2,48
    1a28:	843fffc4 	addi	r16,r16,-1
    1a2c:	a009883a 	mov	r4,r20
    1a30:	880b883a 	mov	r5,r17
    1a34:	80800005 	stb	r2,0(r16)
    1a38:	01800284 	movi	r6,10
    1a3c:	000f883a 	mov	r7,zero
    1a40:	000e6c40 	call	e6c4 <__udivdi3>
    1a44:	1029883a 	mov	r20,r2
    1a48:	10c4b03a 	or	r2,r2,r3
    1a4c:	1823883a 	mov	r17,r3
    1a50:	103fef1e 	bne	r2,zero,1a10 <__alt_mem_Onchip_SRAM+0xf8001a10>
    1a54:	d8c02817 	ldw	r3,160(sp)
    1a58:	dc402917 	ldw	r17,164(sp)
    1a5c:	b011883a 	mov	r8,r22
    1a60:	1c07c83a 	sub	r3,r3,r16
    1a64:	d8c02b15 	stw	r3,172(sp)
    1a68:	00003106 	br	1b30 <___svfprintf_internal_r+0x6e0>
    1a6c:	8025883a 	mov	r18,r16
    1a70:	dc002903 	ldbu	r16,164(sp)
    1a74:	e011883a 	mov	r8,fp
    1a78:	84003fcc 	andi	r16,r16,255
    1a7c:	80070a1e 	bne	r16,zero,36a8 <___svfprintf_internal_r+0x2258>
    1a80:	94800414 	ori	r18,r18,16
    1a84:	9080080c 	andi	r2,r18,32
    1a88:	1002f626 	beq	r2,zero,2664 <___svfprintf_internal_r+0x1214>
    1a8c:	d9002e17 	ldw	r4,184(sp)
    1a90:	d9402a17 	ldw	r5,168(sp)
    1a94:	d8002785 	stb	zero,158(sp)
    1a98:	20800204 	addi	r2,r4,8
    1a9c:	25000017 	ldw	r20,0(r4)
    1aa0:	25800117 	ldw	r22,4(r4)
    1aa4:	28043716 	blt	r5,zero,2b84 <___svfprintf_internal_r+0x1734>
    1aa8:	013fdfc4 	movi	r4,-129
    1aac:	a586b03a 	or	r3,r20,r22
    1ab0:	d8802e15 	stw	r2,184(sp)
    1ab4:	9124703a 	and	r18,r18,r4
    1ab8:	1802f71e 	bne	r3,zero,2698 <___svfprintf_internal_r+0x1248>
    1abc:	d9402a17 	ldw	r5,168(sp)
    1ac0:	0039883a 	mov	fp,zero
    1ac4:	2806df26 	beq	r5,zero,3644 <___svfprintf_internal_r+0x21f4>
    1ac8:	0029883a 	mov	r20,zero
    1acc:	002d883a 	mov	r22,zero
    1ad0:	dc001e04 	addi	r16,sp,120
    1ad4:	a006d0fa 	srli	r3,r20,3
    1ad8:	b008977a 	slli	r4,r22,29
    1adc:	b02cd0fa 	srli	r22,r22,3
    1ae0:	a50001cc 	andi	r20,r20,7
    1ae4:	a0800c04 	addi	r2,r20,48
    1ae8:	843fffc4 	addi	r16,r16,-1
    1aec:	20e8b03a 	or	r20,r4,r3
    1af0:	80800005 	stb	r2,0(r16)
    1af4:	a586b03a 	or	r3,r20,r22
    1af8:	183ff61e 	bne	r3,zero,1ad4 <__alt_mem_Onchip_SRAM+0xf8001ad4>
    1afc:	90c0004c 	andi	r3,r18,1
    1b00:	18013f26 	beq	r3,zero,2000 <___svfprintf_internal_r+0xbb0>
    1b04:	10803fcc 	andi	r2,r2,255
    1b08:	1080201c 	xori	r2,r2,128
    1b0c:	10bfe004 	addi	r2,r2,-128
    1b10:	00c00c04 	movi	r3,48
    1b14:	10c13a26 	beq	r2,r3,2000 <___svfprintf_internal_r+0xbb0>
    1b18:	80ffffc5 	stb	r3,-1(r16)
    1b1c:	d8c02817 	ldw	r3,160(sp)
    1b20:	80bfffc4 	addi	r2,r16,-1
    1b24:	1021883a 	mov	r16,r2
    1b28:	1887c83a 	sub	r3,r3,r2
    1b2c:	d8c02b15 	stw	r3,172(sp)
    1b30:	d8802b17 	ldw	r2,172(sp)
    1b34:	d9002a17 	ldw	r4,168(sp)
    1b38:	1100010e 	bge	r2,r4,1b40 <___svfprintf_internal_r+0x6f0>
    1b3c:	2005883a 	mov	r2,r4
    1b40:	d8802915 	stw	r2,164(sp)
    1b44:	d8003215 	stw	zero,200(sp)
    1b48:	e7003fcc 	andi	fp,fp,255
    1b4c:	e700201c 	xori	fp,fp,128
    1b50:	e73fe004 	addi	fp,fp,-128
    1b54:	e0000326 	beq	fp,zero,1b64 <___svfprintf_internal_r+0x714>
    1b58:	d8c02917 	ldw	r3,164(sp)
    1b5c:	18c00044 	addi	r3,r3,1
    1b60:	d8c02915 	stw	r3,164(sp)
    1b64:	90c0008c 	andi	r3,r18,2
    1b68:	d8c02c15 	stw	r3,176(sp)
    1b6c:	18000326 	beq	r3,zero,1b7c <___svfprintf_internal_r+0x72c>
    1b70:	d8c02917 	ldw	r3,164(sp)
    1b74:	18c00084 	addi	r3,r3,2
    1b78:	d8c02915 	stw	r3,164(sp)
    1b7c:	90c0210c 	andi	r3,r18,132
    1b80:	d8c03015 	stw	r3,192(sp)
    1b84:	1801c31e 	bne	r3,zero,2294 <___svfprintf_internal_r+0xe44>
    1b88:	d9003117 	ldw	r4,196(sp)
    1b8c:	d8c02917 	ldw	r3,164(sp)
    1b90:	20e9c83a 	sub	r20,r4,r3
    1b94:	0501bf0e 	bge	zero,r20,2294 <___svfprintf_internal_r+0xe44>
    1b98:	02400404 	movi	r9,16
    1b9c:	d8c02017 	ldw	r3,128(sp)
    1ba0:	d8801f17 	ldw	r2,124(sp)
    1ba4:	4d053d0e 	bge	r9,r20,309c <___svfprintf_internal_r+0x1c4c>
    1ba8:	01400074 	movhi	r5,1
    1bac:	295ad784 	addi	r5,r5,27486
    1bb0:	dc403c15 	stw	r17,240(sp)
    1bb4:	d9403515 	stw	r5,212(sp)
    1bb8:	a023883a 	mov	r17,r20
    1bbc:	482d883a 	mov	r22,r9
    1bc0:	9029883a 	mov	r20,r18
    1bc4:	070001c4 	movi	fp,7
    1bc8:	8025883a 	mov	r18,r16
    1bcc:	dc002d17 	ldw	r16,180(sp)
    1bd0:	00000306 	br	1be0 <___svfprintf_internal_r+0x790>
    1bd4:	8c7ffc04 	addi	r17,r17,-16
    1bd8:	42000204 	addi	r8,r8,8
    1bdc:	b440130e 	bge	r22,r17,1c2c <___svfprintf_internal_r+0x7dc>
    1be0:	01000074 	movhi	r4,1
    1be4:	18c00404 	addi	r3,r3,16
    1be8:	10800044 	addi	r2,r2,1
    1bec:	211ad784 	addi	r4,r4,27486
    1bf0:	41000015 	stw	r4,0(r8)
    1bf4:	45800115 	stw	r22,4(r8)
    1bf8:	d8c02015 	stw	r3,128(sp)
    1bfc:	d8801f15 	stw	r2,124(sp)
    1c00:	e0bff40e 	bge	fp,r2,1bd4 <__alt_mem_Onchip_SRAM+0xf8001bd4>
    1c04:	d9801e04 	addi	r6,sp,120
    1c08:	800b883a 	mov	r5,r16
    1c0c:	9809883a 	mov	r4,r19
    1c10:	000b0040 	call	b004 <__ssprint_r>
    1c14:	103ef51e 	bne	r2,zero,17ec <__alt_mem_Onchip_SRAM+0xf80017ec>
    1c18:	8c7ffc04 	addi	r17,r17,-16
    1c1c:	d8c02017 	ldw	r3,128(sp)
    1c20:	d8801f17 	ldw	r2,124(sp)
    1c24:	da000404 	addi	r8,sp,16
    1c28:	b47fed16 	blt	r22,r17,1be0 <__alt_mem_Onchip_SRAM+0xf8001be0>
    1c2c:	9021883a 	mov	r16,r18
    1c30:	a025883a 	mov	r18,r20
    1c34:	8829883a 	mov	r20,r17
    1c38:	dc403c17 	ldw	r17,240(sp)
    1c3c:	d9403517 	ldw	r5,212(sp)
    1c40:	a0c7883a 	add	r3,r20,r3
    1c44:	10800044 	addi	r2,r2,1
    1c48:	41400015 	stw	r5,0(r8)
    1c4c:	45000115 	stw	r20,4(r8)
    1c50:	d8c02015 	stw	r3,128(sp)
    1c54:	d8801f15 	stw	r2,124(sp)
    1c58:	010001c4 	movi	r4,7
    1c5c:	2082c116 	blt	r4,r2,2764 <___svfprintf_internal_r+0x1314>
    1c60:	df002787 	ldb	fp,158(sp)
    1c64:	42000204 	addi	r8,r8,8
    1c68:	e0000c26 	beq	fp,zero,1c9c <___svfprintf_internal_r+0x84c>
    1c6c:	d8801f17 	ldw	r2,124(sp)
    1c70:	d9002784 	addi	r4,sp,158
    1c74:	18c00044 	addi	r3,r3,1
    1c78:	10800044 	addi	r2,r2,1
    1c7c:	41000015 	stw	r4,0(r8)
    1c80:	01000044 	movi	r4,1
    1c84:	41000115 	stw	r4,4(r8)
    1c88:	d8c02015 	stw	r3,128(sp)
    1c8c:	d8801f15 	stw	r2,124(sp)
    1c90:	010001c4 	movi	r4,7
    1c94:	20825a16 	blt	r4,r2,2600 <___svfprintf_internal_r+0x11b0>
    1c98:	42000204 	addi	r8,r8,8
    1c9c:	d8802c17 	ldw	r2,176(sp)
    1ca0:	10000c26 	beq	r2,zero,1cd4 <___svfprintf_internal_r+0x884>
    1ca4:	d8801f17 	ldw	r2,124(sp)
    1ca8:	d9002704 	addi	r4,sp,156
    1cac:	18c00084 	addi	r3,r3,2
    1cb0:	10800044 	addi	r2,r2,1
    1cb4:	41000015 	stw	r4,0(r8)
    1cb8:	01000084 	movi	r4,2
    1cbc:	41000115 	stw	r4,4(r8)
    1cc0:	d8c02015 	stw	r3,128(sp)
    1cc4:	d8801f15 	stw	r2,124(sp)
    1cc8:	010001c4 	movi	r4,7
    1ccc:	20825416 	blt	r4,r2,2620 <___svfprintf_internal_r+0x11d0>
    1cd0:	42000204 	addi	r8,r8,8
    1cd4:	d9003017 	ldw	r4,192(sp)
    1cd8:	00802004 	movi	r2,128
    1cdc:	2081b926 	beq	r4,r2,23c4 <___svfprintf_internal_r+0xf74>
    1ce0:	d9402a17 	ldw	r5,168(sp)
    1ce4:	d8802b17 	ldw	r2,172(sp)
    1ce8:	28adc83a 	sub	r22,r5,r2
    1cec:	05802f0e 	bge	zero,r22,1dac <___svfprintf_internal_r+0x95c>
    1cf0:	07000404 	movi	fp,16
    1cf4:	d8801f17 	ldw	r2,124(sp)
    1cf8:	e583e20e 	bge	fp,r22,2c84 <___svfprintf_internal_r+0x1834>
    1cfc:	01400074 	movhi	r5,1
    1d00:	295ad384 	addi	r5,r5,27470
    1d04:	dc402a15 	stw	r17,168(sp)
    1d08:	d9402c15 	stw	r5,176(sp)
    1d0c:	b023883a 	mov	r17,r22
    1d10:	050001c4 	movi	r20,7
    1d14:	902d883a 	mov	r22,r18
    1d18:	8025883a 	mov	r18,r16
    1d1c:	dc002d17 	ldw	r16,180(sp)
    1d20:	00000306 	br	1d30 <___svfprintf_internal_r+0x8e0>
    1d24:	8c7ffc04 	addi	r17,r17,-16
    1d28:	42000204 	addi	r8,r8,8
    1d2c:	e440110e 	bge	fp,r17,1d74 <___svfprintf_internal_r+0x924>
    1d30:	18c00404 	addi	r3,r3,16
    1d34:	10800044 	addi	r2,r2,1
    1d38:	45400015 	stw	r21,0(r8)
    1d3c:	47000115 	stw	fp,4(r8)
    1d40:	d8c02015 	stw	r3,128(sp)
    1d44:	d8801f15 	stw	r2,124(sp)
    1d48:	a0bff60e 	bge	r20,r2,1d24 <__alt_mem_Onchip_SRAM+0xf8001d24>
    1d4c:	d9801e04 	addi	r6,sp,120
    1d50:	800b883a 	mov	r5,r16
    1d54:	9809883a 	mov	r4,r19
    1d58:	000b0040 	call	b004 <__ssprint_r>
    1d5c:	103ea31e 	bne	r2,zero,17ec <__alt_mem_Onchip_SRAM+0xf80017ec>
    1d60:	8c7ffc04 	addi	r17,r17,-16
    1d64:	d8c02017 	ldw	r3,128(sp)
    1d68:	d8801f17 	ldw	r2,124(sp)
    1d6c:	da000404 	addi	r8,sp,16
    1d70:	e47fef16 	blt	fp,r17,1d30 <__alt_mem_Onchip_SRAM+0xf8001d30>
    1d74:	9021883a 	mov	r16,r18
    1d78:	b025883a 	mov	r18,r22
    1d7c:	882d883a 	mov	r22,r17
    1d80:	dc402a17 	ldw	r17,168(sp)
    1d84:	d9002c17 	ldw	r4,176(sp)
    1d88:	1d87883a 	add	r3,r3,r22
    1d8c:	10800044 	addi	r2,r2,1
    1d90:	41000015 	stw	r4,0(r8)
    1d94:	45800115 	stw	r22,4(r8)
    1d98:	d8c02015 	stw	r3,128(sp)
    1d9c:	d8801f15 	stw	r2,124(sp)
    1da0:	010001c4 	movi	r4,7
    1da4:	20820e16 	blt	r4,r2,25e0 <___svfprintf_internal_r+0x1190>
    1da8:	42000204 	addi	r8,r8,8
    1dac:	9080400c 	andi	r2,r18,256
    1db0:	10013a1e 	bne	r2,zero,229c <___svfprintf_internal_r+0xe4c>
    1db4:	d9402b17 	ldw	r5,172(sp)
    1db8:	d8801f17 	ldw	r2,124(sp)
    1dbc:	44000015 	stw	r16,0(r8)
    1dc0:	1947883a 	add	r3,r3,r5
    1dc4:	10800044 	addi	r2,r2,1
    1dc8:	41400115 	stw	r5,4(r8)
    1dcc:	d8c02015 	stw	r3,128(sp)
    1dd0:	d8801f15 	stw	r2,124(sp)
    1dd4:	010001c4 	movi	r4,7
    1dd8:	2081f316 	blt	r4,r2,25a8 <___svfprintf_internal_r+0x1158>
    1ddc:	42000204 	addi	r8,r8,8
    1de0:	9480010c 	andi	r18,r18,4
    1de4:	90003226 	beq	r18,zero,1eb0 <___svfprintf_internal_r+0xa60>
    1de8:	d9403117 	ldw	r5,196(sp)
    1dec:	d8802917 	ldw	r2,164(sp)
    1df0:	28a1c83a 	sub	r16,r5,r2
    1df4:	04002e0e 	bge	zero,r16,1eb0 <___svfprintf_internal_r+0xa60>
    1df8:	04400404 	movi	r17,16
    1dfc:	d8801f17 	ldw	r2,124(sp)
    1e00:	8c04db0e 	bge	r17,r16,3170 <___svfprintf_internal_r+0x1d20>
    1e04:	01400074 	movhi	r5,1
    1e08:	295ad784 	addi	r5,r5,27486
    1e0c:	d9403515 	stw	r5,212(sp)
    1e10:	048001c4 	movi	r18,7
    1e14:	dd002d17 	ldw	r20,180(sp)
    1e18:	00000306 	br	1e28 <___svfprintf_internal_r+0x9d8>
    1e1c:	843ffc04 	addi	r16,r16,-16
    1e20:	42000204 	addi	r8,r8,8
    1e24:	8c00130e 	bge	r17,r16,1e74 <___svfprintf_internal_r+0xa24>
    1e28:	01000074 	movhi	r4,1
    1e2c:	18c00404 	addi	r3,r3,16
    1e30:	10800044 	addi	r2,r2,1
    1e34:	211ad784 	addi	r4,r4,27486
    1e38:	41000015 	stw	r4,0(r8)
    1e3c:	44400115 	stw	r17,4(r8)
    1e40:	d8c02015 	stw	r3,128(sp)
    1e44:	d8801f15 	stw	r2,124(sp)
    1e48:	90bff40e 	bge	r18,r2,1e1c <__alt_mem_Onchip_SRAM+0xf8001e1c>
    1e4c:	d9801e04 	addi	r6,sp,120
    1e50:	a00b883a 	mov	r5,r20
    1e54:	9809883a 	mov	r4,r19
    1e58:	000b0040 	call	b004 <__ssprint_r>
    1e5c:	103e631e 	bne	r2,zero,17ec <__alt_mem_Onchip_SRAM+0xf80017ec>
    1e60:	843ffc04 	addi	r16,r16,-16
    1e64:	d8c02017 	ldw	r3,128(sp)
    1e68:	d8801f17 	ldw	r2,124(sp)
    1e6c:	da000404 	addi	r8,sp,16
    1e70:	8c3fed16 	blt	r17,r16,1e28 <__alt_mem_Onchip_SRAM+0xf8001e28>
    1e74:	d9403517 	ldw	r5,212(sp)
    1e78:	1c07883a 	add	r3,r3,r16
    1e7c:	10800044 	addi	r2,r2,1
    1e80:	41400015 	stw	r5,0(r8)
    1e84:	44000115 	stw	r16,4(r8)
    1e88:	d8c02015 	stw	r3,128(sp)
    1e8c:	d8801f15 	stw	r2,124(sp)
    1e90:	010001c4 	movi	r4,7
    1e94:	2080060e 	bge	r4,r2,1eb0 <___svfprintf_internal_r+0xa60>
    1e98:	d9402d17 	ldw	r5,180(sp)
    1e9c:	d9801e04 	addi	r6,sp,120
    1ea0:	9809883a 	mov	r4,r19
    1ea4:	000b0040 	call	b004 <__ssprint_r>
    1ea8:	103e501e 	bne	r2,zero,17ec <__alt_mem_Onchip_SRAM+0xf80017ec>
    1eac:	d8c02017 	ldw	r3,128(sp)
    1eb0:	d8803117 	ldw	r2,196(sp)
    1eb4:	d9002917 	ldw	r4,164(sp)
    1eb8:	1100010e 	bge	r2,r4,1ec0 <___svfprintf_internal_r+0xa70>
    1ebc:	2005883a 	mov	r2,r4
    1ec0:	d9402f17 	ldw	r5,188(sp)
    1ec4:	288b883a 	add	r5,r5,r2
    1ec8:	d9402f15 	stw	r5,188(sp)
    1ecc:	1801be1e 	bne	r3,zero,25c8 <___svfprintf_internal_r+0x1178>
    1ed0:	b8800007 	ldb	r2,0(r23)
    1ed4:	d8001f15 	stw	zero,124(sp)
    1ed8:	da000404 	addi	r8,sp,16
    1edc:	103d891e 	bne	r2,zero,1504 <__alt_mem_Onchip_SRAM+0xf8001504>
    1ee0:	b823883a 	mov	r17,r23
    1ee4:	003d9f06 	br	1564 <__alt_mem_Onchip_SRAM+0xf8001564>
    1ee8:	8025883a 	mov	r18,r16
    1eec:	dc002903 	ldbu	r16,164(sp)
    1ef0:	e011883a 	mov	r8,fp
    1ef4:	84003fcc 	andi	r16,r16,255
    1ef8:	8005e61e 	bne	r16,zero,3694 <___svfprintf_internal_r+0x2244>
    1efc:	94800414 	ori	r18,r18,16
    1f00:	9080080c 	andi	r2,r18,32
    1f04:	10022026 	beq	r2,zero,2788 <___svfprintf_internal_r+0x1338>
    1f08:	d9002e17 	ldw	r4,184(sp)
    1f0c:	d9402a17 	ldw	r5,168(sp)
    1f10:	d8002785 	stb	zero,158(sp)
    1f14:	20c00204 	addi	r3,r4,8
    1f18:	25000017 	ldw	r20,0(r4)
    1f1c:	25800117 	ldw	r22,4(r4)
    1f20:	2803ad16 	blt	r5,zero,2dd8 <___svfprintf_internal_r+0x1988>
    1f24:	013fdfc4 	movi	r4,-129
    1f28:	a584b03a 	or	r2,r20,r22
    1f2c:	d8c02e15 	stw	r3,184(sp)
    1f30:	9124703a 	and	r18,r18,r4
    1f34:	0039883a 	mov	fp,zero
    1f38:	103eb01e 	bne	r2,zero,19fc <__alt_mem_Onchip_SRAM+0xf80019fc>
    1f3c:	d8802a17 	ldw	r2,168(sp)
    1f40:	1002e71e 	bne	r2,zero,2ae0 <___svfprintf_internal_r+0x1690>
    1f44:	d8002a15 	stw	zero,168(sp)
    1f48:	d8002b15 	stw	zero,172(sp)
    1f4c:	dc001e04 	addi	r16,sp,120
    1f50:	003ef706 	br	1b30 <__alt_mem_Onchip_SRAM+0xf8001b30>
    1f54:	8025883a 	mov	r18,r16
    1f58:	dc002903 	ldbu	r16,164(sp)
    1f5c:	e011883a 	mov	r8,fp
    1f60:	84003fcc 	andi	r16,r16,255
    1f64:	8005c81e 	bne	r16,zero,3688 <___svfprintf_internal_r+0x2238>
    1f68:	01000074 	movhi	r4,1
    1f6c:	211ac704 	addi	r4,r4,27420
    1f70:	d9003a15 	stw	r4,232(sp)
    1f74:	9080080c 	andi	r2,r18,32
    1f78:	10007226 	beq	r2,zero,2144 <___svfprintf_internal_r+0xcf4>
    1f7c:	d9402e17 	ldw	r5,184(sp)
    1f80:	2d000017 	ldw	r20,0(r5)
    1f84:	2d800117 	ldw	r22,4(r5)
    1f88:	29400204 	addi	r5,r5,8
    1f8c:	d9402e15 	stw	r5,184(sp)
    1f90:	9080004c 	andi	r2,r18,1
    1f94:	1001aa26 	beq	r2,zero,2640 <___svfprintf_internal_r+0x11f0>
    1f98:	a584b03a 	or	r2,r20,r22
    1f9c:	10032526 	beq	r2,zero,2c34 <___svfprintf_internal_r+0x17e4>
    1fa0:	d8c02a17 	ldw	r3,168(sp)
    1fa4:	00800c04 	movi	r2,48
    1fa8:	d8802705 	stb	r2,156(sp)
    1fac:	dc402745 	stb	r17,157(sp)
    1fb0:	d8002785 	stb	zero,158(sp)
    1fb4:	90800094 	ori	r2,r18,2
    1fb8:	1804a316 	blt	r3,zero,3248 <___svfprintf_internal_r+0x1df8>
    1fbc:	00bfdfc4 	movi	r2,-129
    1fc0:	90a4703a 	and	r18,r18,r2
    1fc4:	94800094 	ori	r18,r18,2
    1fc8:	0039883a 	mov	fp,zero
    1fcc:	d9003a17 	ldw	r4,232(sp)
    1fd0:	dc001e04 	addi	r16,sp,120
    1fd4:	a08003cc 	andi	r2,r20,15
    1fd8:	b006973a 	slli	r3,r22,28
    1fdc:	2085883a 	add	r2,r4,r2
    1fe0:	a028d13a 	srli	r20,r20,4
    1fe4:	10800003 	ldbu	r2,0(r2)
    1fe8:	b02cd13a 	srli	r22,r22,4
    1fec:	843fffc4 	addi	r16,r16,-1
    1ff0:	1d28b03a 	or	r20,r3,r20
    1ff4:	80800005 	stb	r2,0(r16)
    1ff8:	a584b03a 	or	r2,r20,r22
    1ffc:	103ff51e 	bne	r2,zero,1fd4 <__alt_mem_Onchip_SRAM+0xf8001fd4>
    2000:	d8c02817 	ldw	r3,160(sp)
    2004:	1c07c83a 	sub	r3,r3,r16
    2008:	d8c02b15 	stw	r3,172(sp)
    200c:	003ec806 	br	1b30 <__alt_mem_Onchip_SRAM+0xf8001b30>
    2010:	d8c02e17 	ldw	r3,184(sp)
    2014:	d9002e17 	ldw	r4,184(sp)
    2018:	8025883a 	mov	r18,r16
    201c:	18800017 	ldw	r2,0(r3)
    2020:	21000104 	addi	r4,r4,4
    2024:	00c00044 	movi	r3,1
    2028:	e011883a 	mov	r8,fp
    202c:	d8c02915 	stw	r3,164(sp)
    2030:	d8002785 	stb	zero,158(sp)
    2034:	d8801405 	stb	r2,80(sp)
    2038:	d9002e15 	stw	r4,184(sp)
    203c:	d8c02b15 	stw	r3,172(sp)
    2040:	d8002a15 	stw	zero,168(sp)
    2044:	d8003215 	stw	zero,200(sp)
    2048:	dc001404 	addi	r16,sp,80
    204c:	0039883a 	mov	fp,zero
    2050:	003ec406 	br	1b64 <__alt_mem_Onchip_SRAM+0xf8001b64>
    2054:	8025883a 	mov	r18,r16
    2058:	dc002903 	ldbu	r16,164(sp)
    205c:	e011883a 	mov	r8,fp
    2060:	84003fcc 	andi	r16,r16,255
    2064:	803e8726 	beq	r16,zero,1a84 <__alt_mem_Onchip_SRAM+0xf8001a84>
    2068:	d8c02b03 	ldbu	r3,172(sp)
    206c:	d8c02785 	stb	r3,158(sp)
    2070:	003e8406 	br	1a84 <__alt_mem_Onchip_SRAM+0xf8001a84>
    2074:	00c00044 	movi	r3,1
    2078:	d8c02905 	stb	r3,164(sp)
    207c:	00c00ac4 	movi	r3,43
    2080:	d8c02b05 	stb	r3,172(sp)
    2084:	bc400007 	ldb	r17,0(r23)
    2088:	003d4606 	br	15a4 <__alt_mem_Onchip_SRAM+0xf80015a4>
    208c:	84000814 	ori	r16,r16,32
    2090:	bc400007 	ldb	r17,0(r23)
    2094:	003d4306 	br	15a4 <__alt_mem_Onchip_SRAM+0xf80015a4>
    2098:	d8802e17 	ldw	r2,184(sp)
    209c:	8025883a 	mov	r18,r16
    20a0:	d8002785 	stb	zero,158(sp)
    20a4:	14000017 	ldw	r16,0(r2)
    20a8:	e011883a 	mov	r8,fp
    20ac:	15000104 	addi	r20,r2,4
    20b0:	80042126 	beq	r16,zero,3138 <___svfprintf_internal_r+0x1ce8>
    20b4:	d8c02a17 	ldw	r3,168(sp)
    20b8:	1803ee16 	blt	r3,zero,3074 <___svfprintf_internal_r+0x1c24>
    20bc:	180d883a 	mov	r6,r3
    20c0:	000b883a 	mov	r5,zero
    20c4:	8009883a 	mov	r4,r16
    20c8:	df003e15 	stw	fp,248(sp)
    20cc:	00090f00 	call	90f0 <memchr>
    20d0:	da003e17 	ldw	r8,248(sp)
    20d4:	10046a26 	beq	r2,zero,3280 <___svfprintf_internal_r+0x1e30>
    20d8:	1405c83a 	sub	r2,r2,r16
    20dc:	d8802b15 	stw	r2,172(sp)
    20e0:	1003ea16 	blt	r2,zero,308c <___svfprintf_internal_r+0x1c3c>
    20e4:	df002783 	ldbu	fp,158(sp)
    20e8:	d8802915 	stw	r2,164(sp)
    20ec:	dd002e15 	stw	r20,184(sp)
    20f0:	d8002a15 	stw	zero,168(sp)
    20f4:	d8003215 	stw	zero,200(sp)
    20f8:	003e9306 	br	1b48 <__alt_mem_Onchip_SRAM+0xf8001b48>
    20fc:	8025883a 	mov	r18,r16
    2100:	dc002903 	ldbu	r16,164(sp)
    2104:	e011883a 	mov	r8,fp
    2108:	84003fcc 	andi	r16,r16,255
    210c:	803f7c26 	beq	r16,zero,1f00 <__alt_mem_Onchip_SRAM+0xf8001f00>
    2110:	d8c02b03 	ldbu	r3,172(sp)
    2114:	d8c02785 	stb	r3,158(sp)
    2118:	003f7906 	br	1f00 <__alt_mem_Onchip_SRAM+0xf8001f00>
    211c:	8025883a 	mov	r18,r16
    2120:	dc002903 	ldbu	r16,164(sp)
    2124:	e011883a 	mov	r8,fp
    2128:	84003fcc 	andi	r16,r16,255
    212c:	8005741e 	bne	r16,zero,3700 <___svfprintf_internal_r+0x22b0>
    2130:	01000074 	movhi	r4,1
    2134:	211acc04 	addi	r4,r4,27440
    2138:	d9003a15 	stw	r4,232(sp)
    213c:	9080080c 	andi	r2,r18,32
    2140:	103f8e1e 	bne	r2,zero,1f7c <__alt_mem_Onchip_SRAM+0xf8001f7c>
    2144:	9080040c 	andi	r2,r18,16
    2148:	1002a726 	beq	r2,zero,2be8 <___svfprintf_internal_r+0x1798>
    214c:	d8802e17 	ldw	r2,184(sp)
    2150:	002d883a 	mov	r22,zero
    2154:	15000017 	ldw	r20,0(r2)
    2158:	10800104 	addi	r2,r2,4
    215c:	d8802e15 	stw	r2,184(sp)
    2160:	003f8b06 	br	1f90 <__alt_mem_Onchip_SRAM+0xf8001f90>
    2164:	84000054 	ori	r16,r16,1
    2168:	bc400007 	ldb	r17,0(r23)
    216c:	003d0d06 	br	15a4 <__alt_mem_Onchip_SRAM+0xf80015a4>
    2170:	d8802b07 	ldb	r2,172(sp)
    2174:	1002a41e 	bne	r2,zero,2c08 <___svfprintf_internal_r+0x17b8>
    2178:	00c00044 	movi	r3,1
    217c:	d8c02905 	stb	r3,164(sp)
    2180:	00c00804 	movi	r3,32
    2184:	d8c02b05 	stb	r3,172(sp)
    2188:	bc400007 	ldb	r17,0(r23)
    218c:	003d0506 	br	15a4 <__alt_mem_Onchip_SRAM+0xf80015a4>
    2190:	8025883a 	mov	r18,r16
    2194:	dc002903 	ldbu	r16,164(sp)
    2198:	e011883a 	mov	r8,fp
    219c:	84003fcc 	andi	r16,r16,255
    21a0:	803e0626 	beq	r16,zero,19bc <__alt_mem_Onchip_SRAM+0xf80019bc>
    21a4:	d8c02b03 	ldbu	r3,172(sp)
    21a8:	d8c02785 	stb	r3,158(sp)
    21ac:	003e0306 	br	19bc <__alt_mem_Onchip_SRAM+0xf80019bc>
    21b0:	bc400007 	ldb	r17,0(r23)
    21b4:	00801b04 	movi	r2,108
    21b8:	88830a26 	beq	r17,r2,2de4 <___svfprintf_internal_r+0x1994>
    21bc:	84000414 	ori	r16,r16,16
    21c0:	003cf806 	br	15a4 <__alt_mem_Onchip_SRAM+0xf80015a4>
    21c4:	8025883a 	mov	r18,r16
    21c8:	dc002903 	ldbu	r16,164(sp)
    21cc:	e011883a 	mov	r8,fp
    21d0:	84003fcc 	andi	r16,r16,255
    21d4:	8005471e 	bne	r16,zero,36f4 <___svfprintf_internal_r+0x22a4>
    21d8:	9080080c 	andi	r2,r18,32
    21dc:	10028c26 	beq	r2,zero,2c10 <___svfprintf_internal_r+0x17c0>
    21e0:	d9002e17 	ldw	r4,184(sp)
    21e4:	d9402f17 	ldw	r5,188(sp)
    21e8:	20800017 	ldw	r2,0(r4)
    21ec:	2807d7fa 	srai	r3,r5,31
    21f0:	21000104 	addi	r4,r4,4
    21f4:	d9002e15 	stw	r4,184(sp)
    21f8:	11400015 	stw	r5,0(r2)
    21fc:	10c00115 	stw	r3,4(r2)
    2200:	003cbe06 	br	14fc <__alt_mem_Onchip_SRAM+0xf80014fc>
    2204:	84001014 	ori	r16,r16,64
    2208:	bc400007 	ldb	r17,0(r23)
    220c:	003ce506 	br	15a4 <__alt_mem_Onchip_SRAM+0xf80015a4>
    2210:	01000074 	movhi	r4,1
    2214:	211acc04 	addi	r4,r4,27440
    2218:	0039883a 	mov	fp,zero
    221c:	d9003a15 	stw	r4,232(sp)
    2220:	04401e04 	movi	r17,120
    2224:	003f6906 	br	1fcc <__alt_mem_Onchip_SRAM+0xf8001fcc>
    2228:	8025883a 	mov	r18,r16
    222c:	dc002903 	ldbu	r16,164(sp)
    2230:	e011883a 	mov	r8,fp
    2234:	84003fcc 	andi	r16,r16,255
    2238:	8005261e 	bne	r16,zero,36d4 <___svfprintf_internal_r+0x2284>
    223c:	883d6526 	beq	r17,zero,17d4 <__alt_mem_Onchip_SRAM+0xf80017d4>
    2240:	00c00044 	movi	r3,1
    2244:	d8c02915 	stw	r3,164(sp)
    2248:	dc401405 	stb	r17,80(sp)
    224c:	d8002785 	stb	zero,158(sp)
    2250:	003f7a06 	br	203c <__alt_mem_Onchip_SRAM+0xf800203c>
    2254:	01000074 	movhi	r4,1
    2258:	211acc04 	addi	r4,r4,27440
    225c:	d9003a15 	stw	r4,232(sp)
    2260:	d8c02e15 	stw	r3,184(sp)
    2264:	1025883a 	mov	r18,r2
    2268:	04401e04 	movi	r17,120
    226c:	a584b03a 	or	r2,r20,r22
    2270:	1000fa1e 	bne	r2,zero,265c <___svfprintf_internal_r+0x120c>
    2274:	0039883a 	mov	fp,zero
    2278:	00800084 	movi	r2,2
    227c:	10803fcc 	andi	r2,r2,255
    2280:	00c00044 	movi	r3,1
    2284:	10c21626 	beq	r2,r3,2ae0 <___svfprintf_internal_r+0x1690>
    2288:	00c00084 	movi	r3,2
    228c:	10fe0e1e 	bne	r2,r3,1ac8 <__alt_mem_Onchip_SRAM+0xf8001ac8>
    2290:	003d4606 	br	17ac <__alt_mem_Onchip_SRAM+0xf80017ac>
    2294:	d8c02017 	ldw	r3,128(sp)
    2298:	003e7306 	br	1c68 <__alt_mem_Onchip_SRAM+0xf8001c68>
    229c:	00801944 	movi	r2,101
    22a0:	14407c0e 	bge	r2,r17,2494 <___svfprintf_internal_r+0x1044>
    22a4:	d9003617 	ldw	r4,216(sp)
    22a8:	d9403717 	ldw	r5,220(sp)
    22ac:	000d883a 	mov	r6,zero
    22b0:	000f883a 	mov	r7,zero
    22b4:	d8c03d15 	stw	r3,244(sp)
    22b8:	da003e15 	stw	r8,248(sp)
    22bc:	00105000 	call	10500 <__eqdf2>
    22c0:	d8c03d17 	ldw	r3,244(sp)
    22c4:	da003e17 	ldw	r8,248(sp)
    22c8:	1000f51e 	bne	r2,zero,26a0 <___svfprintf_internal_r+0x1250>
    22cc:	d8801f17 	ldw	r2,124(sp)
    22d0:	01000074 	movhi	r4,1
    22d4:	211ad304 	addi	r4,r4,27468
    22d8:	18c00044 	addi	r3,r3,1
    22dc:	10800044 	addi	r2,r2,1
    22e0:	41000015 	stw	r4,0(r8)
    22e4:	01000044 	movi	r4,1
    22e8:	41000115 	stw	r4,4(r8)
    22ec:	d8c02015 	stw	r3,128(sp)
    22f0:	d8801f15 	stw	r2,124(sp)
    22f4:	010001c4 	movi	r4,7
    22f8:	20826616 	blt	r4,r2,2c94 <___svfprintf_internal_r+0x1844>
    22fc:	42000204 	addi	r8,r8,8
    2300:	d8802617 	ldw	r2,152(sp)
    2304:	d9403317 	ldw	r5,204(sp)
    2308:	11400216 	blt	r2,r5,2314 <___svfprintf_internal_r+0xec4>
    230c:	9080004c 	andi	r2,r18,1
    2310:	103eb326 	beq	r2,zero,1de0 <__alt_mem_Onchip_SRAM+0xf8001de0>
    2314:	d8803817 	ldw	r2,224(sp)
    2318:	d9003417 	ldw	r4,208(sp)
    231c:	d9403817 	ldw	r5,224(sp)
    2320:	1887883a 	add	r3,r3,r2
    2324:	d8801f17 	ldw	r2,124(sp)
    2328:	41000015 	stw	r4,0(r8)
    232c:	41400115 	stw	r5,4(r8)
    2330:	10800044 	addi	r2,r2,1
    2334:	d8c02015 	stw	r3,128(sp)
    2338:	d8801f15 	stw	r2,124(sp)
    233c:	010001c4 	movi	r4,7
    2340:	2082af16 	blt	r4,r2,2e00 <___svfprintf_internal_r+0x19b0>
    2344:	42000204 	addi	r8,r8,8
    2348:	d8803317 	ldw	r2,204(sp)
    234c:	143fffc4 	addi	r16,r2,-1
    2350:	043ea30e 	bge	zero,r16,1de0 <__alt_mem_Onchip_SRAM+0xf8001de0>
    2354:	04400404 	movi	r17,16
    2358:	d8801f17 	ldw	r2,124(sp)
    235c:	8c00860e 	bge	r17,r16,2578 <___svfprintf_internal_r+0x1128>
    2360:	01400074 	movhi	r5,1
    2364:	295ad384 	addi	r5,r5,27470
    2368:	d9402c15 	stw	r5,176(sp)
    236c:	058001c4 	movi	r22,7
    2370:	dd002d17 	ldw	r20,180(sp)
    2374:	00000306 	br	2384 <___svfprintf_internal_r+0xf34>
    2378:	42000204 	addi	r8,r8,8
    237c:	843ffc04 	addi	r16,r16,-16
    2380:	8c00800e 	bge	r17,r16,2584 <___svfprintf_internal_r+0x1134>
    2384:	18c00404 	addi	r3,r3,16
    2388:	10800044 	addi	r2,r2,1
    238c:	45400015 	stw	r21,0(r8)
    2390:	44400115 	stw	r17,4(r8)
    2394:	d8c02015 	stw	r3,128(sp)
    2398:	d8801f15 	stw	r2,124(sp)
    239c:	b0bff60e 	bge	r22,r2,2378 <__alt_mem_Onchip_SRAM+0xf8002378>
    23a0:	d9801e04 	addi	r6,sp,120
    23a4:	a00b883a 	mov	r5,r20
    23a8:	9809883a 	mov	r4,r19
    23ac:	000b0040 	call	b004 <__ssprint_r>
    23b0:	103d0e1e 	bne	r2,zero,17ec <__alt_mem_Onchip_SRAM+0xf80017ec>
    23b4:	d8c02017 	ldw	r3,128(sp)
    23b8:	d8801f17 	ldw	r2,124(sp)
    23bc:	da000404 	addi	r8,sp,16
    23c0:	003fee06 	br	237c <__alt_mem_Onchip_SRAM+0xf800237c>
    23c4:	d9403117 	ldw	r5,196(sp)
    23c8:	d8802917 	ldw	r2,164(sp)
    23cc:	28adc83a 	sub	r22,r5,r2
    23d0:	05be430e 	bge	zero,r22,1ce0 <__alt_mem_Onchip_SRAM+0xf8001ce0>
    23d4:	07000404 	movi	fp,16
    23d8:	d8801f17 	ldw	r2,124(sp)
    23dc:	e583a20e 	bge	fp,r22,3268 <___svfprintf_internal_r+0x1e18>
    23e0:	01400074 	movhi	r5,1
    23e4:	295ad384 	addi	r5,r5,27470
    23e8:	dc403015 	stw	r17,192(sp)
    23ec:	d9402c15 	stw	r5,176(sp)
    23f0:	b023883a 	mov	r17,r22
    23f4:	050001c4 	movi	r20,7
    23f8:	902d883a 	mov	r22,r18
    23fc:	8025883a 	mov	r18,r16
    2400:	dc002d17 	ldw	r16,180(sp)
    2404:	00000306 	br	2414 <___svfprintf_internal_r+0xfc4>
    2408:	8c7ffc04 	addi	r17,r17,-16
    240c:	42000204 	addi	r8,r8,8
    2410:	e440110e 	bge	fp,r17,2458 <___svfprintf_internal_r+0x1008>
    2414:	18c00404 	addi	r3,r3,16
    2418:	10800044 	addi	r2,r2,1
    241c:	45400015 	stw	r21,0(r8)
    2420:	47000115 	stw	fp,4(r8)
    2424:	d8c02015 	stw	r3,128(sp)
    2428:	d8801f15 	stw	r2,124(sp)
    242c:	a0bff60e 	bge	r20,r2,2408 <__alt_mem_Onchip_SRAM+0xf8002408>
    2430:	d9801e04 	addi	r6,sp,120
    2434:	800b883a 	mov	r5,r16
    2438:	9809883a 	mov	r4,r19
    243c:	000b0040 	call	b004 <__ssprint_r>
    2440:	103cea1e 	bne	r2,zero,17ec <__alt_mem_Onchip_SRAM+0xf80017ec>
    2444:	8c7ffc04 	addi	r17,r17,-16
    2448:	d8c02017 	ldw	r3,128(sp)
    244c:	d8801f17 	ldw	r2,124(sp)
    2450:	da000404 	addi	r8,sp,16
    2454:	e47fef16 	blt	fp,r17,2414 <__alt_mem_Onchip_SRAM+0xf8002414>
    2458:	9021883a 	mov	r16,r18
    245c:	b025883a 	mov	r18,r22
    2460:	882d883a 	mov	r22,r17
    2464:	dc403017 	ldw	r17,192(sp)
    2468:	d9002c17 	ldw	r4,176(sp)
    246c:	1d87883a 	add	r3,r3,r22
    2470:	10800044 	addi	r2,r2,1
    2474:	41000015 	stw	r4,0(r8)
    2478:	45800115 	stw	r22,4(r8)
    247c:	d8c02015 	stw	r3,128(sp)
    2480:	d8801f15 	stw	r2,124(sp)
    2484:	010001c4 	movi	r4,7
    2488:	20819a16 	blt	r4,r2,2af4 <___svfprintf_internal_r+0x16a4>
    248c:	42000204 	addi	r8,r8,8
    2490:	003e1306 	br	1ce0 <__alt_mem_Onchip_SRAM+0xf8001ce0>
    2494:	d9403317 	ldw	r5,204(sp)
    2498:	00800044 	movi	r2,1
    249c:	18c00044 	addi	r3,r3,1
    24a0:	1141710e 	bge	r2,r5,2a68 <___svfprintf_internal_r+0x1618>
    24a4:	dc401f17 	ldw	r17,124(sp)
    24a8:	00800044 	movi	r2,1
    24ac:	40800115 	stw	r2,4(r8)
    24b0:	8c400044 	addi	r17,r17,1
    24b4:	44000015 	stw	r16,0(r8)
    24b8:	d8c02015 	stw	r3,128(sp)
    24bc:	dc401f15 	stw	r17,124(sp)
    24c0:	008001c4 	movi	r2,7
    24c4:	14417416 	blt	r2,r17,2a98 <___svfprintf_internal_r+0x1648>
    24c8:	42000204 	addi	r8,r8,8
    24cc:	d8803817 	ldw	r2,224(sp)
    24d0:	d9003417 	ldw	r4,208(sp)
    24d4:	8c400044 	addi	r17,r17,1
    24d8:	10c7883a 	add	r3,r2,r3
    24dc:	40800115 	stw	r2,4(r8)
    24e0:	41000015 	stw	r4,0(r8)
    24e4:	d8c02015 	stw	r3,128(sp)
    24e8:	dc401f15 	stw	r17,124(sp)
    24ec:	008001c4 	movi	r2,7
    24f0:	14417216 	blt	r2,r17,2abc <___svfprintf_internal_r+0x166c>
    24f4:	45800204 	addi	r22,r8,8
    24f8:	d9003617 	ldw	r4,216(sp)
    24fc:	d9403717 	ldw	r5,220(sp)
    2500:	000d883a 	mov	r6,zero
    2504:	000f883a 	mov	r7,zero
    2508:	d8c03d15 	stw	r3,244(sp)
    250c:	00105000 	call	10500 <__eqdf2>
    2510:	d8c03d17 	ldw	r3,244(sp)
    2514:	1000b326 	beq	r2,zero,27e4 <___svfprintf_internal_r+0x1394>
    2518:	d9403317 	ldw	r5,204(sp)
    251c:	84000044 	addi	r16,r16,1
    2520:	8c400044 	addi	r17,r17,1
    2524:	28bfffc4 	addi	r2,r5,-1
    2528:	1887883a 	add	r3,r3,r2
    252c:	b0800115 	stw	r2,4(r22)
    2530:	b4000015 	stw	r16,0(r22)
    2534:	d8c02015 	stw	r3,128(sp)
    2538:	dc401f15 	stw	r17,124(sp)
    253c:	008001c4 	movi	r2,7
    2540:	1440d216 	blt	r2,r17,288c <___svfprintf_internal_r+0x143c>
    2544:	b5800204 	addi	r22,r22,8
    2548:	d9003b17 	ldw	r4,236(sp)
    254c:	df0022c4 	addi	fp,sp,139
    2550:	8c400044 	addi	r17,r17,1
    2554:	20c7883a 	add	r3,r4,r3
    2558:	b7000015 	stw	fp,0(r22)
    255c:	b1000115 	stw	r4,4(r22)
    2560:	d8c02015 	stw	r3,128(sp)
    2564:	dc401f15 	stw	r17,124(sp)
    2568:	008001c4 	movi	r2,7
    256c:	14400e16 	blt	r2,r17,25a8 <___svfprintf_internal_r+0x1158>
    2570:	b2000204 	addi	r8,r22,8
    2574:	003e1a06 	br	1de0 <__alt_mem_Onchip_SRAM+0xf8001de0>
    2578:	01000074 	movhi	r4,1
    257c:	211ad384 	addi	r4,r4,27470
    2580:	d9002c15 	stw	r4,176(sp)
    2584:	d9002c17 	ldw	r4,176(sp)
    2588:	1c07883a 	add	r3,r3,r16
    258c:	44000115 	stw	r16,4(r8)
    2590:	41000015 	stw	r4,0(r8)
    2594:	10800044 	addi	r2,r2,1
    2598:	d8c02015 	stw	r3,128(sp)
    259c:	d8801f15 	stw	r2,124(sp)
    25a0:	010001c4 	movi	r4,7
    25a4:	20be0d0e 	bge	r4,r2,1ddc <__alt_mem_Onchip_SRAM+0xf8001ddc>
    25a8:	d9402d17 	ldw	r5,180(sp)
    25ac:	d9801e04 	addi	r6,sp,120
    25b0:	9809883a 	mov	r4,r19
    25b4:	000b0040 	call	b004 <__ssprint_r>
    25b8:	103c8c1e 	bne	r2,zero,17ec <__alt_mem_Onchip_SRAM+0xf80017ec>
    25bc:	d8c02017 	ldw	r3,128(sp)
    25c0:	da000404 	addi	r8,sp,16
    25c4:	003e0606 	br	1de0 <__alt_mem_Onchip_SRAM+0xf8001de0>
    25c8:	d9402d17 	ldw	r5,180(sp)
    25cc:	d9801e04 	addi	r6,sp,120
    25d0:	9809883a 	mov	r4,r19
    25d4:	000b0040 	call	b004 <__ssprint_r>
    25d8:	103e3d26 	beq	r2,zero,1ed0 <__alt_mem_Onchip_SRAM+0xf8001ed0>
    25dc:	003c8306 	br	17ec <__alt_mem_Onchip_SRAM+0xf80017ec>
    25e0:	d9402d17 	ldw	r5,180(sp)
    25e4:	d9801e04 	addi	r6,sp,120
    25e8:	9809883a 	mov	r4,r19
    25ec:	000b0040 	call	b004 <__ssprint_r>
    25f0:	103c7e1e 	bne	r2,zero,17ec <__alt_mem_Onchip_SRAM+0xf80017ec>
    25f4:	d8c02017 	ldw	r3,128(sp)
    25f8:	da000404 	addi	r8,sp,16
    25fc:	003deb06 	br	1dac <__alt_mem_Onchip_SRAM+0xf8001dac>
    2600:	d9402d17 	ldw	r5,180(sp)
    2604:	d9801e04 	addi	r6,sp,120
    2608:	9809883a 	mov	r4,r19
    260c:	000b0040 	call	b004 <__ssprint_r>
    2610:	103c761e 	bne	r2,zero,17ec <__alt_mem_Onchip_SRAM+0xf80017ec>
    2614:	d8c02017 	ldw	r3,128(sp)
    2618:	da000404 	addi	r8,sp,16
    261c:	003d9f06 	br	1c9c <__alt_mem_Onchip_SRAM+0xf8001c9c>
    2620:	d9402d17 	ldw	r5,180(sp)
    2624:	d9801e04 	addi	r6,sp,120
    2628:	9809883a 	mov	r4,r19
    262c:	000b0040 	call	b004 <__ssprint_r>
    2630:	103c6e1e 	bne	r2,zero,17ec <__alt_mem_Onchip_SRAM+0xf80017ec>
    2634:	d8c02017 	ldw	r3,128(sp)
    2638:	da000404 	addi	r8,sp,16
    263c:	003da506 	br	1cd4 <__alt_mem_Onchip_SRAM+0xf8001cd4>
    2640:	d9402a17 	ldw	r5,168(sp)
    2644:	d8002785 	stb	zero,158(sp)
    2648:	283f0816 	blt	r5,zero,226c <__alt_mem_Onchip_SRAM+0xf800226c>
    264c:	00ffdfc4 	movi	r3,-129
    2650:	a584b03a 	or	r2,r20,r22
    2654:	90e4703a 	and	r18,r18,r3
    2658:	103c5126 	beq	r2,zero,17a0 <__alt_mem_Onchip_SRAM+0xf80017a0>
    265c:	0039883a 	mov	fp,zero
    2660:	003e5a06 	br	1fcc <__alt_mem_Onchip_SRAM+0xf8001fcc>
    2664:	9080040c 	andi	r2,r18,16
    2668:	10013d26 	beq	r2,zero,2b60 <___svfprintf_internal_r+0x1710>
    266c:	d8c02e17 	ldw	r3,184(sp)
    2670:	d9002a17 	ldw	r4,168(sp)
    2674:	d8002785 	stb	zero,158(sp)
    2678:	18800104 	addi	r2,r3,4
    267c:	1d000017 	ldw	r20,0(r3)
    2680:	002d883a 	mov	r22,zero
    2684:	20013f16 	blt	r4,zero,2b84 <___svfprintf_internal_r+0x1734>
    2688:	00ffdfc4 	movi	r3,-129
    268c:	d8802e15 	stw	r2,184(sp)
    2690:	90e4703a 	and	r18,r18,r3
    2694:	a03d0926 	beq	r20,zero,1abc <__alt_mem_Onchip_SRAM+0xf8001abc>
    2698:	0039883a 	mov	fp,zero
    269c:	003d0c06 	br	1ad0 <__alt_mem_Onchip_SRAM+0xf8001ad0>
    26a0:	dc402617 	ldw	r17,152(sp)
    26a4:	0441830e 	bge	zero,r17,2cb4 <___svfprintf_internal_r+0x1864>
    26a8:	dc403217 	ldw	r17,200(sp)
    26ac:	d8803317 	ldw	r2,204(sp)
    26b0:	1440010e 	bge	r2,r17,26b8 <___svfprintf_internal_r+0x1268>
    26b4:	1023883a 	mov	r17,r2
    26b8:	04400a0e 	bge	zero,r17,26e4 <___svfprintf_internal_r+0x1294>
    26bc:	d8801f17 	ldw	r2,124(sp)
    26c0:	1c47883a 	add	r3,r3,r17
    26c4:	44000015 	stw	r16,0(r8)
    26c8:	10800044 	addi	r2,r2,1
    26cc:	44400115 	stw	r17,4(r8)
    26d0:	d8c02015 	stw	r3,128(sp)
    26d4:	d8801f15 	stw	r2,124(sp)
    26d8:	010001c4 	movi	r4,7
    26dc:	20827516 	blt	r4,r2,30b4 <___svfprintf_internal_r+0x1c64>
    26e0:	42000204 	addi	r8,r8,8
    26e4:	88027b16 	blt	r17,zero,30d4 <___svfprintf_internal_r+0x1c84>
    26e8:	d9003217 	ldw	r4,200(sp)
    26ec:	2463c83a 	sub	r17,r4,r17
    26f0:	0440990e 	bge	zero,r17,2958 <___svfprintf_internal_r+0x1508>
    26f4:	05800404 	movi	r22,16
    26f8:	d8801f17 	ldw	r2,124(sp)
    26fc:	b441530e 	bge	r22,r17,2c4c <___svfprintf_internal_r+0x17fc>
    2700:	01000074 	movhi	r4,1
    2704:	211ad384 	addi	r4,r4,27470
    2708:	d9002c15 	stw	r4,176(sp)
    270c:	070001c4 	movi	fp,7
    2710:	dd002d17 	ldw	r20,180(sp)
    2714:	00000306 	br	2724 <___svfprintf_internal_r+0x12d4>
    2718:	42000204 	addi	r8,r8,8
    271c:	8c7ffc04 	addi	r17,r17,-16
    2720:	b4414d0e 	bge	r22,r17,2c58 <___svfprintf_internal_r+0x1808>
    2724:	18c00404 	addi	r3,r3,16
    2728:	10800044 	addi	r2,r2,1
    272c:	45400015 	stw	r21,0(r8)
    2730:	45800115 	stw	r22,4(r8)
    2734:	d8c02015 	stw	r3,128(sp)
    2738:	d8801f15 	stw	r2,124(sp)
    273c:	e0bff60e 	bge	fp,r2,2718 <__alt_mem_Onchip_SRAM+0xf8002718>
    2740:	d9801e04 	addi	r6,sp,120
    2744:	a00b883a 	mov	r5,r20
    2748:	9809883a 	mov	r4,r19
    274c:	000b0040 	call	b004 <__ssprint_r>
    2750:	103c261e 	bne	r2,zero,17ec <__alt_mem_Onchip_SRAM+0xf80017ec>
    2754:	d8c02017 	ldw	r3,128(sp)
    2758:	d8801f17 	ldw	r2,124(sp)
    275c:	da000404 	addi	r8,sp,16
    2760:	003fee06 	br	271c <__alt_mem_Onchip_SRAM+0xf800271c>
    2764:	d9402d17 	ldw	r5,180(sp)
    2768:	d9801e04 	addi	r6,sp,120
    276c:	9809883a 	mov	r4,r19
    2770:	000b0040 	call	b004 <__ssprint_r>
    2774:	103c1d1e 	bne	r2,zero,17ec <__alt_mem_Onchip_SRAM+0xf80017ec>
    2778:	d8c02017 	ldw	r3,128(sp)
    277c:	df002787 	ldb	fp,158(sp)
    2780:	da000404 	addi	r8,sp,16
    2784:	003d3806 	br	1c68 <__alt_mem_Onchip_SRAM+0xf8001c68>
    2788:	9080040c 	andi	r2,r18,16
    278c:	10005c26 	beq	r2,zero,2900 <___svfprintf_internal_r+0x14b0>
    2790:	d8c02e17 	ldw	r3,184(sp)
    2794:	d9002a17 	ldw	r4,168(sp)
    2798:	d8002785 	stb	zero,158(sp)
    279c:	18800104 	addi	r2,r3,4
    27a0:	1d000017 	ldw	r20,0(r3)
    27a4:	002d883a 	mov	r22,zero
    27a8:	20005e16 	blt	r4,zero,2924 <___svfprintf_internal_r+0x14d4>
    27ac:	00ffdfc4 	movi	r3,-129
    27b0:	d8802e15 	stw	r2,184(sp)
    27b4:	90e4703a 	and	r18,r18,r3
    27b8:	0039883a 	mov	fp,zero
    27bc:	a03ddf26 	beq	r20,zero,1f3c <__alt_mem_Onchip_SRAM+0xf8001f3c>
    27c0:	00800244 	movi	r2,9
    27c4:	153c8e36 	bltu	r2,r20,1a00 <__alt_mem_Onchip_SRAM+0xf8001a00>
    27c8:	a5000c04 	addi	r20,r20,48
    27cc:	dc001dc4 	addi	r16,sp,119
    27d0:	dd001dc5 	stb	r20,119(sp)
    27d4:	d8c02817 	ldw	r3,160(sp)
    27d8:	1c07c83a 	sub	r3,r3,r16
    27dc:	d8c02b15 	stw	r3,172(sp)
    27e0:	003cd306 	br	1b30 <__alt_mem_Onchip_SRAM+0xf8001b30>
    27e4:	d8803317 	ldw	r2,204(sp)
    27e8:	143fffc4 	addi	r16,r2,-1
    27ec:	043f560e 	bge	zero,r16,2548 <__alt_mem_Onchip_SRAM+0xf8002548>
    27f0:	07000404 	movi	fp,16
    27f4:	e403530e 	bge	fp,r16,3544 <___svfprintf_internal_r+0x20f4>
    27f8:	01400074 	movhi	r5,1
    27fc:	295ad384 	addi	r5,r5,27470
    2800:	d9402c15 	stw	r5,176(sp)
    2804:	01c001c4 	movi	r7,7
    2808:	dd002d17 	ldw	r20,180(sp)
    280c:	00000306 	br	281c <___svfprintf_internal_r+0x13cc>
    2810:	843ffc04 	addi	r16,r16,-16
    2814:	b5800204 	addi	r22,r22,8
    2818:	e400130e 	bge	fp,r16,2868 <___svfprintf_internal_r+0x1418>
    281c:	18c00404 	addi	r3,r3,16
    2820:	8c400044 	addi	r17,r17,1
    2824:	b5400015 	stw	r21,0(r22)
    2828:	b7000115 	stw	fp,4(r22)
    282c:	d8c02015 	stw	r3,128(sp)
    2830:	dc401f15 	stw	r17,124(sp)
    2834:	3c7ff60e 	bge	r7,r17,2810 <__alt_mem_Onchip_SRAM+0xf8002810>
    2838:	d9801e04 	addi	r6,sp,120
    283c:	a00b883a 	mov	r5,r20
    2840:	9809883a 	mov	r4,r19
    2844:	d9c03d15 	stw	r7,244(sp)
    2848:	000b0040 	call	b004 <__ssprint_r>
    284c:	d9c03d17 	ldw	r7,244(sp)
    2850:	103be61e 	bne	r2,zero,17ec <__alt_mem_Onchip_SRAM+0xf80017ec>
    2854:	843ffc04 	addi	r16,r16,-16
    2858:	d8c02017 	ldw	r3,128(sp)
    285c:	dc401f17 	ldw	r17,124(sp)
    2860:	dd800404 	addi	r22,sp,16
    2864:	e43fed16 	blt	fp,r16,281c <__alt_mem_Onchip_SRAM+0xf800281c>
    2868:	d8802c17 	ldw	r2,176(sp)
    286c:	1c07883a 	add	r3,r3,r16
    2870:	8c400044 	addi	r17,r17,1
    2874:	b0800015 	stw	r2,0(r22)
    2878:	b4000115 	stw	r16,4(r22)
    287c:	d8c02015 	stw	r3,128(sp)
    2880:	dc401f15 	stw	r17,124(sp)
    2884:	008001c4 	movi	r2,7
    2888:	147f2e0e 	bge	r2,r17,2544 <__alt_mem_Onchip_SRAM+0xf8002544>
    288c:	d9402d17 	ldw	r5,180(sp)
    2890:	d9801e04 	addi	r6,sp,120
    2894:	9809883a 	mov	r4,r19
    2898:	000b0040 	call	b004 <__ssprint_r>
    289c:	103bd31e 	bne	r2,zero,17ec <__alt_mem_Onchip_SRAM+0xf80017ec>
    28a0:	d8c02017 	ldw	r3,128(sp)
    28a4:	dc401f17 	ldw	r17,124(sp)
    28a8:	dd800404 	addi	r22,sp,16
    28ac:	003f2606 	br	2548 <__alt_mem_Onchip_SRAM+0xf8002548>
    28b0:	9080040c 	andi	r2,r18,16
    28b4:	1000c326 	beq	r2,zero,2bc4 <___svfprintf_internal_r+0x1774>
    28b8:	d9402e17 	ldw	r5,184(sp)
    28bc:	2d000017 	ldw	r20,0(r5)
    28c0:	29400104 	addi	r5,r5,4
    28c4:	d9402e15 	stw	r5,184(sp)
    28c8:	a02dd7fa 	srai	r22,r20,31
    28cc:	b005883a 	mov	r2,r22
    28d0:	103c430e 	bge	r2,zero,19e0 <__alt_mem_Onchip_SRAM+0xf80019e0>
    28d4:	d9402a17 	ldw	r5,168(sp)
    28d8:	0529c83a 	sub	r20,zero,r20
    28dc:	07000b44 	movi	fp,45
    28e0:	a004c03a 	cmpne	r2,r20,zero
    28e4:	05adc83a 	sub	r22,zero,r22
    28e8:	df002785 	stb	fp,158(sp)
    28ec:	b0adc83a 	sub	r22,r22,r2
    28f0:	28022e16 	blt	r5,zero,31ac <___svfprintf_internal_r+0x1d5c>
    28f4:	00bfdfc4 	movi	r2,-129
    28f8:	90a4703a 	and	r18,r18,r2
    28fc:	003c3f06 	br	19fc <__alt_mem_Onchip_SRAM+0xf80019fc>
    2900:	9080100c 	andi	r2,r18,64
    2904:	d8002785 	stb	zero,158(sp)
    2908:	10012526 	beq	r2,zero,2da0 <___svfprintf_internal_r+0x1950>
    290c:	d9402e17 	ldw	r5,184(sp)
    2910:	d8c02a17 	ldw	r3,168(sp)
    2914:	002d883a 	mov	r22,zero
    2918:	28800104 	addi	r2,r5,4
    291c:	2d00000b 	ldhu	r20,0(r5)
    2920:	183fa20e 	bge	r3,zero,27ac <__alt_mem_Onchip_SRAM+0xf80027ac>
    2924:	d8802e15 	stw	r2,184(sp)
    2928:	0039883a 	mov	fp,zero
    292c:	a584b03a 	or	r2,r20,r22
    2930:	103c321e 	bne	r2,zero,19fc <__alt_mem_Onchip_SRAM+0xf80019fc>
    2934:	00800044 	movi	r2,1
    2938:	003e5006 	br	227c <__alt_mem_Onchip_SRAM+0xf800227c>
    293c:	d9402d17 	ldw	r5,180(sp)
    2940:	d9801e04 	addi	r6,sp,120
    2944:	9809883a 	mov	r4,r19
    2948:	000b0040 	call	b004 <__ssprint_r>
    294c:	103ba71e 	bne	r2,zero,17ec <__alt_mem_Onchip_SRAM+0xf80017ec>
    2950:	d8c02017 	ldw	r3,128(sp)
    2954:	da000404 	addi	r8,sp,16
    2958:	d9003217 	ldw	r4,200(sp)
    295c:	d8802617 	ldw	r2,152(sp)
    2960:	d9403317 	ldw	r5,204(sp)
    2964:	8123883a 	add	r17,r16,r4
    2968:	11400216 	blt	r2,r5,2974 <___svfprintf_internal_r+0x1524>
    296c:	9100004c 	andi	r4,r18,1
    2970:	20000d26 	beq	r4,zero,29a8 <___svfprintf_internal_r+0x1558>
    2974:	d9003817 	ldw	r4,224(sp)
    2978:	d9403417 	ldw	r5,208(sp)
    297c:	1907883a 	add	r3,r3,r4
    2980:	d9001f17 	ldw	r4,124(sp)
    2984:	41400015 	stw	r5,0(r8)
    2988:	d9403817 	ldw	r5,224(sp)
    298c:	21000044 	addi	r4,r4,1
    2990:	d8c02015 	stw	r3,128(sp)
    2994:	41400115 	stw	r5,4(r8)
    2998:	d9001f15 	stw	r4,124(sp)
    299c:	014001c4 	movi	r5,7
    29a0:	2901dc16 	blt	r5,r4,3114 <___svfprintf_internal_r+0x1cc4>
    29a4:	42000204 	addi	r8,r8,8
    29a8:	d9003317 	ldw	r4,204(sp)
    29ac:	8121883a 	add	r16,r16,r4
    29b0:	2085c83a 	sub	r2,r4,r2
    29b4:	8461c83a 	sub	r16,r16,r17
    29b8:	1400010e 	bge	r2,r16,29c0 <___svfprintf_internal_r+0x1570>
    29bc:	1021883a 	mov	r16,r2
    29c0:	04000a0e 	bge	zero,r16,29ec <___svfprintf_internal_r+0x159c>
    29c4:	d9001f17 	ldw	r4,124(sp)
    29c8:	1c07883a 	add	r3,r3,r16
    29cc:	44400015 	stw	r17,0(r8)
    29d0:	21000044 	addi	r4,r4,1
    29d4:	44000115 	stw	r16,4(r8)
    29d8:	d8c02015 	stw	r3,128(sp)
    29dc:	d9001f15 	stw	r4,124(sp)
    29e0:	014001c4 	movi	r5,7
    29e4:	2901e616 	blt	r5,r4,3180 <___svfprintf_internal_r+0x1d30>
    29e8:	42000204 	addi	r8,r8,8
    29ec:	8001f616 	blt	r16,zero,31c8 <___svfprintf_internal_r+0x1d78>
    29f0:	1421c83a 	sub	r16,r2,r16
    29f4:	043cfa0e 	bge	zero,r16,1de0 <__alt_mem_Onchip_SRAM+0xf8001de0>
    29f8:	04400404 	movi	r17,16
    29fc:	d8801f17 	ldw	r2,124(sp)
    2a00:	8c3edd0e 	bge	r17,r16,2578 <__alt_mem_Onchip_SRAM+0xf8002578>
    2a04:	01400074 	movhi	r5,1
    2a08:	295ad384 	addi	r5,r5,27470
    2a0c:	d9402c15 	stw	r5,176(sp)
    2a10:	058001c4 	movi	r22,7
    2a14:	dd002d17 	ldw	r20,180(sp)
    2a18:	00000306 	br	2a28 <___svfprintf_internal_r+0x15d8>
    2a1c:	42000204 	addi	r8,r8,8
    2a20:	843ffc04 	addi	r16,r16,-16
    2a24:	8c3ed70e 	bge	r17,r16,2584 <__alt_mem_Onchip_SRAM+0xf8002584>
    2a28:	18c00404 	addi	r3,r3,16
    2a2c:	10800044 	addi	r2,r2,1
    2a30:	45400015 	stw	r21,0(r8)
    2a34:	44400115 	stw	r17,4(r8)
    2a38:	d8c02015 	stw	r3,128(sp)
    2a3c:	d8801f15 	stw	r2,124(sp)
    2a40:	b0bff60e 	bge	r22,r2,2a1c <__alt_mem_Onchip_SRAM+0xf8002a1c>
    2a44:	d9801e04 	addi	r6,sp,120
    2a48:	a00b883a 	mov	r5,r20
    2a4c:	9809883a 	mov	r4,r19
    2a50:	000b0040 	call	b004 <__ssprint_r>
    2a54:	103b651e 	bne	r2,zero,17ec <__alt_mem_Onchip_SRAM+0xf80017ec>
    2a58:	d8c02017 	ldw	r3,128(sp)
    2a5c:	d8801f17 	ldw	r2,124(sp)
    2a60:	da000404 	addi	r8,sp,16
    2a64:	003fee06 	br	2a20 <__alt_mem_Onchip_SRAM+0xf8002a20>
    2a68:	9088703a 	and	r4,r18,r2
    2a6c:	203e8d1e 	bne	r4,zero,24a4 <__alt_mem_Onchip_SRAM+0xf80024a4>
    2a70:	dc401f17 	ldw	r17,124(sp)
    2a74:	40800115 	stw	r2,4(r8)
    2a78:	44000015 	stw	r16,0(r8)
    2a7c:	8c400044 	addi	r17,r17,1
    2a80:	d8c02015 	stw	r3,128(sp)
    2a84:	dc401f15 	stw	r17,124(sp)
    2a88:	008001c4 	movi	r2,7
    2a8c:	147f7f16 	blt	r2,r17,288c <__alt_mem_Onchip_SRAM+0xf800288c>
    2a90:	45800204 	addi	r22,r8,8
    2a94:	003eac06 	br	2548 <__alt_mem_Onchip_SRAM+0xf8002548>
    2a98:	d9402d17 	ldw	r5,180(sp)
    2a9c:	d9801e04 	addi	r6,sp,120
    2aa0:	9809883a 	mov	r4,r19
    2aa4:	000b0040 	call	b004 <__ssprint_r>
    2aa8:	103b501e 	bne	r2,zero,17ec <__alt_mem_Onchip_SRAM+0xf80017ec>
    2aac:	d8c02017 	ldw	r3,128(sp)
    2ab0:	dc401f17 	ldw	r17,124(sp)
    2ab4:	da000404 	addi	r8,sp,16
    2ab8:	003e8406 	br	24cc <__alt_mem_Onchip_SRAM+0xf80024cc>
    2abc:	d9402d17 	ldw	r5,180(sp)
    2ac0:	d9801e04 	addi	r6,sp,120
    2ac4:	9809883a 	mov	r4,r19
    2ac8:	000b0040 	call	b004 <__ssprint_r>
    2acc:	103b471e 	bne	r2,zero,17ec <__alt_mem_Onchip_SRAM+0xf80017ec>
    2ad0:	d8c02017 	ldw	r3,128(sp)
    2ad4:	dc401f17 	ldw	r17,124(sp)
    2ad8:	dd800404 	addi	r22,sp,16
    2adc:	003e8606 	br	24f8 <__alt_mem_Onchip_SRAM+0xf80024f8>
    2ae0:	0029883a 	mov	r20,zero
    2ae4:	a5000c04 	addi	r20,r20,48
    2ae8:	dc001dc4 	addi	r16,sp,119
    2aec:	dd001dc5 	stb	r20,119(sp)
    2af0:	003f3806 	br	27d4 <__alt_mem_Onchip_SRAM+0xf80027d4>
    2af4:	d9402d17 	ldw	r5,180(sp)
    2af8:	d9801e04 	addi	r6,sp,120
    2afc:	9809883a 	mov	r4,r19
    2b00:	000b0040 	call	b004 <__ssprint_r>
    2b04:	103b391e 	bne	r2,zero,17ec <__alt_mem_Onchip_SRAM+0xf80017ec>
    2b08:	d8c02017 	ldw	r3,128(sp)
    2b0c:	da000404 	addi	r8,sp,16
    2b10:	003c7306 	br	1ce0 <__alt_mem_Onchip_SRAM+0xf8001ce0>
    2b14:	d9003617 	ldw	r4,216(sp)
    2b18:	d9403717 	ldw	r5,220(sp)
    2b1c:	da003e15 	stw	r8,248(sp)
    2b20:	000ad240 	call	ad24 <__fpclassifyd>
    2b24:	da003e17 	ldw	r8,248(sp)
    2b28:	1000bd1e 	bne	r2,zero,2e20 <___svfprintf_internal_r+0x19d0>
    2b2c:	008011c4 	movi	r2,71
    2b30:	14411e0e 	bge	r2,r17,2fac <___svfprintf_internal_r+0x1b5c>
    2b34:	04000074 	movhi	r16,1
    2b38:	841ac604 	addi	r16,r16,27416
    2b3c:	00c000c4 	movi	r3,3
    2b40:	00bfdfc4 	movi	r2,-129
    2b44:	d8c02915 	stw	r3,164(sp)
    2b48:	90a4703a 	and	r18,r18,r2
    2b4c:	df002783 	ldbu	fp,158(sp)
    2b50:	d8c02b15 	stw	r3,172(sp)
    2b54:	d8002a15 	stw	zero,168(sp)
    2b58:	d8003215 	stw	zero,200(sp)
    2b5c:	003bfa06 	br	1b48 <__alt_mem_Onchip_SRAM+0xf8001b48>
    2b60:	9080100c 	andi	r2,r18,64
    2b64:	d8002785 	stb	zero,158(sp)
    2b68:	10009426 	beq	r2,zero,2dbc <___svfprintf_internal_r+0x196c>
    2b6c:	d9402e17 	ldw	r5,184(sp)
    2b70:	d8c02a17 	ldw	r3,168(sp)
    2b74:	002d883a 	mov	r22,zero
    2b78:	28800104 	addi	r2,r5,4
    2b7c:	2d00000b 	ldhu	r20,0(r5)
    2b80:	183ec10e 	bge	r3,zero,2688 <__alt_mem_Onchip_SRAM+0xf8002688>
    2b84:	a586b03a 	or	r3,r20,r22
    2b88:	d8802e15 	stw	r2,184(sp)
    2b8c:	183ec21e 	bne	r3,zero,2698 <__alt_mem_Onchip_SRAM+0xf8002698>
    2b90:	0039883a 	mov	fp,zero
    2b94:	0005883a 	mov	r2,zero
    2b98:	003db806 	br	227c <__alt_mem_Onchip_SRAM+0xf800227c>
    2b9c:	d8c02e17 	ldw	r3,184(sp)
    2ba0:	d9002e17 	ldw	r4,184(sp)
    2ba4:	d9402e17 	ldw	r5,184(sp)
    2ba8:	18c00017 	ldw	r3,0(r3)
    2bac:	21000117 	ldw	r4,4(r4)
    2bb0:	29400204 	addi	r5,r5,8
    2bb4:	d8c03615 	stw	r3,216(sp)
    2bb8:	d9003715 	stw	r4,220(sp)
    2bbc:	d9402e15 	stw	r5,184(sp)
    2bc0:	003b5a06 	br	192c <__alt_mem_Onchip_SRAM+0xf800192c>
    2bc4:	9080100c 	andi	r2,r18,64
    2bc8:	10010726 	beq	r2,zero,2fe8 <___svfprintf_internal_r+0x1b98>
    2bcc:	d8802e17 	ldw	r2,184(sp)
    2bd0:	1500000f 	ldh	r20,0(r2)
    2bd4:	10800104 	addi	r2,r2,4
    2bd8:	d8802e15 	stw	r2,184(sp)
    2bdc:	a02dd7fa 	srai	r22,r20,31
    2be0:	b005883a 	mov	r2,r22
    2be4:	003b7d06 	br	19dc <__alt_mem_Onchip_SRAM+0xf80019dc>
    2be8:	9080100c 	andi	r2,r18,64
    2bec:	10010526 	beq	r2,zero,3004 <___svfprintf_internal_r+0x1bb4>
    2bf0:	d8c02e17 	ldw	r3,184(sp)
    2bf4:	002d883a 	mov	r22,zero
    2bf8:	1d00000b 	ldhu	r20,0(r3)
    2bfc:	18c00104 	addi	r3,r3,4
    2c00:	d8c02e15 	stw	r3,184(sp)
    2c04:	003ce206 	br	1f90 <__alt_mem_Onchip_SRAM+0xf8001f90>
    2c08:	bc400007 	ldb	r17,0(r23)
    2c0c:	003a6506 	br	15a4 <__alt_mem_Onchip_SRAM+0xf80015a4>
    2c10:	9080040c 	andi	r2,r18,16
    2c14:	10010126 	beq	r2,zero,301c <___svfprintf_internal_r+0x1bcc>
    2c18:	d8c02e17 	ldw	r3,184(sp)
    2c1c:	d9002f17 	ldw	r4,188(sp)
    2c20:	18800017 	ldw	r2,0(r3)
    2c24:	18c00104 	addi	r3,r3,4
    2c28:	d8c02e15 	stw	r3,184(sp)
    2c2c:	11000015 	stw	r4,0(r2)
    2c30:	003a3206 	br	14fc <__alt_mem_Onchip_SRAM+0xf80014fc>
    2c34:	d9002a17 	ldw	r4,168(sp)
    2c38:	d8002785 	stb	zero,158(sp)
    2c3c:	203d8d16 	blt	r4,zero,2274 <__alt_mem_Onchip_SRAM+0xf8002274>
    2c40:	00bfdfc4 	movi	r2,-129
    2c44:	90a4703a 	and	r18,r18,r2
    2c48:	003ad506 	br	17a0 <__alt_mem_Onchip_SRAM+0xf80017a0>
    2c4c:	01400074 	movhi	r5,1
    2c50:	295ad384 	addi	r5,r5,27470
    2c54:	d9402c15 	stw	r5,176(sp)
    2c58:	d9402c17 	ldw	r5,176(sp)
    2c5c:	1c47883a 	add	r3,r3,r17
    2c60:	10800044 	addi	r2,r2,1
    2c64:	41400015 	stw	r5,0(r8)
    2c68:	44400115 	stw	r17,4(r8)
    2c6c:	d8c02015 	stw	r3,128(sp)
    2c70:	d8801f15 	stw	r2,124(sp)
    2c74:	010001c4 	movi	r4,7
    2c78:	20bf3016 	blt	r4,r2,293c <__alt_mem_Onchip_SRAM+0xf800293c>
    2c7c:	42000204 	addi	r8,r8,8
    2c80:	003f3506 	br	2958 <__alt_mem_Onchip_SRAM+0xf8002958>
    2c84:	01000074 	movhi	r4,1
    2c88:	211ad384 	addi	r4,r4,27470
    2c8c:	d9002c15 	stw	r4,176(sp)
    2c90:	003c3c06 	br	1d84 <__alt_mem_Onchip_SRAM+0xf8001d84>
    2c94:	d9402d17 	ldw	r5,180(sp)
    2c98:	d9801e04 	addi	r6,sp,120
    2c9c:	9809883a 	mov	r4,r19
    2ca0:	000b0040 	call	b004 <__ssprint_r>
    2ca4:	103ad11e 	bne	r2,zero,17ec <__alt_mem_Onchip_SRAM+0xf80017ec>
    2ca8:	d8c02017 	ldw	r3,128(sp)
    2cac:	da000404 	addi	r8,sp,16
    2cb0:	003d9306 	br	2300 <__alt_mem_Onchip_SRAM+0xf8002300>
    2cb4:	d8801f17 	ldw	r2,124(sp)
    2cb8:	01400074 	movhi	r5,1
    2cbc:	01000044 	movi	r4,1
    2cc0:	18c00044 	addi	r3,r3,1
    2cc4:	10800044 	addi	r2,r2,1
    2cc8:	295ad304 	addi	r5,r5,27468
    2ccc:	41000115 	stw	r4,4(r8)
    2cd0:	41400015 	stw	r5,0(r8)
    2cd4:	d8c02015 	stw	r3,128(sp)
    2cd8:	d8801f15 	stw	r2,124(sp)
    2cdc:	010001c4 	movi	r4,7
    2ce0:	2080b516 	blt	r4,r2,2fb8 <___svfprintf_internal_r+0x1b68>
    2ce4:	42000204 	addi	r8,r8,8
    2ce8:	8800041e 	bne	r17,zero,2cfc <___svfprintf_internal_r+0x18ac>
    2cec:	d8803317 	ldw	r2,204(sp)
    2cf0:	1000021e 	bne	r2,zero,2cfc <___svfprintf_internal_r+0x18ac>
    2cf4:	9080004c 	andi	r2,r18,1
    2cf8:	103c3926 	beq	r2,zero,1de0 <__alt_mem_Onchip_SRAM+0xf8001de0>
    2cfc:	d9003817 	ldw	r4,224(sp)
    2d00:	d8801f17 	ldw	r2,124(sp)
    2d04:	d9403417 	ldw	r5,208(sp)
    2d08:	20c7883a 	add	r3,r4,r3
    2d0c:	10800044 	addi	r2,r2,1
    2d10:	41000115 	stw	r4,4(r8)
    2d14:	41400015 	stw	r5,0(r8)
    2d18:	d8c02015 	stw	r3,128(sp)
    2d1c:	d8801f15 	stw	r2,124(sp)
    2d20:	010001c4 	movi	r4,7
    2d24:	20818016 	blt	r4,r2,3328 <___svfprintf_internal_r+0x1ed8>
    2d28:	42000204 	addi	r8,r8,8
    2d2c:	0463c83a 	sub	r17,zero,r17
    2d30:	0440cb0e 	bge	zero,r17,3060 <___svfprintf_internal_r+0x1c10>
    2d34:	05800404 	movi	r22,16
    2d38:	b440e80e 	bge	r22,r17,30dc <___svfprintf_internal_r+0x1c8c>
    2d3c:	01400074 	movhi	r5,1
    2d40:	295ad384 	addi	r5,r5,27470
    2d44:	d9402c15 	stw	r5,176(sp)
    2d48:	070001c4 	movi	fp,7
    2d4c:	dd002d17 	ldw	r20,180(sp)
    2d50:	00000306 	br	2d60 <___svfprintf_internal_r+0x1910>
    2d54:	42000204 	addi	r8,r8,8
    2d58:	8c7ffc04 	addi	r17,r17,-16
    2d5c:	b440e20e 	bge	r22,r17,30e8 <___svfprintf_internal_r+0x1c98>
    2d60:	18c00404 	addi	r3,r3,16
    2d64:	10800044 	addi	r2,r2,1
    2d68:	45400015 	stw	r21,0(r8)
    2d6c:	45800115 	stw	r22,4(r8)
    2d70:	d8c02015 	stw	r3,128(sp)
    2d74:	d8801f15 	stw	r2,124(sp)
    2d78:	e0bff60e 	bge	fp,r2,2d54 <__alt_mem_Onchip_SRAM+0xf8002d54>
    2d7c:	d9801e04 	addi	r6,sp,120
    2d80:	a00b883a 	mov	r5,r20
    2d84:	9809883a 	mov	r4,r19
    2d88:	000b0040 	call	b004 <__ssprint_r>
    2d8c:	103a971e 	bne	r2,zero,17ec <__alt_mem_Onchip_SRAM+0xf80017ec>
    2d90:	d8c02017 	ldw	r3,128(sp)
    2d94:	d8801f17 	ldw	r2,124(sp)
    2d98:	da000404 	addi	r8,sp,16
    2d9c:	003fee06 	br	2d58 <__alt_mem_Onchip_SRAM+0xf8002d58>
    2da0:	d9002e17 	ldw	r4,184(sp)
    2da4:	d9402a17 	ldw	r5,168(sp)
    2da8:	002d883a 	mov	r22,zero
    2dac:	20800104 	addi	r2,r4,4
    2db0:	25000017 	ldw	r20,0(r4)
    2db4:	283e7d0e 	bge	r5,zero,27ac <__alt_mem_Onchip_SRAM+0xf80027ac>
    2db8:	003eda06 	br	2924 <__alt_mem_Onchip_SRAM+0xf8002924>
    2dbc:	d9002e17 	ldw	r4,184(sp)
    2dc0:	d9402a17 	ldw	r5,168(sp)
    2dc4:	002d883a 	mov	r22,zero
    2dc8:	20800104 	addi	r2,r4,4
    2dcc:	25000017 	ldw	r20,0(r4)
    2dd0:	283e2d0e 	bge	r5,zero,2688 <__alt_mem_Onchip_SRAM+0xf8002688>
    2dd4:	003f6b06 	br	2b84 <__alt_mem_Onchip_SRAM+0xf8002b84>
    2dd8:	d8c02e15 	stw	r3,184(sp)
    2ddc:	0039883a 	mov	fp,zero
    2de0:	003ed206 	br	292c <__alt_mem_Onchip_SRAM+0xf800292c>
    2de4:	bc400043 	ldbu	r17,1(r23)
    2de8:	84000814 	ori	r16,r16,32
    2dec:	bdc00044 	addi	r23,r23,1
    2df0:	8c403fcc 	andi	r17,r17,255
    2df4:	8c40201c 	xori	r17,r17,128
    2df8:	8c7fe004 	addi	r17,r17,-128
    2dfc:	0039e906 	br	15a4 <__alt_mem_Onchip_SRAM+0xf80015a4>
    2e00:	d9402d17 	ldw	r5,180(sp)
    2e04:	d9801e04 	addi	r6,sp,120
    2e08:	9809883a 	mov	r4,r19
    2e0c:	000b0040 	call	b004 <__ssprint_r>
    2e10:	103a761e 	bne	r2,zero,17ec <__alt_mem_Onchip_SRAM+0xf80017ec>
    2e14:	d8c02017 	ldw	r3,128(sp)
    2e18:	da000404 	addi	r8,sp,16
    2e1c:	003d4a06 	br	2348 <__alt_mem_Onchip_SRAM+0xf8002348>
    2e20:	d9002a17 	ldw	r4,168(sp)
    2e24:	05bff7c4 	movi	r22,-33
    2e28:	00bfffc4 	movi	r2,-1
    2e2c:	8dac703a 	and	r22,r17,r22
    2e30:	20806a26 	beq	r4,r2,2fdc <___svfprintf_internal_r+0x1b8c>
    2e34:	008011c4 	movi	r2,71
    2e38:	b0813726 	beq	r22,r2,3318 <___svfprintf_internal_r+0x1ec8>
    2e3c:	d9003717 	ldw	r4,220(sp)
    2e40:	90c04014 	ori	r3,r18,256
    2e44:	d8c02c15 	stw	r3,176(sp)
    2e48:	20015d16 	blt	r4,zero,33c0 <___svfprintf_internal_r+0x1f70>
    2e4c:	dd003717 	ldw	r20,220(sp)
    2e50:	d8002905 	stb	zero,164(sp)
    2e54:	00801984 	movi	r2,102
    2e58:	88814026 	beq	r17,r2,335c <___svfprintf_internal_r+0x1f0c>
    2e5c:	00801184 	movi	r2,70
    2e60:	88817126 	beq	r17,r2,3428 <___svfprintf_internal_r+0x1fd8>
    2e64:	00801144 	movi	r2,69
    2e68:	b0816226 	beq	r22,r2,33f4 <___svfprintf_internal_r+0x1fa4>
    2e6c:	d8c02a17 	ldw	r3,168(sp)
    2e70:	d8802104 	addi	r2,sp,132
    2e74:	d8800315 	stw	r2,12(sp)
    2e78:	d9403617 	ldw	r5,216(sp)
    2e7c:	d8802504 	addi	r2,sp,148
    2e80:	d8800215 	stw	r2,8(sp)
    2e84:	d8802604 	addi	r2,sp,152
    2e88:	d8c00015 	stw	r3,0(sp)
    2e8c:	d8800115 	stw	r2,4(sp)
    2e90:	01c00084 	movi	r7,2
    2e94:	a00d883a 	mov	r6,r20
    2e98:	9809883a 	mov	r4,r19
    2e9c:	d8c03d15 	stw	r3,244(sp)
    2ea0:	da003e15 	stw	r8,248(sp)
    2ea4:	0005e8c0 	call	5e8c <_dtoa_r>
    2ea8:	1021883a 	mov	r16,r2
    2eac:	008019c4 	movi	r2,103
    2eb0:	d8c03d17 	ldw	r3,244(sp)
    2eb4:	da003e17 	ldw	r8,248(sp)
    2eb8:	8880e726 	beq	r17,r2,3258 <___svfprintf_internal_r+0x1e08>
    2ebc:	008011c4 	movi	r2,71
    2ec0:	8880d426 	beq	r17,r2,3214 <___svfprintf_internal_r+0x1dc4>
    2ec4:	80f9883a 	add	fp,r16,r3
    2ec8:	d9003617 	ldw	r4,216(sp)
    2ecc:	000d883a 	mov	r6,zero
    2ed0:	000f883a 	mov	r7,zero
    2ed4:	a00b883a 	mov	r5,r20
    2ed8:	da003e15 	stw	r8,248(sp)
    2edc:	00105000 	call	10500 <__eqdf2>
    2ee0:	da003e17 	ldw	r8,248(sp)
    2ee4:	1000e426 	beq	r2,zero,3278 <___svfprintf_internal_r+0x1e28>
    2ee8:	d8802117 	ldw	r2,132(sp)
    2eec:	1700062e 	bgeu	r2,fp,2f08 <___svfprintf_internal_r+0x1ab8>
    2ef0:	01000c04 	movi	r4,48
    2ef4:	10c00044 	addi	r3,r2,1
    2ef8:	d8c02115 	stw	r3,132(sp)
    2efc:	11000005 	stb	r4,0(r2)
    2f00:	d8802117 	ldw	r2,132(sp)
    2f04:	173ffb36 	bltu	r2,fp,2ef4 <__alt_mem_Onchip_SRAM+0xf8002ef4>
    2f08:	1405c83a 	sub	r2,r2,r16
    2f0c:	d8803315 	stw	r2,204(sp)
    2f10:	008011c4 	movi	r2,71
    2f14:	b080c526 	beq	r22,r2,322c <___svfprintf_internal_r+0x1ddc>
    2f18:	00801944 	movi	r2,101
    2f1c:	1441d80e 	bge	r2,r17,3680 <___svfprintf_internal_r+0x2230>
    2f20:	d8c02617 	ldw	r3,152(sp)
    2f24:	00801984 	movi	r2,102
    2f28:	d8c03215 	stw	r3,200(sp)
    2f2c:	88813426 	beq	r17,r2,3400 <___svfprintf_internal_r+0x1fb0>
    2f30:	d8c03217 	ldw	r3,200(sp)
    2f34:	d9003317 	ldw	r4,204(sp)
    2f38:	19012516 	blt	r3,r4,33d0 <___svfprintf_internal_r+0x1f80>
    2f3c:	9480004c 	andi	r18,r18,1
    2f40:	9001841e 	bne	r18,zero,3554 <___svfprintf_internal_r+0x2104>
    2f44:	1805883a 	mov	r2,r3
    2f48:	1801cb16 	blt	r3,zero,3678 <___svfprintf_internal_r+0x2228>
    2f4c:	d8c03217 	ldw	r3,200(sp)
    2f50:	044019c4 	movi	r17,103
    2f54:	d8c02b15 	stw	r3,172(sp)
    2f58:	df002907 	ldb	fp,164(sp)
    2f5c:	e000a61e 	bne	fp,zero,31f8 <___svfprintf_internal_r+0x1da8>
    2f60:	df002783 	ldbu	fp,158(sp)
    2f64:	d8802915 	stw	r2,164(sp)
    2f68:	dc802c17 	ldw	r18,176(sp)
    2f6c:	d8002a15 	stw	zero,168(sp)
    2f70:	003af506 	br	1b48 <__alt_mem_Onchip_SRAM+0xf8001b48>
    2f74:	04000074 	movhi	r16,1
    2f78:	841ac304 	addi	r16,r16,27404
    2f7c:	003a7e06 	br	1978 <__alt_mem_Onchip_SRAM+0xf8001978>
    2f80:	d9003917 	ldw	r4,228(sp)
    2f84:	04001004 	movi	r16,64
    2f88:	800b883a 	mov	r5,r16
    2f8c:	00088e40 	call	88e4 <_malloc_r>
    2f90:	d9002d17 	ldw	r4,180(sp)
    2f94:	20800015 	stw	r2,0(r4)
    2f98:	20800415 	stw	r2,16(r4)
    2f9c:	1001d026 	beq	r2,zero,36e0 <___svfprintf_internal_r+0x2290>
    2fa0:	d8802d17 	ldw	r2,180(sp)
    2fa4:	14000515 	stw	r16,20(r2)
    2fa8:	00394406 	br	14bc <__alt_mem_Onchip_SRAM+0xf80014bc>
    2fac:	04000074 	movhi	r16,1
    2fb0:	841ac504 	addi	r16,r16,27412
    2fb4:	003ee106 	br	2b3c <__alt_mem_Onchip_SRAM+0xf8002b3c>
    2fb8:	d9402d17 	ldw	r5,180(sp)
    2fbc:	d9801e04 	addi	r6,sp,120
    2fc0:	9809883a 	mov	r4,r19
    2fc4:	000b0040 	call	b004 <__ssprint_r>
    2fc8:	103a081e 	bne	r2,zero,17ec <__alt_mem_Onchip_SRAM+0xf80017ec>
    2fcc:	dc402617 	ldw	r17,152(sp)
    2fd0:	d8c02017 	ldw	r3,128(sp)
    2fd4:	da000404 	addi	r8,sp,16
    2fd8:	003f4306 	br	2ce8 <__alt_mem_Onchip_SRAM+0xf8002ce8>
    2fdc:	01400184 	movi	r5,6
    2fe0:	d9402a15 	stw	r5,168(sp)
    2fe4:	003f9506 	br	2e3c <__alt_mem_Onchip_SRAM+0xf8002e3c>
    2fe8:	d8c02e17 	ldw	r3,184(sp)
    2fec:	1d000017 	ldw	r20,0(r3)
    2ff0:	18c00104 	addi	r3,r3,4
    2ff4:	d8c02e15 	stw	r3,184(sp)
    2ff8:	a02dd7fa 	srai	r22,r20,31
    2ffc:	b005883a 	mov	r2,r22
    3000:	003a7606 	br	19dc <__alt_mem_Onchip_SRAM+0xf80019dc>
    3004:	d9002e17 	ldw	r4,184(sp)
    3008:	002d883a 	mov	r22,zero
    300c:	25000017 	ldw	r20,0(r4)
    3010:	21000104 	addi	r4,r4,4
    3014:	d9002e15 	stw	r4,184(sp)
    3018:	003bdd06 	br	1f90 <__alt_mem_Onchip_SRAM+0xf8001f90>
    301c:	9480100c 	andi	r18,r18,64
    3020:	90006e26 	beq	r18,zero,31dc <___svfprintf_internal_r+0x1d8c>
    3024:	d9402e17 	ldw	r5,184(sp)
    3028:	d8c02f17 	ldw	r3,188(sp)
    302c:	28800017 	ldw	r2,0(r5)
    3030:	29400104 	addi	r5,r5,4
    3034:	d9402e15 	stw	r5,184(sp)
    3038:	10c0000d 	sth	r3,0(r2)
    303c:	00392f06 	br	14fc <__alt_mem_Onchip_SRAM+0xf80014fc>
    3040:	d9402d17 	ldw	r5,180(sp)
    3044:	d9801e04 	addi	r6,sp,120
    3048:	9809883a 	mov	r4,r19
    304c:	000b0040 	call	b004 <__ssprint_r>
    3050:	1039e61e 	bne	r2,zero,17ec <__alt_mem_Onchip_SRAM+0xf80017ec>
    3054:	d8c02017 	ldw	r3,128(sp)
    3058:	d8801f17 	ldw	r2,124(sp)
    305c:	da000404 	addi	r8,sp,16
    3060:	d9403317 	ldw	r5,204(sp)
    3064:	10800044 	addi	r2,r2,1
    3068:	44000015 	stw	r16,0(r8)
    306c:	28c7883a 	add	r3,r5,r3
    3070:	003b5506 	br	1dc8 <__alt_mem_Onchip_SRAM+0xf8001dc8>
    3074:	8009883a 	mov	r4,r16
    3078:	df003e15 	stw	fp,248(sp)
    307c:	00013b80 	call	13b8 <strlen>
    3080:	d8802b15 	stw	r2,172(sp)
    3084:	da003e17 	ldw	r8,248(sp)
    3088:	103c160e 	bge	r2,zero,20e4 <__alt_mem_Onchip_SRAM+0xf80020e4>
    308c:	0005883a 	mov	r2,zero
    3090:	003c1406 	br	20e4 <__alt_mem_Onchip_SRAM+0xf80020e4>
    3094:	00bfffc4 	movi	r2,-1
    3098:	0039d906 	br	1800 <__alt_mem_Onchip_SRAM+0xf8001800>
    309c:	01000074 	movhi	r4,1
    30a0:	211ad784 	addi	r4,r4,27486
    30a4:	d9003515 	stw	r4,212(sp)
    30a8:	003ae406 	br	1c3c <__alt_mem_Onchip_SRAM+0xf8001c3c>
    30ac:	013fffc4 	movi	r4,-1
    30b0:	0039fa06 	br	189c <__alt_mem_Onchip_SRAM+0xf800189c>
    30b4:	d9402d17 	ldw	r5,180(sp)
    30b8:	d9801e04 	addi	r6,sp,120
    30bc:	9809883a 	mov	r4,r19
    30c0:	000b0040 	call	b004 <__ssprint_r>
    30c4:	1039c91e 	bne	r2,zero,17ec <__alt_mem_Onchip_SRAM+0xf80017ec>
    30c8:	d8c02017 	ldw	r3,128(sp)
    30cc:	da000404 	addi	r8,sp,16
    30d0:	003d8406 	br	26e4 <__alt_mem_Onchip_SRAM+0xf80026e4>
    30d4:	0023883a 	mov	r17,zero
    30d8:	003d8306 	br	26e8 <__alt_mem_Onchip_SRAM+0xf80026e8>
    30dc:	01000074 	movhi	r4,1
    30e0:	211ad384 	addi	r4,r4,27470
    30e4:	d9002c15 	stw	r4,176(sp)
    30e8:	d9002c17 	ldw	r4,176(sp)
    30ec:	1c47883a 	add	r3,r3,r17
    30f0:	10800044 	addi	r2,r2,1
    30f4:	41000015 	stw	r4,0(r8)
    30f8:	44400115 	stw	r17,4(r8)
    30fc:	d8c02015 	stw	r3,128(sp)
    3100:	d8801f15 	stw	r2,124(sp)
    3104:	010001c4 	movi	r4,7
    3108:	20bfcd16 	blt	r4,r2,3040 <__alt_mem_Onchip_SRAM+0xf8003040>
    310c:	42000204 	addi	r8,r8,8
    3110:	003fd306 	br	3060 <__alt_mem_Onchip_SRAM+0xf8003060>
    3114:	d9402d17 	ldw	r5,180(sp)
    3118:	d9801e04 	addi	r6,sp,120
    311c:	9809883a 	mov	r4,r19
    3120:	000b0040 	call	b004 <__ssprint_r>
    3124:	1039b11e 	bne	r2,zero,17ec <__alt_mem_Onchip_SRAM+0xf80017ec>
    3128:	d8802617 	ldw	r2,152(sp)
    312c:	d8c02017 	ldw	r3,128(sp)
    3130:	da000404 	addi	r8,sp,16
    3134:	003e1c06 	br	29a8 <__alt_mem_Onchip_SRAM+0xf80029a8>
    3138:	d8802a17 	ldw	r2,168(sp)
    313c:	00c00184 	movi	r3,6
    3140:	1880012e 	bgeu	r3,r2,3148 <___svfprintf_internal_r+0x1cf8>
    3144:	1805883a 	mov	r2,r3
    3148:	d8802b15 	stw	r2,172(sp)
    314c:	1000f316 	blt	r2,zero,351c <___svfprintf_internal_r+0x20cc>
    3150:	04000074 	movhi	r16,1
    3154:	d8802915 	stw	r2,164(sp)
    3158:	dd002e15 	stw	r20,184(sp)
    315c:	d8002a15 	stw	zero,168(sp)
    3160:	d8003215 	stw	zero,200(sp)
    3164:	841ad104 	addi	r16,r16,27460
    3168:	0039883a 	mov	fp,zero
    316c:	003a7d06 	br	1b64 <__alt_mem_Onchip_SRAM+0xf8001b64>
    3170:	01000074 	movhi	r4,1
    3174:	211ad784 	addi	r4,r4,27486
    3178:	d9003515 	stw	r4,212(sp)
    317c:	003b3d06 	br	1e74 <__alt_mem_Onchip_SRAM+0xf8001e74>
    3180:	d9402d17 	ldw	r5,180(sp)
    3184:	d9801e04 	addi	r6,sp,120
    3188:	9809883a 	mov	r4,r19
    318c:	000b0040 	call	b004 <__ssprint_r>
    3190:	1039961e 	bne	r2,zero,17ec <__alt_mem_Onchip_SRAM+0xf80017ec>
    3194:	d8802617 	ldw	r2,152(sp)
    3198:	d9403317 	ldw	r5,204(sp)
    319c:	d8c02017 	ldw	r3,128(sp)
    31a0:	da000404 	addi	r8,sp,16
    31a4:	2885c83a 	sub	r2,r5,r2
    31a8:	003e1006 	br	29ec <__alt_mem_Onchip_SRAM+0xf80029ec>
    31ac:	00800044 	movi	r2,1
    31b0:	10803fcc 	andi	r2,r2,255
    31b4:	00c00044 	movi	r3,1
    31b8:	10fa1026 	beq	r2,r3,19fc <__alt_mem_Onchip_SRAM+0xf80019fc>
    31bc:	00c00084 	movi	r3,2
    31c0:	10fb8226 	beq	r2,r3,1fcc <__alt_mem_Onchip_SRAM+0xf8001fcc>
    31c4:	003a4206 	br	1ad0 <__alt_mem_Onchip_SRAM+0xf8001ad0>
    31c8:	0021883a 	mov	r16,zero
    31cc:	003e0806 	br	29f0 <__alt_mem_Onchip_SRAM+0xf80029f0>
    31d0:	07000b44 	movi	fp,45
    31d4:	df002785 	stb	fp,158(sp)
    31d8:	0039e306 	br	1968 <__alt_mem_Onchip_SRAM+0xf8001968>
    31dc:	d9002e17 	ldw	r4,184(sp)
    31e0:	d9402f17 	ldw	r5,188(sp)
    31e4:	20800017 	ldw	r2,0(r4)
    31e8:	21000104 	addi	r4,r4,4
    31ec:	d9002e15 	stw	r4,184(sp)
    31f0:	11400015 	stw	r5,0(r2)
    31f4:	0038c106 	br	14fc <__alt_mem_Onchip_SRAM+0xf80014fc>
    31f8:	00c00b44 	movi	r3,45
    31fc:	d8c02785 	stb	r3,158(sp)
    3200:	d8802915 	stw	r2,164(sp)
    3204:	dc802c17 	ldw	r18,176(sp)
    3208:	d8002a15 	stw	zero,168(sp)
    320c:	07000b44 	movi	fp,45
    3210:	003a5106 	br	1b58 <__alt_mem_Onchip_SRAM+0xf8001b58>
    3214:	9080004c 	andi	r2,r18,1
    3218:	1000941e 	bne	r2,zero,346c <___svfprintf_internal_r+0x201c>
    321c:	d8802117 	ldw	r2,132(sp)
    3220:	1405c83a 	sub	r2,r2,r16
    3224:	d8803315 	stw	r2,204(sp)
    3228:	b441151e 	bne	r22,r17,3680 <___svfprintf_internal_r+0x2230>
    322c:	dd802617 	ldw	r22,152(sp)
    3230:	00bfff44 	movi	r2,-3
    3234:	b0801a16 	blt	r22,r2,32a0 <___svfprintf_internal_r+0x1e50>
    3238:	d9402a17 	ldw	r5,168(sp)
    323c:	2d801816 	blt	r5,r22,32a0 <___svfprintf_internal_r+0x1e50>
    3240:	dd803215 	stw	r22,200(sp)
    3244:	003f3a06 	br	2f30 <__alt_mem_Onchip_SRAM+0xf8002f30>
    3248:	1025883a 	mov	r18,r2
    324c:	0039883a 	mov	fp,zero
    3250:	00800084 	movi	r2,2
    3254:	003fd606 	br	31b0 <__alt_mem_Onchip_SRAM+0xf80031b0>
    3258:	9080004c 	andi	r2,r18,1
    325c:	103f191e 	bne	r2,zero,2ec4 <__alt_mem_Onchip_SRAM+0xf8002ec4>
    3260:	d8802117 	ldw	r2,132(sp)
    3264:	003f2806 	br	2f08 <__alt_mem_Onchip_SRAM+0xf8002f08>
    3268:	01000074 	movhi	r4,1
    326c:	211ad384 	addi	r4,r4,27470
    3270:	d9002c15 	stw	r4,176(sp)
    3274:	003c7c06 	br	2468 <__alt_mem_Onchip_SRAM+0xf8002468>
    3278:	e005883a 	mov	r2,fp
    327c:	003f2206 	br	2f08 <__alt_mem_Onchip_SRAM+0xf8002f08>
    3280:	d9002a17 	ldw	r4,168(sp)
    3284:	df002783 	ldbu	fp,158(sp)
    3288:	dd002e15 	stw	r20,184(sp)
    328c:	d9002915 	stw	r4,164(sp)
    3290:	d9002b15 	stw	r4,172(sp)
    3294:	d8002a15 	stw	zero,168(sp)
    3298:	d8003215 	stw	zero,200(sp)
    329c:	003a2a06 	br	1b48 <__alt_mem_Onchip_SRAM+0xf8001b48>
    32a0:	8c7fff84 	addi	r17,r17,-2
    32a4:	b5bfffc4 	addi	r22,r22,-1
    32a8:	dd802615 	stw	r22,152(sp)
    32ac:	dc4022c5 	stb	r17,139(sp)
    32b0:	b000c316 	blt	r22,zero,35c0 <___svfprintf_internal_r+0x2170>
    32b4:	00800ac4 	movi	r2,43
    32b8:	d8802305 	stb	r2,140(sp)
    32bc:	00800244 	movi	r2,9
    32c0:	15806e16 	blt	r2,r22,347c <___svfprintf_internal_r+0x202c>
    32c4:	00800c04 	movi	r2,48
    32c8:	b5800c04 	addi	r22,r22,48
    32cc:	d8802345 	stb	r2,141(sp)
    32d0:	dd802385 	stb	r22,142(sp)
    32d4:	d88023c4 	addi	r2,sp,143
    32d8:	df0022c4 	addi	fp,sp,139
    32dc:	d8c03317 	ldw	r3,204(sp)
    32e0:	1739c83a 	sub	fp,r2,fp
    32e4:	d9003317 	ldw	r4,204(sp)
    32e8:	e0c7883a 	add	r3,fp,r3
    32ec:	df003b15 	stw	fp,236(sp)
    32f0:	d8c02b15 	stw	r3,172(sp)
    32f4:	00800044 	movi	r2,1
    32f8:	1100b70e 	bge	r2,r4,35d8 <___svfprintf_internal_r+0x2188>
    32fc:	d8c02b17 	ldw	r3,172(sp)
    3300:	18c00044 	addi	r3,r3,1
    3304:	d8c02b15 	stw	r3,172(sp)
    3308:	1805883a 	mov	r2,r3
    330c:	1800b016 	blt	r3,zero,35d0 <___svfprintf_internal_r+0x2180>
    3310:	d8003215 	stw	zero,200(sp)
    3314:	003f1006 	br	2f58 <__alt_mem_Onchip_SRAM+0xf8002f58>
    3318:	d8802a17 	ldw	r2,168(sp)
    331c:	103ec71e 	bne	r2,zero,2e3c <__alt_mem_Onchip_SRAM+0xf8002e3c>
    3320:	dc002a15 	stw	r16,168(sp)
    3324:	003ec506 	br	2e3c <__alt_mem_Onchip_SRAM+0xf8002e3c>
    3328:	d9402d17 	ldw	r5,180(sp)
    332c:	d9801e04 	addi	r6,sp,120
    3330:	9809883a 	mov	r4,r19
    3334:	000b0040 	call	b004 <__ssprint_r>
    3338:	10392c1e 	bne	r2,zero,17ec <__alt_mem_Onchip_SRAM+0xf80017ec>
    333c:	dc402617 	ldw	r17,152(sp)
    3340:	d8c02017 	ldw	r3,128(sp)
    3344:	d8801f17 	ldw	r2,124(sp)
    3348:	da000404 	addi	r8,sp,16
    334c:	003e7706 	br	2d2c <__alt_mem_Onchip_SRAM+0xf8002d2c>
    3350:	182f883a 	mov	r23,r3
    3354:	d8002a15 	stw	zero,168(sp)
    3358:	00389306 	br	15a8 <__alt_mem_Onchip_SRAM+0xf80015a8>
    335c:	d8c02a17 	ldw	r3,168(sp)
    3360:	d8802104 	addi	r2,sp,132
    3364:	d8800315 	stw	r2,12(sp)
    3368:	d9403617 	ldw	r5,216(sp)
    336c:	d8802504 	addi	r2,sp,148
    3370:	d8800215 	stw	r2,8(sp)
    3374:	d8802604 	addi	r2,sp,152
    3378:	d8c00015 	stw	r3,0(sp)
    337c:	9809883a 	mov	r4,r19
    3380:	d8800115 	stw	r2,4(sp)
    3384:	01c000c4 	movi	r7,3
    3388:	a00d883a 	mov	r6,r20
    338c:	da003e15 	stw	r8,248(sp)
    3390:	0005e8c0 	call	5e8c <_dtoa_r>
    3394:	d9002a17 	ldw	r4,168(sp)
    3398:	da003e17 	ldw	r8,248(sp)
    339c:	1021883a 	mov	r16,r2
    33a0:	1139883a 	add	fp,r2,r4
    33a4:	2007883a 	mov	r3,r4
    33a8:	81000007 	ldb	r4,0(r16)
    33ac:	00800c04 	movi	r2,48
    33b0:	20806f26 	beq	r4,r2,3570 <___svfprintf_internal_r+0x2120>
    33b4:	d8c02617 	ldw	r3,152(sp)
    33b8:	e0f9883a 	add	fp,fp,r3
    33bc:	003ec206 	br	2ec8 <__alt_mem_Onchip_SRAM+0xf8002ec8>
    33c0:	00c00b44 	movi	r3,45
    33c4:	2520003c 	xorhi	r20,r4,32768
    33c8:	d8c02905 	stb	r3,164(sp)
    33cc:	003ea106 	br	2e54 <__alt_mem_Onchip_SRAM+0xf8002e54>
    33d0:	d8c03217 	ldw	r3,200(sp)
    33d4:	00c0890e 	bge	zero,r3,35fc <___svfprintf_internal_r+0x21ac>
    33d8:	00800044 	movi	r2,1
    33dc:	d9003317 	ldw	r4,204(sp)
    33e0:	1105883a 	add	r2,r2,r4
    33e4:	d8802b15 	stw	r2,172(sp)
    33e8:	10005f16 	blt	r2,zero,3568 <___svfprintf_internal_r+0x2118>
    33ec:	044019c4 	movi	r17,103
    33f0:	003ed906 	br	2f58 <__alt_mem_Onchip_SRAM+0xf8002f58>
    33f4:	d9002a17 	ldw	r4,168(sp)
    33f8:	20c00044 	addi	r3,r4,1
    33fc:	003e9c06 	br	2e70 <__alt_mem_Onchip_SRAM+0xf8002e70>
    3400:	d9002a17 	ldw	r4,168(sp)
    3404:	00c0680e 	bge	zero,r3,35a8 <___svfprintf_internal_r+0x2158>
    3408:	2000461e 	bne	r4,zero,3524 <___svfprintf_internal_r+0x20d4>
    340c:	9480004c 	andi	r18,r18,1
    3410:	9000441e 	bne	r18,zero,3524 <___svfprintf_internal_r+0x20d4>
    3414:	1805883a 	mov	r2,r3
    3418:	1800a116 	blt	r3,zero,36a0 <___svfprintf_internal_r+0x2250>
    341c:	d8c03217 	ldw	r3,200(sp)
    3420:	d8c02b15 	stw	r3,172(sp)
    3424:	003ecc06 	br	2f58 <__alt_mem_Onchip_SRAM+0xf8002f58>
    3428:	d9402a17 	ldw	r5,168(sp)
    342c:	d8802104 	addi	r2,sp,132
    3430:	d8800315 	stw	r2,12(sp)
    3434:	d9400015 	stw	r5,0(sp)
    3438:	d8802504 	addi	r2,sp,148
    343c:	d9403617 	ldw	r5,216(sp)
    3440:	d8800215 	stw	r2,8(sp)
    3444:	d8802604 	addi	r2,sp,152
    3448:	d8800115 	stw	r2,4(sp)
    344c:	01c000c4 	movi	r7,3
    3450:	a00d883a 	mov	r6,r20
    3454:	9809883a 	mov	r4,r19
    3458:	da003e15 	stw	r8,248(sp)
    345c:	0005e8c0 	call	5e8c <_dtoa_r>
    3460:	d8c02a17 	ldw	r3,168(sp)
    3464:	da003e17 	ldw	r8,248(sp)
    3468:	1021883a 	mov	r16,r2
    346c:	00801184 	movi	r2,70
    3470:	80f9883a 	add	fp,r16,r3
    3474:	88bfcc26 	beq	r17,r2,33a8 <__alt_mem_Onchip_SRAM+0xf80033a8>
    3478:	003e9306 	br	2ec8 <__alt_mem_Onchip_SRAM+0xf8002ec8>
    347c:	df0022c4 	addi	fp,sp,139
    3480:	dc002a15 	stw	r16,168(sp)
    3484:	9829883a 	mov	r20,r19
    3488:	e021883a 	mov	r16,fp
    348c:	4027883a 	mov	r19,r8
    3490:	b009883a 	mov	r4,r22
    3494:	01400284 	movi	r5,10
    3498:	0000dc80 	call	dc8 <__modsi3>
    349c:	10800c04 	addi	r2,r2,48
    34a0:	843fffc4 	addi	r16,r16,-1
    34a4:	b009883a 	mov	r4,r22
    34a8:	01400284 	movi	r5,10
    34ac:	80800005 	stb	r2,0(r16)
    34b0:	0000d440 	call	d44 <__divsi3>
    34b4:	102d883a 	mov	r22,r2
    34b8:	00800244 	movi	r2,9
    34bc:	15bff416 	blt	r2,r22,3490 <__alt_mem_Onchip_SRAM+0xf8003490>
    34c0:	9811883a 	mov	r8,r19
    34c4:	b0800c04 	addi	r2,r22,48
    34c8:	a027883a 	mov	r19,r20
    34cc:	8029883a 	mov	r20,r16
    34d0:	a17fffc4 	addi	r5,r20,-1
    34d4:	a0bfffc5 	stb	r2,-1(r20)
    34d8:	dc002a17 	ldw	r16,168(sp)
    34dc:	2f00782e 	bgeu	r5,fp,36c0 <___svfprintf_internal_r+0x2270>
    34e0:	d9c02384 	addi	r7,sp,142
    34e4:	3d0fc83a 	sub	r7,r7,r20
    34e8:	d9002344 	addi	r4,sp,141
    34ec:	e1cf883a 	add	r7,fp,r7
    34f0:	00000106 	br	34f8 <___svfprintf_internal_r+0x20a8>
    34f4:	28800003 	ldbu	r2,0(r5)
    34f8:	20800005 	stb	r2,0(r4)
    34fc:	21000044 	addi	r4,r4,1
    3500:	29400044 	addi	r5,r5,1
    3504:	21fffb1e 	bne	r4,r7,34f4 <__alt_mem_Onchip_SRAM+0xf80034f4>
    3508:	d8802304 	addi	r2,sp,140
    350c:	1505c83a 	sub	r2,r2,r20
    3510:	d8c02344 	addi	r3,sp,141
    3514:	1885883a 	add	r2,r3,r2
    3518:	003f7006 	br	32dc <__alt_mem_Onchip_SRAM+0xf80032dc>
    351c:	0005883a 	mov	r2,zero
    3520:	003f0b06 	br	3150 <__alt_mem_Onchip_SRAM+0xf8003150>
    3524:	d9002a17 	ldw	r4,168(sp)
    3528:	d8c03217 	ldw	r3,200(sp)
    352c:	20800044 	addi	r2,r4,1
    3530:	1885883a 	add	r2,r3,r2
    3534:	d8802b15 	stw	r2,172(sp)
    3538:	103e870e 	bge	r2,zero,2f58 <__alt_mem_Onchip_SRAM+0xf8002f58>
    353c:	0005883a 	mov	r2,zero
    3540:	003e8506 	br	2f58 <__alt_mem_Onchip_SRAM+0xf8002f58>
    3544:	01000074 	movhi	r4,1
    3548:	211ad384 	addi	r4,r4,27470
    354c:	d9002c15 	stw	r4,176(sp)
    3550:	003cc506 	br	2868 <__alt_mem_Onchip_SRAM+0xf8002868>
    3554:	d8c03217 	ldw	r3,200(sp)
    3558:	18c00044 	addi	r3,r3,1
    355c:	d8c02b15 	stw	r3,172(sp)
    3560:	1805883a 	mov	r2,r3
    3564:	183fa10e 	bge	r3,zero,33ec <__alt_mem_Onchip_SRAM+0xf80033ec>
    3568:	0005883a 	mov	r2,zero
    356c:	003f9f06 	br	33ec <__alt_mem_Onchip_SRAM+0xf80033ec>
    3570:	d9003617 	ldw	r4,216(sp)
    3574:	000d883a 	mov	r6,zero
    3578:	000f883a 	mov	r7,zero
    357c:	a00b883a 	mov	r5,r20
    3580:	d8c03d15 	stw	r3,244(sp)
    3584:	da003e15 	stw	r8,248(sp)
    3588:	00105000 	call	10500 <__eqdf2>
    358c:	d8c03d17 	ldw	r3,244(sp)
    3590:	da003e17 	ldw	r8,248(sp)
    3594:	103f8726 	beq	r2,zero,33b4 <__alt_mem_Onchip_SRAM+0xf80033b4>
    3598:	00800044 	movi	r2,1
    359c:	10c7c83a 	sub	r3,r2,r3
    35a0:	d8c02615 	stw	r3,152(sp)
    35a4:	003f8406 	br	33b8 <__alt_mem_Onchip_SRAM+0xf80033b8>
    35a8:	20000e1e 	bne	r4,zero,35e4 <___svfprintf_internal_r+0x2194>
    35ac:	9480004c 	andi	r18,r18,1
    35b0:	90000c1e 	bne	r18,zero,35e4 <___svfprintf_internal_r+0x2194>
    35b4:	00800044 	movi	r2,1
    35b8:	d8802b15 	stw	r2,172(sp)
    35bc:	003e6606 	br	2f58 <__alt_mem_Onchip_SRAM+0xf8002f58>
    35c0:	00800b44 	movi	r2,45
    35c4:	05adc83a 	sub	r22,zero,r22
    35c8:	d8802305 	stb	r2,140(sp)
    35cc:	003f3b06 	br	32bc <__alt_mem_Onchip_SRAM+0xf80032bc>
    35d0:	0005883a 	mov	r2,zero
    35d4:	003f4e06 	br	3310 <__alt_mem_Onchip_SRAM+0xf8003310>
    35d8:	90a4703a 	and	r18,r18,r2
    35dc:	903f4a26 	beq	r18,zero,3308 <__alt_mem_Onchip_SRAM+0xf8003308>
    35e0:	003f4606 	br	32fc <__alt_mem_Onchip_SRAM+0xf80032fc>
    35e4:	d8c02a17 	ldw	r3,168(sp)
    35e8:	18c00084 	addi	r3,r3,2
    35ec:	d8c02b15 	stw	r3,172(sp)
    35f0:	1805883a 	mov	r2,r3
    35f4:	183e580e 	bge	r3,zero,2f58 <__alt_mem_Onchip_SRAM+0xf8002f58>
    35f8:	003fd006 	br	353c <__alt_mem_Onchip_SRAM+0xf800353c>
    35fc:	00800084 	movi	r2,2
    3600:	10c5c83a 	sub	r2,r2,r3
    3604:	003f7506 	br	33dc <__alt_mem_Onchip_SRAM+0xf80033dc>
    3608:	d9402e17 	ldw	r5,184(sp)
    360c:	d9002e17 	ldw	r4,184(sp)
    3610:	bc400043 	ldbu	r17,1(r23)
    3614:	29400017 	ldw	r5,0(r5)
    3618:	20800104 	addi	r2,r4,4
    361c:	d8802e15 	stw	r2,184(sp)
    3620:	d9402a15 	stw	r5,168(sp)
    3624:	182f883a 	mov	r23,r3
    3628:	283df10e 	bge	r5,zero,2df0 <__alt_mem_Onchip_SRAM+0xf8002df0>
    362c:	8c403fcc 	andi	r17,r17,255
    3630:	017fffc4 	movi	r5,-1
    3634:	8c40201c 	xori	r17,r17,128
    3638:	d9402a15 	stw	r5,168(sp)
    363c:	8c7fe004 	addi	r17,r17,-128
    3640:	0037d806 	br	15a4 <__alt_mem_Onchip_SRAM+0xf80015a4>
    3644:	9080004c 	andi	r2,r18,1
    3648:	0039883a 	mov	fp,zero
    364c:	10000726 	beq	r2,zero,366c <___svfprintf_internal_r+0x221c>
    3650:	d8c02817 	ldw	r3,160(sp)
    3654:	dc001dc4 	addi	r16,sp,119
    3658:	00800c04 	movi	r2,48
    365c:	1c07c83a 	sub	r3,r3,r16
    3660:	d8801dc5 	stb	r2,119(sp)
    3664:	d8c02b15 	stw	r3,172(sp)
    3668:	00393106 	br	1b30 <__alt_mem_Onchip_SRAM+0xf8001b30>
    366c:	d8002b15 	stw	zero,172(sp)
    3670:	dc001e04 	addi	r16,sp,120
    3674:	00392e06 	br	1b30 <__alt_mem_Onchip_SRAM+0xf8001b30>
    3678:	0005883a 	mov	r2,zero
    367c:	003e3306 	br	2f4c <__alt_mem_Onchip_SRAM+0xf8002f4c>
    3680:	dd802617 	ldw	r22,152(sp)
    3684:	003f0706 	br	32a4 <__alt_mem_Onchip_SRAM+0xf80032a4>
    3688:	d8c02b03 	ldbu	r3,172(sp)
    368c:	d8c02785 	stb	r3,158(sp)
    3690:	003a3506 	br	1f68 <__alt_mem_Onchip_SRAM+0xf8001f68>
    3694:	d8c02b03 	ldbu	r3,172(sp)
    3698:	d8c02785 	stb	r3,158(sp)
    369c:	003a1706 	br	1efc <__alt_mem_Onchip_SRAM+0xf8001efc>
    36a0:	0005883a 	mov	r2,zero
    36a4:	003f5d06 	br	341c <__alt_mem_Onchip_SRAM+0xf800341c>
    36a8:	d8c02b03 	ldbu	r3,172(sp)
    36ac:	d8c02785 	stb	r3,158(sp)
    36b0:	0038f306 	br	1a80 <__alt_mem_Onchip_SRAM+0xf8001a80>
    36b4:	d8c02b03 	ldbu	r3,172(sp)
    36b8:	d8c02785 	stb	r3,158(sp)
    36bc:	0038be06 	br	19b8 <__alt_mem_Onchip_SRAM+0xf80019b8>
    36c0:	d8802344 	addi	r2,sp,141
    36c4:	003f0506 	br	32dc <__alt_mem_Onchip_SRAM+0xf80032dc>
    36c8:	d8c02b03 	ldbu	r3,172(sp)
    36cc:	d8c02785 	stb	r3,158(sp)
    36d0:	00388b06 	br	1900 <__alt_mem_Onchip_SRAM+0xf8001900>
    36d4:	d8c02b03 	ldbu	r3,172(sp)
    36d8:	d8c02785 	stb	r3,158(sp)
    36dc:	003ad706 	br	223c <__alt_mem_Onchip_SRAM+0xf800223c>
    36e0:	d9403917 	ldw	r5,228(sp)
    36e4:	00800304 	movi	r2,12
    36e8:	28800015 	stw	r2,0(r5)
    36ec:	00bfffc4 	movi	r2,-1
    36f0:	00384306 	br	1800 <__alt_mem_Onchip_SRAM+0xf8001800>
    36f4:	d8c02b03 	ldbu	r3,172(sp)
    36f8:	d8c02785 	stb	r3,158(sp)
    36fc:	003ab606 	br	21d8 <__alt_mem_Onchip_SRAM+0xf80021d8>
    3700:	d8c02b03 	ldbu	r3,172(sp)
    3704:	d8c02785 	stb	r3,158(sp)
    3708:	003a8906 	br	2130 <__alt_mem_Onchip_SRAM+0xf8002130>

0000370c <time>:
    370c:	008000b4 	movhi	r2,2
    3710:	defffc04 	addi	sp,sp,-16
    3714:	10a24904 	addi	r2,r2,-30428
    3718:	dc000215 	stw	r16,8(sp)
    371c:	2021883a 	mov	r16,r4
    3720:	11000017 	ldw	r4,0(r2)
    3724:	000d883a 	mov	r6,zero
    3728:	d80b883a 	mov	r5,sp
    372c:	dfc00315 	stw	ra,12(sp)
    3730:	00085f00 	call	85f0 <_gettimeofday_r>
    3734:	10000716 	blt	r2,zero,3754 <time+0x48>
    3738:	d8800017 	ldw	r2,0(sp)
    373c:	80000126 	beq	r16,zero,3744 <time+0x38>
    3740:	80800015 	stw	r2,0(r16)
    3744:	dfc00317 	ldw	ra,12(sp)
    3748:	dc000217 	ldw	r16,8(sp)
    374c:	dec00404 	addi	sp,sp,16
    3750:	f800283a 	ret
    3754:	00bfffc4 	movi	r2,-1
    3758:	003ffa06 	br	3744 <__alt_mem_Onchip_SRAM+0xf8003744>

0000375c <___vfprintf_internal_r>:
    375c:	deffb804 	addi	sp,sp,-288
    3760:	dfc04715 	stw	ra,284(sp)
    3764:	ddc04515 	stw	r23,276(sp)
    3768:	dd404315 	stw	r21,268(sp)
    376c:	d9002d15 	stw	r4,180(sp)
    3770:	282f883a 	mov	r23,r5
    3774:	302b883a 	mov	r21,r6
    3778:	d9c02e15 	stw	r7,184(sp)
    377c:	df004615 	stw	fp,280(sp)
    3780:	dd804415 	stw	r22,272(sp)
    3784:	dd004215 	stw	r20,264(sp)
    3788:	dcc04115 	stw	r19,260(sp)
    378c:	dc804015 	stw	r18,256(sp)
    3790:	dc403f15 	stw	r17,252(sp)
    3794:	dc003e15 	stw	r16,248(sp)
    3798:	00086f80 	call	86f8 <_localeconv_r>
    379c:	10800017 	ldw	r2,0(r2)
    37a0:	1009883a 	mov	r4,r2
    37a4:	d8803415 	stw	r2,208(sp)
    37a8:	00013b80 	call	13b8 <strlen>
    37ac:	d8803715 	stw	r2,220(sp)
    37b0:	d8802d17 	ldw	r2,180(sp)
    37b4:	10000226 	beq	r2,zero,37c0 <___vfprintf_internal_r+0x64>
    37b8:	10800e17 	ldw	r2,56(r2)
    37bc:	1000fb26 	beq	r2,zero,3bac <___vfprintf_internal_r+0x450>
    37c0:	b880030b 	ldhu	r2,12(r23)
    37c4:	10c8000c 	andi	r3,r2,8192
    37c8:	1800061e 	bne	r3,zero,37e4 <___vfprintf_internal_r+0x88>
    37cc:	b9001917 	ldw	r4,100(r23)
    37d0:	00f7ffc4 	movi	r3,-8193
    37d4:	10880014 	ori	r2,r2,8192
    37d8:	20c6703a 	and	r3,r4,r3
    37dc:	b880030d 	sth	r2,12(r23)
    37e0:	b8c01915 	stw	r3,100(r23)
    37e4:	10c0020c 	andi	r3,r2,8
    37e8:	1800c326 	beq	r3,zero,3af8 <___vfprintf_internal_r+0x39c>
    37ec:	b8c00417 	ldw	r3,16(r23)
    37f0:	1800c126 	beq	r3,zero,3af8 <___vfprintf_internal_r+0x39c>
    37f4:	1080068c 	andi	r2,r2,26
    37f8:	00c00284 	movi	r3,10
    37fc:	10c0c626 	beq	r2,r3,3b18 <___vfprintf_internal_r+0x3bc>
    3800:	d8c00404 	addi	r3,sp,16
    3804:	05000074 	movhi	r20,1
    3808:	d9001e04 	addi	r4,sp,120
    380c:	a51adb84 	addi	r20,r20,27502
    3810:	d8c01e15 	stw	r3,120(sp)
    3814:	d8002015 	stw	zero,128(sp)
    3818:	d8001f15 	stw	zero,124(sp)
    381c:	d8003315 	stw	zero,204(sp)
    3820:	d8003615 	stw	zero,216(sp)
    3824:	d8003815 	stw	zero,224(sp)
    3828:	1811883a 	mov	r8,r3
    382c:	d8003915 	stw	zero,228(sp)
    3830:	d8003a15 	stw	zero,232(sp)
    3834:	d8002f15 	stw	zero,188(sp)
    3838:	d9002815 	stw	r4,160(sp)
    383c:	a8800007 	ldb	r2,0(r21)
    3840:	10028b26 	beq	r2,zero,4270 <___vfprintf_internal_r+0xb14>
    3844:	00c00944 	movi	r3,37
    3848:	a823883a 	mov	r17,r21
    384c:	10c0021e 	bne	r2,r3,3858 <___vfprintf_internal_r+0xfc>
    3850:	00001406 	br	38a4 <___vfprintf_internal_r+0x148>
    3854:	10c00326 	beq	r2,r3,3864 <___vfprintf_internal_r+0x108>
    3858:	8c400044 	addi	r17,r17,1
    385c:	88800007 	ldb	r2,0(r17)
    3860:	103ffc1e 	bne	r2,zero,3854 <__alt_mem_Onchip_SRAM+0xf8003854>
    3864:	8d61c83a 	sub	r16,r17,r21
    3868:	80000e26 	beq	r16,zero,38a4 <___vfprintf_internal_r+0x148>
    386c:	d8c02017 	ldw	r3,128(sp)
    3870:	d8801f17 	ldw	r2,124(sp)
    3874:	45400015 	stw	r21,0(r8)
    3878:	1c07883a 	add	r3,r3,r16
    387c:	10800044 	addi	r2,r2,1
    3880:	d8c02015 	stw	r3,128(sp)
    3884:	44000115 	stw	r16,4(r8)
    3888:	d8801f15 	stw	r2,124(sp)
    388c:	00c001c4 	movi	r3,7
    3890:	1880a916 	blt	r3,r2,3b38 <___vfprintf_internal_r+0x3dc>
    3894:	42000204 	addi	r8,r8,8
    3898:	d9402f17 	ldw	r5,188(sp)
    389c:	2c0b883a 	add	r5,r5,r16
    38a0:	d9402f15 	stw	r5,188(sp)
    38a4:	88800007 	ldb	r2,0(r17)
    38a8:	1000aa26 	beq	r2,zero,3b54 <___vfprintf_internal_r+0x3f8>
    38ac:	8d400044 	addi	r21,r17,1
    38b0:	8c400047 	ldb	r17,1(r17)
    38b4:	0021883a 	mov	r16,zero
    38b8:	00bfffc4 	movi	r2,-1
    38bc:	0025883a 	mov	r18,zero
    38c0:	dc002905 	stb	r16,164(sp)
    38c4:	d8002785 	stb	zero,158(sp)
    38c8:	d8002b05 	stb	zero,172(sp)
    38cc:	d8802a15 	stw	r2,168(sp)
    38d0:	d8003115 	stw	zero,196(sp)
    38d4:	04c01604 	movi	r19,88
    38d8:	05800244 	movi	r22,9
    38dc:	9021883a 	mov	r16,r18
    38e0:	4039883a 	mov	fp,r8
    38e4:	ad400044 	addi	r21,r21,1
    38e8:	88bff804 	addi	r2,r17,-32
    38ec:	98833236 	bltu	r19,r2,45b8 <___vfprintf_internal_r+0xe5c>
    38f0:	100490ba 	slli	r2,r2,2
    38f4:	00c00034 	movhi	r3,0
    38f8:	18ce4204 	addi	r3,r3,14600
    38fc:	10c5883a 	add	r2,r2,r3
    3900:	10800017 	ldw	r2,0(r2)
    3904:	1000683a 	jmp	r2
    3908:	000044b0 	cmpltui	zero,zero,274
    390c:	000045b8 	rdprs	zero,zero,278
    3910:	000045b8 	rdprs	zero,zero,278
    3914:	000044d0 	cmplti	zero,zero,275
    3918:	000045b8 	rdprs	zero,zero,278
    391c:	000045b8 	rdprs	zero,zero,278
    3920:	000045b8 	rdprs	zero,zero,278
    3924:	000045b8 	rdprs	zero,zero,278
    3928:	000045b8 	rdprs	zero,zero,278
    392c:	000045b8 	rdprs	zero,zero,278
    3930:	00003bb8 	rdprs	zero,zero,238
    3934:	000043c0 	call	43c <ASCII_to_7Seg+0x68>
    3938:	000045b8 	rdprs	zero,zero,278
    393c:	00003a7c 	xorhi	zero,zero,233
    3940:	00003bdc 	xori	zero,zero,239
    3944:	000045b8 	rdprs	zero,zero,278
    3948:	00003c2c 	andhi	zero,zero,240
    394c:	00003c38 	rdprs	zero,zero,240
    3950:	00003c38 	rdprs	zero,zero,240
    3954:	00003c38 	rdprs	zero,zero,240
    3958:	00003c38 	rdprs	zero,zero,240
    395c:	00003c38 	rdprs	zero,zero,240
    3960:	00003c38 	rdprs	zero,zero,240
    3964:	00003c38 	rdprs	zero,zero,240
    3968:	00003c38 	rdprs	zero,zero,240
    396c:	00003c38 	rdprs	zero,zero,240
    3970:	000045b8 	rdprs	zero,zero,278
    3974:	000045b8 	rdprs	zero,zero,278
    3978:	000045b8 	rdprs	zero,zero,278
    397c:	000045b8 	rdprs	zero,zero,278
    3980:	000045b8 	rdprs	zero,zero,278
    3984:	000045b8 	rdprs	zero,zero,278
    3988:	000045b8 	rdprs	zero,zero,278
    398c:	000045b8 	rdprs	zero,zero,278
    3990:	000045b8 	rdprs	zero,zero,278
    3994:	000045b8 	rdprs	zero,zero,278
    3998:	00003c74 	movhi	zero,241
    399c:	00003d3c 	xorhi	zero,zero,244
    39a0:	000045b8 	rdprs	zero,zero,278
    39a4:	00003d3c 	xorhi	zero,zero,244
    39a8:	000045b8 	rdprs	zero,zero,278
    39ac:	000045b8 	rdprs	zero,zero,278
    39b0:	000045b8 	rdprs	zero,zero,278
    39b4:	000045b8 	rdprs	zero,zero,278
    39b8:	00003de8 	cmpgeui	zero,zero,247
    39bc:	000045b8 	rdprs	zero,zero,278
    39c0:	000045b8 	rdprs	zero,zero,278
    39c4:	00003df4 	movhi	zero,247
    39c8:	000045b8 	rdprs	zero,zero,278
    39cc:	000045b8 	rdprs	zero,zero,278
    39d0:	000045b8 	rdprs	zero,zero,278
    39d4:	000045b8 	rdprs	zero,zero,278
    39d8:	000045b8 	rdprs	zero,zero,278
    39dc:	00004278 	rdprs	zero,zero,265
    39e0:	000045b8 	rdprs	zero,zero,278
    39e4:	000045b8 	rdprs	zero,zero,278
    39e8:	000042e4 	muli	zero,zero,267
    39ec:	000045b8 	rdprs	zero,zero,278
    39f0:	000045b8 	rdprs	zero,zero,278
    39f4:	000045b8 	rdprs	zero,zero,278
    39f8:	000045b8 	rdprs	zero,zero,278
    39fc:	000045b8 	rdprs	zero,zero,278
    3a00:	000045b8 	rdprs	zero,zero,278
    3a04:	000045b8 	rdprs	zero,zero,278
    3a08:	000045b8 	rdprs	zero,zero,278
    3a0c:	000045b8 	rdprs	zero,zero,278
    3a10:	000045b8 	rdprs	zero,zero,278
    3a14:	0000455c 	xori	zero,zero,277
    3a18:	000044dc 	xori	zero,zero,275
    3a1c:	00003d3c 	xorhi	zero,zero,244
    3a20:	00003d3c 	xorhi	zero,zero,244
    3a24:	00003d3c 	xorhi	zero,zero,244
    3a28:	000044fc 	xorhi	zero,zero,275
    3a2c:	000044dc 	xori	zero,zero,275
    3a30:	000045b8 	rdprs	zero,zero,278
    3a34:	000045b8 	rdprs	zero,zero,278
    3a38:	00004508 	cmpgei	zero,zero,276
    3a3c:	000045b8 	rdprs	zero,zero,278
    3a40:	0000451c 	xori	zero,zero,276
    3a44:	000043a0 	cmpeqi	zero,zero,270
    3a48:	00003a88 	cmpgei	zero,zero,234
    3a4c:	000043d8 	cmpnei	zero,zero,271
    3a50:	000045b8 	rdprs	zero,zero,278
    3a54:	000043e4 	muli	zero,zero,271
    3a58:	000045b8 	rdprs	zero,zero,278
    3a5c:	00004448 	cmpgei	zero,zero,273
    3a60:	000045b8 	rdprs	zero,zero,278
    3a64:	000045b8 	rdprs	zero,zero,278
    3a68:	00004468 	cmpgeui	zero,zero,273
    3a6c:	d8c03117 	ldw	r3,196(sp)
    3a70:	d8802e15 	stw	r2,184(sp)
    3a74:	00c7c83a 	sub	r3,zero,r3
    3a78:	d8c03115 	stw	r3,196(sp)
    3a7c:	84000114 	ori	r16,r16,4
    3a80:	ac400007 	ldb	r17,0(r21)
    3a84:	003f9706 	br	38e4 <__alt_mem_Onchip_SRAM+0xf80038e4>
    3a88:	00800c04 	movi	r2,48
    3a8c:	d8802705 	stb	r2,156(sp)
    3a90:	00801e04 	movi	r2,120
    3a94:	d8802745 	stb	r2,157(sp)
    3a98:	d9002a17 	ldw	r4,168(sp)
    3a9c:	d8802e17 	ldw	r2,184(sp)
    3aa0:	d8002785 	stb	zero,158(sp)
    3aa4:	e011883a 	mov	r8,fp
    3aa8:	10c00104 	addi	r3,r2,4
    3aac:	14c00017 	ldw	r19,0(r2)
    3ab0:	002d883a 	mov	r22,zero
    3ab4:	80800094 	ori	r2,r16,2
    3ab8:	2002ca16 	blt	r4,zero,45e4 <___vfprintf_internal_r+0xe88>
    3abc:	00bfdfc4 	movi	r2,-129
    3ac0:	80a4703a 	and	r18,r16,r2
    3ac4:	d8c02e15 	stw	r3,184(sp)
    3ac8:	94800094 	ori	r18,r18,2
    3acc:	9802b41e 	bne	r19,zero,45a0 <___vfprintf_internal_r+0xe44>
    3ad0:	01400074 	movhi	r5,1
    3ad4:	295acc04 	addi	r5,r5,27440
    3ad8:	d9403915 	stw	r5,228(sp)
    3adc:	04401e04 	movi	r17,120
    3ae0:	d8802a17 	ldw	r2,168(sp)
    3ae4:	0039883a 	mov	fp,zero
    3ae8:	1001fa26 	beq	r2,zero,42d4 <___vfprintf_internal_r+0xb78>
    3aec:	0027883a 	mov	r19,zero
    3af0:	002d883a 	mov	r22,zero
    3af4:	00021906 	br	435c <___vfprintf_internal_r+0xc00>
    3af8:	d9002d17 	ldw	r4,180(sp)
    3afc:	b80b883a 	mov	r5,r23
    3b00:	0005b100 	call	5b10 <__swsetup_r>
    3b04:	1005dc1e 	bne	r2,zero,5278 <___vfprintf_internal_r+0x1b1c>
    3b08:	b880030b 	ldhu	r2,12(r23)
    3b0c:	00c00284 	movi	r3,10
    3b10:	1080068c 	andi	r2,r2,26
    3b14:	10ff3a1e 	bne	r2,r3,3800 <__alt_mem_Onchip_SRAM+0xf8003800>
    3b18:	b880038f 	ldh	r2,14(r23)
    3b1c:	103f3816 	blt	r2,zero,3800 <__alt_mem_Onchip_SRAM+0xf8003800>
    3b20:	d9c02e17 	ldw	r7,184(sp)
    3b24:	d9002d17 	ldw	r4,180(sp)
    3b28:	a80d883a 	mov	r6,r21
    3b2c:	b80b883a 	mov	r5,r23
    3b30:	0005a540 	call	5a54 <__sbprintf>
    3b34:	00001106 	br	3b7c <___vfprintf_internal_r+0x420>
    3b38:	d9002d17 	ldw	r4,180(sp)
    3b3c:	d9801e04 	addi	r6,sp,120
    3b40:	b80b883a 	mov	r5,r23
    3b44:	000c6700 	call	c670 <__sprint_r>
    3b48:	1000081e 	bne	r2,zero,3b6c <___vfprintf_internal_r+0x410>
    3b4c:	da000404 	addi	r8,sp,16
    3b50:	003f5106 	br	3898 <__alt_mem_Onchip_SRAM+0xf8003898>
    3b54:	d8802017 	ldw	r2,128(sp)
    3b58:	10000426 	beq	r2,zero,3b6c <___vfprintf_internal_r+0x410>
    3b5c:	d9002d17 	ldw	r4,180(sp)
    3b60:	d9801e04 	addi	r6,sp,120
    3b64:	b80b883a 	mov	r5,r23
    3b68:	000c6700 	call	c670 <__sprint_r>
    3b6c:	b880030b 	ldhu	r2,12(r23)
    3b70:	1080100c 	andi	r2,r2,64
    3b74:	1005c01e 	bne	r2,zero,5278 <___vfprintf_internal_r+0x1b1c>
    3b78:	d8802f17 	ldw	r2,188(sp)
    3b7c:	dfc04717 	ldw	ra,284(sp)
    3b80:	df004617 	ldw	fp,280(sp)
    3b84:	ddc04517 	ldw	r23,276(sp)
    3b88:	dd804417 	ldw	r22,272(sp)
    3b8c:	dd404317 	ldw	r21,268(sp)
    3b90:	dd004217 	ldw	r20,264(sp)
    3b94:	dcc04117 	ldw	r19,260(sp)
    3b98:	dc804017 	ldw	r18,256(sp)
    3b9c:	dc403f17 	ldw	r17,252(sp)
    3ba0:	dc003e17 	ldw	r16,248(sp)
    3ba4:	dec04804 	addi	sp,sp,288
    3ba8:	f800283a 	ret
    3bac:	d9002d17 	ldw	r4,180(sp)
    3bb0:	0007b1c0 	call	7b1c <__sinit>
    3bb4:	003f0206 	br	37c0 <__alt_mem_Onchip_SRAM+0xf80037c0>
    3bb8:	d9002e17 	ldw	r4,184(sp)
    3bbc:	d9402e17 	ldw	r5,184(sp)
    3bc0:	21000017 	ldw	r4,0(r4)
    3bc4:	28800104 	addi	r2,r5,4
    3bc8:	d9003115 	stw	r4,196(sp)
    3bcc:	203fa716 	blt	r4,zero,3a6c <__alt_mem_Onchip_SRAM+0xf8003a6c>
    3bd0:	d8802e15 	stw	r2,184(sp)
    3bd4:	ac400007 	ldb	r17,0(r21)
    3bd8:	003f4206 	br	38e4 <__alt_mem_Onchip_SRAM+0xf80038e4>
    3bdc:	ac400007 	ldb	r17,0(r21)
    3be0:	01000a84 	movi	r4,42
    3be4:	a8c00044 	addi	r3,r21,1
    3be8:	89075826 	beq	r17,r4,594c <___vfprintf_internal_r+0x21f0>
    3bec:	8cbff404 	addi	r18,r17,-48
    3bf0:	b486ae36 	bltu	r22,r18,56ac <___vfprintf_internal_r+0x1f50>
    3bf4:	0009883a 	mov	r4,zero
    3bf8:	1823883a 	mov	r17,r3
    3bfc:	01400284 	movi	r5,10
    3c00:	0000ef80 	call	ef8 <__mulsi3>
    3c04:	88c00007 	ldb	r3,0(r17)
    3c08:	1489883a 	add	r4,r2,r18
    3c0c:	8d400044 	addi	r21,r17,1
    3c10:	1cbff404 	addi	r18,r3,-48
    3c14:	a823883a 	mov	r17,r21
    3c18:	b4bff82e 	bgeu	r22,r18,3bfc <__alt_mem_Onchip_SRAM+0xf8003bfc>
    3c1c:	1823883a 	mov	r17,r3
    3c20:	2005f616 	blt	r4,zero,53fc <___vfprintf_internal_r+0x1ca0>
    3c24:	d9002a15 	stw	r4,168(sp)
    3c28:	003f2f06 	br	38e8 <__alt_mem_Onchip_SRAM+0xf80038e8>
    3c2c:	84002014 	ori	r16,r16,128
    3c30:	ac400007 	ldb	r17,0(r21)
    3c34:	003f2b06 	br	38e4 <__alt_mem_Onchip_SRAM+0xf80038e4>
    3c38:	8cbff404 	addi	r18,r17,-48
    3c3c:	d8003115 	stw	zero,196(sp)
    3c40:	0009883a 	mov	r4,zero
    3c44:	a823883a 	mov	r17,r21
    3c48:	01400284 	movi	r5,10
    3c4c:	0000ef80 	call	ef8 <__mulsi3>
    3c50:	88c00007 	ldb	r3,0(r17)
    3c54:	9089883a 	add	r4,r18,r2
    3c58:	ad400044 	addi	r21,r21,1
    3c5c:	1cbff404 	addi	r18,r3,-48
    3c60:	a823883a 	mov	r17,r21
    3c64:	b4bff82e 	bgeu	r22,r18,3c48 <__alt_mem_Onchip_SRAM+0xf8003c48>
    3c68:	1823883a 	mov	r17,r3
    3c6c:	d9003115 	stw	r4,196(sp)
    3c70:	003f1d06 	br	38e8 <__alt_mem_Onchip_SRAM+0xf80038e8>
    3c74:	8025883a 	mov	r18,r16
    3c78:	dc002903 	ldbu	r16,164(sp)
    3c7c:	e011883a 	mov	r8,fp
    3c80:	84003fcc 	andi	r16,r16,255
    3c84:	8007531e 	bne	r16,zero,59d4 <___vfprintf_internal_r+0x2278>
    3c88:	94800414 	ori	r18,r18,16
    3c8c:	9080080c 	andi	r2,r18,32
    3c90:	1003a326 	beq	r2,zero,4b20 <___vfprintf_internal_r+0x13c4>
    3c94:	d9002e17 	ldw	r4,184(sp)
    3c98:	20800117 	ldw	r2,4(r4)
    3c9c:	24c00017 	ldw	r19,0(r4)
    3ca0:	21000204 	addi	r4,r4,8
    3ca4:	d9002e15 	stw	r4,184(sp)
    3ca8:	102d883a 	mov	r22,r2
    3cac:	10047316 	blt	r2,zero,4e7c <___vfprintf_internal_r+0x1720>
    3cb0:	d9002a17 	ldw	r4,168(sp)
    3cb4:	df002783 	ldbu	fp,158(sp)
    3cb8:	2003e416 	blt	r4,zero,4c4c <___vfprintf_internal_r+0x14f0>
    3cbc:	00ffdfc4 	movi	r3,-129
    3cc0:	9d84b03a 	or	r2,r19,r22
    3cc4:	90e4703a 	and	r18,r18,r3
    3cc8:	10018026 	beq	r2,zero,42cc <___vfprintf_internal_r+0xb70>
    3ccc:	b003ab26 	beq	r22,zero,4b7c <___vfprintf_internal_r+0x1420>
    3cd0:	dc402915 	stw	r17,164(sp)
    3cd4:	dc001e04 	addi	r16,sp,120
    3cd8:	b023883a 	mov	r17,r22
    3cdc:	402d883a 	mov	r22,r8
    3ce0:	9809883a 	mov	r4,r19
    3ce4:	880b883a 	mov	r5,r17
    3ce8:	01800284 	movi	r6,10
    3cec:	000f883a 	mov	r7,zero
    3cf0:	000ecc00 	call	ecc0 <__umoddi3>
    3cf4:	10800c04 	addi	r2,r2,48
    3cf8:	843fffc4 	addi	r16,r16,-1
    3cfc:	9809883a 	mov	r4,r19
    3d00:	880b883a 	mov	r5,r17
    3d04:	80800005 	stb	r2,0(r16)
    3d08:	01800284 	movi	r6,10
    3d0c:	000f883a 	mov	r7,zero
    3d10:	000e6c40 	call	e6c4 <__udivdi3>
    3d14:	1027883a 	mov	r19,r2
    3d18:	10c4b03a 	or	r2,r2,r3
    3d1c:	1823883a 	mov	r17,r3
    3d20:	103fef1e 	bne	r2,zero,3ce0 <__alt_mem_Onchip_SRAM+0xf8003ce0>
    3d24:	d8c02817 	ldw	r3,160(sp)
    3d28:	dc402917 	ldw	r17,164(sp)
    3d2c:	b011883a 	mov	r8,r22
    3d30:	1c07c83a 	sub	r3,r3,r16
    3d34:	d8c02b15 	stw	r3,172(sp)
    3d38:	00005f06 	br	3eb8 <___vfprintf_internal_r+0x75c>
    3d3c:	8025883a 	mov	r18,r16
    3d40:	dc002903 	ldbu	r16,164(sp)
    3d44:	e011883a 	mov	r8,fp
    3d48:	84003fcc 	andi	r16,r16,255
    3d4c:	80071e1e 	bne	r16,zero,59c8 <___vfprintf_internal_r+0x226c>
    3d50:	9080020c 	andi	r2,r18,8
    3d54:	1004af26 	beq	r2,zero,5014 <___vfprintf_internal_r+0x18b8>
    3d58:	d9002e17 	ldw	r4,184(sp)
    3d5c:	d9402e17 	ldw	r5,184(sp)
    3d60:	d8802e17 	ldw	r2,184(sp)
    3d64:	21000017 	ldw	r4,0(r4)
    3d68:	29400117 	ldw	r5,4(r5)
    3d6c:	10800204 	addi	r2,r2,8
    3d70:	d9003615 	stw	r4,216(sp)
    3d74:	d9403815 	stw	r5,224(sp)
    3d78:	d8802e15 	stw	r2,184(sp)
    3d7c:	d9003617 	ldw	r4,216(sp)
    3d80:	d9403817 	ldw	r5,224(sp)
    3d84:	da003d15 	stw	r8,244(sp)
    3d88:	04000044 	movi	r16,1
    3d8c:	000ad240 	call	ad24 <__fpclassifyd>
    3d90:	da003d17 	ldw	r8,244(sp)
    3d94:	1404441e 	bne	r2,r16,4ea8 <___vfprintf_internal_r+0x174c>
    3d98:	d9003617 	ldw	r4,216(sp)
    3d9c:	d9403817 	ldw	r5,224(sp)
    3da0:	000d883a 	mov	r6,zero
    3da4:	000f883a 	mov	r7,zero
    3da8:	00106640 	call	10664 <__ledf2>
    3dac:	da003d17 	ldw	r8,244(sp)
    3db0:	1005e316 	blt	r2,zero,5540 <___vfprintf_internal_r+0x1de4>
    3db4:	df002783 	ldbu	fp,158(sp)
    3db8:	008011c4 	movi	r2,71
    3dbc:	1445580e 	bge	r2,r17,5320 <___vfprintf_internal_r+0x1bc4>
    3dc0:	04000074 	movhi	r16,1
    3dc4:	841ac404 	addi	r16,r16,27408
    3dc8:	00c000c4 	movi	r3,3
    3dcc:	00bfdfc4 	movi	r2,-129
    3dd0:	d8c02915 	stw	r3,164(sp)
    3dd4:	90a4703a 	and	r18,r18,r2
    3dd8:	d8c02b15 	stw	r3,172(sp)
    3ddc:	d8002a15 	stw	zero,168(sp)
    3de0:	d8003215 	stw	zero,200(sp)
    3de4:	00003a06 	br	3ed0 <___vfprintf_internal_r+0x774>
    3de8:	84000214 	ori	r16,r16,8
    3dec:	ac400007 	ldb	r17,0(r21)
    3df0:	003ebc06 	br	38e4 <__alt_mem_Onchip_SRAM+0xf80038e4>
    3df4:	8025883a 	mov	r18,r16
    3df8:	dc002903 	ldbu	r16,164(sp)
    3dfc:	e011883a 	mov	r8,fp
    3e00:	84003fcc 	andi	r16,r16,255
    3e04:	8007001e 	bne	r16,zero,5a08 <___vfprintf_internal_r+0x22ac>
    3e08:	94800414 	ori	r18,r18,16
    3e0c:	9080080c 	andi	r2,r18,32
    3e10:	1002fa26 	beq	r2,zero,49fc <___vfprintf_internal_r+0x12a0>
    3e14:	d9002e17 	ldw	r4,184(sp)
    3e18:	d9402a17 	ldw	r5,168(sp)
    3e1c:	d8002785 	stb	zero,158(sp)
    3e20:	20800204 	addi	r2,r4,8
    3e24:	24c00017 	ldw	r19,0(r4)
    3e28:	25800117 	ldw	r22,4(r4)
    3e2c:	2804b116 	blt	r5,zero,50f4 <___vfprintf_internal_r+0x1998>
    3e30:	013fdfc4 	movi	r4,-129
    3e34:	9d86b03a 	or	r3,r19,r22
    3e38:	d8802e15 	stw	r2,184(sp)
    3e3c:	9124703a 	and	r18,r18,r4
    3e40:	1802fb1e 	bne	r3,zero,4a30 <___vfprintf_internal_r+0x12d4>
    3e44:	d8c02a17 	ldw	r3,168(sp)
    3e48:	0039883a 	mov	fp,zero
    3e4c:	1805e526 	beq	r3,zero,55e4 <___vfprintf_internal_r+0x1e88>
    3e50:	0027883a 	mov	r19,zero
    3e54:	002d883a 	mov	r22,zero
    3e58:	dc001e04 	addi	r16,sp,120
    3e5c:	9806d0fa 	srli	r3,r19,3
    3e60:	b008977a 	slli	r4,r22,29
    3e64:	b02cd0fa 	srli	r22,r22,3
    3e68:	9cc001cc 	andi	r19,r19,7
    3e6c:	98800c04 	addi	r2,r19,48
    3e70:	843fffc4 	addi	r16,r16,-1
    3e74:	20e6b03a 	or	r19,r4,r3
    3e78:	80800005 	stb	r2,0(r16)
    3e7c:	9d86b03a 	or	r3,r19,r22
    3e80:	183ff61e 	bne	r3,zero,3e5c <__alt_mem_Onchip_SRAM+0xf8003e5c>
    3e84:	90c0004c 	andi	r3,r18,1
    3e88:	18014126 	beq	r3,zero,4390 <___vfprintf_internal_r+0xc34>
    3e8c:	10803fcc 	andi	r2,r2,255
    3e90:	1080201c 	xori	r2,r2,128
    3e94:	10bfe004 	addi	r2,r2,-128
    3e98:	00c00c04 	movi	r3,48
    3e9c:	10c13c26 	beq	r2,r3,4390 <___vfprintf_internal_r+0xc34>
    3ea0:	80ffffc5 	stb	r3,-1(r16)
    3ea4:	d8c02817 	ldw	r3,160(sp)
    3ea8:	80bfffc4 	addi	r2,r16,-1
    3eac:	1021883a 	mov	r16,r2
    3eb0:	1887c83a 	sub	r3,r3,r2
    3eb4:	d8c02b15 	stw	r3,172(sp)
    3eb8:	d8802b17 	ldw	r2,172(sp)
    3ebc:	d9002a17 	ldw	r4,168(sp)
    3ec0:	1100010e 	bge	r2,r4,3ec8 <___vfprintf_internal_r+0x76c>
    3ec4:	2005883a 	mov	r2,r4
    3ec8:	d8802915 	stw	r2,164(sp)
    3ecc:	d8003215 	stw	zero,200(sp)
    3ed0:	e7003fcc 	andi	fp,fp,255
    3ed4:	e700201c 	xori	fp,fp,128
    3ed8:	e73fe004 	addi	fp,fp,-128
    3edc:	e0000326 	beq	fp,zero,3eec <___vfprintf_internal_r+0x790>
    3ee0:	d8c02917 	ldw	r3,164(sp)
    3ee4:	18c00044 	addi	r3,r3,1
    3ee8:	d8c02915 	stw	r3,164(sp)
    3eec:	90c0008c 	andi	r3,r18,2
    3ef0:	d8c02c15 	stw	r3,176(sp)
    3ef4:	18000326 	beq	r3,zero,3f04 <___vfprintf_internal_r+0x7a8>
    3ef8:	d8c02917 	ldw	r3,164(sp)
    3efc:	18c00084 	addi	r3,r3,2
    3f00:	d8c02915 	stw	r3,164(sp)
    3f04:	90c0210c 	andi	r3,r18,132
    3f08:	d8c03015 	stw	r3,192(sp)
    3f0c:	1801c51e 	bne	r3,zero,4624 <___vfprintf_internal_r+0xec8>
    3f10:	d9003117 	ldw	r4,196(sp)
    3f14:	d8c02917 	ldw	r3,164(sp)
    3f18:	20e7c83a 	sub	r19,r4,r3
    3f1c:	04c1c10e 	bge	zero,r19,4624 <___vfprintf_internal_r+0xec8>
    3f20:	02400404 	movi	r9,16
    3f24:	d8c02017 	ldw	r3,128(sp)
    3f28:	d8801f17 	ldw	r2,124(sp)
    3f2c:	4cc52f0e 	bge	r9,r19,53ec <___vfprintf_internal_r+0x1c90>
    3f30:	01400074 	movhi	r5,1
    3f34:	295adf84 	addi	r5,r5,27518
    3f38:	dc403b15 	stw	r17,236(sp)
    3f3c:	d9403515 	stw	r5,212(sp)
    3f40:	9823883a 	mov	r17,r19
    3f44:	482d883a 	mov	r22,r9
    3f48:	9027883a 	mov	r19,r18
    3f4c:	070001c4 	movi	fp,7
    3f50:	8025883a 	mov	r18,r16
    3f54:	dc002d17 	ldw	r16,180(sp)
    3f58:	00000306 	br	3f68 <___vfprintf_internal_r+0x80c>
    3f5c:	8c7ffc04 	addi	r17,r17,-16
    3f60:	42000204 	addi	r8,r8,8
    3f64:	b440130e 	bge	r22,r17,3fb4 <___vfprintf_internal_r+0x858>
    3f68:	01000074 	movhi	r4,1
    3f6c:	18c00404 	addi	r3,r3,16
    3f70:	10800044 	addi	r2,r2,1
    3f74:	211adf84 	addi	r4,r4,27518
    3f78:	41000015 	stw	r4,0(r8)
    3f7c:	45800115 	stw	r22,4(r8)
    3f80:	d8c02015 	stw	r3,128(sp)
    3f84:	d8801f15 	stw	r2,124(sp)
    3f88:	e0bff40e 	bge	fp,r2,3f5c <__alt_mem_Onchip_SRAM+0xf8003f5c>
    3f8c:	d9801e04 	addi	r6,sp,120
    3f90:	b80b883a 	mov	r5,r23
    3f94:	8009883a 	mov	r4,r16
    3f98:	000c6700 	call	c670 <__sprint_r>
    3f9c:	103ef31e 	bne	r2,zero,3b6c <__alt_mem_Onchip_SRAM+0xf8003b6c>
    3fa0:	8c7ffc04 	addi	r17,r17,-16
    3fa4:	d8c02017 	ldw	r3,128(sp)
    3fa8:	d8801f17 	ldw	r2,124(sp)
    3fac:	da000404 	addi	r8,sp,16
    3fb0:	b47fed16 	blt	r22,r17,3f68 <__alt_mem_Onchip_SRAM+0xf8003f68>
    3fb4:	9021883a 	mov	r16,r18
    3fb8:	9825883a 	mov	r18,r19
    3fbc:	8827883a 	mov	r19,r17
    3fc0:	dc403b17 	ldw	r17,236(sp)
    3fc4:	d9403517 	ldw	r5,212(sp)
    3fc8:	98c7883a 	add	r3,r19,r3
    3fcc:	10800044 	addi	r2,r2,1
    3fd0:	41400015 	stw	r5,0(r8)
    3fd4:	44c00115 	stw	r19,4(r8)
    3fd8:	d8c02015 	stw	r3,128(sp)
    3fdc:	d8801f15 	stw	r2,124(sp)
    3fe0:	010001c4 	movi	r4,7
    3fe4:	2082c516 	blt	r4,r2,4afc <___vfprintf_internal_r+0x13a0>
    3fe8:	df002787 	ldb	fp,158(sp)
    3fec:	42000204 	addi	r8,r8,8
    3ff0:	e0000c26 	beq	fp,zero,4024 <___vfprintf_internal_r+0x8c8>
    3ff4:	d8801f17 	ldw	r2,124(sp)
    3ff8:	d9002784 	addi	r4,sp,158
    3ffc:	18c00044 	addi	r3,r3,1
    4000:	10800044 	addi	r2,r2,1
    4004:	41000015 	stw	r4,0(r8)
    4008:	01000044 	movi	r4,1
    400c:	41000115 	stw	r4,4(r8)
    4010:	d8c02015 	stw	r3,128(sp)
    4014:	d8801f15 	stw	r2,124(sp)
    4018:	010001c4 	movi	r4,7
    401c:	20825e16 	blt	r4,r2,4998 <___vfprintf_internal_r+0x123c>
    4020:	42000204 	addi	r8,r8,8
    4024:	d8802c17 	ldw	r2,176(sp)
    4028:	10000c26 	beq	r2,zero,405c <___vfprintf_internal_r+0x900>
    402c:	d8801f17 	ldw	r2,124(sp)
    4030:	d9002704 	addi	r4,sp,156
    4034:	18c00084 	addi	r3,r3,2
    4038:	10800044 	addi	r2,r2,1
    403c:	41000015 	stw	r4,0(r8)
    4040:	01000084 	movi	r4,2
    4044:	41000115 	stw	r4,4(r8)
    4048:	d8c02015 	stw	r3,128(sp)
    404c:	d8801f15 	stw	r2,124(sp)
    4050:	010001c4 	movi	r4,7
    4054:	20825816 	blt	r4,r2,49b8 <___vfprintf_internal_r+0x125c>
    4058:	42000204 	addi	r8,r8,8
    405c:	d9003017 	ldw	r4,192(sp)
    4060:	00802004 	movi	r2,128
    4064:	2081bb26 	beq	r4,r2,4754 <___vfprintf_internal_r+0xff8>
    4068:	d9402a17 	ldw	r5,168(sp)
    406c:	d8802b17 	ldw	r2,172(sp)
    4070:	28adc83a 	sub	r22,r5,r2
    4074:	0580310e 	bge	zero,r22,413c <___vfprintf_internal_r+0x9e0>
    4078:	07000404 	movi	fp,16
    407c:	d8801f17 	ldw	r2,124(sp)
    4080:	e584360e 	bge	fp,r22,515c <___vfprintf_internal_r+0x1a00>
    4084:	01400074 	movhi	r5,1
    4088:	295adb84 	addi	r5,r5,27502
    408c:	dc402a15 	stw	r17,168(sp)
    4090:	d9402c15 	stw	r5,176(sp)
    4094:	b023883a 	mov	r17,r22
    4098:	04c001c4 	movi	r19,7
    409c:	a82d883a 	mov	r22,r21
    40a0:	902b883a 	mov	r21,r18
    40a4:	8025883a 	mov	r18,r16
    40a8:	dc002d17 	ldw	r16,180(sp)
    40ac:	00000306 	br	40bc <___vfprintf_internal_r+0x960>
    40b0:	8c7ffc04 	addi	r17,r17,-16
    40b4:	42000204 	addi	r8,r8,8
    40b8:	e440110e 	bge	fp,r17,4100 <___vfprintf_internal_r+0x9a4>
    40bc:	18c00404 	addi	r3,r3,16
    40c0:	10800044 	addi	r2,r2,1
    40c4:	45000015 	stw	r20,0(r8)
    40c8:	47000115 	stw	fp,4(r8)
    40cc:	d8c02015 	stw	r3,128(sp)
    40d0:	d8801f15 	stw	r2,124(sp)
    40d4:	98bff60e 	bge	r19,r2,40b0 <__alt_mem_Onchip_SRAM+0xf80040b0>
    40d8:	d9801e04 	addi	r6,sp,120
    40dc:	b80b883a 	mov	r5,r23
    40e0:	8009883a 	mov	r4,r16
    40e4:	000c6700 	call	c670 <__sprint_r>
    40e8:	103ea01e 	bne	r2,zero,3b6c <__alt_mem_Onchip_SRAM+0xf8003b6c>
    40ec:	8c7ffc04 	addi	r17,r17,-16
    40f0:	d8c02017 	ldw	r3,128(sp)
    40f4:	d8801f17 	ldw	r2,124(sp)
    40f8:	da000404 	addi	r8,sp,16
    40fc:	e47fef16 	blt	fp,r17,40bc <__alt_mem_Onchip_SRAM+0xf80040bc>
    4100:	9021883a 	mov	r16,r18
    4104:	a825883a 	mov	r18,r21
    4108:	b02b883a 	mov	r21,r22
    410c:	882d883a 	mov	r22,r17
    4110:	dc402a17 	ldw	r17,168(sp)
    4114:	d9002c17 	ldw	r4,176(sp)
    4118:	1d87883a 	add	r3,r3,r22
    411c:	10800044 	addi	r2,r2,1
    4120:	41000015 	stw	r4,0(r8)
    4124:	45800115 	stw	r22,4(r8)
    4128:	d8c02015 	stw	r3,128(sp)
    412c:	d8801f15 	stw	r2,124(sp)
    4130:	010001c4 	movi	r4,7
    4134:	20821016 	blt	r4,r2,4978 <___vfprintf_internal_r+0x121c>
    4138:	42000204 	addi	r8,r8,8
    413c:	9080400c 	andi	r2,r18,256
    4140:	10013a1e 	bne	r2,zero,462c <___vfprintf_internal_r+0xed0>
    4144:	d9402b17 	ldw	r5,172(sp)
    4148:	d8801f17 	ldw	r2,124(sp)
    414c:	44000015 	stw	r16,0(r8)
    4150:	1947883a 	add	r3,r3,r5
    4154:	10800044 	addi	r2,r2,1
    4158:	41400115 	stw	r5,4(r8)
    415c:	d8c02015 	stw	r3,128(sp)
    4160:	d8801f15 	stw	r2,124(sp)
    4164:	010001c4 	movi	r4,7
    4168:	2081f516 	blt	r4,r2,4940 <___vfprintf_internal_r+0x11e4>
    416c:	42000204 	addi	r8,r8,8
    4170:	9480010c 	andi	r18,r18,4
    4174:	90003226 	beq	r18,zero,4240 <___vfprintf_internal_r+0xae4>
    4178:	d9403117 	ldw	r5,196(sp)
    417c:	d8802917 	ldw	r2,164(sp)
    4180:	28a1c83a 	sub	r16,r5,r2
    4184:	04002e0e 	bge	zero,r16,4240 <___vfprintf_internal_r+0xae4>
    4188:	04400404 	movi	r17,16
    418c:	d8801f17 	ldw	r2,124(sp)
    4190:	8c04c40e 	bge	r17,r16,54a4 <___vfprintf_internal_r+0x1d48>
    4194:	01400074 	movhi	r5,1
    4198:	295adf84 	addi	r5,r5,27518
    419c:	d9403515 	stw	r5,212(sp)
    41a0:	048001c4 	movi	r18,7
    41a4:	dcc02d17 	ldw	r19,180(sp)
    41a8:	00000306 	br	41b8 <___vfprintf_internal_r+0xa5c>
    41ac:	843ffc04 	addi	r16,r16,-16
    41b0:	42000204 	addi	r8,r8,8
    41b4:	8c00130e 	bge	r17,r16,4204 <___vfprintf_internal_r+0xaa8>
    41b8:	01000074 	movhi	r4,1
    41bc:	18c00404 	addi	r3,r3,16
    41c0:	10800044 	addi	r2,r2,1
    41c4:	211adf84 	addi	r4,r4,27518
    41c8:	41000015 	stw	r4,0(r8)
    41cc:	44400115 	stw	r17,4(r8)
    41d0:	d8c02015 	stw	r3,128(sp)
    41d4:	d8801f15 	stw	r2,124(sp)
    41d8:	90bff40e 	bge	r18,r2,41ac <__alt_mem_Onchip_SRAM+0xf80041ac>
    41dc:	d9801e04 	addi	r6,sp,120
    41e0:	b80b883a 	mov	r5,r23
    41e4:	9809883a 	mov	r4,r19
    41e8:	000c6700 	call	c670 <__sprint_r>
    41ec:	103e5f1e 	bne	r2,zero,3b6c <__alt_mem_Onchip_SRAM+0xf8003b6c>
    41f0:	843ffc04 	addi	r16,r16,-16
    41f4:	d8c02017 	ldw	r3,128(sp)
    41f8:	d8801f17 	ldw	r2,124(sp)
    41fc:	da000404 	addi	r8,sp,16
    4200:	8c3fed16 	blt	r17,r16,41b8 <__alt_mem_Onchip_SRAM+0xf80041b8>
    4204:	d9403517 	ldw	r5,212(sp)
    4208:	1c07883a 	add	r3,r3,r16
    420c:	10800044 	addi	r2,r2,1
    4210:	41400015 	stw	r5,0(r8)
    4214:	44000115 	stw	r16,4(r8)
    4218:	d8c02015 	stw	r3,128(sp)
    421c:	d8801f15 	stw	r2,124(sp)
    4220:	010001c4 	movi	r4,7
    4224:	2080060e 	bge	r4,r2,4240 <___vfprintf_internal_r+0xae4>
    4228:	d9002d17 	ldw	r4,180(sp)
    422c:	d9801e04 	addi	r6,sp,120
    4230:	b80b883a 	mov	r5,r23
    4234:	000c6700 	call	c670 <__sprint_r>
    4238:	103e4c1e 	bne	r2,zero,3b6c <__alt_mem_Onchip_SRAM+0xf8003b6c>
    423c:	d8c02017 	ldw	r3,128(sp)
    4240:	d8803117 	ldw	r2,196(sp)
    4244:	d9002917 	ldw	r4,164(sp)
    4248:	1100010e 	bge	r2,r4,4250 <___vfprintf_internal_r+0xaf4>
    424c:	2005883a 	mov	r2,r4
    4250:	d9402f17 	ldw	r5,188(sp)
    4254:	288b883a 	add	r5,r5,r2
    4258:	d9402f15 	stw	r5,188(sp)
    425c:	1801c01e 	bne	r3,zero,4960 <___vfprintf_internal_r+0x1204>
    4260:	a8800007 	ldb	r2,0(r21)
    4264:	d8001f15 	stw	zero,124(sp)
    4268:	da000404 	addi	r8,sp,16
    426c:	103d751e 	bne	r2,zero,3844 <__alt_mem_Onchip_SRAM+0xf8003844>
    4270:	a823883a 	mov	r17,r21
    4274:	003d8b06 	br	38a4 <__alt_mem_Onchip_SRAM+0xf80038a4>
    4278:	8025883a 	mov	r18,r16
    427c:	dc002903 	ldbu	r16,164(sp)
    4280:	e011883a 	mov	r8,fp
    4284:	84003fcc 	andi	r16,r16,255
    4288:	8005e51e 	bne	r16,zero,5a20 <___vfprintf_internal_r+0x22c4>
    428c:	94800414 	ori	r18,r18,16
    4290:	9080080c 	andi	r2,r18,32
    4294:	10022b26 	beq	r2,zero,4b44 <___vfprintf_internal_r+0x13e8>
    4298:	d9002e17 	ldw	r4,184(sp)
    429c:	d9402a17 	ldw	r5,168(sp)
    42a0:	d8002785 	stb	zero,158(sp)
    42a4:	20c00204 	addi	r3,r4,8
    42a8:	24c00017 	ldw	r19,0(r4)
    42ac:	25800117 	ldw	r22,4(r4)
    42b0:	28042e16 	blt	r5,zero,536c <___vfprintf_internal_r+0x1c10>
    42b4:	013fdfc4 	movi	r4,-129
    42b8:	9d84b03a 	or	r2,r19,r22
    42bc:	d8c02e15 	stw	r3,184(sp)
    42c0:	9124703a 	and	r18,r18,r4
    42c4:	0039883a 	mov	fp,zero
    42c8:	103e801e 	bne	r2,zero,3ccc <__alt_mem_Onchip_SRAM+0xf8003ccc>
    42cc:	d9002a17 	ldw	r4,168(sp)
    42d0:	2002e01e 	bne	r4,zero,4e54 <___vfprintf_internal_r+0x16f8>
    42d4:	d8002a15 	stw	zero,168(sp)
    42d8:	d8002b15 	stw	zero,172(sp)
    42dc:	dc001e04 	addi	r16,sp,120
    42e0:	003ef506 	br	3eb8 <__alt_mem_Onchip_SRAM+0xf8003eb8>
    42e4:	8025883a 	mov	r18,r16
    42e8:	dc002903 	ldbu	r16,164(sp)
    42ec:	e011883a 	mov	r8,fp
    42f0:	84003fcc 	andi	r16,r16,255
    42f4:	8005ba1e 	bne	r16,zero,59e0 <___vfprintf_internal_r+0x2284>
    42f8:	01000074 	movhi	r4,1
    42fc:	211ac704 	addi	r4,r4,27420
    4300:	d9003915 	stw	r4,228(sp)
    4304:	9080080c 	andi	r2,r18,32
    4308:	10006126 	beq	r2,zero,4490 <___vfprintf_internal_r+0xd34>
    430c:	d9402e17 	ldw	r5,184(sp)
    4310:	2cc00017 	ldw	r19,0(r5)
    4314:	2d800117 	ldw	r22,4(r5)
    4318:	29400204 	addi	r5,r5,8
    431c:	d9402e15 	stw	r5,184(sp)
    4320:	9080004c 	andi	r2,r18,1
    4324:	1001ac26 	beq	r2,zero,49d8 <___vfprintf_internal_r+0x127c>
    4328:	9d84b03a 	or	r2,r19,r22
    432c:	10038526 	beq	r2,zero,5144 <___vfprintf_internal_r+0x19e8>
    4330:	d8c02a17 	ldw	r3,168(sp)
    4334:	00800c04 	movi	r2,48
    4338:	d8802705 	stb	r2,156(sp)
    433c:	dc402745 	stb	r17,157(sp)
    4340:	d8002785 	stb	zero,158(sp)
    4344:	90800094 	ori	r2,r18,2
    4348:	18047916 	blt	r3,zero,5530 <___vfprintf_internal_r+0x1dd4>
    434c:	00bfdfc4 	movi	r2,-129
    4350:	90a4703a 	and	r18,r18,r2
    4354:	94800094 	ori	r18,r18,2
    4358:	0039883a 	mov	fp,zero
    435c:	d9003917 	ldw	r4,228(sp)
    4360:	dc001e04 	addi	r16,sp,120
    4364:	988003cc 	andi	r2,r19,15
    4368:	b006973a 	slli	r3,r22,28
    436c:	2085883a 	add	r2,r4,r2
    4370:	9826d13a 	srli	r19,r19,4
    4374:	10800003 	ldbu	r2,0(r2)
    4378:	b02cd13a 	srli	r22,r22,4
    437c:	843fffc4 	addi	r16,r16,-1
    4380:	1ce6b03a 	or	r19,r3,r19
    4384:	80800005 	stb	r2,0(r16)
    4388:	9d84b03a 	or	r2,r19,r22
    438c:	103ff51e 	bne	r2,zero,4364 <__alt_mem_Onchip_SRAM+0xf8004364>
    4390:	d8c02817 	ldw	r3,160(sp)
    4394:	1c07c83a 	sub	r3,r3,r16
    4398:	d8c02b15 	stw	r3,172(sp)
    439c:	003ec606 	br	3eb8 <__alt_mem_Onchip_SRAM+0xf8003eb8>
    43a0:	8025883a 	mov	r18,r16
    43a4:	dc002903 	ldbu	r16,164(sp)
    43a8:	e011883a 	mov	r8,fp
    43ac:	84003fcc 	andi	r16,r16,255
    43b0:	803e9626 	beq	r16,zero,3e0c <__alt_mem_Onchip_SRAM+0xf8003e0c>
    43b4:	d8c02b03 	ldbu	r3,172(sp)
    43b8:	d8c02785 	stb	r3,158(sp)
    43bc:	003e9306 	br	3e0c <__alt_mem_Onchip_SRAM+0xf8003e0c>
    43c0:	00c00044 	movi	r3,1
    43c4:	d8c02905 	stb	r3,164(sp)
    43c8:	00c00ac4 	movi	r3,43
    43cc:	d8c02b05 	stb	r3,172(sp)
    43d0:	ac400007 	ldb	r17,0(r21)
    43d4:	003d4306 	br	38e4 <__alt_mem_Onchip_SRAM+0xf80038e4>
    43d8:	84000814 	ori	r16,r16,32
    43dc:	ac400007 	ldb	r17,0(r21)
    43e0:	003d4006 	br	38e4 <__alt_mem_Onchip_SRAM+0xf80038e4>
    43e4:	d8802e17 	ldw	r2,184(sp)
    43e8:	8025883a 	mov	r18,r16
    43ec:	d8002785 	stb	zero,158(sp)
    43f0:	14000017 	ldw	r16,0(r2)
    43f4:	e011883a 	mov	r8,fp
    43f8:	14c00104 	addi	r19,r2,4
    43fc:	80042d26 	beq	r16,zero,54b4 <___vfprintf_internal_r+0x1d58>
    4400:	d8c02a17 	ldw	r3,168(sp)
    4404:	1803e416 	blt	r3,zero,5398 <___vfprintf_internal_r+0x1c3c>
    4408:	180d883a 	mov	r6,r3
    440c:	000b883a 	mov	r5,zero
    4410:	8009883a 	mov	r4,r16
    4414:	df003d15 	stw	fp,244(sp)
    4418:	00090f00 	call	90f0 <memchr>
    441c:	da003d17 	ldw	r8,244(sp)
    4420:	10046826 	beq	r2,zero,55c4 <___vfprintf_internal_r+0x1e68>
    4424:	1405c83a 	sub	r2,r2,r16
    4428:	d8802b15 	stw	r2,172(sp)
    442c:	1003e016 	blt	r2,zero,53b0 <___vfprintf_internal_r+0x1c54>
    4430:	df002783 	ldbu	fp,158(sp)
    4434:	d8802915 	stw	r2,164(sp)
    4438:	dcc02e15 	stw	r19,184(sp)
    443c:	d8002a15 	stw	zero,168(sp)
    4440:	d8003215 	stw	zero,200(sp)
    4444:	003ea206 	br	3ed0 <__alt_mem_Onchip_SRAM+0xf8003ed0>
    4448:	8025883a 	mov	r18,r16
    444c:	dc002903 	ldbu	r16,164(sp)
    4450:	e011883a 	mov	r8,fp
    4454:	84003fcc 	andi	r16,r16,255
    4458:	803f8d26 	beq	r16,zero,4290 <__alt_mem_Onchip_SRAM+0xf8004290>
    445c:	d8c02b03 	ldbu	r3,172(sp)
    4460:	d8c02785 	stb	r3,158(sp)
    4464:	003f8a06 	br	4290 <__alt_mem_Onchip_SRAM+0xf8004290>
    4468:	8025883a 	mov	r18,r16
    446c:	dc002903 	ldbu	r16,164(sp)
    4470:	e011883a 	mov	r8,fp
    4474:	84003fcc 	andi	r16,r16,255
    4478:	8005661e 	bne	r16,zero,5a14 <___vfprintf_internal_r+0x22b8>
    447c:	01000074 	movhi	r4,1
    4480:	211acc04 	addi	r4,r4,27440
    4484:	d9003915 	stw	r4,228(sp)
    4488:	9080080c 	andi	r2,r18,32
    448c:	103f9f1e 	bne	r2,zero,430c <__alt_mem_Onchip_SRAM+0xf800430c>
    4490:	9080040c 	andi	r2,r18,16
    4494:	1002eb26 	beq	r2,zero,5044 <___vfprintf_internal_r+0x18e8>
    4498:	d8802e17 	ldw	r2,184(sp)
    449c:	002d883a 	mov	r22,zero
    44a0:	14c00017 	ldw	r19,0(r2)
    44a4:	10800104 	addi	r2,r2,4
    44a8:	d8802e15 	stw	r2,184(sp)
    44ac:	003f9c06 	br	4320 <__alt_mem_Onchip_SRAM+0xf8004320>
    44b0:	d8802b07 	ldb	r2,172(sp)
    44b4:	1002e11e 	bne	r2,zero,503c <___vfprintf_internal_r+0x18e0>
    44b8:	00c00044 	movi	r3,1
    44bc:	d8c02905 	stb	r3,164(sp)
    44c0:	00c00804 	movi	r3,32
    44c4:	d8c02b05 	stb	r3,172(sp)
    44c8:	ac400007 	ldb	r17,0(r21)
    44cc:	003d0506 	br	38e4 <__alt_mem_Onchip_SRAM+0xf80038e4>
    44d0:	84000054 	ori	r16,r16,1
    44d4:	ac400007 	ldb	r17,0(r21)
    44d8:	003d0206 	br	38e4 <__alt_mem_Onchip_SRAM+0xf80038e4>
    44dc:	8025883a 	mov	r18,r16
    44e0:	dc002903 	ldbu	r16,164(sp)
    44e4:	e011883a 	mov	r8,fp
    44e8:	84003fcc 	andi	r16,r16,255
    44ec:	803de726 	beq	r16,zero,3c8c <__alt_mem_Onchip_SRAM+0xf8003c8c>
    44f0:	d8c02b03 	ldbu	r3,172(sp)
    44f4:	d8c02785 	stb	r3,158(sp)
    44f8:	003de406 	br	3c8c <__alt_mem_Onchip_SRAM+0xf8003c8c>
    44fc:	84001014 	ori	r16,r16,64
    4500:	ac400007 	ldb	r17,0(r21)
    4504:	003cf706 	br	38e4 <__alt_mem_Onchip_SRAM+0xf80038e4>
    4508:	ac400007 	ldb	r17,0(r21)
    450c:	00801b04 	movi	r2,108
    4510:	88838f26 	beq	r17,r2,5350 <___vfprintf_internal_r+0x1bf4>
    4514:	84000414 	ori	r16,r16,16
    4518:	003cf206 	br	38e4 <__alt_mem_Onchip_SRAM+0xf80038e4>
    451c:	8025883a 	mov	r18,r16
    4520:	dc002903 	ldbu	r16,164(sp)
    4524:	e011883a 	mov	r8,fp
    4528:	84003fcc 	andi	r16,r16,255
    452c:	80053f1e 	bne	r16,zero,5a2c <___vfprintf_internal_r+0x22d0>
    4530:	9080080c 	andi	r2,r18,32
    4534:	1002d226 	beq	r2,zero,5080 <___vfprintf_internal_r+0x1924>
    4538:	d9002e17 	ldw	r4,184(sp)
    453c:	d9402f17 	ldw	r5,188(sp)
    4540:	20800017 	ldw	r2,0(r4)
    4544:	2807d7fa 	srai	r3,r5,31
    4548:	21000104 	addi	r4,r4,4
    454c:	d9002e15 	stw	r4,184(sp)
    4550:	11400015 	stw	r5,0(r2)
    4554:	10c00115 	stw	r3,4(r2)
    4558:	003cb806 	br	383c <__alt_mem_Onchip_SRAM+0xf800383c>
    455c:	d8c02e17 	ldw	r3,184(sp)
    4560:	d9002e17 	ldw	r4,184(sp)
    4564:	8025883a 	mov	r18,r16
    4568:	18800017 	ldw	r2,0(r3)
    456c:	21000104 	addi	r4,r4,4
    4570:	00c00044 	movi	r3,1
    4574:	e011883a 	mov	r8,fp
    4578:	d8c02915 	stw	r3,164(sp)
    457c:	d8002785 	stb	zero,158(sp)
    4580:	d8801405 	stb	r2,80(sp)
    4584:	d9002e15 	stw	r4,184(sp)
    4588:	d8c02b15 	stw	r3,172(sp)
    458c:	d8002a15 	stw	zero,168(sp)
    4590:	d8003215 	stw	zero,200(sp)
    4594:	dc001404 	addi	r16,sp,80
    4598:	0039883a 	mov	fp,zero
    459c:	003e5306 	br	3eec <__alt_mem_Onchip_SRAM+0xf8003eec>
    45a0:	01000074 	movhi	r4,1
    45a4:	211acc04 	addi	r4,r4,27440
    45a8:	0039883a 	mov	fp,zero
    45ac:	d9003915 	stw	r4,228(sp)
    45b0:	04401e04 	movi	r17,120
    45b4:	003f6906 	br	435c <__alt_mem_Onchip_SRAM+0xf800435c>
    45b8:	8025883a 	mov	r18,r16
    45bc:	dc002903 	ldbu	r16,164(sp)
    45c0:	e011883a 	mov	r8,fp
    45c4:	84003fcc 	andi	r16,r16,255
    45c8:	8005081e 	bne	r16,zero,59ec <___vfprintf_internal_r+0x2290>
    45cc:	883d6126 	beq	r17,zero,3b54 <__alt_mem_Onchip_SRAM+0xf8003b54>
    45d0:	00c00044 	movi	r3,1
    45d4:	d8c02915 	stw	r3,164(sp)
    45d8:	dc401405 	stb	r17,80(sp)
    45dc:	d8002785 	stb	zero,158(sp)
    45e0:	003fe906 	br	4588 <__alt_mem_Onchip_SRAM+0xf8004588>
    45e4:	01400074 	movhi	r5,1
    45e8:	295acc04 	addi	r5,r5,27440
    45ec:	d9403915 	stw	r5,228(sp)
    45f0:	d8c02e15 	stw	r3,184(sp)
    45f4:	1025883a 	mov	r18,r2
    45f8:	04401e04 	movi	r17,120
    45fc:	9d84b03a 	or	r2,r19,r22
    4600:	1000fc1e 	bne	r2,zero,49f4 <___vfprintf_internal_r+0x1298>
    4604:	0039883a 	mov	fp,zero
    4608:	00800084 	movi	r2,2
    460c:	10803fcc 	andi	r2,r2,255
    4610:	00c00044 	movi	r3,1
    4614:	10c20f26 	beq	r2,r3,4e54 <___vfprintf_internal_r+0x16f8>
    4618:	00c00084 	movi	r3,2
    461c:	10fd3326 	beq	r2,r3,3aec <__alt_mem_Onchip_SRAM+0xf8003aec>
    4620:	003e0b06 	br	3e50 <__alt_mem_Onchip_SRAM+0xf8003e50>
    4624:	d8c02017 	ldw	r3,128(sp)
    4628:	003e7106 	br	3ff0 <__alt_mem_Onchip_SRAM+0xf8003ff0>
    462c:	00801944 	movi	r2,101
    4630:	14407e0e 	bge	r2,r17,482c <___vfprintf_internal_r+0x10d0>
    4634:	d9003617 	ldw	r4,216(sp)
    4638:	d9403817 	ldw	r5,224(sp)
    463c:	000d883a 	mov	r6,zero
    4640:	000f883a 	mov	r7,zero
    4644:	d8c03c15 	stw	r3,240(sp)
    4648:	da003d15 	stw	r8,244(sp)
    464c:	00105000 	call	10500 <__eqdf2>
    4650:	d8c03c17 	ldw	r3,240(sp)
    4654:	da003d17 	ldw	r8,244(sp)
    4658:	1000f71e 	bne	r2,zero,4a38 <___vfprintf_internal_r+0x12dc>
    465c:	d8801f17 	ldw	r2,124(sp)
    4660:	01000074 	movhi	r4,1
    4664:	211ad304 	addi	r4,r4,27468
    4668:	18c00044 	addi	r3,r3,1
    466c:	10800044 	addi	r2,r2,1
    4670:	41000015 	stw	r4,0(r8)
    4674:	01000044 	movi	r4,1
    4678:	41000115 	stw	r4,4(r8)
    467c:	d8c02015 	stw	r3,128(sp)
    4680:	d8801f15 	stw	r2,124(sp)
    4684:	010001c4 	movi	r4,7
    4688:	2082b816 	blt	r4,r2,516c <___vfprintf_internal_r+0x1a10>
    468c:	42000204 	addi	r8,r8,8
    4690:	d8802617 	ldw	r2,152(sp)
    4694:	d9403317 	ldw	r5,204(sp)
    4698:	11400216 	blt	r2,r5,46a4 <___vfprintf_internal_r+0xf48>
    469c:	9080004c 	andi	r2,r18,1
    46a0:	103eb326 	beq	r2,zero,4170 <__alt_mem_Onchip_SRAM+0xf8004170>
    46a4:	d8803717 	ldw	r2,220(sp)
    46a8:	d9003417 	ldw	r4,208(sp)
    46ac:	d9403717 	ldw	r5,220(sp)
    46b0:	1887883a 	add	r3,r3,r2
    46b4:	d8801f17 	ldw	r2,124(sp)
    46b8:	41000015 	stw	r4,0(r8)
    46bc:	41400115 	stw	r5,4(r8)
    46c0:	10800044 	addi	r2,r2,1
    46c4:	d8c02015 	stw	r3,128(sp)
    46c8:	d8801f15 	stw	r2,124(sp)
    46cc:	010001c4 	movi	r4,7
    46d0:	20832916 	blt	r4,r2,5378 <___vfprintf_internal_r+0x1c1c>
    46d4:	42000204 	addi	r8,r8,8
    46d8:	d8803317 	ldw	r2,204(sp)
    46dc:	143fffc4 	addi	r16,r2,-1
    46e0:	043ea30e 	bge	zero,r16,4170 <__alt_mem_Onchip_SRAM+0xf8004170>
    46e4:	04400404 	movi	r17,16
    46e8:	d8801f17 	ldw	r2,124(sp)
    46ec:	8c00880e 	bge	r17,r16,4910 <___vfprintf_internal_r+0x11b4>
    46f0:	01400074 	movhi	r5,1
    46f4:	295adb84 	addi	r5,r5,27502
    46f8:	d9402c15 	stw	r5,176(sp)
    46fc:	058001c4 	movi	r22,7
    4700:	dcc02d17 	ldw	r19,180(sp)
    4704:	00000306 	br	4714 <___vfprintf_internal_r+0xfb8>
    4708:	42000204 	addi	r8,r8,8
    470c:	843ffc04 	addi	r16,r16,-16
    4710:	8c00820e 	bge	r17,r16,491c <___vfprintf_internal_r+0x11c0>
    4714:	18c00404 	addi	r3,r3,16
    4718:	10800044 	addi	r2,r2,1
    471c:	45000015 	stw	r20,0(r8)
    4720:	44400115 	stw	r17,4(r8)
    4724:	d8c02015 	stw	r3,128(sp)
    4728:	d8801f15 	stw	r2,124(sp)
    472c:	b0bff60e 	bge	r22,r2,4708 <__alt_mem_Onchip_SRAM+0xf8004708>
    4730:	d9801e04 	addi	r6,sp,120
    4734:	b80b883a 	mov	r5,r23
    4738:	9809883a 	mov	r4,r19
    473c:	000c6700 	call	c670 <__sprint_r>
    4740:	103d0a1e 	bne	r2,zero,3b6c <__alt_mem_Onchip_SRAM+0xf8003b6c>
    4744:	d8c02017 	ldw	r3,128(sp)
    4748:	d8801f17 	ldw	r2,124(sp)
    474c:	da000404 	addi	r8,sp,16
    4750:	003fee06 	br	470c <__alt_mem_Onchip_SRAM+0xf800470c>
    4754:	d9403117 	ldw	r5,196(sp)
    4758:	d8802917 	ldw	r2,164(sp)
    475c:	28adc83a 	sub	r22,r5,r2
    4760:	05be410e 	bge	zero,r22,4068 <__alt_mem_Onchip_SRAM+0xf8004068>
    4764:	07000404 	movi	fp,16
    4768:	d8801f17 	ldw	r2,124(sp)
    476c:	e5838f0e 	bge	fp,r22,55ac <___vfprintf_internal_r+0x1e50>
    4770:	01400074 	movhi	r5,1
    4774:	295adb84 	addi	r5,r5,27502
    4778:	dc403015 	stw	r17,192(sp)
    477c:	d9402c15 	stw	r5,176(sp)
    4780:	b023883a 	mov	r17,r22
    4784:	04c001c4 	movi	r19,7
    4788:	a82d883a 	mov	r22,r21
    478c:	902b883a 	mov	r21,r18
    4790:	8025883a 	mov	r18,r16
    4794:	dc002d17 	ldw	r16,180(sp)
    4798:	00000306 	br	47a8 <___vfprintf_internal_r+0x104c>
    479c:	8c7ffc04 	addi	r17,r17,-16
    47a0:	42000204 	addi	r8,r8,8
    47a4:	e440110e 	bge	fp,r17,47ec <___vfprintf_internal_r+0x1090>
    47a8:	18c00404 	addi	r3,r3,16
    47ac:	10800044 	addi	r2,r2,1
    47b0:	45000015 	stw	r20,0(r8)
    47b4:	47000115 	stw	fp,4(r8)
    47b8:	d8c02015 	stw	r3,128(sp)
    47bc:	d8801f15 	stw	r2,124(sp)
    47c0:	98bff60e 	bge	r19,r2,479c <__alt_mem_Onchip_SRAM+0xf800479c>
    47c4:	d9801e04 	addi	r6,sp,120
    47c8:	b80b883a 	mov	r5,r23
    47cc:	8009883a 	mov	r4,r16
    47d0:	000c6700 	call	c670 <__sprint_r>
    47d4:	103ce51e 	bne	r2,zero,3b6c <__alt_mem_Onchip_SRAM+0xf8003b6c>
    47d8:	8c7ffc04 	addi	r17,r17,-16
    47dc:	d8c02017 	ldw	r3,128(sp)
    47e0:	d8801f17 	ldw	r2,124(sp)
    47e4:	da000404 	addi	r8,sp,16
    47e8:	e47fef16 	blt	fp,r17,47a8 <__alt_mem_Onchip_SRAM+0xf80047a8>
    47ec:	9021883a 	mov	r16,r18
    47f0:	a825883a 	mov	r18,r21
    47f4:	b02b883a 	mov	r21,r22
    47f8:	882d883a 	mov	r22,r17
    47fc:	dc403017 	ldw	r17,192(sp)
    4800:	d9002c17 	ldw	r4,176(sp)
    4804:	1d87883a 	add	r3,r3,r22
    4808:	10800044 	addi	r2,r2,1
    480c:	41000015 	stw	r4,0(r8)
    4810:	45800115 	stw	r22,4(r8)
    4814:	d8c02015 	stw	r3,128(sp)
    4818:	d8801f15 	stw	r2,124(sp)
    481c:	010001c4 	movi	r4,7
    4820:	20818e16 	blt	r4,r2,4e5c <___vfprintf_internal_r+0x1700>
    4824:	42000204 	addi	r8,r8,8
    4828:	003e0f06 	br	4068 <__alt_mem_Onchip_SRAM+0xf8004068>
    482c:	d9403317 	ldw	r5,204(sp)
    4830:	00800044 	movi	r2,1
    4834:	18c00044 	addi	r3,r3,1
    4838:	1141530e 	bge	r2,r5,4d88 <___vfprintf_internal_r+0x162c>
    483c:	dc401f17 	ldw	r17,124(sp)
    4840:	00800044 	movi	r2,1
    4844:	40800115 	stw	r2,4(r8)
    4848:	8c400044 	addi	r17,r17,1
    484c:	44000015 	stw	r16,0(r8)
    4850:	d8c02015 	stw	r3,128(sp)
    4854:	dc401f15 	stw	r17,124(sp)
    4858:	008001c4 	movi	r2,7
    485c:	14416b16 	blt	r2,r17,4e0c <___vfprintf_internal_r+0x16b0>
    4860:	42000204 	addi	r8,r8,8
    4864:	d8803717 	ldw	r2,220(sp)
    4868:	d9003417 	ldw	r4,208(sp)
    486c:	8c400044 	addi	r17,r17,1
    4870:	10c7883a 	add	r3,r2,r3
    4874:	40800115 	stw	r2,4(r8)
    4878:	41000015 	stw	r4,0(r8)
    487c:	d8c02015 	stw	r3,128(sp)
    4880:	dc401f15 	stw	r17,124(sp)
    4884:	008001c4 	movi	r2,7
    4888:	14416916 	blt	r2,r17,4e30 <___vfprintf_internal_r+0x16d4>
    488c:	45800204 	addi	r22,r8,8
    4890:	d9003617 	ldw	r4,216(sp)
    4894:	d9403817 	ldw	r5,224(sp)
    4898:	000d883a 	mov	r6,zero
    489c:	000f883a 	mov	r7,zero
    48a0:	d8c03c15 	stw	r3,240(sp)
    48a4:	00105000 	call	10500 <__eqdf2>
    48a8:	d8c03c17 	ldw	r3,240(sp)
    48ac:	1000bc26 	beq	r2,zero,4ba0 <___vfprintf_internal_r+0x1444>
    48b0:	d9403317 	ldw	r5,204(sp)
    48b4:	84000044 	addi	r16,r16,1
    48b8:	8c400044 	addi	r17,r17,1
    48bc:	28bfffc4 	addi	r2,r5,-1
    48c0:	1887883a 	add	r3,r3,r2
    48c4:	b0800115 	stw	r2,4(r22)
    48c8:	b4000015 	stw	r16,0(r22)
    48cc:	d8c02015 	stw	r3,128(sp)
    48d0:	dc401f15 	stw	r17,124(sp)
    48d4:	008001c4 	movi	r2,7
    48d8:	14414316 	blt	r2,r17,4de8 <___vfprintf_internal_r+0x168c>
    48dc:	b5800204 	addi	r22,r22,8
    48e0:	d9003a17 	ldw	r4,232(sp)
    48e4:	df0022c4 	addi	fp,sp,139
    48e8:	8c400044 	addi	r17,r17,1
    48ec:	20c7883a 	add	r3,r4,r3
    48f0:	b7000015 	stw	fp,0(r22)
    48f4:	b1000115 	stw	r4,4(r22)
    48f8:	d8c02015 	stw	r3,128(sp)
    48fc:	dc401f15 	stw	r17,124(sp)
    4900:	008001c4 	movi	r2,7
    4904:	14400e16 	blt	r2,r17,4940 <___vfprintf_internal_r+0x11e4>
    4908:	b2000204 	addi	r8,r22,8
    490c:	003e1806 	br	4170 <__alt_mem_Onchip_SRAM+0xf8004170>
    4910:	01000074 	movhi	r4,1
    4914:	211adb84 	addi	r4,r4,27502
    4918:	d9002c15 	stw	r4,176(sp)
    491c:	d9002c17 	ldw	r4,176(sp)
    4920:	1c07883a 	add	r3,r3,r16
    4924:	44000115 	stw	r16,4(r8)
    4928:	41000015 	stw	r4,0(r8)
    492c:	10800044 	addi	r2,r2,1
    4930:	d8c02015 	stw	r3,128(sp)
    4934:	d8801f15 	stw	r2,124(sp)
    4938:	010001c4 	movi	r4,7
    493c:	20be0b0e 	bge	r4,r2,416c <__alt_mem_Onchip_SRAM+0xf800416c>
    4940:	d9002d17 	ldw	r4,180(sp)
    4944:	d9801e04 	addi	r6,sp,120
    4948:	b80b883a 	mov	r5,r23
    494c:	000c6700 	call	c670 <__sprint_r>
    4950:	103c861e 	bne	r2,zero,3b6c <__alt_mem_Onchip_SRAM+0xf8003b6c>
    4954:	d8c02017 	ldw	r3,128(sp)
    4958:	da000404 	addi	r8,sp,16
    495c:	003e0406 	br	4170 <__alt_mem_Onchip_SRAM+0xf8004170>
    4960:	d9002d17 	ldw	r4,180(sp)
    4964:	d9801e04 	addi	r6,sp,120
    4968:	b80b883a 	mov	r5,r23
    496c:	000c6700 	call	c670 <__sprint_r>
    4970:	103e3b26 	beq	r2,zero,4260 <__alt_mem_Onchip_SRAM+0xf8004260>
    4974:	003c7d06 	br	3b6c <__alt_mem_Onchip_SRAM+0xf8003b6c>
    4978:	d9002d17 	ldw	r4,180(sp)
    497c:	d9801e04 	addi	r6,sp,120
    4980:	b80b883a 	mov	r5,r23
    4984:	000c6700 	call	c670 <__sprint_r>
    4988:	103c781e 	bne	r2,zero,3b6c <__alt_mem_Onchip_SRAM+0xf8003b6c>
    498c:	d8c02017 	ldw	r3,128(sp)
    4990:	da000404 	addi	r8,sp,16
    4994:	003de906 	br	413c <__alt_mem_Onchip_SRAM+0xf800413c>
    4998:	d9002d17 	ldw	r4,180(sp)
    499c:	d9801e04 	addi	r6,sp,120
    49a0:	b80b883a 	mov	r5,r23
    49a4:	000c6700 	call	c670 <__sprint_r>
    49a8:	103c701e 	bne	r2,zero,3b6c <__alt_mem_Onchip_SRAM+0xf8003b6c>
    49ac:	d8c02017 	ldw	r3,128(sp)
    49b0:	da000404 	addi	r8,sp,16
    49b4:	003d9b06 	br	4024 <__alt_mem_Onchip_SRAM+0xf8004024>
    49b8:	d9002d17 	ldw	r4,180(sp)
    49bc:	d9801e04 	addi	r6,sp,120
    49c0:	b80b883a 	mov	r5,r23
    49c4:	000c6700 	call	c670 <__sprint_r>
    49c8:	103c681e 	bne	r2,zero,3b6c <__alt_mem_Onchip_SRAM+0xf8003b6c>
    49cc:	d8c02017 	ldw	r3,128(sp)
    49d0:	da000404 	addi	r8,sp,16
    49d4:	003da106 	br	405c <__alt_mem_Onchip_SRAM+0xf800405c>
    49d8:	d9402a17 	ldw	r5,168(sp)
    49dc:	d8002785 	stb	zero,158(sp)
    49e0:	283f0616 	blt	r5,zero,45fc <__alt_mem_Onchip_SRAM+0xf80045fc>
    49e4:	00ffdfc4 	movi	r3,-129
    49e8:	9d84b03a 	or	r2,r19,r22
    49ec:	90e4703a 	and	r18,r18,r3
    49f0:	103c3b26 	beq	r2,zero,3ae0 <__alt_mem_Onchip_SRAM+0xf8003ae0>
    49f4:	0039883a 	mov	fp,zero
    49f8:	003e5806 	br	435c <__alt_mem_Onchip_SRAM+0xf800435c>
    49fc:	9080040c 	andi	r2,r18,16
    4a00:	1001b326 	beq	r2,zero,50d0 <___vfprintf_internal_r+0x1974>
    4a04:	d8c02e17 	ldw	r3,184(sp)
    4a08:	d9002a17 	ldw	r4,168(sp)
    4a0c:	d8002785 	stb	zero,158(sp)
    4a10:	18800104 	addi	r2,r3,4
    4a14:	1cc00017 	ldw	r19,0(r3)
    4a18:	002d883a 	mov	r22,zero
    4a1c:	2001b516 	blt	r4,zero,50f4 <___vfprintf_internal_r+0x1998>
    4a20:	00ffdfc4 	movi	r3,-129
    4a24:	d8802e15 	stw	r2,184(sp)
    4a28:	90e4703a 	and	r18,r18,r3
    4a2c:	983d0526 	beq	r19,zero,3e44 <__alt_mem_Onchip_SRAM+0xf8003e44>
    4a30:	0039883a 	mov	fp,zero
    4a34:	003d0806 	br	3e58 <__alt_mem_Onchip_SRAM+0xf8003e58>
    4a38:	dc402617 	ldw	r17,152(sp)
    4a3c:	0441d30e 	bge	zero,r17,518c <___vfprintf_internal_r+0x1a30>
    4a40:	dc403217 	ldw	r17,200(sp)
    4a44:	d8803317 	ldw	r2,204(sp)
    4a48:	1440010e 	bge	r2,r17,4a50 <___vfprintf_internal_r+0x12f4>
    4a4c:	1023883a 	mov	r17,r2
    4a50:	04400a0e 	bge	zero,r17,4a7c <___vfprintf_internal_r+0x1320>
    4a54:	d8801f17 	ldw	r2,124(sp)
    4a58:	1c47883a 	add	r3,r3,r17
    4a5c:	44000015 	stw	r16,0(r8)
    4a60:	10800044 	addi	r2,r2,1
    4a64:	44400115 	stw	r17,4(r8)
    4a68:	d8c02015 	stw	r3,128(sp)
    4a6c:	d8801f15 	stw	r2,124(sp)
    4a70:	010001c4 	movi	r4,7
    4a74:	20826516 	blt	r4,r2,540c <___vfprintf_internal_r+0x1cb0>
    4a78:	42000204 	addi	r8,r8,8
    4a7c:	88026116 	blt	r17,zero,5404 <___vfprintf_internal_r+0x1ca8>
    4a80:	d9003217 	ldw	r4,200(sp)
    4a84:	2463c83a 	sub	r17,r4,r17
    4a88:	04407b0e 	bge	zero,r17,4c78 <___vfprintf_internal_r+0x151c>
    4a8c:	05800404 	movi	r22,16
    4a90:	d8801f17 	ldw	r2,124(sp)
    4a94:	b4419d0e 	bge	r22,r17,510c <___vfprintf_internal_r+0x19b0>
    4a98:	01000074 	movhi	r4,1
    4a9c:	211adb84 	addi	r4,r4,27502
    4aa0:	d9002c15 	stw	r4,176(sp)
    4aa4:	070001c4 	movi	fp,7
    4aa8:	dcc02d17 	ldw	r19,180(sp)
    4aac:	00000306 	br	4abc <___vfprintf_internal_r+0x1360>
    4ab0:	42000204 	addi	r8,r8,8
    4ab4:	8c7ffc04 	addi	r17,r17,-16
    4ab8:	b441970e 	bge	r22,r17,5118 <___vfprintf_internal_r+0x19bc>
    4abc:	18c00404 	addi	r3,r3,16
    4ac0:	10800044 	addi	r2,r2,1
    4ac4:	45000015 	stw	r20,0(r8)
    4ac8:	45800115 	stw	r22,4(r8)
    4acc:	d8c02015 	stw	r3,128(sp)
    4ad0:	d8801f15 	stw	r2,124(sp)
    4ad4:	e0bff60e 	bge	fp,r2,4ab0 <__alt_mem_Onchip_SRAM+0xf8004ab0>
    4ad8:	d9801e04 	addi	r6,sp,120
    4adc:	b80b883a 	mov	r5,r23
    4ae0:	9809883a 	mov	r4,r19
    4ae4:	000c6700 	call	c670 <__sprint_r>
    4ae8:	103c201e 	bne	r2,zero,3b6c <__alt_mem_Onchip_SRAM+0xf8003b6c>
    4aec:	d8c02017 	ldw	r3,128(sp)
    4af0:	d8801f17 	ldw	r2,124(sp)
    4af4:	da000404 	addi	r8,sp,16
    4af8:	003fee06 	br	4ab4 <__alt_mem_Onchip_SRAM+0xf8004ab4>
    4afc:	d9002d17 	ldw	r4,180(sp)
    4b00:	d9801e04 	addi	r6,sp,120
    4b04:	b80b883a 	mov	r5,r23
    4b08:	000c6700 	call	c670 <__sprint_r>
    4b0c:	103c171e 	bne	r2,zero,3b6c <__alt_mem_Onchip_SRAM+0xf8003b6c>
    4b10:	d8c02017 	ldw	r3,128(sp)
    4b14:	df002787 	ldb	fp,158(sp)
    4b18:	da000404 	addi	r8,sp,16
    4b1c:	003d3406 	br	3ff0 <__alt_mem_Onchip_SRAM+0xf8003ff0>
    4b20:	9080040c 	andi	r2,r18,16
    4b24:	10016126 	beq	r2,zero,50ac <___vfprintf_internal_r+0x1950>
    4b28:	d9402e17 	ldw	r5,184(sp)
    4b2c:	2cc00017 	ldw	r19,0(r5)
    4b30:	29400104 	addi	r5,r5,4
    4b34:	d9402e15 	stw	r5,184(sp)
    4b38:	982dd7fa 	srai	r22,r19,31
    4b3c:	b005883a 	mov	r2,r22
    4b40:	003c5a06 	br	3cac <__alt_mem_Onchip_SRAM+0xf8003cac>
    4b44:	9080040c 	andi	r2,r18,16
    4b48:	10003526 	beq	r2,zero,4c20 <___vfprintf_internal_r+0x14c4>
    4b4c:	d8c02e17 	ldw	r3,184(sp)
    4b50:	d9002a17 	ldw	r4,168(sp)
    4b54:	d8002785 	stb	zero,158(sp)
    4b58:	18800104 	addi	r2,r3,4
    4b5c:	1cc00017 	ldw	r19,0(r3)
    4b60:	002d883a 	mov	r22,zero
    4b64:	20003716 	blt	r4,zero,4c44 <___vfprintf_internal_r+0x14e8>
    4b68:	00ffdfc4 	movi	r3,-129
    4b6c:	d8802e15 	stw	r2,184(sp)
    4b70:	90e4703a 	and	r18,r18,r3
    4b74:	0039883a 	mov	fp,zero
    4b78:	983dd426 	beq	r19,zero,42cc <__alt_mem_Onchip_SRAM+0xf80042cc>
    4b7c:	00800244 	movi	r2,9
    4b80:	14fc5336 	bltu	r2,r19,3cd0 <__alt_mem_Onchip_SRAM+0xf8003cd0>
    4b84:	d8c02817 	ldw	r3,160(sp)
    4b88:	dc001dc4 	addi	r16,sp,119
    4b8c:	9cc00c04 	addi	r19,r19,48
    4b90:	1c07c83a 	sub	r3,r3,r16
    4b94:	dcc01dc5 	stb	r19,119(sp)
    4b98:	d8c02b15 	stw	r3,172(sp)
    4b9c:	003cc606 	br	3eb8 <__alt_mem_Onchip_SRAM+0xf8003eb8>
    4ba0:	d8803317 	ldw	r2,204(sp)
    4ba4:	143fffc4 	addi	r16,r2,-1
    4ba8:	043f4d0e 	bge	zero,r16,48e0 <__alt_mem_Onchip_SRAM+0xf80048e0>
    4bac:	07000404 	movi	fp,16
    4bb0:	e400810e 	bge	fp,r16,4db8 <___vfprintf_internal_r+0x165c>
    4bb4:	01400074 	movhi	r5,1
    4bb8:	295adb84 	addi	r5,r5,27502
    4bbc:	d9402c15 	stw	r5,176(sp)
    4bc0:	01c001c4 	movi	r7,7
    4bc4:	dcc02d17 	ldw	r19,180(sp)
    4bc8:	00000306 	br	4bd8 <___vfprintf_internal_r+0x147c>
    4bcc:	b5800204 	addi	r22,r22,8
    4bd0:	843ffc04 	addi	r16,r16,-16
    4bd4:	e4007b0e 	bge	fp,r16,4dc4 <___vfprintf_internal_r+0x1668>
    4bd8:	18c00404 	addi	r3,r3,16
    4bdc:	8c400044 	addi	r17,r17,1
    4be0:	b5000015 	stw	r20,0(r22)
    4be4:	b7000115 	stw	fp,4(r22)
    4be8:	d8c02015 	stw	r3,128(sp)
    4bec:	dc401f15 	stw	r17,124(sp)
    4bf0:	3c7ff60e 	bge	r7,r17,4bcc <__alt_mem_Onchip_SRAM+0xf8004bcc>
    4bf4:	d9801e04 	addi	r6,sp,120
    4bf8:	b80b883a 	mov	r5,r23
    4bfc:	9809883a 	mov	r4,r19
    4c00:	d9c03c15 	stw	r7,240(sp)
    4c04:	000c6700 	call	c670 <__sprint_r>
    4c08:	d9c03c17 	ldw	r7,240(sp)
    4c0c:	103bd71e 	bne	r2,zero,3b6c <__alt_mem_Onchip_SRAM+0xf8003b6c>
    4c10:	d8c02017 	ldw	r3,128(sp)
    4c14:	dc401f17 	ldw	r17,124(sp)
    4c18:	dd800404 	addi	r22,sp,16
    4c1c:	003fec06 	br	4bd0 <__alt_mem_Onchip_SRAM+0xf8004bd0>
    4c20:	9080100c 	andi	r2,r18,64
    4c24:	d8002785 	stb	zero,158(sp)
    4c28:	10010e26 	beq	r2,zero,5064 <___vfprintf_internal_r+0x1908>
    4c2c:	d9402e17 	ldw	r5,184(sp)
    4c30:	d8c02a17 	ldw	r3,168(sp)
    4c34:	002d883a 	mov	r22,zero
    4c38:	28800104 	addi	r2,r5,4
    4c3c:	2cc0000b 	ldhu	r19,0(r5)
    4c40:	183fc90e 	bge	r3,zero,4b68 <__alt_mem_Onchip_SRAM+0xf8004b68>
    4c44:	d8802e15 	stw	r2,184(sp)
    4c48:	0039883a 	mov	fp,zero
    4c4c:	9d84b03a 	or	r2,r19,r22
    4c50:	103c1e1e 	bne	r2,zero,3ccc <__alt_mem_Onchip_SRAM+0xf8003ccc>
    4c54:	00800044 	movi	r2,1
    4c58:	003e6c06 	br	460c <__alt_mem_Onchip_SRAM+0xf800460c>
    4c5c:	d9002d17 	ldw	r4,180(sp)
    4c60:	d9801e04 	addi	r6,sp,120
    4c64:	b80b883a 	mov	r5,r23
    4c68:	000c6700 	call	c670 <__sprint_r>
    4c6c:	103bbf1e 	bne	r2,zero,3b6c <__alt_mem_Onchip_SRAM+0xf8003b6c>
    4c70:	d8c02017 	ldw	r3,128(sp)
    4c74:	da000404 	addi	r8,sp,16
    4c78:	d9003217 	ldw	r4,200(sp)
    4c7c:	d8802617 	ldw	r2,152(sp)
    4c80:	d9403317 	ldw	r5,204(sp)
    4c84:	8123883a 	add	r17,r16,r4
    4c88:	11400216 	blt	r2,r5,4c94 <___vfprintf_internal_r+0x1538>
    4c8c:	9100004c 	andi	r4,r18,1
    4c90:	20000d26 	beq	r4,zero,4cc8 <___vfprintf_internal_r+0x156c>
    4c94:	d9003717 	ldw	r4,220(sp)
    4c98:	d9403417 	ldw	r5,208(sp)
    4c9c:	1907883a 	add	r3,r3,r4
    4ca0:	d9001f17 	ldw	r4,124(sp)
    4ca4:	41400015 	stw	r5,0(r8)
    4ca8:	d9403717 	ldw	r5,220(sp)
    4cac:	21000044 	addi	r4,r4,1
    4cb0:	d8c02015 	stw	r3,128(sp)
    4cb4:	41400115 	stw	r5,4(r8)
    4cb8:	d9001f15 	stw	r4,124(sp)
    4cbc:	014001c4 	movi	r5,7
    4cc0:	2901e816 	blt	r5,r4,5464 <___vfprintf_internal_r+0x1d08>
    4cc4:	42000204 	addi	r8,r8,8
    4cc8:	d9003317 	ldw	r4,204(sp)
    4ccc:	8121883a 	add	r16,r16,r4
    4cd0:	2085c83a 	sub	r2,r4,r2
    4cd4:	8461c83a 	sub	r16,r16,r17
    4cd8:	1400010e 	bge	r2,r16,4ce0 <___vfprintf_internal_r+0x1584>
    4cdc:	1021883a 	mov	r16,r2
    4ce0:	04000a0e 	bge	zero,r16,4d0c <___vfprintf_internal_r+0x15b0>
    4ce4:	d9001f17 	ldw	r4,124(sp)
    4ce8:	1c07883a 	add	r3,r3,r16
    4cec:	44400015 	stw	r17,0(r8)
    4cf0:	21000044 	addi	r4,r4,1
    4cf4:	44000115 	stw	r16,4(r8)
    4cf8:	d8c02015 	stw	r3,128(sp)
    4cfc:	d9001f15 	stw	r4,124(sp)
    4d00:	014001c4 	movi	r5,7
    4d04:	2901fb16 	blt	r5,r4,54f4 <___vfprintf_internal_r+0x1d98>
    4d08:	42000204 	addi	r8,r8,8
    4d0c:	8001f716 	blt	r16,zero,54ec <___vfprintf_internal_r+0x1d90>
    4d10:	1421c83a 	sub	r16,r2,r16
    4d14:	043d160e 	bge	zero,r16,4170 <__alt_mem_Onchip_SRAM+0xf8004170>
    4d18:	04400404 	movi	r17,16
    4d1c:	d8801f17 	ldw	r2,124(sp)
    4d20:	8c3efb0e 	bge	r17,r16,4910 <__alt_mem_Onchip_SRAM+0xf8004910>
    4d24:	01400074 	movhi	r5,1
    4d28:	295adb84 	addi	r5,r5,27502
    4d2c:	d9402c15 	stw	r5,176(sp)
    4d30:	058001c4 	movi	r22,7
    4d34:	dcc02d17 	ldw	r19,180(sp)
    4d38:	00000306 	br	4d48 <___vfprintf_internal_r+0x15ec>
    4d3c:	42000204 	addi	r8,r8,8
    4d40:	843ffc04 	addi	r16,r16,-16
    4d44:	8c3ef50e 	bge	r17,r16,491c <__alt_mem_Onchip_SRAM+0xf800491c>
    4d48:	18c00404 	addi	r3,r3,16
    4d4c:	10800044 	addi	r2,r2,1
    4d50:	45000015 	stw	r20,0(r8)
    4d54:	44400115 	stw	r17,4(r8)
    4d58:	d8c02015 	stw	r3,128(sp)
    4d5c:	d8801f15 	stw	r2,124(sp)
    4d60:	b0bff60e 	bge	r22,r2,4d3c <__alt_mem_Onchip_SRAM+0xf8004d3c>
    4d64:	d9801e04 	addi	r6,sp,120
    4d68:	b80b883a 	mov	r5,r23
    4d6c:	9809883a 	mov	r4,r19
    4d70:	000c6700 	call	c670 <__sprint_r>
    4d74:	103b7d1e 	bne	r2,zero,3b6c <__alt_mem_Onchip_SRAM+0xf8003b6c>
    4d78:	d8c02017 	ldw	r3,128(sp)
    4d7c:	d8801f17 	ldw	r2,124(sp)
    4d80:	da000404 	addi	r8,sp,16
    4d84:	003fee06 	br	4d40 <__alt_mem_Onchip_SRAM+0xf8004d40>
    4d88:	9088703a 	and	r4,r18,r2
    4d8c:	203eab1e 	bne	r4,zero,483c <__alt_mem_Onchip_SRAM+0xf800483c>
    4d90:	dc401f17 	ldw	r17,124(sp)
    4d94:	40800115 	stw	r2,4(r8)
    4d98:	44000015 	stw	r16,0(r8)
    4d9c:	8c400044 	addi	r17,r17,1
    4da0:	d8c02015 	stw	r3,128(sp)
    4da4:	dc401f15 	stw	r17,124(sp)
    4da8:	008001c4 	movi	r2,7
    4dac:	14400e16 	blt	r2,r17,4de8 <___vfprintf_internal_r+0x168c>
    4db0:	45800204 	addi	r22,r8,8
    4db4:	003eca06 	br	48e0 <__alt_mem_Onchip_SRAM+0xf80048e0>
    4db8:	01000074 	movhi	r4,1
    4dbc:	211adb84 	addi	r4,r4,27502
    4dc0:	d9002c15 	stw	r4,176(sp)
    4dc4:	d8802c17 	ldw	r2,176(sp)
    4dc8:	1c07883a 	add	r3,r3,r16
    4dcc:	8c400044 	addi	r17,r17,1
    4dd0:	b0800015 	stw	r2,0(r22)
    4dd4:	b4000115 	stw	r16,4(r22)
    4dd8:	d8c02015 	stw	r3,128(sp)
    4ddc:	dc401f15 	stw	r17,124(sp)
    4de0:	008001c4 	movi	r2,7
    4de4:	147ebd0e 	bge	r2,r17,48dc <__alt_mem_Onchip_SRAM+0xf80048dc>
    4de8:	d9002d17 	ldw	r4,180(sp)
    4dec:	d9801e04 	addi	r6,sp,120
    4df0:	b80b883a 	mov	r5,r23
    4df4:	000c6700 	call	c670 <__sprint_r>
    4df8:	103b5c1e 	bne	r2,zero,3b6c <__alt_mem_Onchip_SRAM+0xf8003b6c>
    4dfc:	d8c02017 	ldw	r3,128(sp)
    4e00:	dc401f17 	ldw	r17,124(sp)
    4e04:	dd800404 	addi	r22,sp,16
    4e08:	003eb506 	br	48e0 <__alt_mem_Onchip_SRAM+0xf80048e0>
    4e0c:	d9002d17 	ldw	r4,180(sp)
    4e10:	d9801e04 	addi	r6,sp,120
    4e14:	b80b883a 	mov	r5,r23
    4e18:	000c6700 	call	c670 <__sprint_r>
    4e1c:	103b531e 	bne	r2,zero,3b6c <__alt_mem_Onchip_SRAM+0xf8003b6c>
    4e20:	d8c02017 	ldw	r3,128(sp)
    4e24:	dc401f17 	ldw	r17,124(sp)
    4e28:	da000404 	addi	r8,sp,16
    4e2c:	003e8d06 	br	4864 <__alt_mem_Onchip_SRAM+0xf8004864>
    4e30:	d9002d17 	ldw	r4,180(sp)
    4e34:	d9801e04 	addi	r6,sp,120
    4e38:	b80b883a 	mov	r5,r23
    4e3c:	000c6700 	call	c670 <__sprint_r>
    4e40:	103b4a1e 	bne	r2,zero,3b6c <__alt_mem_Onchip_SRAM+0xf8003b6c>
    4e44:	d8c02017 	ldw	r3,128(sp)
    4e48:	dc401f17 	ldw	r17,124(sp)
    4e4c:	dd800404 	addi	r22,sp,16
    4e50:	003e8f06 	br	4890 <__alt_mem_Onchip_SRAM+0xf8004890>
    4e54:	0027883a 	mov	r19,zero
    4e58:	003f4a06 	br	4b84 <__alt_mem_Onchip_SRAM+0xf8004b84>
    4e5c:	d9002d17 	ldw	r4,180(sp)
    4e60:	d9801e04 	addi	r6,sp,120
    4e64:	b80b883a 	mov	r5,r23
    4e68:	000c6700 	call	c670 <__sprint_r>
    4e6c:	103b3f1e 	bne	r2,zero,3b6c <__alt_mem_Onchip_SRAM+0xf8003b6c>
    4e70:	d8c02017 	ldw	r3,128(sp)
    4e74:	da000404 	addi	r8,sp,16
    4e78:	003c7b06 	br	4068 <__alt_mem_Onchip_SRAM+0xf8004068>
    4e7c:	d9402a17 	ldw	r5,168(sp)
    4e80:	04e7c83a 	sub	r19,zero,r19
    4e84:	07000b44 	movi	fp,45
    4e88:	9804c03a 	cmpne	r2,r19,zero
    4e8c:	05adc83a 	sub	r22,zero,r22
    4e90:	df002785 	stb	fp,158(sp)
    4e94:	b0adc83a 	sub	r22,r22,r2
    4e98:	28017b16 	blt	r5,zero,5488 <___vfprintf_internal_r+0x1d2c>
    4e9c:	00bfdfc4 	movi	r2,-129
    4ea0:	90a4703a 	and	r18,r18,r2
    4ea4:	003b8906 	br	3ccc <__alt_mem_Onchip_SRAM+0xf8003ccc>
    4ea8:	d9003617 	ldw	r4,216(sp)
    4eac:	d9403817 	ldw	r5,224(sp)
    4eb0:	da003d15 	stw	r8,244(sp)
    4eb4:	000ad240 	call	ad24 <__fpclassifyd>
    4eb8:	da003d17 	ldw	r8,244(sp)
    4ebc:	1000f026 	beq	r2,zero,5280 <___vfprintf_internal_r+0x1b24>
    4ec0:	d9002a17 	ldw	r4,168(sp)
    4ec4:	05bff7c4 	movi	r22,-33
    4ec8:	00bfffc4 	movi	r2,-1
    4ecc:	8dac703a 	and	r22,r17,r22
    4ed0:	20820026 	beq	r4,r2,56d4 <___vfprintf_internal_r+0x1f78>
    4ed4:	008011c4 	movi	r2,71
    4ed8:	b081f726 	beq	r22,r2,56b8 <___vfprintf_internal_r+0x1f5c>
    4edc:	d9003817 	ldw	r4,224(sp)
    4ee0:	90c04014 	ori	r3,r18,256
    4ee4:	d8c02c15 	stw	r3,176(sp)
    4ee8:	20021516 	blt	r4,zero,5740 <___vfprintf_internal_r+0x1fe4>
    4eec:	dcc03817 	ldw	r19,224(sp)
    4ef0:	d8002905 	stb	zero,164(sp)
    4ef4:	00801984 	movi	r2,102
    4ef8:	8881f926 	beq	r17,r2,56e0 <___vfprintf_internal_r+0x1f84>
    4efc:	00801184 	movi	r2,70
    4f00:	88821c26 	beq	r17,r2,5774 <___vfprintf_internal_r+0x2018>
    4f04:	00801144 	movi	r2,69
    4f08:	b081ef26 	beq	r22,r2,56c8 <___vfprintf_internal_r+0x1f6c>
    4f0c:	d8c02a17 	ldw	r3,168(sp)
    4f10:	d8802104 	addi	r2,sp,132
    4f14:	d8800315 	stw	r2,12(sp)
    4f18:	d9403617 	ldw	r5,216(sp)
    4f1c:	d8802504 	addi	r2,sp,148
    4f20:	d9002d17 	ldw	r4,180(sp)
    4f24:	d8800215 	stw	r2,8(sp)
    4f28:	d8802604 	addi	r2,sp,152
    4f2c:	d8c00015 	stw	r3,0(sp)
    4f30:	d8800115 	stw	r2,4(sp)
    4f34:	01c00084 	movi	r7,2
    4f38:	980d883a 	mov	r6,r19
    4f3c:	d8c03c15 	stw	r3,240(sp)
    4f40:	da003d15 	stw	r8,244(sp)
    4f44:	0005e8c0 	call	5e8c <_dtoa_r>
    4f48:	1021883a 	mov	r16,r2
    4f4c:	008019c4 	movi	r2,103
    4f50:	d8c03c17 	ldw	r3,240(sp)
    4f54:	da003d17 	ldw	r8,244(sp)
    4f58:	88817126 	beq	r17,r2,5520 <___vfprintf_internal_r+0x1dc4>
    4f5c:	008011c4 	movi	r2,71
    4f60:	88829126 	beq	r17,r2,59a8 <___vfprintf_internal_r+0x224c>
    4f64:	80f9883a 	add	fp,r16,r3
    4f68:	d9003617 	ldw	r4,216(sp)
    4f6c:	000d883a 	mov	r6,zero
    4f70:	000f883a 	mov	r7,zero
    4f74:	980b883a 	mov	r5,r19
    4f78:	da003d15 	stw	r8,244(sp)
    4f7c:	00105000 	call	10500 <__eqdf2>
    4f80:	da003d17 	ldw	r8,244(sp)
    4f84:	10018d26 	beq	r2,zero,55bc <___vfprintf_internal_r+0x1e60>
    4f88:	d8802117 	ldw	r2,132(sp)
    4f8c:	1700062e 	bgeu	r2,fp,4fa8 <___vfprintf_internal_r+0x184c>
    4f90:	01000c04 	movi	r4,48
    4f94:	10c00044 	addi	r3,r2,1
    4f98:	d8c02115 	stw	r3,132(sp)
    4f9c:	11000005 	stb	r4,0(r2)
    4fa0:	d8802117 	ldw	r2,132(sp)
    4fa4:	173ffb36 	bltu	r2,fp,4f94 <__alt_mem_Onchip_SRAM+0xf8004f94>
    4fa8:	1405c83a 	sub	r2,r2,r16
    4fac:	d8803315 	stw	r2,204(sp)
    4fb0:	008011c4 	movi	r2,71
    4fb4:	b0817626 	beq	r22,r2,5590 <___vfprintf_internal_r+0x1e34>
    4fb8:	00801944 	movi	r2,101
    4fbc:	1442800e 	bge	r2,r17,59c0 <___vfprintf_internal_r+0x2264>
    4fc0:	d8c02617 	ldw	r3,152(sp)
    4fc4:	00801984 	movi	r2,102
    4fc8:	d8c03215 	stw	r3,200(sp)
    4fcc:	8881fe26 	beq	r17,r2,57c8 <___vfprintf_internal_r+0x206c>
    4fd0:	d8c03217 	ldw	r3,200(sp)
    4fd4:	d9003317 	ldw	r4,204(sp)
    4fd8:	1901dd16 	blt	r3,r4,5750 <___vfprintf_internal_r+0x1ff4>
    4fdc:	9480004c 	andi	r18,r18,1
    4fe0:	90022b1e 	bne	r18,zero,5890 <___vfprintf_internal_r+0x2134>
    4fe4:	1805883a 	mov	r2,r3
    4fe8:	18028316 	blt	r3,zero,59f8 <___vfprintf_internal_r+0x229c>
    4fec:	d8c03217 	ldw	r3,200(sp)
    4ff0:	044019c4 	movi	r17,103
    4ff4:	d8c02b15 	stw	r3,172(sp)
    4ff8:	df002907 	ldb	fp,164(sp)
    4ffc:	e001531e 	bne	fp,zero,554c <___vfprintf_internal_r+0x1df0>
    5000:	df002783 	ldbu	fp,158(sp)
    5004:	d8802915 	stw	r2,164(sp)
    5008:	dc802c17 	ldw	r18,176(sp)
    500c:	d8002a15 	stw	zero,168(sp)
    5010:	003baf06 	br	3ed0 <__alt_mem_Onchip_SRAM+0xf8003ed0>
    5014:	d8c02e17 	ldw	r3,184(sp)
    5018:	d9002e17 	ldw	r4,184(sp)
    501c:	d9402e17 	ldw	r5,184(sp)
    5020:	18c00017 	ldw	r3,0(r3)
    5024:	21000117 	ldw	r4,4(r4)
    5028:	29400204 	addi	r5,r5,8
    502c:	d8c03615 	stw	r3,216(sp)
    5030:	d9003815 	stw	r4,224(sp)
    5034:	d9402e15 	stw	r5,184(sp)
    5038:	003b5006 	br	3d7c <__alt_mem_Onchip_SRAM+0xf8003d7c>
    503c:	ac400007 	ldb	r17,0(r21)
    5040:	003a2806 	br	38e4 <__alt_mem_Onchip_SRAM+0xf80038e4>
    5044:	9080100c 	andi	r2,r18,64
    5048:	1000a826 	beq	r2,zero,52ec <___vfprintf_internal_r+0x1b90>
    504c:	d8c02e17 	ldw	r3,184(sp)
    5050:	002d883a 	mov	r22,zero
    5054:	1cc0000b 	ldhu	r19,0(r3)
    5058:	18c00104 	addi	r3,r3,4
    505c:	d8c02e15 	stw	r3,184(sp)
    5060:	003caf06 	br	4320 <__alt_mem_Onchip_SRAM+0xf8004320>
    5064:	d9002e17 	ldw	r4,184(sp)
    5068:	d9402a17 	ldw	r5,168(sp)
    506c:	002d883a 	mov	r22,zero
    5070:	20800104 	addi	r2,r4,4
    5074:	24c00017 	ldw	r19,0(r4)
    5078:	283ebb0e 	bge	r5,zero,4b68 <__alt_mem_Onchip_SRAM+0xf8004b68>
    507c:	003ef106 	br	4c44 <__alt_mem_Onchip_SRAM+0xf8004c44>
    5080:	9080040c 	andi	r2,r18,16
    5084:	1000921e 	bne	r2,zero,52d0 <___vfprintf_internal_r+0x1b74>
    5088:	9480100c 	andi	r18,r18,64
    508c:	90013926 	beq	r18,zero,5574 <___vfprintf_internal_r+0x1e18>
    5090:	d9402e17 	ldw	r5,184(sp)
    5094:	d8c02f17 	ldw	r3,188(sp)
    5098:	28800017 	ldw	r2,0(r5)
    509c:	29400104 	addi	r5,r5,4
    50a0:	d9402e15 	stw	r5,184(sp)
    50a4:	10c0000d 	sth	r3,0(r2)
    50a8:	0039e406 	br	383c <__alt_mem_Onchip_SRAM+0xf800383c>
    50ac:	9080100c 	andi	r2,r18,64
    50b0:	10008026 	beq	r2,zero,52b4 <___vfprintf_internal_r+0x1b58>
    50b4:	d8802e17 	ldw	r2,184(sp)
    50b8:	14c0000f 	ldh	r19,0(r2)
    50bc:	10800104 	addi	r2,r2,4
    50c0:	d8802e15 	stw	r2,184(sp)
    50c4:	982dd7fa 	srai	r22,r19,31
    50c8:	b005883a 	mov	r2,r22
    50cc:	003af706 	br	3cac <__alt_mem_Onchip_SRAM+0xf8003cac>
    50d0:	9080100c 	andi	r2,r18,64
    50d4:	d8002785 	stb	zero,158(sp)
    50d8:	10008a1e 	bne	r2,zero,5304 <___vfprintf_internal_r+0x1ba8>
    50dc:	d9002e17 	ldw	r4,184(sp)
    50e0:	d9402a17 	ldw	r5,168(sp)
    50e4:	002d883a 	mov	r22,zero
    50e8:	20800104 	addi	r2,r4,4
    50ec:	24c00017 	ldw	r19,0(r4)
    50f0:	283e4b0e 	bge	r5,zero,4a20 <__alt_mem_Onchip_SRAM+0xf8004a20>
    50f4:	9d86b03a 	or	r3,r19,r22
    50f8:	d8802e15 	stw	r2,184(sp)
    50fc:	183e4c1e 	bne	r3,zero,4a30 <__alt_mem_Onchip_SRAM+0xf8004a30>
    5100:	0039883a 	mov	fp,zero
    5104:	0005883a 	mov	r2,zero
    5108:	003d4006 	br	460c <__alt_mem_Onchip_SRAM+0xf800460c>
    510c:	01400074 	movhi	r5,1
    5110:	295adb84 	addi	r5,r5,27502
    5114:	d9402c15 	stw	r5,176(sp)
    5118:	d9402c17 	ldw	r5,176(sp)
    511c:	1c47883a 	add	r3,r3,r17
    5120:	10800044 	addi	r2,r2,1
    5124:	41400015 	stw	r5,0(r8)
    5128:	44400115 	stw	r17,4(r8)
    512c:	d8c02015 	stw	r3,128(sp)
    5130:	d8801f15 	stw	r2,124(sp)
    5134:	010001c4 	movi	r4,7
    5138:	20bec816 	blt	r4,r2,4c5c <__alt_mem_Onchip_SRAM+0xf8004c5c>
    513c:	42000204 	addi	r8,r8,8
    5140:	003ecd06 	br	4c78 <__alt_mem_Onchip_SRAM+0xf8004c78>
    5144:	d9002a17 	ldw	r4,168(sp)
    5148:	d8002785 	stb	zero,158(sp)
    514c:	203d2d16 	blt	r4,zero,4604 <__alt_mem_Onchip_SRAM+0xf8004604>
    5150:	00bfdfc4 	movi	r2,-129
    5154:	90a4703a 	and	r18,r18,r2
    5158:	003a6106 	br	3ae0 <__alt_mem_Onchip_SRAM+0xf8003ae0>
    515c:	01000074 	movhi	r4,1
    5160:	211adb84 	addi	r4,r4,27502
    5164:	d9002c15 	stw	r4,176(sp)
    5168:	003bea06 	br	4114 <__alt_mem_Onchip_SRAM+0xf8004114>
    516c:	d9002d17 	ldw	r4,180(sp)
    5170:	d9801e04 	addi	r6,sp,120
    5174:	b80b883a 	mov	r5,r23
    5178:	000c6700 	call	c670 <__sprint_r>
    517c:	103a7b1e 	bne	r2,zero,3b6c <__alt_mem_Onchip_SRAM+0xf8003b6c>
    5180:	d8c02017 	ldw	r3,128(sp)
    5184:	da000404 	addi	r8,sp,16
    5188:	003d4106 	br	4690 <__alt_mem_Onchip_SRAM+0xf8004690>
    518c:	d8801f17 	ldw	r2,124(sp)
    5190:	01400074 	movhi	r5,1
    5194:	01000044 	movi	r4,1
    5198:	18c00044 	addi	r3,r3,1
    519c:	10800044 	addi	r2,r2,1
    51a0:	295ad304 	addi	r5,r5,27468
    51a4:	41000115 	stw	r4,4(r8)
    51a8:	41400015 	stw	r5,0(r8)
    51ac:	d8c02015 	stw	r3,128(sp)
    51b0:	d8801f15 	stw	r2,124(sp)
    51b4:	010001c4 	movi	r4,7
    51b8:	20805c16 	blt	r4,r2,532c <___vfprintf_internal_r+0x1bd0>
    51bc:	42000204 	addi	r8,r8,8
    51c0:	8800041e 	bne	r17,zero,51d4 <___vfprintf_internal_r+0x1a78>
    51c4:	d8803317 	ldw	r2,204(sp)
    51c8:	1000021e 	bne	r2,zero,51d4 <___vfprintf_internal_r+0x1a78>
    51cc:	9080004c 	andi	r2,r18,1
    51d0:	103be726 	beq	r2,zero,4170 <__alt_mem_Onchip_SRAM+0xf8004170>
    51d4:	d9003717 	ldw	r4,220(sp)
    51d8:	d8801f17 	ldw	r2,124(sp)
    51dc:	d9403417 	ldw	r5,208(sp)
    51e0:	20c7883a 	add	r3,r4,r3
    51e4:	10800044 	addi	r2,r2,1
    51e8:	41000115 	stw	r4,4(r8)
    51ec:	41400015 	stw	r5,0(r8)
    51f0:	d8c02015 	stw	r3,128(sp)
    51f4:	d8801f15 	stw	r2,124(sp)
    51f8:	010001c4 	movi	r4,7
    51fc:	20812116 	blt	r4,r2,5684 <___vfprintf_internal_r+0x1f28>
    5200:	42000204 	addi	r8,r8,8
    5204:	0463c83a 	sub	r17,zero,r17
    5208:	0440730e 	bge	zero,r17,53d8 <___vfprintf_internal_r+0x1c7c>
    520c:	05800404 	movi	r22,16
    5210:	b440860e 	bge	r22,r17,542c <___vfprintf_internal_r+0x1cd0>
    5214:	01400074 	movhi	r5,1
    5218:	295adb84 	addi	r5,r5,27502
    521c:	d9402c15 	stw	r5,176(sp)
    5220:	070001c4 	movi	fp,7
    5224:	dcc02d17 	ldw	r19,180(sp)
    5228:	00000306 	br	5238 <___vfprintf_internal_r+0x1adc>
    522c:	42000204 	addi	r8,r8,8
    5230:	8c7ffc04 	addi	r17,r17,-16
    5234:	b440800e 	bge	r22,r17,5438 <___vfprintf_internal_r+0x1cdc>
    5238:	18c00404 	addi	r3,r3,16
    523c:	10800044 	addi	r2,r2,1
    5240:	45000015 	stw	r20,0(r8)
    5244:	45800115 	stw	r22,4(r8)
    5248:	d8c02015 	stw	r3,128(sp)
    524c:	d8801f15 	stw	r2,124(sp)
    5250:	e0bff60e 	bge	fp,r2,522c <__alt_mem_Onchip_SRAM+0xf800522c>
    5254:	d9801e04 	addi	r6,sp,120
    5258:	b80b883a 	mov	r5,r23
    525c:	9809883a 	mov	r4,r19
    5260:	000c6700 	call	c670 <__sprint_r>
    5264:	103a411e 	bne	r2,zero,3b6c <__alt_mem_Onchip_SRAM+0xf8003b6c>
    5268:	d8c02017 	ldw	r3,128(sp)
    526c:	d8801f17 	ldw	r2,124(sp)
    5270:	da000404 	addi	r8,sp,16
    5274:	003fee06 	br	5230 <__alt_mem_Onchip_SRAM+0xf8005230>
    5278:	00bfffc4 	movi	r2,-1
    527c:	003a3f06 	br	3b7c <__alt_mem_Onchip_SRAM+0xf8003b7c>
    5280:	008011c4 	movi	r2,71
    5284:	1440b816 	blt	r2,r17,5568 <___vfprintf_internal_r+0x1e0c>
    5288:	04000074 	movhi	r16,1
    528c:	841ac504 	addi	r16,r16,27412
    5290:	00c000c4 	movi	r3,3
    5294:	00bfdfc4 	movi	r2,-129
    5298:	d8c02915 	stw	r3,164(sp)
    529c:	90a4703a 	and	r18,r18,r2
    52a0:	df002783 	ldbu	fp,158(sp)
    52a4:	d8c02b15 	stw	r3,172(sp)
    52a8:	d8002a15 	stw	zero,168(sp)
    52ac:	d8003215 	stw	zero,200(sp)
    52b0:	003b0706 	br	3ed0 <__alt_mem_Onchip_SRAM+0xf8003ed0>
    52b4:	d8c02e17 	ldw	r3,184(sp)
    52b8:	1cc00017 	ldw	r19,0(r3)
    52bc:	18c00104 	addi	r3,r3,4
    52c0:	d8c02e15 	stw	r3,184(sp)
    52c4:	982dd7fa 	srai	r22,r19,31
    52c8:	b005883a 	mov	r2,r22
    52cc:	003a7706 	br	3cac <__alt_mem_Onchip_SRAM+0xf8003cac>
    52d0:	d8c02e17 	ldw	r3,184(sp)
    52d4:	d9002f17 	ldw	r4,188(sp)
    52d8:	18800017 	ldw	r2,0(r3)
    52dc:	18c00104 	addi	r3,r3,4
    52e0:	d8c02e15 	stw	r3,184(sp)
    52e4:	11000015 	stw	r4,0(r2)
    52e8:	00395406 	br	383c <__alt_mem_Onchip_SRAM+0xf800383c>
    52ec:	d9002e17 	ldw	r4,184(sp)
    52f0:	002d883a 	mov	r22,zero
    52f4:	24c00017 	ldw	r19,0(r4)
    52f8:	21000104 	addi	r4,r4,4
    52fc:	d9002e15 	stw	r4,184(sp)
    5300:	003c0706 	br	4320 <__alt_mem_Onchip_SRAM+0xf8004320>
    5304:	d9402e17 	ldw	r5,184(sp)
    5308:	d8c02a17 	ldw	r3,168(sp)
    530c:	002d883a 	mov	r22,zero
    5310:	28800104 	addi	r2,r5,4
    5314:	2cc0000b 	ldhu	r19,0(r5)
    5318:	183dc10e 	bge	r3,zero,4a20 <__alt_mem_Onchip_SRAM+0xf8004a20>
    531c:	003f7506 	br	50f4 <__alt_mem_Onchip_SRAM+0xf80050f4>
    5320:	04000074 	movhi	r16,1
    5324:	841ac304 	addi	r16,r16,27404
    5328:	003aa706 	br	3dc8 <__alt_mem_Onchip_SRAM+0xf8003dc8>
    532c:	d9002d17 	ldw	r4,180(sp)
    5330:	d9801e04 	addi	r6,sp,120
    5334:	b80b883a 	mov	r5,r23
    5338:	000c6700 	call	c670 <__sprint_r>
    533c:	103a0b1e 	bne	r2,zero,3b6c <__alt_mem_Onchip_SRAM+0xf8003b6c>
    5340:	dc402617 	ldw	r17,152(sp)
    5344:	d8c02017 	ldw	r3,128(sp)
    5348:	da000404 	addi	r8,sp,16
    534c:	003f9c06 	br	51c0 <__alt_mem_Onchip_SRAM+0xf80051c0>
    5350:	ac400043 	ldbu	r17,1(r21)
    5354:	84000814 	ori	r16,r16,32
    5358:	ad400044 	addi	r21,r21,1
    535c:	8c403fcc 	andi	r17,r17,255
    5360:	8c40201c 	xori	r17,r17,128
    5364:	8c7fe004 	addi	r17,r17,-128
    5368:	00395e06 	br	38e4 <__alt_mem_Onchip_SRAM+0xf80038e4>
    536c:	d8c02e15 	stw	r3,184(sp)
    5370:	0039883a 	mov	fp,zero
    5374:	003e3506 	br	4c4c <__alt_mem_Onchip_SRAM+0xf8004c4c>
    5378:	d9002d17 	ldw	r4,180(sp)
    537c:	d9801e04 	addi	r6,sp,120
    5380:	b80b883a 	mov	r5,r23
    5384:	000c6700 	call	c670 <__sprint_r>
    5388:	1039f81e 	bne	r2,zero,3b6c <__alt_mem_Onchip_SRAM+0xf8003b6c>
    538c:	d8c02017 	ldw	r3,128(sp)
    5390:	da000404 	addi	r8,sp,16
    5394:	003cd006 	br	46d8 <__alt_mem_Onchip_SRAM+0xf80046d8>
    5398:	8009883a 	mov	r4,r16
    539c:	df003d15 	stw	fp,244(sp)
    53a0:	00013b80 	call	13b8 <strlen>
    53a4:	d8802b15 	stw	r2,172(sp)
    53a8:	da003d17 	ldw	r8,244(sp)
    53ac:	103c200e 	bge	r2,zero,4430 <__alt_mem_Onchip_SRAM+0xf8004430>
    53b0:	0005883a 	mov	r2,zero
    53b4:	003c1e06 	br	4430 <__alt_mem_Onchip_SRAM+0xf8004430>
    53b8:	d9002d17 	ldw	r4,180(sp)
    53bc:	d9801e04 	addi	r6,sp,120
    53c0:	b80b883a 	mov	r5,r23
    53c4:	000c6700 	call	c670 <__sprint_r>
    53c8:	1039e81e 	bne	r2,zero,3b6c <__alt_mem_Onchip_SRAM+0xf8003b6c>
    53cc:	d8c02017 	ldw	r3,128(sp)
    53d0:	d8801f17 	ldw	r2,124(sp)
    53d4:	da000404 	addi	r8,sp,16
    53d8:	d9403317 	ldw	r5,204(sp)
    53dc:	10800044 	addi	r2,r2,1
    53e0:	44000015 	stw	r16,0(r8)
    53e4:	28c7883a 	add	r3,r5,r3
    53e8:	003b5b06 	br	4158 <__alt_mem_Onchip_SRAM+0xf8004158>
    53ec:	01000074 	movhi	r4,1
    53f0:	211adf84 	addi	r4,r4,27518
    53f4:	d9003515 	stw	r4,212(sp)
    53f8:	003af206 	br	3fc4 <__alt_mem_Onchip_SRAM+0xf8003fc4>
    53fc:	013fffc4 	movi	r4,-1
    5400:	003a0806 	br	3c24 <__alt_mem_Onchip_SRAM+0xf8003c24>
    5404:	0023883a 	mov	r17,zero
    5408:	003d9d06 	br	4a80 <__alt_mem_Onchip_SRAM+0xf8004a80>
    540c:	d9002d17 	ldw	r4,180(sp)
    5410:	d9801e04 	addi	r6,sp,120
    5414:	b80b883a 	mov	r5,r23
    5418:	000c6700 	call	c670 <__sprint_r>
    541c:	1039d31e 	bne	r2,zero,3b6c <__alt_mem_Onchip_SRAM+0xf8003b6c>
    5420:	d8c02017 	ldw	r3,128(sp)
    5424:	da000404 	addi	r8,sp,16
    5428:	003d9406 	br	4a7c <__alt_mem_Onchip_SRAM+0xf8004a7c>
    542c:	01000074 	movhi	r4,1
    5430:	211adb84 	addi	r4,r4,27502
    5434:	d9002c15 	stw	r4,176(sp)
    5438:	d9002c17 	ldw	r4,176(sp)
    543c:	1c47883a 	add	r3,r3,r17
    5440:	10800044 	addi	r2,r2,1
    5444:	41000015 	stw	r4,0(r8)
    5448:	44400115 	stw	r17,4(r8)
    544c:	d8c02015 	stw	r3,128(sp)
    5450:	d8801f15 	stw	r2,124(sp)
    5454:	010001c4 	movi	r4,7
    5458:	20bfd716 	blt	r4,r2,53b8 <__alt_mem_Onchip_SRAM+0xf80053b8>
    545c:	42000204 	addi	r8,r8,8
    5460:	003fdd06 	br	53d8 <__alt_mem_Onchip_SRAM+0xf80053d8>
    5464:	d9002d17 	ldw	r4,180(sp)
    5468:	d9801e04 	addi	r6,sp,120
    546c:	b80b883a 	mov	r5,r23
    5470:	000c6700 	call	c670 <__sprint_r>
    5474:	1039bd1e 	bne	r2,zero,3b6c <__alt_mem_Onchip_SRAM+0xf8003b6c>
    5478:	d8802617 	ldw	r2,152(sp)
    547c:	d8c02017 	ldw	r3,128(sp)
    5480:	da000404 	addi	r8,sp,16
    5484:	003e1006 	br	4cc8 <__alt_mem_Onchip_SRAM+0xf8004cc8>
    5488:	00800044 	movi	r2,1
    548c:	10803fcc 	andi	r2,r2,255
    5490:	00c00044 	movi	r3,1
    5494:	10fa0d26 	beq	r2,r3,3ccc <__alt_mem_Onchip_SRAM+0xf8003ccc>
    5498:	00c00084 	movi	r3,2
    549c:	10fbaf26 	beq	r2,r3,435c <__alt_mem_Onchip_SRAM+0xf800435c>
    54a0:	003a6d06 	br	3e58 <__alt_mem_Onchip_SRAM+0xf8003e58>
    54a4:	01000074 	movhi	r4,1
    54a8:	211adf84 	addi	r4,r4,27518
    54ac:	d9003515 	stw	r4,212(sp)
    54b0:	003b5406 	br	4204 <__alt_mem_Onchip_SRAM+0xf8004204>
    54b4:	d8802a17 	ldw	r2,168(sp)
    54b8:	00c00184 	movi	r3,6
    54bc:	1880012e 	bgeu	r3,r2,54c4 <___vfprintf_internal_r+0x1d68>
    54c0:	1805883a 	mov	r2,r3
    54c4:	d8802b15 	stw	r2,172(sp)
    54c8:	1000ef16 	blt	r2,zero,5888 <___vfprintf_internal_r+0x212c>
    54cc:	04000074 	movhi	r16,1
    54d0:	d8802915 	stw	r2,164(sp)
    54d4:	dcc02e15 	stw	r19,184(sp)
    54d8:	d8002a15 	stw	zero,168(sp)
    54dc:	d8003215 	stw	zero,200(sp)
    54e0:	841ad104 	addi	r16,r16,27460
    54e4:	0039883a 	mov	fp,zero
    54e8:	003a8006 	br	3eec <__alt_mem_Onchip_SRAM+0xf8003eec>
    54ec:	0021883a 	mov	r16,zero
    54f0:	003e0706 	br	4d10 <__alt_mem_Onchip_SRAM+0xf8004d10>
    54f4:	d9002d17 	ldw	r4,180(sp)
    54f8:	d9801e04 	addi	r6,sp,120
    54fc:	b80b883a 	mov	r5,r23
    5500:	000c6700 	call	c670 <__sprint_r>
    5504:	1039991e 	bne	r2,zero,3b6c <__alt_mem_Onchip_SRAM+0xf8003b6c>
    5508:	d8802617 	ldw	r2,152(sp)
    550c:	d9403317 	ldw	r5,204(sp)
    5510:	d8c02017 	ldw	r3,128(sp)
    5514:	da000404 	addi	r8,sp,16
    5518:	2885c83a 	sub	r2,r5,r2
    551c:	003dfb06 	br	4d0c <__alt_mem_Onchip_SRAM+0xf8004d0c>
    5520:	9080004c 	andi	r2,r18,1
    5524:	103e8f1e 	bne	r2,zero,4f64 <__alt_mem_Onchip_SRAM+0xf8004f64>
    5528:	d8802117 	ldw	r2,132(sp)
    552c:	003e9e06 	br	4fa8 <__alt_mem_Onchip_SRAM+0xf8004fa8>
    5530:	1025883a 	mov	r18,r2
    5534:	0039883a 	mov	fp,zero
    5538:	00800084 	movi	r2,2
    553c:	003fd306 	br	548c <__alt_mem_Onchip_SRAM+0xf800548c>
    5540:	07000b44 	movi	fp,45
    5544:	df002785 	stb	fp,158(sp)
    5548:	003a1b06 	br	3db8 <__alt_mem_Onchip_SRAM+0xf8003db8>
    554c:	00c00b44 	movi	r3,45
    5550:	d8c02785 	stb	r3,158(sp)
    5554:	d8802915 	stw	r2,164(sp)
    5558:	dc802c17 	ldw	r18,176(sp)
    555c:	d8002a15 	stw	zero,168(sp)
    5560:	07000b44 	movi	fp,45
    5564:	003a5e06 	br	3ee0 <__alt_mem_Onchip_SRAM+0xf8003ee0>
    5568:	04000074 	movhi	r16,1
    556c:	841ac604 	addi	r16,r16,27416
    5570:	003f4706 	br	5290 <__alt_mem_Onchip_SRAM+0xf8005290>
    5574:	d9002e17 	ldw	r4,184(sp)
    5578:	d9402f17 	ldw	r5,188(sp)
    557c:	20800017 	ldw	r2,0(r4)
    5580:	21000104 	addi	r4,r4,4
    5584:	d9002e15 	stw	r4,184(sp)
    5588:	11400015 	stw	r5,0(r2)
    558c:	0038ab06 	br	383c <__alt_mem_Onchip_SRAM+0xf800383c>
    5590:	dd802617 	ldw	r22,152(sp)
    5594:	00bfff44 	movi	r2,-3
    5598:	b0801c16 	blt	r22,r2,560c <___vfprintf_internal_r+0x1eb0>
    559c:	d9402a17 	ldw	r5,168(sp)
    55a0:	2d801a16 	blt	r5,r22,560c <___vfprintf_internal_r+0x1eb0>
    55a4:	dd803215 	stw	r22,200(sp)
    55a8:	003e8906 	br	4fd0 <__alt_mem_Onchip_SRAM+0xf8004fd0>
    55ac:	01000074 	movhi	r4,1
    55b0:	211adb84 	addi	r4,r4,27502
    55b4:	d9002c15 	stw	r4,176(sp)
    55b8:	003c9106 	br	4800 <__alt_mem_Onchip_SRAM+0xf8004800>
    55bc:	e005883a 	mov	r2,fp
    55c0:	003e7906 	br	4fa8 <__alt_mem_Onchip_SRAM+0xf8004fa8>
    55c4:	d9002a17 	ldw	r4,168(sp)
    55c8:	df002783 	ldbu	fp,158(sp)
    55cc:	dcc02e15 	stw	r19,184(sp)
    55d0:	d9002915 	stw	r4,164(sp)
    55d4:	d9002b15 	stw	r4,172(sp)
    55d8:	d8002a15 	stw	zero,168(sp)
    55dc:	d8003215 	stw	zero,200(sp)
    55e0:	003a3b06 	br	3ed0 <__alt_mem_Onchip_SRAM+0xf8003ed0>
    55e4:	9080004c 	andi	r2,r18,1
    55e8:	0039883a 	mov	fp,zero
    55ec:	10000426 	beq	r2,zero,5600 <___vfprintf_internal_r+0x1ea4>
    55f0:	00800c04 	movi	r2,48
    55f4:	dc001dc4 	addi	r16,sp,119
    55f8:	d8801dc5 	stb	r2,119(sp)
    55fc:	003b6406 	br	4390 <__alt_mem_Onchip_SRAM+0xf8004390>
    5600:	d8002b15 	stw	zero,172(sp)
    5604:	dc001e04 	addi	r16,sp,120
    5608:	003a2b06 	br	3eb8 <__alt_mem_Onchip_SRAM+0xf8003eb8>
    560c:	8c7fff84 	addi	r17,r17,-2
    5610:	b5bfffc4 	addi	r22,r22,-1
    5614:	dd802615 	stw	r22,152(sp)
    5618:	dc4022c5 	stb	r17,139(sp)
    561c:	b000bf16 	blt	r22,zero,591c <___vfprintf_internal_r+0x21c0>
    5620:	00800ac4 	movi	r2,43
    5624:	d8802305 	stb	r2,140(sp)
    5628:	00800244 	movi	r2,9
    562c:	15807016 	blt	r2,r22,57f0 <___vfprintf_internal_r+0x2094>
    5630:	00800c04 	movi	r2,48
    5634:	b5800c04 	addi	r22,r22,48
    5638:	d8802345 	stb	r2,141(sp)
    563c:	dd802385 	stb	r22,142(sp)
    5640:	d88023c4 	addi	r2,sp,143
    5644:	df0022c4 	addi	fp,sp,139
    5648:	d8c03317 	ldw	r3,204(sp)
    564c:	1739c83a 	sub	fp,r2,fp
    5650:	d9003317 	ldw	r4,204(sp)
    5654:	e0c7883a 	add	r3,fp,r3
    5658:	df003a15 	stw	fp,232(sp)
    565c:	d8c02b15 	stw	r3,172(sp)
    5660:	00800044 	movi	r2,1
    5664:	1100b30e 	bge	r2,r4,5934 <___vfprintf_internal_r+0x21d8>
    5668:	d8c02b17 	ldw	r3,172(sp)
    566c:	18c00044 	addi	r3,r3,1
    5670:	d8c02b15 	stw	r3,172(sp)
    5674:	1805883a 	mov	r2,r3
    5678:	1800ac16 	blt	r3,zero,592c <___vfprintf_internal_r+0x21d0>
    567c:	d8003215 	stw	zero,200(sp)
    5680:	003e5d06 	br	4ff8 <__alt_mem_Onchip_SRAM+0xf8004ff8>
    5684:	d9002d17 	ldw	r4,180(sp)
    5688:	d9801e04 	addi	r6,sp,120
    568c:	b80b883a 	mov	r5,r23
    5690:	000c6700 	call	c670 <__sprint_r>
    5694:	1039351e 	bne	r2,zero,3b6c <__alt_mem_Onchip_SRAM+0xf8003b6c>
    5698:	dc402617 	ldw	r17,152(sp)
    569c:	d8c02017 	ldw	r3,128(sp)
    56a0:	d8801f17 	ldw	r2,124(sp)
    56a4:	da000404 	addi	r8,sp,16
    56a8:	003ed606 	br	5204 <__alt_mem_Onchip_SRAM+0xf8005204>
    56ac:	182b883a 	mov	r21,r3
    56b0:	d8002a15 	stw	zero,168(sp)
    56b4:	00388c06 	br	38e8 <__alt_mem_Onchip_SRAM+0xf80038e8>
    56b8:	d8802a17 	ldw	r2,168(sp)
    56bc:	103e071e 	bne	r2,zero,4edc <__alt_mem_Onchip_SRAM+0xf8004edc>
    56c0:	dc002a15 	stw	r16,168(sp)
    56c4:	003e0506 	br	4edc <__alt_mem_Onchip_SRAM+0xf8004edc>
    56c8:	d9002a17 	ldw	r4,168(sp)
    56cc:	20c00044 	addi	r3,r4,1
    56d0:	003e0f06 	br	4f10 <__alt_mem_Onchip_SRAM+0xf8004f10>
    56d4:	01400184 	movi	r5,6
    56d8:	d9402a15 	stw	r5,168(sp)
    56dc:	003dff06 	br	4edc <__alt_mem_Onchip_SRAM+0xf8004edc>
    56e0:	d8802104 	addi	r2,sp,132
    56e4:	d8800315 	stw	r2,12(sp)
    56e8:	d8802504 	addi	r2,sp,148
    56ec:	d8800215 	stw	r2,8(sp)
    56f0:	d8802604 	addi	r2,sp,152
    56f4:	d8800115 	stw	r2,4(sp)
    56f8:	d8802a17 	ldw	r2,168(sp)
    56fc:	d9403617 	ldw	r5,216(sp)
    5700:	d9002d17 	ldw	r4,180(sp)
    5704:	d8800015 	stw	r2,0(sp)
    5708:	01c000c4 	movi	r7,3
    570c:	980d883a 	mov	r6,r19
    5710:	da003d15 	stw	r8,244(sp)
    5714:	0005e8c0 	call	5e8c <_dtoa_r>
    5718:	d8c02a17 	ldw	r3,168(sp)
    571c:	da003d17 	ldw	r8,244(sp)
    5720:	1021883a 	mov	r16,r2
    5724:	10f9883a 	add	fp,r2,r3
    5728:	81000007 	ldb	r4,0(r16)
    572c:	00800c04 	movi	r2,48
    5730:	20805e26 	beq	r4,r2,58ac <___vfprintf_internal_r+0x2150>
    5734:	d8c02617 	ldw	r3,152(sp)
    5738:	e0f9883a 	add	fp,fp,r3
    573c:	003e0a06 	br	4f68 <__alt_mem_Onchip_SRAM+0xf8004f68>
    5740:	00c00b44 	movi	r3,45
    5744:	24e0003c 	xorhi	r19,r4,32768
    5748:	d8c02905 	stb	r3,164(sp)
    574c:	003de906 	br	4ef4 <__alt_mem_Onchip_SRAM+0xf8004ef4>
    5750:	d8c03217 	ldw	r3,200(sp)
    5754:	00c07a0e 	bge	zero,r3,5940 <___vfprintf_internal_r+0x21e4>
    5758:	00800044 	movi	r2,1
    575c:	d9003317 	ldw	r4,204(sp)
    5760:	1105883a 	add	r2,r2,r4
    5764:	d8802b15 	stw	r2,172(sp)
    5768:	10004e16 	blt	r2,zero,58a4 <___vfprintf_internal_r+0x2148>
    576c:	044019c4 	movi	r17,103
    5770:	003e2106 	br	4ff8 <__alt_mem_Onchip_SRAM+0xf8004ff8>
    5774:	d9002a17 	ldw	r4,168(sp)
    5778:	d8802104 	addi	r2,sp,132
    577c:	d8800315 	stw	r2,12(sp)
    5780:	d9000015 	stw	r4,0(sp)
    5784:	d8802504 	addi	r2,sp,148
    5788:	d9403617 	ldw	r5,216(sp)
    578c:	d9002d17 	ldw	r4,180(sp)
    5790:	d8800215 	stw	r2,8(sp)
    5794:	d8802604 	addi	r2,sp,152
    5798:	d8800115 	stw	r2,4(sp)
    579c:	01c000c4 	movi	r7,3
    57a0:	980d883a 	mov	r6,r19
    57a4:	da003d15 	stw	r8,244(sp)
    57a8:	0005e8c0 	call	5e8c <_dtoa_r>
    57ac:	d8c02a17 	ldw	r3,168(sp)
    57b0:	da003d17 	ldw	r8,244(sp)
    57b4:	1021883a 	mov	r16,r2
    57b8:	00801184 	movi	r2,70
    57bc:	80f9883a 	add	fp,r16,r3
    57c0:	88bfd926 	beq	r17,r2,5728 <__alt_mem_Onchip_SRAM+0xf8005728>
    57c4:	003de806 	br	4f68 <__alt_mem_Onchip_SRAM+0xf8004f68>
    57c8:	d9002a17 	ldw	r4,168(sp)
    57cc:	00c04d0e 	bge	zero,r3,5904 <___vfprintf_internal_r+0x21a8>
    57d0:	2000441e 	bne	r4,zero,58e4 <___vfprintf_internal_r+0x2188>
    57d4:	9480004c 	andi	r18,r18,1
    57d8:	9000421e 	bne	r18,zero,58e4 <___vfprintf_internal_r+0x2188>
    57dc:	1805883a 	mov	r2,r3
    57e0:	18006f16 	blt	r3,zero,59a0 <___vfprintf_internal_r+0x2244>
    57e4:	d8c03217 	ldw	r3,200(sp)
    57e8:	d8c02b15 	stw	r3,172(sp)
    57ec:	003e0206 	br	4ff8 <__alt_mem_Onchip_SRAM+0xf8004ff8>
    57f0:	df0022c4 	addi	fp,sp,139
    57f4:	dc002a15 	stw	r16,168(sp)
    57f8:	4027883a 	mov	r19,r8
    57fc:	e021883a 	mov	r16,fp
    5800:	b009883a 	mov	r4,r22
    5804:	01400284 	movi	r5,10
    5808:	0000dc80 	call	dc8 <__modsi3>
    580c:	10800c04 	addi	r2,r2,48
    5810:	843fffc4 	addi	r16,r16,-1
    5814:	b009883a 	mov	r4,r22
    5818:	01400284 	movi	r5,10
    581c:	80800005 	stb	r2,0(r16)
    5820:	0000d440 	call	d44 <__divsi3>
    5824:	102d883a 	mov	r22,r2
    5828:	00800244 	movi	r2,9
    582c:	15bff416 	blt	r2,r22,5800 <__alt_mem_Onchip_SRAM+0xf8005800>
    5830:	9811883a 	mov	r8,r19
    5834:	b0800c04 	addi	r2,r22,48
    5838:	8027883a 	mov	r19,r16
    583c:	997fffc4 	addi	r5,r19,-1
    5840:	98bfffc5 	stb	r2,-1(r19)
    5844:	dc002a17 	ldw	r16,168(sp)
    5848:	2f006d2e 	bgeu	r5,fp,5a00 <___vfprintf_internal_r+0x22a4>
    584c:	d9c02384 	addi	r7,sp,142
    5850:	3ccfc83a 	sub	r7,r7,r19
    5854:	d9002344 	addi	r4,sp,141
    5858:	e1cf883a 	add	r7,fp,r7
    585c:	00000106 	br	5864 <___vfprintf_internal_r+0x2108>
    5860:	28800003 	ldbu	r2,0(r5)
    5864:	20800005 	stb	r2,0(r4)
    5868:	21000044 	addi	r4,r4,1
    586c:	29400044 	addi	r5,r5,1
    5870:	393ffb1e 	bne	r7,r4,5860 <__alt_mem_Onchip_SRAM+0xf8005860>
    5874:	d8802304 	addi	r2,sp,140
    5878:	14c5c83a 	sub	r2,r2,r19
    587c:	d8c02344 	addi	r3,sp,141
    5880:	1885883a 	add	r2,r3,r2
    5884:	003f7006 	br	5648 <__alt_mem_Onchip_SRAM+0xf8005648>
    5888:	0005883a 	mov	r2,zero
    588c:	003f0f06 	br	54cc <__alt_mem_Onchip_SRAM+0xf80054cc>
    5890:	d8c03217 	ldw	r3,200(sp)
    5894:	18c00044 	addi	r3,r3,1
    5898:	d8c02b15 	stw	r3,172(sp)
    589c:	1805883a 	mov	r2,r3
    58a0:	183fb20e 	bge	r3,zero,576c <__alt_mem_Onchip_SRAM+0xf800576c>
    58a4:	0005883a 	mov	r2,zero
    58a8:	003fb006 	br	576c <__alt_mem_Onchip_SRAM+0xf800576c>
    58ac:	d9003617 	ldw	r4,216(sp)
    58b0:	000d883a 	mov	r6,zero
    58b4:	000f883a 	mov	r7,zero
    58b8:	980b883a 	mov	r5,r19
    58bc:	d8c03c15 	stw	r3,240(sp)
    58c0:	da003d15 	stw	r8,244(sp)
    58c4:	00105000 	call	10500 <__eqdf2>
    58c8:	d8c03c17 	ldw	r3,240(sp)
    58cc:	da003d17 	ldw	r8,244(sp)
    58d0:	103f9826 	beq	r2,zero,5734 <__alt_mem_Onchip_SRAM+0xf8005734>
    58d4:	00800044 	movi	r2,1
    58d8:	10c7c83a 	sub	r3,r2,r3
    58dc:	d8c02615 	stw	r3,152(sp)
    58e0:	003f9506 	br	5738 <__alt_mem_Onchip_SRAM+0xf8005738>
    58e4:	d9002a17 	ldw	r4,168(sp)
    58e8:	d8c03217 	ldw	r3,200(sp)
    58ec:	20800044 	addi	r2,r4,1
    58f0:	1885883a 	add	r2,r3,r2
    58f4:	d8802b15 	stw	r2,172(sp)
    58f8:	103dbf0e 	bge	r2,zero,4ff8 <__alt_mem_Onchip_SRAM+0xf8004ff8>
    58fc:	0005883a 	mov	r2,zero
    5900:	003dbd06 	br	4ff8 <__alt_mem_Onchip_SRAM+0xf8004ff8>
    5904:	2000201e 	bne	r4,zero,5988 <___vfprintf_internal_r+0x222c>
    5908:	9480004c 	andi	r18,r18,1
    590c:	90001e1e 	bne	r18,zero,5988 <___vfprintf_internal_r+0x222c>
    5910:	00800044 	movi	r2,1
    5914:	d8802b15 	stw	r2,172(sp)
    5918:	003db706 	br	4ff8 <__alt_mem_Onchip_SRAM+0xf8004ff8>
    591c:	00800b44 	movi	r2,45
    5920:	05adc83a 	sub	r22,zero,r22
    5924:	d8802305 	stb	r2,140(sp)
    5928:	003f3f06 	br	5628 <__alt_mem_Onchip_SRAM+0xf8005628>
    592c:	0005883a 	mov	r2,zero
    5930:	003f5206 	br	567c <__alt_mem_Onchip_SRAM+0xf800567c>
    5934:	90a4703a 	and	r18,r18,r2
    5938:	903f4e26 	beq	r18,zero,5674 <__alt_mem_Onchip_SRAM+0xf8005674>
    593c:	003f4a06 	br	5668 <__alt_mem_Onchip_SRAM+0xf8005668>
    5940:	00800084 	movi	r2,2
    5944:	10c5c83a 	sub	r2,r2,r3
    5948:	003f8406 	br	575c <__alt_mem_Onchip_SRAM+0xf800575c>
    594c:	d9402e17 	ldw	r5,184(sp)
    5950:	d9002e17 	ldw	r4,184(sp)
    5954:	ac400043 	ldbu	r17,1(r21)
    5958:	29400017 	ldw	r5,0(r5)
    595c:	20800104 	addi	r2,r4,4
    5960:	d8802e15 	stw	r2,184(sp)
    5964:	d9402a15 	stw	r5,168(sp)
    5968:	182b883a 	mov	r21,r3
    596c:	283e7b0e 	bge	r5,zero,535c <__alt_mem_Onchip_SRAM+0xf800535c>
    5970:	8c403fcc 	andi	r17,r17,255
    5974:	017fffc4 	movi	r5,-1
    5978:	8c40201c 	xori	r17,r17,128
    597c:	d9402a15 	stw	r5,168(sp)
    5980:	8c7fe004 	addi	r17,r17,-128
    5984:	0037d706 	br	38e4 <__alt_mem_Onchip_SRAM+0xf80038e4>
    5988:	d8c02a17 	ldw	r3,168(sp)
    598c:	18c00084 	addi	r3,r3,2
    5990:	d8c02b15 	stw	r3,172(sp)
    5994:	1805883a 	mov	r2,r3
    5998:	183d970e 	bge	r3,zero,4ff8 <__alt_mem_Onchip_SRAM+0xf8004ff8>
    599c:	003fd706 	br	58fc <__alt_mem_Onchip_SRAM+0xf80058fc>
    59a0:	0005883a 	mov	r2,zero
    59a4:	003f8f06 	br	57e4 <__alt_mem_Onchip_SRAM+0xf80057e4>
    59a8:	9080004c 	andi	r2,r18,1
    59ac:	103f821e 	bne	r2,zero,57b8 <__alt_mem_Onchip_SRAM+0xf80057b8>
    59b0:	d8802117 	ldw	r2,132(sp)
    59b4:	1405c83a 	sub	r2,r2,r16
    59b8:	d8803315 	stw	r2,204(sp)
    59bc:	b47ef426 	beq	r22,r17,5590 <__alt_mem_Onchip_SRAM+0xf8005590>
    59c0:	dd802617 	ldw	r22,152(sp)
    59c4:	003f1206 	br	5610 <__alt_mem_Onchip_SRAM+0xf8005610>
    59c8:	d8c02b03 	ldbu	r3,172(sp)
    59cc:	d8c02785 	stb	r3,158(sp)
    59d0:	0038df06 	br	3d50 <__alt_mem_Onchip_SRAM+0xf8003d50>
    59d4:	d8c02b03 	ldbu	r3,172(sp)
    59d8:	d8c02785 	stb	r3,158(sp)
    59dc:	0038aa06 	br	3c88 <__alt_mem_Onchip_SRAM+0xf8003c88>
    59e0:	d8c02b03 	ldbu	r3,172(sp)
    59e4:	d8c02785 	stb	r3,158(sp)
    59e8:	003a4306 	br	42f8 <__alt_mem_Onchip_SRAM+0xf80042f8>
    59ec:	d8c02b03 	ldbu	r3,172(sp)
    59f0:	d8c02785 	stb	r3,158(sp)
    59f4:	003af506 	br	45cc <__alt_mem_Onchip_SRAM+0xf80045cc>
    59f8:	0005883a 	mov	r2,zero
    59fc:	003d7b06 	br	4fec <__alt_mem_Onchip_SRAM+0xf8004fec>
    5a00:	d8802344 	addi	r2,sp,141
    5a04:	003f1006 	br	5648 <__alt_mem_Onchip_SRAM+0xf8005648>
    5a08:	d8c02b03 	ldbu	r3,172(sp)
    5a0c:	d8c02785 	stb	r3,158(sp)
    5a10:	0038fd06 	br	3e08 <__alt_mem_Onchip_SRAM+0xf8003e08>
    5a14:	d8c02b03 	ldbu	r3,172(sp)
    5a18:	d8c02785 	stb	r3,158(sp)
    5a1c:	003a9706 	br	447c <__alt_mem_Onchip_SRAM+0xf800447c>
    5a20:	d8c02b03 	ldbu	r3,172(sp)
    5a24:	d8c02785 	stb	r3,158(sp)
    5a28:	003a1806 	br	428c <__alt_mem_Onchip_SRAM+0xf800428c>
    5a2c:	d8c02b03 	ldbu	r3,172(sp)
    5a30:	d8c02785 	stb	r3,158(sp)
    5a34:	003abe06 	br	4530 <__alt_mem_Onchip_SRAM+0xf8004530>

00005a38 <__vfprintf_internal>:
    5a38:	008000b4 	movhi	r2,2
    5a3c:	10a24904 	addi	r2,r2,-30428
    5a40:	300f883a 	mov	r7,r6
    5a44:	280d883a 	mov	r6,r5
    5a48:	200b883a 	mov	r5,r4
    5a4c:	11000017 	ldw	r4,0(r2)
    5a50:	000375c1 	jmpi	375c <___vfprintf_internal_r>

00005a54 <__sbprintf>:
    5a54:	2880030b 	ldhu	r2,12(r5)
    5a58:	2ac01917 	ldw	r11,100(r5)
    5a5c:	2a80038b 	ldhu	r10,14(r5)
    5a60:	2a400717 	ldw	r9,28(r5)
    5a64:	2a000917 	ldw	r8,36(r5)
    5a68:	defee204 	addi	sp,sp,-1144
    5a6c:	00c10004 	movi	r3,1024
    5a70:	dc011a15 	stw	r16,1128(sp)
    5a74:	10bfff4c 	andi	r2,r2,65533
    5a78:	2821883a 	mov	r16,r5
    5a7c:	d8cb883a 	add	r5,sp,r3
    5a80:	dc811c15 	stw	r18,1136(sp)
    5a84:	dc411b15 	stw	r17,1132(sp)
    5a88:	dfc11d15 	stw	ra,1140(sp)
    5a8c:	2025883a 	mov	r18,r4
    5a90:	d881030d 	sth	r2,1036(sp)
    5a94:	dac11915 	stw	r11,1124(sp)
    5a98:	da81038d 	sth	r10,1038(sp)
    5a9c:	da410715 	stw	r9,1052(sp)
    5aa0:	da010915 	stw	r8,1060(sp)
    5aa4:	dec10015 	stw	sp,1024(sp)
    5aa8:	dec10415 	stw	sp,1040(sp)
    5aac:	d8c10215 	stw	r3,1032(sp)
    5ab0:	d8c10515 	stw	r3,1044(sp)
    5ab4:	d8010615 	stw	zero,1048(sp)
    5ab8:	000375c0 	call	375c <___vfprintf_internal_r>
    5abc:	1023883a 	mov	r17,r2
    5ac0:	10000416 	blt	r2,zero,5ad4 <__sbprintf+0x80>
    5ac4:	d9410004 	addi	r5,sp,1024
    5ac8:	9009883a 	mov	r4,r18
    5acc:	00077300 	call	7730 <_fflush_r>
    5ad0:	10000d1e 	bne	r2,zero,5b08 <__sbprintf+0xb4>
    5ad4:	d881030b 	ldhu	r2,1036(sp)
    5ad8:	1080100c 	andi	r2,r2,64
    5adc:	10000326 	beq	r2,zero,5aec <__sbprintf+0x98>
    5ae0:	8080030b 	ldhu	r2,12(r16)
    5ae4:	10801014 	ori	r2,r2,64
    5ae8:	8080030d 	sth	r2,12(r16)
    5aec:	8805883a 	mov	r2,r17
    5af0:	dfc11d17 	ldw	ra,1140(sp)
    5af4:	dc811c17 	ldw	r18,1136(sp)
    5af8:	dc411b17 	ldw	r17,1132(sp)
    5afc:	dc011a17 	ldw	r16,1128(sp)
    5b00:	dec11e04 	addi	sp,sp,1144
    5b04:	f800283a 	ret
    5b08:	047fffc4 	movi	r17,-1
    5b0c:	003ff106 	br	5ad4 <__alt_mem_Onchip_SRAM+0xf8005ad4>

00005b10 <__swsetup_r>:
    5b10:	008000b4 	movhi	r2,2
    5b14:	defffd04 	addi	sp,sp,-12
    5b18:	10a24904 	addi	r2,r2,-30428
    5b1c:	dc400115 	stw	r17,4(sp)
    5b20:	2023883a 	mov	r17,r4
    5b24:	11000017 	ldw	r4,0(r2)
    5b28:	dc000015 	stw	r16,0(sp)
    5b2c:	dfc00215 	stw	ra,8(sp)
    5b30:	2821883a 	mov	r16,r5
    5b34:	20000226 	beq	r4,zero,5b40 <__swsetup_r+0x30>
    5b38:	20800e17 	ldw	r2,56(r4)
    5b3c:	10003126 	beq	r2,zero,5c04 <__swsetup_r+0xf4>
    5b40:	8080030b 	ldhu	r2,12(r16)
    5b44:	10c0020c 	andi	r3,r2,8
    5b48:	1009883a 	mov	r4,r2
    5b4c:	18000f26 	beq	r3,zero,5b8c <__swsetup_r+0x7c>
    5b50:	80c00417 	ldw	r3,16(r16)
    5b54:	18001526 	beq	r3,zero,5bac <__swsetup_r+0x9c>
    5b58:	1100004c 	andi	r4,r2,1
    5b5c:	20001c1e 	bne	r4,zero,5bd0 <__swsetup_r+0xc0>
    5b60:	1080008c 	andi	r2,r2,2
    5b64:	1000291e 	bne	r2,zero,5c0c <__swsetup_r+0xfc>
    5b68:	80800517 	ldw	r2,20(r16)
    5b6c:	80800215 	stw	r2,8(r16)
    5b70:	18001c26 	beq	r3,zero,5be4 <__swsetup_r+0xd4>
    5b74:	0005883a 	mov	r2,zero
    5b78:	dfc00217 	ldw	ra,8(sp)
    5b7c:	dc400117 	ldw	r17,4(sp)
    5b80:	dc000017 	ldw	r16,0(sp)
    5b84:	dec00304 	addi	sp,sp,12
    5b88:	f800283a 	ret
    5b8c:	2080040c 	andi	r2,r4,16
    5b90:	10002e26 	beq	r2,zero,5c4c <__swsetup_r+0x13c>
    5b94:	2080010c 	andi	r2,r4,4
    5b98:	10001e1e 	bne	r2,zero,5c14 <__swsetup_r+0x104>
    5b9c:	80c00417 	ldw	r3,16(r16)
    5ba0:	20800214 	ori	r2,r4,8
    5ba4:	8080030d 	sth	r2,12(r16)
    5ba8:	183feb1e 	bne	r3,zero,5b58 <__alt_mem_Onchip_SRAM+0xf8005b58>
    5bac:	1100a00c 	andi	r4,r2,640
    5bb0:	01408004 	movi	r5,512
    5bb4:	217fe826 	beq	r4,r5,5b58 <__alt_mem_Onchip_SRAM+0xf8005b58>
    5bb8:	800b883a 	mov	r5,r16
    5bbc:	8809883a 	mov	r4,r17
    5bc0:	00087280 	call	8728 <__smakebuf_r>
    5bc4:	8080030b 	ldhu	r2,12(r16)
    5bc8:	80c00417 	ldw	r3,16(r16)
    5bcc:	003fe206 	br	5b58 <__alt_mem_Onchip_SRAM+0xf8005b58>
    5bd0:	80800517 	ldw	r2,20(r16)
    5bd4:	80000215 	stw	zero,8(r16)
    5bd8:	0085c83a 	sub	r2,zero,r2
    5bdc:	80800615 	stw	r2,24(r16)
    5be0:	183fe41e 	bne	r3,zero,5b74 <__alt_mem_Onchip_SRAM+0xf8005b74>
    5be4:	80c0030b 	ldhu	r3,12(r16)
    5be8:	0005883a 	mov	r2,zero
    5bec:	1900200c 	andi	r4,r3,128
    5bf0:	203fe126 	beq	r4,zero,5b78 <__alt_mem_Onchip_SRAM+0xf8005b78>
    5bf4:	18c01014 	ori	r3,r3,64
    5bf8:	80c0030d 	sth	r3,12(r16)
    5bfc:	00bfffc4 	movi	r2,-1
    5c00:	003fdd06 	br	5b78 <__alt_mem_Onchip_SRAM+0xf8005b78>
    5c04:	0007b1c0 	call	7b1c <__sinit>
    5c08:	003fcd06 	br	5b40 <__alt_mem_Onchip_SRAM+0xf8005b40>
    5c0c:	0005883a 	mov	r2,zero
    5c10:	003fd606 	br	5b6c <__alt_mem_Onchip_SRAM+0xf8005b6c>
    5c14:	81400c17 	ldw	r5,48(r16)
    5c18:	28000626 	beq	r5,zero,5c34 <__swsetup_r+0x124>
    5c1c:	80801004 	addi	r2,r16,64
    5c20:	28800326 	beq	r5,r2,5c30 <__swsetup_r+0x120>
    5c24:	8809883a 	mov	r4,r17
    5c28:	0007c900 	call	7c90 <_free_r>
    5c2c:	8100030b 	ldhu	r4,12(r16)
    5c30:	80000c15 	stw	zero,48(r16)
    5c34:	80c00417 	ldw	r3,16(r16)
    5c38:	00bff6c4 	movi	r2,-37
    5c3c:	1108703a 	and	r4,r2,r4
    5c40:	80000115 	stw	zero,4(r16)
    5c44:	80c00015 	stw	r3,0(r16)
    5c48:	003fd506 	br	5ba0 <__alt_mem_Onchip_SRAM+0xf8005ba0>
    5c4c:	00800244 	movi	r2,9
    5c50:	88800015 	stw	r2,0(r17)
    5c54:	20801014 	ori	r2,r4,64
    5c58:	8080030d 	sth	r2,12(r16)
    5c5c:	00bfffc4 	movi	r2,-1
    5c60:	003fc506 	br	5b78 <__alt_mem_Onchip_SRAM+0xf8005b78>

00005c64 <quorem>:
    5c64:	defff204 	addi	sp,sp,-56
    5c68:	ddc00b15 	stw	r23,44(sp)
    5c6c:	20800417 	ldw	r2,16(r4)
    5c70:	2dc00417 	ldw	r23,16(r5)
    5c74:	dfc00d15 	stw	ra,52(sp)
    5c78:	df000c15 	stw	fp,48(sp)
    5c7c:	dd800a15 	stw	r22,40(sp)
    5c80:	dd400915 	stw	r21,36(sp)
    5c84:	dd000815 	stw	r20,32(sp)
    5c88:	dcc00715 	stw	r19,28(sp)
    5c8c:	dc800615 	stw	r18,24(sp)
    5c90:	dc400515 	stw	r17,20(sp)
    5c94:	dc000415 	stw	r16,16(sp)
    5c98:	15c07a16 	blt	r2,r23,5e84 <quorem+0x220>
    5c9c:	bdffffc4 	addi	r23,r23,-1
    5ca0:	bde9883a 	add	r20,r23,r23
    5ca4:	28c00504 	addi	r3,r5,20
    5ca8:	a529883a 	add	r20,r20,r20
    5cac:	1d39883a 	add	fp,r3,r20
    5cb0:	24c00504 	addi	r19,r4,20
    5cb4:	d9400215 	stw	r5,8(sp)
    5cb8:	9d29883a 	add	r20,r19,r20
    5cbc:	e1400017 	ldw	r5,0(fp)
    5cc0:	d9000015 	stw	r4,0(sp)
    5cc4:	a1000017 	ldw	r4,0(r20)
    5cc8:	29400044 	addi	r5,r5,1
    5ccc:	d8c00115 	stw	r3,4(sp)
    5cd0:	dd000315 	stw	r20,12(sp)
    5cd4:	0000e3c0 	call	e3c <__udivsi3>
    5cd8:	1025883a 	mov	r18,r2
    5cdc:	10003026 	beq	r2,zero,5da0 <quorem+0x13c>
    5ce0:	dc400117 	ldw	r17,4(sp)
    5ce4:	9829883a 	mov	r20,r19
    5ce8:	002d883a 	mov	r22,zero
    5cec:	0021883a 	mov	r16,zero
    5cf0:	8d400017 	ldw	r21,0(r17)
    5cf4:	900b883a 	mov	r5,r18
    5cf8:	8c400104 	addi	r17,r17,4
    5cfc:	a93fffcc 	andi	r4,r21,65535
    5d00:	0000ef80 	call	ef8 <__mulsi3>
    5d04:	a808d43a 	srli	r4,r21,16
    5d08:	900b883a 	mov	r5,r18
    5d0c:	15ad883a 	add	r22,r2,r22
    5d10:	0000ef80 	call	ef8 <__mulsi3>
    5d14:	a1000017 	ldw	r4,0(r20)
    5d18:	b00cd43a 	srli	r6,r22,16
    5d1c:	b0ffffcc 	andi	r3,r22,65535
    5d20:	217fffcc 	andi	r5,r4,65535
    5d24:	2c21883a 	add	r16,r5,r16
    5d28:	80c7c83a 	sub	r3,r16,r3
    5d2c:	2008d43a 	srli	r4,r4,16
    5d30:	1185883a 	add	r2,r2,r6
    5d34:	1821d43a 	srai	r16,r3,16
    5d38:	117fffcc 	andi	r5,r2,65535
    5d3c:	2149c83a 	sub	r4,r4,r5
    5d40:	2421883a 	add	r16,r4,r16
    5d44:	8008943a 	slli	r4,r16,16
    5d48:	18ffffcc 	andi	r3,r3,65535
    5d4c:	102cd43a 	srli	r22,r2,16
    5d50:	20c8b03a 	or	r4,r4,r3
    5d54:	a1000015 	stw	r4,0(r20)
    5d58:	8021d43a 	srai	r16,r16,16
    5d5c:	a5000104 	addi	r20,r20,4
    5d60:	e47fe32e 	bgeu	fp,r17,5cf0 <__alt_mem_Onchip_SRAM+0xf8005cf0>
    5d64:	d8c00317 	ldw	r3,12(sp)
    5d68:	18800017 	ldw	r2,0(r3)
    5d6c:	10000c1e 	bne	r2,zero,5da0 <quorem+0x13c>
    5d70:	18bfff04 	addi	r2,r3,-4
    5d74:	9880082e 	bgeu	r19,r2,5d98 <quorem+0x134>
    5d78:	18ffff17 	ldw	r3,-4(r3)
    5d7c:	18000326 	beq	r3,zero,5d8c <quorem+0x128>
    5d80:	00000506 	br	5d98 <quorem+0x134>
    5d84:	10c00017 	ldw	r3,0(r2)
    5d88:	1800031e 	bne	r3,zero,5d98 <quorem+0x134>
    5d8c:	10bfff04 	addi	r2,r2,-4
    5d90:	bdffffc4 	addi	r23,r23,-1
    5d94:	98bffb36 	bltu	r19,r2,5d84 <__alt_mem_Onchip_SRAM+0xf8005d84>
    5d98:	d8c00017 	ldw	r3,0(sp)
    5d9c:	1dc00415 	stw	r23,16(r3)
    5da0:	d9400217 	ldw	r5,8(sp)
    5da4:	d9000017 	ldw	r4,0(sp)
    5da8:	0009f240 	call	9f24 <__mcmp>
    5dac:	10002816 	blt	r2,zero,5e50 <quorem+0x1ec>
    5db0:	dc400117 	ldw	r17,4(sp)
    5db4:	94800044 	addi	r18,r18,1
    5db8:	980d883a 	mov	r6,r19
    5dbc:	0007883a 	mov	r3,zero
    5dc0:	31000017 	ldw	r4,0(r6)
    5dc4:	89400017 	ldw	r5,0(r17)
    5dc8:	31800104 	addi	r6,r6,4
    5dcc:	20bfffcc 	andi	r2,r4,65535
    5dd0:	10c7883a 	add	r3,r2,r3
    5dd4:	28bfffcc 	andi	r2,r5,65535
    5dd8:	1885c83a 	sub	r2,r3,r2
    5ddc:	280ad43a 	srli	r5,r5,16
    5de0:	2008d43a 	srli	r4,r4,16
    5de4:	1007d43a 	srai	r3,r2,16
    5de8:	10bfffcc 	andi	r2,r2,65535
    5dec:	2149c83a 	sub	r4,r4,r5
    5df0:	20c9883a 	add	r4,r4,r3
    5df4:	200a943a 	slli	r5,r4,16
    5df8:	8c400104 	addi	r17,r17,4
    5dfc:	2007d43a 	srai	r3,r4,16
    5e00:	2884b03a 	or	r2,r5,r2
    5e04:	30bfff15 	stw	r2,-4(r6)
    5e08:	e47fed2e 	bgeu	fp,r17,5dc0 <__alt_mem_Onchip_SRAM+0xf8005dc0>
    5e0c:	bdc5883a 	add	r2,r23,r23
    5e10:	1085883a 	add	r2,r2,r2
    5e14:	9887883a 	add	r3,r19,r2
    5e18:	18800017 	ldw	r2,0(r3)
    5e1c:	10000c1e 	bne	r2,zero,5e50 <quorem+0x1ec>
    5e20:	18bfff04 	addi	r2,r3,-4
    5e24:	9880082e 	bgeu	r19,r2,5e48 <quorem+0x1e4>
    5e28:	18ffff17 	ldw	r3,-4(r3)
    5e2c:	18000326 	beq	r3,zero,5e3c <quorem+0x1d8>
    5e30:	00000506 	br	5e48 <quorem+0x1e4>
    5e34:	10c00017 	ldw	r3,0(r2)
    5e38:	1800031e 	bne	r3,zero,5e48 <quorem+0x1e4>
    5e3c:	10bfff04 	addi	r2,r2,-4
    5e40:	bdffffc4 	addi	r23,r23,-1
    5e44:	98bffb36 	bltu	r19,r2,5e34 <__alt_mem_Onchip_SRAM+0xf8005e34>
    5e48:	d8c00017 	ldw	r3,0(sp)
    5e4c:	1dc00415 	stw	r23,16(r3)
    5e50:	9005883a 	mov	r2,r18
    5e54:	dfc00d17 	ldw	ra,52(sp)
    5e58:	df000c17 	ldw	fp,48(sp)
    5e5c:	ddc00b17 	ldw	r23,44(sp)
    5e60:	dd800a17 	ldw	r22,40(sp)
    5e64:	dd400917 	ldw	r21,36(sp)
    5e68:	dd000817 	ldw	r20,32(sp)
    5e6c:	dcc00717 	ldw	r19,28(sp)
    5e70:	dc800617 	ldw	r18,24(sp)
    5e74:	dc400517 	ldw	r17,20(sp)
    5e78:	dc000417 	ldw	r16,16(sp)
    5e7c:	dec00e04 	addi	sp,sp,56
    5e80:	f800283a 	ret
    5e84:	0005883a 	mov	r2,zero
    5e88:	003ff206 	br	5e54 <__alt_mem_Onchip_SRAM+0xf8005e54>

00005e8c <_dtoa_r>:
    5e8c:	20801017 	ldw	r2,64(r4)
    5e90:	deffde04 	addi	sp,sp,-136
    5e94:	df002015 	stw	fp,128(sp)
    5e98:	dcc01b15 	stw	r19,108(sp)
    5e9c:	dc801a15 	stw	r18,104(sp)
    5ea0:	dc401915 	stw	r17,100(sp)
    5ea4:	dc001815 	stw	r16,96(sp)
    5ea8:	dfc02115 	stw	ra,132(sp)
    5eac:	ddc01f15 	stw	r23,124(sp)
    5eb0:	dd801e15 	stw	r22,120(sp)
    5eb4:	dd401d15 	stw	r21,116(sp)
    5eb8:	dd001c15 	stw	r20,112(sp)
    5ebc:	d9c00315 	stw	r7,12(sp)
    5ec0:	2039883a 	mov	fp,r4
    5ec4:	3023883a 	mov	r17,r6
    5ec8:	2825883a 	mov	r18,r5
    5ecc:	dc002417 	ldw	r16,144(sp)
    5ed0:	3027883a 	mov	r19,r6
    5ed4:	10000826 	beq	r2,zero,5ef8 <_dtoa_r+0x6c>
    5ed8:	21801117 	ldw	r6,68(r4)
    5edc:	00c00044 	movi	r3,1
    5ee0:	100b883a 	mov	r5,r2
    5ee4:	1986983a 	sll	r3,r3,r6
    5ee8:	11800115 	stw	r6,4(r2)
    5eec:	10c00215 	stw	r3,8(r2)
    5ef0:	00096480 	call	9648 <_Bfree>
    5ef4:	e0001015 	stw	zero,64(fp)
    5ef8:	88002e16 	blt	r17,zero,5fb4 <_dtoa_r+0x128>
    5efc:	80000015 	stw	zero,0(r16)
    5f00:	889ffc2c 	andhi	r2,r17,32752
    5f04:	00dffc34 	movhi	r3,32752
    5f08:	10c01c26 	beq	r2,r3,5f7c <_dtoa_r+0xf0>
    5f0c:	000d883a 	mov	r6,zero
    5f10:	000f883a 	mov	r7,zero
    5f14:	9009883a 	mov	r4,r18
    5f18:	980b883a 	mov	r5,r19
    5f1c:	00105000 	call	10500 <__eqdf2>
    5f20:	10002b1e 	bne	r2,zero,5fd0 <_dtoa_r+0x144>
    5f24:	d9c02317 	ldw	r7,140(sp)
    5f28:	00800044 	movi	r2,1
    5f2c:	38800015 	stw	r2,0(r7)
    5f30:	d8802517 	ldw	r2,148(sp)
    5f34:	10019e26 	beq	r2,zero,65b0 <_dtoa_r+0x724>
    5f38:	d8c02517 	ldw	r3,148(sp)
    5f3c:	00800074 	movhi	r2,1
    5f40:	109ad344 	addi	r2,r2,27469
    5f44:	18800015 	stw	r2,0(r3)
    5f48:	10bfffc4 	addi	r2,r2,-1
    5f4c:	dfc02117 	ldw	ra,132(sp)
    5f50:	df002017 	ldw	fp,128(sp)
    5f54:	ddc01f17 	ldw	r23,124(sp)
    5f58:	dd801e17 	ldw	r22,120(sp)
    5f5c:	dd401d17 	ldw	r21,116(sp)
    5f60:	dd001c17 	ldw	r20,112(sp)
    5f64:	dcc01b17 	ldw	r19,108(sp)
    5f68:	dc801a17 	ldw	r18,104(sp)
    5f6c:	dc401917 	ldw	r17,100(sp)
    5f70:	dc001817 	ldw	r16,96(sp)
    5f74:	dec02204 	addi	sp,sp,136
    5f78:	f800283a 	ret
    5f7c:	d8c02317 	ldw	r3,140(sp)
    5f80:	0089c3c4 	movi	r2,9999
    5f84:	18800015 	stw	r2,0(r3)
    5f88:	90017726 	beq	r18,zero,6568 <_dtoa_r+0x6dc>
    5f8c:	00800074 	movhi	r2,1
    5f90:	109ae704 	addi	r2,r2,27548
    5f94:	d9002517 	ldw	r4,148(sp)
    5f98:	203fec26 	beq	r4,zero,5f4c <__alt_mem_Onchip_SRAM+0xf8005f4c>
    5f9c:	10c000c7 	ldb	r3,3(r2)
    5fa0:	1801781e 	bne	r3,zero,6584 <_dtoa_r+0x6f8>
    5fa4:	10c000c4 	addi	r3,r2,3
    5fa8:	d9802517 	ldw	r6,148(sp)
    5fac:	30c00015 	stw	r3,0(r6)
    5fb0:	003fe606 	br	5f4c <__alt_mem_Onchip_SRAM+0xf8005f4c>
    5fb4:	04e00034 	movhi	r19,32768
    5fb8:	9cffffc4 	addi	r19,r19,-1
    5fbc:	00800044 	movi	r2,1
    5fc0:	8ce6703a 	and	r19,r17,r19
    5fc4:	80800015 	stw	r2,0(r16)
    5fc8:	9823883a 	mov	r17,r19
    5fcc:	003fcc06 	br	5f00 <__alt_mem_Onchip_SRAM+0xf8005f00>
    5fd0:	d8800204 	addi	r2,sp,8
    5fd4:	d8800015 	stw	r2,0(sp)
    5fd8:	d9c00104 	addi	r7,sp,4
    5fdc:	900b883a 	mov	r5,r18
    5fe0:	980d883a 	mov	r6,r19
    5fe4:	e009883a 	mov	r4,fp
    5fe8:	8820d53a 	srli	r16,r17,20
    5fec:	000a2f00 	call	a2f0 <__d2b>
    5ff0:	d8800915 	stw	r2,36(sp)
    5ff4:	8001651e 	bne	r16,zero,658c <_dtoa_r+0x700>
    5ff8:	dd800217 	ldw	r22,8(sp)
    5ffc:	dc000117 	ldw	r16,4(sp)
    6000:	00800804 	movi	r2,32
    6004:	b421883a 	add	r16,r22,r16
    6008:	80c10c84 	addi	r3,r16,1074
    600c:	10c2d10e 	bge	r2,r3,6b54 <_dtoa_r+0xcc8>
    6010:	00801004 	movi	r2,64
    6014:	81010484 	addi	r4,r16,1042
    6018:	10c7c83a 	sub	r3,r2,r3
    601c:	9108d83a 	srl	r4,r18,r4
    6020:	88e2983a 	sll	r17,r17,r3
    6024:	2448b03a 	or	r4,r4,r17
    6028:	0011a1c0 	call	11a1c <__floatunsidf>
    602c:	017f8434 	movhi	r5,65040
    6030:	01800044 	movi	r6,1
    6034:	1009883a 	mov	r4,r2
    6038:	194b883a 	add	r5,r3,r5
    603c:	843fffc4 	addi	r16,r16,-1
    6040:	d9801115 	stw	r6,68(sp)
    6044:	000d883a 	mov	r6,zero
    6048:	01cffe34 	movhi	r7,16376
    604c:	0010fc40 	call	10fc4 <__subdf3>
    6050:	0198dbf4 	movhi	r6,25455
    6054:	01cff4f4 	movhi	r7,16339
    6058:	3190d844 	addi	r6,r6,17249
    605c:	39e1e9c4 	addi	r7,r7,-30809
    6060:	1009883a 	mov	r4,r2
    6064:	180b883a 	mov	r5,r3
    6068:	00107580 	call	10758 <__muldf3>
    606c:	01a2d874 	movhi	r6,35681
    6070:	01cff1f4 	movhi	r7,16327
    6074:	31b22cc4 	addi	r6,r6,-14157
    6078:	39e28a04 	addi	r7,r7,-30168
    607c:	180b883a 	mov	r5,r3
    6080:	1009883a 	mov	r4,r2
    6084:	000f2840 	call	f284 <__adddf3>
    6088:	8009883a 	mov	r4,r16
    608c:	1029883a 	mov	r20,r2
    6090:	1823883a 	mov	r17,r3
    6094:	00119400 	call	11940 <__floatsidf>
    6098:	019427f4 	movhi	r6,20639
    609c:	01cff4f4 	movhi	r7,16339
    60a0:	319e7ec4 	addi	r6,r6,31227
    60a4:	39d104c4 	addi	r7,r7,17427
    60a8:	1009883a 	mov	r4,r2
    60ac:	180b883a 	mov	r5,r3
    60b0:	00107580 	call	10758 <__muldf3>
    60b4:	100d883a 	mov	r6,r2
    60b8:	180f883a 	mov	r7,r3
    60bc:	a009883a 	mov	r4,r20
    60c0:	880b883a 	mov	r5,r17
    60c4:	000f2840 	call	f284 <__adddf3>
    60c8:	1009883a 	mov	r4,r2
    60cc:	180b883a 	mov	r5,r3
    60d0:	1029883a 	mov	r20,r2
    60d4:	1823883a 	mov	r17,r3
    60d8:	00118c00 	call	118c0 <__fixdfsi>
    60dc:	000d883a 	mov	r6,zero
    60e0:	000f883a 	mov	r7,zero
    60e4:	a009883a 	mov	r4,r20
    60e8:	880b883a 	mov	r5,r17
    60ec:	d8800515 	stw	r2,20(sp)
    60f0:	00106640 	call	10664 <__ledf2>
    60f4:	10028716 	blt	r2,zero,6b14 <_dtoa_r+0xc88>
    60f8:	d8c00517 	ldw	r3,20(sp)
    60fc:	00800584 	movi	r2,22
    6100:	10c27536 	bltu	r2,r3,6ad8 <_dtoa_r+0xc4c>
    6104:	180490fa 	slli	r2,r3,3
    6108:	00c00074 	movhi	r3,1
    610c:	18db0304 	addi	r3,r3,27660
    6110:	1885883a 	add	r2,r3,r2
    6114:	11000017 	ldw	r4,0(r2)
    6118:	11400117 	ldw	r5,4(r2)
    611c:	900d883a 	mov	r6,r18
    6120:	980f883a 	mov	r7,r19
    6124:	00105880 	call	10588 <__gedf2>
    6128:	00828d0e 	bge	zero,r2,6b60 <_dtoa_r+0xcd4>
    612c:	d9000517 	ldw	r4,20(sp)
    6130:	d8000e15 	stw	zero,56(sp)
    6134:	213fffc4 	addi	r4,r4,-1
    6138:	d9000515 	stw	r4,20(sp)
    613c:	b42dc83a 	sub	r22,r22,r16
    6140:	b5bfffc4 	addi	r22,r22,-1
    6144:	b0026f16 	blt	r22,zero,6b04 <_dtoa_r+0xc78>
    6148:	d8000815 	stw	zero,32(sp)
    614c:	d9c00517 	ldw	r7,20(sp)
    6150:	38026416 	blt	r7,zero,6ae4 <_dtoa_r+0xc58>
    6154:	b1ed883a 	add	r22,r22,r7
    6158:	d9c00d15 	stw	r7,52(sp)
    615c:	d8000a15 	stw	zero,40(sp)
    6160:	d9800317 	ldw	r6,12(sp)
    6164:	00800244 	movi	r2,9
    6168:	11811436 	bltu	r2,r6,65bc <_dtoa_r+0x730>
    616c:	00800144 	movi	r2,5
    6170:	1184e10e 	bge	r2,r6,74f8 <_dtoa_r+0x166c>
    6174:	31bfff04 	addi	r6,r6,-4
    6178:	d9800315 	stw	r6,12(sp)
    617c:	0023883a 	mov	r17,zero
    6180:	d9800317 	ldw	r6,12(sp)
    6184:	008000c4 	movi	r2,3
    6188:	30836726 	beq	r6,r2,6f28 <_dtoa_r+0x109c>
    618c:	1183410e 	bge	r2,r6,6e94 <_dtoa_r+0x1008>
    6190:	d9c00317 	ldw	r7,12(sp)
    6194:	00800104 	movi	r2,4
    6198:	38827c26 	beq	r7,r2,6b8c <_dtoa_r+0xd00>
    619c:	00800144 	movi	r2,5
    61a0:	3884c41e 	bne	r7,r2,74b4 <_dtoa_r+0x1628>
    61a4:	00800044 	movi	r2,1
    61a8:	d8800b15 	stw	r2,44(sp)
    61ac:	d8c00517 	ldw	r3,20(sp)
    61b0:	d9002217 	ldw	r4,136(sp)
    61b4:	1907883a 	add	r3,r3,r4
    61b8:	19800044 	addi	r6,r3,1
    61bc:	d8c00c15 	stw	r3,48(sp)
    61c0:	d9800615 	stw	r6,24(sp)
    61c4:	0183a40e 	bge	zero,r6,7058 <_dtoa_r+0x11cc>
    61c8:	d9800617 	ldw	r6,24(sp)
    61cc:	3021883a 	mov	r16,r6
    61d0:	e0001115 	stw	zero,68(fp)
    61d4:	008005c4 	movi	r2,23
    61d8:	1184c92e 	bgeu	r2,r6,7500 <_dtoa_r+0x1674>
    61dc:	00c00044 	movi	r3,1
    61e0:	00800104 	movi	r2,4
    61e4:	1085883a 	add	r2,r2,r2
    61e8:	11000504 	addi	r4,r2,20
    61ec:	180b883a 	mov	r5,r3
    61f0:	18c00044 	addi	r3,r3,1
    61f4:	313ffb2e 	bgeu	r6,r4,61e4 <__alt_mem_Onchip_SRAM+0xf80061e4>
    61f8:	e1401115 	stw	r5,68(fp)
    61fc:	e009883a 	mov	r4,fp
    6200:	00095a00 	call	95a0 <_Balloc>
    6204:	d8800715 	stw	r2,28(sp)
    6208:	e0801015 	stw	r2,64(fp)
    620c:	00800384 	movi	r2,14
    6210:	1400f736 	bltu	r2,r16,65f0 <_dtoa_r+0x764>
    6214:	8800f626 	beq	r17,zero,65f0 <_dtoa_r+0x764>
    6218:	d9c00517 	ldw	r7,20(sp)
    621c:	01c39a0e 	bge	zero,r7,7088 <_dtoa_r+0x11fc>
    6220:	388003cc 	andi	r2,r7,15
    6224:	100490fa 	slli	r2,r2,3
    6228:	382bd13a 	srai	r21,r7,4
    622c:	00c00074 	movhi	r3,1
    6230:	18db0304 	addi	r3,r3,27660
    6234:	1885883a 	add	r2,r3,r2
    6238:	a8c0040c 	andi	r3,r21,16
    623c:	12400017 	ldw	r9,0(r2)
    6240:	12000117 	ldw	r8,4(r2)
    6244:	18037926 	beq	r3,zero,702c <_dtoa_r+0x11a0>
    6248:	00800074 	movhi	r2,1
    624c:	109af904 	addi	r2,r2,27620
    6250:	11800817 	ldw	r6,32(r2)
    6254:	11c00917 	ldw	r7,36(r2)
    6258:	9009883a 	mov	r4,r18
    625c:	980b883a 	mov	r5,r19
    6260:	da001715 	stw	r8,92(sp)
    6264:	da401615 	stw	r9,88(sp)
    6268:	000fb300 	call	fb30 <__divdf3>
    626c:	da001717 	ldw	r8,92(sp)
    6270:	da401617 	ldw	r9,88(sp)
    6274:	ad4003cc 	andi	r21,r21,15
    6278:	040000c4 	movi	r16,3
    627c:	1023883a 	mov	r17,r2
    6280:	1829883a 	mov	r20,r3
    6284:	a8001126 	beq	r21,zero,62cc <_dtoa_r+0x440>
    6288:	05c00074 	movhi	r23,1
    628c:	bddaf904 	addi	r23,r23,27620
    6290:	4805883a 	mov	r2,r9
    6294:	4007883a 	mov	r3,r8
    6298:	a980004c 	andi	r6,r21,1
    629c:	1009883a 	mov	r4,r2
    62a0:	a82bd07a 	srai	r21,r21,1
    62a4:	180b883a 	mov	r5,r3
    62a8:	30000426 	beq	r6,zero,62bc <_dtoa_r+0x430>
    62ac:	b9800017 	ldw	r6,0(r23)
    62b0:	b9c00117 	ldw	r7,4(r23)
    62b4:	84000044 	addi	r16,r16,1
    62b8:	00107580 	call	10758 <__muldf3>
    62bc:	bdc00204 	addi	r23,r23,8
    62c0:	a83ff51e 	bne	r21,zero,6298 <__alt_mem_Onchip_SRAM+0xf8006298>
    62c4:	1013883a 	mov	r9,r2
    62c8:	1811883a 	mov	r8,r3
    62cc:	480d883a 	mov	r6,r9
    62d0:	400f883a 	mov	r7,r8
    62d4:	8809883a 	mov	r4,r17
    62d8:	a00b883a 	mov	r5,r20
    62dc:	000fb300 	call	fb30 <__divdf3>
    62e0:	d8800f15 	stw	r2,60(sp)
    62e4:	d8c01015 	stw	r3,64(sp)
    62e8:	d8c00e17 	ldw	r3,56(sp)
    62ec:	18000626 	beq	r3,zero,6308 <_dtoa_r+0x47c>
    62f0:	d9000f17 	ldw	r4,60(sp)
    62f4:	d9401017 	ldw	r5,64(sp)
    62f8:	000d883a 	mov	r6,zero
    62fc:	01cffc34 	movhi	r7,16368
    6300:	00106640 	call	10664 <__ledf2>
    6304:	10040b16 	blt	r2,zero,7334 <_dtoa_r+0x14a8>
    6308:	8009883a 	mov	r4,r16
    630c:	00119400 	call	11940 <__floatsidf>
    6310:	d9800f17 	ldw	r6,60(sp)
    6314:	d9c01017 	ldw	r7,64(sp)
    6318:	1009883a 	mov	r4,r2
    631c:	180b883a 	mov	r5,r3
    6320:	00107580 	call	10758 <__muldf3>
    6324:	000d883a 	mov	r6,zero
    6328:	01d00734 	movhi	r7,16412
    632c:	1009883a 	mov	r4,r2
    6330:	180b883a 	mov	r5,r3
    6334:	000f2840 	call	f284 <__adddf3>
    6338:	1021883a 	mov	r16,r2
    633c:	d8800617 	ldw	r2,24(sp)
    6340:	047f3034 	movhi	r17,64704
    6344:	1c63883a 	add	r17,r3,r17
    6348:	10031826 	beq	r2,zero,6fac <_dtoa_r+0x1120>
    634c:	d8c00517 	ldw	r3,20(sp)
    6350:	db000617 	ldw	r12,24(sp)
    6354:	d8c01315 	stw	r3,76(sp)
    6358:	d9000b17 	ldw	r4,44(sp)
    635c:	20038f26 	beq	r4,zero,719c <_dtoa_r+0x1310>
    6360:	60bfffc4 	addi	r2,r12,-1
    6364:	100490fa 	slli	r2,r2,3
    6368:	00c00074 	movhi	r3,1
    636c:	18db0304 	addi	r3,r3,27660
    6370:	1885883a 	add	r2,r3,r2
    6374:	11800017 	ldw	r6,0(r2)
    6378:	11c00117 	ldw	r7,4(r2)
    637c:	d8800717 	ldw	r2,28(sp)
    6380:	0009883a 	mov	r4,zero
    6384:	014ff834 	movhi	r5,16352
    6388:	db001615 	stw	r12,88(sp)
    638c:	15c00044 	addi	r23,r2,1
    6390:	000fb300 	call	fb30 <__divdf3>
    6394:	800d883a 	mov	r6,r16
    6398:	880f883a 	mov	r7,r17
    639c:	1009883a 	mov	r4,r2
    63a0:	180b883a 	mov	r5,r3
    63a4:	0010fc40 	call	10fc4 <__subdf3>
    63a8:	d9401017 	ldw	r5,64(sp)
    63ac:	d9000f17 	ldw	r4,60(sp)
    63b0:	102b883a 	mov	r21,r2
    63b4:	d8c01215 	stw	r3,72(sp)
    63b8:	00118c00 	call	118c0 <__fixdfsi>
    63bc:	1009883a 	mov	r4,r2
    63c0:	1029883a 	mov	r20,r2
    63c4:	00119400 	call	11940 <__floatsidf>
    63c8:	d9000f17 	ldw	r4,60(sp)
    63cc:	d9401017 	ldw	r5,64(sp)
    63d0:	100d883a 	mov	r6,r2
    63d4:	180f883a 	mov	r7,r3
    63d8:	0010fc40 	call	10fc4 <__subdf3>
    63dc:	1823883a 	mov	r17,r3
    63e0:	d8c00717 	ldw	r3,28(sp)
    63e4:	d9401217 	ldw	r5,72(sp)
    63e8:	a2000c04 	addi	r8,r20,48
    63ec:	1021883a 	mov	r16,r2
    63f0:	1a000005 	stb	r8,0(r3)
    63f4:	800d883a 	mov	r6,r16
    63f8:	880f883a 	mov	r7,r17
    63fc:	a809883a 	mov	r4,r21
    6400:	4029883a 	mov	r20,r8
    6404:	00105880 	call	10588 <__gedf2>
    6408:	00841d16 	blt	zero,r2,7480 <_dtoa_r+0x15f4>
    640c:	800d883a 	mov	r6,r16
    6410:	880f883a 	mov	r7,r17
    6414:	0009883a 	mov	r4,zero
    6418:	014ffc34 	movhi	r5,16368
    641c:	0010fc40 	call	10fc4 <__subdf3>
    6420:	d9401217 	ldw	r5,72(sp)
    6424:	100d883a 	mov	r6,r2
    6428:	180f883a 	mov	r7,r3
    642c:	a809883a 	mov	r4,r21
    6430:	00105880 	call	10588 <__gedf2>
    6434:	db001617 	ldw	r12,88(sp)
    6438:	00840e16 	blt	zero,r2,7474 <_dtoa_r+0x15e8>
    643c:	00800044 	movi	r2,1
    6440:	13006b0e 	bge	r2,r12,65f0 <_dtoa_r+0x764>
    6444:	d9000717 	ldw	r4,28(sp)
    6448:	dd800f15 	stw	r22,60(sp)
    644c:	dcc01015 	stw	r19,64(sp)
    6450:	2319883a 	add	r12,r4,r12
    6454:	dcc01217 	ldw	r19,72(sp)
    6458:	602d883a 	mov	r22,r12
    645c:	dc801215 	stw	r18,72(sp)
    6460:	b825883a 	mov	r18,r23
    6464:	00000906 	br	648c <_dtoa_r+0x600>
    6468:	0010fc40 	call	10fc4 <__subdf3>
    646c:	a80d883a 	mov	r6,r21
    6470:	980f883a 	mov	r7,r19
    6474:	1009883a 	mov	r4,r2
    6478:	180b883a 	mov	r5,r3
    647c:	00106640 	call	10664 <__ledf2>
    6480:	1003e816 	blt	r2,zero,7424 <_dtoa_r+0x1598>
    6484:	b825883a 	mov	r18,r23
    6488:	bd83e926 	beq	r23,r22,7430 <_dtoa_r+0x15a4>
    648c:	a809883a 	mov	r4,r21
    6490:	980b883a 	mov	r5,r19
    6494:	000d883a 	mov	r6,zero
    6498:	01d00934 	movhi	r7,16420
    649c:	00107580 	call	10758 <__muldf3>
    64a0:	000d883a 	mov	r6,zero
    64a4:	01d00934 	movhi	r7,16420
    64a8:	8009883a 	mov	r4,r16
    64ac:	880b883a 	mov	r5,r17
    64b0:	102b883a 	mov	r21,r2
    64b4:	1827883a 	mov	r19,r3
    64b8:	00107580 	call	10758 <__muldf3>
    64bc:	180b883a 	mov	r5,r3
    64c0:	1009883a 	mov	r4,r2
    64c4:	1821883a 	mov	r16,r3
    64c8:	1023883a 	mov	r17,r2
    64cc:	00118c00 	call	118c0 <__fixdfsi>
    64d0:	1009883a 	mov	r4,r2
    64d4:	1029883a 	mov	r20,r2
    64d8:	00119400 	call	11940 <__floatsidf>
    64dc:	8809883a 	mov	r4,r17
    64e0:	800b883a 	mov	r5,r16
    64e4:	100d883a 	mov	r6,r2
    64e8:	180f883a 	mov	r7,r3
    64ec:	0010fc40 	call	10fc4 <__subdf3>
    64f0:	a5000c04 	addi	r20,r20,48
    64f4:	a80d883a 	mov	r6,r21
    64f8:	980f883a 	mov	r7,r19
    64fc:	1009883a 	mov	r4,r2
    6500:	180b883a 	mov	r5,r3
    6504:	95000005 	stb	r20,0(r18)
    6508:	1021883a 	mov	r16,r2
    650c:	1823883a 	mov	r17,r3
    6510:	00106640 	call	10664 <__ledf2>
    6514:	bdc00044 	addi	r23,r23,1
    6518:	800d883a 	mov	r6,r16
    651c:	880f883a 	mov	r7,r17
    6520:	0009883a 	mov	r4,zero
    6524:	014ffc34 	movhi	r5,16368
    6528:	103fcf0e 	bge	r2,zero,6468 <__alt_mem_Onchip_SRAM+0xf8006468>
    652c:	d8c01317 	ldw	r3,76(sp)
    6530:	d8c00515 	stw	r3,20(sp)
    6534:	d9400917 	ldw	r5,36(sp)
    6538:	e009883a 	mov	r4,fp
    653c:	00096480 	call	9648 <_Bfree>
    6540:	d9000517 	ldw	r4,20(sp)
    6544:	d9802317 	ldw	r6,140(sp)
    6548:	d9c02517 	ldw	r7,148(sp)
    654c:	b8000005 	stb	zero,0(r23)
    6550:	20800044 	addi	r2,r4,1
    6554:	30800015 	stw	r2,0(r6)
    6558:	3802aa26 	beq	r7,zero,7004 <_dtoa_r+0x1178>
    655c:	3dc00015 	stw	r23,0(r7)
    6560:	d8800717 	ldw	r2,28(sp)
    6564:	003e7906 	br	5f4c <__alt_mem_Onchip_SRAM+0xf8005f4c>
    6568:	00800434 	movhi	r2,16
    656c:	10bfffc4 	addi	r2,r2,-1
    6570:	88a2703a 	and	r17,r17,r2
    6574:	883e851e 	bne	r17,zero,5f8c <__alt_mem_Onchip_SRAM+0xf8005f8c>
    6578:	00800074 	movhi	r2,1
    657c:	109ae404 	addi	r2,r2,27536
    6580:	003e8406 	br	5f94 <__alt_mem_Onchip_SRAM+0xf8005f94>
    6584:	10c00204 	addi	r3,r2,8
    6588:	003e8706 	br	5fa8 <__alt_mem_Onchip_SRAM+0xf8005fa8>
    658c:	01400434 	movhi	r5,16
    6590:	297fffc4 	addi	r5,r5,-1
    6594:	994a703a 	and	r5,r19,r5
    6598:	9009883a 	mov	r4,r18
    659c:	843f0044 	addi	r16,r16,-1023
    65a0:	294ffc34 	orhi	r5,r5,16368
    65a4:	dd800217 	ldw	r22,8(sp)
    65a8:	d8001115 	stw	zero,68(sp)
    65ac:	003ea506 	br	6044 <__alt_mem_Onchip_SRAM+0xf8006044>
    65b0:	00800074 	movhi	r2,1
    65b4:	109ad304 	addi	r2,r2,27468
    65b8:	003e6406 	br	5f4c <__alt_mem_Onchip_SRAM+0xf8005f4c>
    65bc:	e0001115 	stw	zero,68(fp)
    65c0:	000b883a 	mov	r5,zero
    65c4:	e009883a 	mov	r4,fp
    65c8:	00095a00 	call	95a0 <_Balloc>
    65cc:	01bfffc4 	movi	r6,-1
    65d0:	01c00044 	movi	r7,1
    65d4:	d8800715 	stw	r2,28(sp)
    65d8:	d9800c15 	stw	r6,48(sp)
    65dc:	e0801015 	stw	r2,64(fp)
    65e0:	d8000315 	stw	zero,12(sp)
    65e4:	d9c00b15 	stw	r7,44(sp)
    65e8:	d9800615 	stw	r6,24(sp)
    65ec:	d8002215 	stw	zero,136(sp)
    65f0:	d8800117 	ldw	r2,4(sp)
    65f4:	10008916 	blt	r2,zero,681c <_dtoa_r+0x990>
    65f8:	d9000517 	ldw	r4,20(sp)
    65fc:	00c00384 	movi	r3,14
    6600:	19008616 	blt	r3,r4,681c <_dtoa_r+0x990>
    6604:	200490fa 	slli	r2,r4,3
    6608:	00c00074 	movhi	r3,1
    660c:	d9802217 	ldw	r6,136(sp)
    6610:	18db0304 	addi	r3,r3,27660
    6614:	1885883a 	add	r2,r3,r2
    6618:	14000017 	ldw	r16,0(r2)
    661c:	14400117 	ldw	r17,4(r2)
    6620:	30016316 	blt	r6,zero,6bb0 <_dtoa_r+0xd24>
    6624:	800d883a 	mov	r6,r16
    6628:	880f883a 	mov	r7,r17
    662c:	9009883a 	mov	r4,r18
    6630:	980b883a 	mov	r5,r19
    6634:	000fb300 	call	fb30 <__divdf3>
    6638:	180b883a 	mov	r5,r3
    663c:	1009883a 	mov	r4,r2
    6640:	00118c00 	call	118c0 <__fixdfsi>
    6644:	1009883a 	mov	r4,r2
    6648:	102b883a 	mov	r21,r2
    664c:	00119400 	call	11940 <__floatsidf>
    6650:	800d883a 	mov	r6,r16
    6654:	880f883a 	mov	r7,r17
    6658:	1009883a 	mov	r4,r2
    665c:	180b883a 	mov	r5,r3
    6660:	00107580 	call	10758 <__muldf3>
    6664:	100d883a 	mov	r6,r2
    6668:	180f883a 	mov	r7,r3
    666c:	9009883a 	mov	r4,r18
    6670:	980b883a 	mov	r5,r19
    6674:	0010fc40 	call	10fc4 <__subdf3>
    6678:	d9c00717 	ldw	r7,28(sp)
    667c:	1009883a 	mov	r4,r2
    6680:	a8800c04 	addi	r2,r21,48
    6684:	38800005 	stb	r2,0(r7)
    6688:	3dc00044 	addi	r23,r7,1
    668c:	d9c00617 	ldw	r7,24(sp)
    6690:	01800044 	movi	r6,1
    6694:	180b883a 	mov	r5,r3
    6698:	2005883a 	mov	r2,r4
    669c:	39803826 	beq	r7,r6,6780 <_dtoa_r+0x8f4>
    66a0:	000d883a 	mov	r6,zero
    66a4:	01d00934 	movhi	r7,16420
    66a8:	00107580 	call	10758 <__muldf3>
    66ac:	000d883a 	mov	r6,zero
    66b0:	000f883a 	mov	r7,zero
    66b4:	1009883a 	mov	r4,r2
    66b8:	180b883a 	mov	r5,r3
    66bc:	1025883a 	mov	r18,r2
    66c0:	1827883a 	mov	r19,r3
    66c4:	00105000 	call	10500 <__eqdf2>
    66c8:	103f9a26 	beq	r2,zero,6534 <__alt_mem_Onchip_SRAM+0xf8006534>
    66cc:	d9c00617 	ldw	r7,24(sp)
    66d0:	d8c00717 	ldw	r3,28(sp)
    66d4:	b829883a 	mov	r20,r23
    66d8:	38bfffc4 	addi	r2,r7,-1
    66dc:	18ad883a 	add	r22,r3,r2
    66e0:	00000a06 	br	670c <_dtoa_r+0x880>
    66e4:	00107580 	call	10758 <__muldf3>
    66e8:	000d883a 	mov	r6,zero
    66ec:	000f883a 	mov	r7,zero
    66f0:	1009883a 	mov	r4,r2
    66f4:	180b883a 	mov	r5,r3
    66f8:	1025883a 	mov	r18,r2
    66fc:	1827883a 	mov	r19,r3
    6700:	b829883a 	mov	r20,r23
    6704:	00105000 	call	10500 <__eqdf2>
    6708:	103f8a26 	beq	r2,zero,6534 <__alt_mem_Onchip_SRAM+0xf8006534>
    670c:	800d883a 	mov	r6,r16
    6710:	880f883a 	mov	r7,r17
    6714:	9009883a 	mov	r4,r18
    6718:	980b883a 	mov	r5,r19
    671c:	000fb300 	call	fb30 <__divdf3>
    6720:	180b883a 	mov	r5,r3
    6724:	1009883a 	mov	r4,r2
    6728:	00118c00 	call	118c0 <__fixdfsi>
    672c:	1009883a 	mov	r4,r2
    6730:	102b883a 	mov	r21,r2
    6734:	00119400 	call	11940 <__floatsidf>
    6738:	800d883a 	mov	r6,r16
    673c:	880f883a 	mov	r7,r17
    6740:	1009883a 	mov	r4,r2
    6744:	180b883a 	mov	r5,r3
    6748:	00107580 	call	10758 <__muldf3>
    674c:	100d883a 	mov	r6,r2
    6750:	180f883a 	mov	r7,r3
    6754:	9009883a 	mov	r4,r18
    6758:	980b883a 	mov	r5,r19
    675c:	0010fc40 	call	10fc4 <__subdf3>
    6760:	aa000c04 	addi	r8,r21,48
    6764:	a2000005 	stb	r8,0(r20)
    6768:	000d883a 	mov	r6,zero
    676c:	01d00934 	movhi	r7,16420
    6770:	1009883a 	mov	r4,r2
    6774:	180b883a 	mov	r5,r3
    6778:	a5c00044 	addi	r23,r20,1
    677c:	b53fd91e 	bne	r22,r20,66e4 <__alt_mem_Onchip_SRAM+0xf80066e4>
    6780:	100d883a 	mov	r6,r2
    6784:	180f883a 	mov	r7,r3
    6788:	1009883a 	mov	r4,r2
    678c:	180b883a 	mov	r5,r3
    6790:	000f2840 	call	f284 <__adddf3>
    6794:	100d883a 	mov	r6,r2
    6798:	180f883a 	mov	r7,r3
    679c:	8009883a 	mov	r4,r16
    67a0:	880b883a 	mov	r5,r17
    67a4:	1027883a 	mov	r19,r2
    67a8:	1825883a 	mov	r18,r3
    67ac:	00106640 	call	10664 <__ledf2>
    67b0:	10000816 	blt	r2,zero,67d4 <_dtoa_r+0x948>
    67b4:	980d883a 	mov	r6,r19
    67b8:	900f883a 	mov	r7,r18
    67bc:	8009883a 	mov	r4,r16
    67c0:	880b883a 	mov	r5,r17
    67c4:	00105000 	call	10500 <__eqdf2>
    67c8:	103f5a1e 	bne	r2,zero,6534 <__alt_mem_Onchip_SRAM+0xf8006534>
    67cc:	ad40004c 	andi	r21,r21,1
    67d0:	a83f5826 	beq	r21,zero,6534 <__alt_mem_Onchip_SRAM+0xf8006534>
    67d4:	bd3fffc3 	ldbu	r20,-1(r23)
    67d8:	b8bfffc4 	addi	r2,r23,-1
    67dc:	1007883a 	mov	r3,r2
    67e0:	01400e44 	movi	r5,57
    67e4:	d9800717 	ldw	r6,28(sp)
    67e8:	00000506 	br	6800 <_dtoa_r+0x974>
    67ec:	18ffffc4 	addi	r3,r3,-1
    67f0:	11824726 	beq	r2,r6,7110 <_dtoa_r+0x1284>
    67f4:	1d000003 	ldbu	r20,0(r3)
    67f8:	102f883a 	mov	r23,r2
    67fc:	10bfffc4 	addi	r2,r2,-1
    6800:	a1003fcc 	andi	r4,r20,255
    6804:	2100201c 	xori	r4,r4,128
    6808:	213fe004 	addi	r4,r4,-128
    680c:	217ff726 	beq	r4,r5,67ec <__alt_mem_Onchip_SRAM+0xf80067ec>
    6810:	a2000044 	addi	r8,r20,1
    6814:	12000005 	stb	r8,0(r2)
    6818:	003f4606 	br	6534 <__alt_mem_Onchip_SRAM+0xf8006534>
    681c:	d9000b17 	ldw	r4,44(sp)
    6820:	2000c826 	beq	r4,zero,6b44 <_dtoa_r+0xcb8>
    6824:	d9800317 	ldw	r6,12(sp)
    6828:	00c00044 	movi	r3,1
    682c:	1980f90e 	bge	r3,r6,6c14 <_dtoa_r+0xd88>
    6830:	d8800617 	ldw	r2,24(sp)
    6834:	d8c00a17 	ldw	r3,40(sp)
    6838:	157fffc4 	addi	r21,r2,-1
    683c:	1d41f316 	blt	r3,r21,700c <_dtoa_r+0x1180>
    6840:	1d6bc83a 	sub	r21,r3,r21
    6844:	d9c00617 	ldw	r7,24(sp)
    6848:	3802aa16 	blt	r7,zero,72f4 <_dtoa_r+0x1468>
    684c:	dd000817 	ldw	r20,32(sp)
    6850:	d8800617 	ldw	r2,24(sp)
    6854:	d8c00817 	ldw	r3,32(sp)
    6858:	01400044 	movi	r5,1
    685c:	e009883a 	mov	r4,fp
    6860:	1887883a 	add	r3,r3,r2
    6864:	d8c00815 	stw	r3,32(sp)
    6868:	b0ad883a 	add	r22,r22,r2
    686c:	00099d40 	call	99d4 <__i2b>
    6870:	1023883a 	mov	r17,r2
    6874:	a0000826 	beq	r20,zero,6898 <_dtoa_r+0xa0c>
    6878:	0580070e 	bge	zero,r22,6898 <_dtoa_r+0xa0c>
    687c:	a005883a 	mov	r2,r20
    6880:	b500b916 	blt	r22,r20,6b68 <_dtoa_r+0xcdc>
    6884:	d9000817 	ldw	r4,32(sp)
    6888:	a0a9c83a 	sub	r20,r20,r2
    688c:	b0adc83a 	sub	r22,r22,r2
    6890:	2089c83a 	sub	r4,r4,r2
    6894:	d9000815 	stw	r4,32(sp)
    6898:	d9800a17 	ldw	r6,40(sp)
    689c:	0181810e 	bge	zero,r6,6ea4 <_dtoa_r+0x1018>
    68a0:	d9c00b17 	ldw	r7,44(sp)
    68a4:	3800b326 	beq	r7,zero,6b74 <_dtoa_r+0xce8>
    68a8:	a800b226 	beq	r21,zero,6b74 <_dtoa_r+0xce8>
    68ac:	880b883a 	mov	r5,r17
    68b0:	a80d883a 	mov	r6,r21
    68b4:	e009883a 	mov	r4,fp
    68b8:	0009c9c0 	call	9c9c <__pow5mult>
    68bc:	d9800917 	ldw	r6,36(sp)
    68c0:	100b883a 	mov	r5,r2
    68c4:	e009883a 	mov	r4,fp
    68c8:	1023883a 	mov	r17,r2
    68cc:	0009a100 	call	9a10 <__multiply>
    68d0:	1021883a 	mov	r16,r2
    68d4:	d8800a17 	ldw	r2,40(sp)
    68d8:	d9400917 	ldw	r5,36(sp)
    68dc:	e009883a 	mov	r4,fp
    68e0:	1545c83a 	sub	r2,r2,r21
    68e4:	d8800a15 	stw	r2,40(sp)
    68e8:	00096480 	call	9648 <_Bfree>
    68ec:	d8c00a17 	ldw	r3,40(sp)
    68f0:	18009f1e 	bne	r3,zero,6b70 <_dtoa_r+0xce4>
    68f4:	05c00044 	movi	r23,1
    68f8:	e009883a 	mov	r4,fp
    68fc:	b80b883a 	mov	r5,r23
    6900:	00099d40 	call	99d4 <__i2b>
    6904:	d9000d17 	ldw	r4,52(sp)
    6908:	102b883a 	mov	r21,r2
    690c:	2000ce26 	beq	r4,zero,6c48 <_dtoa_r+0xdbc>
    6910:	200d883a 	mov	r6,r4
    6914:	100b883a 	mov	r5,r2
    6918:	e009883a 	mov	r4,fp
    691c:	0009c9c0 	call	9c9c <__pow5mult>
    6920:	d9800317 	ldw	r6,12(sp)
    6924:	102b883a 	mov	r21,r2
    6928:	b981810e 	bge	r23,r6,6f30 <_dtoa_r+0x10a4>
    692c:	0027883a 	mov	r19,zero
    6930:	a8800417 	ldw	r2,16(r21)
    6934:	05c00804 	movi	r23,32
    6938:	10800104 	addi	r2,r2,4
    693c:	1085883a 	add	r2,r2,r2
    6940:	1085883a 	add	r2,r2,r2
    6944:	a885883a 	add	r2,r21,r2
    6948:	11000017 	ldw	r4,0(r2)
    694c:	00098bc0 	call	98bc <__hi0bits>
    6950:	b885c83a 	sub	r2,r23,r2
    6954:	1585883a 	add	r2,r2,r22
    6958:	108007cc 	andi	r2,r2,31
    695c:	1000b326 	beq	r2,zero,6c2c <_dtoa_r+0xda0>
    6960:	00c00804 	movi	r3,32
    6964:	1887c83a 	sub	r3,r3,r2
    6968:	01000104 	movi	r4,4
    696c:	20c2cd0e 	bge	r4,r3,74a4 <_dtoa_r+0x1618>
    6970:	00c00704 	movi	r3,28
    6974:	1885c83a 	sub	r2,r3,r2
    6978:	d8c00817 	ldw	r3,32(sp)
    697c:	a0a9883a 	add	r20,r20,r2
    6980:	b0ad883a 	add	r22,r22,r2
    6984:	1887883a 	add	r3,r3,r2
    6988:	d8c00815 	stw	r3,32(sp)
    698c:	d9800817 	ldw	r6,32(sp)
    6990:	0180040e 	bge	zero,r6,69a4 <_dtoa_r+0xb18>
    6994:	800b883a 	mov	r5,r16
    6998:	e009883a 	mov	r4,fp
    699c:	0009ddc0 	call	9ddc <__lshift>
    69a0:	1021883a 	mov	r16,r2
    69a4:	0580050e 	bge	zero,r22,69bc <_dtoa_r+0xb30>
    69a8:	a80b883a 	mov	r5,r21
    69ac:	b00d883a 	mov	r6,r22
    69b0:	e009883a 	mov	r4,fp
    69b4:	0009ddc0 	call	9ddc <__lshift>
    69b8:	102b883a 	mov	r21,r2
    69bc:	d9c00e17 	ldw	r7,56(sp)
    69c0:	3801211e 	bne	r7,zero,6e48 <_dtoa_r+0xfbc>
    69c4:	d9800617 	ldw	r6,24(sp)
    69c8:	0181380e 	bge	zero,r6,6eac <_dtoa_r+0x1020>
    69cc:	d8c00b17 	ldw	r3,44(sp)
    69d0:	1800ab1e 	bne	r3,zero,6c80 <_dtoa_r+0xdf4>
    69d4:	dc800717 	ldw	r18,28(sp)
    69d8:	dcc00617 	ldw	r19,24(sp)
    69dc:	9029883a 	mov	r20,r18
    69e0:	00000206 	br	69ec <_dtoa_r+0xb60>
    69e4:	00096700 	call	9670 <__multadd>
    69e8:	1021883a 	mov	r16,r2
    69ec:	a80b883a 	mov	r5,r21
    69f0:	8009883a 	mov	r4,r16
    69f4:	0005c640 	call	5c64 <quorem>
    69f8:	10800c04 	addi	r2,r2,48
    69fc:	90800005 	stb	r2,0(r18)
    6a00:	94800044 	addi	r18,r18,1
    6a04:	9507c83a 	sub	r3,r18,r20
    6a08:	000f883a 	mov	r7,zero
    6a0c:	01800284 	movi	r6,10
    6a10:	800b883a 	mov	r5,r16
    6a14:	e009883a 	mov	r4,fp
    6a18:	1cfff216 	blt	r3,r19,69e4 <__alt_mem_Onchip_SRAM+0xf80069e4>
    6a1c:	1011883a 	mov	r8,r2
    6a20:	d8800617 	ldw	r2,24(sp)
    6a24:	0082370e 	bge	zero,r2,7304 <_dtoa_r+0x1478>
    6a28:	d9000717 	ldw	r4,28(sp)
    6a2c:	0025883a 	mov	r18,zero
    6a30:	20af883a 	add	r23,r4,r2
    6a34:	01800044 	movi	r6,1
    6a38:	800b883a 	mov	r5,r16
    6a3c:	e009883a 	mov	r4,fp
    6a40:	da001715 	stw	r8,92(sp)
    6a44:	0009ddc0 	call	9ddc <__lshift>
    6a48:	a80b883a 	mov	r5,r21
    6a4c:	1009883a 	mov	r4,r2
    6a50:	d8800915 	stw	r2,36(sp)
    6a54:	0009f240 	call	9f24 <__mcmp>
    6a58:	da001717 	ldw	r8,92(sp)
    6a5c:	0081800e 	bge	zero,r2,7060 <_dtoa_r+0x11d4>
    6a60:	b93fffc3 	ldbu	r4,-1(r23)
    6a64:	b8bfffc4 	addi	r2,r23,-1
    6a68:	1007883a 	mov	r3,r2
    6a6c:	01800e44 	movi	r6,57
    6a70:	d9c00717 	ldw	r7,28(sp)
    6a74:	00000506 	br	6a8c <_dtoa_r+0xc00>
    6a78:	18ffffc4 	addi	r3,r3,-1
    6a7c:	11c12326 	beq	r2,r7,6f0c <_dtoa_r+0x1080>
    6a80:	19000003 	ldbu	r4,0(r3)
    6a84:	102f883a 	mov	r23,r2
    6a88:	10bfffc4 	addi	r2,r2,-1
    6a8c:	21403fcc 	andi	r5,r4,255
    6a90:	2940201c 	xori	r5,r5,128
    6a94:	297fe004 	addi	r5,r5,-128
    6a98:	29bff726 	beq	r5,r6,6a78 <__alt_mem_Onchip_SRAM+0xf8006a78>
    6a9c:	21000044 	addi	r4,r4,1
    6aa0:	11000005 	stb	r4,0(r2)
    6aa4:	a80b883a 	mov	r5,r21
    6aa8:	e009883a 	mov	r4,fp
    6aac:	00096480 	call	9648 <_Bfree>
    6ab0:	883ea026 	beq	r17,zero,6534 <__alt_mem_Onchip_SRAM+0xf8006534>
    6ab4:	90000426 	beq	r18,zero,6ac8 <_dtoa_r+0xc3c>
    6ab8:	94400326 	beq	r18,r17,6ac8 <_dtoa_r+0xc3c>
    6abc:	900b883a 	mov	r5,r18
    6ac0:	e009883a 	mov	r4,fp
    6ac4:	00096480 	call	9648 <_Bfree>
    6ac8:	880b883a 	mov	r5,r17
    6acc:	e009883a 	mov	r4,fp
    6ad0:	00096480 	call	9648 <_Bfree>
    6ad4:	003e9706 	br	6534 <__alt_mem_Onchip_SRAM+0xf8006534>
    6ad8:	01800044 	movi	r6,1
    6adc:	d9800e15 	stw	r6,56(sp)
    6ae0:	003d9606 	br	613c <__alt_mem_Onchip_SRAM+0xf800613c>
    6ae4:	d8800817 	ldw	r2,32(sp)
    6ae8:	d8c00517 	ldw	r3,20(sp)
    6aec:	d8000d15 	stw	zero,52(sp)
    6af0:	10c5c83a 	sub	r2,r2,r3
    6af4:	00c9c83a 	sub	r4,zero,r3
    6af8:	d8800815 	stw	r2,32(sp)
    6afc:	d9000a15 	stw	r4,40(sp)
    6b00:	003d9706 	br	6160 <__alt_mem_Onchip_SRAM+0xf8006160>
    6b04:	05adc83a 	sub	r22,zero,r22
    6b08:	dd800815 	stw	r22,32(sp)
    6b0c:	002d883a 	mov	r22,zero
    6b10:	003d8e06 	br	614c <__alt_mem_Onchip_SRAM+0xf800614c>
    6b14:	d9000517 	ldw	r4,20(sp)
    6b18:	00119400 	call	11940 <__floatsidf>
    6b1c:	100d883a 	mov	r6,r2
    6b20:	180f883a 	mov	r7,r3
    6b24:	a009883a 	mov	r4,r20
    6b28:	880b883a 	mov	r5,r17
    6b2c:	00105000 	call	10500 <__eqdf2>
    6b30:	103d7126 	beq	r2,zero,60f8 <__alt_mem_Onchip_SRAM+0xf80060f8>
    6b34:	d9c00517 	ldw	r7,20(sp)
    6b38:	39ffffc4 	addi	r7,r7,-1
    6b3c:	d9c00515 	stw	r7,20(sp)
    6b40:	003d6d06 	br	60f8 <__alt_mem_Onchip_SRAM+0xf80060f8>
    6b44:	dd400a17 	ldw	r21,40(sp)
    6b48:	dd000817 	ldw	r20,32(sp)
    6b4c:	0023883a 	mov	r17,zero
    6b50:	003f4806 	br	6874 <__alt_mem_Onchip_SRAM+0xf8006874>
    6b54:	10e3c83a 	sub	r17,r2,r3
    6b58:	9448983a 	sll	r4,r18,r17
    6b5c:	003d3206 	br	6028 <__alt_mem_Onchip_SRAM+0xf8006028>
    6b60:	d8000e15 	stw	zero,56(sp)
    6b64:	003d7506 	br	613c <__alt_mem_Onchip_SRAM+0xf800613c>
    6b68:	b005883a 	mov	r2,r22
    6b6c:	003f4506 	br	6884 <__alt_mem_Onchip_SRAM+0xf8006884>
    6b70:	dc000915 	stw	r16,36(sp)
    6b74:	d9800a17 	ldw	r6,40(sp)
    6b78:	d9400917 	ldw	r5,36(sp)
    6b7c:	e009883a 	mov	r4,fp
    6b80:	0009c9c0 	call	9c9c <__pow5mult>
    6b84:	1021883a 	mov	r16,r2
    6b88:	003f5a06 	br	68f4 <__alt_mem_Onchip_SRAM+0xf80068f4>
    6b8c:	01c00044 	movi	r7,1
    6b90:	d9c00b15 	stw	r7,44(sp)
    6b94:	d8802217 	ldw	r2,136(sp)
    6b98:	0081280e 	bge	zero,r2,703c <_dtoa_r+0x11b0>
    6b9c:	100d883a 	mov	r6,r2
    6ba0:	1021883a 	mov	r16,r2
    6ba4:	d8800c15 	stw	r2,48(sp)
    6ba8:	d8800615 	stw	r2,24(sp)
    6bac:	003d8806 	br	61d0 <__alt_mem_Onchip_SRAM+0xf80061d0>
    6bb0:	d8800617 	ldw	r2,24(sp)
    6bb4:	00be9b16 	blt	zero,r2,6624 <__alt_mem_Onchip_SRAM+0xf8006624>
    6bb8:	10010f1e 	bne	r2,zero,6ff8 <_dtoa_r+0x116c>
    6bbc:	880b883a 	mov	r5,r17
    6bc0:	000d883a 	mov	r6,zero
    6bc4:	01d00534 	movhi	r7,16404
    6bc8:	8009883a 	mov	r4,r16
    6bcc:	00107580 	call	10758 <__muldf3>
    6bd0:	900d883a 	mov	r6,r18
    6bd4:	980f883a 	mov	r7,r19
    6bd8:	1009883a 	mov	r4,r2
    6bdc:	180b883a 	mov	r5,r3
    6be0:	00105880 	call	10588 <__gedf2>
    6be4:	002b883a 	mov	r21,zero
    6be8:	0023883a 	mov	r17,zero
    6bec:	1000bf16 	blt	r2,zero,6eec <_dtoa_r+0x1060>
    6bf0:	d9802217 	ldw	r6,136(sp)
    6bf4:	ddc00717 	ldw	r23,28(sp)
    6bf8:	018c303a 	nor	r6,zero,r6
    6bfc:	d9800515 	stw	r6,20(sp)
    6c00:	a80b883a 	mov	r5,r21
    6c04:	e009883a 	mov	r4,fp
    6c08:	00096480 	call	9648 <_Bfree>
    6c0c:	883e4926 	beq	r17,zero,6534 <__alt_mem_Onchip_SRAM+0xf8006534>
    6c10:	003fad06 	br	6ac8 <__alt_mem_Onchip_SRAM+0xf8006ac8>
    6c14:	d9c01117 	ldw	r7,68(sp)
    6c18:	3801bc26 	beq	r7,zero,730c <_dtoa_r+0x1480>
    6c1c:	10810cc4 	addi	r2,r2,1075
    6c20:	dd400a17 	ldw	r21,40(sp)
    6c24:	dd000817 	ldw	r20,32(sp)
    6c28:	003f0a06 	br	6854 <__alt_mem_Onchip_SRAM+0xf8006854>
    6c2c:	00800704 	movi	r2,28
    6c30:	d9000817 	ldw	r4,32(sp)
    6c34:	a0a9883a 	add	r20,r20,r2
    6c38:	b0ad883a 	add	r22,r22,r2
    6c3c:	2089883a 	add	r4,r4,r2
    6c40:	d9000815 	stw	r4,32(sp)
    6c44:	003f5106 	br	698c <__alt_mem_Onchip_SRAM+0xf800698c>
    6c48:	d8c00317 	ldw	r3,12(sp)
    6c4c:	b8c1fc0e 	bge	r23,r3,7440 <_dtoa_r+0x15b4>
    6c50:	0027883a 	mov	r19,zero
    6c54:	b805883a 	mov	r2,r23
    6c58:	003f3e06 	br	6954 <__alt_mem_Onchip_SRAM+0xf8006954>
    6c5c:	880b883a 	mov	r5,r17
    6c60:	e009883a 	mov	r4,fp
    6c64:	000f883a 	mov	r7,zero
    6c68:	01800284 	movi	r6,10
    6c6c:	00096700 	call	9670 <__multadd>
    6c70:	d9000c17 	ldw	r4,48(sp)
    6c74:	1023883a 	mov	r17,r2
    6c78:	0102040e 	bge	zero,r4,748c <_dtoa_r+0x1600>
    6c7c:	d9000615 	stw	r4,24(sp)
    6c80:	0500050e 	bge	zero,r20,6c98 <_dtoa_r+0xe0c>
    6c84:	880b883a 	mov	r5,r17
    6c88:	a00d883a 	mov	r6,r20
    6c8c:	e009883a 	mov	r4,fp
    6c90:	0009ddc0 	call	9ddc <__lshift>
    6c94:	1023883a 	mov	r17,r2
    6c98:	9801241e 	bne	r19,zero,712c <_dtoa_r+0x12a0>
    6c9c:	8829883a 	mov	r20,r17
    6ca0:	d9000617 	ldw	r4,24(sp)
    6ca4:	dcc00717 	ldw	r19,28(sp)
    6ca8:	9480004c 	andi	r18,r18,1
    6cac:	20bfffc4 	addi	r2,r4,-1
    6cb0:	9885883a 	add	r2,r19,r2
    6cb4:	d8800415 	stw	r2,16(sp)
    6cb8:	dc800615 	stw	r18,24(sp)
    6cbc:	a80b883a 	mov	r5,r21
    6cc0:	8009883a 	mov	r4,r16
    6cc4:	0005c640 	call	5c64 <quorem>
    6cc8:	880b883a 	mov	r5,r17
    6ccc:	8009883a 	mov	r4,r16
    6cd0:	102f883a 	mov	r23,r2
    6cd4:	0009f240 	call	9f24 <__mcmp>
    6cd8:	a80b883a 	mov	r5,r21
    6cdc:	a00d883a 	mov	r6,r20
    6ce0:	e009883a 	mov	r4,fp
    6ce4:	102d883a 	mov	r22,r2
    6ce8:	0009f840 	call	9f84 <__mdiff>
    6cec:	1007883a 	mov	r3,r2
    6cf0:	10800317 	ldw	r2,12(r2)
    6cf4:	bc800c04 	addi	r18,r23,48
    6cf8:	180b883a 	mov	r5,r3
    6cfc:	10004e1e 	bne	r2,zero,6e38 <_dtoa_r+0xfac>
    6d00:	8009883a 	mov	r4,r16
    6d04:	d8c01615 	stw	r3,88(sp)
    6d08:	0009f240 	call	9f24 <__mcmp>
    6d0c:	d8c01617 	ldw	r3,88(sp)
    6d10:	e009883a 	mov	r4,fp
    6d14:	d8801615 	stw	r2,88(sp)
    6d18:	180b883a 	mov	r5,r3
    6d1c:	00096480 	call	9648 <_Bfree>
    6d20:	d8801617 	ldw	r2,88(sp)
    6d24:	1000041e 	bne	r2,zero,6d38 <_dtoa_r+0xeac>
    6d28:	d9800317 	ldw	r6,12(sp)
    6d2c:	3000021e 	bne	r6,zero,6d38 <_dtoa_r+0xeac>
    6d30:	d8c00617 	ldw	r3,24(sp)
    6d34:	18003726 	beq	r3,zero,6e14 <_dtoa_r+0xf88>
    6d38:	b0002016 	blt	r22,zero,6dbc <_dtoa_r+0xf30>
    6d3c:	b000041e 	bne	r22,zero,6d50 <_dtoa_r+0xec4>
    6d40:	d9000317 	ldw	r4,12(sp)
    6d44:	2000021e 	bne	r4,zero,6d50 <_dtoa_r+0xec4>
    6d48:	d8c00617 	ldw	r3,24(sp)
    6d4c:	18001b26 	beq	r3,zero,6dbc <_dtoa_r+0xf30>
    6d50:	00810716 	blt	zero,r2,7170 <_dtoa_r+0x12e4>
    6d54:	d8c00417 	ldw	r3,16(sp)
    6d58:	9d800044 	addi	r22,r19,1
    6d5c:	9c800005 	stb	r18,0(r19)
    6d60:	b02f883a 	mov	r23,r22
    6d64:	98c10626 	beq	r19,r3,7180 <_dtoa_r+0x12f4>
    6d68:	800b883a 	mov	r5,r16
    6d6c:	000f883a 	mov	r7,zero
    6d70:	01800284 	movi	r6,10
    6d74:	e009883a 	mov	r4,fp
    6d78:	00096700 	call	9670 <__multadd>
    6d7c:	1021883a 	mov	r16,r2
    6d80:	000f883a 	mov	r7,zero
    6d84:	01800284 	movi	r6,10
    6d88:	880b883a 	mov	r5,r17
    6d8c:	e009883a 	mov	r4,fp
    6d90:	8d002526 	beq	r17,r20,6e28 <_dtoa_r+0xf9c>
    6d94:	00096700 	call	9670 <__multadd>
    6d98:	a00b883a 	mov	r5,r20
    6d9c:	000f883a 	mov	r7,zero
    6da0:	01800284 	movi	r6,10
    6da4:	e009883a 	mov	r4,fp
    6da8:	1023883a 	mov	r17,r2
    6dac:	00096700 	call	9670 <__multadd>
    6db0:	1029883a 	mov	r20,r2
    6db4:	b027883a 	mov	r19,r22
    6db8:	003fc006 	br	6cbc <__alt_mem_Onchip_SRAM+0xf8006cbc>
    6dbc:	9011883a 	mov	r8,r18
    6dc0:	00800e0e 	bge	zero,r2,6dfc <_dtoa_r+0xf70>
    6dc4:	800b883a 	mov	r5,r16
    6dc8:	01800044 	movi	r6,1
    6dcc:	e009883a 	mov	r4,fp
    6dd0:	da001715 	stw	r8,92(sp)
    6dd4:	0009ddc0 	call	9ddc <__lshift>
    6dd8:	a80b883a 	mov	r5,r21
    6ddc:	1009883a 	mov	r4,r2
    6de0:	1021883a 	mov	r16,r2
    6de4:	0009f240 	call	9f24 <__mcmp>
    6de8:	da001717 	ldw	r8,92(sp)
    6dec:	0081960e 	bge	zero,r2,7448 <_dtoa_r+0x15bc>
    6df0:	00800e44 	movi	r2,57
    6df4:	40817026 	beq	r8,r2,73b8 <_dtoa_r+0x152c>
    6df8:	ba000c44 	addi	r8,r23,49
    6dfc:	8825883a 	mov	r18,r17
    6e00:	9dc00044 	addi	r23,r19,1
    6e04:	9a000005 	stb	r8,0(r19)
    6e08:	a023883a 	mov	r17,r20
    6e0c:	dc000915 	stw	r16,36(sp)
    6e10:	003f2406 	br	6aa4 <__alt_mem_Onchip_SRAM+0xf8006aa4>
    6e14:	00800e44 	movi	r2,57
    6e18:	9011883a 	mov	r8,r18
    6e1c:	90816626 	beq	r18,r2,73b8 <_dtoa_r+0x152c>
    6e20:	05bff516 	blt	zero,r22,6df8 <__alt_mem_Onchip_SRAM+0xf8006df8>
    6e24:	003ff506 	br	6dfc <__alt_mem_Onchip_SRAM+0xf8006dfc>
    6e28:	00096700 	call	9670 <__multadd>
    6e2c:	1023883a 	mov	r17,r2
    6e30:	1029883a 	mov	r20,r2
    6e34:	003fdf06 	br	6db4 <__alt_mem_Onchip_SRAM+0xf8006db4>
    6e38:	e009883a 	mov	r4,fp
    6e3c:	00096480 	call	9648 <_Bfree>
    6e40:	00800044 	movi	r2,1
    6e44:	003fbc06 	br	6d38 <__alt_mem_Onchip_SRAM+0xf8006d38>
    6e48:	a80b883a 	mov	r5,r21
    6e4c:	8009883a 	mov	r4,r16
    6e50:	0009f240 	call	9f24 <__mcmp>
    6e54:	103edb0e 	bge	r2,zero,69c4 <__alt_mem_Onchip_SRAM+0xf80069c4>
    6e58:	800b883a 	mov	r5,r16
    6e5c:	000f883a 	mov	r7,zero
    6e60:	01800284 	movi	r6,10
    6e64:	e009883a 	mov	r4,fp
    6e68:	00096700 	call	9670 <__multadd>
    6e6c:	1021883a 	mov	r16,r2
    6e70:	d8800517 	ldw	r2,20(sp)
    6e74:	d8c00b17 	ldw	r3,44(sp)
    6e78:	10bfffc4 	addi	r2,r2,-1
    6e7c:	d8800515 	stw	r2,20(sp)
    6e80:	183f761e 	bne	r3,zero,6c5c <__alt_mem_Onchip_SRAM+0xf8006c5c>
    6e84:	d9000c17 	ldw	r4,48(sp)
    6e88:	0101730e 	bge	zero,r4,7458 <_dtoa_r+0x15cc>
    6e8c:	d9000615 	stw	r4,24(sp)
    6e90:	003ed006 	br	69d4 <__alt_mem_Onchip_SRAM+0xf80069d4>
    6e94:	00800084 	movi	r2,2
    6e98:	3081861e 	bne	r6,r2,74b4 <_dtoa_r+0x1628>
    6e9c:	d8000b15 	stw	zero,44(sp)
    6ea0:	003f3c06 	br	6b94 <__alt_mem_Onchip_SRAM+0xf8006b94>
    6ea4:	dc000917 	ldw	r16,36(sp)
    6ea8:	003e9206 	br	68f4 <__alt_mem_Onchip_SRAM+0xf80068f4>
    6eac:	d9c00317 	ldw	r7,12(sp)
    6eb0:	00800084 	movi	r2,2
    6eb4:	11fec50e 	bge	r2,r7,69cc <__alt_mem_Onchip_SRAM+0xf80069cc>
    6eb8:	d9000617 	ldw	r4,24(sp)
    6ebc:	20013c1e 	bne	r4,zero,73b0 <_dtoa_r+0x1524>
    6ec0:	a80b883a 	mov	r5,r21
    6ec4:	000f883a 	mov	r7,zero
    6ec8:	01800144 	movi	r6,5
    6ecc:	e009883a 	mov	r4,fp
    6ed0:	00096700 	call	9670 <__multadd>
    6ed4:	100b883a 	mov	r5,r2
    6ed8:	8009883a 	mov	r4,r16
    6edc:	102b883a 	mov	r21,r2
    6ee0:	0009f240 	call	9f24 <__mcmp>
    6ee4:	dc000915 	stw	r16,36(sp)
    6ee8:	00bf410e 	bge	zero,r2,6bf0 <__alt_mem_Onchip_SRAM+0xf8006bf0>
    6eec:	d9c00717 	ldw	r7,28(sp)
    6ef0:	00800c44 	movi	r2,49
    6ef4:	38800005 	stb	r2,0(r7)
    6ef8:	d8800517 	ldw	r2,20(sp)
    6efc:	3dc00044 	addi	r23,r7,1
    6f00:	10800044 	addi	r2,r2,1
    6f04:	d8800515 	stw	r2,20(sp)
    6f08:	003f3d06 	br	6c00 <__alt_mem_Onchip_SRAM+0xf8006c00>
    6f0c:	d9800517 	ldw	r6,20(sp)
    6f10:	d9c00717 	ldw	r7,28(sp)
    6f14:	00800c44 	movi	r2,49
    6f18:	31800044 	addi	r6,r6,1
    6f1c:	d9800515 	stw	r6,20(sp)
    6f20:	38800005 	stb	r2,0(r7)
    6f24:	003edf06 	br	6aa4 <__alt_mem_Onchip_SRAM+0xf8006aa4>
    6f28:	d8000b15 	stw	zero,44(sp)
    6f2c:	003c9f06 	br	61ac <__alt_mem_Onchip_SRAM+0xf80061ac>
    6f30:	903e7e1e 	bne	r18,zero,692c <__alt_mem_Onchip_SRAM+0xf800692c>
    6f34:	00800434 	movhi	r2,16
    6f38:	10bfffc4 	addi	r2,r2,-1
    6f3c:	9884703a 	and	r2,r19,r2
    6f40:	1000ea1e 	bne	r2,zero,72ec <_dtoa_r+0x1460>
    6f44:	9cdffc2c 	andhi	r19,r19,32752
    6f48:	9800e826 	beq	r19,zero,72ec <_dtoa_r+0x1460>
    6f4c:	d9c00817 	ldw	r7,32(sp)
    6f50:	b5800044 	addi	r22,r22,1
    6f54:	04c00044 	movi	r19,1
    6f58:	39c00044 	addi	r7,r7,1
    6f5c:	d9c00815 	stw	r7,32(sp)
    6f60:	d8800d17 	ldw	r2,52(sp)
    6f64:	103e721e 	bne	r2,zero,6930 <__alt_mem_Onchip_SRAM+0xf8006930>
    6f68:	00800044 	movi	r2,1
    6f6c:	003e7906 	br	6954 <__alt_mem_Onchip_SRAM+0xf8006954>
    6f70:	8009883a 	mov	r4,r16
    6f74:	00119400 	call	11940 <__floatsidf>
    6f78:	d9800f17 	ldw	r6,60(sp)
    6f7c:	d9c01017 	ldw	r7,64(sp)
    6f80:	1009883a 	mov	r4,r2
    6f84:	180b883a 	mov	r5,r3
    6f88:	00107580 	call	10758 <__muldf3>
    6f8c:	000d883a 	mov	r6,zero
    6f90:	01d00734 	movhi	r7,16412
    6f94:	1009883a 	mov	r4,r2
    6f98:	180b883a 	mov	r5,r3
    6f9c:	000f2840 	call	f284 <__adddf3>
    6fa0:	047f3034 	movhi	r17,64704
    6fa4:	1021883a 	mov	r16,r2
    6fa8:	1c63883a 	add	r17,r3,r17
    6fac:	d9000f17 	ldw	r4,60(sp)
    6fb0:	d9401017 	ldw	r5,64(sp)
    6fb4:	000d883a 	mov	r6,zero
    6fb8:	01d00534 	movhi	r7,16404
    6fbc:	0010fc40 	call	10fc4 <__subdf3>
    6fc0:	800d883a 	mov	r6,r16
    6fc4:	880f883a 	mov	r7,r17
    6fc8:	1009883a 	mov	r4,r2
    6fcc:	180b883a 	mov	r5,r3
    6fd0:	102b883a 	mov	r21,r2
    6fd4:	1829883a 	mov	r20,r3
    6fd8:	00105880 	call	10588 <__gedf2>
    6fdc:	00806c16 	blt	zero,r2,7190 <_dtoa_r+0x1304>
    6fe0:	89e0003c 	xorhi	r7,r17,32768
    6fe4:	800d883a 	mov	r6,r16
    6fe8:	a809883a 	mov	r4,r21
    6fec:	a00b883a 	mov	r5,r20
    6ff0:	00106640 	call	10664 <__ledf2>
    6ff4:	103d7e0e 	bge	r2,zero,65f0 <__alt_mem_Onchip_SRAM+0xf80065f0>
    6ff8:	002b883a 	mov	r21,zero
    6ffc:	0023883a 	mov	r17,zero
    7000:	003efb06 	br	6bf0 <__alt_mem_Onchip_SRAM+0xf8006bf0>
    7004:	d8800717 	ldw	r2,28(sp)
    7008:	003bd006 	br	5f4c <__alt_mem_Onchip_SRAM+0xf8005f4c>
    700c:	d9000a17 	ldw	r4,40(sp)
    7010:	d9800d17 	ldw	r6,52(sp)
    7014:	dd400a15 	stw	r21,40(sp)
    7018:	a905c83a 	sub	r2,r21,r4
    701c:	308d883a 	add	r6,r6,r2
    7020:	d9800d15 	stw	r6,52(sp)
    7024:	002b883a 	mov	r21,zero
    7028:	003e0606 	br	6844 <__alt_mem_Onchip_SRAM+0xf8006844>
    702c:	9023883a 	mov	r17,r18
    7030:	9829883a 	mov	r20,r19
    7034:	04000084 	movi	r16,2
    7038:	003c9206 	br	6284 <__alt_mem_Onchip_SRAM+0xf8006284>
    703c:	04000044 	movi	r16,1
    7040:	dc000c15 	stw	r16,48(sp)
    7044:	dc000615 	stw	r16,24(sp)
    7048:	dc002215 	stw	r16,136(sp)
    704c:	e0001115 	stw	zero,68(fp)
    7050:	000b883a 	mov	r5,zero
    7054:	003c6906 	br	61fc <__alt_mem_Onchip_SRAM+0xf80061fc>
    7058:	3021883a 	mov	r16,r6
    705c:	003ffb06 	br	704c <__alt_mem_Onchip_SRAM+0xf800704c>
    7060:	1000021e 	bne	r2,zero,706c <_dtoa_r+0x11e0>
    7064:	4200004c 	andi	r8,r8,1
    7068:	403e7d1e 	bne	r8,zero,6a60 <__alt_mem_Onchip_SRAM+0xf8006a60>
    706c:	01000c04 	movi	r4,48
    7070:	00000106 	br	7078 <_dtoa_r+0x11ec>
    7074:	102f883a 	mov	r23,r2
    7078:	b8bfffc4 	addi	r2,r23,-1
    707c:	10c00007 	ldb	r3,0(r2)
    7080:	193ffc26 	beq	r3,r4,7074 <__alt_mem_Onchip_SRAM+0xf8007074>
    7084:	003e8706 	br	6aa4 <__alt_mem_Onchip_SRAM+0xf8006aa4>
    7088:	d8800517 	ldw	r2,20(sp)
    708c:	00a3c83a 	sub	r17,zero,r2
    7090:	8800a426 	beq	r17,zero,7324 <_dtoa_r+0x1498>
    7094:	888003cc 	andi	r2,r17,15
    7098:	100490fa 	slli	r2,r2,3
    709c:	00c00074 	movhi	r3,1
    70a0:	18db0304 	addi	r3,r3,27660
    70a4:	1885883a 	add	r2,r3,r2
    70a8:	11800017 	ldw	r6,0(r2)
    70ac:	11c00117 	ldw	r7,4(r2)
    70b0:	9009883a 	mov	r4,r18
    70b4:	980b883a 	mov	r5,r19
    70b8:	8823d13a 	srai	r17,r17,4
    70bc:	00107580 	call	10758 <__muldf3>
    70c0:	d8800f15 	stw	r2,60(sp)
    70c4:	d8c01015 	stw	r3,64(sp)
    70c8:	8800e826 	beq	r17,zero,746c <_dtoa_r+0x15e0>
    70cc:	05000074 	movhi	r20,1
    70d0:	a51af904 	addi	r20,r20,27620
    70d4:	04000084 	movi	r16,2
    70d8:	8980004c 	andi	r6,r17,1
    70dc:	1009883a 	mov	r4,r2
    70e0:	8823d07a 	srai	r17,r17,1
    70e4:	180b883a 	mov	r5,r3
    70e8:	30000426 	beq	r6,zero,70fc <_dtoa_r+0x1270>
    70ec:	a1800017 	ldw	r6,0(r20)
    70f0:	a1c00117 	ldw	r7,4(r20)
    70f4:	84000044 	addi	r16,r16,1
    70f8:	00107580 	call	10758 <__muldf3>
    70fc:	a5000204 	addi	r20,r20,8
    7100:	883ff51e 	bne	r17,zero,70d8 <__alt_mem_Onchip_SRAM+0xf80070d8>
    7104:	d8800f15 	stw	r2,60(sp)
    7108:	d8c01015 	stw	r3,64(sp)
    710c:	003c7606 	br	62e8 <__alt_mem_Onchip_SRAM+0xf80062e8>
    7110:	00c00c04 	movi	r3,48
    7114:	10c00005 	stb	r3,0(r2)
    7118:	d8c00517 	ldw	r3,20(sp)
    711c:	bd3fffc3 	ldbu	r20,-1(r23)
    7120:	18c00044 	addi	r3,r3,1
    7124:	d8c00515 	stw	r3,20(sp)
    7128:	003db906 	br	6810 <__alt_mem_Onchip_SRAM+0xf8006810>
    712c:	89400117 	ldw	r5,4(r17)
    7130:	e009883a 	mov	r4,fp
    7134:	00095a00 	call	95a0 <_Balloc>
    7138:	89800417 	ldw	r6,16(r17)
    713c:	89400304 	addi	r5,r17,12
    7140:	11000304 	addi	r4,r2,12
    7144:	31800084 	addi	r6,r6,2
    7148:	318d883a 	add	r6,r6,r6
    714c:	318d883a 	add	r6,r6,r6
    7150:	1027883a 	mov	r19,r2
    7154:	00091d40 	call	91d4 <memcpy>
    7158:	01800044 	movi	r6,1
    715c:	980b883a 	mov	r5,r19
    7160:	e009883a 	mov	r4,fp
    7164:	0009ddc0 	call	9ddc <__lshift>
    7168:	1029883a 	mov	r20,r2
    716c:	003ecc06 	br	6ca0 <__alt_mem_Onchip_SRAM+0xf8006ca0>
    7170:	00800e44 	movi	r2,57
    7174:	90809026 	beq	r18,r2,73b8 <_dtoa_r+0x152c>
    7178:	92000044 	addi	r8,r18,1
    717c:	003f1f06 	br	6dfc <__alt_mem_Onchip_SRAM+0xf8006dfc>
    7180:	9011883a 	mov	r8,r18
    7184:	8825883a 	mov	r18,r17
    7188:	a023883a 	mov	r17,r20
    718c:	003e2906 	br	6a34 <__alt_mem_Onchip_SRAM+0xf8006a34>
    7190:	002b883a 	mov	r21,zero
    7194:	0023883a 	mov	r17,zero
    7198:	003f5406 	br	6eec <__alt_mem_Onchip_SRAM+0xf8006eec>
    719c:	61bfffc4 	addi	r6,r12,-1
    71a0:	300490fa 	slli	r2,r6,3
    71a4:	00c00074 	movhi	r3,1
    71a8:	18db0304 	addi	r3,r3,27660
    71ac:	1885883a 	add	r2,r3,r2
    71b0:	11000017 	ldw	r4,0(r2)
    71b4:	11400117 	ldw	r5,4(r2)
    71b8:	d8800717 	ldw	r2,28(sp)
    71bc:	880f883a 	mov	r7,r17
    71c0:	d9801215 	stw	r6,72(sp)
    71c4:	800d883a 	mov	r6,r16
    71c8:	db001615 	stw	r12,88(sp)
    71cc:	15c00044 	addi	r23,r2,1
    71d0:	00107580 	call	10758 <__muldf3>
    71d4:	d9401017 	ldw	r5,64(sp)
    71d8:	d9000f17 	ldw	r4,60(sp)
    71dc:	d8c01515 	stw	r3,84(sp)
    71e0:	d8801415 	stw	r2,80(sp)
    71e4:	00118c00 	call	118c0 <__fixdfsi>
    71e8:	1009883a 	mov	r4,r2
    71ec:	1021883a 	mov	r16,r2
    71f0:	00119400 	call	11940 <__floatsidf>
    71f4:	d9000f17 	ldw	r4,60(sp)
    71f8:	d9401017 	ldw	r5,64(sp)
    71fc:	100d883a 	mov	r6,r2
    7200:	180f883a 	mov	r7,r3
    7204:	0010fc40 	call	10fc4 <__subdf3>
    7208:	1829883a 	mov	r20,r3
    720c:	d8c00717 	ldw	r3,28(sp)
    7210:	84000c04 	addi	r16,r16,48
    7214:	1023883a 	mov	r17,r2
    7218:	1c000005 	stb	r16,0(r3)
    721c:	db001617 	ldw	r12,88(sp)
    7220:	00800044 	movi	r2,1
    7224:	60802226 	beq	r12,r2,72b0 <_dtoa_r+0x1424>
    7228:	d9c00717 	ldw	r7,28(sp)
    722c:	8805883a 	mov	r2,r17
    7230:	b82b883a 	mov	r21,r23
    7234:	3b19883a 	add	r12,r7,r12
    7238:	6023883a 	mov	r17,r12
    723c:	a007883a 	mov	r3,r20
    7240:	dc800f15 	stw	r18,60(sp)
    7244:	000d883a 	mov	r6,zero
    7248:	01d00934 	movhi	r7,16420
    724c:	1009883a 	mov	r4,r2
    7250:	180b883a 	mov	r5,r3
    7254:	00107580 	call	10758 <__muldf3>
    7258:	180b883a 	mov	r5,r3
    725c:	1009883a 	mov	r4,r2
    7260:	1829883a 	mov	r20,r3
    7264:	1025883a 	mov	r18,r2
    7268:	00118c00 	call	118c0 <__fixdfsi>
    726c:	1009883a 	mov	r4,r2
    7270:	1021883a 	mov	r16,r2
    7274:	00119400 	call	11940 <__floatsidf>
    7278:	100d883a 	mov	r6,r2
    727c:	180f883a 	mov	r7,r3
    7280:	9009883a 	mov	r4,r18
    7284:	a00b883a 	mov	r5,r20
    7288:	84000c04 	addi	r16,r16,48
    728c:	0010fc40 	call	10fc4 <__subdf3>
    7290:	ad400044 	addi	r21,r21,1
    7294:	ac3fffc5 	stb	r16,-1(r21)
    7298:	ac7fea1e 	bne	r21,r17,7244 <__alt_mem_Onchip_SRAM+0xf8007244>
    729c:	1023883a 	mov	r17,r2
    72a0:	d8801217 	ldw	r2,72(sp)
    72a4:	dc800f17 	ldw	r18,60(sp)
    72a8:	1829883a 	mov	r20,r3
    72ac:	b8af883a 	add	r23,r23,r2
    72b0:	d9001417 	ldw	r4,80(sp)
    72b4:	d9401517 	ldw	r5,84(sp)
    72b8:	000d883a 	mov	r6,zero
    72bc:	01cff834 	movhi	r7,16352
    72c0:	000f2840 	call	f284 <__adddf3>
    72c4:	880d883a 	mov	r6,r17
    72c8:	a00f883a 	mov	r7,r20
    72cc:	1009883a 	mov	r4,r2
    72d0:	180b883a 	mov	r5,r3
    72d4:	00106640 	call	10664 <__ledf2>
    72d8:	10003e0e 	bge	r2,zero,73d4 <_dtoa_r+0x1548>
    72dc:	d9001317 	ldw	r4,76(sp)
    72e0:	bd3fffc3 	ldbu	r20,-1(r23)
    72e4:	d9000515 	stw	r4,20(sp)
    72e8:	003d3b06 	br	67d8 <__alt_mem_Onchip_SRAM+0xf80067d8>
    72ec:	0027883a 	mov	r19,zero
    72f0:	003f1b06 	br	6f60 <__alt_mem_Onchip_SRAM+0xf8006f60>
    72f4:	d8800817 	ldw	r2,32(sp)
    72f8:	11e9c83a 	sub	r20,r2,r7
    72fc:	0005883a 	mov	r2,zero
    7300:	003d5406 	br	6854 <__alt_mem_Onchip_SRAM+0xf8006854>
    7304:	00800044 	movi	r2,1
    7308:	003dc706 	br	6a28 <__alt_mem_Onchip_SRAM+0xf8006a28>
    730c:	d8c00217 	ldw	r3,8(sp)
    7310:	00800d84 	movi	r2,54
    7314:	dd400a17 	ldw	r21,40(sp)
    7318:	10c5c83a 	sub	r2,r2,r3
    731c:	dd000817 	ldw	r20,32(sp)
    7320:	003d4c06 	br	6854 <__alt_mem_Onchip_SRAM+0xf8006854>
    7324:	dc800f15 	stw	r18,60(sp)
    7328:	dcc01015 	stw	r19,64(sp)
    732c:	04000084 	movi	r16,2
    7330:	003bed06 	br	62e8 <__alt_mem_Onchip_SRAM+0xf80062e8>
    7334:	d9000617 	ldw	r4,24(sp)
    7338:	203f0d26 	beq	r4,zero,6f70 <__alt_mem_Onchip_SRAM+0xf8006f70>
    733c:	d9800c17 	ldw	r6,48(sp)
    7340:	01bcab0e 	bge	zero,r6,65f0 <__alt_mem_Onchip_SRAM+0xf80065f0>
    7344:	d9401017 	ldw	r5,64(sp)
    7348:	d9000f17 	ldw	r4,60(sp)
    734c:	000d883a 	mov	r6,zero
    7350:	01d00934 	movhi	r7,16420
    7354:	00107580 	call	10758 <__muldf3>
    7358:	81000044 	addi	r4,r16,1
    735c:	d8800f15 	stw	r2,60(sp)
    7360:	d8c01015 	stw	r3,64(sp)
    7364:	00119400 	call	11940 <__floatsidf>
    7368:	d9800f17 	ldw	r6,60(sp)
    736c:	d9c01017 	ldw	r7,64(sp)
    7370:	1009883a 	mov	r4,r2
    7374:	180b883a 	mov	r5,r3
    7378:	00107580 	call	10758 <__muldf3>
    737c:	01d00734 	movhi	r7,16412
    7380:	000d883a 	mov	r6,zero
    7384:	1009883a 	mov	r4,r2
    7388:	180b883a 	mov	r5,r3
    738c:	000f2840 	call	f284 <__adddf3>
    7390:	d9c00517 	ldw	r7,20(sp)
    7394:	047f3034 	movhi	r17,64704
    7398:	1021883a 	mov	r16,r2
    739c:	39ffffc4 	addi	r7,r7,-1
    73a0:	d9c01315 	stw	r7,76(sp)
    73a4:	1c63883a 	add	r17,r3,r17
    73a8:	db000c17 	ldw	r12,48(sp)
    73ac:	003bea06 	br	6358 <__alt_mem_Onchip_SRAM+0xf8006358>
    73b0:	dc000915 	stw	r16,36(sp)
    73b4:	003e0e06 	br	6bf0 <__alt_mem_Onchip_SRAM+0xf8006bf0>
    73b8:	01000e44 	movi	r4,57
    73bc:	8825883a 	mov	r18,r17
    73c0:	9dc00044 	addi	r23,r19,1
    73c4:	99000005 	stb	r4,0(r19)
    73c8:	a023883a 	mov	r17,r20
    73cc:	dc000915 	stw	r16,36(sp)
    73d0:	003da406 	br	6a64 <__alt_mem_Onchip_SRAM+0xf8006a64>
    73d4:	d9801417 	ldw	r6,80(sp)
    73d8:	d9c01517 	ldw	r7,84(sp)
    73dc:	0009883a 	mov	r4,zero
    73e0:	014ff834 	movhi	r5,16352
    73e4:	0010fc40 	call	10fc4 <__subdf3>
    73e8:	880d883a 	mov	r6,r17
    73ec:	a00f883a 	mov	r7,r20
    73f0:	1009883a 	mov	r4,r2
    73f4:	180b883a 	mov	r5,r3
    73f8:	00105880 	call	10588 <__gedf2>
    73fc:	00bc7c0e 	bge	zero,r2,65f0 <__alt_mem_Onchip_SRAM+0xf80065f0>
    7400:	01000c04 	movi	r4,48
    7404:	00000106 	br	740c <_dtoa_r+0x1580>
    7408:	102f883a 	mov	r23,r2
    740c:	b8bfffc4 	addi	r2,r23,-1
    7410:	10c00007 	ldb	r3,0(r2)
    7414:	193ffc26 	beq	r3,r4,7408 <__alt_mem_Onchip_SRAM+0xf8007408>
    7418:	d9801317 	ldw	r6,76(sp)
    741c:	d9800515 	stw	r6,20(sp)
    7420:	003c4406 	br	6534 <__alt_mem_Onchip_SRAM+0xf8006534>
    7424:	d9801317 	ldw	r6,76(sp)
    7428:	d9800515 	stw	r6,20(sp)
    742c:	003cea06 	br	67d8 <__alt_mem_Onchip_SRAM+0xf80067d8>
    7430:	dd800f17 	ldw	r22,60(sp)
    7434:	dcc01017 	ldw	r19,64(sp)
    7438:	dc801217 	ldw	r18,72(sp)
    743c:	003c6c06 	br	65f0 <__alt_mem_Onchip_SRAM+0xf80065f0>
    7440:	903e031e 	bne	r18,zero,6c50 <__alt_mem_Onchip_SRAM+0xf8006c50>
    7444:	003ebb06 	br	6f34 <__alt_mem_Onchip_SRAM+0xf8006f34>
    7448:	103e6c1e 	bne	r2,zero,6dfc <__alt_mem_Onchip_SRAM+0xf8006dfc>
    744c:	4080004c 	andi	r2,r8,1
    7450:	103e6a26 	beq	r2,zero,6dfc <__alt_mem_Onchip_SRAM+0xf8006dfc>
    7454:	003e6606 	br	6df0 <__alt_mem_Onchip_SRAM+0xf8006df0>
    7458:	d8c00317 	ldw	r3,12(sp)
    745c:	00800084 	movi	r2,2
    7460:	10c02916 	blt	r2,r3,7508 <_dtoa_r+0x167c>
    7464:	d9000c17 	ldw	r4,48(sp)
    7468:	003e8806 	br	6e8c <__alt_mem_Onchip_SRAM+0xf8006e8c>
    746c:	04000084 	movi	r16,2
    7470:	003b9d06 	br	62e8 <__alt_mem_Onchip_SRAM+0xf80062e8>
    7474:	d9001317 	ldw	r4,76(sp)
    7478:	d9000515 	stw	r4,20(sp)
    747c:	003cd606 	br	67d8 <__alt_mem_Onchip_SRAM+0xf80067d8>
    7480:	d8801317 	ldw	r2,76(sp)
    7484:	d8800515 	stw	r2,20(sp)
    7488:	003c2a06 	br	6534 <__alt_mem_Onchip_SRAM+0xf8006534>
    748c:	d9800317 	ldw	r6,12(sp)
    7490:	00800084 	movi	r2,2
    7494:	11801516 	blt	r2,r6,74ec <_dtoa_r+0x1660>
    7498:	d9c00c17 	ldw	r7,48(sp)
    749c:	d9c00615 	stw	r7,24(sp)
    74a0:	003df706 	br	6c80 <__alt_mem_Onchip_SRAM+0xf8006c80>
    74a4:	193d3926 	beq	r3,r4,698c <__alt_mem_Onchip_SRAM+0xf800698c>
    74a8:	00c00f04 	movi	r3,60
    74ac:	1885c83a 	sub	r2,r3,r2
    74b0:	003ddf06 	br	6c30 <__alt_mem_Onchip_SRAM+0xf8006c30>
    74b4:	e009883a 	mov	r4,fp
    74b8:	e0001115 	stw	zero,68(fp)
    74bc:	000b883a 	mov	r5,zero
    74c0:	00095a00 	call	95a0 <_Balloc>
    74c4:	d8800715 	stw	r2,28(sp)
    74c8:	d8c00717 	ldw	r3,28(sp)
    74cc:	00bfffc4 	movi	r2,-1
    74d0:	01000044 	movi	r4,1
    74d4:	d8800c15 	stw	r2,48(sp)
    74d8:	e0c01015 	stw	r3,64(fp)
    74dc:	d9000b15 	stw	r4,44(sp)
    74e0:	d8800615 	stw	r2,24(sp)
    74e4:	d8002215 	stw	zero,136(sp)
    74e8:	003c4106 	br	65f0 <__alt_mem_Onchip_SRAM+0xf80065f0>
    74ec:	d8c00c17 	ldw	r3,48(sp)
    74f0:	d8c00615 	stw	r3,24(sp)
    74f4:	003e7006 	br	6eb8 <__alt_mem_Onchip_SRAM+0xf8006eb8>
    74f8:	04400044 	movi	r17,1
    74fc:	003b2006 	br	6180 <__alt_mem_Onchip_SRAM+0xf8006180>
    7500:	000b883a 	mov	r5,zero
    7504:	003b3d06 	br	61fc <__alt_mem_Onchip_SRAM+0xf80061fc>
    7508:	d8800c17 	ldw	r2,48(sp)
    750c:	d8800615 	stw	r2,24(sp)
    7510:	003e6906 	br	6eb8 <__alt_mem_Onchip_SRAM+0xf8006eb8>

00007514 <__sflush_r>:
    7514:	2880030b 	ldhu	r2,12(r5)
    7518:	defffb04 	addi	sp,sp,-20
    751c:	dcc00315 	stw	r19,12(sp)
    7520:	dc400115 	stw	r17,4(sp)
    7524:	dfc00415 	stw	ra,16(sp)
    7528:	dc800215 	stw	r18,8(sp)
    752c:	dc000015 	stw	r16,0(sp)
    7530:	10c0020c 	andi	r3,r2,8
    7534:	2823883a 	mov	r17,r5
    7538:	2027883a 	mov	r19,r4
    753c:	1800311e 	bne	r3,zero,7604 <__sflush_r+0xf0>
    7540:	28c00117 	ldw	r3,4(r5)
    7544:	10820014 	ori	r2,r2,2048
    7548:	2880030d 	sth	r2,12(r5)
    754c:	00c04b0e 	bge	zero,r3,767c <__sflush_r+0x168>
    7550:	8a000a17 	ldw	r8,40(r17)
    7554:	40002326 	beq	r8,zero,75e4 <__sflush_r+0xd0>
    7558:	9c000017 	ldw	r16,0(r19)
    755c:	10c4000c 	andi	r3,r2,4096
    7560:	98000015 	stw	zero,0(r19)
    7564:	18004826 	beq	r3,zero,7688 <__sflush_r+0x174>
    7568:	89801417 	ldw	r6,80(r17)
    756c:	10c0010c 	andi	r3,r2,4
    7570:	18000626 	beq	r3,zero,758c <__sflush_r+0x78>
    7574:	88c00117 	ldw	r3,4(r17)
    7578:	88800c17 	ldw	r2,48(r17)
    757c:	30cdc83a 	sub	r6,r6,r3
    7580:	10000226 	beq	r2,zero,758c <__sflush_r+0x78>
    7584:	88800f17 	ldw	r2,60(r17)
    7588:	308dc83a 	sub	r6,r6,r2
    758c:	89400717 	ldw	r5,28(r17)
    7590:	000f883a 	mov	r7,zero
    7594:	9809883a 	mov	r4,r19
    7598:	403ee83a 	callr	r8
    759c:	00ffffc4 	movi	r3,-1
    75a0:	10c04426 	beq	r2,r3,76b4 <__sflush_r+0x1a0>
    75a4:	88c0030b 	ldhu	r3,12(r17)
    75a8:	89000417 	ldw	r4,16(r17)
    75ac:	88000115 	stw	zero,4(r17)
    75b0:	197dffcc 	andi	r5,r3,63487
    75b4:	8940030d 	sth	r5,12(r17)
    75b8:	89000015 	stw	r4,0(r17)
    75bc:	18c4000c 	andi	r3,r3,4096
    75c0:	18002c1e 	bne	r3,zero,7674 <__sflush_r+0x160>
    75c4:	89400c17 	ldw	r5,48(r17)
    75c8:	9c000015 	stw	r16,0(r19)
    75cc:	28000526 	beq	r5,zero,75e4 <__sflush_r+0xd0>
    75d0:	88801004 	addi	r2,r17,64
    75d4:	28800226 	beq	r5,r2,75e0 <__sflush_r+0xcc>
    75d8:	9809883a 	mov	r4,r19
    75dc:	0007c900 	call	7c90 <_free_r>
    75e0:	88000c15 	stw	zero,48(r17)
    75e4:	0005883a 	mov	r2,zero
    75e8:	dfc00417 	ldw	ra,16(sp)
    75ec:	dcc00317 	ldw	r19,12(sp)
    75f0:	dc800217 	ldw	r18,8(sp)
    75f4:	dc400117 	ldw	r17,4(sp)
    75f8:	dc000017 	ldw	r16,0(sp)
    75fc:	dec00504 	addi	sp,sp,20
    7600:	f800283a 	ret
    7604:	2c800417 	ldw	r18,16(r5)
    7608:	903ff626 	beq	r18,zero,75e4 <__alt_mem_Onchip_SRAM+0xf80075e4>
    760c:	2c000017 	ldw	r16,0(r5)
    7610:	108000cc 	andi	r2,r2,3
    7614:	2c800015 	stw	r18,0(r5)
    7618:	84a1c83a 	sub	r16,r16,r18
    761c:	1000131e 	bne	r2,zero,766c <__sflush_r+0x158>
    7620:	28800517 	ldw	r2,20(r5)
    7624:	88800215 	stw	r2,8(r17)
    7628:	04000316 	blt	zero,r16,7638 <__sflush_r+0x124>
    762c:	003fed06 	br	75e4 <__alt_mem_Onchip_SRAM+0xf80075e4>
    7630:	90a5883a 	add	r18,r18,r2
    7634:	043feb0e 	bge	zero,r16,75e4 <__alt_mem_Onchip_SRAM+0xf80075e4>
    7638:	88800917 	ldw	r2,36(r17)
    763c:	89400717 	ldw	r5,28(r17)
    7640:	800f883a 	mov	r7,r16
    7644:	900d883a 	mov	r6,r18
    7648:	9809883a 	mov	r4,r19
    764c:	103ee83a 	callr	r2
    7650:	80a1c83a 	sub	r16,r16,r2
    7654:	00bff616 	blt	zero,r2,7630 <__alt_mem_Onchip_SRAM+0xf8007630>
    7658:	88c0030b 	ldhu	r3,12(r17)
    765c:	00bfffc4 	movi	r2,-1
    7660:	18c01014 	ori	r3,r3,64
    7664:	88c0030d 	sth	r3,12(r17)
    7668:	003fdf06 	br	75e8 <__alt_mem_Onchip_SRAM+0xf80075e8>
    766c:	0005883a 	mov	r2,zero
    7670:	003fec06 	br	7624 <__alt_mem_Onchip_SRAM+0xf8007624>
    7674:	88801415 	stw	r2,80(r17)
    7678:	003fd206 	br	75c4 <__alt_mem_Onchip_SRAM+0xf80075c4>
    767c:	28c00f17 	ldw	r3,60(r5)
    7680:	00ffb316 	blt	zero,r3,7550 <__alt_mem_Onchip_SRAM+0xf8007550>
    7684:	003fd706 	br	75e4 <__alt_mem_Onchip_SRAM+0xf80075e4>
    7688:	89400717 	ldw	r5,28(r17)
    768c:	000d883a 	mov	r6,zero
    7690:	01c00044 	movi	r7,1
    7694:	9809883a 	mov	r4,r19
    7698:	403ee83a 	callr	r8
    769c:	100d883a 	mov	r6,r2
    76a0:	00bfffc4 	movi	r2,-1
    76a4:	30801426 	beq	r6,r2,76f8 <__sflush_r+0x1e4>
    76a8:	8880030b 	ldhu	r2,12(r17)
    76ac:	8a000a17 	ldw	r8,40(r17)
    76b0:	003fae06 	br	756c <__alt_mem_Onchip_SRAM+0xf800756c>
    76b4:	98c00017 	ldw	r3,0(r19)
    76b8:	183fba26 	beq	r3,zero,75a4 <__alt_mem_Onchip_SRAM+0xf80075a4>
    76bc:	01000744 	movi	r4,29
    76c0:	19000626 	beq	r3,r4,76dc <__sflush_r+0x1c8>
    76c4:	01000584 	movi	r4,22
    76c8:	19000426 	beq	r3,r4,76dc <__sflush_r+0x1c8>
    76cc:	88c0030b 	ldhu	r3,12(r17)
    76d0:	18c01014 	ori	r3,r3,64
    76d4:	88c0030d 	sth	r3,12(r17)
    76d8:	003fc306 	br	75e8 <__alt_mem_Onchip_SRAM+0xf80075e8>
    76dc:	8880030b 	ldhu	r2,12(r17)
    76e0:	88c00417 	ldw	r3,16(r17)
    76e4:	88000115 	stw	zero,4(r17)
    76e8:	10bdffcc 	andi	r2,r2,63487
    76ec:	8880030d 	sth	r2,12(r17)
    76f0:	88c00015 	stw	r3,0(r17)
    76f4:	003fb306 	br	75c4 <__alt_mem_Onchip_SRAM+0xf80075c4>
    76f8:	98800017 	ldw	r2,0(r19)
    76fc:	103fea26 	beq	r2,zero,76a8 <__alt_mem_Onchip_SRAM+0xf80076a8>
    7700:	00c00744 	movi	r3,29
    7704:	10c00226 	beq	r2,r3,7710 <__sflush_r+0x1fc>
    7708:	00c00584 	movi	r3,22
    770c:	10c0031e 	bne	r2,r3,771c <__sflush_r+0x208>
    7710:	9c000015 	stw	r16,0(r19)
    7714:	0005883a 	mov	r2,zero
    7718:	003fb306 	br	75e8 <__alt_mem_Onchip_SRAM+0xf80075e8>
    771c:	88c0030b 	ldhu	r3,12(r17)
    7720:	3005883a 	mov	r2,r6
    7724:	18c01014 	ori	r3,r3,64
    7728:	88c0030d 	sth	r3,12(r17)
    772c:	003fae06 	br	75e8 <__alt_mem_Onchip_SRAM+0xf80075e8>

00007730 <_fflush_r>:
    7730:	defffd04 	addi	sp,sp,-12
    7734:	dc000115 	stw	r16,4(sp)
    7738:	dfc00215 	stw	ra,8(sp)
    773c:	2021883a 	mov	r16,r4
    7740:	20000226 	beq	r4,zero,774c <_fflush_r+0x1c>
    7744:	20800e17 	ldw	r2,56(r4)
    7748:	10000c26 	beq	r2,zero,777c <_fflush_r+0x4c>
    774c:	2880030f 	ldh	r2,12(r5)
    7750:	1000051e 	bne	r2,zero,7768 <_fflush_r+0x38>
    7754:	0005883a 	mov	r2,zero
    7758:	dfc00217 	ldw	ra,8(sp)
    775c:	dc000117 	ldw	r16,4(sp)
    7760:	dec00304 	addi	sp,sp,12
    7764:	f800283a 	ret
    7768:	8009883a 	mov	r4,r16
    776c:	dfc00217 	ldw	ra,8(sp)
    7770:	dc000117 	ldw	r16,4(sp)
    7774:	dec00304 	addi	sp,sp,12
    7778:	00075141 	jmpi	7514 <__sflush_r>
    777c:	d9400015 	stw	r5,0(sp)
    7780:	0007b1c0 	call	7b1c <__sinit>
    7784:	d9400017 	ldw	r5,0(sp)
    7788:	003ff006 	br	774c <__alt_mem_Onchip_SRAM+0xf800774c>

0000778c <fflush>:
    778c:	20000526 	beq	r4,zero,77a4 <fflush+0x18>
    7790:	008000b4 	movhi	r2,2
    7794:	10a24904 	addi	r2,r2,-30428
    7798:	200b883a 	mov	r5,r4
    779c:	11000017 	ldw	r4,0(r2)
    77a0:	00077301 	jmpi	7730 <_fflush_r>
    77a4:	008000b4 	movhi	r2,2
    77a8:	10a24804 	addi	r2,r2,-30432
    77ac:	11000017 	ldw	r4,0(r2)
    77b0:	01400034 	movhi	r5,0
    77b4:	295dcc04 	addi	r5,r5,30512
    77b8:	000852c1 	jmpi	852c <_fwalk_reent>

000077bc <__fp_unlock>:
    77bc:	0005883a 	mov	r2,zero
    77c0:	f800283a 	ret

000077c4 <_cleanup_r>:
    77c4:	01400074 	movhi	r5,1
    77c8:	2977d504 	addi	r5,r5,-8364
    77cc:	000852c1 	jmpi	852c <_fwalk_reent>

000077d0 <__sinit.part.1>:
    77d0:	defff704 	addi	sp,sp,-36
    77d4:	00c00034 	movhi	r3,0
    77d8:	dfc00815 	stw	ra,32(sp)
    77dc:	ddc00715 	stw	r23,28(sp)
    77e0:	dd800615 	stw	r22,24(sp)
    77e4:	dd400515 	stw	r21,20(sp)
    77e8:	dd000415 	stw	r20,16(sp)
    77ec:	dcc00315 	stw	r19,12(sp)
    77f0:	dc800215 	stw	r18,8(sp)
    77f4:	dc400115 	stw	r17,4(sp)
    77f8:	dc000015 	stw	r16,0(sp)
    77fc:	18ddf104 	addi	r3,r3,30660
    7800:	24000117 	ldw	r16,4(r4)
    7804:	20c00f15 	stw	r3,60(r4)
    7808:	2080bb04 	addi	r2,r4,748
    780c:	00c000c4 	movi	r3,3
    7810:	20c0b915 	stw	r3,740(r4)
    7814:	2080ba15 	stw	r2,744(r4)
    7818:	2000b815 	stw	zero,736(r4)
    781c:	05c00204 	movi	r23,8
    7820:	00800104 	movi	r2,4
    7824:	2025883a 	mov	r18,r4
    7828:	b80d883a 	mov	r6,r23
    782c:	81001704 	addi	r4,r16,92
    7830:	000b883a 	mov	r5,zero
    7834:	80000015 	stw	zero,0(r16)
    7838:	80000115 	stw	zero,4(r16)
    783c:	80000215 	stw	zero,8(r16)
    7840:	8080030d 	sth	r2,12(r16)
    7844:	80001915 	stw	zero,100(r16)
    7848:	8000038d 	sth	zero,14(r16)
    784c:	80000415 	stw	zero,16(r16)
    7850:	80000515 	stw	zero,20(r16)
    7854:	80000615 	stw	zero,24(r16)
    7858:	00094780 	call	9478 <memset>
    785c:	05800074 	movhi	r22,1
    7860:	94400217 	ldw	r17,8(r18)
    7864:	05400074 	movhi	r21,1
    7868:	05000074 	movhi	r20,1
    786c:	04c00074 	movhi	r19,1
    7870:	b5ab7b04 	addi	r22,r22,-21012
    7874:	ad6b9204 	addi	r21,r21,-20920
    7878:	a52bb104 	addi	r20,r20,-20796
    787c:	9cebc804 	addi	r19,r19,-20704
    7880:	85800815 	stw	r22,32(r16)
    7884:	85400915 	stw	r21,36(r16)
    7888:	85000a15 	stw	r20,40(r16)
    788c:	84c00b15 	stw	r19,44(r16)
    7890:	84000715 	stw	r16,28(r16)
    7894:	00800284 	movi	r2,10
    7898:	8880030d 	sth	r2,12(r17)
    789c:	00800044 	movi	r2,1
    78a0:	b80d883a 	mov	r6,r23
    78a4:	89001704 	addi	r4,r17,92
    78a8:	000b883a 	mov	r5,zero
    78ac:	88000015 	stw	zero,0(r17)
    78b0:	88000115 	stw	zero,4(r17)
    78b4:	88000215 	stw	zero,8(r17)
    78b8:	88001915 	stw	zero,100(r17)
    78bc:	8880038d 	sth	r2,14(r17)
    78c0:	88000415 	stw	zero,16(r17)
    78c4:	88000515 	stw	zero,20(r17)
    78c8:	88000615 	stw	zero,24(r17)
    78cc:	00094780 	call	9478 <memset>
    78d0:	94000317 	ldw	r16,12(r18)
    78d4:	00800484 	movi	r2,18
    78d8:	8c400715 	stw	r17,28(r17)
    78dc:	8d800815 	stw	r22,32(r17)
    78e0:	8d400915 	stw	r21,36(r17)
    78e4:	8d000a15 	stw	r20,40(r17)
    78e8:	8cc00b15 	stw	r19,44(r17)
    78ec:	8080030d 	sth	r2,12(r16)
    78f0:	00800084 	movi	r2,2
    78f4:	80000015 	stw	zero,0(r16)
    78f8:	80000115 	stw	zero,4(r16)
    78fc:	80000215 	stw	zero,8(r16)
    7900:	80001915 	stw	zero,100(r16)
    7904:	8080038d 	sth	r2,14(r16)
    7908:	80000415 	stw	zero,16(r16)
    790c:	80000515 	stw	zero,20(r16)
    7910:	80000615 	stw	zero,24(r16)
    7914:	b80d883a 	mov	r6,r23
    7918:	000b883a 	mov	r5,zero
    791c:	81001704 	addi	r4,r16,92
    7920:	00094780 	call	9478 <memset>
    7924:	00800044 	movi	r2,1
    7928:	84000715 	stw	r16,28(r16)
    792c:	85800815 	stw	r22,32(r16)
    7930:	85400915 	stw	r21,36(r16)
    7934:	85000a15 	stw	r20,40(r16)
    7938:	84c00b15 	stw	r19,44(r16)
    793c:	90800e15 	stw	r2,56(r18)
    7940:	dfc00817 	ldw	ra,32(sp)
    7944:	ddc00717 	ldw	r23,28(sp)
    7948:	dd800617 	ldw	r22,24(sp)
    794c:	dd400517 	ldw	r21,20(sp)
    7950:	dd000417 	ldw	r20,16(sp)
    7954:	dcc00317 	ldw	r19,12(sp)
    7958:	dc800217 	ldw	r18,8(sp)
    795c:	dc400117 	ldw	r17,4(sp)
    7960:	dc000017 	ldw	r16,0(sp)
    7964:	dec00904 	addi	sp,sp,36
    7968:	f800283a 	ret

0000796c <__fp_lock>:
    796c:	0005883a 	mov	r2,zero
    7970:	f800283a 	ret

00007974 <__sfmoreglue>:
    7974:	defffc04 	addi	sp,sp,-16
    7978:	dc800215 	stw	r18,8(sp)
    797c:	2825883a 	mov	r18,r5
    7980:	dc000015 	stw	r16,0(sp)
    7984:	01401a04 	movi	r5,104
    7988:	2021883a 	mov	r16,r4
    798c:	913fffc4 	addi	r4,r18,-1
    7990:	dfc00315 	stw	ra,12(sp)
    7994:	dc400115 	stw	r17,4(sp)
    7998:	0000ef80 	call	ef8 <__mulsi3>
    799c:	8009883a 	mov	r4,r16
    79a0:	11401d04 	addi	r5,r2,116
    79a4:	1023883a 	mov	r17,r2
    79a8:	00088e40 	call	88e4 <_malloc_r>
    79ac:	1021883a 	mov	r16,r2
    79b0:	10000726 	beq	r2,zero,79d0 <__sfmoreglue+0x5c>
    79b4:	11000304 	addi	r4,r2,12
    79b8:	10000015 	stw	zero,0(r2)
    79bc:	14800115 	stw	r18,4(r2)
    79c0:	11000215 	stw	r4,8(r2)
    79c4:	89801a04 	addi	r6,r17,104
    79c8:	000b883a 	mov	r5,zero
    79cc:	00094780 	call	9478 <memset>
    79d0:	8005883a 	mov	r2,r16
    79d4:	dfc00317 	ldw	ra,12(sp)
    79d8:	dc800217 	ldw	r18,8(sp)
    79dc:	dc400117 	ldw	r17,4(sp)
    79e0:	dc000017 	ldw	r16,0(sp)
    79e4:	dec00404 	addi	sp,sp,16
    79e8:	f800283a 	ret

000079ec <__sfp>:
    79ec:	defffb04 	addi	sp,sp,-20
    79f0:	dc000015 	stw	r16,0(sp)
    79f4:	040000b4 	movhi	r16,2
    79f8:	84224804 	addi	r16,r16,-30432
    79fc:	dcc00315 	stw	r19,12(sp)
    7a00:	2027883a 	mov	r19,r4
    7a04:	81000017 	ldw	r4,0(r16)
    7a08:	dfc00415 	stw	ra,16(sp)
    7a0c:	dc800215 	stw	r18,8(sp)
    7a10:	20800e17 	ldw	r2,56(r4)
    7a14:	dc400115 	stw	r17,4(sp)
    7a18:	1000021e 	bne	r2,zero,7a24 <__sfp+0x38>
    7a1c:	00077d00 	call	77d0 <__sinit.part.1>
    7a20:	81000017 	ldw	r4,0(r16)
    7a24:	2480b804 	addi	r18,r4,736
    7a28:	047fffc4 	movi	r17,-1
    7a2c:	91000117 	ldw	r4,4(r18)
    7a30:	94000217 	ldw	r16,8(r18)
    7a34:	213fffc4 	addi	r4,r4,-1
    7a38:	20000a16 	blt	r4,zero,7a64 <__sfp+0x78>
    7a3c:	8080030f 	ldh	r2,12(r16)
    7a40:	10000c26 	beq	r2,zero,7a74 <__sfp+0x88>
    7a44:	80c01d04 	addi	r3,r16,116
    7a48:	00000206 	br	7a54 <__sfp+0x68>
    7a4c:	18bfe60f 	ldh	r2,-104(r3)
    7a50:	10000826 	beq	r2,zero,7a74 <__sfp+0x88>
    7a54:	213fffc4 	addi	r4,r4,-1
    7a58:	1c3ffd04 	addi	r16,r3,-12
    7a5c:	18c01a04 	addi	r3,r3,104
    7a60:	247ffa1e 	bne	r4,r17,7a4c <__alt_mem_Onchip_SRAM+0xf8007a4c>
    7a64:	90800017 	ldw	r2,0(r18)
    7a68:	10001d26 	beq	r2,zero,7ae0 <__sfp+0xf4>
    7a6c:	1025883a 	mov	r18,r2
    7a70:	003fee06 	br	7a2c <__alt_mem_Onchip_SRAM+0xf8007a2c>
    7a74:	00bfffc4 	movi	r2,-1
    7a78:	8080038d 	sth	r2,14(r16)
    7a7c:	00800044 	movi	r2,1
    7a80:	8080030d 	sth	r2,12(r16)
    7a84:	80001915 	stw	zero,100(r16)
    7a88:	80000015 	stw	zero,0(r16)
    7a8c:	80000215 	stw	zero,8(r16)
    7a90:	80000115 	stw	zero,4(r16)
    7a94:	80000415 	stw	zero,16(r16)
    7a98:	80000515 	stw	zero,20(r16)
    7a9c:	80000615 	stw	zero,24(r16)
    7aa0:	01800204 	movi	r6,8
    7aa4:	000b883a 	mov	r5,zero
    7aa8:	81001704 	addi	r4,r16,92
    7aac:	00094780 	call	9478 <memset>
    7ab0:	8005883a 	mov	r2,r16
    7ab4:	80000c15 	stw	zero,48(r16)
    7ab8:	80000d15 	stw	zero,52(r16)
    7abc:	80001115 	stw	zero,68(r16)
    7ac0:	80001215 	stw	zero,72(r16)
    7ac4:	dfc00417 	ldw	ra,16(sp)
    7ac8:	dcc00317 	ldw	r19,12(sp)
    7acc:	dc800217 	ldw	r18,8(sp)
    7ad0:	dc400117 	ldw	r17,4(sp)
    7ad4:	dc000017 	ldw	r16,0(sp)
    7ad8:	dec00504 	addi	sp,sp,20
    7adc:	f800283a 	ret
    7ae0:	01400104 	movi	r5,4
    7ae4:	9809883a 	mov	r4,r19
    7ae8:	00079740 	call	7974 <__sfmoreglue>
    7aec:	90800015 	stw	r2,0(r18)
    7af0:	103fde1e 	bne	r2,zero,7a6c <__alt_mem_Onchip_SRAM+0xf8007a6c>
    7af4:	00800304 	movi	r2,12
    7af8:	98800015 	stw	r2,0(r19)
    7afc:	0005883a 	mov	r2,zero
    7b00:	003ff006 	br	7ac4 <__alt_mem_Onchip_SRAM+0xf8007ac4>

00007b04 <_cleanup>:
    7b04:	008000b4 	movhi	r2,2
    7b08:	10a24804 	addi	r2,r2,-30432
    7b0c:	11000017 	ldw	r4,0(r2)
    7b10:	01400074 	movhi	r5,1
    7b14:	2977d504 	addi	r5,r5,-8364
    7b18:	000852c1 	jmpi	852c <_fwalk_reent>

00007b1c <__sinit>:
    7b1c:	20800e17 	ldw	r2,56(r4)
    7b20:	10000126 	beq	r2,zero,7b28 <__sinit+0xc>
    7b24:	f800283a 	ret
    7b28:	00077d01 	jmpi	77d0 <__sinit.part.1>

00007b2c <__sfp_lock_acquire>:
    7b2c:	f800283a 	ret

00007b30 <__sfp_lock_release>:
    7b30:	f800283a 	ret

00007b34 <__sinit_lock_acquire>:
    7b34:	f800283a 	ret

00007b38 <__sinit_lock_release>:
    7b38:	f800283a 	ret

00007b3c <__fp_lock_all>:
    7b3c:	008000b4 	movhi	r2,2
    7b40:	10a24904 	addi	r2,r2,-30428
    7b44:	11000017 	ldw	r4,0(r2)
    7b48:	01400034 	movhi	r5,0
    7b4c:	295e5b04 	addi	r5,r5,31084
    7b50:	00084681 	jmpi	8468 <_fwalk>

00007b54 <__fp_unlock_all>:
    7b54:	008000b4 	movhi	r2,2
    7b58:	10a24904 	addi	r2,r2,-30428
    7b5c:	11000017 	ldw	r4,0(r2)
    7b60:	01400034 	movhi	r5,0
    7b64:	295def04 	addi	r5,r5,30652
    7b68:	00084681 	jmpi	8468 <_fwalk>

00007b6c <_malloc_trim_r>:
    7b6c:	defffb04 	addi	sp,sp,-20
    7b70:	dcc00315 	stw	r19,12(sp)
    7b74:	04c00074 	movhi	r19,1
    7b78:	dc800215 	stw	r18,8(sp)
    7b7c:	dc400115 	stw	r17,4(sp)
    7b80:	dc000015 	stw	r16,0(sp)
    7b84:	dfc00415 	stw	ra,16(sp)
    7b88:	2821883a 	mov	r16,r5
    7b8c:	9cdc9104 	addi	r19,r19,29252
    7b90:	2025883a 	mov	r18,r4
    7b94:	00122540 	call	12254 <__malloc_lock>
    7b98:	98800217 	ldw	r2,8(r19)
    7b9c:	14400117 	ldw	r17,4(r2)
    7ba0:	00bfff04 	movi	r2,-4
    7ba4:	88a2703a 	and	r17,r17,r2
    7ba8:	8c21c83a 	sub	r16,r17,r16
    7bac:	8403fbc4 	addi	r16,r16,4079
    7bb0:	8020d33a 	srli	r16,r16,12
    7bb4:	0083ffc4 	movi	r2,4095
    7bb8:	843fffc4 	addi	r16,r16,-1
    7bbc:	8020933a 	slli	r16,r16,12
    7bc0:	1400060e 	bge	r2,r16,7bdc <_malloc_trim_r+0x70>
    7bc4:	000b883a 	mov	r5,zero
    7bc8:	9009883a 	mov	r4,r18
    7bcc:	000ad980 	call	ad98 <_sbrk_r>
    7bd0:	98c00217 	ldw	r3,8(r19)
    7bd4:	1c47883a 	add	r3,r3,r17
    7bd8:	10c00a26 	beq	r2,r3,7c04 <_malloc_trim_r+0x98>
    7bdc:	9009883a 	mov	r4,r18
    7be0:	00122780 	call	12278 <__malloc_unlock>
    7be4:	0005883a 	mov	r2,zero
    7be8:	dfc00417 	ldw	ra,16(sp)
    7bec:	dcc00317 	ldw	r19,12(sp)
    7bf0:	dc800217 	ldw	r18,8(sp)
    7bf4:	dc400117 	ldw	r17,4(sp)
    7bf8:	dc000017 	ldw	r16,0(sp)
    7bfc:	dec00504 	addi	sp,sp,20
    7c00:	f800283a 	ret
    7c04:	040bc83a 	sub	r5,zero,r16
    7c08:	9009883a 	mov	r4,r18
    7c0c:	000ad980 	call	ad98 <_sbrk_r>
    7c10:	00ffffc4 	movi	r3,-1
    7c14:	10c00d26 	beq	r2,r3,7c4c <_malloc_trim_r+0xe0>
    7c18:	00c000b4 	movhi	r3,2
    7c1c:	18e96004 	addi	r3,r3,-23168
    7c20:	18800017 	ldw	r2,0(r3)
    7c24:	99000217 	ldw	r4,8(r19)
    7c28:	8c23c83a 	sub	r17,r17,r16
    7c2c:	8c400054 	ori	r17,r17,1
    7c30:	1421c83a 	sub	r16,r2,r16
    7c34:	24400115 	stw	r17,4(r4)
    7c38:	9009883a 	mov	r4,r18
    7c3c:	1c000015 	stw	r16,0(r3)
    7c40:	00122780 	call	12278 <__malloc_unlock>
    7c44:	00800044 	movi	r2,1
    7c48:	003fe706 	br	7be8 <__alt_mem_Onchip_SRAM+0xf8007be8>
    7c4c:	000b883a 	mov	r5,zero
    7c50:	9009883a 	mov	r4,r18
    7c54:	000ad980 	call	ad98 <_sbrk_r>
    7c58:	99000217 	ldw	r4,8(r19)
    7c5c:	014003c4 	movi	r5,15
    7c60:	1107c83a 	sub	r3,r2,r4
    7c64:	28ffdd0e 	bge	r5,r3,7bdc <__alt_mem_Onchip_SRAM+0xf8007bdc>
    7c68:	014000b4 	movhi	r5,2
    7c6c:	29624b04 	addi	r5,r5,-30420
    7c70:	29400017 	ldw	r5,0(r5)
    7c74:	18c00054 	ori	r3,r3,1
    7c78:	20c00115 	stw	r3,4(r4)
    7c7c:	00c000b4 	movhi	r3,2
    7c80:	1145c83a 	sub	r2,r2,r5
    7c84:	18e96004 	addi	r3,r3,-23168
    7c88:	18800015 	stw	r2,0(r3)
    7c8c:	003fd306 	br	7bdc <__alt_mem_Onchip_SRAM+0xf8007bdc>

00007c90 <_free_r>:
    7c90:	28004126 	beq	r5,zero,7d98 <_free_r+0x108>
    7c94:	defffd04 	addi	sp,sp,-12
    7c98:	dc400115 	stw	r17,4(sp)
    7c9c:	dc000015 	stw	r16,0(sp)
    7ca0:	2023883a 	mov	r17,r4
    7ca4:	2821883a 	mov	r16,r5
    7ca8:	dfc00215 	stw	ra,8(sp)
    7cac:	00122540 	call	12254 <__malloc_lock>
    7cb0:	81ffff17 	ldw	r7,-4(r16)
    7cb4:	00bfff84 	movi	r2,-2
    7cb8:	01000074 	movhi	r4,1
    7cbc:	81bffe04 	addi	r6,r16,-8
    7cc0:	3884703a 	and	r2,r7,r2
    7cc4:	211c9104 	addi	r4,r4,29252
    7cc8:	308b883a 	add	r5,r6,r2
    7ccc:	2a400117 	ldw	r9,4(r5)
    7cd0:	22000217 	ldw	r8,8(r4)
    7cd4:	00ffff04 	movi	r3,-4
    7cd8:	48c6703a 	and	r3,r9,r3
    7cdc:	2a005726 	beq	r5,r8,7e3c <_free_r+0x1ac>
    7ce0:	28c00115 	stw	r3,4(r5)
    7ce4:	39c0004c 	andi	r7,r7,1
    7ce8:	3800091e 	bne	r7,zero,7d10 <_free_r+0x80>
    7cec:	823ffe17 	ldw	r8,-8(r16)
    7cf0:	22400204 	addi	r9,r4,8
    7cf4:	320dc83a 	sub	r6,r6,r8
    7cf8:	31c00217 	ldw	r7,8(r6)
    7cfc:	1205883a 	add	r2,r2,r8
    7d00:	3a406526 	beq	r7,r9,7e98 <_free_r+0x208>
    7d04:	32000317 	ldw	r8,12(r6)
    7d08:	3a000315 	stw	r8,12(r7)
    7d0c:	41c00215 	stw	r7,8(r8)
    7d10:	28cf883a 	add	r7,r5,r3
    7d14:	39c00117 	ldw	r7,4(r7)
    7d18:	39c0004c 	andi	r7,r7,1
    7d1c:	38003a26 	beq	r7,zero,7e08 <_free_r+0x178>
    7d20:	10c00054 	ori	r3,r2,1
    7d24:	30c00115 	stw	r3,4(r6)
    7d28:	3087883a 	add	r3,r6,r2
    7d2c:	18800015 	stw	r2,0(r3)
    7d30:	00c07fc4 	movi	r3,511
    7d34:	18801936 	bltu	r3,r2,7d9c <_free_r+0x10c>
    7d38:	1004d0fa 	srli	r2,r2,3
    7d3c:	01c00044 	movi	r7,1
    7d40:	21400117 	ldw	r5,4(r4)
    7d44:	10c00044 	addi	r3,r2,1
    7d48:	18c7883a 	add	r3,r3,r3
    7d4c:	1005d0ba 	srai	r2,r2,2
    7d50:	18c7883a 	add	r3,r3,r3
    7d54:	18c7883a 	add	r3,r3,r3
    7d58:	1907883a 	add	r3,r3,r4
    7d5c:	3884983a 	sll	r2,r7,r2
    7d60:	19c00017 	ldw	r7,0(r3)
    7d64:	1a3ffe04 	addi	r8,r3,-8
    7d68:	1144b03a 	or	r2,r2,r5
    7d6c:	32000315 	stw	r8,12(r6)
    7d70:	31c00215 	stw	r7,8(r6)
    7d74:	20800115 	stw	r2,4(r4)
    7d78:	19800015 	stw	r6,0(r3)
    7d7c:	39800315 	stw	r6,12(r7)
    7d80:	8809883a 	mov	r4,r17
    7d84:	dfc00217 	ldw	ra,8(sp)
    7d88:	dc400117 	ldw	r17,4(sp)
    7d8c:	dc000017 	ldw	r16,0(sp)
    7d90:	dec00304 	addi	sp,sp,12
    7d94:	00122781 	jmpi	12278 <__malloc_unlock>
    7d98:	f800283a 	ret
    7d9c:	100ad27a 	srli	r5,r2,9
    7da0:	00c00104 	movi	r3,4
    7da4:	19404a36 	bltu	r3,r5,7ed0 <_free_r+0x240>
    7da8:	100ad1ba 	srli	r5,r2,6
    7dac:	28c00e44 	addi	r3,r5,57
    7db0:	18c7883a 	add	r3,r3,r3
    7db4:	29400e04 	addi	r5,r5,56
    7db8:	18c7883a 	add	r3,r3,r3
    7dbc:	18c7883a 	add	r3,r3,r3
    7dc0:	1909883a 	add	r4,r3,r4
    7dc4:	20c00017 	ldw	r3,0(r4)
    7dc8:	01c00074 	movhi	r7,1
    7dcc:	213ffe04 	addi	r4,r4,-8
    7dd0:	39dc9104 	addi	r7,r7,29252
    7dd4:	20c04426 	beq	r4,r3,7ee8 <_free_r+0x258>
    7dd8:	01ffff04 	movi	r7,-4
    7ddc:	19400117 	ldw	r5,4(r3)
    7de0:	29ca703a 	and	r5,r5,r7
    7de4:	1140022e 	bgeu	r2,r5,7df0 <_free_r+0x160>
    7de8:	18c00217 	ldw	r3,8(r3)
    7dec:	20fffb1e 	bne	r4,r3,7ddc <__alt_mem_Onchip_SRAM+0xf8007ddc>
    7df0:	19000317 	ldw	r4,12(r3)
    7df4:	31000315 	stw	r4,12(r6)
    7df8:	30c00215 	stw	r3,8(r6)
    7dfc:	21800215 	stw	r6,8(r4)
    7e00:	19800315 	stw	r6,12(r3)
    7e04:	003fde06 	br	7d80 <__alt_mem_Onchip_SRAM+0xf8007d80>
    7e08:	29c00217 	ldw	r7,8(r5)
    7e0c:	10c5883a 	add	r2,r2,r3
    7e10:	00c00074 	movhi	r3,1
    7e14:	18dc9304 	addi	r3,r3,29260
    7e18:	38c03b26 	beq	r7,r3,7f08 <_free_r+0x278>
    7e1c:	2a000317 	ldw	r8,12(r5)
    7e20:	11400054 	ori	r5,r2,1
    7e24:	3087883a 	add	r3,r6,r2
    7e28:	3a000315 	stw	r8,12(r7)
    7e2c:	41c00215 	stw	r7,8(r8)
    7e30:	31400115 	stw	r5,4(r6)
    7e34:	18800015 	stw	r2,0(r3)
    7e38:	003fbd06 	br	7d30 <__alt_mem_Onchip_SRAM+0xf8007d30>
    7e3c:	39c0004c 	andi	r7,r7,1
    7e40:	10c5883a 	add	r2,r2,r3
    7e44:	3800071e 	bne	r7,zero,7e64 <_free_r+0x1d4>
    7e48:	81fffe17 	ldw	r7,-8(r16)
    7e4c:	31cdc83a 	sub	r6,r6,r7
    7e50:	30c00317 	ldw	r3,12(r6)
    7e54:	31400217 	ldw	r5,8(r6)
    7e58:	11c5883a 	add	r2,r2,r7
    7e5c:	28c00315 	stw	r3,12(r5)
    7e60:	19400215 	stw	r5,8(r3)
    7e64:	10c00054 	ori	r3,r2,1
    7e68:	30c00115 	stw	r3,4(r6)
    7e6c:	00c000b4 	movhi	r3,2
    7e70:	18e24c04 	addi	r3,r3,-30416
    7e74:	18c00017 	ldw	r3,0(r3)
    7e78:	21800215 	stw	r6,8(r4)
    7e7c:	10ffc036 	bltu	r2,r3,7d80 <__alt_mem_Onchip_SRAM+0xf8007d80>
    7e80:	008000b4 	movhi	r2,2
    7e84:	10a95404 	addi	r2,r2,-23216
    7e88:	11400017 	ldw	r5,0(r2)
    7e8c:	8809883a 	mov	r4,r17
    7e90:	0007b6c0 	call	7b6c <_malloc_trim_r>
    7e94:	003fba06 	br	7d80 <__alt_mem_Onchip_SRAM+0xf8007d80>
    7e98:	28c9883a 	add	r4,r5,r3
    7e9c:	21000117 	ldw	r4,4(r4)
    7ea0:	2100004c 	andi	r4,r4,1
    7ea4:	2000391e 	bne	r4,zero,7f8c <_free_r+0x2fc>
    7ea8:	29c00217 	ldw	r7,8(r5)
    7eac:	29000317 	ldw	r4,12(r5)
    7eb0:	1885883a 	add	r2,r3,r2
    7eb4:	10c00054 	ori	r3,r2,1
    7eb8:	39000315 	stw	r4,12(r7)
    7ebc:	21c00215 	stw	r7,8(r4)
    7ec0:	30c00115 	stw	r3,4(r6)
    7ec4:	308d883a 	add	r6,r6,r2
    7ec8:	30800015 	stw	r2,0(r6)
    7ecc:	003fac06 	br	7d80 <__alt_mem_Onchip_SRAM+0xf8007d80>
    7ed0:	00c00504 	movi	r3,20
    7ed4:	19401536 	bltu	r3,r5,7f2c <_free_r+0x29c>
    7ed8:	28c01704 	addi	r3,r5,92
    7edc:	18c7883a 	add	r3,r3,r3
    7ee0:	294016c4 	addi	r5,r5,91
    7ee4:	003fb406 	br	7db8 <__alt_mem_Onchip_SRAM+0xf8007db8>
    7ee8:	280bd0ba 	srai	r5,r5,2
    7eec:	00c00044 	movi	r3,1
    7ef0:	38800117 	ldw	r2,4(r7)
    7ef4:	194a983a 	sll	r5,r3,r5
    7ef8:	2007883a 	mov	r3,r4
    7efc:	2884b03a 	or	r2,r5,r2
    7f00:	38800115 	stw	r2,4(r7)
    7f04:	003fbb06 	br	7df4 <__alt_mem_Onchip_SRAM+0xf8007df4>
    7f08:	21800515 	stw	r6,20(r4)
    7f0c:	21800415 	stw	r6,16(r4)
    7f10:	10c00054 	ori	r3,r2,1
    7f14:	31c00315 	stw	r7,12(r6)
    7f18:	31c00215 	stw	r7,8(r6)
    7f1c:	30c00115 	stw	r3,4(r6)
    7f20:	308d883a 	add	r6,r6,r2
    7f24:	30800015 	stw	r2,0(r6)
    7f28:	003f9506 	br	7d80 <__alt_mem_Onchip_SRAM+0xf8007d80>
    7f2c:	00c01504 	movi	r3,84
    7f30:	19400536 	bltu	r3,r5,7f48 <_free_r+0x2b8>
    7f34:	100ad33a 	srli	r5,r2,12
    7f38:	28c01bc4 	addi	r3,r5,111
    7f3c:	18c7883a 	add	r3,r3,r3
    7f40:	29401b84 	addi	r5,r5,110
    7f44:	003f9c06 	br	7db8 <__alt_mem_Onchip_SRAM+0xf8007db8>
    7f48:	00c05504 	movi	r3,340
    7f4c:	19400536 	bltu	r3,r5,7f64 <_free_r+0x2d4>
    7f50:	100ad3fa 	srli	r5,r2,15
    7f54:	28c01e04 	addi	r3,r5,120
    7f58:	18c7883a 	add	r3,r3,r3
    7f5c:	29401dc4 	addi	r5,r5,119
    7f60:	003f9506 	br	7db8 <__alt_mem_Onchip_SRAM+0xf8007db8>
    7f64:	00c15504 	movi	r3,1364
    7f68:	19400536 	bltu	r3,r5,7f80 <_free_r+0x2f0>
    7f6c:	100ad4ba 	srli	r5,r2,18
    7f70:	28c01f44 	addi	r3,r5,125
    7f74:	18c7883a 	add	r3,r3,r3
    7f78:	29401f04 	addi	r5,r5,124
    7f7c:	003f8e06 	br	7db8 <__alt_mem_Onchip_SRAM+0xf8007db8>
    7f80:	00c03f84 	movi	r3,254
    7f84:	01401f84 	movi	r5,126
    7f88:	003f8b06 	br	7db8 <__alt_mem_Onchip_SRAM+0xf8007db8>
    7f8c:	10c00054 	ori	r3,r2,1
    7f90:	30c00115 	stw	r3,4(r6)
    7f94:	308d883a 	add	r6,r6,r2
    7f98:	30800015 	stw	r2,0(r6)
    7f9c:	003f7806 	br	7d80 <__alt_mem_Onchip_SRAM+0xf8007d80>

00007fa0 <__sfvwrite_r>:
    7fa0:	30800217 	ldw	r2,8(r6)
    7fa4:	10006726 	beq	r2,zero,8144 <__sfvwrite_r+0x1a4>
    7fa8:	28c0030b 	ldhu	r3,12(r5)
    7fac:	defff404 	addi	sp,sp,-48
    7fb0:	dd400715 	stw	r21,28(sp)
    7fb4:	dd000615 	stw	r20,24(sp)
    7fb8:	dc000215 	stw	r16,8(sp)
    7fbc:	dfc00b15 	stw	ra,44(sp)
    7fc0:	df000a15 	stw	fp,40(sp)
    7fc4:	ddc00915 	stw	r23,36(sp)
    7fc8:	dd800815 	stw	r22,32(sp)
    7fcc:	dcc00515 	stw	r19,20(sp)
    7fd0:	dc800415 	stw	r18,16(sp)
    7fd4:	dc400315 	stw	r17,12(sp)
    7fd8:	1880020c 	andi	r2,r3,8
    7fdc:	2821883a 	mov	r16,r5
    7fe0:	202b883a 	mov	r21,r4
    7fe4:	3029883a 	mov	r20,r6
    7fe8:	10002726 	beq	r2,zero,8088 <__sfvwrite_r+0xe8>
    7fec:	28800417 	ldw	r2,16(r5)
    7ff0:	10002526 	beq	r2,zero,8088 <__sfvwrite_r+0xe8>
    7ff4:	1880008c 	andi	r2,r3,2
    7ff8:	a4400017 	ldw	r17,0(r20)
    7ffc:	10002a26 	beq	r2,zero,80a8 <__sfvwrite_r+0x108>
    8000:	05a00034 	movhi	r22,32768
    8004:	0027883a 	mov	r19,zero
    8008:	0025883a 	mov	r18,zero
    800c:	b5bf0004 	addi	r22,r22,-1024
    8010:	980d883a 	mov	r6,r19
    8014:	a809883a 	mov	r4,r21
    8018:	90004626 	beq	r18,zero,8134 <__sfvwrite_r+0x194>
    801c:	900f883a 	mov	r7,r18
    8020:	b480022e 	bgeu	r22,r18,802c <__sfvwrite_r+0x8c>
    8024:	01e00034 	movhi	r7,32768
    8028:	39ff0004 	addi	r7,r7,-1024
    802c:	80800917 	ldw	r2,36(r16)
    8030:	81400717 	ldw	r5,28(r16)
    8034:	103ee83a 	callr	r2
    8038:	00805a0e 	bge	zero,r2,81a4 <__sfvwrite_r+0x204>
    803c:	a0c00217 	ldw	r3,8(r20)
    8040:	98a7883a 	add	r19,r19,r2
    8044:	90a5c83a 	sub	r18,r18,r2
    8048:	1885c83a 	sub	r2,r3,r2
    804c:	a0800215 	stw	r2,8(r20)
    8050:	103fef1e 	bne	r2,zero,8010 <__alt_mem_Onchip_SRAM+0xf8008010>
    8054:	0005883a 	mov	r2,zero
    8058:	dfc00b17 	ldw	ra,44(sp)
    805c:	df000a17 	ldw	fp,40(sp)
    8060:	ddc00917 	ldw	r23,36(sp)
    8064:	dd800817 	ldw	r22,32(sp)
    8068:	dd400717 	ldw	r21,28(sp)
    806c:	dd000617 	ldw	r20,24(sp)
    8070:	dcc00517 	ldw	r19,20(sp)
    8074:	dc800417 	ldw	r18,16(sp)
    8078:	dc400317 	ldw	r17,12(sp)
    807c:	dc000217 	ldw	r16,8(sp)
    8080:	dec00c04 	addi	sp,sp,48
    8084:	f800283a 	ret
    8088:	800b883a 	mov	r5,r16
    808c:	a809883a 	mov	r4,r21
    8090:	0005b100 	call	5b10 <__swsetup_r>
    8094:	1000ee1e 	bne	r2,zero,8450 <__sfvwrite_r+0x4b0>
    8098:	80c0030b 	ldhu	r3,12(r16)
    809c:	a4400017 	ldw	r17,0(r20)
    80a0:	1880008c 	andi	r2,r3,2
    80a4:	103fd61e 	bne	r2,zero,8000 <__alt_mem_Onchip_SRAM+0xf8008000>
    80a8:	1880004c 	andi	r2,r3,1
    80ac:	1000421e 	bne	r2,zero,81b8 <__sfvwrite_r+0x218>
    80b0:	0039883a 	mov	fp,zero
    80b4:	0025883a 	mov	r18,zero
    80b8:	90001a26 	beq	r18,zero,8124 <__sfvwrite_r+0x184>
    80bc:	1880800c 	andi	r2,r3,512
    80c0:	84c00217 	ldw	r19,8(r16)
    80c4:	10002126 	beq	r2,zero,814c <__sfvwrite_r+0x1ac>
    80c8:	982f883a 	mov	r23,r19
    80cc:	94c09636 	bltu	r18,r19,8328 <__sfvwrite_r+0x388>
    80d0:	1881200c 	andi	r2,r3,1152
    80d4:	1000a11e 	bne	r2,zero,835c <__sfvwrite_r+0x3bc>
    80d8:	81000017 	ldw	r4,0(r16)
    80dc:	b80d883a 	mov	r6,r23
    80e0:	e00b883a 	mov	r5,fp
    80e4:	000931c0 	call	931c <memmove>
    80e8:	80c00217 	ldw	r3,8(r16)
    80ec:	81000017 	ldw	r4,0(r16)
    80f0:	9005883a 	mov	r2,r18
    80f4:	1ce7c83a 	sub	r19,r3,r19
    80f8:	25cf883a 	add	r7,r4,r23
    80fc:	84c00215 	stw	r19,8(r16)
    8100:	81c00015 	stw	r7,0(r16)
    8104:	a0c00217 	ldw	r3,8(r20)
    8108:	e0b9883a 	add	fp,fp,r2
    810c:	90a5c83a 	sub	r18,r18,r2
    8110:	18a7c83a 	sub	r19,r3,r2
    8114:	a4c00215 	stw	r19,8(r20)
    8118:	983fce26 	beq	r19,zero,8054 <__alt_mem_Onchip_SRAM+0xf8008054>
    811c:	80c0030b 	ldhu	r3,12(r16)
    8120:	903fe61e 	bne	r18,zero,80bc <__alt_mem_Onchip_SRAM+0xf80080bc>
    8124:	8f000017 	ldw	fp,0(r17)
    8128:	8c800117 	ldw	r18,4(r17)
    812c:	8c400204 	addi	r17,r17,8
    8130:	003fe106 	br	80b8 <__alt_mem_Onchip_SRAM+0xf80080b8>
    8134:	8cc00017 	ldw	r19,0(r17)
    8138:	8c800117 	ldw	r18,4(r17)
    813c:	8c400204 	addi	r17,r17,8
    8140:	003fb306 	br	8010 <__alt_mem_Onchip_SRAM+0xf8008010>
    8144:	0005883a 	mov	r2,zero
    8148:	f800283a 	ret
    814c:	81000017 	ldw	r4,0(r16)
    8150:	80800417 	ldw	r2,16(r16)
    8154:	11005a36 	bltu	r2,r4,82c0 <__sfvwrite_r+0x320>
    8158:	85c00517 	ldw	r23,20(r16)
    815c:	95c05836 	bltu	r18,r23,82c0 <__sfvwrite_r+0x320>
    8160:	00a00034 	movhi	r2,32768
    8164:	10bfffc4 	addi	r2,r2,-1
    8168:	9009883a 	mov	r4,r18
    816c:	1480012e 	bgeu	r2,r18,8174 <__sfvwrite_r+0x1d4>
    8170:	1009883a 	mov	r4,r2
    8174:	b80b883a 	mov	r5,r23
    8178:	0000d440 	call	d44 <__divsi3>
    817c:	b80b883a 	mov	r5,r23
    8180:	1009883a 	mov	r4,r2
    8184:	0000ef80 	call	ef8 <__mulsi3>
    8188:	81400717 	ldw	r5,28(r16)
    818c:	80c00917 	ldw	r3,36(r16)
    8190:	100f883a 	mov	r7,r2
    8194:	e00d883a 	mov	r6,fp
    8198:	a809883a 	mov	r4,r21
    819c:	183ee83a 	callr	r3
    81a0:	00bfd816 	blt	zero,r2,8104 <__alt_mem_Onchip_SRAM+0xf8008104>
    81a4:	8080030b 	ldhu	r2,12(r16)
    81a8:	10801014 	ori	r2,r2,64
    81ac:	8080030d 	sth	r2,12(r16)
    81b0:	00bfffc4 	movi	r2,-1
    81b4:	003fa806 	br	8058 <__alt_mem_Onchip_SRAM+0xf8008058>
    81b8:	0027883a 	mov	r19,zero
    81bc:	0011883a 	mov	r8,zero
    81c0:	0039883a 	mov	fp,zero
    81c4:	0025883a 	mov	r18,zero
    81c8:	90001f26 	beq	r18,zero,8248 <__sfvwrite_r+0x2a8>
    81cc:	40005a26 	beq	r8,zero,8338 <__sfvwrite_r+0x398>
    81d0:	982d883a 	mov	r22,r19
    81d4:	94c0012e 	bgeu	r18,r19,81dc <__sfvwrite_r+0x23c>
    81d8:	902d883a 	mov	r22,r18
    81dc:	81000017 	ldw	r4,0(r16)
    81e0:	80800417 	ldw	r2,16(r16)
    81e4:	b02f883a 	mov	r23,r22
    81e8:	81c00517 	ldw	r7,20(r16)
    81ec:	1100032e 	bgeu	r2,r4,81fc <__sfvwrite_r+0x25c>
    81f0:	80c00217 	ldw	r3,8(r16)
    81f4:	38c7883a 	add	r3,r7,r3
    81f8:	1d801816 	blt	r3,r22,825c <__sfvwrite_r+0x2bc>
    81fc:	b1c03e16 	blt	r22,r7,82f8 <__sfvwrite_r+0x358>
    8200:	80800917 	ldw	r2,36(r16)
    8204:	81400717 	ldw	r5,28(r16)
    8208:	e00d883a 	mov	r6,fp
    820c:	da000115 	stw	r8,4(sp)
    8210:	a809883a 	mov	r4,r21
    8214:	103ee83a 	callr	r2
    8218:	102f883a 	mov	r23,r2
    821c:	da000117 	ldw	r8,4(sp)
    8220:	00bfe00e 	bge	zero,r2,81a4 <__alt_mem_Onchip_SRAM+0xf80081a4>
    8224:	9de7c83a 	sub	r19,r19,r23
    8228:	98001f26 	beq	r19,zero,82a8 <__sfvwrite_r+0x308>
    822c:	a0800217 	ldw	r2,8(r20)
    8230:	e5f9883a 	add	fp,fp,r23
    8234:	95e5c83a 	sub	r18,r18,r23
    8238:	15efc83a 	sub	r23,r2,r23
    823c:	a5c00215 	stw	r23,8(r20)
    8240:	b83f8426 	beq	r23,zero,8054 <__alt_mem_Onchip_SRAM+0xf8008054>
    8244:	903fe11e 	bne	r18,zero,81cc <__alt_mem_Onchip_SRAM+0xf80081cc>
    8248:	8f000017 	ldw	fp,0(r17)
    824c:	8c800117 	ldw	r18,4(r17)
    8250:	0011883a 	mov	r8,zero
    8254:	8c400204 	addi	r17,r17,8
    8258:	003fdb06 	br	81c8 <__alt_mem_Onchip_SRAM+0xf80081c8>
    825c:	180d883a 	mov	r6,r3
    8260:	e00b883a 	mov	r5,fp
    8264:	da000115 	stw	r8,4(sp)
    8268:	d8c00015 	stw	r3,0(sp)
    826c:	000931c0 	call	931c <memmove>
    8270:	d8c00017 	ldw	r3,0(sp)
    8274:	80800017 	ldw	r2,0(r16)
    8278:	800b883a 	mov	r5,r16
    827c:	a809883a 	mov	r4,r21
    8280:	10c5883a 	add	r2,r2,r3
    8284:	80800015 	stw	r2,0(r16)
    8288:	d8c00015 	stw	r3,0(sp)
    828c:	00077300 	call	7730 <_fflush_r>
    8290:	d8c00017 	ldw	r3,0(sp)
    8294:	da000117 	ldw	r8,4(sp)
    8298:	103fc21e 	bne	r2,zero,81a4 <__alt_mem_Onchip_SRAM+0xf80081a4>
    829c:	182f883a 	mov	r23,r3
    82a0:	9de7c83a 	sub	r19,r19,r23
    82a4:	983fe11e 	bne	r19,zero,822c <__alt_mem_Onchip_SRAM+0xf800822c>
    82a8:	800b883a 	mov	r5,r16
    82ac:	a809883a 	mov	r4,r21
    82b0:	00077300 	call	7730 <_fflush_r>
    82b4:	103fbb1e 	bne	r2,zero,81a4 <__alt_mem_Onchip_SRAM+0xf80081a4>
    82b8:	0011883a 	mov	r8,zero
    82bc:	003fdb06 	br	822c <__alt_mem_Onchip_SRAM+0xf800822c>
    82c0:	94c0012e 	bgeu	r18,r19,82c8 <__sfvwrite_r+0x328>
    82c4:	9027883a 	mov	r19,r18
    82c8:	980d883a 	mov	r6,r19
    82cc:	e00b883a 	mov	r5,fp
    82d0:	000931c0 	call	931c <memmove>
    82d4:	80800217 	ldw	r2,8(r16)
    82d8:	80c00017 	ldw	r3,0(r16)
    82dc:	14c5c83a 	sub	r2,r2,r19
    82e0:	1cc7883a 	add	r3,r3,r19
    82e4:	80800215 	stw	r2,8(r16)
    82e8:	80c00015 	stw	r3,0(r16)
    82ec:	10004326 	beq	r2,zero,83fc <__sfvwrite_r+0x45c>
    82f0:	9805883a 	mov	r2,r19
    82f4:	003f8306 	br	8104 <__alt_mem_Onchip_SRAM+0xf8008104>
    82f8:	b00d883a 	mov	r6,r22
    82fc:	e00b883a 	mov	r5,fp
    8300:	da000115 	stw	r8,4(sp)
    8304:	000931c0 	call	931c <memmove>
    8308:	80800217 	ldw	r2,8(r16)
    830c:	80c00017 	ldw	r3,0(r16)
    8310:	da000117 	ldw	r8,4(sp)
    8314:	1585c83a 	sub	r2,r2,r22
    8318:	1dad883a 	add	r22,r3,r22
    831c:	80800215 	stw	r2,8(r16)
    8320:	85800015 	stw	r22,0(r16)
    8324:	003fbf06 	br	8224 <__alt_mem_Onchip_SRAM+0xf8008224>
    8328:	81000017 	ldw	r4,0(r16)
    832c:	9027883a 	mov	r19,r18
    8330:	902f883a 	mov	r23,r18
    8334:	003f6906 	br	80dc <__alt_mem_Onchip_SRAM+0xf80080dc>
    8338:	900d883a 	mov	r6,r18
    833c:	01400284 	movi	r5,10
    8340:	e009883a 	mov	r4,fp
    8344:	00090f00 	call	90f0 <memchr>
    8348:	10003e26 	beq	r2,zero,8444 <__sfvwrite_r+0x4a4>
    834c:	10800044 	addi	r2,r2,1
    8350:	1727c83a 	sub	r19,r2,fp
    8354:	02000044 	movi	r8,1
    8358:	003f9d06 	br	81d0 <__alt_mem_Onchip_SRAM+0xf80081d0>
    835c:	80800517 	ldw	r2,20(r16)
    8360:	81400417 	ldw	r5,16(r16)
    8364:	81c00017 	ldw	r7,0(r16)
    8368:	10a7883a 	add	r19,r2,r2
    836c:	9885883a 	add	r2,r19,r2
    8370:	1026d7fa 	srli	r19,r2,31
    8374:	396dc83a 	sub	r22,r7,r5
    8378:	b1000044 	addi	r4,r22,1
    837c:	9885883a 	add	r2,r19,r2
    8380:	1027d07a 	srai	r19,r2,1
    8384:	2485883a 	add	r2,r4,r18
    8388:	980d883a 	mov	r6,r19
    838c:	9880022e 	bgeu	r19,r2,8398 <__sfvwrite_r+0x3f8>
    8390:	1027883a 	mov	r19,r2
    8394:	100d883a 	mov	r6,r2
    8398:	18c1000c 	andi	r3,r3,1024
    839c:	18001c26 	beq	r3,zero,8410 <__sfvwrite_r+0x470>
    83a0:	300b883a 	mov	r5,r6
    83a4:	a809883a 	mov	r4,r21
    83a8:	00088e40 	call	88e4 <_malloc_r>
    83ac:	102f883a 	mov	r23,r2
    83b0:	10002926 	beq	r2,zero,8458 <__sfvwrite_r+0x4b8>
    83b4:	81400417 	ldw	r5,16(r16)
    83b8:	b00d883a 	mov	r6,r22
    83bc:	1009883a 	mov	r4,r2
    83c0:	00091d40 	call	91d4 <memcpy>
    83c4:	8080030b 	ldhu	r2,12(r16)
    83c8:	00fedfc4 	movi	r3,-1153
    83cc:	10c4703a 	and	r2,r2,r3
    83d0:	10802014 	ori	r2,r2,128
    83d4:	8080030d 	sth	r2,12(r16)
    83d8:	bd89883a 	add	r4,r23,r22
    83dc:	9d8fc83a 	sub	r7,r19,r22
    83e0:	85c00415 	stw	r23,16(r16)
    83e4:	84c00515 	stw	r19,20(r16)
    83e8:	81000015 	stw	r4,0(r16)
    83ec:	9027883a 	mov	r19,r18
    83f0:	81c00215 	stw	r7,8(r16)
    83f4:	902f883a 	mov	r23,r18
    83f8:	003f3806 	br	80dc <__alt_mem_Onchip_SRAM+0xf80080dc>
    83fc:	800b883a 	mov	r5,r16
    8400:	a809883a 	mov	r4,r21
    8404:	00077300 	call	7730 <_fflush_r>
    8408:	103fb926 	beq	r2,zero,82f0 <__alt_mem_Onchip_SRAM+0xf80082f0>
    840c:	003f6506 	br	81a4 <__alt_mem_Onchip_SRAM+0xf80081a4>
    8410:	a809883a 	mov	r4,r21
    8414:	000a7c00 	call	a7c0 <_realloc_r>
    8418:	102f883a 	mov	r23,r2
    841c:	103fee1e 	bne	r2,zero,83d8 <__alt_mem_Onchip_SRAM+0xf80083d8>
    8420:	81400417 	ldw	r5,16(r16)
    8424:	a809883a 	mov	r4,r21
    8428:	0007c900 	call	7c90 <_free_r>
    842c:	8080030b 	ldhu	r2,12(r16)
    8430:	00ffdfc4 	movi	r3,-129
    8434:	1884703a 	and	r2,r3,r2
    8438:	00c00304 	movi	r3,12
    843c:	a8c00015 	stw	r3,0(r21)
    8440:	003f5906 	br	81a8 <__alt_mem_Onchip_SRAM+0xf80081a8>
    8444:	94c00044 	addi	r19,r18,1
    8448:	02000044 	movi	r8,1
    844c:	003f6006 	br	81d0 <__alt_mem_Onchip_SRAM+0xf80081d0>
    8450:	00bfffc4 	movi	r2,-1
    8454:	003f0006 	br	8058 <__alt_mem_Onchip_SRAM+0xf8008058>
    8458:	00800304 	movi	r2,12
    845c:	a8800015 	stw	r2,0(r21)
    8460:	8080030b 	ldhu	r2,12(r16)
    8464:	003f5006 	br	81a8 <__alt_mem_Onchip_SRAM+0xf80081a8>

00008468 <_fwalk>:
    8468:	defff704 	addi	sp,sp,-36
    846c:	dd000415 	stw	r20,16(sp)
    8470:	dfc00815 	stw	ra,32(sp)
    8474:	ddc00715 	stw	r23,28(sp)
    8478:	dd800615 	stw	r22,24(sp)
    847c:	dd400515 	stw	r21,20(sp)
    8480:	dcc00315 	stw	r19,12(sp)
    8484:	dc800215 	stw	r18,8(sp)
    8488:	dc400115 	stw	r17,4(sp)
    848c:	dc000015 	stw	r16,0(sp)
    8490:	2500b804 	addi	r20,r4,736
    8494:	a0002326 	beq	r20,zero,8524 <_fwalk+0xbc>
    8498:	282b883a 	mov	r21,r5
    849c:	002f883a 	mov	r23,zero
    84a0:	05800044 	movi	r22,1
    84a4:	04ffffc4 	movi	r19,-1
    84a8:	a4400117 	ldw	r17,4(r20)
    84ac:	a4800217 	ldw	r18,8(r20)
    84b0:	8c7fffc4 	addi	r17,r17,-1
    84b4:	88000d16 	blt	r17,zero,84ec <_fwalk+0x84>
    84b8:	94000304 	addi	r16,r18,12
    84bc:	94800384 	addi	r18,r18,14
    84c0:	8080000b 	ldhu	r2,0(r16)
    84c4:	8c7fffc4 	addi	r17,r17,-1
    84c8:	813ffd04 	addi	r4,r16,-12
    84cc:	b080042e 	bgeu	r22,r2,84e0 <_fwalk+0x78>
    84d0:	9080000f 	ldh	r2,0(r18)
    84d4:	14c00226 	beq	r2,r19,84e0 <_fwalk+0x78>
    84d8:	a83ee83a 	callr	r21
    84dc:	b8aeb03a 	or	r23,r23,r2
    84e0:	84001a04 	addi	r16,r16,104
    84e4:	94801a04 	addi	r18,r18,104
    84e8:	8cfff51e 	bne	r17,r19,84c0 <__alt_mem_Onchip_SRAM+0xf80084c0>
    84ec:	a5000017 	ldw	r20,0(r20)
    84f0:	a03fed1e 	bne	r20,zero,84a8 <__alt_mem_Onchip_SRAM+0xf80084a8>
    84f4:	b805883a 	mov	r2,r23
    84f8:	dfc00817 	ldw	ra,32(sp)
    84fc:	ddc00717 	ldw	r23,28(sp)
    8500:	dd800617 	ldw	r22,24(sp)
    8504:	dd400517 	ldw	r21,20(sp)
    8508:	dd000417 	ldw	r20,16(sp)
    850c:	dcc00317 	ldw	r19,12(sp)
    8510:	dc800217 	ldw	r18,8(sp)
    8514:	dc400117 	ldw	r17,4(sp)
    8518:	dc000017 	ldw	r16,0(sp)
    851c:	dec00904 	addi	sp,sp,36
    8520:	f800283a 	ret
    8524:	002f883a 	mov	r23,zero
    8528:	003ff206 	br	84f4 <__alt_mem_Onchip_SRAM+0xf80084f4>

0000852c <_fwalk_reent>:
    852c:	defff704 	addi	sp,sp,-36
    8530:	dd000415 	stw	r20,16(sp)
    8534:	dfc00815 	stw	ra,32(sp)
    8538:	ddc00715 	stw	r23,28(sp)
    853c:	dd800615 	stw	r22,24(sp)
    8540:	dd400515 	stw	r21,20(sp)
    8544:	dcc00315 	stw	r19,12(sp)
    8548:	dc800215 	stw	r18,8(sp)
    854c:	dc400115 	stw	r17,4(sp)
    8550:	dc000015 	stw	r16,0(sp)
    8554:	2500b804 	addi	r20,r4,736
    8558:	a0002326 	beq	r20,zero,85e8 <_fwalk_reent+0xbc>
    855c:	282b883a 	mov	r21,r5
    8560:	2027883a 	mov	r19,r4
    8564:	002f883a 	mov	r23,zero
    8568:	05800044 	movi	r22,1
    856c:	04bfffc4 	movi	r18,-1
    8570:	a4400117 	ldw	r17,4(r20)
    8574:	a4000217 	ldw	r16,8(r20)
    8578:	8c7fffc4 	addi	r17,r17,-1
    857c:	88000c16 	blt	r17,zero,85b0 <_fwalk_reent+0x84>
    8580:	84000304 	addi	r16,r16,12
    8584:	8080000b 	ldhu	r2,0(r16)
    8588:	8c7fffc4 	addi	r17,r17,-1
    858c:	817ffd04 	addi	r5,r16,-12
    8590:	b080052e 	bgeu	r22,r2,85a8 <_fwalk_reent+0x7c>
    8594:	8080008f 	ldh	r2,2(r16)
    8598:	9809883a 	mov	r4,r19
    859c:	14800226 	beq	r2,r18,85a8 <_fwalk_reent+0x7c>
    85a0:	a83ee83a 	callr	r21
    85a4:	b8aeb03a 	or	r23,r23,r2
    85a8:	84001a04 	addi	r16,r16,104
    85ac:	8cbff51e 	bne	r17,r18,8584 <__alt_mem_Onchip_SRAM+0xf8008584>
    85b0:	a5000017 	ldw	r20,0(r20)
    85b4:	a03fee1e 	bne	r20,zero,8570 <__alt_mem_Onchip_SRAM+0xf8008570>
    85b8:	b805883a 	mov	r2,r23
    85bc:	dfc00817 	ldw	ra,32(sp)
    85c0:	ddc00717 	ldw	r23,28(sp)
    85c4:	dd800617 	ldw	r22,24(sp)
    85c8:	dd400517 	ldw	r21,20(sp)
    85cc:	dd000417 	ldw	r20,16(sp)
    85d0:	dcc00317 	ldw	r19,12(sp)
    85d4:	dc800217 	ldw	r18,8(sp)
    85d8:	dc400117 	ldw	r17,4(sp)
    85dc:	dc000017 	ldw	r16,0(sp)
    85e0:	dec00904 	addi	sp,sp,36
    85e4:	f800283a 	ret
    85e8:	002f883a 	mov	r23,zero
    85ec:	003ff206 	br	85b8 <__alt_mem_Onchip_SRAM+0xf80085b8>

000085f0 <_gettimeofday_r>:
    85f0:	defffd04 	addi	sp,sp,-12
    85f4:	2805883a 	mov	r2,r5
    85f8:	dc000015 	stw	r16,0(sp)
    85fc:	040000b4 	movhi	r16,2
    8600:	dc400115 	stw	r17,4(sp)
    8604:	84294e04 	addi	r16,r16,-23240
    8608:	2023883a 	mov	r17,r4
    860c:	300b883a 	mov	r5,r6
    8610:	1009883a 	mov	r4,r2
    8614:	dfc00215 	stw	ra,8(sp)
    8618:	80000015 	stw	zero,0(r16)
    861c:	0011cf80 	call	11cf8 <gettimeofday>
    8620:	00ffffc4 	movi	r3,-1
    8624:	10c00526 	beq	r2,r3,863c <_gettimeofday_r+0x4c>
    8628:	dfc00217 	ldw	ra,8(sp)
    862c:	dc400117 	ldw	r17,4(sp)
    8630:	dc000017 	ldw	r16,0(sp)
    8634:	dec00304 	addi	sp,sp,12
    8638:	f800283a 	ret
    863c:	80c00017 	ldw	r3,0(r16)
    8640:	183ff926 	beq	r3,zero,8628 <__alt_mem_Onchip_SRAM+0xf8008628>
    8644:	88c00015 	stw	r3,0(r17)
    8648:	003ff706 	br	8628 <__alt_mem_Onchip_SRAM+0xf8008628>

0000864c <_setlocale_r>:
    864c:	30001b26 	beq	r6,zero,86bc <_setlocale_r+0x70>
    8650:	01400074 	movhi	r5,1
    8654:	defffe04 	addi	sp,sp,-8
    8658:	295ae904 	addi	r5,r5,27556
    865c:	3009883a 	mov	r4,r6
    8660:	dc000015 	stw	r16,0(sp)
    8664:	dfc00115 	stw	ra,4(sp)
    8668:	3021883a 	mov	r16,r6
    866c:	000af280 	call	af28 <strcmp>
    8670:	1000061e 	bne	r2,zero,868c <_setlocale_r+0x40>
    8674:	00800074 	movhi	r2,1
    8678:	109ae804 	addi	r2,r2,27552
    867c:	dfc00117 	ldw	ra,4(sp)
    8680:	dc000017 	ldw	r16,0(sp)
    8684:	dec00204 	addi	sp,sp,8
    8688:	f800283a 	ret
    868c:	01400074 	movhi	r5,1
    8690:	295ae804 	addi	r5,r5,27552
    8694:	8009883a 	mov	r4,r16
    8698:	000af280 	call	af28 <strcmp>
    869c:	103ff526 	beq	r2,zero,8674 <__alt_mem_Onchip_SRAM+0xf8008674>
    86a0:	01400074 	movhi	r5,1
    86a4:	295acb04 	addi	r5,r5,27436
    86a8:	8009883a 	mov	r4,r16
    86ac:	000af280 	call	af28 <strcmp>
    86b0:	103ff026 	beq	r2,zero,8674 <__alt_mem_Onchip_SRAM+0xf8008674>
    86b4:	0005883a 	mov	r2,zero
    86b8:	003ff006 	br	867c <__alt_mem_Onchip_SRAM+0xf800867c>
    86bc:	00800074 	movhi	r2,1
    86c0:	109ae804 	addi	r2,r2,27552
    86c4:	f800283a 	ret

000086c8 <__locale_charset>:
    86c8:	00800074 	movhi	r2,1
    86cc:	109c7b04 	addi	r2,r2,29164
    86d0:	f800283a 	ret

000086d4 <__locale_mb_cur_max>:
    86d4:	008000b4 	movhi	r2,2
    86d8:	10a24a04 	addi	r2,r2,-30424
    86dc:	10800017 	ldw	r2,0(r2)
    86e0:	f800283a 	ret

000086e4 <__locale_msgcharset>:
    86e4:	00800074 	movhi	r2,1
    86e8:	109c7304 	addi	r2,r2,29132
    86ec:	f800283a 	ret

000086f0 <__locale_cjk_lang>:
    86f0:	0005883a 	mov	r2,zero
    86f4:	f800283a 	ret

000086f8 <_localeconv_r>:
    86f8:	00800074 	movhi	r2,1
    86fc:	109c8304 	addi	r2,r2,29196
    8700:	f800283a 	ret

00008704 <setlocale>:
    8704:	008000b4 	movhi	r2,2
    8708:	10a24904 	addi	r2,r2,-30428
    870c:	280d883a 	mov	r6,r5
    8710:	200b883a 	mov	r5,r4
    8714:	11000017 	ldw	r4,0(r2)
    8718:	000864c1 	jmpi	864c <_setlocale_r>

0000871c <localeconv>:
    871c:	00800074 	movhi	r2,1
    8720:	109c8304 	addi	r2,r2,29196
    8724:	f800283a 	ret

00008728 <__smakebuf_r>:
    8728:	2880030b 	ldhu	r2,12(r5)
    872c:	10c0008c 	andi	r3,r2,2
    8730:	1800411e 	bne	r3,zero,8838 <__smakebuf_r+0x110>
    8734:	deffec04 	addi	sp,sp,-80
    8738:	dc000f15 	stw	r16,60(sp)
    873c:	2821883a 	mov	r16,r5
    8740:	2940038f 	ldh	r5,14(r5)
    8744:	dc401015 	stw	r17,64(sp)
    8748:	dfc01315 	stw	ra,76(sp)
    874c:	dcc01215 	stw	r19,72(sp)
    8750:	dc801115 	stw	r18,68(sp)
    8754:	2023883a 	mov	r17,r4
    8758:	28001c16 	blt	r5,zero,87cc <__smakebuf_r+0xa4>
    875c:	d80d883a 	mov	r6,sp
    8760:	000e2600 	call	e260 <_fstat_r>
    8764:	10001816 	blt	r2,zero,87c8 <__smakebuf_r+0xa0>
    8768:	d8800117 	ldw	r2,4(sp)
    876c:	00e00014 	movui	r3,32768
    8770:	10bc000c 	andi	r2,r2,61440
    8774:	14c80020 	cmpeqi	r19,r2,8192
    8778:	10c03726 	beq	r2,r3,8858 <__smakebuf_r+0x130>
    877c:	80c0030b 	ldhu	r3,12(r16)
    8780:	18c20014 	ori	r3,r3,2048
    8784:	80c0030d 	sth	r3,12(r16)
    8788:	00c80004 	movi	r3,8192
    878c:	10c0521e 	bne	r2,r3,88d8 <__smakebuf_r+0x1b0>
    8790:	8140038f 	ldh	r5,14(r16)
    8794:	8809883a 	mov	r4,r17
    8798:	000e2bc0 	call	e2bc <_isatty_r>
    879c:	10004c26 	beq	r2,zero,88d0 <__smakebuf_r+0x1a8>
    87a0:	8080030b 	ldhu	r2,12(r16)
    87a4:	80c010c4 	addi	r3,r16,67
    87a8:	80c00015 	stw	r3,0(r16)
    87ac:	10800054 	ori	r2,r2,1
    87b0:	8080030d 	sth	r2,12(r16)
    87b4:	00800044 	movi	r2,1
    87b8:	80c00415 	stw	r3,16(r16)
    87bc:	80800515 	stw	r2,20(r16)
    87c0:	04810004 	movi	r18,1024
    87c4:	00000706 	br	87e4 <__smakebuf_r+0xbc>
    87c8:	8080030b 	ldhu	r2,12(r16)
    87cc:	10c0200c 	andi	r3,r2,128
    87d0:	18001f1e 	bne	r3,zero,8850 <__smakebuf_r+0x128>
    87d4:	04810004 	movi	r18,1024
    87d8:	10820014 	ori	r2,r2,2048
    87dc:	8080030d 	sth	r2,12(r16)
    87e0:	0027883a 	mov	r19,zero
    87e4:	900b883a 	mov	r5,r18
    87e8:	8809883a 	mov	r4,r17
    87ec:	00088e40 	call	88e4 <_malloc_r>
    87f0:	10002c26 	beq	r2,zero,88a4 <__smakebuf_r+0x17c>
    87f4:	80c0030b 	ldhu	r3,12(r16)
    87f8:	01000034 	movhi	r4,0
    87fc:	211df104 	addi	r4,r4,30660
    8800:	89000f15 	stw	r4,60(r17)
    8804:	18c02014 	ori	r3,r3,128
    8808:	80c0030d 	sth	r3,12(r16)
    880c:	80800015 	stw	r2,0(r16)
    8810:	80800415 	stw	r2,16(r16)
    8814:	84800515 	stw	r18,20(r16)
    8818:	98001a1e 	bne	r19,zero,8884 <__smakebuf_r+0x15c>
    881c:	dfc01317 	ldw	ra,76(sp)
    8820:	dcc01217 	ldw	r19,72(sp)
    8824:	dc801117 	ldw	r18,68(sp)
    8828:	dc401017 	ldw	r17,64(sp)
    882c:	dc000f17 	ldw	r16,60(sp)
    8830:	dec01404 	addi	sp,sp,80
    8834:	f800283a 	ret
    8838:	288010c4 	addi	r2,r5,67
    883c:	28800015 	stw	r2,0(r5)
    8840:	28800415 	stw	r2,16(r5)
    8844:	00800044 	movi	r2,1
    8848:	28800515 	stw	r2,20(r5)
    884c:	f800283a 	ret
    8850:	04801004 	movi	r18,64
    8854:	003fe006 	br	87d8 <__alt_mem_Onchip_SRAM+0xf80087d8>
    8858:	81000a17 	ldw	r4,40(r16)
    885c:	00c00074 	movhi	r3,1
    8860:	18ebb104 	addi	r3,r3,-20796
    8864:	20ffc51e 	bne	r4,r3,877c <__alt_mem_Onchip_SRAM+0xf800877c>
    8868:	8080030b 	ldhu	r2,12(r16)
    886c:	04810004 	movi	r18,1024
    8870:	84801315 	stw	r18,76(r16)
    8874:	1484b03a 	or	r2,r2,r18
    8878:	8080030d 	sth	r2,12(r16)
    887c:	0027883a 	mov	r19,zero
    8880:	003fd806 	br	87e4 <__alt_mem_Onchip_SRAM+0xf80087e4>
    8884:	8140038f 	ldh	r5,14(r16)
    8888:	8809883a 	mov	r4,r17
    888c:	000e2bc0 	call	e2bc <_isatty_r>
    8890:	103fe226 	beq	r2,zero,881c <__alt_mem_Onchip_SRAM+0xf800881c>
    8894:	8080030b 	ldhu	r2,12(r16)
    8898:	10800054 	ori	r2,r2,1
    889c:	8080030d 	sth	r2,12(r16)
    88a0:	003fde06 	br	881c <__alt_mem_Onchip_SRAM+0xf800881c>
    88a4:	8080030b 	ldhu	r2,12(r16)
    88a8:	10c0800c 	andi	r3,r2,512
    88ac:	183fdb1e 	bne	r3,zero,881c <__alt_mem_Onchip_SRAM+0xf800881c>
    88b0:	10800094 	ori	r2,r2,2
    88b4:	80c010c4 	addi	r3,r16,67
    88b8:	8080030d 	sth	r2,12(r16)
    88bc:	00800044 	movi	r2,1
    88c0:	80c00015 	stw	r3,0(r16)
    88c4:	80c00415 	stw	r3,16(r16)
    88c8:	80800515 	stw	r2,20(r16)
    88cc:	003fd306 	br	881c <__alt_mem_Onchip_SRAM+0xf800881c>
    88d0:	04810004 	movi	r18,1024
    88d4:	003fc306 	br	87e4 <__alt_mem_Onchip_SRAM+0xf80087e4>
    88d8:	0027883a 	mov	r19,zero
    88dc:	04810004 	movi	r18,1024
    88e0:	003fc006 	br	87e4 <__alt_mem_Onchip_SRAM+0xf80087e4>

000088e4 <_malloc_r>:
    88e4:	defff504 	addi	sp,sp,-44
    88e8:	dc800315 	stw	r18,12(sp)
    88ec:	dfc00a15 	stw	ra,40(sp)
    88f0:	df000915 	stw	fp,36(sp)
    88f4:	ddc00815 	stw	r23,32(sp)
    88f8:	dd800715 	stw	r22,28(sp)
    88fc:	dd400615 	stw	r21,24(sp)
    8900:	dd000515 	stw	r20,20(sp)
    8904:	dcc00415 	stw	r19,16(sp)
    8908:	dc400215 	stw	r17,8(sp)
    890c:	dc000115 	stw	r16,4(sp)
    8910:	288002c4 	addi	r2,r5,11
    8914:	00c00584 	movi	r3,22
    8918:	2025883a 	mov	r18,r4
    891c:	18807f2e 	bgeu	r3,r2,8b1c <_malloc_r+0x238>
    8920:	047ffe04 	movi	r17,-8
    8924:	1462703a 	and	r17,r2,r17
    8928:	8800a316 	blt	r17,zero,8bb8 <_malloc_r+0x2d4>
    892c:	8940a236 	bltu	r17,r5,8bb8 <_malloc_r+0x2d4>
    8930:	00122540 	call	12254 <__malloc_lock>
    8934:	00807dc4 	movi	r2,503
    8938:	1441e92e 	bgeu	r2,r17,90e0 <_malloc_r+0x7fc>
    893c:	8804d27a 	srli	r2,r17,9
    8940:	1000a126 	beq	r2,zero,8bc8 <_malloc_r+0x2e4>
    8944:	00c00104 	movi	r3,4
    8948:	18811e36 	bltu	r3,r2,8dc4 <_malloc_r+0x4e0>
    894c:	8804d1ba 	srli	r2,r17,6
    8950:	12000e44 	addi	r8,r2,57
    8954:	11c00e04 	addi	r7,r2,56
    8958:	4209883a 	add	r4,r8,r8
    895c:	04c00074 	movhi	r19,1
    8960:	2109883a 	add	r4,r4,r4
    8964:	9cdc9104 	addi	r19,r19,29252
    8968:	2109883a 	add	r4,r4,r4
    896c:	9909883a 	add	r4,r19,r4
    8970:	24000117 	ldw	r16,4(r4)
    8974:	213ffe04 	addi	r4,r4,-8
    8978:	24009726 	beq	r4,r16,8bd8 <_malloc_r+0x2f4>
    897c:	80800117 	ldw	r2,4(r16)
    8980:	01bfff04 	movi	r6,-4
    8984:	014003c4 	movi	r5,15
    8988:	1184703a 	and	r2,r2,r6
    898c:	1447c83a 	sub	r3,r2,r17
    8990:	28c00716 	blt	r5,r3,89b0 <_malloc_r+0xcc>
    8994:	1800920e 	bge	r3,zero,8be0 <_malloc_r+0x2fc>
    8998:	84000317 	ldw	r16,12(r16)
    899c:	24008e26 	beq	r4,r16,8bd8 <_malloc_r+0x2f4>
    89a0:	80800117 	ldw	r2,4(r16)
    89a4:	1184703a 	and	r2,r2,r6
    89a8:	1447c83a 	sub	r3,r2,r17
    89ac:	28fff90e 	bge	r5,r3,8994 <__alt_mem_Onchip_SRAM+0xf8008994>
    89b0:	3809883a 	mov	r4,r7
    89b4:	01800074 	movhi	r6,1
    89b8:	9c000417 	ldw	r16,16(r19)
    89bc:	319c9104 	addi	r6,r6,29252
    89c0:	32000204 	addi	r8,r6,8
    89c4:	82013426 	beq	r16,r8,8e98 <_malloc_r+0x5b4>
    89c8:	80c00117 	ldw	r3,4(r16)
    89cc:	00bfff04 	movi	r2,-4
    89d0:	188e703a 	and	r7,r3,r2
    89d4:	3c45c83a 	sub	r2,r7,r17
    89d8:	00c003c4 	movi	r3,15
    89dc:	18811f16 	blt	r3,r2,8e5c <_malloc_r+0x578>
    89e0:	32000515 	stw	r8,20(r6)
    89e4:	32000415 	stw	r8,16(r6)
    89e8:	10007f0e 	bge	r2,zero,8be8 <_malloc_r+0x304>
    89ec:	00807fc4 	movi	r2,511
    89f0:	11c0fd36 	bltu	r2,r7,8de8 <_malloc_r+0x504>
    89f4:	3806d0fa 	srli	r3,r7,3
    89f8:	01c00044 	movi	r7,1
    89fc:	30800117 	ldw	r2,4(r6)
    8a00:	19400044 	addi	r5,r3,1
    8a04:	294b883a 	add	r5,r5,r5
    8a08:	1807d0ba 	srai	r3,r3,2
    8a0c:	294b883a 	add	r5,r5,r5
    8a10:	294b883a 	add	r5,r5,r5
    8a14:	298b883a 	add	r5,r5,r6
    8a18:	38c6983a 	sll	r3,r7,r3
    8a1c:	29c00017 	ldw	r7,0(r5)
    8a20:	2a7ffe04 	addi	r9,r5,-8
    8a24:	1886b03a 	or	r3,r3,r2
    8a28:	82400315 	stw	r9,12(r16)
    8a2c:	81c00215 	stw	r7,8(r16)
    8a30:	30c00115 	stw	r3,4(r6)
    8a34:	2c000015 	stw	r16,0(r5)
    8a38:	3c000315 	stw	r16,12(r7)
    8a3c:	2005d0ba 	srai	r2,r4,2
    8a40:	01400044 	movi	r5,1
    8a44:	288a983a 	sll	r5,r5,r2
    8a48:	19406f36 	bltu	r3,r5,8c08 <_malloc_r+0x324>
    8a4c:	28c4703a 	and	r2,r5,r3
    8a50:	10000a1e 	bne	r2,zero,8a7c <_malloc_r+0x198>
    8a54:	00bfff04 	movi	r2,-4
    8a58:	294b883a 	add	r5,r5,r5
    8a5c:	2088703a 	and	r4,r4,r2
    8a60:	28c4703a 	and	r2,r5,r3
    8a64:	21000104 	addi	r4,r4,4
    8a68:	1000041e 	bne	r2,zero,8a7c <_malloc_r+0x198>
    8a6c:	294b883a 	add	r5,r5,r5
    8a70:	28c4703a 	and	r2,r5,r3
    8a74:	21000104 	addi	r4,r4,4
    8a78:	103ffc26 	beq	r2,zero,8a6c <__alt_mem_Onchip_SRAM+0xf8008a6c>
    8a7c:	02bfff04 	movi	r10,-4
    8a80:	024003c4 	movi	r9,15
    8a84:	21800044 	addi	r6,r4,1
    8a88:	318d883a 	add	r6,r6,r6
    8a8c:	318d883a 	add	r6,r6,r6
    8a90:	318d883a 	add	r6,r6,r6
    8a94:	998d883a 	add	r6,r19,r6
    8a98:	333ffe04 	addi	r12,r6,-8
    8a9c:	2017883a 	mov	r11,r4
    8aa0:	31800104 	addi	r6,r6,4
    8aa4:	34000017 	ldw	r16,0(r6)
    8aa8:	31fffd04 	addi	r7,r6,-12
    8aac:	81c0041e 	bne	r16,r7,8ac0 <_malloc_r+0x1dc>
    8ab0:	0000fb06 	br	8ea0 <_malloc_r+0x5bc>
    8ab4:	1801030e 	bge	r3,zero,8ec4 <_malloc_r+0x5e0>
    8ab8:	84000317 	ldw	r16,12(r16)
    8abc:	81c0f826 	beq	r16,r7,8ea0 <_malloc_r+0x5bc>
    8ac0:	80800117 	ldw	r2,4(r16)
    8ac4:	1284703a 	and	r2,r2,r10
    8ac8:	1447c83a 	sub	r3,r2,r17
    8acc:	48fff90e 	bge	r9,r3,8ab4 <__alt_mem_Onchip_SRAM+0xf8008ab4>
    8ad0:	80800317 	ldw	r2,12(r16)
    8ad4:	81000217 	ldw	r4,8(r16)
    8ad8:	89400054 	ori	r5,r17,1
    8adc:	81400115 	stw	r5,4(r16)
    8ae0:	20800315 	stw	r2,12(r4)
    8ae4:	11000215 	stw	r4,8(r2)
    8ae8:	8463883a 	add	r17,r16,r17
    8aec:	9c400515 	stw	r17,20(r19)
    8af0:	9c400415 	stw	r17,16(r19)
    8af4:	18800054 	ori	r2,r3,1
    8af8:	88800115 	stw	r2,4(r17)
    8afc:	8a000315 	stw	r8,12(r17)
    8b00:	8a000215 	stw	r8,8(r17)
    8b04:	88e3883a 	add	r17,r17,r3
    8b08:	88c00015 	stw	r3,0(r17)
    8b0c:	9009883a 	mov	r4,r18
    8b10:	00122780 	call	12278 <__malloc_unlock>
    8b14:	80800204 	addi	r2,r16,8
    8b18:	00001b06 	br	8b88 <_malloc_r+0x2a4>
    8b1c:	04400404 	movi	r17,16
    8b20:	89402536 	bltu	r17,r5,8bb8 <_malloc_r+0x2d4>
    8b24:	00122540 	call	12254 <__malloc_lock>
    8b28:	00800184 	movi	r2,6
    8b2c:	01000084 	movi	r4,2
    8b30:	04c00074 	movhi	r19,1
    8b34:	1085883a 	add	r2,r2,r2
    8b38:	9cdc9104 	addi	r19,r19,29252
    8b3c:	1085883a 	add	r2,r2,r2
    8b40:	9885883a 	add	r2,r19,r2
    8b44:	14000117 	ldw	r16,4(r2)
    8b48:	10fffe04 	addi	r3,r2,-8
    8b4c:	80c0d926 	beq	r16,r3,8eb4 <_malloc_r+0x5d0>
    8b50:	80c00117 	ldw	r3,4(r16)
    8b54:	81000317 	ldw	r4,12(r16)
    8b58:	00bfff04 	movi	r2,-4
    8b5c:	1884703a 	and	r2,r3,r2
    8b60:	81400217 	ldw	r5,8(r16)
    8b64:	8085883a 	add	r2,r16,r2
    8b68:	10c00117 	ldw	r3,4(r2)
    8b6c:	29000315 	stw	r4,12(r5)
    8b70:	21400215 	stw	r5,8(r4)
    8b74:	18c00054 	ori	r3,r3,1
    8b78:	10c00115 	stw	r3,4(r2)
    8b7c:	9009883a 	mov	r4,r18
    8b80:	00122780 	call	12278 <__malloc_unlock>
    8b84:	80800204 	addi	r2,r16,8
    8b88:	dfc00a17 	ldw	ra,40(sp)
    8b8c:	df000917 	ldw	fp,36(sp)
    8b90:	ddc00817 	ldw	r23,32(sp)
    8b94:	dd800717 	ldw	r22,28(sp)
    8b98:	dd400617 	ldw	r21,24(sp)
    8b9c:	dd000517 	ldw	r20,20(sp)
    8ba0:	dcc00417 	ldw	r19,16(sp)
    8ba4:	dc800317 	ldw	r18,12(sp)
    8ba8:	dc400217 	ldw	r17,8(sp)
    8bac:	dc000117 	ldw	r16,4(sp)
    8bb0:	dec00b04 	addi	sp,sp,44
    8bb4:	f800283a 	ret
    8bb8:	00800304 	movi	r2,12
    8bbc:	90800015 	stw	r2,0(r18)
    8bc0:	0005883a 	mov	r2,zero
    8bc4:	003ff006 	br	8b88 <__alt_mem_Onchip_SRAM+0xf8008b88>
    8bc8:	01002004 	movi	r4,128
    8bcc:	02001004 	movi	r8,64
    8bd0:	01c00fc4 	movi	r7,63
    8bd4:	003f6106 	br	895c <__alt_mem_Onchip_SRAM+0xf800895c>
    8bd8:	4009883a 	mov	r4,r8
    8bdc:	003f7506 	br	89b4 <__alt_mem_Onchip_SRAM+0xf80089b4>
    8be0:	81000317 	ldw	r4,12(r16)
    8be4:	003fde06 	br	8b60 <__alt_mem_Onchip_SRAM+0xf8008b60>
    8be8:	81c5883a 	add	r2,r16,r7
    8bec:	11400117 	ldw	r5,4(r2)
    8bf0:	9009883a 	mov	r4,r18
    8bf4:	29400054 	ori	r5,r5,1
    8bf8:	11400115 	stw	r5,4(r2)
    8bfc:	00122780 	call	12278 <__malloc_unlock>
    8c00:	80800204 	addi	r2,r16,8
    8c04:	003fe006 	br	8b88 <__alt_mem_Onchip_SRAM+0xf8008b88>
    8c08:	9c000217 	ldw	r16,8(r19)
    8c0c:	00bfff04 	movi	r2,-4
    8c10:	85800117 	ldw	r22,4(r16)
    8c14:	b0ac703a 	and	r22,r22,r2
    8c18:	b4400336 	bltu	r22,r17,8c28 <_malloc_r+0x344>
    8c1c:	b445c83a 	sub	r2,r22,r17
    8c20:	00c003c4 	movi	r3,15
    8c24:	18805d16 	blt	r3,r2,8d9c <_malloc_r+0x4b8>
    8c28:	05c000b4 	movhi	r23,2
    8c2c:	008000b4 	movhi	r2,2
    8c30:	10a95404 	addi	r2,r2,-23216
    8c34:	bde24b04 	addi	r23,r23,-30420
    8c38:	15400017 	ldw	r21,0(r2)
    8c3c:	b8c00017 	ldw	r3,0(r23)
    8c40:	00bfffc4 	movi	r2,-1
    8c44:	858d883a 	add	r6,r16,r22
    8c48:	8d6b883a 	add	r21,r17,r21
    8c4c:	1880ea26 	beq	r3,r2,8ff8 <_malloc_r+0x714>
    8c50:	ad4403c4 	addi	r21,r21,4111
    8c54:	00bc0004 	movi	r2,-4096
    8c58:	a8aa703a 	and	r21,r21,r2
    8c5c:	a80b883a 	mov	r5,r21
    8c60:	9009883a 	mov	r4,r18
    8c64:	d9800015 	stw	r6,0(sp)
    8c68:	000ad980 	call	ad98 <_sbrk_r>
    8c6c:	1029883a 	mov	r20,r2
    8c70:	00bfffc4 	movi	r2,-1
    8c74:	d9800017 	ldw	r6,0(sp)
    8c78:	a080e826 	beq	r20,r2,901c <_malloc_r+0x738>
    8c7c:	a180a636 	bltu	r20,r6,8f18 <_malloc_r+0x634>
    8c80:	070000b4 	movhi	fp,2
    8c84:	e7296004 	addi	fp,fp,-23168
    8c88:	e0800017 	ldw	r2,0(fp)
    8c8c:	a887883a 	add	r3,r21,r2
    8c90:	e0c00015 	stw	r3,0(fp)
    8c94:	3500e626 	beq	r6,r20,9030 <_malloc_r+0x74c>
    8c98:	b9000017 	ldw	r4,0(r23)
    8c9c:	00bfffc4 	movi	r2,-1
    8ca0:	2080ee26 	beq	r4,r2,905c <_malloc_r+0x778>
    8ca4:	a185c83a 	sub	r2,r20,r6
    8ca8:	10c5883a 	add	r2,r2,r3
    8cac:	e0800015 	stw	r2,0(fp)
    8cb0:	a0c001cc 	andi	r3,r20,7
    8cb4:	1800bc26 	beq	r3,zero,8fa8 <_malloc_r+0x6c4>
    8cb8:	a0e9c83a 	sub	r20,r20,r3
    8cbc:	00840204 	movi	r2,4104
    8cc0:	a5000204 	addi	r20,r20,8
    8cc4:	10c7c83a 	sub	r3,r2,r3
    8cc8:	a545883a 	add	r2,r20,r21
    8ccc:	1083ffcc 	andi	r2,r2,4095
    8cd0:	18abc83a 	sub	r21,r3,r2
    8cd4:	a80b883a 	mov	r5,r21
    8cd8:	9009883a 	mov	r4,r18
    8cdc:	000ad980 	call	ad98 <_sbrk_r>
    8ce0:	00ffffc4 	movi	r3,-1
    8ce4:	10c0e126 	beq	r2,r3,906c <_malloc_r+0x788>
    8ce8:	1505c83a 	sub	r2,r2,r20
    8cec:	1545883a 	add	r2,r2,r21
    8cf0:	10800054 	ori	r2,r2,1
    8cf4:	e0c00017 	ldw	r3,0(fp)
    8cf8:	9d000215 	stw	r20,8(r19)
    8cfc:	a0800115 	stw	r2,4(r20)
    8d00:	a8c7883a 	add	r3,r21,r3
    8d04:	e0c00015 	stw	r3,0(fp)
    8d08:	84c00e26 	beq	r16,r19,8d44 <_malloc_r+0x460>
    8d0c:	018003c4 	movi	r6,15
    8d10:	3580a72e 	bgeu	r6,r22,8fb0 <_malloc_r+0x6cc>
    8d14:	81400117 	ldw	r5,4(r16)
    8d18:	013ffe04 	movi	r4,-8
    8d1c:	b0bffd04 	addi	r2,r22,-12
    8d20:	1104703a 	and	r2,r2,r4
    8d24:	2900004c 	andi	r4,r5,1
    8d28:	2088b03a 	or	r4,r4,r2
    8d2c:	81000115 	stw	r4,4(r16)
    8d30:	01400144 	movi	r5,5
    8d34:	8089883a 	add	r4,r16,r2
    8d38:	21400115 	stw	r5,4(r4)
    8d3c:	21400215 	stw	r5,8(r4)
    8d40:	3080cd36 	bltu	r6,r2,9078 <_malloc_r+0x794>
    8d44:	008000b4 	movhi	r2,2
    8d48:	10a95304 	addi	r2,r2,-23220
    8d4c:	11000017 	ldw	r4,0(r2)
    8d50:	20c0012e 	bgeu	r4,r3,8d58 <_malloc_r+0x474>
    8d54:	10c00015 	stw	r3,0(r2)
    8d58:	008000b4 	movhi	r2,2
    8d5c:	10a95204 	addi	r2,r2,-23224
    8d60:	11000017 	ldw	r4,0(r2)
    8d64:	9c000217 	ldw	r16,8(r19)
    8d68:	20c0012e 	bgeu	r4,r3,8d70 <_malloc_r+0x48c>
    8d6c:	10c00015 	stw	r3,0(r2)
    8d70:	80c00117 	ldw	r3,4(r16)
    8d74:	00bfff04 	movi	r2,-4
    8d78:	1886703a 	and	r3,r3,r2
    8d7c:	1c45c83a 	sub	r2,r3,r17
    8d80:	1c400236 	bltu	r3,r17,8d8c <_malloc_r+0x4a8>
    8d84:	00c003c4 	movi	r3,15
    8d88:	18800416 	blt	r3,r2,8d9c <_malloc_r+0x4b8>
    8d8c:	9009883a 	mov	r4,r18
    8d90:	00122780 	call	12278 <__malloc_unlock>
    8d94:	0005883a 	mov	r2,zero
    8d98:	003f7b06 	br	8b88 <__alt_mem_Onchip_SRAM+0xf8008b88>
    8d9c:	88c00054 	ori	r3,r17,1
    8da0:	80c00115 	stw	r3,4(r16)
    8da4:	8463883a 	add	r17,r16,r17
    8da8:	10800054 	ori	r2,r2,1
    8dac:	9c400215 	stw	r17,8(r19)
    8db0:	88800115 	stw	r2,4(r17)
    8db4:	9009883a 	mov	r4,r18
    8db8:	00122780 	call	12278 <__malloc_unlock>
    8dbc:	80800204 	addi	r2,r16,8
    8dc0:	003f7106 	br	8b88 <__alt_mem_Onchip_SRAM+0xf8008b88>
    8dc4:	00c00504 	movi	r3,20
    8dc8:	18804a2e 	bgeu	r3,r2,8ef4 <_malloc_r+0x610>
    8dcc:	00c01504 	movi	r3,84
    8dd0:	18806e36 	bltu	r3,r2,8f8c <_malloc_r+0x6a8>
    8dd4:	8804d33a 	srli	r2,r17,12
    8dd8:	12001bc4 	addi	r8,r2,111
    8ddc:	11c01b84 	addi	r7,r2,110
    8de0:	4209883a 	add	r4,r8,r8
    8de4:	003edd06 	br	895c <__alt_mem_Onchip_SRAM+0xf800895c>
    8de8:	3804d27a 	srli	r2,r7,9
    8dec:	00c00104 	movi	r3,4
    8df0:	1880442e 	bgeu	r3,r2,8f04 <_malloc_r+0x620>
    8df4:	00c00504 	movi	r3,20
    8df8:	18808136 	bltu	r3,r2,9000 <_malloc_r+0x71c>
    8dfc:	11401704 	addi	r5,r2,92
    8e00:	10c016c4 	addi	r3,r2,91
    8e04:	294b883a 	add	r5,r5,r5
    8e08:	294b883a 	add	r5,r5,r5
    8e0c:	294b883a 	add	r5,r5,r5
    8e10:	994b883a 	add	r5,r19,r5
    8e14:	28800017 	ldw	r2,0(r5)
    8e18:	01800074 	movhi	r6,1
    8e1c:	297ffe04 	addi	r5,r5,-8
    8e20:	319c9104 	addi	r6,r6,29252
    8e24:	28806526 	beq	r5,r2,8fbc <_malloc_r+0x6d8>
    8e28:	01bfff04 	movi	r6,-4
    8e2c:	10c00117 	ldw	r3,4(r2)
    8e30:	1986703a 	and	r3,r3,r6
    8e34:	38c0022e 	bgeu	r7,r3,8e40 <_malloc_r+0x55c>
    8e38:	10800217 	ldw	r2,8(r2)
    8e3c:	28bffb1e 	bne	r5,r2,8e2c <__alt_mem_Onchip_SRAM+0xf8008e2c>
    8e40:	11400317 	ldw	r5,12(r2)
    8e44:	98c00117 	ldw	r3,4(r19)
    8e48:	81400315 	stw	r5,12(r16)
    8e4c:	80800215 	stw	r2,8(r16)
    8e50:	2c000215 	stw	r16,8(r5)
    8e54:	14000315 	stw	r16,12(r2)
    8e58:	003ef806 	br	8a3c <__alt_mem_Onchip_SRAM+0xf8008a3c>
    8e5c:	88c00054 	ori	r3,r17,1
    8e60:	80c00115 	stw	r3,4(r16)
    8e64:	8463883a 	add	r17,r16,r17
    8e68:	34400515 	stw	r17,20(r6)
    8e6c:	34400415 	stw	r17,16(r6)
    8e70:	10c00054 	ori	r3,r2,1
    8e74:	8a000315 	stw	r8,12(r17)
    8e78:	8a000215 	stw	r8,8(r17)
    8e7c:	88c00115 	stw	r3,4(r17)
    8e80:	88a3883a 	add	r17,r17,r2
    8e84:	88800015 	stw	r2,0(r17)
    8e88:	9009883a 	mov	r4,r18
    8e8c:	00122780 	call	12278 <__malloc_unlock>
    8e90:	80800204 	addi	r2,r16,8
    8e94:	003f3c06 	br	8b88 <__alt_mem_Onchip_SRAM+0xf8008b88>
    8e98:	30c00117 	ldw	r3,4(r6)
    8e9c:	003ee706 	br	8a3c <__alt_mem_Onchip_SRAM+0xf8008a3c>
    8ea0:	5ac00044 	addi	r11,r11,1
    8ea4:	588000cc 	andi	r2,r11,3
    8ea8:	31800204 	addi	r6,r6,8
    8eac:	103efd1e 	bne	r2,zero,8aa4 <__alt_mem_Onchip_SRAM+0xf8008aa4>
    8eb0:	00002406 	br	8f44 <_malloc_r+0x660>
    8eb4:	14000317 	ldw	r16,12(r2)
    8eb8:	143f251e 	bne	r2,r16,8b50 <__alt_mem_Onchip_SRAM+0xf8008b50>
    8ebc:	21000084 	addi	r4,r4,2
    8ec0:	003ebc06 	br	89b4 <__alt_mem_Onchip_SRAM+0xf80089b4>
    8ec4:	8085883a 	add	r2,r16,r2
    8ec8:	10c00117 	ldw	r3,4(r2)
    8ecc:	81000317 	ldw	r4,12(r16)
    8ed0:	81400217 	ldw	r5,8(r16)
    8ed4:	18c00054 	ori	r3,r3,1
    8ed8:	10c00115 	stw	r3,4(r2)
    8edc:	29000315 	stw	r4,12(r5)
    8ee0:	21400215 	stw	r5,8(r4)
    8ee4:	9009883a 	mov	r4,r18
    8ee8:	00122780 	call	12278 <__malloc_unlock>
    8eec:	80800204 	addi	r2,r16,8
    8ef0:	003f2506 	br	8b88 <__alt_mem_Onchip_SRAM+0xf8008b88>
    8ef4:	12001704 	addi	r8,r2,92
    8ef8:	11c016c4 	addi	r7,r2,91
    8efc:	4209883a 	add	r4,r8,r8
    8f00:	003e9606 	br	895c <__alt_mem_Onchip_SRAM+0xf800895c>
    8f04:	3804d1ba 	srli	r2,r7,6
    8f08:	11400e44 	addi	r5,r2,57
    8f0c:	10c00e04 	addi	r3,r2,56
    8f10:	294b883a 	add	r5,r5,r5
    8f14:	003fbc06 	br	8e08 <__alt_mem_Onchip_SRAM+0xf8008e08>
    8f18:	84ff5926 	beq	r16,r19,8c80 <__alt_mem_Onchip_SRAM+0xf8008c80>
    8f1c:	00800074 	movhi	r2,1
    8f20:	109c9104 	addi	r2,r2,29252
    8f24:	14000217 	ldw	r16,8(r2)
    8f28:	00bfff04 	movi	r2,-4
    8f2c:	80c00117 	ldw	r3,4(r16)
    8f30:	1886703a 	and	r3,r3,r2
    8f34:	003f9106 	br	8d7c <__alt_mem_Onchip_SRAM+0xf8008d7c>
    8f38:	60800217 	ldw	r2,8(r12)
    8f3c:	213fffc4 	addi	r4,r4,-1
    8f40:	1300651e 	bne	r2,r12,90d8 <_malloc_r+0x7f4>
    8f44:	208000cc 	andi	r2,r4,3
    8f48:	633ffe04 	addi	r12,r12,-8
    8f4c:	103ffa1e 	bne	r2,zero,8f38 <__alt_mem_Onchip_SRAM+0xf8008f38>
    8f50:	98800117 	ldw	r2,4(r19)
    8f54:	0146303a 	nor	r3,zero,r5
    8f58:	1884703a 	and	r2,r3,r2
    8f5c:	98800115 	stw	r2,4(r19)
    8f60:	294b883a 	add	r5,r5,r5
    8f64:	117f2836 	bltu	r2,r5,8c08 <__alt_mem_Onchip_SRAM+0xf8008c08>
    8f68:	283f2726 	beq	r5,zero,8c08 <__alt_mem_Onchip_SRAM+0xf8008c08>
    8f6c:	2886703a 	and	r3,r5,r2
    8f70:	5809883a 	mov	r4,r11
    8f74:	183ec31e 	bne	r3,zero,8a84 <__alt_mem_Onchip_SRAM+0xf8008a84>
    8f78:	294b883a 	add	r5,r5,r5
    8f7c:	2886703a 	and	r3,r5,r2
    8f80:	21000104 	addi	r4,r4,4
    8f84:	183ffc26 	beq	r3,zero,8f78 <__alt_mem_Onchip_SRAM+0xf8008f78>
    8f88:	003ebe06 	br	8a84 <__alt_mem_Onchip_SRAM+0xf8008a84>
    8f8c:	00c05504 	movi	r3,340
    8f90:	18801236 	bltu	r3,r2,8fdc <_malloc_r+0x6f8>
    8f94:	8804d3fa 	srli	r2,r17,15
    8f98:	12001e04 	addi	r8,r2,120
    8f9c:	11c01dc4 	addi	r7,r2,119
    8fa0:	4209883a 	add	r4,r8,r8
    8fa4:	003e6d06 	br	895c <__alt_mem_Onchip_SRAM+0xf800895c>
    8fa8:	00c40004 	movi	r3,4096
    8fac:	003f4606 	br	8cc8 <__alt_mem_Onchip_SRAM+0xf8008cc8>
    8fb0:	00800044 	movi	r2,1
    8fb4:	a0800115 	stw	r2,4(r20)
    8fb8:	003f7406 	br	8d8c <__alt_mem_Onchip_SRAM+0xf8008d8c>
    8fbc:	1805d0ba 	srai	r2,r3,2
    8fc0:	01c00044 	movi	r7,1
    8fc4:	30c00117 	ldw	r3,4(r6)
    8fc8:	388e983a 	sll	r7,r7,r2
    8fcc:	2805883a 	mov	r2,r5
    8fd0:	38c6b03a 	or	r3,r7,r3
    8fd4:	30c00115 	stw	r3,4(r6)
    8fd8:	003f9b06 	br	8e48 <__alt_mem_Onchip_SRAM+0xf8008e48>
    8fdc:	00c15504 	movi	r3,1364
    8fe0:	18801a36 	bltu	r3,r2,904c <_malloc_r+0x768>
    8fe4:	8804d4ba 	srli	r2,r17,18
    8fe8:	12001f44 	addi	r8,r2,125
    8fec:	11c01f04 	addi	r7,r2,124
    8ff0:	4209883a 	add	r4,r8,r8
    8ff4:	003e5906 	br	895c <__alt_mem_Onchip_SRAM+0xf800895c>
    8ff8:	ad400404 	addi	r21,r21,16
    8ffc:	003f1706 	br	8c5c <__alt_mem_Onchip_SRAM+0xf8008c5c>
    9000:	00c01504 	movi	r3,84
    9004:	18802336 	bltu	r3,r2,9094 <_malloc_r+0x7b0>
    9008:	3804d33a 	srli	r2,r7,12
    900c:	11401bc4 	addi	r5,r2,111
    9010:	10c01b84 	addi	r3,r2,110
    9014:	294b883a 	add	r5,r5,r5
    9018:	003f7b06 	br	8e08 <__alt_mem_Onchip_SRAM+0xf8008e08>
    901c:	9c000217 	ldw	r16,8(r19)
    9020:	00bfff04 	movi	r2,-4
    9024:	80c00117 	ldw	r3,4(r16)
    9028:	1886703a 	and	r3,r3,r2
    902c:	003f5306 	br	8d7c <__alt_mem_Onchip_SRAM+0xf8008d7c>
    9030:	3083ffcc 	andi	r2,r6,4095
    9034:	103f181e 	bne	r2,zero,8c98 <__alt_mem_Onchip_SRAM+0xf8008c98>
    9038:	99000217 	ldw	r4,8(r19)
    903c:	b545883a 	add	r2,r22,r21
    9040:	10800054 	ori	r2,r2,1
    9044:	20800115 	stw	r2,4(r4)
    9048:	003f3e06 	br	8d44 <__alt_mem_Onchip_SRAM+0xf8008d44>
    904c:	01003f84 	movi	r4,254
    9050:	02001fc4 	movi	r8,127
    9054:	01c01f84 	movi	r7,126
    9058:	003e4006 	br	895c <__alt_mem_Onchip_SRAM+0xf800895c>
    905c:	008000b4 	movhi	r2,2
    9060:	10a24b04 	addi	r2,r2,-30420
    9064:	15000015 	stw	r20,0(r2)
    9068:	003f1106 	br	8cb0 <__alt_mem_Onchip_SRAM+0xf8008cb0>
    906c:	00800044 	movi	r2,1
    9070:	002b883a 	mov	r21,zero
    9074:	003f1f06 	br	8cf4 <__alt_mem_Onchip_SRAM+0xf8008cf4>
    9078:	81400204 	addi	r5,r16,8
    907c:	9009883a 	mov	r4,r18
    9080:	0007c900 	call	7c90 <_free_r>
    9084:	008000b4 	movhi	r2,2
    9088:	10a96004 	addi	r2,r2,-23168
    908c:	10c00017 	ldw	r3,0(r2)
    9090:	003f2c06 	br	8d44 <__alt_mem_Onchip_SRAM+0xf8008d44>
    9094:	00c05504 	movi	r3,340
    9098:	18800536 	bltu	r3,r2,90b0 <_malloc_r+0x7cc>
    909c:	3804d3fa 	srli	r2,r7,15
    90a0:	11401e04 	addi	r5,r2,120
    90a4:	10c01dc4 	addi	r3,r2,119
    90a8:	294b883a 	add	r5,r5,r5
    90ac:	003f5606 	br	8e08 <__alt_mem_Onchip_SRAM+0xf8008e08>
    90b0:	00c15504 	movi	r3,1364
    90b4:	18800536 	bltu	r3,r2,90cc <_malloc_r+0x7e8>
    90b8:	3804d4ba 	srli	r2,r7,18
    90bc:	11401f44 	addi	r5,r2,125
    90c0:	10c01f04 	addi	r3,r2,124
    90c4:	294b883a 	add	r5,r5,r5
    90c8:	003f4f06 	br	8e08 <__alt_mem_Onchip_SRAM+0xf8008e08>
    90cc:	01403f84 	movi	r5,254
    90d0:	00c01f84 	movi	r3,126
    90d4:	003f4c06 	br	8e08 <__alt_mem_Onchip_SRAM+0xf8008e08>
    90d8:	98800117 	ldw	r2,4(r19)
    90dc:	003fa006 	br	8f60 <__alt_mem_Onchip_SRAM+0xf8008f60>
    90e0:	8808d0fa 	srli	r4,r17,3
    90e4:	20800044 	addi	r2,r4,1
    90e8:	1085883a 	add	r2,r2,r2
    90ec:	003e9006 	br	8b30 <__alt_mem_Onchip_SRAM+0xf8008b30>

000090f0 <memchr>:
    90f0:	208000cc 	andi	r2,r4,3
    90f4:	280f883a 	mov	r7,r5
    90f8:	10003426 	beq	r2,zero,91cc <memchr+0xdc>
    90fc:	30bfffc4 	addi	r2,r6,-1
    9100:	30001a26 	beq	r6,zero,916c <memchr+0x7c>
    9104:	20c00003 	ldbu	r3,0(r4)
    9108:	29803fcc 	andi	r6,r5,255
    910c:	30c0051e 	bne	r6,r3,9124 <memchr+0x34>
    9110:	00001806 	br	9174 <memchr+0x84>
    9114:	10001526 	beq	r2,zero,916c <memchr+0x7c>
    9118:	20c00003 	ldbu	r3,0(r4)
    911c:	10bfffc4 	addi	r2,r2,-1
    9120:	30c01426 	beq	r6,r3,9174 <memchr+0x84>
    9124:	21000044 	addi	r4,r4,1
    9128:	20c000cc 	andi	r3,r4,3
    912c:	183ff91e 	bne	r3,zero,9114 <__alt_mem_Onchip_SRAM+0xf8009114>
    9130:	020000c4 	movi	r8,3
    9134:	40801136 	bltu	r8,r2,917c <memchr+0x8c>
    9138:	10000c26 	beq	r2,zero,916c <memchr+0x7c>
    913c:	20c00003 	ldbu	r3,0(r4)
    9140:	29403fcc 	andi	r5,r5,255
    9144:	28c00b26 	beq	r5,r3,9174 <memchr+0x84>
    9148:	20c00044 	addi	r3,r4,1
    914c:	39803fcc 	andi	r6,r7,255
    9150:	2089883a 	add	r4,r4,r2
    9154:	00000306 	br	9164 <memchr+0x74>
    9158:	18c00044 	addi	r3,r3,1
    915c:	197fffc3 	ldbu	r5,-1(r3)
    9160:	31400526 	beq	r6,r5,9178 <memchr+0x88>
    9164:	1805883a 	mov	r2,r3
    9168:	20fffb1e 	bne	r4,r3,9158 <__alt_mem_Onchip_SRAM+0xf8009158>
    916c:	0005883a 	mov	r2,zero
    9170:	f800283a 	ret
    9174:	2005883a 	mov	r2,r4
    9178:	f800283a 	ret
    917c:	28c03fcc 	andi	r3,r5,255
    9180:	1812923a 	slli	r9,r3,8
    9184:	02ffbff4 	movhi	r11,65279
    9188:	02a02074 	movhi	r10,32897
    918c:	48d2b03a 	or	r9,r9,r3
    9190:	4806943a 	slli	r3,r9,16
    9194:	5affbfc4 	addi	r11,r11,-257
    9198:	52a02004 	addi	r10,r10,-32640
    919c:	48d2b03a 	or	r9,r9,r3
    91a0:	20c00017 	ldw	r3,0(r4)
    91a4:	48c6f03a 	xor	r3,r9,r3
    91a8:	1acd883a 	add	r6,r3,r11
    91ac:	00c6303a 	nor	r3,zero,r3
    91b0:	30c6703a 	and	r3,r6,r3
    91b4:	1a86703a 	and	r3,r3,r10
    91b8:	183fe01e 	bne	r3,zero,913c <__alt_mem_Onchip_SRAM+0xf800913c>
    91bc:	10bfff04 	addi	r2,r2,-4
    91c0:	21000104 	addi	r4,r4,4
    91c4:	40bff636 	bltu	r8,r2,91a0 <__alt_mem_Onchip_SRAM+0xf80091a0>
    91c8:	003fdb06 	br	9138 <__alt_mem_Onchip_SRAM+0xf8009138>
    91cc:	3005883a 	mov	r2,r6
    91d0:	003fd706 	br	9130 <__alt_mem_Onchip_SRAM+0xf8009130>

000091d4 <memcpy>:
    91d4:	defffd04 	addi	sp,sp,-12
    91d8:	dfc00215 	stw	ra,8(sp)
    91dc:	dc400115 	stw	r17,4(sp)
    91e0:	dc000015 	stw	r16,0(sp)
    91e4:	00c003c4 	movi	r3,15
    91e8:	2005883a 	mov	r2,r4
    91ec:	1980452e 	bgeu	r3,r6,9304 <memcpy+0x130>
    91f0:	2906b03a 	or	r3,r5,r4
    91f4:	18c000cc 	andi	r3,r3,3
    91f8:	1800441e 	bne	r3,zero,930c <memcpy+0x138>
    91fc:	347ffc04 	addi	r17,r6,-16
    9200:	8822d13a 	srli	r17,r17,4
    9204:	28c00104 	addi	r3,r5,4
    9208:	23400104 	addi	r13,r4,4
    920c:	8820913a 	slli	r16,r17,4
    9210:	2b000204 	addi	r12,r5,8
    9214:	22c00204 	addi	r11,r4,8
    9218:	84000504 	addi	r16,r16,20
    921c:	2a800304 	addi	r10,r5,12
    9220:	22400304 	addi	r9,r4,12
    9224:	2c21883a 	add	r16,r5,r16
    9228:	2811883a 	mov	r8,r5
    922c:	200f883a 	mov	r7,r4
    9230:	41000017 	ldw	r4,0(r8)
    9234:	1fc00017 	ldw	ra,0(r3)
    9238:	63c00017 	ldw	r15,0(r12)
    923c:	39000015 	stw	r4,0(r7)
    9240:	53800017 	ldw	r14,0(r10)
    9244:	6fc00015 	stw	ra,0(r13)
    9248:	5bc00015 	stw	r15,0(r11)
    924c:	4b800015 	stw	r14,0(r9)
    9250:	18c00404 	addi	r3,r3,16
    9254:	39c00404 	addi	r7,r7,16
    9258:	42000404 	addi	r8,r8,16
    925c:	6b400404 	addi	r13,r13,16
    9260:	63000404 	addi	r12,r12,16
    9264:	5ac00404 	addi	r11,r11,16
    9268:	52800404 	addi	r10,r10,16
    926c:	4a400404 	addi	r9,r9,16
    9270:	1c3fef1e 	bne	r3,r16,9230 <__alt_mem_Onchip_SRAM+0xf8009230>
    9274:	89c00044 	addi	r7,r17,1
    9278:	380e913a 	slli	r7,r7,4
    927c:	310003cc 	andi	r4,r6,15
    9280:	02c000c4 	movi	r11,3
    9284:	11c7883a 	add	r3,r2,r7
    9288:	29cb883a 	add	r5,r5,r7
    928c:	5900212e 	bgeu	r11,r4,9314 <memcpy+0x140>
    9290:	1813883a 	mov	r9,r3
    9294:	2811883a 	mov	r8,r5
    9298:	200f883a 	mov	r7,r4
    929c:	42800017 	ldw	r10,0(r8)
    92a0:	4a400104 	addi	r9,r9,4
    92a4:	39ffff04 	addi	r7,r7,-4
    92a8:	4abfff15 	stw	r10,-4(r9)
    92ac:	42000104 	addi	r8,r8,4
    92b0:	59fffa36 	bltu	r11,r7,929c <__alt_mem_Onchip_SRAM+0xf800929c>
    92b4:	213fff04 	addi	r4,r4,-4
    92b8:	2008d0ba 	srli	r4,r4,2
    92bc:	318000cc 	andi	r6,r6,3
    92c0:	21000044 	addi	r4,r4,1
    92c4:	2109883a 	add	r4,r4,r4
    92c8:	2109883a 	add	r4,r4,r4
    92cc:	1907883a 	add	r3,r3,r4
    92d0:	290b883a 	add	r5,r5,r4
    92d4:	30000626 	beq	r6,zero,92f0 <memcpy+0x11c>
    92d8:	198d883a 	add	r6,r3,r6
    92dc:	29c00003 	ldbu	r7,0(r5)
    92e0:	18c00044 	addi	r3,r3,1
    92e4:	29400044 	addi	r5,r5,1
    92e8:	19ffffc5 	stb	r7,-1(r3)
    92ec:	19bffb1e 	bne	r3,r6,92dc <__alt_mem_Onchip_SRAM+0xf80092dc>
    92f0:	dfc00217 	ldw	ra,8(sp)
    92f4:	dc400117 	ldw	r17,4(sp)
    92f8:	dc000017 	ldw	r16,0(sp)
    92fc:	dec00304 	addi	sp,sp,12
    9300:	f800283a 	ret
    9304:	2007883a 	mov	r3,r4
    9308:	003ff206 	br	92d4 <__alt_mem_Onchip_SRAM+0xf80092d4>
    930c:	2007883a 	mov	r3,r4
    9310:	003ff106 	br	92d8 <__alt_mem_Onchip_SRAM+0xf80092d8>
    9314:	200d883a 	mov	r6,r4
    9318:	003fee06 	br	92d4 <__alt_mem_Onchip_SRAM+0xf80092d4>

0000931c <memmove>:
    931c:	2005883a 	mov	r2,r4
    9320:	29000b2e 	bgeu	r5,r4,9350 <memmove+0x34>
    9324:	298f883a 	add	r7,r5,r6
    9328:	21c0092e 	bgeu	r4,r7,9350 <memmove+0x34>
    932c:	2187883a 	add	r3,r4,r6
    9330:	198bc83a 	sub	r5,r3,r6
    9334:	30004826 	beq	r6,zero,9458 <memmove+0x13c>
    9338:	39ffffc4 	addi	r7,r7,-1
    933c:	39000003 	ldbu	r4,0(r7)
    9340:	18ffffc4 	addi	r3,r3,-1
    9344:	19000005 	stb	r4,0(r3)
    9348:	28fffb1e 	bne	r5,r3,9338 <__alt_mem_Onchip_SRAM+0xf8009338>
    934c:	f800283a 	ret
    9350:	00c003c4 	movi	r3,15
    9354:	1980412e 	bgeu	r3,r6,945c <memmove+0x140>
    9358:	2886b03a 	or	r3,r5,r2
    935c:	18c000cc 	andi	r3,r3,3
    9360:	1800401e 	bne	r3,zero,9464 <memmove+0x148>
    9364:	33fffc04 	addi	r15,r6,-16
    9368:	781ed13a 	srli	r15,r15,4
    936c:	28c00104 	addi	r3,r5,4
    9370:	13400104 	addi	r13,r2,4
    9374:	781c913a 	slli	r14,r15,4
    9378:	2b000204 	addi	r12,r5,8
    937c:	12c00204 	addi	r11,r2,8
    9380:	73800504 	addi	r14,r14,20
    9384:	2a800304 	addi	r10,r5,12
    9388:	12400304 	addi	r9,r2,12
    938c:	2b9d883a 	add	r14,r5,r14
    9390:	2811883a 	mov	r8,r5
    9394:	100f883a 	mov	r7,r2
    9398:	41000017 	ldw	r4,0(r8)
    939c:	39c00404 	addi	r7,r7,16
    93a0:	18c00404 	addi	r3,r3,16
    93a4:	393ffc15 	stw	r4,-16(r7)
    93a8:	193ffc17 	ldw	r4,-16(r3)
    93ac:	6b400404 	addi	r13,r13,16
    93b0:	5ac00404 	addi	r11,r11,16
    93b4:	693ffc15 	stw	r4,-16(r13)
    93b8:	61000017 	ldw	r4,0(r12)
    93bc:	4a400404 	addi	r9,r9,16
    93c0:	42000404 	addi	r8,r8,16
    93c4:	593ffc15 	stw	r4,-16(r11)
    93c8:	51000017 	ldw	r4,0(r10)
    93cc:	63000404 	addi	r12,r12,16
    93d0:	52800404 	addi	r10,r10,16
    93d4:	493ffc15 	stw	r4,-16(r9)
    93d8:	1bbfef1e 	bne	r3,r14,9398 <__alt_mem_Onchip_SRAM+0xf8009398>
    93dc:	79000044 	addi	r4,r15,1
    93e0:	2008913a 	slli	r4,r4,4
    93e4:	328003cc 	andi	r10,r6,15
    93e8:	02c000c4 	movi	r11,3
    93ec:	1107883a 	add	r3,r2,r4
    93f0:	290b883a 	add	r5,r5,r4
    93f4:	5a801e2e 	bgeu	r11,r10,9470 <memmove+0x154>
    93f8:	1813883a 	mov	r9,r3
    93fc:	2811883a 	mov	r8,r5
    9400:	500f883a 	mov	r7,r10
    9404:	41000017 	ldw	r4,0(r8)
    9408:	4a400104 	addi	r9,r9,4
    940c:	39ffff04 	addi	r7,r7,-4
    9410:	493fff15 	stw	r4,-4(r9)
    9414:	42000104 	addi	r8,r8,4
    9418:	59fffa36 	bltu	r11,r7,9404 <__alt_mem_Onchip_SRAM+0xf8009404>
    941c:	513fff04 	addi	r4,r10,-4
    9420:	2008d0ba 	srli	r4,r4,2
    9424:	318000cc 	andi	r6,r6,3
    9428:	21000044 	addi	r4,r4,1
    942c:	2109883a 	add	r4,r4,r4
    9430:	2109883a 	add	r4,r4,r4
    9434:	1907883a 	add	r3,r3,r4
    9438:	290b883a 	add	r5,r5,r4
    943c:	30000b26 	beq	r6,zero,946c <memmove+0x150>
    9440:	198d883a 	add	r6,r3,r6
    9444:	29c00003 	ldbu	r7,0(r5)
    9448:	18c00044 	addi	r3,r3,1
    944c:	29400044 	addi	r5,r5,1
    9450:	19ffffc5 	stb	r7,-1(r3)
    9454:	19bffb1e 	bne	r3,r6,9444 <__alt_mem_Onchip_SRAM+0xf8009444>
    9458:	f800283a 	ret
    945c:	1007883a 	mov	r3,r2
    9460:	003ff606 	br	943c <__alt_mem_Onchip_SRAM+0xf800943c>
    9464:	1007883a 	mov	r3,r2
    9468:	003ff506 	br	9440 <__alt_mem_Onchip_SRAM+0xf8009440>
    946c:	f800283a 	ret
    9470:	500d883a 	mov	r6,r10
    9474:	003ff106 	br	943c <__alt_mem_Onchip_SRAM+0xf800943c>

00009478 <memset>:
    9478:	20c000cc 	andi	r3,r4,3
    947c:	2005883a 	mov	r2,r4
    9480:	18004426 	beq	r3,zero,9594 <memset+0x11c>
    9484:	31ffffc4 	addi	r7,r6,-1
    9488:	30004026 	beq	r6,zero,958c <memset+0x114>
    948c:	2813883a 	mov	r9,r5
    9490:	200d883a 	mov	r6,r4
    9494:	2007883a 	mov	r3,r4
    9498:	00000406 	br	94ac <memset+0x34>
    949c:	3a3fffc4 	addi	r8,r7,-1
    94a0:	31800044 	addi	r6,r6,1
    94a4:	38003926 	beq	r7,zero,958c <memset+0x114>
    94a8:	400f883a 	mov	r7,r8
    94ac:	18c00044 	addi	r3,r3,1
    94b0:	32400005 	stb	r9,0(r6)
    94b4:	1a0000cc 	andi	r8,r3,3
    94b8:	403ff81e 	bne	r8,zero,949c <__alt_mem_Onchip_SRAM+0xf800949c>
    94bc:	010000c4 	movi	r4,3
    94c0:	21c02d2e 	bgeu	r4,r7,9578 <memset+0x100>
    94c4:	29003fcc 	andi	r4,r5,255
    94c8:	200c923a 	slli	r6,r4,8
    94cc:	3108b03a 	or	r4,r6,r4
    94d0:	200c943a 	slli	r6,r4,16
    94d4:	218cb03a 	or	r6,r4,r6
    94d8:	010003c4 	movi	r4,15
    94dc:	21c0182e 	bgeu	r4,r7,9540 <memset+0xc8>
    94e0:	3b3ffc04 	addi	r12,r7,-16
    94e4:	6018d13a 	srli	r12,r12,4
    94e8:	1a000104 	addi	r8,r3,4
    94ec:	1ac00204 	addi	r11,r3,8
    94f0:	6008913a 	slli	r4,r12,4
    94f4:	1a800304 	addi	r10,r3,12
    94f8:	1813883a 	mov	r9,r3
    94fc:	21000504 	addi	r4,r4,20
    9500:	1909883a 	add	r4,r3,r4
    9504:	49800015 	stw	r6,0(r9)
    9508:	41800015 	stw	r6,0(r8)
    950c:	59800015 	stw	r6,0(r11)
    9510:	51800015 	stw	r6,0(r10)
    9514:	42000404 	addi	r8,r8,16
    9518:	4a400404 	addi	r9,r9,16
    951c:	5ac00404 	addi	r11,r11,16
    9520:	52800404 	addi	r10,r10,16
    9524:	413ff71e 	bne	r8,r4,9504 <__alt_mem_Onchip_SRAM+0xf8009504>
    9528:	63000044 	addi	r12,r12,1
    952c:	6018913a 	slli	r12,r12,4
    9530:	39c003cc 	andi	r7,r7,15
    9534:	010000c4 	movi	r4,3
    9538:	1b07883a 	add	r3,r3,r12
    953c:	21c00e2e 	bgeu	r4,r7,9578 <memset+0x100>
    9540:	1813883a 	mov	r9,r3
    9544:	3811883a 	mov	r8,r7
    9548:	010000c4 	movi	r4,3
    954c:	49800015 	stw	r6,0(r9)
    9550:	423fff04 	addi	r8,r8,-4
    9554:	4a400104 	addi	r9,r9,4
    9558:	223ffc36 	bltu	r4,r8,954c <__alt_mem_Onchip_SRAM+0xf800954c>
    955c:	393fff04 	addi	r4,r7,-4
    9560:	2008d0ba 	srli	r4,r4,2
    9564:	39c000cc 	andi	r7,r7,3
    9568:	21000044 	addi	r4,r4,1
    956c:	2109883a 	add	r4,r4,r4
    9570:	2109883a 	add	r4,r4,r4
    9574:	1907883a 	add	r3,r3,r4
    9578:	38000526 	beq	r7,zero,9590 <memset+0x118>
    957c:	19cf883a 	add	r7,r3,r7
    9580:	19400005 	stb	r5,0(r3)
    9584:	18c00044 	addi	r3,r3,1
    9588:	38fffd1e 	bne	r7,r3,9580 <__alt_mem_Onchip_SRAM+0xf8009580>
    958c:	f800283a 	ret
    9590:	f800283a 	ret
    9594:	2007883a 	mov	r3,r4
    9598:	300f883a 	mov	r7,r6
    959c:	003fc706 	br	94bc <__alt_mem_Onchip_SRAM+0xf80094bc>

000095a0 <_Balloc>:
    95a0:	20801317 	ldw	r2,76(r4)
    95a4:	defffc04 	addi	sp,sp,-16
    95a8:	dc400115 	stw	r17,4(sp)
    95ac:	dc000015 	stw	r16,0(sp)
    95b0:	dfc00315 	stw	ra,12(sp)
    95b4:	dc800215 	stw	r18,8(sp)
    95b8:	2023883a 	mov	r17,r4
    95bc:	2821883a 	mov	r16,r5
    95c0:	10000f26 	beq	r2,zero,9600 <_Balloc+0x60>
    95c4:	8407883a 	add	r3,r16,r16
    95c8:	18c7883a 	add	r3,r3,r3
    95cc:	10c7883a 	add	r3,r2,r3
    95d0:	18800017 	ldw	r2,0(r3)
    95d4:	10001126 	beq	r2,zero,961c <_Balloc+0x7c>
    95d8:	11000017 	ldw	r4,0(r2)
    95dc:	19000015 	stw	r4,0(r3)
    95e0:	10000415 	stw	zero,16(r2)
    95e4:	10000315 	stw	zero,12(r2)
    95e8:	dfc00317 	ldw	ra,12(sp)
    95ec:	dc800217 	ldw	r18,8(sp)
    95f0:	dc400117 	ldw	r17,4(sp)
    95f4:	dc000017 	ldw	r16,0(sp)
    95f8:	dec00404 	addi	sp,sp,16
    95fc:	f800283a 	ret
    9600:	01800844 	movi	r6,33
    9604:	01400104 	movi	r5,4
    9608:	000de780 	call	de78 <_calloc_r>
    960c:	88801315 	stw	r2,76(r17)
    9610:	103fec1e 	bne	r2,zero,95c4 <__alt_mem_Onchip_SRAM+0xf80095c4>
    9614:	0005883a 	mov	r2,zero
    9618:	003ff306 	br	95e8 <__alt_mem_Onchip_SRAM+0xf80095e8>
    961c:	01400044 	movi	r5,1
    9620:	2c24983a 	sll	r18,r5,r16
    9624:	8809883a 	mov	r4,r17
    9628:	91800144 	addi	r6,r18,5
    962c:	318d883a 	add	r6,r6,r6
    9630:	318d883a 	add	r6,r6,r6
    9634:	000de780 	call	de78 <_calloc_r>
    9638:	103ff626 	beq	r2,zero,9614 <__alt_mem_Onchip_SRAM+0xf8009614>
    963c:	14000115 	stw	r16,4(r2)
    9640:	14800215 	stw	r18,8(r2)
    9644:	003fe606 	br	95e0 <__alt_mem_Onchip_SRAM+0xf80095e0>

00009648 <_Bfree>:
    9648:	28000826 	beq	r5,zero,966c <_Bfree+0x24>
    964c:	28c00117 	ldw	r3,4(r5)
    9650:	20801317 	ldw	r2,76(r4)
    9654:	18c7883a 	add	r3,r3,r3
    9658:	18c7883a 	add	r3,r3,r3
    965c:	10c5883a 	add	r2,r2,r3
    9660:	10c00017 	ldw	r3,0(r2)
    9664:	28c00015 	stw	r3,0(r5)
    9668:	11400015 	stw	r5,0(r2)
    966c:	f800283a 	ret

00009670 <__multadd>:
    9670:	defff704 	addi	sp,sp,-36
    9674:	dc800215 	stw	r18,8(sp)
    9678:	2c800417 	ldw	r18,16(r5)
    967c:	dd800615 	stw	r22,24(sp)
    9680:	dd400515 	stw	r21,20(sp)
    9684:	dd000415 	stw	r20,16(sp)
    9688:	dcc00315 	stw	r19,12(sp)
    968c:	dc400115 	stw	r17,4(sp)
    9690:	dc000015 	stw	r16,0(sp)
    9694:	dfc00815 	stw	ra,32(sp)
    9698:	ddc00715 	stw	r23,28(sp)
    969c:	2827883a 	mov	r19,r5
    96a0:	2029883a 	mov	r20,r4
    96a4:	3023883a 	mov	r17,r6
    96a8:	3821883a 	mov	r16,r7
    96ac:	2d400504 	addi	r21,r5,20
    96b0:	002d883a 	mov	r22,zero
    96b4:	adc00017 	ldw	r23,0(r21)
    96b8:	880b883a 	mov	r5,r17
    96bc:	ad400104 	addi	r21,r21,4
    96c0:	b93fffcc 	andi	r4,r23,65535
    96c4:	0000ef80 	call	ef8 <__mulsi3>
    96c8:	b808d43a 	srli	r4,r23,16
    96cc:	880b883a 	mov	r5,r17
    96d0:	1421883a 	add	r16,r2,r16
    96d4:	0000ef80 	call	ef8 <__mulsi3>
    96d8:	800ed43a 	srli	r7,r16,16
    96dc:	80ffffcc 	andi	r3,r16,65535
    96e0:	b5800044 	addi	r22,r22,1
    96e4:	11c5883a 	add	r2,r2,r7
    96e8:	100e943a 	slli	r7,r2,16
    96ec:	1020d43a 	srli	r16,r2,16
    96f0:	38c7883a 	add	r3,r7,r3
    96f4:	a8ffff15 	stw	r3,-4(r21)
    96f8:	b4bfee16 	blt	r22,r18,96b4 <__alt_mem_Onchip_SRAM+0xf80096b4>
    96fc:	80000926 	beq	r16,zero,9724 <__multadd+0xb4>
    9700:	98800217 	ldw	r2,8(r19)
    9704:	9080130e 	bge	r18,r2,9754 <__multadd+0xe4>
    9708:	90800144 	addi	r2,r18,5
    970c:	1085883a 	add	r2,r2,r2
    9710:	1085883a 	add	r2,r2,r2
    9714:	9885883a 	add	r2,r19,r2
    9718:	14000015 	stw	r16,0(r2)
    971c:	94800044 	addi	r18,r18,1
    9720:	9c800415 	stw	r18,16(r19)
    9724:	9805883a 	mov	r2,r19
    9728:	dfc00817 	ldw	ra,32(sp)
    972c:	ddc00717 	ldw	r23,28(sp)
    9730:	dd800617 	ldw	r22,24(sp)
    9734:	dd400517 	ldw	r21,20(sp)
    9738:	dd000417 	ldw	r20,16(sp)
    973c:	dcc00317 	ldw	r19,12(sp)
    9740:	dc800217 	ldw	r18,8(sp)
    9744:	dc400117 	ldw	r17,4(sp)
    9748:	dc000017 	ldw	r16,0(sp)
    974c:	dec00904 	addi	sp,sp,36
    9750:	f800283a 	ret
    9754:	99400117 	ldw	r5,4(r19)
    9758:	a009883a 	mov	r4,r20
    975c:	29400044 	addi	r5,r5,1
    9760:	00095a00 	call	95a0 <_Balloc>
    9764:	99800417 	ldw	r6,16(r19)
    9768:	99400304 	addi	r5,r19,12
    976c:	11000304 	addi	r4,r2,12
    9770:	31800084 	addi	r6,r6,2
    9774:	318d883a 	add	r6,r6,r6
    9778:	318d883a 	add	r6,r6,r6
    977c:	1023883a 	mov	r17,r2
    9780:	00091d40 	call	91d4 <memcpy>
    9784:	98000a26 	beq	r19,zero,97b0 <__multadd+0x140>
    9788:	98c00117 	ldw	r3,4(r19)
    978c:	a0801317 	ldw	r2,76(r20)
    9790:	18c7883a 	add	r3,r3,r3
    9794:	18c7883a 	add	r3,r3,r3
    9798:	10c5883a 	add	r2,r2,r3
    979c:	10c00017 	ldw	r3,0(r2)
    97a0:	98c00015 	stw	r3,0(r19)
    97a4:	14c00015 	stw	r19,0(r2)
    97a8:	8827883a 	mov	r19,r17
    97ac:	003fd606 	br	9708 <__alt_mem_Onchip_SRAM+0xf8009708>
    97b0:	8827883a 	mov	r19,r17
    97b4:	003fd406 	br	9708 <__alt_mem_Onchip_SRAM+0xf8009708>

000097b8 <__s2b>:
    97b8:	defff904 	addi	sp,sp,-28
    97bc:	dc400115 	stw	r17,4(sp)
    97c0:	dc000015 	stw	r16,0(sp)
    97c4:	2023883a 	mov	r17,r4
    97c8:	2821883a 	mov	r16,r5
    97cc:	39000204 	addi	r4,r7,8
    97d0:	01400244 	movi	r5,9
    97d4:	dcc00315 	stw	r19,12(sp)
    97d8:	dc800215 	stw	r18,8(sp)
    97dc:	dfc00615 	stw	ra,24(sp)
    97e0:	dd400515 	stw	r21,20(sp)
    97e4:	dd000415 	stw	r20,16(sp)
    97e8:	3825883a 	mov	r18,r7
    97ec:	3027883a 	mov	r19,r6
    97f0:	0000d440 	call	d44 <__divsi3>
    97f4:	00c00044 	movi	r3,1
    97f8:	000b883a 	mov	r5,zero
    97fc:	1880030e 	bge	r3,r2,980c <__s2b+0x54>
    9800:	18c7883a 	add	r3,r3,r3
    9804:	29400044 	addi	r5,r5,1
    9808:	18bffd16 	blt	r3,r2,9800 <__alt_mem_Onchip_SRAM+0xf8009800>
    980c:	8809883a 	mov	r4,r17
    9810:	00095a00 	call	95a0 <_Balloc>
    9814:	d8c00717 	ldw	r3,28(sp)
    9818:	10c00515 	stw	r3,20(r2)
    981c:	00c00044 	movi	r3,1
    9820:	10c00415 	stw	r3,16(r2)
    9824:	00c00244 	movi	r3,9
    9828:	1cc0210e 	bge	r3,r19,98b0 <__s2b+0xf8>
    982c:	80eb883a 	add	r21,r16,r3
    9830:	a829883a 	mov	r20,r21
    9834:	84e1883a 	add	r16,r16,r19
    9838:	a1c00007 	ldb	r7,0(r20)
    983c:	01800284 	movi	r6,10
    9840:	a5000044 	addi	r20,r20,1
    9844:	100b883a 	mov	r5,r2
    9848:	39fff404 	addi	r7,r7,-48
    984c:	8809883a 	mov	r4,r17
    9850:	00096700 	call	9670 <__multadd>
    9854:	a43ff81e 	bne	r20,r16,9838 <__alt_mem_Onchip_SRAM+0xf8009838>
    9858:	ace1883a 	add	r16,r21,r19
    985c:	843ffe04 	addi	r16,r16,-8
    9860:	9c800a0e 	bge	r19,r18,988c <__s2b+0xd4>
    9864:	94e5c83a 	sub	r18,r18,r19
    9868:	84a5883a 	add	r18,r16,r18
    986c:	81c00007 	ldb	r7,0(r16)
    9870:	01800284 	movi	r6,10
    9874:	84000044 	addi	r16,r16,1
    9878:	100b883a 	mov	r5,r2
    987c:	39fff404 	addi	r7,r7,-48
    9880:	8809883a 	mov	r4,r17
    9884:	00096700 	call	9670 <__multadd>
    9888:	84bff81e 	bne	r16,r18,986c <__alt_mem_Onchip_SRAM+0xf800986c>
    988c:	dfc00617 	ldw	ra,24(sp)
    9890:	dd400517 	ldw	r21,20(sp)
    9894:	dd000417 	ldw	r20,16(sp)
    9898:	dcc00317 	ldw	r19,12(sp)
    989c:	dc800217 	ldw	r18,8(sp)
    98a0:	dc400117 	ldw	r17,4(sp)
    98a4:	dc000017 	ldw	r16,0(sp)
    98a8:	dec00704 	addi	sp,sp,28
    98ac:	f800283a 	ret
    98b0:	84000284 	addi	r16,r16,10
    98b4:	1827883a 	mov	r19,r3
    98b8:	003fe906 	br	9860 <__alt_mem_Onchip_SRAM+0xf8009860>

000098bc <__hi0bits>:
    98bc:	20bfffec 	andhi	r2,r4,65535
    98c0:	1000141e 	bne	r2,zero,9914 <__hi0bits+0x58>
    98c4:	2008943a 	slli	r4,r4,16
    98c8:	00800404 	movi	r2,16
    98cc:	20ffc02c 	andhi	r3,r4,65280
    98d0:	1800021e 	bne	r3,zero,98dc <__hi0bits+0x20>
    98d4:	2008923a 	slli	r4,r4,8
    98d8:	10800204 	addi	r2,r2,8
    98dc:	20fc002c 	andhi	r3,r4,61440
    98e0:	1800021e 	bne	r3,zero,98ec <__hi0bits+0x30>
    98e4:	2008913a 	slli	r4,r4,4
    98e8:	10800104 	addi	r2,r2,4
    98ec:	20f0002c 	andhi	r3,r4,49152
    98f0:	1800031e 	bne	r3,zero,9900 <__hi0bits+0x44>
    98f4:	2109883a 	add	r4,r4,r4
    98f8:	10800084 	addi	r2,r2,2
    98fc:	2109883a 	add	r4,r4,r4
    9900:	20000316 	blt	r4,zero,9910 <__hi0bits+0x54>
    9904:	2110002c 	andhi	r4,r4,16384
    9908:	2000041e 	bne	r4,zero,991c <__hi0bits+0x60>
    990c:	00800804 	movi	r2,32
    9910:	f800283a 	ret
    9914:	0005883a 	mov	r2,zero
    9918:	003fec06 	br	98cc <__alt_mem_Onchip_SRAM+0xf80098cc>
    991c:	10800044 	addi	r2,r2,1
    9920:	f800283a 	ret

00009924 <__lo0bits>:
    9924:	20c00017 	ldw	r3,0(r4)
    9928:	188001cc 	andi	r2,r3,7
    992c:	10000826 	beq	r2,zero,9950 <__lo0bits+0x2c>
    9930:	1880004c 	andi	r2,r3,1
    9934:	1000211e 	bne	r2,zero,99bc <__lo0bits+0x98>
    9938:	1880008c 	andi	r2,r3,2
    993c:	1000211e 	bne	r2,zero,99c4 <__lo0bits+0xa0>
    9940:	1806d0ba 	srli	r3,r3,2
    9944:	00800084 	movi	r2,2
    9948:	20c00015 	stw	r3,0(r4)
    994c:	f800283a 	ret
    9950:	18bfffcc 	andi	r2,r3,65535
    9954:	10001326 	beq	r2,zero,99a4 <__lo0bits+0x80>
    9958:	0005883a 	mov	r2,zero
    995c:	19403fcc 	andi	r5,r3,255
    9960:	2800021e 	bne	r5,zero,996c <__lo0bits+0x48>
    9964:	1806d23a 	srli	r3,r3,8
    9968:	10800204 	addi	r2,r2,8
    996c:	194003cc 	andi	r5,r3,15
    9970:	2800021e 	bne	r5,zero,997c <__lo0bits+0x58>
    9974:	1806d13a 	srli	r3,r3,4
    9978:	10800104 	addi	r2,r2,4
    997c:	194000cc 	andi	r5,r3,3
    9980:	2800021e 	bne	r5,zero,998c <__lo0bits+0x68>
    9984:	1806d0ba 	srli	r3,r3,2
    9988:	10800084 	addi	r2,r2,2
    998c:	1940004c 	andi	r5,r3,1
    9990:	2800081e 	bne	r5,zero,99b4 <__lo0bits+0x90>
    9994:	1806d07a 	srli	r3,r3,1
    9998:	1800051e 	bne	r3,zero,99b0 <__lo0bits+0x8c>
    999c:	00800804 	movi	r2,32
    99a0:	f800283a 	ret
    99a4:	1806d43a 	srli	r3,r3,16
    99a8:	00800404 	movi	r2,16
    99ac:	003feb06 	br	995c <__alt_mem_Onchip_SRAM+0xf800995c>
    99b0:	10800044 	addi	r2,r2,1
    99b4:	20c00015 	stw	r3,0(r4)
    99b8:	f800283a 	ret
    99bc:	0005883a 	mov	r2,zero
    99c0:	f800283a 	ret
    99c4:	1806d07a 	srli	r3,r3,1
    99c8:	00800044 	movi	r2,1
    99cc:	20c00015 	stw	r3,0(r4)
    99d0:	f800283a 	ret

000099d4 <__i2b>:
    99d4:	defffd04 	addi	sp,sp,-12
    99d8:	dc000015 	stw	r16,0(sp)
    99dc:	04000044 	movi	r16,1
    99e0:	dc400115 	stw	r17,4(sp)
    99e4:	2823883a 	mov	r17,r5
    99e8:	800b883a 	mov	r5,r16
    99ec:	dfc00215 	stw	ra,8(sp)
    99f0:	00095a00 	call	95a0 <_Balloc>
    99f4:	14400515 	stw	r17,20(r2)
    99f8:	14000415 	stw	r16,16(r2)
    99fc:	dfc00217 	ldw	ra,8(sp)
    9a00:	dc400117 	ldw	r17,4(sp)
    9a04:	dc000017 	ldw	r16,0(sp)
    9a08:	dec00304 	addi	sp,sp,12
    9a0c:	f800283a 	ret

00009a10 <__multiply>:
    9a10:	deffef04 	addi	sp,sp,-68
    9a14:	dc400815 	stw	r17,32(sp)
    9a18:	dc000715 	stw	r16,28(sp)
    9a1c:	34400417 	ldw	r17,16(r6)
    9a20:	2c000417 	ldw	r16,16(r5)
    9a24:	dd800d15 	stw	r22,52(sp)
    9a28:	dc800915 	stw	r18,36(sp)
    9a2c:	dfc01015 	stw	ra,64(sp)
    9a30:	df000f15 	stw	fp,60(sp)
    9a34:	ddc00e15 	stw	r23,56(sp)
    9a38:	dd400c15 	stw	r21,48(sp)
    9a3c:	dd000b15 	stw	r20,44(sp)
    9a40:	dcc00a15 	stw	r19,40(sp)
    9a44:	2825883a 	mov	r18,r5
    9a48:	302d883a 	mov	r22,r6
    9a4c:	8440050e 	bge	r16,r17,9a64 <__multiply+0x54>
    9a50:	8007883a 	mov	r3,r16
    9a54:	3025883a 	mov	r18,r6
    9a58:	8821883a 	mov	r16,r17
    9a5c:	282d883a 	mov	r22,r5
    9a60:	1823883a 	mov	r17,r3
    9a64:	90800217 	ldw	r2,8(r18)
    9a68:	8447883a 	add	r3,r16,r17
    9a6c:	d8c00215 	stw	r3,8(sp)
    9a70:	91400117 	ldw	r5,4(r18)
    9a74:	10c0010e 	bge	r2,r3,9a7c <__multiply+0x6c>
    9a78:	29400044 	addi	r5,r5,1
    9a7c:	00095a00 	call	95a0 <_Balloc>
    9a80:	d8c00217 	ldw	r3,8(sp)
    9a84:	d8800615 	stw	r2,24(sp)
    9a88:	18eb883a 	add	r21,r3,r3
    9a8c:	ad6b883a 	add	r21,r21,r21
    9a90:	10c00504 	addi	r3,r2,20
    9a94:	1d6b883a 	add	r21,r3,r21
    9a98:	d8c00115 	stw	r3,4(sp)
    9a9c:	dd400315 	stw	r21,12(sp)
    9aa0:	1805883a 	mov	r2,r3
    9aa4:	1d40042e 	bgeu	r3,r21,9ab8 <__multiply+0xa8>
    9aa8:	d8c00317 	ldw	r3,12(sp)
    9aac:	10000015 	stw	zero,0(r2)
    9ab0:	10800104 	addi	r2,r2,4
    9ab4:	10fffc36 	bltu	r2,r3,9aa8 <__alt_mem_Onchip_SRAM+0xf8009aa8>
    9ab8:	8c63883a 	add	r17,r17,r17
    9abc:	b5800504 	addi	r22,r22,20
    9ac0:	8c63883a 	add	r17,r17,r17
    9ac4:	94800504 	addi	r18,r18,20
    9ac8:	8421883a 	add	r16,r16,r16
    9acc:	b463883a 	add	r17,r22,r17
    9ad0:	8421883a 	add	r16,r16,r16
    9ad4:	dd800015 	stw	r22,0(sp)
    9ad8:	dc800415 	stw	r18,16(sp)
    9adc:	dc400515 	stw	r17,20(sp)
    9ae0:	9429883a 	add	r20,r18,r16
    9ae4:	b4404f2e 	bgeu	r22,r17,9c24 <__multiply+0x214>
    9ae8:	d8c00017 	ldw	r3,0(sp)
    9aec:	1c800017 	ldw	r18,0(r3)
    9af0:	947fffcc 	andi	r17,r18,65535
    9af4:	88001e26 	beq	r17,zero,9b70 <__multiply+0x160>
    9af8:	dd800117 	ldw	r22,4(sp)
    9afc:	dd400417 	ldw	r21,16(sp)
    9b00:	0027883a 	mov	r19,zero
    9b04:	ac800017 	ldw	r18,0(r21)
    9b08:	b4000017 	ldw	r16,0(r22)
    9b0c:	880b883a 	mov	r5,r17
    9b10:	913fffcc 	andi	r4,r18,65535
    9b14:	0000ef80 	call	ef8 <__mulsi3>
    9b18:	9008d43a 	srli	r4,r18,16
    9b1c:	84bfffcc 	andi	r18,r16,65535
    9b20:	1485883a 	add	r2,r2,r18
    9b24:	14e5883a 	add	r18,r2,r19
    9b28:	8020d43a 	srli	r16,r16,16
    9b2c:	9026d43a 	srli	r19,r18,16
    9b30:	880b883a 	mov	r5,r17
    9b34:	0000ef80 	call	ef8 <__mulsi3>
    9b38:	1405883a 	add	r2,r2,r16
    9b3c:	14e1883a 	add	r16,r2,r19
    9b40:	90ffffcc 	andi	r3,r18,65535
    9b44:	8024943a 	slli	r18,r16,16
    9b48:	ad400104 	addi	r21,r21,4
    9b4c:	b005883a 	mov	r2,r22
    9b50:	90c6b03a 	or	r3,r18,r3
    9b54:	b0c00015 	stw	r3,0(r22)
    9b58:	8026d43a 	srli	r19,r16,16
    9b5c:	b5800104 	addi	r22,r22,4
    9b60:	ad3fe836 	bltu	r21,r20,9b04 <__alt_mem_Onchip_SRAM+0xf8009b04>
    9b64:	d8c00017 	ldw	r3,0(sp)
    9b68:	14c00115 	stw	r19,4(r2)
    9b6c:	1c800017 	ldw	r18,0(r3)
    9b70:	9024d43a 	srli	r18,r18,16
    9b74:	90002226 	beq	r18,zero,9c00 <__multiply+0x1f0>
    9b78:	d8c00117 	ldw	r3,4(sp)
    9b7c:	dd800417 	ldw	r22,16(sp)
    9b80:	002f883a 	mov	r23,zero
    9b84:	1f000017 	ldw	fp,0(r3)
    9b88:	1823883a 	mov	r17,r3
    9b8c:	182b883a 	mov	r21,r3
    9b90:	e021883a 	mov	r16,fp
    9b94:	00000106 	br	9b9c <__multiply+0x18c>
    9b98:	982b883a 	mov	r21,r19
    9b9c:	b100000b 	ldhu	r4,0(r22)
    9ba0:	8020d43a 	srli	r16,r16,16
    9ba4:	900b883a 	mov	r5,r18
    9ba8:	0000ef80 	call	ef8 <__mulsi3>
    9bac:	1405883a 	add	r2,r2,r16
    9bb0:	15ef883a 	add	r23,r2,r23
    9bb4:	b804943a 	slli	r2,r23,16
    9bb8:	e0ffffcc 	andi	r3,fp,65535
    9bbc:	8c400104 	addi	r17,r17,4
    9bc0:	10c6b03a 	or	r3,r2,r3
    9bc4:	88ffff15 	stw	r3,-4(r17)
    9bc8:	b5800104 	addi	r22,r22,4
    9bcc:	b13fff17 	ldw	r4,-4(r22)
    9bd0:	acc00104 	addi	r19,r21,4
    9bd4:	900b883a 	mov	r5,r18
    9bd8:	2008d43a 	srli	r4,r4,16
    9bdc:	9c000017 	ldw	r16,0(r19)
    9be0:	0000ef80 	call	ef8 <__mulsi3>
    9be4:	b806d43a 	srli	r3,r23,16
    9be8:	813fffcc 	andi	r4,r16,65535
    9bec:	1105883a 	add	r2,r2,r4
    9bf0:	10f9883a 	add	fp,r2,r3
    9bf4:	e02ed43a 	srli	r23,fp,16
    9bf8:	b53fe736 	bltu	r22,r20,9b98 <__alt_mem_Onchip_SRAM+0xf8009b98>
    9bfc:	af000115 	stw	fp,4(r21)
    9c00:	d8c00017 	ldw	r3,0(sp)
    9c04:	d9000517 	ldw	r4,20(sp)
    9c08:	18c00104 	addi	r3,r3,4
    9c0c:	d8c00015 	stw	r3,0(sp)
    9c10:	d8c00117 	ldw	r3,4(sp)
    9c14:	18c00104 	addi	r3,r3,4
    9c18:	d8c00115 	stw	r3,4(sp)
    9c1c:	d8c00017 	ldw	r3,0(sp)
    9c20:	193fb136 	bltu	r3,r4,9ae8 <__alt_mem_Onchip_SRAM+0xf8009ae8>
    9c24:	d8c00217 	ldw	r3,8(sp)
    9c28:	00c00c0e 	bge	zero,r3,9c5c <__multiply+0x24c>
    9c2c:	d8c00317 	ldw	r3,12(sp)
    9c30:	18bfff17 	ldw	r2,-4(r3)
    9c34:	1d7fff04 	addi	r21,r3,-4
    9c38:	10000326 	beq	r2,zero,9c48 <__multiply+0x238>
    9c3c:	00000706 	br	9c5c <__multiply+0x24c>
    9c40:	a8800017 	ldw	r2,0(r21)
    9c44:	1000051e 	bne	r2,zero,9c5c <__multiply+0x24c>
    9c48:	d8c00217 	ldw	r3,8(sp)
    9c4c:	ad7fff04 	addi	r21,r21,-4
    9c50:	18ffffc4 	addi	r3,r3,-1
    9c54:	d8c00215 	stw	r3,8(sp)
    9c58:	183ff91e 	bne	r3,zero,9c40 <__alt_mem_Onchip_SRAM+0xf8009c40>
    9c5c:	d8c00617 	ldw	r3,24(sp)
    9c60:	d9000217 	ldw	r4,8(sp)
    9c64:	1805883a 	mov	r2,r3
    9c68:	19000415 	stw	r4,16(r3)
    9c6c:	dfc01017 	ldw	ra,64(sp)
    9c70:	df000f17 	ldw	fp,60(sp)
    9c74:	ddc00e17 	ldw	r23,56(sp)
    9c78:	dd800d17 	ldw	r22,52(sp)
    9c7c:	dd400c17 	ldw	r21,48(sp)
    9c80:	dd000b17 	ldw	r20,44(sp)
    9c84:	dcc00a17 	ldw	r19,40(sp)
    9c88:	dc800917 	ldw	r18,36(sp)
    9c8c:	dc400817 	ldw	r17,32(sp)
    9c90:	dc000717 	ldw	r16,28(sp)
    9c94:	dec01104 	addi	sp,sp,68
    9c98:	f800283a 	ret

00009c9c <__pow5mult>:
    9c9c:	defffa04 	addi	sp,sp,-24
    9ca0:	dcc00315 	stw	r19,12(sp)
    9ca4:	dc000015 	stw	r16,0(sp)
    9ca8:	dfc00515 	stw	ra,20(sp)
    9cac:	dd000415 	stw	r20,16(sp)
    9cb0:	dc800215 	stw	r18,8(sp)
    9cb4:	dc400115 	stw	r17,4(sp)
    9cb8:	308000cc 	andi	r2,r6,3
    9cbc:	3021883a 	mov	r16,r6
    9cc0:	2027883a 	mov	r19,r4
    9cc4:	10002f1e 	bne	r2,zero,9d84 <__pow5mult+0xe8>
    9cc8:	2825883a 	mov	r18,r5
    9ccc:	8021d0ba 	srai	r16,r16,2
    9cd0:	80001a26 	beq	r16,zero,9d3c <__pow5mult+0xa0>
    9cd4:	9c401217 	ldw	r17,72(r19)
    9cd8:	8800061e 	bne	r17,zero,9cf4 <__pow5mult+0x58>
    9cdc:	00003406 	br	9db0 <__pow5mult+0x114>
    9ce0:	8021d07a 	srai	r16,r16,1
    9ce4:	80001526 	beq	r16,zero,9d3c <__pow5mult+0xa0>
    9ce8:	88800017 	ldw	r2,0(r17)
    9cec:	10001c26 	beq	r2,zero,9d60 <__pow5mult+0xc4>
    9cf0:	1023883a 	mov	r17,r2
    9cf4:	8080004c 	andi	r2,r16,1
    9cf8:	103ff926 	beq	r2,zero,9ce0 <__alt_mem_Onchip_SRAM+0xf8009ce0>
    9cfc:	880d883a 	mov	r6,r17
    9d00:	900b883a 	mov	r5,r18
    9d04:	9809883a 	mov	r4,r19
    9d08:	0009a100 	call	9a10 <__multiply>
    9d0c:	90001b26 	beq	r18,zero,9d7c <__pow5mult+0xe0>
    9d10:	91000117 	ldw	r4,4(r18)
    9d14:	98c01317 	ldw	r3,76(r19)
    9d18:	8021d07a 	srai	r16,r16,1
    9d1c:	2109883a 	add	r4,r4,r4
    9d20:	2109883a 	add	r4,r4,r4
    9d24:	1907883a 	add	r3,r3,r4
    9d28:	19000017 	ldw	r4,0(r3)
    9d2c:	91000015 	stw	r4,0(r18)
    9d30:	1c800015 	stw	r18,0(r3)
    9d34:	1025883a 	mov	r18,r2
    9d38:	803feb1e 	bne	r16,zero,9ce8 <__alt_mem_Onchip_SRAM+0xf8009ce8>
    9d3c:	9005883a 	mov	r2,r18
    9d40:	dfc00517 	ldw	ra,20(sp)
    9d44:	dd000417 	ldw	r20,16(sp)
    9d48:	dcc00317 	ldw	r19,12(sp)
    9d4c:	dc800217 	ldw	r18,8(sp)
    9d50:	dc400117 	ldw	r17,4(sp)
    9d54:	dc000017 	ldw	r16,0(sp)
    9d58:	dec00604 	addi	sp,sp,24
    9d5c:	f800283a 	ret
    9d60:	880d883a 	mov	r6,r17
    9d64:	880b883a 	mov	r5,r17
    9d68:	9809883a 	mov	r4,r19
    9d6c:	0009a100 	call	9a10 <__multiply>
    9d70:	88800015 	stw	r2,0(r17)
    9d74:	10000015 	stw	zero,0(r2)
    9d78:	003fdd06 	br	9cf0 <__alt_mem_Onchip_SRAM+0xf8009cf0>
    9d7c:	1025883a 	mov	r18,r2
    9d80:	003fd706 	br	9ce0 <__alt_mem_Onchip_SRAM+0xf8009ce0>
    9d84:	10bfffc4 	addi	r2,r2,-1
    9d88:	1085883a 	add	r2,r2,r2
    9d8c:	00c00074 	movhi	r3,1
    9d90:	18daec04 	addi	r3,r3,27568
    9d94:	1085883a 	add	r2,r2,r2
    9d98:	1885883a 	add	r2,r3,r2
    9d9c:	11800017 	ldw	r6,0(r2)
    9da0:	000f883a 	mov	r7,zero
    9da4:	00096700 	call	9670 <__multadd>
    9da8:	1025883a 	mov	r18,r2
    9dac:	003fc706 	br	9ccc <__alt_mem_Onchip_SRAM+0xf8009ccc>
    9db0:	05000044 	movi	r20,1
    9db4:	a00b883a 	mov	r5,r20
    9db8:	9809883a 	mov	r4,r19
    9dbc:	00095a00 	call	95a0 <_Balloc>
    9dc0:	1023883a 	mov	r17,r2
    9dc4:	00809c44 	movi	r2,625
    9dc8:	88800515 	stw	r2,20(r17)
    9dcc:	8d000415 	stw	r20,16(r17)
    9dd0:	9c401215 	stw	r17,72(r19)
    9dd4:	88000015 	stw	zero,0(r17)
    9dd8:	003fc606 	br	9cf4 <__alt_mem_Onchip_SRAM+0xf8009cf4>

00009ddc <__lshift>:
    9ddc:	defff904 	addi	sp,sp,-28
    9de0:	dd400515 	stw	r21,20(sp)
    9de4:	dcc00315 	stw	r19,12(sp)
    9de8:	302bd17a 	srai	r21,r6,5
    9dec:	2cc00417 	ldw	r19,16(r5)
    9df0:	28800217 	ldw	r2,8(r5)
    9df4:	dd000415 	stw	r20,16(sp)
    9df8:	ace7883a 	add	r19,r21,r19
    9dfc:	dc800215 	stw	r18,8(sp)
    9e00:	dc400115 	stw	r17,4(sp)
    9e04:	dc000015 	stw	r16,0(sp)
    9e08:	dfc00615 	stw	ra,24(sp)
    9e0c:	9c000044 	addi	r16,r19,1
    9e10:	2823883a 	mov	r17,r5
    9e14:	3029883a 	mov	r20,r6
    9e18:	2025883a 	mov	r18,r4
    9e1c:	29400117 	ldw	r5,4(r5)
    9e20:	1400030e 	bge	r2,r16,9e30 <__lshift+0x54>
    9e24:	1085883a 	add	r2,r2,r2
    9e28:	29400044 	addi	r5,r5,1
    9e2c:	143ffd16 	blt	r2,r16,9e24 <__alt_mem_Onchip_SRAM+0xf8009e24>
    9e30:	9009883a 	mov	r4,r18
    9e34:	00095a00 	call	95a0 <_Balloc>
    9e38:	10c00504 	addi	r3,r2,20
    9e3c:	0540070e 	bge	zero,r21,9e5c <__lshift+0x80>
    9e40:	ad6b883a 	add	r21,r21,r21
    9e44:	ad6b883a 	add	r21,r21,r21
    9e48:	1809883a 	mov	r4,r3
    9e4c:	1d47883a 	add	r3,r3,r21
    9e50:	20000015 	stw	zero,0(r4)
    9e54:	21000104 	addi	r4,r4,4
    9e58:	193ffd1e 	bne	r3,r4,9e50 <__alt_mem_Onchip_SRAM+0xf8009e50>
    9e5c:	8a000417 	ldw	r8,16(r17)
    9e60:	89000504 	addi	r4,r17,20
    9e64:	a18007cc 	andi	r6,r20,31
    9e68:	4211883a 	add	r8,r8,r8
    9e6c:	4211883a 	add	r8,r8,r8
    9e70:	2211883a 	add	r8,r4,r8
    9e74:	30002326 	beq	r6,zero,9f04 <__lshift+0x128>
    9e78:	02400804 	movi	r9,32
    9e7c:	4993c83a 	sub	r9,r9,r6
    9e80:	000b883a 	mov	r5,zero
    9e84:	21c00017 	ldw	r7,0(r4)
    9e88:	1815883a 	mov	r10,r3
    9e8c:	18c00104 	addi	r3,r3,4
    9e90:	398e983a 	sll	r7,r7,r6
    9e94:	21000104 	addi	r4,r4,4
    9e98:	394ab03a 	or	r5,r7,r5
    9e9c:	197fff15 	stw	r5,-4(r3)
    9ea0:	217fff17 	ldw	r5,-4(r4)
    9ea4:	2a4ad83a 	srl	r5,r5,r9
    9ea8:	223ff636 	bltu	r4,r8,9e84 <__alt_mem_Onchip_SRAM+0xf8009e84>
    9eac:	51400115 	stw	r5,4(r10)
    9eb0:	28001a1e 	bne	r5,zero,9f1c <__lshift+0x140>
    9eb4:	843fffc4 	addi	r16,r16,-1
    9eb8:	14000415 	stw	r16,16(r2)
    9ebc:	88000826 	beq	r17,zero,9ee0 <__lshift+0x104>
    9ec0:	89000117 	ldw	r4,4(r17)
    9ec4:	90c01317 	ldw	r3,76(r18)
    9ec8:	2109883a 	add	r4,r4,r4
    9ecc:	2109883a 	add	r4,r4,r4
    9ed0:	1907883a 	add	r3,r3,r4
    9ed4:	19000017 	ldw	r4,0(r3)
    9ed8:	89000015 	stw	r4,0(r17)
    9edc:	1c400015 	stw	r17,0(r3)
    9ee0:	dfc00617 	ldw	ra,24(sp)
    9ee4:	dd400517 	ldw	r21,20(sp)
    9ee8:	dd000417 	ldw	r20,16(sp)
    9eec:	dcc00317 	ldw	r19,12(sp)
    9ef0:	dc800217 	ldw	r18,8(sp)
    9ef4:	dc400117 	ldw	r17,4(sp)
    9ef8:	dc000017 	ldw	r16,0(sp)
    9efc:	dec00704 	addi	sp,sp,28
    9f00:	f800283a 	ret
    9f04:	21400017 	ldw	r5,0(r4)
    9f08:	18c00104 	addi	r3,r3,4
    9f0c:	21000104 	addi	r4,r4,4
    9f10:	197fff15 	stw	r5,-4(r3)
    9f14:	223ffb36 	bltu	r4,r8,9f04 <__alt_mem_Onchip_SRAM+0xf8009f04>
    9f18:	003fe606 	br	9eb4 <__alt_mem_Onchip_SRAM+0xf8009eb4>
    9f1c:	9c000084 	addi	r16,r19,2
    9f20:	003fe406 	br	9eb4 <__alt_mem_Onchip_SRAM+0xf8009eb4>

00009f24 <__mcmp>:
    9f24:	20800417 	ldw	r2,16(r4)
    9f28:	28c00417 	ldw	r3,16(r5)
    9f2c:	10c5c83a 	sub	r2,r2,r3
    9f30:	1000111e 	bne	r2,zero,9f78 <__mcmp+0x54>
    9f34:	18c7883a 	add	r3,r3,r3
    9f38:	18c7883a 	add	r3,r3,r3
    9f3c:	21000504 	addi	r4,r4,20
    9f40:	29400504 	addi	r5,r5,20
    9f44:	20c5883a 	add	r2,r4,r3
    9f48:	28cb883a 	add	r5,r5,r3
    9f4c:	00000106 	br	9f54 <__mcmp+0x30>
    9f50:	20800a2e 	bgeu	r4,r2,9f7c <__mcmp+0x58>
    9f54:	10bfff04 	addi	r2,r2,-4
    9f58:	297fff04 	addi	r5,r5,-4
    9f5c:	11800017 	ldw	r6,0(r2)
    9f60:	28c00017 	ldw	r3,0(r5)
    9f64:	30fffa26 	beq	r6,r3,9f50 <__alt_mem_Onchip_SRAM+0xf8009f50>
    9f68:	30c00236 	bltu	r6,r3,9f74 <__mcmp+0x50>
    9f6c:	00800044 	movi	r2,1
    9f70:	f800283a 	ret
    9f74:	00bfffc4 	movi	r2,-1
    9f78:	f800283a 	ret
    9f7c:	0005883a 	mov	r2,zero
    9f80:	f800283a 	ret

00009f84 <__mdiff>:
    9f84:	28c00417 	ldw	r3,16(r5)
    9f88:	30800417 	ldw	r2,16(r6)
    9f8c:	defffa04 	addi	sp,sp,-24
    9f90:	dcc00315 	stw	r19,12(sp)
    9f94:	dc800215 	stw	r18,8(sp)
    9f98:	dfc00515 	stw	ra,20(sp)
    9f9c:	dd000415 	stw	r20,16(sp)
    9fa0:	dc400115 	stw	r17,4(sp)
    9fa4:	dc000015 	stw	r16,0(sp)
    9fa8:	1887c83a 	sub	r3,r3,r2
    9fac:	2825883a 	mov	r18,r5
    9fb0:	3027883a 	mov	r19,r6
    9fb4:	1800141e 	bne	r3,zero,a008 <__mdiff+0x84>
    9fb8:	1085883a 	add	r2,r2,r2
    9fbc:	1085883a 	add	r2,r2,r2
    9fc0:	2a000504 	addi	r8,r5,20
    9fc4:	34000504 	addi	r16,r6,20
    9fc8:	4087883a 	add	r3,r8,r2
    9fcc:	8085883a 	add	r2,r16,r2
    9fd0:	00000106 	br	9fd8 <__mdiff+0x54>
    9fd4:	40c0592e 	bgeu	r8,r3,a13c <__mdiff+0x1b8>
    9fd8:	18ffff04 	addi	r3,r3,-4
    9fdc:	10bfff04 	addi	r2,r2,-4
    9fe0:	19c00017 	ldw	r7,0(r3)
    9fe4:	11400017 	ldw	r5,0(r2)
    9fe8:	397ffa26 	beq	r7,r5,9fd4 <__alt_mem_Onchip_SRAM+0xf8009fd4>
    9fec:	3940592e 	bgeu	r7,r5,a154 <__mdiff+0x1d0>
    9ff0:	9005883a 	mov	r2,r18
    9ff4:	4023883a 	mov	r17,r8
    9ff8:	9825883a 	mov	r18,r19
    9ffc:	05000044 	movi	r20,1
    a000:	1027883a 	mov	r19,r2
    a004:	00000406 	br	a018 <__mdiff+0x94>
    a008:	18005616 	blt	r3,zero,a164 <__mdiff+0x1e0>
    a00c:	34400504 	addi	r17,r6,20
    a010:	2c000504 	addi	r16,r5,20
    a014:	0029883a 	mov	r20,zero
    a018:	91400117 	ldw	r5,4(r18)
    a01c:	00095a00 	call	95a0 <_Balloc>
    a020:	92400417 	ldw	r9,16(r18)
    a024:	9b000417 	ldw	r12,16(r19)
    a028:	12c00504 	addi	r11,r2,20
    a02c:	4a51883a 	add	r8,r9,r9
    a030:	6319883a 	add	r12,r12,r12
    a034:	4211883a 	add	r8,r8,r8
    a038:	6319883a 	add	r12,r12,r12
    a03c:	15000315 	stw	r20,12(r2)
    a040:	8211883a 	add	r8,r16,r8
    a044:	8b19883a 	add	r12,r17,r12
    a048:	0007883a 	mov	r3,zero
    a04c:	81400017 	ldw	r5,0(r16)
    a050:	89c00017 	ldw	r7,0(r17)
    a054:	59800104 	addi	r6,r11,4
    a058:	293fffcc 	andi	r4,r5,65535
    a05c:	20c7883a 	add	r3,r4,r3
    a060:	393fffcc 	andi	r4,r7,65535
    a064:	1909c83a 	sub	r4,r3,r4
    a068:	280ad43a 	srli	r5,r5,16
    a06c:	380ed43a 	srli	r7,r7,16
    a070:	2007d43a 	srai	r3,r4,16
    a074:	213fffcc 	andi	r4,r4,65535
    a078:	29cbc83a 	sub	r5,r5,r7
    a07c:	28c7883a 	add	r3,r5,r3
    a080:	180a943a 	slli	r5,r3,16
    a084:	8c400104 	addi	r17,r17,4
    a088:	84000104 	addi	r16,r16,4
    a08c:	2908b03a 	or	r4,r5,r4
    a090:	59000015 	stw	r4,0(r11)
    a094:	1807d43a 	srai	r3,r3,16
    a098:	3015883a 	mov	r10,r6
    a09c:	3017883a 	mov	r11,r6
    a0a0:	8b3fea36 	bltu	r17,r12,a04c <__alt_mem_Onchip_SRAM+0xf800a04c>
    a0a4:	8200162e 	bgeu	r16,r8,a100 <__mdiff+0x17c>
    a0a8:	8017883a 	mov	r11,r16
    a0ac:	59400017 	ldw	r5,0(r11)
    a0b0:	31800104 	addi	r6,r6,4
    a0b4:	5ac00104 	addi	r11,r11,4
    a0b8:	293fffcc 	andi	r4,r5,65535
    a0bc:	20c7883a 	add	r3,r4,r3
    a0c0:	280ed43a 	srli	r7,r5,16
    a0c4:	180bd43a 	srai	r5,r3,16
    a0c8:	193fffcc 	andi	r4,r3,65535
    a0cc:	3947883a 	add	r3,r7,r5
    a0d0:	180a943a 	slli	r5,r3,16
    a0d4:	1807d43a 	srai	r3,r3,16
    a0d8:	2908b03a 	or	r4,r5,r4
    a0dc:	313fff15 	stw	r4,-4(r6)
    a0e0:	5a3ff236 	bltu	r11,r8,a0ac <__alt_mem_Onchip_SRAM+0xf800a0ac>
    a0e4:	0406303a 	nor	r3,zero,r16
    a0e8:	1a07883a 	add	r3,r3,r8
    a0ec:	1806d0ba 	srli	r3,r3,2
    a0f0:	18c00044 	addi	r3,r3,1
    a0f4:	18c7883a 	add	r3,r3,r3
    a0f8:	18c7883a 	add	r3,r3,r3
    a0fc:	50d5883a 	add	r10,r10,r3
    a100:	50ffff04 	addi	r3,r10,-4
    a104:	2000041e 	bne	r4,zero,a118 <__mdiff+0x194>
    a108:	18ffff04 	addi	r3,r3,-4
    a10c:	19000017 	ldw	r4,0(r3)
    a110:	4a7fffc4 	addi	r9,r9,-1
    a114:	203ffc26 	beq	r4,zero,a108 <__alt_mem_Onchip_SRAM+0xf800a108>
    a118:	12400415 	stw	r9,16(r2)
    a11c:	dfc00517 	ldw	ra,20(sp)
    a120:	dd000417 	ldw	r20,16(sp)
    a124:	dcc00317 	ldw	r19,12(sp)
    a128:	dc800217 	ldw	r18,8(sp)
    a12c:	dc400117 	ldw	r17,4(sp)
    a130:	dc000017 	ldw	r16,0(sp)
    a134:	dec00604 	addi	sp,sp,24
    a138:	f800283a 	ret
    a13c:	000b883a 	mov	r5,zero
    a140:	00095a00 	call	95a0 <_Balloc>
    a144:	00c00044 	movi	r3,1
    a148:	10c00415 	stw	r3,16(r2)
    a14c:	10000515 	stw	zero,20(r2)
    a150:	003ff206 	br	a11c <__alt_mem_Onchip_SRAM+0xf800a11c>
    a154:	8023883a 	mov	r17,r16
    a158:	0029883a 	mov	r20,zero
    a15c:	4021883a 	mov	r16,r8
    a160:	003fad06 	br	a018 <__alt_mem_Onchip_SRAM+0xf800a018>
    a164:	9005883a 	mov	r2,r18
    a168:	94400504 	addi	r17,r18,20
    a16c:	9c000504 	addi	r16,r19,20
    a170:	9825883a 	mov	r18,r19
    a174:	05000044 	movi	r20,1
    a178:	1027883a 	mov	r19,r2
    a17c:	003fa606 	br	a018 <__alt_mem_Onchip_SRAM+0xf800a018>

0000a180 <__ulp>:
    a180:	295ffc2c 	andhi	r5,r5,32752
    a184:	00bf3034 	movhi	r2,64704
    a188:	2887883a 	add	r3,r5,r2
    a18c:	00c0020e 	bge	zero,r3,a198 <__ulp+0x18>
    a190:	0005883a 	mov	r2,zero
    a194:	f800283a 	ret
    a198:	00c7c83a 	sub	r3,zero,r3
    a19c:	1807d53a 	srai	r3,r3,20
    a1a0:	008004c4 	movi	r2,19
    a1a4:	10c00b0e 	bge	r2,r3,a1d4 <__ulp+0x54>
    a1a8:	18bffb04 	addi	r2,r3,-20
    a1ac:	01000784 	movi	r4,30
    a1b0:	0007883a 	mov	r3,zero
    a1b4:	20800516 	blt	r4,r2,a1cc <__ulp+0x4c>
    a1b8:	010007c4 	movi	r4,31
    a1bc:	2089c83a 	sub	r4,r4,r2
    a1c0:	00800044 	movi	r2,1
    a1c4:	1104983a 	sll	r2,r2,r4
    a1c8:	f800283a 	ret
    a1cc:	00800044 	movi	r2,1
    a1d0:	f800283a 	ret
    a1d4:	01400234 	movhi	r5,8
    a1d8:	28c7d83a 	sra	r3,r5,r3
    a1dc:	0005883a 	mov	r2,zero
    a1e0:	f800283a 	ret

0000a1e4 <__b2d>:
    a1e4:	defffa04 	addi	sp,sp,-24
    a1e8:	dc000015 	stw	r16,0(sp)
    a1ec:	24000417 	ldw	r16,16(r4)
    a1f0:	dc400115 	stw	r17,4(sp)
    a1f4:	24400504 	addi	r17,r4,20
    a1f8:	8421883a 	add	r16,r16,r16
    a1fc:	8421883a 	add	r16,r16,r16
    a200:	8c21883a 	add	r16,r17,r16
    a204:	dc800215 	stw	r18,8(sp)
    a208:	84bfff17 	ldw	r18,-4(r16)
    a20c:	dd000415 	stw	r20,16(sp)
    a210:	dcc00315 	stw	r19,12(sp)
    a214:	9009883a 	mov	r4,r18
    a218:	2829883a 	mov	r20,r5
    a21c:	dfc00515 	stw	ra,20(sp)
    a220:	00098bc0 	call	98bc <__hi0bits>
    a224:	00c00804 	movi	r3,32
    a228:	1889c83a 	sub	r4,r3,r2
    a22c:	a1000015 	stw	r4,0(r20)
    a230:	01000284 	movi	r4,10
    a234:	84ffff04 	addi	r19,r16,-4
    a238:	20801216 	blt	r4,r2,a284 <__b2d+0xa0>
    a23c:	018002c4 	movi	r6,11
    a240:	308dc83a 	sub	r6,r6,r2
    a244:	9186d83a 	srl	r3,r18,r6
    a248:	18cffc34 	orhi	r3,r3,16368
    a24c:	8cc0212e 	bgeu	r17,r19,a2d4 <__b2d+0xf0>
    a250:	813ffe17 	ldw	r4,-8(r16)
    a254:	218cd83a 	srl	r6,r4,r6
    a258:	10800544 	addi	r2,r2,21
    a25c:	9084983a 	sll	r2,r18,r2
    a260:	1184b03a 	or	r2,r2,r6
    a264:	dfc00517 	ldw	ra,20(sp)
    a268:	dd000417 	ldw	r20,16(sp)
    a26c:	dcc00317 	ldw	r19,12(sp)
    a270:	dc800217 	ldw	r18,8(sp)
    a274:	dc400117 	ldw	r17,4(sp)
    a278:	dc000017 	ldw	r16,0(sp)
    a27c:	dec00604 	addi	sp,sp,24
    a280:	f800283a 	ret
    a284:	8cc00f2e 	bgeu	r17,r19,a2c4 <__b2d+0xe0>
    a288:	117ffd44 	addi	r5,r2,-11
    a28c:	80bffe17 	ldw	r2,-8(r16)
    a290:	28000e26 	beq	r5,zero,a2cc <__b2d+0xe8>
    a294:	1949c83a 	sub	r4,r3,r5
    a298:	9164983a 	sll	r18,r18,r5
    a29c:	1106d83a 	srl	r3,r2,r4
    a2a0:	81bffe04 	addi	r6,r16,-8
    a2a4:	948ffc34 	orhi	r18,r18,16368
    a2a8:	90c6b03a 	or	r3,r18,r3
    a2ac:	89800e2e 	bgeu	r17,r6,a2e8 <__b2d+0x104>
    a2b0:	81bffd17 	ldw	r6,-12(r16)
    a2b4:	1144983a 	sll	r2,r2,r5
    a2b8:	310ad83a 	srl	r5,r6,r4
    a2bc:	2884b03a 	or	r2,r5,r2
    a2c0:	003fe806 	br	a264 <__alt_mem_Onchip_SRAM+0xf800a264>
    a2c4:	10bffd44 	addi	r2,r2,-11
    a2c8:	1000041e 	bne	r2,zero,a2dc <__b2d+0xf8>
    a2cc:	90cffc34 	orhi	r3,r18,16368
    a2d0:	003fe406 	br	a264 <__alt_mem_Onchip_SRAM+0xf800a264>
    a2d4:	000d883a 	mov	r6,zero
    a2d8:	003fdf06 	br	a258 <__alt_mem_Onchip_SRAM+0xf800a258>
    a2dc:	90a4983a 	sll	r18,r18,r2
    a2e0:	0005883a 	mov	r2,zero
    a2e4:	003ff906 	br	a2cc <__alt_mem_Onchip_SRAM+0xf800a2cc>
    a2e8:	1144983a 	sll	r2,r2,r5
    a2ec:	003fdd06 	br	a264 <__alt_mem_Onchip_SRAM+0xf800a264>

0000a2f0 <__d2b>:
    a2f0:	defff804 	addi	sp,sp,-32
    a2f4:	dc000215 	stw	r16,8(sp)
    a2f8:	3021883a 	mov	r16,r6
    a2fc:	dc400315 	stw	r17,12(sp)
    a300:	8022907a 	slli	r17,r16,1
    a304:	dd000615 	stw	r20,24(sp)
    a308:	2829883a 	mov	r20,r5
    a30c:	01400044 	movi	r5,1
    a310:	dcc00515 	stw	r19,20(sp)
    a314:	dc800415 	stw	r18,16(sp)
    a318:	dfc00715 	stw	ra,28(sp)
    a31c:	3825883a 	mov	r18,r7
    a320:	8822d57a 	srli	r17,r17,21
    a324:	00095a00 	call	95a0 <_Balloc>
    a328:	1027883a 	mov	r19,r2
    a32c:	00800434 	movhi	r2,16
    a330:	10bfffc4 	addi	r2,r2,-1
    a334:	808c703a 	and	r6,r16,r2
    a338:	88000126 	beq	r17,zero,a340 <__d2b+0x50>
    a33c:	31800434 	orhi	r6,r6,16
    a340:	d9800015 	stw	r6,0(sp)
    a344:	a0002426 	beq	r20,zero,a3d8 <__d2b+0xe8>
    a348:	d9000104 	addi	r4,sp,4
    a34c:	dd000115 	stw	r20,4(sp)
    a350:	00099240 	call	9924 <__lo0bits>
    a354:	d8c00017 	ldw	r3,0(sp)
    a358:	10002f1e 	bne	r2,zero,a418 <__d2b+0x128>
    a35c:	d9000117 	ldw	r4,4(sp)
    a360:	99000515 	stw	r4,20(r19)
    a364:	1821003a 	cmpeq	r16,r3,zero
    a368:	01000084 	movi	r4,2
    a36c:	2421c83a 	sub	r16,r4,r16
    a370:	98c00615 	stw	r3,24(r19)
    a374:	9c000415 	stw	r16,16(r19)
    a378:	88001f1e 	bne	r17,zero,a3f8 <__d2b+0x108>
    a37c:	10bef384 	addi	r2,r2,-1074
    a380:	90800015 	stw	r2,0(r18)
    a384:	00900034 	movhi	r2,16384
    a388:	10bfffc4 	addi	r2,r2,-1
    a38c:	8085883a 	add	r2,r16,r2
    a390:	1085883a 	add	r2,r2,r2
    a394:	1085883a 	add	r2,r2,r2
    a398:	9885883a 	add	r2,r19,r2
    a39c:	11000517 	ldw	r4,20(r2)
    a3a0:	8020917a 	slli	r16,r16,5
    a3a4:	00098bc0 	call	98bc <__hi0bits>
    a3a8:	d8c00817 	ldw	r3,32(sp)
    a3ac:	8085c83a 	sub	r2,r16,r2
    a3b0:	18800015 	stw	r2,0(r3)
    a3b4:	9805883a 	mov	r2,r19
    a3b8:	dfc00717 	ldw	ra,28(sp)
    a3bc:	dd000617 	ldw	r20,24(sp)
    a3c0:	dcc00517 	ldw	r19,20(sp)
    a3c4:	dc800417 	ldw	r18,16(sp)
    a3c8:	dc400317 	ldw	r17,12(sp)
    a3cc:	dc000217 	ldw	r16,8(sp)
    a3d0:	dec00804 	addi	sp,sp,32
    a3d4:	f800283a 	ret
    a3d8:	d809883a 	mov	r4,sp
    a3dc:	00099240 	call	9924 <__lo0bits>
    a3e0:	d8c00017 	ldw	r3,0(sp)
    a3e4:	04000044 	movi	r16,1
    a3e8:	9c000415 	stw	r16,16(r19)
    a3ec:	98c00515 	stw	r3,20(r19)
    a3f0:	10800804 	addi	r2,r2,32
    a3f4:	883fe126 	beq	r17,zero,a37c <__alt_mem_Onchip_SRAM+0xf800a37c>
    a3f8:	00c00d44 	movi	r3,53
    a3fc:	8c7ef344 	addi	r17,r17,-1075
    a400:	88a3883a 	add	r17,r17,r2
    a404:	1885c83a 	sub	r2,r3,r2
    a408:	d8c00817 	ldw	r3,32(sp)
    a40c:	94400015 	stw	r17,0(r18)
    a410:	18800015 	stw	r2,0(r3)
    a414:	003fe706 	br	a3b4 <__alt_mem_Onchip_SRAM+0xf800a3b4>
    a418:	01000804 	movi	r4,32
    a41c:	2089c83a 	sub	r4,r4,r2
    a420:	1908983a 	sll	r4,r3,r4
    a424:	d9400117 	ldw	r5,4(sp)
    a428:	1886d83a 	srl	r3,r3,r2
    a42c:	2148b03a 	or	r4,r4,r5
    a430:	99000515 	stw	r4,20(r19)
    a434:	d8c00015 	stw	r3,0(sp)
    a438:	003fca06 	br	a364 <__alt_mem_Onchip_SRAM+0xf800a364>

0000a43c <__ratio>:
    a43c:	defff904 	addi	sp,sp,-28
    a440:	dc400315 	stw	r17,12(sp)
    a444:	2823883a 	mov	r17,r5
    a448:	d9400104 	addi	r5,sp,4
    a44c:	dfc00615 	stw	ra,24(sp)
    a450:	dcc00515 	stw	r19,20(sp)
    a454:	dc800415 	stw	r18,16(sp)
    a458:	2027883a 	mov	r19,r4
    a45c:	dc000215 	stw	r16,8(sp)
    a460:	000a1e40 	call	a1e4 <__b2d>
    a464:	d80b883a 	mov	r5,sp
    a468:	8809883a 	mov	r4,r17
    a46c:	1025883a 	mov	r18,r2
    a470:	1821883a 	mov	r16,r3
    a474:	000a1e40 	call	a1e4 <__b2d>
    a478:	8a000417 	ldw	r8,16(r17)
    a47c:	99000417 	ldw	r4,16(r19)
    a480:	d9400117 	ldw	r5,4(sp)
    a484:	2209c83a 	sub	r4,r4,r8
    a488:	2010917a 	slli	r8,r4,5
    a48c:	d9000017 	ldw	r4,0(sp)
    a490:	2909c83a 	sub	r4,r5,r4
    a494:	4109883a 	add	r4,r8,r4
    a498:	01000e0e 	bge	zero,r4,a4d4 <__ratio+0x98>
    a49c:	2008953a 	slli	r4,r4,20
    a4a0:	2421883a 	add	r16,r4,r16
    a4a4:	100d883a 	mov	r6,r2
    a4a8:	180f883a 	mov	r7,r3
    a4ac:	9009883a 	mov	r4,r18
    a4b0:	800b883a 	mov	r5,r16
    a4b4:	000fb300 	call	fb30 <__divdf3>
    a4b8:	dfc00617 	ldw	ra,24(sp)
    a4bc:	dcc00517 	ldw	r19,20(sp)
    a4c0:	dc800417 	ldw	r18,16(sp)
    a4c4:	dc400317 	ldw	r17,12(sp)
    a4c8:	dc000217 	ldw	r16,8(sp)
    a4cc:	dec00704 	addi	sp,sp,28
    a4d0:	f800283a 	ret
    a4d4:	2008953a 	slli	r4,r4,20
    a4d8:	1907c83a 	sub	r3,r3,r4
    a4dc:	003ff106 	br	a4a4 <__alt_mem_Onchip_SRAM+0xf800a4a4>

0000a4e0 <_mprec_log10>:
    a4e0:	defffe04 	addi	sp,sp,-8
    a4e4:	dc000015 	stw	r16,0(sp)
    a4e8:	dfc00115 	stw	ra,4(sp)
    a4ec:	008005c4 	movi	r2,23
    a4f0:	2021883a 	mov	r16,r4
    a4f4:	11000d0e 	bge	r2,r4,a52c <_mprec_log10+0x4c>
    a4f8:	0005883a 	mov	r2,zero
    a4fc:	00cffc34 	movhi	r3,16368
    a500:	843fffc4 	addi	r16,r16,-1
    a504:	000d883a 	mov	r6,zero
    a508:	01d00934 	movhi	r7,16420
    a50c:	1009883a 	mov	r4,r2
    a510:	180b883a 	mov	r5,r3
    a514:	00107580 	call	10758 <__muldf3>
    a518:	803ff91e 	bne	r16,zero,a500 <__alt_mem_Onchip_SRAM+0xf800a500>
    a51c:	dfc00117 	ldw	ra,4(sp)
    a520:	dc000017 	ldw	r16,0(sp)
    a524:	dec00204 	addi	sp,sp,8
    a528:	f800283a 	ret
    a52c:	202090fa 	slli	r16,r4,3
    a530:	00800074 	movhi	r2,1
    a534:	109b0304 	addi	r2,r2,27660
    a538:	1421883a 	add	r16,r2,r16
    a53c:	80800017 	ldw	r2,0(r16)
    a540:	80c00117 	ldw	r3,4(r16)
    a544:	dfc00117 	ldw	ra,4(sp)
    a548:	dc000017 	ldw	r16,0(sp)
    a54c:	dec00204 	addi	sp,sp,8
    a550:	f800283a 	ret

0000a554 <__copybits>:
    a554:	297fffc4 	addi	r5,r5,-1
    a558:	280fd17a 	srai	r7,r5,5
    a55c:	30c00417 	ldw	r3,16(r6)
    a560:	30800504 	addi	r2,r6,20
    a564:	39c00044 	addi	r7,r7,1
    a568:	18c7883a 	add	r3,r3,r3
    a56c:	39cf883a 	add	r7,r7,r7
    a570:	18c7883a 	add	r3,r3,r3
    a574:	39cf883a 	add	r7,r7,r7
    a578:	10c7883a 	add	r3,r2,r3
    a57c:	21cf883a 	add	r7,r4,r7
    a580:	10c00d2e 	bgeu	r2,r3,a5b8 <__copybits+0x64>
    a584:	200b883a 	mov	r5,r4
    a588:	12000017 	ldw	r8,0(r2)
    a58c:	29400104 	addi	r5,r5,4
    a590:	10800104 	addi	r2,r2,4
    a594:	2a3fff15 	stw	r8,-4(r5)
    a598:	10fffb36 	bltu	r2,r3,a588 <__alt_mem_Onchip_SRAM+0xf800a588>
    a59c:	1985c83a 	sub	r2,r3,r6
    a5a0:	10bffac4 	addi	r2,r2,-21
    a5a4:	1004d0ba 	srli	r2,r2,2
    a5a8:	10800044 	addi	r2,r2,1
    a5ac:	1085883a 	add	r2,r2,r2
    a5b0:	1085883a 	add	r2,r2,r2
    a5b4:	2089883a 	add	r4,r4,r2
    a5b8:	21c0032e 	bgeu	r4,r7,a5c8 <__copybits+0x74>
    a5bc:	20000015 	stw	zero,0(r4)
    a5c0:	21000104 	addi	r4,r4,4
    a5c4:	21fffd36 	bltu	r4,r7,a5bc <__alt_mem_Onchip_SRAM+0xf800a5bc>
    a5c8:	f800283a 	ret

0000a5cc <__any_on>:
    a5cc:	20c00417 	ldw	r3,16(r4)
    a5d0:	2805d17a 	srai	r2,r5,5
    a5d4:	21000504 	addi	r4,r4,20
    a5d8:	18800d0e 	bge	r3,r2,a610 <__any_on+0x44>
    a5dc:	18c7883a 	add	r3,r3,r3
    a5e0:	18c7883a 	add	r3,r3,r3
    a5e4:	20c7883a 	add	r3,r4,r3
    a5e8:	20c0192e 	bgeu	r4,r3,a650 <__any_on+0x84>
    a5ec:	18bfff17 	ldw	r2,-4(r3)
    a5f0:	18ffff04 	addi	r3,r3,-4
    a5f4:	1000041e 	bne	r2,zero,a608 <__any_on+0x3c>
    a5f8:	20c0142e 	bgeu	r4,r3,a64c <__any_on+0x80>
    a5fc:	18ffff04 	addi	r3,r3,-4
    a600:	19400017 	ldw	r5,0(r3)
    a604:	283ffc26 	beq	r5,zero,a5f8 <__alt_mem_Onchip_SRAM+0xf800a5f8>
    a608:	00800044 	movi	r2,1
    a60c:	f800283a 	ret
    a610:	10c00a0e 	bge	r2,r3,a63c <__any_on+0x70>
    a614:	1085883a 	add	r2,r2,r2
    a618:	1085883a 	add	r2,r2,r2
    a61c:	294007cc 	andi	r5,r5,31
    a620:	2087883a 	add	r3,r4,r2
    a624:	283ff026 	beq	r5,zero,a5e8 <__alt_mem_Onchip_SRAM+0xf800a5e8>
    a628:	19800017 	ldw	r6,0(r3)
    a62c:	3144d83a 	srl	r2,r6,r5
    a630:	114a983a 	sll	r5,r2,r5
    a634:	317ff41e 	bne	r6,r5,a608 <__alt_mem_Onchip_SRAM+0xf800a608>
    a638:	003feb06 	br	a5e8 <__alt_mem_Onchip_SRAM+0xf800a5e8>
    a63c:	1085883a 	add	r2,r2,r2
    a640:	1085883a 	add	r2,r2,r2
    a644:	2087883a 	add	r3,r4,r2
    a648:	003fe706 	br	a5e8 <__alt_mem_Onchip_SRAM+0xf800a5e8>
    a64c:	f800283a 	ret
    a650:	0005883a 	mov	r2,zero
    a654:	f800283a 	ret

0000a658 <_putc_r>:
    a658:	defffc04 	addi	sp,sp,-16
    a65c:	dc000215 	stw	r16,8(sp)
    a660:	dfc00315 	stw	ra,12(sp)
    a664:	2021883a 	mov	r16,r4
    a668:	20000226 	beq	r4,zero,a674 <_putc_r+0x1c>
    a66c:	20800e17 	ldw	r2,56(r4)
    a670:	10001b26 	beq	r2,zero,a6e0 <_putc_r+0x88>
    a674:	30800217 	ldw	r2,8(r6)
    a678:	10bfffc4 	addi	r2,r2,-1
    a67c:	30800215 	stw	r2,8(r6)
    a680:	10000a16 	blt	r2,zero,a6ac <_putc_r+0x54>
    a684:	30800017 	ldw	r2,0(r6)
    a688:	11400005 	stb	r5,0(r2)
    a68c:	30800017 	ldw	r2,0(r6)
    a690:	10c00044 	addi	r3,r2,1
    a694:	30c00015 	stw	r3,0(r6)
    a698:	10800003 	ldbu	r2,0(r2)
    a69c:	dfc00317 	ldw	ra,12(sp)
    a6a0:	dc000217 	ldw	r16,8(sp)
    a6a4:	dec00404 	addi	sp,sp,16
    a6a8:	f800283a 	ret
    a6ac:	30c00617 	ldw	r3,24(r6)
    a6b0:	10c00616 	blt	r2,r3,a6cc <_putc_r+0x74>
    a6b4:	30800017 	ldw	r2,0(r6)
    a6b8:	00c00284 	movi	r3,10
    a6bc:	11400005 	stb	r5,0(r2)
    a6c0:	30800017 	ldw	r2,0(r6)
    a6c4:	11400003 	ldbu	r5,0(r2)
    a6c8:	28fff11e 	bne	r5,r3,a690 <__alt_mem_Onchip_SRAM+0xf800a690>
    a6cc:	8009883a 	mov	r4,r16
    a6d0:	dfc00317 	ldw	ra,12(sp)
    a6d4:	dc000217 	ldw	r16,8(sp)
    a6d8:	dec00404 	addi	sp,sp,16
    a6dc:	000dc6c1 	jmpi	dc6c <__swbuf_r>
    a6e0:	d9400015 	stw	r5,0(sp)
    a6e4:	d9800115 	stw	r6,4(sp)
    a6e8:	0007b1c0 	call	7b1c <__sinit>
    a6ec:	d9800117 	ldw	r6,4(sp)
    a6f0:	d9400017 	ldw	r5,0(sp)
    a6f4:	003fdf06 	br	a674 <__alt_mem_Onchip_SRAM+0xf800a674>

0000a6f8 <putc>:
    a6f8:	008000b4 	movhi	r2,2
    a6fc:	defffc04 	addi	sp,sp,-16
    a700:	10a24904 	addi	r2,r2,-30428
    a704:	dc000115 	stw	r16,4(sp)
    a708:	14000017 	ldw	r16,0(r2)
    a70c:	dc400215 	stw	r17,8(sp)
    a710:	dfc00315 	stw	ra,12(sp)
    a714:	2023883a 	mov	r17,r4
    a718:	80000226 	beq	r16,zero,a724 <putc+0x2c>
    a71c:	80800e17 	ldw	r2,56(r16)
    a720:	10001a26 	beq	r2,zero,a78c <putc+0x94>
    a724:	28800217 	ldw	r2,8(r5)
    a728:	10bfffc4 	addi	r2,r2,-1
    a72c:	28800215 	stw	r2,8(r5)
    a730:	10000b16 	blt	r2,zero,a760 <putc+0x68>
    a734:	28800017 	ldw	r2,0(r5)
    a738:	14400005 	stb	r17,0(r2)
    a73c:	28800017 	ldw	r2,0(r5)
    a740:	10c00044 	addi	r3,r2,1
    a744:	28c00015 	stw	r3,0(r5)
    a748:	10800003 	ldbu	r2,0(r2)
    a74c:	dfc00317 	ldw	ra,12(sp)
    a750:	dc400217 	ldw	r17,8(sp)
    a754:	dc000117 	ldw	r16,4(sp)
    a758:	dec00404 	addi	sp,sp,16
    a75c:	f800283a 	ret
    a760:	28c00617 	ldw	r3,24(r5)
    a764:	10c00e16 	blt	r2,r3,a7a0 <putc+0xa8>
    a768:	28800017 	ldw	r2,0(r5)
    a76c:	01000284 	movi	r4,10
    a770:	14400005 	stb	r17,0(r2)
    a774:	28800017 	ldw	r2,0(r5)
    a778:	10c00003 	ldbu	r3,0(r2)
    a77c:	193ff01e 	bne	r3,r4,a740 <__alt_mem_Onchip_SRAM+0xf800a740>
    a780:	280d883a 	mov	r6,r5
    a784:	180b883a 	mov	r5,r3
    a788:	00000706 	br	a7a8 <putc+0xb0>
    a78c:	8009883a 	mov	r4,r16
    a790:	d9400015 	stw	r5,0(sp)
    a794:	0007b1c0 	call	7b1c <__sinit>
    a798:	d9400017 	ldw	r5,0(sp)
    a79c:	003fe106 	br	a724 <__alt_mem_Onchip_SRAM+0xf800a724>
    a7a0:	280d883a 	mov	r6,r5
    a7a4:	880b883a 	mov	r5,r17
    a7a8:	8009883a 	mov	r4,r16
    a7ac:	dfc00317 	ldw	ra,12(sp)
    a7b0:	dc400217 	ldw	r17,8(sp)
    a7b4:	dc000117 	ldw	r16,4(sp)
    a7b8:	dec00404 	addi	sp,sp,16
    a7bc:	000dc6c1 	jmpi	dc6c <__swbuf_r>

0000a7c0 <_realloc_r>:
    a7c0:	defff604 	addi	sp,sp,-40
    a7c4:	dc800215 	stw	r18,8(sp)
    a7c8:	dfc00915 	stw	ra,36(sp)
    a7cc:	df000815 	stw	fp,32(sp)
    a7d0:	ddc00715 	stw	r23,28(sp)
    a7d4:	dd800615 	stw	r22,24(sp)
    a7d8:	dd400515 	stw	r21,20(sp)
    a7dc:	dd000415 	stw	r20,16(sp)
    a7e0:	dcc00315 	stw	r19,12(sp)
    a7e4:	dc400115 	stw	r17,4(sp)
    a7e8:	dc000015 	stw	r16,0(sp)
    a7ec:	3025883a 	mov	r18,r6
    a7f0:	2800b726 	beq	r5,zero,aad0 <_realloc_r+0x310>
    a7f4:	282b883a 	mov	r21,r5
    a7f8:	2029883a 	mov	r20,r4
    a7fc:	00122540 	call	12254 <__malloc_lock>
    a800:	a8bfff17 	ldw	r2,-4(r21)
    a804:	043fff04 	movi	r16,-4
    a808:	90c002c4 	addi	r3,r18,11
    a80c:	01000584 	movi	r4,22
    a810:	acfffe04 	addi	r19,r21,-8
    a814:	1420703a 	and	r16,r2,r16
    a818:	20c0332e 	bgeu	r4,r3,a8e8 <_realloc_r+0x128>
    a81c:	047ffe04 	movi	r17,-8
    a820:	1c62703a 	and	r17,r3,r17
    a824:	8807883a 	mov	r3,r17
    a828:	88005816 	blt	r17,zero,a98c <_realloc_r+0x1cc>
    a82c:	8c805736 	bltu	r17,r18,a98c <_realloc_r+0x1cc>
    a830:	80c0300e 	bge	r16,r3,a8f4 <_realloc_r+0x134>
    a834:	07000074 	movhi	fp,1
    a838:	e71c9104 	addi	fp,fp,29252
    a83c:	e1c00217 	ldw	r7,8(fp)
    a840:	9c09883a 	add	r4,r19,r16
    a844:	22000117 	ldw	r8,4(r4)
    a848:	21c06326 	beq	r4,r7,a9d8 <_realloc_r+0x218>
    a84c:	017fff84 	movi	r5,-2
    a850:	414a703a 	and	r5,r8,r5
    a854:	214b883a 	add	r5,r4,r5
    a858:	29800117 	ldw	r6,4(r5)
    a85c:	3180004c 	andi	r6,r6,1
    a860:	30003f26 	beq	r6,zero,a960 <_realloc_r+0x1a0>
    a864:	1080004c 	andi	r2,r2,1
    a868:	10008326 	beq	r2,zero,aa78 <_realloc_r+0x2b8>
    a86c:	900b883a 	mov	r5,r18
    a870:	a009883a 	mov	r4,r20
    a874:	00088e40 	call	88e4 <_malloc_r>
    a878:	1025883a 	mov	r18,r2
    a87c:	10011e26 	beq	r2,zero,acf8 <_realloc_r+0x538>
    a880:	a93fff17 	ldw	r4,-4(r21)
    a884:	10fffe04 	addi	r3,r2,-8
    a888:	00bfff84 	movi	r2,-2
    a88c:	2084703a 	and	r2,r4,r2
    a890:	9885883a 	add	r2,r19,r2
    a894:	1880ee26 	beq	r3,r2,ac50 <_realloc_r+0x490>
    a898:	81bfff04 	addi	r6,r16,-4
    a89c:	00800904 	movi	r2,36
    a8a0:	1180b836 	bltu	r2,r6,ab84 <_realloc_r+0x3c4>
    a8a4:	00c004c4 	movi	r3,19
    a8a8:	19809636 	bltu	r3,r6,ab04 <_realloc_r+0x344>
    a8ac:	9005883a 	mov	r2,r18
    a8b0:	a807883a 	mov	r3,r21
    a8b4:	19000017 	ldw	r4,0(r3)
    a8b8:	11000015 	stw	r4,0(r2)
    a8bc:	19000117 	ldw	r4,4(r3)
    a8c0:	11000115 	stw	r4,4(r2)
    a8c4:	18c00217 	ldw	r3,8(r3)
    a8c8:	10c00215 	stw	r3,8(r2)
    a8cc:	a80b883a 	mov	r5,r21
    a8d0:	a009883a 	mov	r4,r20
    a8d4:	0007c900 	call	7c90 <_free_r>
    a8d8:	a009883a 	mov	r4,r20
    a8dc:	00122780 	call	12278 <__malloc_unlock>
    a8e0:	9005883a 	mov	r2,r18
    a8e4:	00001206 	br	a930 <_realloc_r+0x170>
    a8e8:	00c00404 	movi	r3,16
    a8ec:	1823883a 	mov	r17,r3
    a8f0:	003fce06 	br	a82c <__alt_mem_Onchip_SRAM+0xf800a82c>
    a8f4:	a825883a 	mov	r18,r21
    a8f8:	8445c83a 	sub	r2,r16,r17
    a8fc:	00c003c4 	movi	r3,15
    a900:	18802636 	bltu	r3,r2,a99c <_realloc_r+0x1dc>
    a904:	99800117 	ldw	r6,4(r19)
    a908:	9c07883a 	add	r3,r19,r16
    a90c:	3180004c 	andi	r6,r6,1
    a910:	3420b03a 	or	r16,r6,r16
    a914:	9c000115 	stw	r16,4(r19)
    a918:	18800117 	ldw	r2,4(r3)
    a91c:	10800054 	ori	r2,r2,1
    a920:	18800115 	stw	r2,4(r3)
    a924:	a009883a 	mov	r4,r20
    a928:	00122780 	call	12278 <__malloc_unlock>
    a92c:	9005883a 	mov	r2,r18
    a930:	dfc00917 	ldw	ra,36(sp)
    a934:	df000817 	ldw	fp,32(sp)
    a938:	ddc00717 	ldw	r23,28(sp)
    a93c:	dd800617 	ldw	r22,24(sp)
    a940:	dd400517 	ldw	r21,20(sp)
    a944:	dd000417 	ldw	r20,16(sp)
    a948:	dcc00317 	ldw	r19,12(sp)
    a94c:	dc800217 	ldw	r18,8(sp)
    a950:	dc400117 	ldw	r17,4(sp)
    a954:	dc000017 	ldw	r16,0(sp)
    a958:	dec00a04 	addi	sp,sp,40
    a95c:	f800283a 	ret
    a960:	017fff04 	movi	r5,-4
    a964:	414a703a 	and	r5,r8,r5
    a968:	814d883a 	add	r6,r16,r5
    a96c:	30c01f16 	blt	r6,r3,a9ec <_realloc_r+0x22c>
    a970:	20800317 	ldw	r2,12(r4)
    a974:	20c00217 	ldw	r3,8(r4)
    a978:	a825883a 	mov	r18,r21
    a97c:	3021883a 	mov	r16,r6
    a980:	18800315 	stw	r2,12(r3)
    a984:	10c00215 	stw	r3,8(r2)
    a988:	003fdb06 	br	a8f8 <__alt_mem_Onchip_SRAM+0xf800a8f8>
    a98c:	00800304 	movi	r2,12
    a990:	a0800015 	stw	r2,0(r20)
    a994:	0005883a 	mov	r2,zero
    a998:	003fe506 	br	a930 <__alt_mem_Onchip_SRAM+0xf800a930>
    a99c:	98c00117 	ldw	r3,4(r19)
    a9a0:	9c4b883a 	add	r5,r19,r17
    a9a4:	11000054 	ori	r4,r2,1
    a9a8:	18c0004c 	andi	r3,r3,1
    a9ac:	1c62b03a 	or	r17,r3,r17
    a9b0:	9c400115 	stw	r17,4(r19)
    a9b4:	29000115 	stw	r4,4(r5)
    a9b8:	2885883a 	add	r2,r5,r2
    a9bc:	10c00117 	ldw	r3,4(r2)
    a9c0:	29400204 	addi	r5,r5,8
    a9c4:	a009883a 	mov	r4,r20
    a9c8:	18c00054 	ori	r3,r3,1
    a9cc:	10c00115 	stw	r3,4(r2)
    a9d0:	0007c900 	call	7c90 <_free_r>
    a9d4:	003fd306 	br	a924 <__alt_mem_Onchip_SRAM+0xf800a924>
    a9d8:	017fff04 	movi	r5,-4
    a9dc:	414a703a 	and	r5,r8,r5
    a9e0:	89800404 	addi	r6,r17,16
    a9e4:	8151883a 	add	r8,r16,r5
    a9e8:	4180590e 	bge	r8,r6,ab50 <_realloc_r+0x390>
    a9ec:	1080004c 	andi	r2,r2,1
    a9f0:	103f9e1e 	bne	r2,zero,a86c <__alt_mem_Onchip_SRAM+0xf800a86c>
    a9f4:	adbffe17 	ldw	r22,-8(r21)
    a9f8:	00bfff04 	movi	r2,-4
    a9fc:	9dadc83a 	sub	r22,r19,r22
    aa00:	b1800117 	ldw	r6,4(r22)
    aa04:	3084703a 	and	r2,r6,r2
    aa08:	20002026 	beq	r4,zero,aa8c <_realloc_r+0x2cc>
    aa0c:	80af883a 	add	r23,r16,r2
    aa10:	b96f883a 	add	r23,r23,r5
    aa14:	21c05f26 	beq	r4,r7,ab94 <_realloc_r+0x3d4>
    aa18:	b8c01c16 	blt	r23,r3,aa8c <_realloc_r+0x2cc>
    aa1c:	20800317 	ldw	r2,12(r4)
    aa20:	20c00217 	ldw	r3,8(r4)
    aa24:	81bfff04 	addi	r6,r16,-4
    aa28:	01000904 	movi	r4,36
    aa2c:	18800315 	stw	r2,12(r3)
    aa30:	10c00215 	stw	r3,8(r2)
    aa34:	b0c00217 	ldw	r3,8(r22)
    aa38:	b0800317 	ldw	r2,12(r22)
    aa3c:	b4800204 	addi	r18,r22,8
    aa40:	18800315 	stw	r2,12(r3)
    aa44:	10c00215 	stw	r3,8(r2)
    aa48:	21801b36 	bltu	r4,r6,aab8 <_realloc_r+0x2f8>
    aa4c:	008004c4 	movi	r2,19
    aa50:	1180352e 	bgeu	r2,r6,ab28 <_realloc_r+0x368>
    aa54:	a8800017 	ldw	r2,0(r21)
    aa58:	b0800215 	stw	r2,8(r22)
    aa5c:	a8800117 	ldw	r2,4(r21)
    aa60:	b0800315 	stw	r2,12(r22)
    aa64:	008006c4 	movi	r2,27
    aa68:	11807f36 	bltu	r2,r6,ac68 <_realloc_r+0x4a8>
    aa6c:	b0800404 	addi	r2,r22,16
    aa70:	ad400204 	addi	r21,r21,8
    aa74:	00002d06 	br	ab2c <_realloc_r+0x36c>
    aa78:	adbffe17 	ldw	r22,-8(r21)
    aa7c:	00bfff04 	movi	r2,-4
    aa80:	9dadc83a 	sub	r22,r19,r22
    aa84:	b1000117 	ldw	r4,4(r22)
    aa88:	2084703a 	and	r2,r4,r2
    aa8c:	b03f7726 	beq	r22,zero,a86c <__alt_mem_Onchip_SRAM+0xf800a86c>
    aa90:	80af883a 	add	r23,r16,r2
    aa94:	b8ff7516 	blt	r23,r3,a86c <__alt_mem_Onchip_SRAM+0xf800a86c>
    aa98:	b0800317 	ldw	r2,12(r22)
    aa9c:	b0c00217 	ldw	r3,8(r22)
    aaa0:	81bfff04 	addi	r6,r16,-4
    aaa4:	01000904 	movi	r4,36
    aaa8:	18800315 	stw	r2,12(r3)
    aaac:	10c00215 	stw	r3,8(r2)
    aab0:	b4800204 	addi	r18,r22,8
    aab4:	21bfe52e 	bgeu	r4,r6,aa4c <__alt_mem_Onchip_SRAM+0xf800aa4c>
    aab8:	a80b883a 	mov	r5,r21
    aabc:	9009883a 	mov	r4,r18
    aac0:	000931c0 	call	931c <memmove>
    aac4:	b821883a 	mov	r16,r23
    aac8:	b027883a 	mov	r19,r22
    aacc:	003f8a06 	br	a8f8 <__alt_mem_Onchip_SRAM+0xf800a8f8>
    aad0:	300b883a 	mov	r5,r6
    aad4:	dfc00917 	ldw	ra,36(sp)
    aad8:	df000817 	ldw	fp,32(sp)
    aadc:	ddc00717 	ldw	r23,28(sp)
    aae0:	dd800617 	ldw	r22,24(sp)
    aae4:	dd400517 	ldw	r21,20(sp)
    aae8:	dd000417 	ldw	r20,16(sp)
    aaec:	dcc00317 	ldw	r19,12(sp)
    aaf0:	dc800217 	ldw	r18,8(sp)
    aaf4:	dc400117 	ldw	r17,4(sp)
    aaf8:	dc000017 	ldw	r16,0(sp)
    aafc:	dec00a04 	addi	sp,sp,40
    ab00:	00088e41 	jmpi	88e4 <_malloc_r>
    ab04:	a8c00017 	ldw	r3,0(r21)
    ab08:	90c00015 	stw	r3,0(r18)
    ab0c:	a8c00117 	ldw	r3,4(r21)
    ab10:	90c00115 	stw	r3,4(r18)
    ab14:	00c006c4 	movi	r3,27
    ab18:	19804536 	bltu	r3,r6,ac30 <_realloc_r+0x470>
    ab1c:	90800204 	addi	r2,r18,8
    ab20:	a8c00204 	addi	r3,r21,8
    ab24:	003f6306 	br	a8b4 <__alt_mem_Onchip_SRAM+0xf800a8b4>
    ab28:	9005883a 	mov	r2,r18
    ab2c:	a8c00017 	ldw	r3,0(r21)
    ab30:	b821883a 	mov	r16,r23
    ab34:	b027883a 	mov	r19,r22
    ab38:	10c00015 	stw	r3,0(r2)
    ab3c:	a8c00117 	ldw	r3,4(r21)
    ab40:	10c00115 	stw	r3,4(r2)
    ab44:	a8c00217 	ldw	r3,8(r21)
    ab48:	10c00215 	stw	r3,8(r2)
    ab4c:	003f6a06 	br	a8f8 <__alt_mem_Onchip_SRAM+0xf800a8f8>
    ab50:	9c67883a 	add	r19,r19,r17
    ab54:	4445c83a 	sub	r2,r8,r17
    ab58:	e4c00215 	stw	r19,8(fp)
    ab5c:	10800054 	ori	r2,r2,1
    ab60:	98800115 	stw	r2,4(r19)
    ab64:	a8bfff17 	ldw	r2,-4(r21)
    ab68:	a009883a 	mov	r4,r20
    ab6c:	1080004c 	andi	r2,r2,1
    ab70:	1462b03a 	or	r17,r2,r17
    ab74:	ac7fff15 	stw	r17,-4(r21)
    ab78:	00122780 	call	12278 <__malloc_unlock>
    ab7c:	a805883a 	mov	r2,r21
    ab80:	003f6b06 	br	a930 <__alt_mem_Onchip_SRAM+0xf800a930>
    ab84:	a80b883a 	mov	r5,r21
    ab88:	9009883a 	mov	r4,r18
    ab8c:	000931c0 	call	931c <memmove>
    ab90:	003f4e06 	br	a8cc <__alt_mem_Onchip_SRAM+0xf800a8cc>
    ab94:	89000404 	addi	r4,r17,16
    ab98:	b93fbc16 	blt	r23,r4,aa8c <__alt_mem_Onchip_SRAM+0xf800aa8c>
    ab9c:	b0800317 	ldw	r2,12(r22)
    aba0:	b0c00217 	ldw	r3,8(r22)
    aba4:	81bfff04 	addi	r6,r16,-4
    aba8:	01000904 	movi	r4,36
    abac:	18800315 	stw	r2,12(r3)
    abb0:	10c00215 	stw	r3,8(r2)
    abb4:	b4800204 	addi	r18,r22,8
    abb8:	21804336 	bltu	r4,r6,acc8 <_realloc_r+0x508>
    abbc:	008004c4 	movi	r2,19
    abc0:	11803f2e 	bgeu	r2,r6,acc0 <_realloc_r+0x500>
    abc4:	a8800017 	ldw	r2,0(r21)
    abc8:	b0800215 	stw	r2,8(r22)
    abcc:	a8800117 	ldw	r2,4(r21)
    abd0:	b0800315 	stw	r2,12(r22)
    abd4:	008006c4 	movi	r2,27
    abd8:	11803f36 	bltu	r2,r6,acd8 <_realloc_r+0x518>
    abdc:	b0800404 	addi	r2,r22,16
    abe0:	ad400204 	addi	r21,r21,8
    abe4:	a8c00017 	ldw	r3,0(r21)
    abe8:	10c00015 	stw	r3,0(r2)
    abec:	a8c00117 	ldw	r3,4(r21)
    abf0:	10c00115 	stw	r3,4(r2)
    abf4:	a8c00217 	ldw	r3,8(r21)
    abf8:	10c00215 	stw	r3,8(r2)
    abfc:	b447883a 	add	r3,r22,r17
    ac00:	bc45c83a 	sub	r2,r23,r17
    ac04:	e0c00215 	stw	r3,8(fp)
    ac08:	10800054 	ori	r2,r2,1
    ac0c:	18800115 	stw	r2,4(r3)
    ac10:	b0800117 	ldw	r2,4(r22)
    ac14:	a009883a 	mov	r4,r20
    ac18:	1080004c 	andi	r2,r2,1
    ac1c:	1462b03a 	or	r17,r2,r17
    ac20:	b4400115 	stw	r17,4(r22)
    ac24:	00122780 	call	12278 <__malloc_unlock>
    ac28:	9005883a 	mov	r2,r18
    ac2c:	003f4006 	br	a930 <__alt_mem_Onchip_SRAM+0xf800a930>
    ac30:	a8c00217 	ldw	r3,8(r21)
    ac34:	90c00215 	stw	r3,8(r18)
    ac38:	a8c00317 	ldw	r3,12(r21)
    ac3c:	90c00315 	stw	r3,12(r18)
    ac40:	30801126 	beq	r6,r2,ac88 <_realloc_r+0x4c8>
    ac44:	90800404 	addi	r2,r18,16
    ac48:	a8c00404 	addi	r3,r21,16
    ac4c:	003f1906 	br	a8b4 <__alt_mem_Onchip_SRAM+0xf800a8b4>
    ac50:	90ffff17 	ldw	r3,-4(r18)
    ac54:	00bfff04 	movi	r2,-4
    ac58:	a825883a 	mov	r18,r21
    ac5c:	1884703a 	and	r2,r3,r2
    ac60:	80a1883a 	add	r16,r16,r2
    ac64:	003f2406 	br	a8f8 <__alt_mem_Onchip_SRAM+0xf800a8f8>
    ac68:	a8800217 	ldw	r2,8(r21)
    ac6c:	b0800415 	stw	r2,16(r22)
    ac70:	a8800317 	ldw	r2,12(r21)
    ac74:	b0800515 	stw	r2,20(r22)
    ac78:	31000a26 	beq	r6,r4,aca4 <_realloc_r+0x4e4>
    ac7c:	b0800604 	addi	r2,r22,24
    ac80:	ad400404 	addi	r21,r21,16
    ac84:	003fa906 	br	ab2c <__alt_mem_Onchip_SRAM+0xf800ab2c>
    ac88:	a9000417 	ldw	r4,16(r21)
    ac8c:	90800604 	addi	r2,r18,24
    ac90:	a8c00604 	addi	r3,r21,24
    ac94:	91000415 	stw	r4,16(r18)
    ac98:	a9000517 	ldw	r4,20(r21)
    ac9c:	91000515 	stw	r4,20(r18)
    aca0:	003f0406 	br	a8b4 <__alt_mem_Onchip_SRAM+0xf800a8b4>
    aca4:	a8c00417 	ldw	r3,16(r21)
    aca8:	ad400604 	addi	r21,r21,24
    acac:	b0800804 	addi	r2,r22,32
    acb0:	b0c00615 	stw	r3,24(r22)
    acb4:	a8ffff17 	ldw	r3,-4(r21)
    acb8:	b0c00715 	stw	r3,28(r22)
    acbc:	003f9b06 	br	ab2c <__alt_mem_Onchip_SRAM+0xf800ab2c>
    acc0:	9005883a 	mov	r2,r18
    acc4:	003fc706 	br	abe4 <__alt_mem_Onchip_SRAM+0xf800abe4>
    acc8:	a80b883a 	mov	r5,r21
    accc:	9009883a 	mov	r4,r18
    acd0:	000931c0 	call	931c <memmove>
    acd4:	003fc906 	br	abfc <__alt_mem_Onchip_SRAM+0xf800abfc>
    acd8:	a8800217 	ldw	r2,8(r21)
    acdc:	b0800415 	stw	r2,16(r22)
    ace0:	a8800317 	ldw	r2,12(r21)
    ace4:	b0800515 	stw	r2,20(r22)
    ace8:	31000726 	beq	r6,r4,ad08 <_realloc_r+0x548>
    acec:	b0800604 	addi	r2,r22,24
    acf0:	ad400404 	addi	r21,r21,16
    acf4:	003fbb06 	br	abe4 <__alt_mem_Onchip_SRAM+0xf800abe4>
    acf8:	a009883a 	mov	r4,r20
    acfc:	00122780 	call	12278 <__malloc_unlock>
    ad00:	0005883a 	mov	r2,zero
    ad04:	003f0a06 	br	a930 <__alt_mem_Onchip_SRAM+0xf800a930>
    ad08:	a8c00417 	ldw	r3,16(r21)
    ad0c:	ad400604 	addi	r21,r21,24
    ad10:	b0800804 	addi	r2,r22,32
    ad14:	b0c00615 	stw	r3,24(r22)
    ad18:	a8ffff17 	ldw	r3,-4(r21)
    ad1c:	b0c00715 	stw	r3,28(r22)
    ad20:	003fb006 	br	abe4 <__alt_mem_Onchip_SRAM+0xf800abe4>

0000ad24 <__fpclassifyd>:
    ad24:	00a00034 	movhi	r2,32768
    ad28:	10bfffc4 	addi	r2,r2,-1
    ad2c:	2884703a 	and	r2,r5,r2
    ad30:	10000726 	beq	r2,zero,ad50 <__fpclassifyd+0x2c>
    ad34:	00fffc34 	movhi	r3,65520
    ad38:	019ff834 	movhi	r6,32736
    ad3c:	28c7883a 	add	r3,r5,r3
    ad40:	31bfffc4 	addi	r6,r6,-1
    ad44:	30c00536 	bltu	r6,r3,ad5c <__fpclassifyd+0x38>
    ad48:	00800104 	movi	r2,4
    ad4c:	f800283a 	ret
    ad50:	2000021e 	bne	r4,zero,ad5c <__fpclassifyd+0x38>
    ad54:	00800084 	movi	r2,2
    ad58:	f800283a 	ret
    ad5c:	00dffc34 	movhi	r3,32752
    ad60:	019ff834 	movhi	r6,32736
    ad64:	28cb883a 	add	r5,r5,r3
    ad68:	31bfffc4 	addi	r6,r6,-1
    ad6c:	317ff62e 	bgeu	r6,r5,ad48 <__alt_mem_Onchip_SRAM+0xf800ad48>
    ad70:	01400434 	movhi	r5,16
    ad74:	297fffc4 	addi	r5,r5,-1
    ad78:	28800236 	bltu	r5,r2,ad84 <__fpclassifyd+0x60>
    ad7c:	008000c4 	movi	r2,3
    ad80:	f800283a 	ret
    ad84:	10c00226 	beq	r2,r3,ad90 <__fpclassifyd+0x6c>
    ad88:	0005883a 	mov	r2,zero
    ad8c:	f800283a 	ret
    ad90:	2005003a 	cmpeq	r2,r4,zero
    ad94:	f800283a 	ret

0000ad98 <_sbrk_r>:
    ad98:	defffd04 	addi	sp,sp,-12
    ad9c:	dc000015 	stw	r16,0(sp)
    ada0:	040000b4 	movhi	r16,2
    ada4:	dc400115 	stw	r17,4(sp)
    ada8:	84294e04 	addi	r16,r16,-23240
    adac:	2023883a 	mov	r17,r4
    adb0:	2809883a 	mov	r4,r5
    adb4:	dfc00215 	stw	ra,8(sp)
    adb8:	80000015 	stw	zero,0(r16)
    adbc:	00124600 	call	12460 <sbrk>
    adc0:	00ffffc4 	movi	r3,-1
    adc4:	10c00526 	beq	r2,r3,addc <_sbrk_r+0x44>
    adc8:	dfc00217 	ldw	ra,8(sp)
    adcc:	dc400117 	ldw	r17,4(sp)
    add0:	dc000017 	ldw	r16,0(sp)
    add4:	dec00304 	addi	sp,sp,12
    add8:	f800283a 	ret
    addc:	80c00017 	ldw	r3,0(r16)
    ade0:	183ff926 	beq	r3,zero,adc8 <__alt_mem_Onchip_SRAM+0xf800adc8>
    ade4:	88c00015 	stw	r3,0(r17)
    ade8:	003ff706 	br	adc8 <__alt_mem_Onchip_SRAM+0xf800adc8>

0000adec <__sread>:
    adec:	defffe04 	addi	sp,sp,-8
    adf0:	dc000015 	stw	r16,0(sp)
    adf4:	2821883a 	mov	r16,r5
    adf8:	2940038f 	ldh	r5,14(r5)
    adfc:	dfc00115 	stw	ra,4(sp)
    ae00:	000e3700 	call	e370 <_read_r>
    ae04:	10000716 	blt	r2,zero,ae24 <__sread+0x38>
    ae08:	80c01417 	ldw	r3,80(r16)
    ae0c:	1887883a 	add	r3,r3,r2
    ae10:	80c01415 	stw	r3,80(r16)
    ae14:	dfc00117 	ldw	ra,4(sp)
    ae18:	dc000017 	ldw	r16,0(sp)
    ae1c:	dec00204 	addi	sp,sp,8
    ae20:	f800283a 	ret
    ae24:	80c0030b 	ldhu	r3,12(r16)
    ae28:	18fbffcc 	andi	r3,r3,61439
    ae2c:	80c0030d 	sth	r3,12(r16)
    ae30:	dfc00117 	ldw	ra,4(sp)
    ae34:	dc000017 	ldw	r16,0(sp)
    ae38:	dec00204 	addi	sp,sp,8
    ae3c:	f800283a 	ret

0000ae40 <__seofread>:
    ae40:	0005883a 	mov	r2,zero
    ae44:	f800283a 	ret

0000ae48 <__swrite>:
    ae48:	2880030b 	ldhu	r2,12(r5)
    ae4c:	defffb04 	addi	sp,sp,-20
    ae50:	dcc00315 	stw	r19,12(sp)
    ae54:	dc800215 	stw	r18,8(sp)
    ae58:	dc400115 	stw	r17,4(sp)
    ae5c:	dc000015 	stw	r16,0(sp)
    ae60:	dfc00415 	stw	ra,16(sp)
    ae64:	10c0400c 	andi	r3,r2,256
    ae68:	2821883a 	mov	r16,r5
    ae6c:	2023883a 	mov	r17,r4
    ae70:	3025883a 	mov	r18,r6
    ae74:	3827883a 	mov	r19,r7
    ae78:	18000526 	beq	r3,zero,ae90 <__swrite+0x48>
    ae7c:	2940038f 	ldh	r5,14(r5)
    ae80:	01c00084 	movi	r7,2
    ae84:	000d883a 	mov	r6,zero
    ae88:	000e3100 	call	e310 <_lseek_r>
    ae8c:	8080030b 	ldhu	r2,12(r16)
    ae90:	8140038f 	ldh	r5,14(r16)
    ae94:	10bbffcc 	andi	r2,r2,61439
    ae98:	980f883a 	mov	r7,r19
    ae9c:	900d883a 	mov	r6,r18
    aea0:	8809883a 	mov	r4,r17
    aea4:	8080030d 	sth	r2,12(r16)
    aea8:	dfc00417 	ldw	ra,16(sp)
    aeac:	dcc00317 	ldw	r19,12(sp)
    aeb0:	dc800217 	ldw	r18,8(sp)
    aeb4:	dc400117 	ldw	r17,4(sp)
    aeb8:	dc000017 	ldw	r16,0(sp)
    aebc:	dec00504 	addi	sp,sp,20
    aec0:	000ddc41 	jmpi	ddc4 <_write_r>

0000aec4 <__sseek>:
    aec4:	defffe04 	addi	sp,sp,-8
    aec8:	dc000015 	stw	r16,0(sp)
    aecc:	2821883a 	mov	r16,r5
    aed0:	2940038f 	ldh	r5,14(r5)
    aed4:	dfc00115 	stw	ra,4(sp)
    aed8:	000e3100 	call	e310 <_lseek_r>
    aedc:	00ffffc4 	movi	r3,-1
    aee0:	10c00826 	beq	r2,r3,af04 <__sseek+0x40>
    aee4:	80c0030b 	ldhu	r3,12(r16)
    aee8:	80801415 	stw	r2,80(r16)
    aeec:	18c40014 	ori	r3,r3,4096
    aef0:	80c0030d 	sth	r3,12(r16)
    aef4:	dfc00117 	ldw	ra,4(sp)
    aef8:	dc000017 	ldw	r16,0(sp)
    aefc:	dec00204 	addi	sp,sp,8
    af00:	f800283a 	ret
    af04:	80c0030b 	ldhu	r3,12(r16)
    af08:	18fbffcc 	andi	r3,r3,61439
    af0c:	80c0030d 	sth	r3,12(r16)
    af10:	dfc00117 	ldw	ra,4(sp)
    af14:	dc000017 	ldw	r16,0(sp)
    af18:	dec00204 	addi	sp,sp,8
    af1c:	f800283a 	ret

0000af20 <__sclose>:
    af20:	2940038f 	ldh	r5,14(r5)
    af24:	000de241 	jmpi	de24 <_close_r>

0000af28 <strcmp>:
    af28:	2144b03a 	or	r2,r4,r5
    af2c:	108000cc 	andi	r2,r2,3
    af30:	1000171e 	bne	r2,zero,af90 <strcmp+0x68>
    af34:	20800017 	ldw	r2,0(r4)
    af38:	28c00017 	ldw	r3,0(r5)
    af3c:	10c0141e 	bne	r2,r3,af90 <strcmp+0x68>
    af40:	027fbff4 	movhi	r9,65279
    af44:	4a7fbfc4 	addi	r9,r9,-257
    af48:	0086303a 	nor	r3,zero,r2
    af4c:	02202074 	movhi	r8,32897
    af50:	1245883a 	add	r2,r2,r9
    af54:	42202004 	addi	r8,r8,-32640
    af58:	10c4703a 	and	r2,r2,r3
    af5c:	1204703a 	and	r2,r2,r8
    af60:	10000226 	beq	r2,zero,af6c <strcmp+0x44>
    af64:	00002306 	br	aff4 <strcmp+0xcc>
    af68:	1000221e 	bne	r2,zero,aff4 <strcmp+0xcc>
    af6c:	21000104 	addi	r4,r4,4
    af70:	20c00017 	ldw	r3,0(r4)
    af74:	29400104 	addi	r5,r5,4
    af78:	29800017 	ldw	r6,0(r5)
    af7c:	1a4f883a 	add	r7,r3,r9
    af80:	00c4303a 	nor	r2,zero,r3
    af84:	3884703a 	and	r2,r7,r2
    af88:	1204703a 	and	r2,r2,r8
    af8c:	19bff626 	beq	r3,r6,af68 <__alt_mem_Onchip_SRAM+0xf800af68>
    af90:	20800003 	ldbu	r2,0(r4)
    af94:	10c03fcc 	andi	r3,r2,255
    af98:	18c0201c 	xori	r3,r3,128
    af9c:	18ffe004 	addi	r3,r3,-128
    afa0:	18000c26 	beq	r3,zero,afd4 <strcmp+0xac>
    afa4:	29800007 	ldb	r6,0(r5)
    afa8:	19800326 	beq	r3,r6,afb8 <strcmp+0x90>
    afac:	00001306 	br	affc <strcmp+0xd4>
    afb0:	29800007 	ldb	r6,0(r5)
    afb4:	11800b1e 	bne	r2,r6,afe4 <strcmp+0xbc>
    afb8:	21000044 	addi	r4,r4,1
    afbc:	20c00003 	ldbu	r3,0(r4)
    afc0:	29400044 	addi	r5,r5,1
    afc4:	18803fcc 	andi	r2,r3,255
    afc8:	1080201c 	xori	r2,r2,128
    afcc:	10bfe004 	addi	r2,r2,-128
    afd0:	103ff71e 	bne	r2,zero,afb0 <__alt_mem_Onchip_SRAM+0xf800afb0>
    afd4:	0007883a 	mov	r3,zero
    afd8:	28800003 	ldbu	r2,0(r5)
    afdc:	1885c83a 	sub	r2,r3,r2
    afe0:	f800283a 	ret
    afe4:	28800003 	ldbu	r2,0(r5)
    afe8:	18c03fcc 	andi	r3,r3,255
    afec:	1885c83a 	sub	r2,r3,r2
    aff0:	f800283a 	ret
    aff4:	0005883a 	mov	r2,zero
    aff8:	f800283a 	ret
    affc:	10c03fcc 	andi	r3,r2,255
    b000:	003ff506 	br	afd8 <__alt_mem_Onchip_SRAM+0xf800afd8>

0000b004 <__ssprint_r>:
    b004:	30800217 	ldw	r2,8(r6)
    b008:	defff604 	addi	sp,sp,-40
    b00c:	dc800215 	stw	r18,8(sp)
    b010:	dfc00915 	stw	ra,36(sp)
    b014:	df000815 	stw	fp,32(sp)
    b018:	ddc00715 	stw	r23,28(sp)
    b01c:	dd800615 	stw	r22,24(sp)
    b020:	dd400515 	stw	r21,20(sp)
    b024:	dd000415 	stw	r20,16(sp)
    b028:	dcc00315 	stw	r19,12(sp)
    b02c:	dc400115 	stw	r17,4(sp)
    b030:	dc000015 	stw	r16,0(sp)
    b034:	3025883a 	mov	r18,r6
    b038:	10005826 	beq	r2,zero,b19c <__ssprint_r+0x198>
    b03c:	2027883a 	mov	r19,r4
    b040:	35c00017 	ldw	r23,0(r6)
    b044:	29000017 	ldw	r4,0(r5)
    b048:	28800217 	ldw	r2,8(r5)
    b04c:	2823883a 	mov	r17,r5
    b050:	0039883a 	mov	fp,zero
    b054:	0021883a 	mov	r16,zero
    b058:	80003926 	beq	r16,zero,b140 <__ssprint_r+0x13c>
    b05c:	102b883a 	mov	r21,r2
    b060:	102d883a 	mov	r22,r2
    b064:	80803a36 	bltu	r16,r2,b150 <__ssprint_r+0x14c>
    b068:	88c0030b 	ldhu	r3,12(r17)
    b06c:	1881200c 	andi	r2,r3,1152
    b070:	10002626 	beq	r2,zero,b10c <__ssprint_r+0x108>
    b074:	88800517 	ldw	r2,20(r17)
    b078:	89400417 	ldw	r5,16(r17)
    b07c:	81800044 	addi	r6,r16,1
    b080:	108f883a 	add	r7,r2,r2
    b084:	3885883a 	add	r2,r7,r2
    b088:	100ed7fa 	srli	r7,r2,31
    b08c:	216dc83a 	sub	r22,r4,r5
    b090:	3589883a 	add	r4,r6,r22
    b094:	3885883a 	add	r2,r7,r2
    b098:	102bd07a 	srai	r21,r2,1
    b09c:	a80d883a 	mov	r6,r21
    b0a0:	a900022e 	bgeu	r21,r4,b0ac <__ssprint_r+0xa8>
    b0a4:	202b883a 	mov	r21,r4
    b0a8:	200d883a 	mov	r6,r4
    b0ac:	18c1000c 	andi	r3,r3,1024
    b0b0:	18002a26 	beq	r3,zero,b15c <__ssprint_r+0x158>
    b0b4:	300b883a 	mov	r5,r6
    b0b8:	9809883a 	mov	r4,r19
    b0bc:	00088e40 	call	88e4 <_malloc_r>
    b0c0:	1029883a 	mov	r20,r2
    b0c4:	10002c26 	beq	r2,zero,b178 <__ssprint_r+0x174>
    b0c8:	89400417 	ldw	r5,16(r17)
    b0cc:	b00d883a 	mov	r6,r22
    b0d0:	1009883a 	mov	r4,r2
    b0d4:	00091d40 	call	91d4 <memcpy>
    b0d8:	8880030b 	ldhu	r2,12(r17)
    b0dc:	00fedfc4 	movi	r3,-1153
    b0e0:	10c4703a 	and	r2,r2,r3
    b0e4:	10802014 	ori	r2,r2,128
    b0e8:	8880030d 	sth	r2,12(r17)
    b0ec:	a589883a 	add	r4,r20,r22
    b0f0:	adadc83a 	sub	r22,r21,r22
    b0f4:	8d400515 	stw	r21,20(r17)
    b0f8:	8d800215 	stw	r22,8(r17)
    b0fc:	8d000415 	stw	r20,16(r17)
    b100:	89000015 	stw	r4,0(r17)
    b104:	802b883a 	mov	r21,r16
    b108:	802d883a 	mov	r22,r16
    b10c:	b00d883a 	mov	r6,r22
    b110:	e00b883a 	mov	r5,fp
    b114:	000931c0 	call	931c <memmove>
    b118:	88800217 	ldw	r2,8(r17)
    b11c:	89000017 	ldw	r4,0(r17)
    b120:	90c00217 	ldw	r3,8(r18)
    b124:	1545c83a 	sub	r2,r2,r21
    b128:	2589883a 	add	r4,r4,r22
    b12c:	88800215 	stw	r2,8(r17)
    b130:	89000015 	stw	r4,0(r17)
    b134:	1c21c83a 	sub	r16,r3,r16
    b138:	94000215 	stw	r16,8(r18)
    b13c:	80001726 	beq	r16,zero,b19c <__ssprint_r+0x198>
    b140:	bf000017 	ldw	fp,0(r23)
    b144:	bc000117 	ldw	r16,4(r23)
    b148:	bdc00204 	addi	r23,r23,8
    b14c:	003fc206 	br	b058 <__alt_mem_Onchip_SRAM+0xf800b058>
    b150:	802b883a 	mov	r21,r16
    b154:	802d883a 	mov	r22,r16
    b158:	003fec06 	br	b10c <__alt_mem_Onchip_SRAM+0xf800b10c>
    b15c:	9809883a 	mov	r4,r19
    b160:	000a7c00 	call	a7c0 <_realloc_r>
    b164:	1029883a 	mov	r20,r2
    b168:	103fe01e 	bne	r2,zero,b0ec <__alt_mem_Onchip_SRAM+0xf800b0ec>
    b16c:	89400417 	ldw	r5,16(r17)
    b170:	9809883a 	mov	r4,r19
    b174:	0007c900 	call	7c90 <_free_r>
    b178:	88c0030b 	ldhu	r3,12(r17)
    b17c:	00800304 	movi	r2,12
    b180:	98800015 	stw	r2,0(r19)
    b184:	18c01014 	ori	r3,r3,64
    b188:	88c0030d 	sth	r3,12(r17)
    b18c:	00bfffc4 	movi	r2,-1
    b190:	90000215 	stw	zero,8(r18)
    b194:	90000115 	stw	zero,4(r18)
    b198:	00000206 	br	b1a4 <__ssprint_r+0x1a0>
    b19c:	90000115 	stw	zero,4(r18)
    b1a0:	0005883a 	mov	r2,zero
    b1a4:	dfc00917 	ldw	ra,36(sp)
    b1a8:	df000817 	ldw	fp,32(sp)
    b1ac:	ddc00717 	ldw	r23,28(sp)
    b1b0:	dd800617 	ldw	r22,24(sp)
    b1b4:	dd400517 	ldw	r21,20(sp)
    b1b8:	dd000417 	ldw	r20,16(sp)
    b1bc:	dcc00317 	ldw	r19,12(sp)
    b1c0:	dc800217 	ldw	r18,8(sp)
    b1c4:	dc400117 	ldw	r17,4(sp)
    b1c8:	dc000017 	ldw	r16,0(sp)
    b1cc:	dec00a04 	addi	sp,sp,40
    b1d0:	f800283a 	ret

0000b1d4 <___svfiprintf_internal_r>:
    b1d4:	2880030b 	ldhu	r2,12(r5)
    b1d8:	deffc804 	addi	sp,sp,-224
    b1dc:	dcc03115 	stw	r19,196(sp)
    b1e0:	dfc03715 	stw	ra,220(sp)
    b1e4:	df003615 	stw	fp,216(sp)
    b1e8:	ddc03515 	stw	r23,212(sp)
    b1ec:	dd803415 	stw	r22,208(sp)
    b1f0:	dd403315 	stw	r21,204(sp)
    b1f4:	dd003215 	stw	r20,200(sp)
    b1f8:	dc803015 	stw	r18,192(sp)
    b1fc:	dc402f15 	stw	r17,188(sp)
    b200:	dc002e15 	stw	r16,184(sp)
    b204:	d9402315 	stw	r5,140(sp)
    b208:	d9002715 	stw	r4,156(sp)
    b20c:	1080200c 	andi	r2,r2,128
    b210:	d9c02415 	stw	r7,144(sp)
    b214:	3027883a 	mov	r19,r6
    b218:	10000226 	beq	r2,zero,b224 <___svfiprintf_internal_r+0x50>
    b21c:	28800417 	ldw	r2,16(r5)
    b220:	10046d26 	beq	r2,zero,c3d8 <___svfiprintf_internal_r+0x1204>
    b224:	d8801a04 	addi	r2,sp,104
    b228:	d8c019c4 	addi	r3,sp,103
    b22c:	05800074 	movhi	r22,1
    b230:	10c9c83a 	sub	r4,r2,r3
    b234:	b59b3504 	addi	r22,r22,27860
    b238:	d8801e15 	stw	r2,120(sp)
    b23c:	d8c01f15 	stw	r3,124(sp)
    b240:	dec01a15 	stw	sp,104(sp)
    b244:	d8001c15 	stw	zero,112(sp)
    b248:	d8001b15 	stw	zero,108(sp)
    b24c:	d811883a 	mov	r8,sp
    b250:	d8002915 	stw	zero,164(sp)
    b254:	d8002615 	stw	zero,152(sp)
    b258:	d9002c15 	stw	r4,176(sp)
    b25c:	98800007 	ldb	r2,0(r19)
    b260:	10031426 	beq	r2,zero,beb4 <___svfiprintf_internal_r+0xce0>
    b264:	00c00944 	movi	r3,37
    b268:	9825883a 	mov	r18,r19
    b26c:	10c0021e 	bne	r2,r3,b278 <___svfiprintf_internal_r+0xa4>
    b270:	00001406 	br	b2c4 <___svfiprintf_internal_r+0xf0>
    b274:	10c00326 	beq	r2,r3,b284 <___svfiprintf_internal_r+0xb0>
    b278:	94800044 	addi	r18,r18,1
    b27c:	90800007 	ldb	r2,0(r18)
    b280:	103ffc1e 	bne	r2,zero,b274 <__alt_mem_Onchip_SRAM+0xf800b274>
    b284:	94e1c83a 	sub	r16,r18,r19
    b288:	80000e26 	beq	r16,zero,b2c4 <___svfiprintf_internal_r+0xf0>
    b28c:	d8c01c17 	ldw	r3,112(sp)
    b290:	d8801b17 	ldw	r2,108(sp)
    b294:	44c00015 	stw	r19,0(r8)
    b298:	1c07883a 	add	r3,r3,r16
    b29c:	10800044 	addi	r2,r2,1
    b2a0:	d8c01c15 	stw	r3,112(sp)
    b2a4:	44000115 	stw	r16,4(r8)
    b2a8:	d8801b15 	stw	r2,108(sp)
    b2ac:	00c001c4 	movi	r3,7
    b2b0:	18835c16 	blt	r3,r2,c024 <___svfiprintf_internal_r+0xe50>
    b2b4:	42000204 	addi	r8,r8,8
    b2b8:	d9402617 	ldw	r5,152(sp)
    b2bc:	2c0b883a 	add	r5,r5,r16
    b2c0:	d9402615 	stw	r5,152(sp)
    b2c4:	90800007 	ldb	r2,0(r18)
    b2c8:	1002fc26 	beq	r2,zero,bebc <___svfiprintf_internal_r+0xce8>
    b2cc:	0023883a 	mov	r17,zero
    b2d0:	00bfffc4 	movi	r2,-1
    b2d4:	0021883a 	mov	r16,zero
    b2d8:	94c00044 	addi	r19,r18,1
    b2dc:	90c00047 	ldb	r3,1(r18)
    b2e0:	dc402105 	stb	r17,132(sp)
    b2e4:	d8001d85 	stb	zero,118(sp)
    b2e8:	002b883a 	mov	r21,zero
    b2ec:	d8802015 	stw	r2,128(sp)
    b2f0:	d8002515 	stw	zero,148(sp)
    b2f4:	04801604 	movi	r18,88
    b2f8:	05000244 	movi	r20,9
    b2fc:	402f883a 	mov	r23,r8
    b300:	8023883a 	mov	r17,r16
    b304:	9cc00044 	addi	r19,r19,1
    b308:	18bff804 	addi	r2,r3,-32
    b30c:	9081fb36 	bltu	r18,r2,bafc <___svfiprintf_internal_r+0x928>
    b310:	100490ba 	slli	r2,r2,2
    b314:	01000074 	movhi	r4,1
    b318:	212cca04 	addi	r4,r4,-19672
    b31c:	1105883a 	add	r2,r2,r4
    b320:	10800017 	ldw	r2,0(r2)
    b324:	1000683a 	jmp	r2
    b328:	0000b528 	cmpgeui	zero,zero,724
    b32c:	0000bafc 	xorhi	zero,zero,747
    b330:	0000bafc 	xorhi	zero,zero,747
    b334:	0000b51c 	xori	zero,zero,724
    b338:	0000bafc 	xorhi	zero,zero,747
    b33c:	0000bafc 	xorhi	zero,zero,747
    b340:	0000bafc 	xorhi	zero,zero,747
    b344:	0000bafc 	xorhi	zero,zero,747
    b348:	0000bafc 	xorhi	zero,zero,747
    b34c:	0000bafc 	xorhi	zero,zero,747
    b350:	0000b48c 	andi	zero,zero,722
    b354:	0000b688 	cmpgei	zero,zero,730
    b358:	0000bafc 	xorhi	zero,zero,747
    b35c:	0000b4b4 	movhi	zero,722
    b360:	0000bb38 	rdprs	zero,zero,748
    b364:	0000bafc 	xorhi	zero,zero,747
    b368:	0000bb2c 	andhi	zero,zero,748
    b36c:	0000bac0 	call	bac <delay_1s+0x8>
    b370:	0000bac0 	call	bac <delay_1s+0x8>
    b374:	0000bac0 	call	bac <delay_1s+0x8>
    b378:	0000bac0 	call	bac <delay_1s+0x8>
    b37c:	0000bac0 	call	bac <delay_1s+0x8>
    b380:	0000bac0 	call	bac <delay_1s+0x8>
    b384:	0000bac0 	call	bac <delay_1s+0x8>
    b388:	0000bac0 	call	bac <delay_1s+0x8>
    b38c:	0000bac0 	call	bac <delay_1s+0x8>
    b390:	0000bafc 	xorhi	zero,zero,747
    b394:	0000bafc 	xorhi	zero,zero,747
    b398:	0000bafc 	xorhi	zero,zero,747
    b39c:	0000bafc 	xorhi	zero,zero,747
    b3a0:	0000bafc 	xorhi	zero,zero,747
    b3a4:	0000bafc 	xorhi	zero,zero,747
    b3a8:	0000bafc 	xorhi	zero,zero,747
    b3ac:	0000bafc 	xorhi	zero,zero,747
    b3b0:	0000bafc 	xorhi	zero,zero,747
    b3b4:	0000bafc 	xorhi	zero,zero,747
    b3b8:	0000ba44 	movi	zero,745
    b3bc:	0000bafc 	xorhi	zero,zero,747
    b3c0:	0000bafc 	xorhi	zero,zero,747
    b3c4:	0000bafc 	xorhi	zero,zero,747
    b3c8:	0000bafc 	xorhi	zero,zero,747
    b3cc:	0000bafc 	xorhi	zero,zero,747
    b3d0:	0000bafc 	xorhi	zero,zero,747
    b3d4:	0000bafc 	xorhi	zero,zero,747
    b3d8:	0000bafc 	xorhi	zero,zero,747
    b3dc:	0000bafc 	xorhi	zero,zero,747
    b3e0:	0000bafc 	xorhi	zero,zero,747
    b3e4:	0000bbf4 	movhi	zero,751
    b3e8:	0000bafc 	xorhi	zero,zero,747
    b3ec:	0000bafc 	xorhi	zero,zero,747
    b3f0:	0000bafc 	xorhi	zero,zero,747
    b3f4:	0000bafc 	xorhi	zero,zero,747
    b3f8:	0000bafc 	xorhi	zero,zero,747
    b3fc:	0000bb80 	call	bb8 <delay_1s+0x14>
    b400:	0000bafc 	xorhi	zero,zero,747
    b404:	0000bafc 	xorhi	zero,zero,747
    b408:	0000b880 	call	b88 <cam_read_data+0xc8>
    b40c:	0000bafc 	xorhi	zero,zero,747
    b410:	0000bafc 	xorhi	zero,zero,747
    b414:	0000bafc 	xorhi	zero,zero,747
    b418:	0000bafc 	xorhi	zero,zero,747
    b41c:	0000bafc 	xorhi	zero,zero,747
    b420:	0000bafc 	xorhi	zero,zero,747
    b424:	0000bafc 	xorhi	zero,zero,747
    b428:	0000bafc 	xorhi	zero,zero,747
    b42c:	0000bafc 	xorhi	zero,zero,747
    b430:	0000bafc 	xorhi	zero,zero,747
    b434:	0000b74c 	andi	zero,zero,733
    b438:	0000b930 	cmpltui	zero,zero,740
    b43c:	0000bafc 	xorhi	zero,zero,747
    b440:	0000bafc 	xorhi	zero,zero,747
    b444:	0000bafc 	xorhi	zero,zero,747
    b448:	0000b924 	muli	zero,zero,740
    b44c:	0000b930 	cmpltui	zero,zero,740
    b450:	0000bafc 	xorhi	zero,zero,747
    b454:	0000bafc 	xorhi	zero,zero,747
    b458:	0000b910 	cmplti	zero,zero,740
    b45c:	0000bafc 	xorhi	zero,zero,747
    b460:	0000b8d0 	cmplti	zero,zero,739
    b464:	0000b69c 	xori	zero,zero,730
    b468:	0000b4c0 	call	b4c <cam_read_data+0x8c>
    b46c:	0000ba38 	rdprs	zero,zero,744
    b470:	0000bafc 	xorhi	zero,zero,747
    b474:	0000b9e4 	muli	zero,zero,743
    b478:	0000bafc 	xorhi	zero,zero,747
    b47c:	0000b600 	call	b60 <cam_read_data+0xa0>
    b480:	0000bafc 	xorhi	zero,zero,747
    b484:	0000bafc 	xorhi	zero,zero,747
    b488:	0000b54c 	andi	zero,zero,725
    b48c:	d9002417 	ldw	r4,144(sp)
    b490:	d9402417 	ldw	r5,144(sp)
    b494:	21000017 	ldw	r4,0(r4)
    b498:	28800104 	addi	r2,r5,4
    b49c:	d9002515 	stw	r4,148(sp)
    b4a0:	20032b0e 	bge	r4,zero,c150 <___svfiprintf_internal_r+0xf7c>
    b4a4:	d8c02517 	ldw	r3,148(sp)
    b4a8:	d8802415 	stw	r2,144(sp)
    b4ac:	00c7c83a 	sub	r3,zero,r3
    b4b0:	d8c02515 	stw	r3,148(sp)
    b4b4:	8c400114 	ori	r17,r17,4
    b4b8:	98c00007 	ldb	r3,0(r19)
    b4bc:	003f9106 	br	b304 <__alt_mem_Onchip_SRAM+0xf800b304>
    b4c0:	00800c04 	movi	r2,48
    b4c4:	d9402417 	ldw	r5,144(sp)
    b4c8:	d9002017 	ldw	r4,128(sp)
    b4cc:	d8801d05 	stb	r2,116(sp)
    b4d0:	00801e04 	movi	r2,120
    b4d4:	d8801d45 	stb	r2,117(sp)
    b4d8:	d8001d85 	stb	zero,118(sp)
    b4dc:	b811883a 	mov	r8,r23
    b4e0:	28c00104 	addi	r3,r5,4
    b4e4:	2c800017 	ldw	r18,0(r5)
    b4e8:	0029883a 	mov	r20,zero
    b4ec:	88800094 	ori	r2,r17,2
    b4f0:	20036316 	blt	r4,zero,c280 <___svfiprintf_internal_r+0x10ac>
    b4f4:	00bfdfc4 	movi	r2,-129
    b4f8:	88a0703a 	and	r16,r17,r2
    b4fc:	d8c02415 	stw	r3,144(sp)
    b500:	84000094 	ori	r16,r16,2
    b504:	90031c26 	beq	r18,zero,c178 <___svfiprintf_internal_r+0xfa4>
    b508:	01400074 	movhi	r5,1
    b50c:	295acc04 	addi	r5,r5,27440
    b510:	002b883a 	mov	r21,zero
    b514:	d9402915 	stw	r5,164(sp)
    b518:	00002906 	br	b5c0 <___svfiprintf_internal_r+0x3ec>
    b51c:	8c400054 	ori	r17,r17,1
    b520:	98c00007 	ldb	r3,0(r19)
    b524:	003f7706 	br	b304 <__alt_mem_Onchip_SRAM+0xf800b304>
    b528:	a8803fcc 	andi	r2,r21,255
    b52c:	1080201c 	xori	r2,r2,128
    b530:	10bfe004 	addi	r2,r2,-128
    b534:	10032a1e 	bne	r2,zero,c1e0 <___svfiprintf_internal_r+0x100c>
    b538:	00c00044 	movi	r3,1
    b53c:	d8c02105 	stb	r3,132(sp)
    b540:	05400804 	movi	r21,32
    b544:	98c00007 	ldb	r3,0(r19)
    b548:	003f6e06 	br	b304 <__alt_mem_Onchip_SRAM+0xf800b304>
    b54c:	8821883a 	mov	r16,r17
    b550:	dc402103 	ldbu	r17,132(sp)
    b554:	b811883a 	mov	r8,r23
    b558:	8c403fcc 	andi	r17,r17,255
    b55c:	8803f01e 	bne	r17,zero,c520 <___svfiprintf_internal_r+0x134c>
    b560:	00800074 	movhi	r2,1
    b564:	109acc04 	addi	r2,r2,27440
    b568:	d8802915 	stw	r2,164(sp)
    b56c:	8080080c 	andi	r2,r16,32
    b570:	1000cd26 	beq	r2,zero,b8a8 <___svfiprintf_internal_r+0x6d4>
    b574:	d9002417 	ldw	r4,144(sp)
    b578:	24800017 	ldw	r18,0(r4)
    b57c:	25000117 	ldw	r20,4(r4)
    b580:	21000204 	addi	r4,r4,8
    b584:	d9002415 	stw	r4,144(sp)
    b588:	8080004c 	andi	r2,r16,1
    b58c:	1002c726 	beq	r2,zero,c0ac <___svfiprintf_internal_r+0xed8>
    b590:	9504b03a 	or	r2,r18,r20
    b594:	1003061e 	bne	r2,zero,c1b0 <___svfiprintf_internal_r+0xfdc>
    b598:	d9002017 	ldw	r4,128(sp)
    b59c:	d8001d85 	stb	zero,118(sp)
    b5a0:	20033e16 	blt	r4,zero,c29c <___svfiprintf_internal_r+0x10c8>
    b5a4:	00bfdfc4 	movi	r2,-129
    b5a8:	80a0703a 	and	r16,r16,r2
    b5ac:	d9402017 	ldw	r5,128(sp)
    b5b0:	002b883a 	mov	r21,zero
    b5b4:	28002826 	beq	r5,zero,b658 <___svfiprintf_internal_r+0x484>
    b5b8:	0025883a 	mov	r18,zero
    b5bc:	0029883a 	mov	r20,zero
    b5c0:	d9002917 	ldw	r4,164(sp)
    b5c4:	dc401a04 	addi	r17,sp,104
    b5c8:	908003cc 	andi	r2,r18,15
    b5cc:	a006973a 	slli	r3,r20,28
    b5d0:	2085883a 	add	r2,r4,r2
    b5d4:	9024d13a 	srli	r18,r18,4
    b5d8:	10800003 	ldbu	r2,0(r2)
    b5dc:	a028d13a 	srli	r20,r20,4
    b5e0:	8c7fffc4 	addi	r17,r17,-1
    b5e4:	1ca4b03a 	or	r18,r3,r18
    b5e8:	88800005 	stb	r2,0(r17)
    b5ec:	9504b03a 	or	r2,r18,r20
    b5f0:	103ff51e 	bne	r2,zero,b5c8 <__alt_mem_Onchip_SRAM+0xf800b5c8>
    b5f4:	d8801e17 	ldw	r2,120(sp)
    b5f8:	1469c83a 	sub	r20,r2,r17
    b5fc:	00001906 	br	b664 <___svfiprintf_internal_r+0x490>
    b600:	8821883a 	mov	r16,r17
    b604:	dc402103 	ldbu	r17,132(sp)
    b608:	b811883a 	mov	r8,r23
    b60c:	8c403fcc 	andi	r17,r17,255
    b610:	8803d01e 	bne	r17,zero,c554 <___svfiprintf_internal_r+0x1380>
    b614:	8080080c 	andi	r2,r16,32
    b618:	10016126 	beq	r2,zero,bba0 <___svfiprintf_internal_r+0x9cc>
    b61c:	d9002417 	ldw	r4,144(sp)
    b620:	d9402017 	ldw	r5,128(sp)
    b624:	d8001d85 	stb	zero,118(sp)
    b628:	20c00204 	addi	r3,r4,8
    b62c:	24800017 	ldw	r18,0(r4)
    b630:	25000117 	ldw	r20,4(r4)
    b634:	28030f16 	blt	r5,zero,c274 <___svfiprintf_internal_r+0x10a0>
    b638:	013fdfc4 	movi	r4,-129
    b63c:	9504b03a 	or	r2,r18,r20
    b640:	d8c02415 	stw	r3,144(sp)
    b644:	8120703a 	and	r16,r16,r4
    b648:	002b883a 	mov	r21,zero
    b64c:	1000cd1e 	bne	r2,zero,b984 <___svfiprintf_internal_r+0x7b0>
    b650:	d8c02017 	ldw	r3,128(sp)
    b654:	1803141e 	bne	r3,zero,c2a8 <___svfiprintf_internal_r+0x10d4>
    b658:	d8002015 	stw	zero,128(sp)
    b65c:	0029883a 	mov	r20,zero
    b660:	dc401a04 	addi	r17,sp,104
    b664:	dc802017 	ldw	r18,128(sp)
    b668:	9500010e 	bge	r18,r20,b670 <___svfiprintf_internal_r+0x49c>
    b66c:	a025883a 	mov	r18,r20
    b670:	ad403fcc 	andi	r21,r21,255
    b674:	ad40201c 	xori	r21,r21,128
    b678:	ad7fe004 	addi	r21,r21,-128
    b67c:	a8003f26 	beq	r21,zero,b77c <___svfiprintf_internal_r+0x5a8>
    b680:	94800044 	addi	r18,r18,1
    b684:	00003d06 	br	b77c <___svfiprintf_internal_r+0x5a8>
    b688:	00c00044 	movi	r3,1
    b68c:	d8c02105 	stb	r3,132(sp)
    b690:	05400ac4 	movi	r21,43
    b694:	98c00007 	ldb	r3,0(r19)
    b698:	003f1a06 	br	b304 <__alt_mem_Onchip_SRAM+0xf800b304>
    b69c:	8821883a 	mov	r16,r17
    b6a0:	dc402103 	ldbu	r17,132(sp)
    b6a4:	b811883a 	mov	r8,r23
    b6a8:	8c403fcc 	andi	r17,r17,255
    b6ac:	8803a71e 	bne	r17,zero,c54c <___svfiprintf_internal_r+0x1378>
    b6b0:	8080080c 	andi	r2,r16,32
    b6b4:	10015726 	beq	r2,zero,bc14 <___svfiprintf_internal_r+0xa40>
    b6b8:	d8c02417 	ldw	r3,144(sp)
    b6bc:	d9002017 	ldw	r4,128(sp)
    b6c0:	d8001d85 	stb	zero,118(sp)
    b6c4:	18800204 	addi	r2,r3,8
    b6c8:	1c800017 	ldw	r18,0(r3)
    b6cc:	1d000117 	ldw	r20,4(r3)
    b6d0:	2002db16 	blt	r4,zero,c240 <___svfiprintf_internal_r+0x106c>
    b6d4:	013fdfc4 	movi	r4,-129
    b6d8:	9506b03a 	or	r3,r18,r20
    b6dc:	d8802415 	stw	r2,144(sp)
    b6e0:	8120703a 	and	r16,r16,r4
    b6e4:	18015826 	beq	r3,zero,bc48 <___svfiprintf_internal_r+0xa74>
    b6e8:	002b883a 	mov	r21,zero
    b6ec:	dc401a04 	addi	r17,sp,104
    b6f0:	9006d0fa 	srli	r3,r18,3
    b6f4:	a008977a 	slli	r4,r20,29
    b6f8:	a028d0fa 	srli	r20,r20,3
    b6fc:	948001cc 	andi	r18,r18,7
    b700:	90800c04 	addi	r2,r18,48
    b704:	8c7fffc4 	addi	r17,r17,-1
    b708:	20e4b03a 	or	r18,r4,r3
    b70c:	88800005 	stb	r2,0(r17)
    b710:	9506b03a 	or	r3,r18,r20
    b714:	183ff61e 	bne	r3,zero,b6f0 <__alt_mem_Onchip_SRAM+0xf800b6f0>
    b718:	80c0004c 	andi	r3,r16,1
    b71c:	18028926 	beq	r3,zero,c144 <___svfiprintf_internal_r+0xf70>
    b720:	10803fcc 	andi	r2,r2,255
    b724:	1080201c 	xori	r2,r2,128
    b728:	10bfe004 	addi	r2,r2,-128
    b72c:	00c00c04 	movi	r3,48
    b730:	10ffb026 	beq	r2,r3,b5f4 <__alt_mem_Onchip_SRAM+0xf800b5f4>
    b734:	88ffffc5 	stb	r3,-1(r17)
    b738:	d8c01e17 	ldw	r3,120(sp)
    b73c:	88bfffc4 	addi	r2,r17,-1
    b740:	1023883a 	mov	r17,r2
    b744:	18a9c83a 	sub	r20,r3,r2
    b748:	003fc606 	br	b664 <__alt_mem_Onchip_SRAM+0xf800b664>
    b74c:	d8c02417 	ldw	r3,144(sp)
    b750:	04800044 	movi	r18,1
    b754:	8821883a 	mov	r16,r17
    b758:	18800017 	ldw	r2,0(r3)
    b75c:	18c00104 	addi	r3,r3,4
    b760:	b811883a 	mov	r8,r23
    b764:	d8001d85 	stb	zero,118(sp)
    b768:	d8801005 	stb	r2,64(sp)
    b76c:	d8c02415 	stw	r3,144(sp)
    b770:	9029883a 	mov	r20,r18
    b774:	dc401004 	addi	r17,sp,64
    b778:	d8002015 	stw	zero,128(sp)
    b77c:	80c0008c 	andi	r3,r16,2
    b780:	d8c02115 	stw	r3,132(sp)
    b784:	18000126 	beq	r3,zero,b78c <___svfiprintf_internal_r+0x5b8>
    b788:	94800084 	addi	r18,r18,2
    b78c:	80c0210c 	andi	r3,r16,132
    b790:	d8c02215 	stw	r3,136(sp)
    b794:	1801321e 	bne	r3,zero,bc60 <___svfiprintf_internal_r+0xa8c>
    b798:	d9002517 	ldw	r4,148(sp)
    b79c:	24b9c83a 	sub	fp,r4,r18
    b7a0:	07012f0e 	bge	zero,fp,bc60 <___svfiprintf_internal_r+0xa8c>
    b7a4:	02400404 	movi	r9,16
    b7a8:	d8c01c17 	ldw	r3,112(sp)
    b7ac:	d8801b17 	ldw	r2,108(sp)
    b7b0:	4f03250e 	bge	r9,fp,c448 <___svfiprintf_internal_r+0x1274>
    b7b4:	01000074 	movhi	r4,1
    b7b8:	211b3904 	addi	r4,r4,27876
    b7bc:	dc002a15 	stw	r16,168(sp)
    b7c0:	dc402b15 	stw	r17,172(sp)
    b7c4:	d9002815 	stw	r4,160(sp)
    b7c8:	e023883a 	mov	r17,fp
    b7cc:	482f883a 	mov	r23,r9
    b7d0:	9839883a 	mov	fp,r19
    b7d4:	054001c4 	movi	r21,7
    b7d8:	9027883a 	mov	r19,r18
    b7dc:	dc002717 	ldw	r16,156(sp)
    b7e0:	dc802317 	ldw	r18,140(sp)
    b7e4:	00000306 	br	b7f4 <___svfiprintf_internal_r+0x620>
    b7e8:	8c7ffc04 	addi	r17,r17,-16
    b7ec:	42000204 	addi	r8,r8,8
    b7f0:	bc40130e 	bge	r23,r17,b840 <___svfiprintf_internal_r+0x66c>
    b7f4:	01400074 	movhi	r5,1
    b7f8:	18c00404 	addi	r3,r3,16
    b7fc:	10800044 	addi	r2,r2,1
    b800:	295b3904 	addi	r5,r5,27876
    b804:	41400015 	stw	r5,0(r8)
    b808:	45c00115 	stw	r23,4(r8)
    b80c:	d8c01c15 	stw	r3,112(sp)
    b810:	d8801b15 	stw	r2,108(sp)
    b814:	a8bff40e 	bge	r21,r2,b7e8 <__alt_mem_Onchip_SRAM+0xf800b7e8>
    b818:	d9801a04 	addi	r6,sp,104
    b81c:	900b883a 	mov	r5,r18
    b820:	8009883a 	mov	r4,r16
    b824:	000b0040 	call	b004 <__ssprint_r>
    b828:	1001aa1e 	bne	r2,zero,bed4 <___svfiprintf_internal_r+0xd00>
    b82c:	8c7ffc04 	addi	r17,r17,-16
    b830:	d8c01c17 	ldw	r3,112(sp)
    b834:	d8801b17 	ldw	r2,108(sp)
    b838:	d811883a 	mov	r8,sp
    b83c:	bc7fed16 	blt	r23,r17,b7f4 <__alt_mem_Onchip_SRAM+0xf800b7f4>
    b840:	9825883a 	mov	r18,r19
    b844:	dc002a17 	ldw	r16,168(sp)
    b848:	e027883a 	mov	r19,fp
    b84c:	8839883a 	mov	fp,r17
    b850:	dc402b17 	ldw	r17,172(sp)
    b854:	d9002817 	ldw	r4,160(sp)
    b858:	e0c7883a 	add	r3,fp,r3
    b85c:	10800044 	addi	r2,r2,1
    b860:	41000015 	stw	r4,0(r8)
    b864:	47000115 	stw	fp,4(r8)
    b868:	d8c01c15 	stw	r3,112(sp)
    b86c:	d8801b15 	stw	r2,108(sp)
    b870:	010001c4 	movi	r4,7
    b874:	20821616 	blt	r4,r2,c0d0 <___svfiprintf_internal_r+0xefc>
    b878:	42000204 	addi	r8,r8,8
    b87c:	0000fa06 	br	bc68 <___svfiprintf_internal_r+0xa94>
    b880:	8821883a 	mov	r16,r17
    b884:	dc402103 	ldbu	r17,132(sp)
    b888:	b811883a 	mov	r8,r23
    b88c:	8c403fcc 	andi	r17,r17,255
    b890:	8803361e 	bne	r17,zero,c56c <___svfiprintf_internal_r+0x1398>
    b894:	01400074 	movhi	r5,1
    b898:	295ac704 	addi	r5,r5,27420
    b89c:	d9402915 	stw	r5,164(sp)
    b8a0:	8080080c 	andi	r2,r16,32
    b8a4:	103f331e 	bne	r2,zero,b574 <__alt_mem_Onchip_SRAM+0xf800b574>
    b8a8:	8080040c 	andi	r2,r16,16
    b8ac:	1002551e 	bne	r2,zero,c204 <___svfiprintf_internal_r+0x1030>
    b8b0:	8080100c 	andi	r2,r16,64
    b8b4:	1002a626 	beq	r2,zero,c350 <___svfiprintf_internal_r+0x117c>
    b8b8:	d8802417 	ldw	r2,144(sp)
    b8bc:	0029883a 	mov	r20,zero
    b8c0:	1480000b 	ldhu	r18,0(r2)
    b8c4:	10800104 	addi	r2,r2,4
    b8c8:	d8802415 	stw	r2,144(sp)
    b8cc:	003f2e06 	br	b588 <__alt_mem_Onchip_SRAM+0xf800b588>
    b8d0:	8821883a 	mov	r16,r17
    b8d4:	dc402103 	ldbu	r17,132(sp)
    b8d8:	b811883a 	mov	r8,r23
    b8dc:	8c403fcc 	andi	r17,r17,255
    b8e0:	88030b1e 	bne	r17,zero,c510 <___svfiprintf_internal_r+0x133c>
    b8e4:	8080080c 	andi	r2,r16,32
    b8e8:	1002271e 	bne	r2,zero,c188 <___svfiprintf_internal_r+0xfb4>
    b8ec:	8080040c 	andi	r2,r16,16
    b8f0:	10028e26 	beq	r2,zero,c32c <___svfiprintf_internal_r+0x1158>
    b8f4:	d8c02417 	ldw	r3,144(sp)
    b8f8:	d9002617 	ldw	r4,152(sp)
    b8fc:	18800017 	ldw	r2,0(r3)
    b900:	18c00104 	addi	r3,r3,4
    b904:	d8c02415 	stw	r3,144(sp)
    b908:	11000015 	stw	r4,0(r2)
    b90c:	003e5306 	br	b25c <__alt_mem_Onchip_SRAM+0xf800b25c>
    b910:	98c00007 	ldb	r3,0(r19)
    b914:	01401b04 	movi	r5,108
    b918:	19424f26 	beq	r3,r5,c258 <___svfiprintf_internal_r+0x1084>
    b91c:	8c400414 	ori	r17,r17,16
    b920:	003e7806 	br	b304 <__alt_mem_Onchip_SRAM+0xf800b304>
    b924:	8c401014 	ori	r17,r17,64
    b928:	98c00007 	ldb	r3,0(r19)
    b92c:	003e7506 	br	b304 <__alt_mem_Onchip_SRAM+0xf800b304>
    b930:	8821883a 	mov	r16,r17
    b934:	dc402103 	ldbu	r17,132(sp)
    b938:	b811883a 	mov	r8,r23
    b93c:	8c403fcc 	andi	r17,r17,255
    b940:	8802fe1e 	bne	r17,zero,c53c <___svfiprintf_internal_r+0x1368>
    b944:	8080080c 	andi	r2,r16,32
    b948:	10004626 	beq	r2,zero,ba64 <___svfiprintf_internal_r+0x890>
    b94c:	d9002417 	ldw	r4,144(sp)
    b950:	20800117 	ldw	r2,4(r4)
    b954:	24800017 	ldw	r18,0(r4)
    b958:	21000204 	addi	r4,r4,8
    b95c:	d9002415 	stw	r4,144(sp)
    b960:	1029883a 	mov	r20,r2
    b964:	10004a16 	blt	r2,zero,ba90 <___svfiprintf_internal_r+0x8bc>
    b968:	d9002017 	ldw	r4,128(sp)
    b96c:	dd401d83 	ldbu	r21,118(sp)
    b970:	2001eb16 	blt	r4,zero,c120 <___svfiprintf_internal_r+0xf4c>
    b974:	00ffdfc4 	movi	r3,-129
    b978:	9504b03a 	or	r2,r18,r20
    b97c:	80e0703a 	and	r16,r16,r3
    b980:	103f3326 	beq	r2,zero,b650 <__alt_mem_Onchip_SRAM+0xf800b650>
    b984:	a0009426 	beq	r20,zero,bbd8 <___svfiprintf_internal_r+0xa04>
    b988:	dc401a04 	addi	r17,sp,104
    b98c:	402f883a 	mov	r23,r8
    b990:	9009883a 	mov	r4,r18
    b994:	a00b883a 	mov	r5,r20
    b998:	01800284 	movi	r6,10
    b99c:	000f883a 	mov	r7,zero
    b9a0:	000ecc00 	call	ecc0 <__umoddi3>
    b9a4:	10800c04 	addi	r2,r2,48
    b9a8:	8c7fffc4 	addi	r17,r17,-1
    b9ac:	9009883a 	mov	r4,r18
    b9b0:	a00b883a 	mov	r5,r20
    b9b4:	88800005 	stb	r2,0(r17)
    b9b8:	01800284 	movi	r6,10
    b9bc:	000f883a 	mov	r7,zero
    b9c0:	000e6c40 	call	e6c4 <__udivdi3>
    b9c4:	1025883a 	mov	r18,r2
    b9c8:	10c4b03a 	or	r2,r2,r3
    b9cc:	1829883a 	mov	r20,r3
    b9d0:	103fef1e 	bne	r2,zero,b990 <__alt_mem_Onchip_SRAM+0xf800b990>
    b9d4:	d9001e17 	ldw	r4,120(sp)
    b9d8:	b811883a 	mov	r8,r23
    b9dc:	2469c83a 	sub	r20,r4,r17
    b9e0:	003f2006 	br	b664 <__alt_mem_Onchip_SRAM+0xf800b664>
    b9e4:	d8802417 	ldw	r2,144(sp)
    b9e8:	8821883a 	mov	r16,r17
    b9ec:	d8001d85 	stb	zero,118(sp)
    b9f0:	14400017 	ldw	r17,0(r2)
    b9f4:	b811883a 	mov	r8,r23
    b9f8:	15c00104 	addi	r23,r2,4
    b9fc:	88026c26 	beq	r17,zero,c3b0 <___svfiprintf_internal_r+0x11dc>
    ba00:	d8c02017 	ldw	r3,128(sp)
    ba04:	18025f16 	blt	r3,zero,c384 <___svfiprintf_internal_r+0x11b0>
    ba08:	180d883a 	mov	r6,r3
    ba0c:	000b883a 	mov	r5,zero
    ba10:	8809883a 	mov	r4,r17
    ba14:	da002d15 	stw	r8,180(sp)
    ba18:	00090f00 	call	90f0 <memchr>
    ba1c:	da002d17 	ldw	r8,180(sp)
    ba20:	1002a526 	beq	r2,zero,c4b8 <___svfiprintf_internal_r+0x12e4>
    ba24:	1469c83a 	sub	r20,r2,r17
    ba28:	dd401d83 	ldbu	r21,118(sp)
    ba2c:	ddc02415 	stw	r23,144(sp)
    ba30:	d8002015 	stw	zero,128(sp)
    ba34:	003f0b06 	br	b664 <__alt_mem_Onchip_SRAM+0xf800b664>
    ba38:	8c400814 	ori	r17,r17,32
    ba3c:	98c00007 	ldb	r3,0(r19)
    ba40:	003e3006 	br	b304 <__alt_mem_Onchip_SRAM+0xf800b304>
    ba44:	8821883a 	mov	r16,r17
    ba48:	dc402103 	ldbu	r17,132(sp)
    ba4c:	b811883a 	mov	r8,r23
    ba50:	8c403fcc 	andi	r17,r17,255
    ba54:	8802b01e 	bne	r17,zero,c518 <___svfiprintf_internal_r+0x1344>
    ba58:	84000414 	ori	r16,r16,16
    ba5c:	8080080c 	andi	r2,r16,32
    ba60:	103fba1e 	bne	r2,zero,b94c <__alt_mem_Onchip_SRAM+0xf800b94c>
    ba64:	8080040c 	andi	r2,r16,16
    ba68:	1001df1e 	bne	r2,zero,c1e8 <___svfiprintf_internal_r+0x1014>
    ba6c:	8080100c 	andi	r2,r16,64
    ba70:	10023d26 	beq	r2,zero,c368 <___svfiprintf_internal_r+0x1194>
    ba74:	d8802417 	ldw	r2,144(sp)
    ba78:	1480000f 	ldh	r18,0(r2)
    ba7c:	10800104 	addi	r2,r2,4
    ba80:	d8802415 	stw	r2,144(sp)
    ba84:	9029d7fa 	srai	r20,r18,31
    ba88:	a005883a 	mov	r2,r20
    ba8c:	103fb60e 	bge	r2,zero,b968 <__alt_mem_Onchip_SRAM+0xf800b968>
    ba90:	d9402017 	ldw	r5,128(sp)
    ba94:	04a5c83a 	sub	r18,zero,r18
    ba98:	05400b44 	movi	r21,45
    ba9c:	9004c03a 	cmpne	r2,r18,zero
    baa0:	0529c83a 	sub	r20,zero,r20
    baa4:	dd401d85 	stb	r21,118(sp)
    baa8:	a0a9c83a 	sub	r20,r20,r2
    baac:	28026c16 	blt	r5,zero,c460 <___svfiprintf_internal_r+0x128c>
    bab0:	00bfdfc4 	movi	r2,-129
    bab4:	80a0703a 	and	r16,r16,r2
    bab8:	a03fb31e 	bne	r20,zero,b988 <__alt_mem_Onchip_SRAM+0xf800b988>
    babc:	00004606 	br	bbd8 <___svfiprintf_internal_r+0xa04>
    bac0:	9839883a 	mov	fp,r19
    bac4:	d8002515 	stw	zero,148(sp)
    bac8:	1c3ff404 	addi	r16,r3,-48
    bacc:	0009883a 	mov	r4,zero
    bad0:	01400284 	movi	r5,10
    bad4:	0000ef80 	call	ef8 <__mulsi3>
    bad8:	e0c00007 	ldb	r3,0(fp)
    badc:	8089883a 	add	r4,r16,r2
    bae0:	9cc00044 	addi	r19,r19,1
    bae4:	1c3ff404 	addi	r16,r3,-48
    bae8:	9839883a 	mov	fp,r19
    baec:	a43ff82e 	bgeu	r20,r16,bad0 <__alt_mem_Onchip_SRAM+0xf800bad0>
    baf0:	d9002515 	stw	r4,148(sp)
    baf4:	18bff804 	addi	r2,r3,-32
    baf8:	90be052e 	bgeu	r18,r2,b310 <__alt_mem_Onchip_SRAM+0xf800b310>
    bafc:	8821883a 	mov	r16,r17
    bb00:	dc402103 	ldbu	r17,132(sp)
    bb04:	b811883a 	mov	r8,r23
    bb08:	8c403fcc 	andi	r17,r17,255
    bb0c:	88028d1e 	bne	r17,zero,c544 <___svfiprintf_internal_r+0x1370>
    bb10:	1800ea26 	beq	r3,zero,bebc <___svfiprintf_internal_r+0xce8>
    bb14:	04800044 	movi	r18,1
    bb18:	d8c01005 	stb	r3,64(sp)
    bb1c:	d8001d85 	stb	zero,118(sp)
    bb20:	9029883a 	mov	r20,r18
    bb24:	dc401004 	addi	r17,sp,64
    bb28:	003f1306 	br	b778 <__alt_mem_Onchip_SRAM+0xf800b778>
    bb2c:	8c402014 	ori	r17,r17,128
    bb30:	98c00007 	ldb	r3,0(r19)
    bb34:	003df306 	br	b304 <__alt_mem_Onchip_SRAM+0xf800b304>
    bb38:	98c00007 	ldb	r3,0(r19)
    bb3c:	01000a84 	movi	r4,42
    bb40:	9f000044 	addi	fp,r19,1
    bb44:	19026326 	beq	r3,r4,c4d4 <___svfiprintf_internal_r+0x1300>
    bb48:	1c3ff404 	addi	r16,r3,-48
    bb4c:	0009883a 	mov	r4,zero
    bb50:	a4025636 	bltu	r20,r16,c4ac <___svfiprintf_internal_r+0x12d8>
    bb54:	01400284 	movi	r5,10
    bb58:	0000ef80 	call	ef8 <__mulsi3>
    bb5c:	e0c00007 	ldb	r3,0(fp)
    bb60:	1409883a 	add	r4,r2,r16
    bb64:	e4c00044 	addi	r19,fp,1
    bb68:	1c3ff404 	addi	r16,r3,-48
    bb6c:	9839883a 	mov	fp,r19
    bb70:	a43ff82e 	bgeu	r20,r16,bb54 <__alt_mem_Onchip_SRAM+0xf800bb54>
    bb74:	20020c16 	blt	r4,zero,c3a8 <___svfiprintf_internal_r+0x11d4>
    bb78:	d9002015 	stw	r4,128(sp)
    bb7c:	003de206 	br	b308 <__alt_mem_Onchip_SRAM+0xf800b308>
    bb80:	8821883a 	mov	r16,r17
    bb84:	dc402103 	ldbu	r17,132(sp)
    bb88:	b811883a 	mov	r8,r23
    bb8c:	8c403fcc 	andi	r17,r17,255
    bb90:	8802721e 	bne	r17,zero,c55c <___svfiprintf_internal_r+0x1388>
    bb94:	84000414 	ori	r16,r16,16
    bb98:	8080080c 	andi	r2,r16,32
    bb9c:	103e9f1e 	bne	r2,zero,b61c <__alt_mem_Onchip_SRAM+0xf800b61c>
    bba0:	8080040c 	andi	r2,r16,16
    bba4:	10015326 	beq	r2,zero,c0f4 <___svfiprintf_internal_r+0xf20>
    bba8:	d8c02417 	ldw	r3,144(sp)
    bbac:	d9002017 	ldw	r4,128(sp)
    bbb0:	d8001d85 	stb	zero,118(sp)
    bbb4:	18800104 	addi	r2,r3,4
    bbb8:	1c800017 	ldw	r18,0(r3)
    bbbc:	0029883a 	mov	r20,zero
    bbc0:	20015516 	blt	r4,zero,c118 <___svfiprintf_internal_r+0xf44>
    bbc4:	00ffdfc4 	movi	r3,-129
    bbc8:	d8802415 	stw	r2,144(sp)
    bbcc:	80e0703a 	and	r16,r16,r3
    bbd0:	002b883a 	mov	r21,zero
    bbd4:	903e9e26 	beq	r18,zero,b650 <__alt_mem_Onchip_SRAM+0xf800b650>
    bbd8:	00800244 	movi	r2,9
    bbdc:	14bf6a36 	bltu	r2,r18,b988 <__alt_mem_Onchip_SRAM+0xf800b988>
    bbe0:	94800c04 	addi	r18,r18,48
    bbe4:	dc8019c5 	stb	r18,103(sp)
    bbe8:	dd002c17 	ldw	r20,176(sp)
    bbec:	dc4019c4 	addi	r17,sp,103
    bbf0:	003e9c06 	br	b664 <__alt_mem_Onchip_SRAM+0xf800b664>
    bbf4:	8821883a 	mov	r16,r17
    bbf8:	dc402103 	ldbu	r17,132(sp)
    bbfc:	b811883a 	mov	r8,r23
    bc00:	8c403fcc 	andi	r17,r17,255
    bc04:	8802571e 	bne	r17,zero,c564 <___svfiprintf_internal_r+0x1390>
    bc08:	84000414 	ori	r16,r16,16
    bc0c:	8080080c 	andi	r2,r16,32
    bc10:	103ea91e 	bne	r2,zero,b6b8 <__alt_mem_Onchip_SRAM+0xf800b6b8>
    bc14:	8080040c 	andi	r2,r16,16
    bc18:	10018026 	beq	r2,zero,c21c <___svfiprintf_internal_r+0x1048>
    bc1c:	d9402417 	ldw	r5,144(sp)
    bc20:	d8c02017 	ldw	r3,128(sp)
    bc24:	d8001d85 	stb	zero,118(sp)
    bc28:	28800104 	addi	r2,r5,4
    bc2c:	2c800017 	ldw	r18,0(r5)
    bc30:	0029883a 	mov	r20,zero
    bc34:	18018216 	blt	r3,zero,c240 <___svfiprintf_internal_r+0x106c>
    bc38:	00ffdfc4 	movi	r3,-129
    bc3c:	d8802415 	stw	r2,144(sp)
    bc40:	80e0703a 	and	r16,r16,r3
    bc44:	903ea81e 	bne	r18,zero,b6e8 <__alt_mem_Onchip_SRAM+0xf800b6e8>
    bc48:	d8802017 	ldw	r2,128(sp)
    bc4c:	002b883a 	mov	r21,zero
    bc50:	1001f226 	beq	r2,zero,c41c <___svfiprintf_internal_r+0x1248>
    bc54:	0025883a 	mov	r18,zero
    bc58:	0029883a 	mov	r20,zero
    bc5c:	003ea306 	br	b6ec <__alt_mem_Onchip_SRAM+0xf800b6ec>
    bc60:	d8c01c17 	ldw	r3,112(sp)
    bc64:	d8801b17 	ldw	r2,108(sp)
    bc68:	d9001d87 	ldb	r4,118(sp)
    bc6c:	20000b26 	beq	r4,zero,bc9c <___svfiprintf_internal_r+0xac8>
    bc70:	d9001d84 	addi	r4,sp,118
    bc74:	18c00044 	addi	r3,r3,1
    bc78:	10800044 	addi	r2,r2,1
    bc7c:	41000015 	stw	r4,0(r8)
    bc80:	01000044 	movi	r4,1
    bc84:	41000115 	stw	r4,4(r8)
    bc88:	d8c01c15 	stw	r3,112(sp)
    bc8c:	d8801b15 	stw	r2,108(sp)
    bc90:	010001c4 	movi	r4,7
    bc94:	2080f316 	blt	r4,r2,c064 <___svfiprintf_internal_r+0xe90>
    bc98:	42000204 	addi	r8,r8,8
    bc9c:	d9402117 	ldw	r5,132(sp)
    bca0:	28000b26 	beq	r5,zero,bcd0 <___svfiprintf_internal_r+0xafc>
    bca4:	d9001d04 	addi	r4,sp,116
    bca8:	18c00084 	addi	r3,r3,2
    bcac:	10800044 	addi	r2,r2,1
    bcb0:	41000015 	stw	r4,0(r8)
    bcb4:	01000084 	movi	r4,2
    bcb8:	41000115 	stw	r4,4(r8)
    bcbc:	d8c01c15 	stw	r3,112(sp)
    bcc0:	d8801b15 	stw	r2,108(sp)
    bcc4:	010001c4 	movi	r4,7
    bcc8:	2080ef16 	blt	r4,r2,c088 <___svfiprintf_internal_r+0xeb4>
    bccc:	42000204 	addi	r8,r8,8
    bcd0:	d9402217 	ldw	r5,136(sp)
    bcd4:	01002004 	movi	r4,128
    bcd8:	29008f26 	beq	r5,r4,bf18 <___svfiprintf_internal_r+0xd44>
    bcdc:	d9002017 	ldw	r4,128(sp)
    bce0:	252fc83a 	sub	r23,r4,r20
    bce4:	05c0310e 	bge	zero,r23,bdac <___svfiprintf_internal_r+0xbd8>
    bce8:	07000404 	movi	fp,16
    bcec:	e5c17d0e 	bge	fp,r23,c2e4 <___svfiprintf_internal_r+0x1110>
    bcf0:	01000074 	movhi	r4,1
    bcf4:	211b3504 	addi	r4,r4,27860
    bcf8:	dc002015 	stw	r16,128(sp)
    bcfc:	dc402215 	stw	r17,136(sp)
    bd00:	d9002115 	stw	r4,132(sp)
    bd04:	b823883a 	mov	r17,r23
    bd08:	054001c4 	movi	r21,7
    bd0c:	982f883a 	mov	r23,r19
    bd10:	dc002717 	ldw	r16,156(sp)
    bd14:	9027883a 	mov	r19,r18
    bd18:	dc802317 	ldw	r18,140(sp)
    bd1c:	00000306 	br	bd2c <___svfiprintf_internal_r+0xb58>
    bd20:	8c7ffc04 	addi	r17,r17,-16
    bd24:	42000204 	addi	r8,r8,8
    bd28:	e440110e 	bge	fp,r17,bd70 <___svfiprintf_internal_r+0xb9c>
    bd2c:	18c00404 	addi	r3,r3,16
    bd30:	10800044 	addi	r2,r2,1
    bd34:	45800015 	stw	r22,0(r8)
    bd38:	47000115 	stw	fp,4(r8)
    bd3c:	d8c01c15 	stw	r3,112(sp)
    bd40:	d8801b15 	stw	r2,108(sp)
    bd44:	a8bff60e 	bge	r21,r2,bd20 <__alt_mem_Onchip_SRAM+0xf800bd20>
    bd48:	d9801a04 	addi	r6,sp,104
    bd4c:	900b883a 	mov	r5,r18
    bd50:	8009883a 	mov	r4,r16
    bd54:	000b0040 	call	b004 <__ssprint_r>
    bd58:	10005e1e 	bne	r2,zero,bed4 <___svfiprintf_internal_r+0xd00>
    bd5c:	8c7ffc04 	addi	r17,r17,-16
    bd60:	d8c01c17 	ldw	r3,112(sp)
    bd64:	d8801b17 	ldw	r2,108(sp)
    bd68:	d811883a 	mov	r8,sp
    bd6c:	e47fef16 	blt	fp,r17,bd2c <__alt_mem_Onchip_SRAM+0xf800bd2c>
    bd70:	9825883a 	mov	r18,r19
    bd74:	dc002017 	ldw	r16,128(sp)
    bd78:	b827883a 	mov	r19,r23
    bd7c:	882f883a 	mov	r23,r17
    bd80:	dc402217 	ldw	r17,136(sp)
    bd84:	d9402117 	ldw	r5,132(sp)
    bd88:	1dc7883a 	add	r3,r3,r23
    bd8c:	10800044 	addi	r2,r2,1
    bd90:	41400015 	stw	r5,0(r8)
    bd94:	45c00115 	stw	r23,4(r8)
    bd98:	d8c01c15 	stw	r3,112(sp)
    bd9c:	d8801b15 	stw	r2,108(sp)
    bda0:	010001c4 	movi	r4,7
    bda4:	2080a616 	blt	r4,r2,c040 <___svfiprintf_internal_r+0xe6c>
    bda8:	42000204 	addi	r8,r8,8
    bdac:	a0c7883a 	add	r3,r20,r3
    bdb0:	10800044 	addi	r2,r2,1
    bdb4:	44400015 	stw	r17,0(r8)
    bdb8:	45000115 	stw	r20,4(r8)
    bdbc:	d8c01c15 	stw	r3,112(sp)
    bdc0:	d8801b15 	stw	r2,108(sp)
    bdc4:	010001c4 	movi	r4,7
    bdc8:	20808816 	blt	r4,r2,bfec <___svfiprintf_internal_r+0xe18>
    bdcc:	42000204 	addi	r8,r8,8
    bdd0:	8400010c 	andi	r16,r16,4
    bdd4:	80002c26 	beq	r16,zero,be88 <___svfiprintf_internal_r+0xcb4>
    bdd8:	d8802517 	ldw	r2,148(sp)
    bddc:	14a1c83a 	sub	r16,r2,r18
    bde0:	0400290e 	bge	zero,r16,be88 <___svfiprintf_internal_r+0xcb4>
    bde4:	04400404 	movi	r17,16
    bde8:	d8801b17 	ldw	r2,108(sp)
    bdec:	8c01a70e 	bge	r17,r16,c48c <___svfiprintf_internal_r+0x12b8>
    bdf0:	01400074 	movhi	r5,1
    bdf4:	295b3904 	addi	r5,r5,27876
    bdf8:	d9402815 	stw	r5,160(sp)
    bdfc:	050001c4 	movi	r20,7
    be00:	dd402717 	ldw	r21,156(sp)
    be04:	ddc02317 	ldw	r23,140(sp)
    be08:	00000306 	br	be18 <___svfiprintf_internal_r+0xc44>
    be0c:	843ffc04 	addi	r16,r16,-16
    be10:	42000204 	addi	r8,r8,8
    be14:	8c00130e 	bge	r17,r16,be64 <___svfiprintf_internal_r+0xc90>
    be18:	01000074 	movhi	r4,1
    be1c:	18c00404 	addi	r3,r3,16
    be20:	10800044 	addi	r2,r2,1
    be24:	211b3904 	addi	r4,r4,27876
    be28:	41000015 	stw	r4,0(r8)
    be2c:	44400115 	stw	r17,4(r8)
    be30:	d8c01c15 	stw	r3,112(sp)
    be34:	d8801b15 	stw	r2,108(sp)
    be38:	a0bff40e 	bge	r20,r2,be0c <__alt_mem_Onchip_SRAM+0xf800be0c>
    be3c:	d9801a04 	addi	r6,sp,104
    be40:	b80b883a 	mov	r5,r23
    be44:	a809883a 	mov	r4,r21
    be48:	000b0040 	call	b004 <__ssprint_r>
    be4c:	1000211e 	bne	r2,zero,bed4 <___svfiprintf_internal_r+0xd00>
    be50:	843ffc04 	addi	r16,r16,-16
    be54:	d8c01c17 	ldw	r3,112(sp)
    be58:	d8801b17 	ldw	r2,108(sp)
    be5c:	d811883a 	mov	r8,sp
    be60:	8c3fed16 	blt	r17,r16,be18 <__alt_mem_Onchip_SRAM+0xf800be18>
    be64:	d9402817 	ldw	r5,160(sp)
    be68:	1c07883a 	add	r3,r3,r16
    be6c:	10800044 	addi	r2,r2,1
    be70:	41400015 	stw	r5,0(r8)
    be74:	44000115 	stw	r16,4(r8)
    be78:	d8c01c15 	stw	r3,112(sp)
    be7c:	d8801b15 	stw	r2,108(sp)
    be80:	010001c4 	movi	r4,7
    be84:	2080b516 	blt	r4,r2,c15c <___svfiprintf_internal_r+0xf88>
    be88:	d8802517 	ldw	r2,148(sp)
    be8c:	1480010e 	bge	r2,r18,be94 <___svfiprintf_internal_r+0xcc0>
    be90:	9005883a 	mov	r2,r18
    be94:	d9002617 	ldw	r4,152(sp)
    be98:	2089883a 	add	r4,r4,r2
    be9c:	d9002615 	stw	r4,152(sp)
    bea0:	18005a1e 	bne	r3,zero,c00c <___svfiprintf_internal_r+0xe38>
    bea4:	98800007 	ldb	r2,0(r19)
    bea8:	d8001b15 	stw	zero,108(sp)
    beac:	d811883a 	mov	r8,sp
    beb0:	103cec1e 	bne	r2,zero,b264 <__alt_mem_Onchip_SRAM+0xf800b264>
    beb4:	9825883a 	mov	r18,r19
    beb8:	003d0206 	br	b2c4 <__alt_mem_Onchip_SRAM+0xf800b2c4>
    bebc:	d8801c17 	ldw	r2,112(sp)
    bec0:	10000426 	beq	r2,zero,bed4 <___svfiprintf_internal_r+0xd00>
    bec4:	d9402317 	ldw	r5,140(sp)
    bec8:	d9002717 	ldw	r4,156(sp)
    becc:	d9801a04 	addi	r6,sp,104
    bed0:	000b0040 	call	b004 <__ssprint_r>
    bed4:	d9402317 	ldw	r5,140(sp)
    bed8:	d8802617 	ldw	r2,152(sp)
    bedc:	28c0030b 	ldhu	r3,12(r5)
    bee0:	18c0100c 	andi	r3,r3,64
    bee4:	18015c1e 	bne	r3,zero,c458 <___svfiprintf_internal_r+0x1284>
    bee8:	dfc03717 	ldw	ra,220(sp)
    beec:	df003617 	ldw	fp,216(sp)
    bef0:	ddc03517 	ldw	r23,212(sp)
    bef4:	dd803417 	ldw	r22,208(sp)
    bef8:	dd403317 	ldw	r21,204(sp)
    befc:	dd003217 	ldw	r20,200(sp)
    bf00:	dcc03117 	ldw	r19,196(sp)
    bf04:	dc803017 	ldw	r18,192(sp)
    bf08:	dc402f17 	ldw	r17,188(sp)
    bf0c:	dc002e17 	ldw	r16,184(sp)
    bf10:	dec03804 	addi	sp,sp,224
    bf14:	f800283a 	ret
    bf18:	d9002517 	ldw	r4,148(sp)
    bf1c:	24afc83a 	sub	r23,r4,r18
    bf20:	05ff6e0e 	bge	zero,r23,bcdc <__alt_mem_Onchip_SRAM+0xf800bcdc>
    bf24:	07000404 	movi	fp,16
    bf28:	e5c15c0e 	bge	fp,r23,c49c <___svfiprintf_internal_r+0x12c8>
    bf2c:	01000074 	movhi	r4,1
    bf30:	211b3504 	addi	r4,r4,27860
    bf34:	dc002215 	stw	r16,136(sp)
    bf38:	dc402815 	stw	r17,160(sp)
    bf3c:	d9002115 	stw	r4,132(sp)
    bf40:	b823883a 	mov	r17,r23
    bf44:	054001c4 	movi	r21,7
    bf48:	982f883a 	mov	r23,r19
    bf4c:	dc002717 	ldw	r16,156(sp)
    bf50:	9027883a 	mov	r19,r18
    bf54:	dc802317 	ldw	r18,140(sp)
    bf58:	00000306 	br	bf68 <___svfiprintf_internal_r+0xd94>
    bf5c:	8c7ffc04 	addi	r17,r17,-16
    bf60:	42000204 	addi	r8,r8,8
    bf64:	e440110e 	bge	fp,r17,bfac <___svfiprintf_internal_r+0xdd8>
    bf68:	18c00404 	addi	r3,r3,16
    bf6c:	10800044 	addi	r2,r2,1
    bf70:	45800015 	stw	r22,0(r8)
    bf74:	47000115 	stw	fp,4(r8)
    bf78:	d8c01c15 	stw	r3,112(sp)
    bf7c:	d8801b15 	stw	r2,108(sp)
    bf80:	a8bff60e 	bge	r21,r2,bf5c <__alt_mem_Onchip_SRAM+0xf800bf5c>
    bf84:	d9801a04 	addi	r6,sp,104
    bf88:	900b883a 	mov	r5,r18
    bf8c:	8009883a 	mov	r4,r16
    bf90:	000b0040 	call	b004 <__ssprint_r>
    bf94:	103fcf1e 	bne	r2,zero,bed4 <__alt_mem_Onchip_SRAM+0xf800bed4>
    bf98:	8c7ffc04 	addi	r17,r17,-16
    bf9c:	d8c01c17 	ldw	r3,112(sp)
    bfa0:	d8801b17 	ldw	r2,108(sp)
    bfa4:	d811883a 	mov	r8,sp
    bfa8:	e47fef16 	blt	fp,r17,bf68 <__alt_mem_Onchip_SRAM+0xf800bf68>
    bfac:	9825883a 	mov	r18,r19
    bfb0:	dc002217 	ldw	r16,136(sp)
    bfb4:	b827883a 	mov	r19,r23
    bfb8:	882f883a 	mov	r23,r17
    bfbc:	dc402817 	ldw	r17,160(sp)
    bfc0:	d9402117 	ldw	r5,132(sp)
    bfc4:	1dc7883a 	add	r3,r3,r23
    bfc8:	10800044 	addi	r2,r2,1
    bfcc:	41400015 	stw	r5,0(r8)
    bfd0:	45c00115 	stw	r23,4(r8)
    bfd4:	d8c01c15 	stw	r3,112(sp)
    bfd8:	d8801b15 	stw	r2,108(sp)
    bfdc:	010001c4 	movi	r4,7
    bfe0:	2080b716 	blt	r4,r2,c2c0 <___svfiprintf_internal_r+0x10ec>
    bfe4:	42000204 	addi	r8,r8,8
    bfe8:	003f3c06 	br	bcdc <__alt_mem_Onchip_SRAM+0xf800bcdc>
    bfec:	d9402317 	ldw	r5,140(sp)
    bff0:	d9002717 	ldw	r4,156(sp)
    bff4:	d9801a04 	addi	r6,sp,104
    bff8:	000b0040 	call	b004 <__ssprint_r>
    bffc:	103fb51e 	bne	r2,zero,bed4 <__alt_mem_Onchip_SRAM+0xf800bed4>
    c000:	d8c01c17 	ldw	r3,112(sp)
    c004:	d811883a 	mov	r8,sp
    c008:	003f7106 	br	bdd0 <__alt_mem_Onchip_SRAM+0xf800bdd0>
    c00c:	d9402317 	ldw	r5,140(sp)
    c010:	d9002717 	ldw	r4,156(sp)
    c014:	d9801a04 	addi	r6,sp,104
    c018:	000b0040 	call	b004 <__ssprint_r>
    c01c:	103fa126 	beq	r2,zero,bea4 <__alt_mem_Onchip_SRAM+0xf800bea4>
    c020:	003fac06 	br	bed4 <__alt_mem_Onchip_SRAM+0xf800bed4>
    c024:	d9402317 	ldw	r5,140(sp)
    c028:	d9002717 	ldw	r4,156(sp)
    c02c:	d9801a04 	addi	r6,sp,104
    c030:	000b0040 	call	b004 <__ssprint_r>
    c034:	103fa71e 	bne	r2,zero,bed4 <__alt_mem_Onchip_SRAM+0xf800bed4>
    c038:	d811883a 	mov	r8,sp
    c03c:	003c9e06 	br	b2b8 <__alt_mem_Onchip_SRAM+0xf800b2b8>
    c040:	d9402317 	ldw	r5,140(sp)
    c044:	d9002717 	ldw	r4,156(sp)
    c048:	d9801a04 	addi	r6,sp,104
    c04c:	000b0040 	call	b004 <__ssprint_r>
    c050:	103fa01e 	bne	r2,zero,bed4 <__alt_mem_Onchip_SRAM+0xf800bed4>
    c054:	d8c01c17 	ldw	r3,112(sp)
    c058:	d8801b17 	ldw	r2,108(sp)
    c05c:	d811883a 	mov	r8,sp
    c060:	003f5206 	br	bdac <__alt_mem_Onchip_SRAM+0xf800bdac>
    c064:	d9402317 	ldw	r5,140(sp)
    c068:	d9002717 	ldw	r4,156(sp)
    c06c:	d9801a04 	addi	r6,sp,104
    c070:	000b0040 	call	b004 <__ssprint_r>
    c074:	103f971e 	bne	r2,zero,bed4 <__alt_mem_Onchip_SRAM+0xf800bed4>
    c078:	d8c01c17 	ldw	r3,112(sp)
    c07c:	d8801b17 	ldw	r2,108(sp)
    c080:	d811883a 	mov	r8,sp
    c084:	003f0506 	br	bc9c <__alt_mem_Onchip_SRAM+0xf800bc9c>
    c088:	d9402317 	ldw	r5,140(sp)
    c08c:	d9002717 	ldw	r4,156(sp)
    c090:	d9801a04 	addi	r6,sp,104
    c094:	000b0040 	call	b004 <__ssprint_r>
    c098:	103f8e1e 	bne	r2,zero,bed4 <__alt_mem_Onchip_SRAM+0xf800bed4>
    c09c:	d8c01c17 	ldw	r3,112(sp)
    c0a0:	d8801b17 	ldw	r2,108(sp)
    c0a4:	d811883a 	mov	r8,sp
    c0a8:	003f0906 	br	bcd0 <__alt_mem_Onchip_SRAM+0xf800bcd0>
    c0ac:	d9402017 	ldw	r5,128(sp)
    c0b0:	d8001d85 	stb	zero,118(sp)
    c0b4:	28007716 	blt	r5,zero,c294 <___svfiprintf_internal_r+0x10c0>
    c0b8:	00ffdfc4 	movi	r3,-129
    c0bc:	9504b03a 	or	r2,r18,r20
    c0c0:	80e0703a 	and	r16,r16,r3
    c0c4:	103d3926 	beq	r2,zero,b5ac <__alt_mem_Onchip_SRAM+0xf800b5ac>
    c0c8:	002b883a 	mov	r21,zero
    c0cc:	003d3c06 	br	b5c0 <__alt_mem_Onchip_SRAM+0xf800b5c0>
    c0d0:	d9402317 	ldw	r5,140(sp)
    c0d4:	d9002717 	ldw	r4,156(sp)
    c0d8:	d9801a04 	addi	r6,sp,104
    c0dc:	000b0040 	call	b004 <__ssprint_r>
    c0e0:	103f7c1e 	bne	r2,zero,bed4 <__alt_mem_Onchip_SRAM+0xf800bed4>
    c0e4:	d8c01c17 	ldw	r3,112(sp)
    c0e8:	d8801b17 	ldw	r2,108(sp)
    c0ec:	d811883a 	mov	r8,sp
    c0f0:	003edd06 	br	bc68 <__alt_mem_Onchip_SRAM+0xf800bc68>
    c0f4:	8080100c 	andi	r2,r16,64
    c0f8:	d8001d85 	stb	zero,118(sp)
    c0fc:	10008426 	beq	r2,zero,c310 <___svfiprintf_internal_r+0x113c>
    c100:	d9402417 	ldw	r5,144(sp)
    c104:	d8c02017 	ldw	r3,128(sp)
    c108:	0029883a 	mov	r20,zero
    c10c:	28800104 	addi	r2,r5,4
    c110:	2c80000b 	ldhu	r18,0(r5)
    c114:	183eab0e 	bge	r3,zero,bbc4 <__alt_mem_Onchip_SRAM+0xf800bbc4>
    c118:	d8802415 	stw	r2,144(sp)
    c11c:	002b883a 	mov	r21,zero
    c120:	9504b03a 	or	r2,r18,r20
    c124:	103e171e 	bne	r2,zero,b984 <__alt_mem_Onchip_SRAM+0xf800b984>
    c128:	00800044 	movi	r2,1
    c12c:	10803fcc 	andi	r2,r2,255
    c130:	00c00044 	movi	r3,1
    c134:	10c05c26 	beq	r2,r3,c2a8 <___svfiprintf_internal_r+0x10d4>
    c138:	00c00084 	movi	r3,2
    c13c:	10fd1e26 	beq	r2,r3,b5b8 <__alt_mem_Onchip_SRAM+0xf800b5b8>
    c140:	003ec406 	br	bc54 <__alt_mem_Onchip_SRAM+0xf800bc54>
    c144:	d9401e17 	ldw	r5,120(sp)
    c148:	2c69c83a 	sub	r20,r5,r17
    c14c:	003d4506 	br	b664 <__alt_mem_Onchip_SRAM+0xf800b664>
    c150:	d8802415 	stw	r2,144(sp)
    c154:	98c00007 	ldb	r3,0(r19)
    c158:	003c6a06 	br	b304 <__alt_mem_Onchip_SRAM+0xf800b304>
    c15c:	d9402317 	ldw	r5,140(sp)
    c160:	d9002717 	ldw	r4,156(sp)
    c164:	d9801a04 	addi	r6,sp,104
    c168:	000b0040 	call	b004 <__ssprint_r>
    c16c:	103f591e 	bne	r2,zero,bed4 <__alt_mem_Onchip_SRAM+0xf800bed4>
    c170:	d8c01c17 	ldw	r3,112(sp)
    c174:	003f4406 	br	be88 <__alt_mem_Onchip_SRAM+0xf800be88>
    c178:	01400074 	movhi	r5,1
    c17c:	295acc04 	addi	r5,r5,27440
    c180:	d9402915 	stw	r5,164(sp)
    c184:	003d0906 	br	b5ac <__alt_mem_Onchip_SRAM+0xf800b5ac>
    c188:	d8c02417 	ldw	r3,144(sp)
    c18c:	d9002617 	ldw	r4,152(sp)
    c190:	d9402417 	ldw	r5,144(sp)
    c194:	18800017 	ldw	r2,0(r3)
    c198:	2007d7fa 	srai	r3,r4,31
    c19c:	29400104 	addi	r5,r5,4
    c1a0:	d9402415 	stw	r5,144(sp)
    c1a4:	11000015 	stw	r4,0(r2)
    c1a8:	10c00115 	stw	r3,4(r2)
    c1ac:	003c2b06 	br	b25c <__alt_mem_Onchip_SRAM+0xf800b25c>
    c1b0:	d8c01d45 	stb	r3,117(sp)
    c1b4:	d8c02017 	ldw	r3,128(sp)
    c1b8:	00800c04 	movi	r2,48
    c1bc:	d8801d05 	stb	r2,116(sp)
    c1c0:	d8001d85 	stb	zero,118(sp)
    c1c4:	80800094 	ori	r2,r16,2
    c1c8:	1800ac16 	blt	r3,zero,c47c <___svfiprintf_internal_r+0x12a8>
    c1cc:	00bfdfc4 	movi	r2,-129
    c1d0:	80a0703a 	and	r16,r16,r2
    c1d4:	84000094 	ori	r16,r16,2
    c1d8:	002b883a 	mov	r21,zero
    c1dc:	003cf806 	br	b5c0 <__alt_mem_Onchip_SRAM+0xf800b5c0>
    c1e0:	98c00007 	ldb	r3,0(r19)
    c1e4:	003c4706 	br	b304 <__alt_mem_Onchip_SRAM+0xf800b304>
    c1e8:	d9402417 	ldw	r5,144(sp)
    c1ec:	2c800017 	ldw	r18,0(r5)
    c1f0:	29400104 	addi	r5,r5,4
    c1f4:	d9402415 	stw	r5,144(sp)
    c1f8:	9029d7fa 	srai	r20,r18,31
    c1fc:	a005883a 	mov	r2,r20
    c200:	003dd806 	br	b964 <__alt_mem_Onchip_SRAM+0xf800b964>
    c204:	d9402417 	ldw	r5,144(sp)
    c208:	0029883a 	mov	r20,zero
    c20c:	2c800017 	ldw	r18,0(r5)
    c210:	29400104 	addi	r5,r5,4
    c214:	d9402415 	stw	r5,144(sp)
    c218:	003cdb06 	br	b588 <__alt_mem_Onchip_SRAM+0xf800b588>
    c21c:	8080100c 	andi	r2,r16,64
    c220:	d8001d85 	stb	zero,118(sp)
    c224:	10003326 	beq	r2,zero,c2f4 <___svfiprintf_internal_r+0x1120>
    c228:	d9002417 	ldw	r4,144(sp)
    c22c:	d9402017 	ldw	r5,128(sp)
    c230:	0029883a 	mov	r20,zero
    c234:	20800104 	addi	r2,r4,4
    c238:	2480000b 	ldhu	r18,0(r4)
    c23c:	283e7e0e 	bge	r5,zero,bc38 <__alt_mem_Onchip_SRAM+0xf800bc38>
    c240:	9506b03a 	or	r3,r18,r20
    c244:	d8802415 	stw	r2,144(sp)
    c248:	183d271e 	bne	r3,zero,b6e8 <__alt_mem_Onchip_SRAM+0xf800b6e8>
    c24c:	002b883a 	mov	r21,zero
    c250:	0005883a 	mov	r2,zero
    c254:	003fb506 	br	c12c <__alt_mem_Onchip_SRAM+0xf800c12c>
    c258:	98c00043 	ldbu	r3,1(r19)
    c25c:	8c400814 	ori	r17,r17,32
    c260:	9cc00044 	addi	r19,r19,1
    c264:	18c03fcc 	andi	r3,r3,255
    c268:	18c0201c 	xori	r3,r3,128
    c26c:	18ffe004 	addi	r3,r3,-128
    c270:	003c2406 	br	b304 <__alt_mem_Onchip_SRAM+0xf800b304>
    c274:	d8c02415 	stw	r3,144(sp)
    c278:	002b883a 	mov	r21,zero
    c27c:	003fa806 	br	c120 <__alt_mem_Onchip_SRAM+0xf800c120>
    c280:	01000074 	movhi	r4,1
    c284:	211acc04 	addi	r4,r4,27440
    c288:	d9002915 	stw	r4,164(sp)
    c28c:	d8c02415 	stw	r3,144(sp)
    c290:	1021883a 	mov	r16,r2
    c294:	9504b03a 	or	r2,r18,r20
    c298:	103f8b1e 	bne	r2,zero,c0c8 <__alt_mem_Onchip_SRAM+0xf800c0c8>
    c29c:	002b883a 	mov	r21,zero
    c2a0:	00800084 	movi	r2,2
    c2a4:	003fa106 	br	c12c <__alt_mem_Onchip_SRAM+0xf800c12c>
    c2a8:	0025883a 	mov	r18,zero
    c2ac:	94800c04 	addi	r18,r18,48
    c2b0:	dc8019c5 	stb	r18,103(sp)
    c2b4:	dd002c17 	ldw	r20,176(sp)
    c2b8:	dc4019c4 	addi	r17,sp,103
    c2bc:	003ce906 	br	b664 <__alt_mem_Onchip_SRAM+0xf800b664>
    c2c0:	d9402317 	ldw	r5,140(sp)
    c2c4:	d9002717 	ldw	r4,156(sp)
    c2c8:	d9801a04 	addi	r6,sp,104
    c2cc:	000b0040 	call	b004 <__ssprint_r>
    c2d0:	103f001e 	bne	r2,zero,bed4 <__alt_mem_Onchip_SRAM+0xf800bed4>
    c2d4:	d8c01c17 	ldw	r3,112(sp)
    c2d8:	d8801b17 	ldw	r2,108(sp)
    c2dc:	d811883a 	mov	r8,sp
    c2e0:	003e7e06 	br	bcdc <__alt_mem_Onchip_SRAM+0xf800bcdc>
    c2e4:	01400074 	movhi	r5,1
    c2e8:	295b3504 	addi	r5,r5,27860
    c2ec:	d9402115 	stw	r5,132(sp)
    c2f0:	003ea406 	br	bd84 <__alt_mem_Onchip_SRAM+0xf800bd84>
    c2f4:	d8c02417 	ldw	r3,144(sp)
    c2f8:	d9002017 	ldw	r4,128(sp)
    c2fc:	0029883a 	mov	r20,zero
    c300:	18800104 	addi	r2,r3,4
    c304:	1c800017 	ldw	r18,0(r3)
    c308:	203e4b0e 	bge	r4,zero,bc38 <__alt_mem_Onchip_SRAM+0xf800bc38>
    c30c:	003fcc06 	br	c240 <__alt_mem_Onchip_SRAM+0xf800c240>
    c310:	d9002417 	ldw	r4,144(sp)
    c314:	d9402017 	ldw	r5,128(sp)
    c318:	0029883a 	mov	r20,zero
    c31c:	20800104 	addi	r2,r4,4
    c320:	24800017 	ldw	r18,0(r4)
    c324:	283e270e 	bge	r5,zero,bbc4 <__alt_mem_Onchip_SRAM+0xf800bbc4>
    c328:	003f7b06 	br	c118 <__alt_mem_Onchip_SRAM+0xf800c118>
    c32c:	8400100c 	andi	r16,r16,64
    c330:	80003326 	beq	r16,zero,c400 <___svfiprintf_internal_r+0x122c>
    c334:	d9402417 	ldw	r5,144(sp)
    c338:	d8c02617 	ldw	r3,152(sp)
    c33c:	28800017 	ldw	r2,0(r5)
    c340:	29400104 	addi	r5,r5,4
    c344:	d9402415 	stw	r5,144(sp)
    c348:	10c0000d 	sth	r3,0(r2)
    c34c:	003bc306 	br	b25c <__alt_mem_Onchip_SRAM+0xf800b25c>
    c350:	d9002417 	ldw	r4,144(sp)
    c354:	0029883a 	mov	r20,zero
    c358:	24800017 	ldw	r18,0(r4)
    c35c:	21000104 	addi	r4,r4,4
    c360:	d9002415 	stw	r4,144(sp)
    c364:	003c8806 	br	b588 <__alt_mem_Onchip_SRAM+0xf800b588>
    c368:	d8c02417 	ldw	r3,144(sp)
    c36c:	1c800017 	ldw	r18,0(r3)
    c370:	18c00104 	addi	r3,r3,4
    c374:	d8c02415 	stw	r3,144(sp)
    c378:	9029d7fa 	srai	r20,r18,31
    c37c:	a005883a 	mov	r2,r20
    c380:	003d7806 	br	b964 <__alt_mem_Onchip_SRAM+0xf800b964>
    c384:	8809883a 	mov	r4,r17
    c388:	da002d15 	stw	r8,180(sp)
    c38c:	00013b80 	call	13b8 <strlen>
    c390:	1029883a 	mov	r20,r2
    c394:	dd401d83 	ldbu	r21,118(sp)
    c398:	ddc02415 	stw	r23,144(sp)
    c39c:	d8002015 	stw	zero,128(sp)
    c3a0:	da002d17 	ldw	r8,180(sp)
    c3a4:	003caf06 	br	b664 <__alt_mem_Onchip_SRAM+0xf800b664>
    c3a8:	013fffc4 	movi	r4,-1
    c3ac:	003df206 	br	bb78 <__alt_mem_Onchip_SRAM+0xf800bb78>
    c3b0:	dd002017 	ldw	r20,128(sp)
    c3b4:	00800184 	movi	r2,6
    c3b8:	1500012e 	bgeu	r2,r20,c3c0 <___svfiprintf_internal_r+0x11ec>
    c3bc:	1029883a 	mov	r20,r2
    c3c0:	a025883a 	mov	r18,r20
    c3c4:	a0004116 	blt	r20,zero,c4cc <___svfiprintf_internal_r+0x12f8>
    c3c8:	04400074 	movhi	r17,1
    c3cc:	ddc02415 	stw	r23,144(sp)
    c3d0:	8c5ad104 	addi	r17,r17,27460
    c3d4:	003ce806 	br	b778 <__alt_mem_Onchip_SRAM+0xf800b778>
    c3d8:	04001004 	movi	r16,64
    c3dc:	800b883a 	mov	r5,r16
    c3e0:	00088e40 	call	88e4 <_malloc_r>
    c3e4:	d8c02317 	ldw	r3,140(sp)
    c3e8:	18800015 	stw	r2,0(r3)
    c3ec:	18800415 	stw	r2,16(r3)
    c3f0:	10004d26 	beq	r2,zero,c528 <___svfiprintf_internal_r+0x1354>
    c3f4:	d9402317 	ldw	r5,140(sp)
    c3f8:	2c000515 	stw	r16,20(r5)
    c3fc:	003b8906 	br	b224 <__alt_mem_Onchip_SRAM+0xf800b224>
    c400:	d9002417 	ldw	r4,144(sp)
    c404:	d9402617 	ldw	r5,152(sp)
    c408:	20800017 	ldw	r2,0(r4)
    c40c:	21000104 	addi	r4,r4,4
    c410:	d9002415 	stw	r4,144(sp)
    c414:	11400015 	stw	r5,0(r2)
    c418:	003b9006 	br	b25c <__alt_mem_Onchip_SRAM+0xf800b25c>
    c41c:	8080004c 	andi	r2,r16,1
    c420:	002b883a 	mov	r21,zero
    c424:	10000526 	beq	r2,zero,c43c <___svfiprintf_internal_r+0x1268>
    c428:	00800c04 	movi	r2,48
    c42c:	d88019c5 	stb	r2,103(sp)
    c430:	dd002c17 	ldw	r20,176(sp)
    c434:	dc4019c4 	addi	r17,sp,103
    c438:	003c8a06 	br	b664 <__alt_mem_Onchip_SRAM+0xf800b664>
    c43c:	0029883a 	mov	r20,zero
    c440:	dc401a04 	addi	r17,sp,104
    c444:	003c8706 	br	b664 <__alt_mem_Onchip_SRAM+0xf800b664>
    c448:	01400074 	movhi	r5,1
    c44c:	295b3904 	addi	r5,r5,27876
    c450:	d9402815 	stw	r5,160(sp)
    c454:	003cff06 	br	b854 <__alt_mem_Onchip_SRAM+0xf800b854>
    c458:	00bfffc4 	movi	r2,-1
    c45c:	003ea206 	br	bee8 <__alt_mem_Onchip_SRAM+0xf800bee8>
    c460:	00800044 	movi	r2,1
    c464:	10803fcc 	andi	r2,r2,255
    c468:	00c00044 	movi	r3,1
    c46c:	10fd4526 	beq	r2,r3,b984 <__alt_mem_Onchip_SRAM+0xf800b984>
    c470:	00c00084 	movi	r3,2
    c474:	10fc5226 	beq	r2,r3,b5c0 <__alt_mem_Onchip_SRAM+0xf800b5c0>
    c478:	003c9c06 	br	b6ec <__alt_mem_Onchip_SRAM+0xf800b6ec>
    c47c:	1021883a 	mov	r16,r2
    c480:	002b883a 	mov	r21,zero
    c484:	00800084 	movi	r2,2
    c488:	003ff606 	br	c464 <__alt_mem_Onchip_SRAM+0xf800c464>
    c48c:	01000074 	movhi	r4,1
    c490:	211b3904 	addi	r4,r4,27876
    c494:	d9002815 	stw	r4,160(sp)
    c498:	003e7206 	br	be64 <__alt_mem_Onchip_SRAM+0xf800be64>
    c49c:	01400074 	movhi	r5,1
    c4a0:	295b3504 	addi	r5,r5,27860
    c4a4:	d9402115 	stw	r5,132(sp)
    c4a8:	003ec506 	br	bfc0 <__alt_mem_Onchip_SRAM+0xf800bfc0>
    c4ac:	e027883a 	mov	r19,fp
    c4b0:	d8002015 	stw	zero,128(sp)
    c4b4:	003b9406 	br	b308 <__alt_mem_Onchip_SRAM+0xf800b308>
    c4b8:	dd002017 	ldw	r20,128(sp)
    c4bc:	dd401d83 	ldbu	r21,118(sp)
    c4c0:	ddc02415 	stw	r23,144(sp)
    c4c4:	d8002015 	stw	zero,128(sp)
    c4c8:	003c6606 	br	b664 <__alt_mem_Onchip_SRAM+0xf800b664>
    c4cc:	0025883a 	mov	r18,zero
    c4d0:	003fbd06 	br	c3c8 <__alt_mem_Onchip_SRAM+0xf800c3c8>
    c4d4:	d9402417 	ldw	r5,144(sp)
    c4d8:	d8c02417 	ldw	r3,144(sp)
    c4dc:	29400017 	ldw	r5,0(r5)
    c4e0:	19000104 	addi	r4,r3,4
    c4e4:	d9002415 	stw	r4,144(sp)
    c4e8:	d9402015 	stw	r5,128(sp)
    c4ec:	98c00043 	ldbu	r3,1(r19)
    c4f0:	e027883a 	mov	r19,fp
    c4f4:	283f5b0e 	bge	r5,zero,c264 <__alt_mem_Onchip_SRAM+0xf800c264>
    c4f8:	18c03fcc 	andi	r3,r3,255
    c4fc:	013fffc4 	movi	r4,-1
    c500:	18c0201c 	xori	r3,r3,128
    c504:	d9002015 	stw	r4,128(sp)
    c508:	18ffe004 	addi	r3,r3,-128
    c50c:	003b7d06 	br	b304 <__alt_mem_Onchip_SRAM+0xf800b304>
    c510:	dd401d85 	stb	r21,118(sp)
    c514:	003cf306 	br	b8e4 <__alt_mem_Onchip_SRAM+0xf800b8e4>
    c518:	dd401d85 	stb	r21,118(sp)
    c51c:	003d4e06 	br	ba58 <__alt_mem_Onchip_SRAM+0xf800ba58>
    c520:	dd401d85 	stb	r21,118(sp)
    c524:	003c0e06 	br	b560 <__alt_mem_Onchip_SRAM+0xf800b560>
    c528:	d9002717 	ldw	r4,156(sp)
    c52c:	00800304 	movi	r2,12
    c530:	20800015 	stw	r2,0(r4)
    c534:	00bfffc4 	movi	r2,-1
    c538:	003e6b06 	br	bee8 <__alt_mem_Onchip_SRAM+0xf800bee8>
    c53c:	dd401d85 	stb	r21,118(sp)
    c540:	003d0006 	br	b944 <__alt_mem_Onchip_SRAM+0xf800b944>
    c544:	dd401d85 	stb	r21,118(sp)
    c548:	003d7106 	br	bb10 <__alt_mem_Onchip_SRAM+0xf800bb10>
    c54c:	dd401d85 	stb	r21,118(sp)
    c550:	003c5706 	br	b6b0 <__alt_mem_Onchip_SRAM+0xf800b6b0>
    c554:	dd401d85 	stb	r21,118(sp)
    c558:	003c2e06 	br	b614 <__alt_mem_Onchip_SRAM+0xf800b614>
    c55c:	dd401d85 	stb	r21,118(sp)
    c560:	003d8c06 	br	bb94 <__alt_mem_Onchip_SRAM+0xf800bb94>
    c564:	dd401d85 	stb	r21,118(sp)
    c568:	003da706 	br	bc08 <__alt_mem_Onchip_SRAM+0xf800bc08>
    c56c:	dd401d85 	stb	r21,118(sp)
    c570:	003cc806 	br	b894 <__alt_mem_Onchip_SRAM+0xf800b894>

0000c574 <__sprint_r.part.0>:
    c574:	28801917 	ldw	r2,100(r5)
    c578:	defff604 	addi	sp,sp,-40
    c57c:	dd400515 	stw	r21,20(sp)
    c580:	dfc00915 	stw	ra,36(sp)
    c584:	df000815 	stw	fp,32(sp)
    c588:	ddc00715 	stw	r23,28(sp)
    c58c:	dd800615 	stw	r22,24(sp)
    c590:	dd000415 	stw	r20,16(sp)
    c594:	dcc00315 	stw	r19,12(sp)
    c598:	dc800215 	stw	r18,8(sp)
    c59c:	dc400115 	stw	r17,4(sp)
    c5a0:	dc000015 	stw	r16,0(sp)
    c5a4:	1088000c 	andi	r2,r2,8192
    c5a8:	302b883a 	mov	r21,r6
    c5ac:	10002e26 	beq	r2,zero,c668 <__sprint_r.part.0+0xf4>
    c5b0:	30800217 	ldw	r2,8(r6)
    c5b4:	35800017 	ldw	r22,0(r6)
    c5b8:	10002926 	beq	r2,zero,c660 <__sprint_r.part.0+0xec>
    c5bc:	2827883a 	mov	r19,r5
    c5c0:	2029883a 	mov	r20,r4
    c5c4:	b5c00104 	addi	r23,r22,4
    c5c8:	04bfffc4 	movi	r18,-1
    c5cc:	bc400017 	ldw	r17,0(r23)
    c5d0:	b4000017 	ldw	r16,0(r22)
    c5d4:	0039883a 	mov	fp,zero
    c5d8:	8822d0ba 	srli	r17,r17,2
    c5dc:	8800031e 	bne	r17,zero,c5ec <__sprint_r.part.0+0x78>
    c5e0:	00001806 	br	c644 <__sprint_r.part.0+0xd0>
    c5e4:	84000104 	addi	r16,r16,4
    c5e8:	8f001526 	beq	r17,fp,c640 <__sprint_r.part.0+0xcc>
    c5ec:	81400017 	ldw	r5,0(r16)
    c5f0:	980d883a 	mov	r6,r19
    c5f4:	a009883a 	mov	r4,r20
    c5f8:	000e1bc0 	call	e1bc <_fputwc_r>
    c5fc:	e7000044 	addi	fp,fp,1
    c600:	14bff81e 	bne	r2,r18,c5e4 <__alt_mem_Onchip_SRAM+0xf800c5e4>
    c604:	9005883a 	mov	r2,r18
    c608:	a8000215 	stw	zero,8(r21)
    c60c:	a8000115 	stw	zero,4(r21)
    c610:	dfc00917 	ldw	ra,36(sp)
    c614:	df000817 	ldw	fp,32(sp)
    c618:	ddc00717 	ldw	r23,28(sp)
    c61c:	dd800617 	ldw	r22,24(sp)
    c620:	dd400517 	ldw	r21,20(sp)
    c624:	dd000417 	ldw	r20,16(sp)
    c628:	dcc00317 	ldw	r19,12(sp)
    c62c:	dc800217 	ldw	r18,8(sp)
    c630:	dc400117 	ldw	r17,4(sp)
    c634:	dc000017 	ldw	r16,0(sp)
    c638:	dec00a04 	addi	sp,sp,40
    c63c:	f800283a 	ret
    c640:	a8800217 	ldw	r2,8(r21)
    c644:	8c63883a 	add	r17,r17,r17
    c648:	8c63883a 	add	r17,r17,r17
    c64c:	1445c83a 	sub	r2,r2,r17
    c650:	a8800215 	stw	r2,8(r21)
    c654:	b5800204 	addi	r22,r22,8
    c658:	bdc00204 	addi	r23,r23,8
    c65c:	103fdb1e 	bne	r2,zero,c5cc <__alt_mem_Onchip_SRAM+0xf800c5cc>
    c660:	0005883a 	mov	r2,zero
    c664:	003fe806 	br	c608 <__alt_mem_Onchip_SRAM+0xf800c608>
    c668:	0007fa00 	call	7fa0 <__sfvwrite_r>
    c66c:	003fe606 	br	c608 <__alt_mem_Onchip_SRAM+0xf800c608>

0000c670 <__sprint_r>:
    c670:	30c00217 	ldw	r3,8(r6)
    c674:	18000126 	beq	r3,zero,c67c <__sprint_r+0xc>
    c678:	000c5741 	jmpi	c574 <__sprint_r.part.0>
    c67c:	30000115 	stw	zero,4(r6)
    c680:	0005883a 	mov	r2,zero
    c684:	f800283a 	ret

0000c688 <___vfiprintf_internal_r>:
    c688:	deffca04 	addi	sp,sp,-216
    c68c:	dd403115 	stw	r21,196(sp)
    c690:	dfc03515 	stw	ra,212(sp)
    c694:	df003415 	stw	fp,208(sp)
    c698:	ddc03315 	stw	r23,204(sp)
    c69c:	dd803215 	stw	r22,200(sp)
    c6a0:	dd003015 	stw	r20,192(sp)
    c6a4:	dcc02f15 	stw	r19,188(sp)
    c6a8:	dc802e15 	stw	r18,184(sp)
    c6ac:	dc402d15 	stw	r17,180(sp)
    c6b0:	dc002c15 	stw	r16,176(sp)
    c6b4:	d9002115 	stw	r4,132(sp)
    c6b8:	d9402015 	stw	r5,128(sp)
    c6bc:	d9c02215 	stw	r7,136(sp)
    c6c0:	302b883a 	mov	r21,r6
    c6c4:	20000226 	beq	r4,zero,c6d0 <___vfiprintf_internal_r+0x48>
    c6c8:	20800e17 	ldw	r2,56(r4)
    c6cc:	1000cf26 	beq	r2,zero,ca0c <___vfiprintf_internal_r+0x384>
    c6d0:	d8c02017 	ldw	r3,128(sp)
    c6d4:	1880030b 	ldhu	r2,12(r3)
    c6d8:	10c8000c 	andi	r3,r2,8192
    c6dc:	1800071e 	bne	r3,zero,c6fc <___vfiprintf_internal_r+0x74>
    c6e0:	d9402017 	ldw	r5,128(sp)
    c6e4:	00f7ffc4 	movi	r3,-8193
    c6e8:	10880014 	ori	r2,r2,8192
    c6ec:	29001917 	ldw	r4,100(r5)
    c6f0:	2880030d 	sth	r2,12(r5)
    c6f4:	20c6703a 	and	r3,r4,r3
    c6f8:	28c01915 	stw	r3,100(r5)
    c6fc:	10c0020c 	andi	r3,r2,8
    c700:	1800a526 	beq	r3,zero,c998 <___vfiprintf_internal_r+0x310>
    c704:	d9002017 	ldw	r4,128(sp)
    c708:	20c00417 	ldw	r3,16(r4)
    c70c:	1800a226 	beq	r3,zero,c998 <___vfiprintf_internal_r+0x310>
    c710:	1080068c 	andi	r2,r2,26
    c714:	00c00284 	movi	r3,10
    c718:	10c0a826 	beq	r2,r3,c9bc <___vfiprintf_internal_r+0x334>
    c71c:	d9001a04 	addi	r4,sp,104
    c720:	d94019c4 	addi	r5,sp,103
    c724:	04800074 	movhi	r18,1
    c728:	2145c83a 	sub	r2,r4,r5
    c72c:	949b3d04 	addi	r18,r18,27892
    c730:	d9001e15 	stw	r4,120(sp)
    c734:	d9401f15 	stw	r5,124(sp)
    c738:	dec01a15 	stw	sp,104(sp)
    c73c:	d8001c15 	stw	zero,112(sp)
    c740:	d8001b15 	stw	zero,108(sp)
    c744:	d811883a 	mov	r8,sp
    c748:	d8002615 	stw	zero,152(sp)
    c74c:	d8002415 	stw	zero,144(sp)
    c750:	d8802815 	stw	r2,160(sp)
    c754:	a82d883a 	mov	r22,r21
    c758:	b0800007 	ldb	r2,0(r22)
    c75c:	10040d26 	beq	r2,zero,d794 <___vfiprintf_internal_r+0x110c>
    c760:	00c00944 	movi	r3,37
    c764:	b029883a 	mov	r20,r22
    c768:	10c0021e 	bne	r2,r3,c774 <___vfiprintf_internal_r+0xec>
    c76c:	00001606 	br	c7c8 <___vfiprintf_internal_r+0x140>
    c770:	10c00326 	beq	r2,r3,c780 <___vfiprintf_internal_r+0xf8>
    c774:	a5000044 	addi	r20,r20,1
    c778:	a0800007 	ldb	r2,0(r20)
    c77c:	103ffc1e 	bne	r2,zero,c770 <__alt_mem_Onchip_SRAM+0xf800c770>
    c780:	a5a1c83a 	sub	r16,r20,r22
    c784:	80001026 	beq	r16,zero,c7c8 <___vfiprintf_internal_r+0x140>
    c788:	d8c01c17 	ldw	r3,112(sp)
    c78c:	d8801b17 	ldw	r2,108(sp)
    c790:	45800015 	stw	r22,0(r8)
    c794:	80c7883a 	add	r3,r16,r3
    c798:	10800044 	addi	r2,r2,1
    c79c:	44000115 	stw	r16,4(r8)
    c7a0:	d8c01c15 	stw	r3,112(sp)
    c7a4:	d8801b15 	stw	r2,108(sp)
    c7a8:	010001c4 	movi	r4,7
    c7ac:	2080750e 	bge	r4,r2,c984 <___vfiprintf_internal_r+0x2fc>
    c7b0:	1803951e 	bne	r3,zero,d608 <___vfiprintf_internal_r+0xf80>
    c7b4:	d8c02417 	ldw	r3,144(sp)
    c7b8:	d8001b15 	stw	zero,108(sp)
    c7bc:	d811883a 	mov	r8,sp
    c7c0:	1c07883a 	add	r3,r3,r16
    c7c4:	d8c02415 	stw	r3,144(sp)
    c7c8:	a0800007 	ldb	r2,0(r20)
    c7cc:	1002e026 	beq	r2,zero,d350 <___vfiprintf_internal_r+0xcc8>
    c7d0:	a5800044 	addi	r22,r20,1
    c7d4:	a0c00047 	ldb	r3,1(r20)
    c7d8:	d8001d85 	stb	zero,118(sp)
    c7dc:	0027883a 	mov	r19,zero
    c7e0:	d8002305 	stb	zero,140(sp)
    c7e4:	043fffc4 	movi	r16,-1
    c7e8:	d8002515 	stw	zero,148(sp)
    c7ec:	0023883a 	mov	r17,zero
    c7f0:	05001604 	movi	r20,88
    c7f4:	05400244 	movi	r21,9
    c7f8:	402f883a 	mov	r23,r8
    c7fc:	b5800044 	addi	r22,r22,1
    c800:	18bff804 	addi	r2,r3,-32
    c804:	a0827736 	bltu	r20,r2,d1e4 <___vfiprintf_internal_r+0xb5c>
    c808:	100490ba 	slli	r2,r2,2
    c80c:	01000074 	movhi	r4,1
    c810:	21320804 	addi	r4,r4,-14304
    c814:	1105883a 	add	r2,r2,r4
    c818:	10800017 	ldw	r2,0(r2)
    c81c:	1000683a 	jmp	r2
    c820:	0000cee4 	muli	zero,zero,827
    c824:	0000d1e4 	muli	zero,zero,839
    c828:	0000d1e4 	muli	zero,zero,839
    c82c:	0000cf00 	call	cf0 <main+0xa0>
    c830:	0000d1e4 	muli	zero,zero,839
    c834:	0000d1e4 	muli	zero,zero,839
    c838:	0000d1e4 	muli	zero,zero,839
    c83c:	0000d1e4 	muli	zero,zero,839
    c840:	0000d1e4 	muli	zero,zero,839
    c844:	0000d1e4 	muli	zero,zero,839
    c848:	0000d108 	cmpgei	zero,zero,836
    c84c:	0000d12c 	andhi	zero,zero,836
    c850:	0000d1e4 	muli	zero,zero,839
    c854:	0000ca24 	muli	zero,zero,808
    c858:	0000d140 	call	d14 <main+0xc4>
    c85c:	0000d1e4 	muli	zero,zero,839
    c860:	0000cf0c 	andi	zero,zero,828
    c864:	0000cf18 	cmpnei	zero,zero,828
    c868:	0000cf18 	cmpnei	zero,zero,828
    c86c:	0000cf18 	cmpnei	zero,zero,828
    c870:	0000cf18 	cmpnei	zero,zero,828
    c874:	0000cf18 	cmpnei	zero,zero,828
    c878:	0000cf18 	cmpnei	zero,zero,828
    c87c:	0000cf18 	cmpnei	zero,zero,828
    c880:	0000cf18 	cmpnei	zero,zero,828
    c884:	0000cf18 	cmpnei	zero,zero,828
    c888:	0000d1e4 	muli	zero,zero,839
    c88c:	0000d1e4 	muli	zero,zero,839
    c890:	0000d1e4 	muli	zero,zero,839
    c894:	0000d1e4 	muli	zero,zero,839
    c898:	0000d1e4 	muli	zero,zero,839
    c89c:	0000d1e4 	muli	zero,zero,839
    c8a0:	0000d1e4 	muli	zero,zero,839
    c8a4:	0000d1e4 	muli	zero,zero,839
    c8a8:	0000d1e4 	muli	zero,zero,839
    c8ac:	0000d1e4 	muli	zero,zero,839
    c8b0:	0000cf58 	cmpnei	zero,zero,829
    c8b4:	0000d1e4 	muli	zero,zero,839
    c8b8:	0000d1e4 	muli	zero,zero,839
    c8bc:	0000d1e4 	muli	zero,zero,839
    c8c0:	0000d1e4 	muli	zero,zero,839
    c8c4:	0000d1e4 	muli	zero,zero,839
    c8c8:	0000d1e4 	muli	zero,zero,839
    c8cc:	0000d1e4 	muli	zero,zero,839
    c8d0:	0000d1e4 	muli	zero,zero,839
    c8d4:	0000d1e4 	muli	zero,zero,839
    c8d8:	0000d1e4 	muli	zero,zero,839
    c8dc:	0000cf94 	movui	zero,830
    c8e0:	0000d1e4 	muli	zero,zero,839
    c8e4:	0000d1e4 	muli	zero,zero,839
    c8e8:	0000d1e4 	muli	zero,zero,839
    c8ec:	0000d1e4 	muli	zero,zero,839
    c8f0:	0000d1e4 	muli	zero,zero,839
    c8f4:	0000cff0 	cmpltui	zero,zero,831
    c8f8:	0000d1e4 	muli	zero,zero,839
    c8fc:	0000d1e4 	muli	zero,zero,839
    c900:	0000d064 	muli	zero,zero,833
    c904:	0000d1e4 	muli	zero,zero,839
    c908:	0000d1e4 	muli	zero,zero,839
    c90c:	0000d1e4 	muli	zero,zero,839
    c910:	0000d1e4 	muli	zero,zero,839
    c914:	0000d1e4 	muli	zero,zero,839
    c918:	0000d1e4 	muli	zero,zero,839
    c91c:	0000d1e4 	muli	zero,zero,839
    c920:	0000d1e4 	muli	zero,zero,839
    c924:	0000d1e4 	muli	zero,zero,839
    c928:	0000d1e4 	muli	zero,zero,839
    c92c:	0000ce0c 	andi	zero,zero,824
    c930:	0000ce3c 	xorhi	zero,zero,824
    c934:	0000d1e4 	muli	zero,zero,839
    c938:	0000d1e4 	muli	zero,zero,839
    c93c:	0000d1e4 	muli	zero,zero,839
    c940:	0000d18c 	andi	zero,zero,838
    c944:	0000ce3c 	xorhi	zero,zero,824
    c948:	0000d1e4 	muli	zero,zero,839
    c94c:	0000d1e4 	muli	zero,zero,839
    c950:	0000cce4 	muli	zero,zero,819
    c954:	0000d1e4 	muli	zero,zero,839
    c958:	0000ccf8 	rdprs	zero,zero,819
    c95c:	0000cd30 	cmpltui	zero,zero,820
    c960:	0000ca30 	cmpltui	zero,zero,808
    c964:	0000ccd8 	cmpnei	zero,zero,819
    c968:	0000d1e4 	muli	zero,zero,839
    c96c:	0000d0a4 	muli	zero,zero,834
    c970:	0000d1e4 	muli	zero,zero,839
    c974:	0000d0f0 	cmpltui	zero,zero,835
    c978:	0000d1e4 	muli	zero,zero,839
    c97c:	0000d1e4 	muli	zero,zero,839
    c980:	0000cdb4 	movhi	zero,822
    c984:	42000204 	addi	r8,r8,8
    c988:	d8c02417 	ldw	r3,144(sp)
    c98c:	1c07883a 	add	r3,r3,r16
    c990:	d8c02415 	stw	r3,144(sp)
    c994:	003f8c06 	br	c7c8 <__alt_mem_Onchip_SRAM+0xf800c7c8>
    c998:	d9402017 	ldw	r5,128(sp)
    c99c:	d9002117 	ldw	r4,132(sp)
    c9a0:	0005b100 	call	5b10 <__swsetup_r>
    c9a4:	1003c11e 	bne	r2,zero,d8ac <___vfiprintf_internal_r+0x1224>
    c9a8:	d9402017 	ldw	r5,128(sp)
    c9ac:	00c00284 	movi	r3,10
    c9b0:	2880030b 	ldhu	r2,12(r5)
    c9b4:	1080068c 	andi	r2,r2,26
    c9b8:	10ff581e 	bne	r2,r3,c71c <__alt_mem_Onchip_SRAM+0xf800c71c>
    c9bc:	d8c02017 	ldw	r3,128(sp)
    c9c0:	1880038f 	ldh	r2,14(r3)
    c9c4:	103f5516 	blt	r2,zero,c71c <__alt_mem_Onchip_SRAM+0xf800c71c>
    c9c8:	d9c02217 	ldw	r7,136(sp)
    c9cc:	d9002117 	ldw	r4,132(sp)
    c9d0:	a80d883a 	mov	r6,r21
    c9d4:	180b883a 	mov	r5,r3
    c9d8:	000dbb00 	call	dbb0 <__sbprintf>
    c9dc:	dfc03517 	ldw	ra,212(sp)
    c9e0:	df003417 	ldw	fp,208(sp)
    c9e4:	ddc03317 	ldw	r23,204(sp)
    c9e8:	dd803217 	ldw	r22,200(sp)
    c9ec:	dd403117 	ldw	r21,196(sp)
    c9f0:	dd003017 	ldw	r20,192(sp)
    c9f4:	dcc02f17 	ldw	r19,188(sp)
    c9f8:	dc802e17 	ldw	r18,184(sp)
    c9fc:	dc402d17 	ldw	r17,180(sp)
    ca00:	dc002c17 	ldw	r16,176(sp)
    ca04:	dec03604 	addi	sp,sp,216
    ca08:	f800283a 	ret
    ca0c:	0007b1c0 	call	7b1c <__sinit>
    ca10:	003f2f06 	br	c6d0 <__alt_mem_Onchip_SRAM+0xf800c6d0>
    ca14:	d8c02517 	ldw	r3,148(sp)
    ca18:	d8802215 	stw	r2,136(sp)
    ca1c:	00c7c83a 	sub	r3,zero,r3
    ca20:	d8c02515 	stw	r3,148(sp)
    ca24:	8c400114 	ori	r17,r17,4
    ca28:	b0c00007 	ldb	r3,0(r22)
    ca2c:	003f7306 	br	c7fc <__alt_mem_Onchip_SRAM+0xf800c7fc>
    ca30:	00800c04 	movi	r2,48
    ca34:	d9402217 	ldw	r5,136(sp)
    ca38:	d8801d05 	stb	r2,116(sp)
    ca3c:	00801e04 	movi	r2,120
    ca40:	d8801d45 	stb	r2,117(sp)
    ca44:	d8001d85 	stb	zero,118(sp)
    ca48:	b811883a 	mov	r8,r23
    ca4c:	28c00104 	addi	r3,r5,4
    ca50:	2cc00017 	ldw	r19,0(r5)
    ca54:	0029883a 	mov	r20,zero
    ca58:	88800094 	ori	r2,r17,2
    ca5c:	80032516 	blt	r16,zero,d6f4 <___vfiprintf_internal_r+0x106c>
    ca60:	00bfdfc4 	movi	r2,-129
    ca64:	88a2703a 	and	r17,r17,r2
    ca68:	d8c02215 	stw	r3,136(sp)
    ca6c:	8c400094 	ori	r17,r17,2
    ca70:	98032a1e 	bne	r19,zero,d71c <___vfiprintf_internal_r+0x1094>
    ca74:	00800074 	movhi	r2,1
    ca78:	109acc04 	addi	r2,r2,27440
    ca7c:	d8802615 	stw	r2,152(sp)
    ca80:	002b883a 	mov	r21,zero
    ca84:	8001741e 	bne	r16,zero,d058 <___vfiprintf_internal_r+0x9d0>
    ca88:	0021883a 	mov	r16,zero
    ca8c:	0029883a 	mov	r20,zero
    ca90:	ddc01a04 	addi	r23,sp,104
    ca94:	8027883a 	mov	r19,r16
    ca98:	8500010e 	bge	r16,r20,caa0 <___vfiprintf_internal_r+0x418>
    ca9c:	a027883a 	mov	r19,r20
    caa0:	ad403fcc 	andi	r21,r21,255
    caa4:	ad40201c 	xori	r21,r21,128
    caa8:	ad7fe004 	addi	r21,r21,-128
    caac:	a8000126 	beq	r21,zero,cab4 <___vfiprintf_internal_r+0x42c>
    cab0:	9cc00044 	addi	r19,r19,1
    cab4:	89c0008c 	andi	r7,r17,2
    cab8:	38000126 	beq	r7,zero,cac0 <___vfiprintf_internal_r+0x438>
    cabc:	9cc00084 	addi	r19,r19,2
    cac0:	88c0210c 	andi	r3,r17,132
    cac4:	1801dd1e 	bne	r3,zero,d23c <___vfiprintf_internal_r+0xbb4>
    cac8:	d9402517 	ldw	r5,148(sp)
    cacc:	2cebc83a 	sub	r21,r5,r19
    cad0:	0541da0e 	bge	zero,r21,d23c <___vfiprintf_internal_r+0xbb4>
    cad4:	07000404 	movi	fp,16
    cad8:	d8801c17 	ldw	r2,112(sp)
    cadc:	e543be0e 	bge	fp,r21,d9d8 <___vfiprintf_internal_r+0x1350>
    cae0:	01400074 	movhi	r5,1
    cae4:	295b4104 	addi	r5,r5,27908
    cae8:	dc002715 	stw	r16,156(sp)
    caec:	d9801b17 	ldw	r6,108(sp)
    caf0:	a821883a 	mov	r16,r21
    caf4:	d9402315 	stw	r5,140(sp)
    caf8:	028001c4 	movi	r10,7
    cafc:	d9c02915 	stw	r7,164(sp)
    cb00:	182b883a 	mov	r21,r3
    cb04:	00000506 	br	cb1c <___vfiprintf_internal_r+0x494>
    cb08:	31000084 	addi	r4,r6,2
    cb0c:	42000204 	addi	r8,r8,8
    cb10:	180d883a 	mov	r6,r3
    cb14:	843ffc04 	addi	r16,r16,-16
    cb18:	e4000f0e 	bge	fp,r16,cb58 <___vfiprintf_internal_r+0x4d0>
    cb1c:	01000074 	movhi	r4,1
    cb20:	10800404 	addi	r2,r2,16
    cb24:	30c00044 	addi	r3,r6,1
    cb28:	211b4104 	addi	r4,r4,27908
    cb2c:	41000015 	stw	r4,0(r8)
    cb30:	47000115 	stw	fp,4(r8)
    cb34:	d8801c15 	stw	r2,112(sp)
    cb38:	d8c01b15 	stw	r3,108(sp)
    cb3c:	50fff20e 	bge	r10,r3,cb08 <__alt_mem_Onchip_SRAM+0xf800cb08>
    cb40:	1001b21e 	bne	r2,zero,d20c <___vfiprintf_internal_r+0xb84>
    cb44:	843ffc04 	addi	r16,r16,-16
    cb48:	000d883a 	mov	r6,zero
    cb4c:	01000044 	movi	r4,1
    cb50:	d811883a 	mov	r8,sp
    cb54:	e43ff116 	blt	fp,r16,cb1c <__alt_mem_Onchip_SRAM+0xf800cb1c>
    cb58:	a807883a 	mov	r3,r21
    cb5c:	d9c02917 	ldw	r7,164(sp)
    cb60:	802b883a 	mov	r21,r16
    cb64:	dc002717 	ldw	r16,156(sp)
    cb68:	d9402317 	ldw	r5,140(sp)
    cb6c:	a885883a 	add	r2,r21,r2
    cb70:	45400115 	stw	r21,4(r8)
    cb74:	41400015 	stw	r5,0(r8)
    cb78:	d8801c15 	stw	r2,112(sp)
    cb7c:	d9001b15 	stw	r4,108(sp)
    cb80:	014001c4 	movi	r5,7
    cb84:	29026216 	blt	r5,r4,d510 <___vfiprintf_internal_r+0xe88>
    cb88:	d9801d87 	ldb	r6,118(sp)
    cb8c:	42000204 	addi	r8,r8,8
    cb90:	21400044 	addi	r5,r4,1
    cb94:	3001ae1e 	bne	r6,zero,d250 <___vfiprintf_internal_r+0xbc8>
    cb98:	3801bb26 	beq	r7,zero,d288 <___vfiprintf_internal_r+0xc00>
    cb9c:	d9001d04 	addi	r4,sp,116
    cba0:	10800084 	addi	r2,r2,2
    cba4:	41000015 	stw	r4,0(r8)
    cba8:	01000084 	movi	r4,2
    cbac:	41000115 	stw	r4,4(r8)
    cbb0:	d8801c15 	stw	r2,112(sp)
    cbb4:	d9401b15 	stw	r5,108(sp)
    cbb8:	010001c4 	movi	r4,7
    cbbc:	2142680e 	bge	r4,r5,d560 <___vfiprintf_internal_r+0xed8>
    cbc0:	1002b11e 	bne	r2,zero,d688 <___vfiprintf_internal_r+0x1000>
    cbc4:	01802004 	movi	r6,128
    cbc8:	01400044 	movi	r5,1
    cbcc:	0009883a 	mov	r4,zero
    cbd0:	d811883a 	mov	r8,sp
    cbd4:	1981ae1e 	bne	r3,r6,d290 <___vfiprintf_internal_r+0xc08>
    cbd8:	d8c02517 	ldw	r3,148(sp)
    cbdc:	1cf9c83a 	sub	fp,r3,r19
    cbe0:	0701ab0e 	bge	zero,fp,d290 <___vfiprintf_internal_r+0xc08>
    cbe4:	05400404 	movi	r21,16
    cbe8:	af03a90e 	bge	r21,fp,da90 <___vfiprintf_internal_r+0x1408>
    cbec:	01400074 	movhi	r5,1
    cbf0:	295b3d04 	addi	r5,r5,27892
    cbf4:	d9402315 	stw	r5,140(sp)
    cbf8:	01c001c4 	movi	r7,7
    cbfc:	00000506 	br	cc14 <___vfiprintf_internal_r+0x58c>
    cc00:	21800084 	addi	r6,r4,2
    cc04:	42000204 	addi	r8,r8,8
    cc08:	1809883a 	mov	r4,r3
    cc0c:	e73ffc04 	addi	fp,fp,-16
    cc10:	af000d0e 	bge	r21,fp,cc48 <___vfiprintf_internal_r+0x5c0>
    cc14:	10800404 	addi	r2,r2,16
    cc18:	20c00044 	addi	r3,r4,1
    cc1c:	44800015 	stw	r18,0(r8)
    cc20:	45400115 	stw	r21,4(r8)
    cc24:	d8801c15 	stw	r2,112(sp)
    cc28:	d8c01b15 	stw	r3,108(sp)
    cc2c:	38fff40e 	bge	r7,r3,cc00 <__alt_mem_Onchip_SRAM+0xf800cc00>
    cc30:	10022b1e 	bne	r2,zero,d4e0 <___vfiprintf_internal_r+0xe58>
    cc34:	e73ffc04 	addi	fp,fp,-16
    cc38:	01800044 	movi	r6,1
    cc3c:	0009883a 	mov	r4,zero
    cc40:	d811883a 	mov	r8,sp
    cc44:	af3ff316 	blt	r21,fp,cc14 <__alt_mem_Onchip_SRAM+0xf800cc14>
    cc48:	d8c02317 	ldw	r3,140(sp)
    cc4c:	1705883a 	add	r2,r2,fp
    cc50:	47000115 	stw	fp,4(r8)
    cc54:	40c00015 	stw	r3,0(r8)
    cc58:	d8801c15 	stw	r2,112(sp)
    cc5c:	d9801b15 	stw	r6,108(sp)
    cc60:	00c001c4 	movi	r3,7
    cc64:	19829416 	blt	r3,r6,d6b8 <___vfiprintf_internal_r+0x1030>
    cc68:	8521c83a 	sub	r16,r16,r20
    cc6c:	42000204 	addi	r8,r8,8
    cc70:	31400044 	addi	r5,r6,1
    cc74:	3009883a 	mov	r4,r6
    cc78:	04018716 	blt	zero,r16,d298 <___vfiprintf_internal_r+0xc10>
    cc7c:	a085883a 	add	r2,r20,r2
    cc80:	45c00015 	stw	r23,0(r8)
    cc84:	45000115 	stw	r20,4(r8)
    cc88:	d8801c15 	stw	r2,112(sp)
    cc8c:	d9401b15 	stw	r5,108(sp)
    cc90:	00c001c4 	movi	r3,7
    cc94:	1941c20e 	bge	r3,r5,d3a0 <___vfiprintf_internal_r+0xd18>
    cc98:	1002531e 	bne	r2,zero,d5e8 <___vfiprintf_internal_r+0xf60>
    cc9c:	d8001b15 	stw	zero,108(sp)
    cca0:	8c40010c 	andi	r17,r17,4
    cca4:	88023226 	beq	r17,zero,d570 <___vfiprintf_internal_r+0xee8>
    cca8:	d9002517 	ldw	r4,148(sp)
    ccac:	24e3c83a 	sub	r17,r4,r19
    ccb0:	04432916 	blt	zero,r17,d958 <___vfiprintf_internal_r+0x12d0>
    ccb4:	d8802517 	ldw	r2,148(sp)
    ccb8:	14c0010e 	bge	r2,r19,ccc0 <___vfiprintf_internal_r+0x638>
    ccbc:	9805883a 	mov	r2,r19
    ccc0:	d8c02417 	ldw	r3,144(sp)
    ccc4:	1887883a 	add	r3,r3,r2
    ccc8:	d8c02415 	stw	r3,144(sp)
    cccc:	d8001b15 	stw	zero,108(sp)
    ccd0:	d811883a 	mov	r8,sp
    ccd4:	003ea006 	br	c758 <__alt_mem_Onchip_SRAM+0xf800c758>
    ccd8:	8c400814 	ori	r17,r17,32
    ccdc:	b0c00007 	ldb	r3,0(r22)
    cce0:	003ec606 	br	c7fc <__alt_mem_Onchip_SRAM+0xf800c7fc>
    cce4:	b0c00007 	ldb	r3,0(r22)
    cce8:	00801b04 	movi	r2,108
    ccec:	18832026 	beq	r3,r2,d970 <___vfiprintf_internal_r+0x12e8>
    ccf0:	8c400414 	ori	r17,r17,16
    ccf4:	003ec106 	br	c7fc <__alt_mem_Onchip_SRAM+0xf800c7fc>
    ccf8:	9cc03fcc 	andi	r19,r19,255
    ccfc:	b811883a 	mov	r8,r23
    cd00:	9803981e 	bne	r19,zero,db64 <___vfiprintf_internal_r+0x14dc>
    cd04:	8880080c 	andi	r2,r17,32
    cd08:	1002be26 	beq	r2,zero,d804 <___vfiprintf_internal_r+0x117c>
    cd0c:	d9002217 	ldw	r4,136(sp)
    cd10:	d9402417 	ldw	r5,144(sp)
    cd14:	20800017 	ldw	r2,0(r4)
    cd18:	2807d7fa 	srai	r3,r5,31
    cd1c:	21000104 	addi	r4,r4,4
    cd20:	d9002215 	stw	r4,136(sp)
    cd24:	11400015 	stw	r5,0(r2)
    cd28:	10c00115 	stw	r3,4(r2)
    cd2c:	003e8a06 	br	c758 <__alt_mem_Onchip_SRAM+0xf800c758>
    cd30:	9cc03fcc 	andi	r19,r19,255
    cd34:	b811883a 	mov	r8,r23
    cd38:	9803871e 	bne	r19,zero,db58 <___vfiprintf_internal_r+0x14d0>
    cd3c:	8880080c 	andi	r2,r17,32
    cd40:	10009a26 	beq	r2,zero,cfac <___vfiprintf_internal_r+0x924>
    cd44:	d9002217 	ldw	r4,136(sp)
    cd48:	d8001d85 	stb	zero,118(sp)
    cd4c:	20800204 	addi	r2,r4,8
    cd50:	24c00017 	ldw	r19,0(r4)
    cd54:	25000117 	ldw	r20,4(r4)
    cd58:	8002a416 	blt	r16,zero,d7ec <___vfiprintf_internal_r+0x1164>
    cd5c:	013fdfc4 	movi	r4,-129
    cd60:	9d06b03a 	or	r3,r19,r20
    cd64:	d8802215 	stw	r2,136(sp)
    cd68:	8922703a 	and	r17,r17,r4
    cd6c:	18009b26 	beq	r3,zero,cfdc <___vfiprintf_internal_r+0x954>
    cd70:	002b883a 	mov	r21,zero
    cd74:	ddc01a04 	addi	r23,sp,104
    cd78:	9806d0fa 	srli	r3,r19,3
    cd7c:	a008977a 	slli	r4,r20,29
    cd80:	a028d0fa 	srli	r20,r20,3
    cd84:	9cc001cc 	andi	r19,r19,7
    cd88:	98800c04 	addi	r2,r19,48
    cd8c:	bdffffc4 	addi	r23,r23,-1
    cd90:	20e6b03a 	or	r19,r4,r3
    cd94:	b8800005 	stb	r2,0(r23)
    cd98:	9d06b03a 	or	r3,r19,r20
    cd9c:	183ff61e 	bne	r3,zero,cd78 <__alt_mem_Onchip_SRAM+0xf800cd78>
    cda0:	88c0004c 	andi	r3,r17,1
    cda4:	18021f1e 	bne	r3,zero,d624 <___vfiprintf_internal_r+0xf9c>
    cda8:	d9401e17 	ldw	r5,120(sp)
    cdac:	2de9c83a 	sub	r20,r5,r23
    cdb0:	003f3806 	br	ca94 <__alt_mem_Onchip_SRAM+0xf800ca94>
    cdb4:	9cc03fcc 	andi	r19,r19,255
    cdb8:	b811883a 	mov	r8,r23
    cdbc:	98034f1e 	bne	r19,zero,dafc <___vfiprintf_internal_r+0x1474>
    cdc0:	00800074 	movhi	r2,1
    cdc4:	109acc04 	addi	r2,r2,27440
    cdc8:	d8802615 	stw	r2,152(sp)
    cdcc:	8880080c 	andi	r2,r17,32
    cdd0:	1000ac26 	beq	r2,zero,d084 <___vfiprintf_internal_r+0x9fc>
    cdd4:	d9002217 	ldw	r4,136(sp)
    cdd8:	24c00017 	ldw	r19,0(r4)
    cddc:	25000117 	ldw	r20,4(r4)
    cde0:	21000204 	addi	r4,r4,8
    cde4:	d9002215 	stw	r4,136(sp)
    cde8:	8880004c 	andi	r2,r17,1
    cdec:	1001e726 	beq	r2,zero,d58c <___vfiprintf_internal_r+0xf04>
    cdf0:	9d04b03a 	or	r2,r19,r20
    cdf4:	10025c1e 	bne	r2,zero,d768 <___vfiprintf_internal_r+0x10e0>
    cdf8:	d8001d85 	stb	zero,118(sp)
    cdfc:	80024416 	blt	r16,zero,d710 <___vfiprintf_internal_r+0x1088>
    ce00:	00bfdfc4 	movi	r2,-129
    ce04:	88a2703a 	and	r17,r17,r2
    ce08:	003f1d06 	br	ca80 <__alt_mem_Onchip_SRAM+0xf800ca80>
    ce0c:	d8c02217 	ldw	r3,136(sp)
    ce10:	04c00044 	movi	r19,1
    ce14:	b811883a 	mov	r8,r23
    ce18:	18800017 	ldw	r2,0(r3)
    ce1c:	18c00104 	addi	r3,r3,4
    ce20:	d8001d85 	stb	zero,118(sp)
    ce24:	d8801005 	stb	r2,64(sp)
    ce28:	d8c02215 	stw	r3,136(sp)
    ce2c:	9829883a 	mov	r20,r19
    ce30:	ddc01004 	addi	r23,sp,64
    ce34:	0021883a 	mov	r16,zero
    ce38:	003f1e06 	br	cab4 <__alt_mem_Onchip_SRAM+0xf800cab4>
    ce3c:	9cc03fcc 	andi	r19,r19,255
    ce40:	b811883a 	mov	r8,r23
    ce44:	9803331e 	bne	r19,zero,db14 <___vfiprintf_internal_r+0x148c>
    ce48:	8880080c 	andi	r2,r17,32
    ce4c:	10004826 	beq	r2,zero,cf70 <___vfiprintf_internal_r+0x8e8>
    ce50:	d9002217 	ldw	r4,136(sp)
    ce54:	20800117 	ldw	r2,4(r4)
    ce58:	24c00017 	ldw	r19,0(r4)
    ce5c:	21000204 	addi	r4,r4,8
    ce60:	d9002215 	stw	r4,136(sp)
    ce64:	1029883a 	mov	r20,r2
    ce68:	10024c16 	blt	r2,zero,d79c <___vfiprintf_internal_r+0x1114>
    ce6c:	dd401d83 	ldbu	r21,118(sp)
    ce70:	80007116 	blt	r16,zero,d038 <___vfiprintf_internal_r+0x9b0>
    ce74:	00ffdfc4 	movi	r3,-129
    ce78:	9d04b03a 	or	r2,r19,r20
    ce7c:	88e2703a 	and	r17,r17,r3
    ce80:	1000d126 	beq	r2,zero,d1c8 <___vfiprintf_internal_r+0xb40>
    ce84:	a0023526 	beq	r20,zero,d75c <___vfiprintf_internal_r+0x10d4>
    ce88:	ddc01a04 	addi	r23,sp,104
    ce8c:	4039883a 	mov	fp,r8
    ce90:	9809883a 	mov	r4,r19
    ce94:	a00b883a 	mov	r5,r20
    ce98:	01800284 	movi	r6,10
    ce9c:	000f883a 	mov	r7,zero
    cea0:	000ecc00 	call	ecc0 <__umoddi3>
    cea4:	10800c04 	addi	r2,r2,48
    cea8:	bdffffc4 	addi	r23,r23,-1
    ceac:	9809883a 	mov	r4,r19
    ceb0:	a00b883a 	mov	r5,r20
    ceb4:	b8800005 	stb	r2,0(r23)
    ceb8:	01800284 	movi	r6,10
    cebc:	000f883a 	mov	r7,zero
    cec0:	000e6c40 	call	e6c4 <__udivdi3>
    cec4:	1027883a 	mov	r19,r2
    cec8:	10c4b03a 	or	r2,r2,r3
    cecc:	1829883a 	mov	r20,r3
    ced0:	103fef1e 	bne	r2,zero,ce90 <__alt_mem_Onchip_SRAM+0xf800ce90>
    ced4:	d9001e17 	ldw	r4,120(sp)
    ced8:	e011883a 	mov	r8,fp
    cedc:	25e9c83a 	sub	r20,r4,r23
    cee0:	003eec06 	br	ca94 <__alt_mem_Onchip_SRAM+0xf800ca94>
    cee4:	d8802307 	ldb	r2,140(sp)
    cee8:	1002361e 	bne	r2,zero,d7c4 <___vfiprintf_internal_r+0x113c>
    ceec:	00c00804 	movi	r3,32
    cef0:	d8c02305 	stb	r3,140(sp)
    cef4:	04c00044 	movi	r19,1
    cef8:	b0c00007 	ldb	r3,0(r22)
    cefc:	003e3f06 	br	c7fc <__alt_mem_Onchip_SRAM+0xf800c7fc>
    cf00:	8c400054 	ori	r17,r17,1
    cf04:	b0c00007 	ldb	r3,0(r22)
    cf08:	003e3c06 	br	c7fc <__alt_mem_Onchip_SRAM+0xf800c7fc>
    cf0c:	8c402014 	ori	r17,r17,128
    cf10:	b0c00007 	ldb	r3,0(r22)
    cf14:	003e3906 	br	c7fc <__alt_mem_Onchip_SRAM+0xf800c7fc>
    cf18:	dc002715 	stw	r16,156(sp)
    cf1c:	d8002515 	stw	zero,148(sp)
    cf20:	1f3ff404 	addi	fp,r3,-48
    cf24:	0009883a 	mov	r4,zero
    cf28:	b021883a 	mov	r16,r22
    cf2c:	01400284 	movi	r5,10
    cf30:	0000ef80 	call	ef8 <__mulsi3>
    cf34:	80c00007 	ldb	r3,0(r16)
    cf38:	e089883a 	add	r4,fp,r2
    cf3c:	b5800044 	addi	r22,r22,1
    cf40:	1f3ff404 	addi	fp,r3,-48
    cf44:	b021883a 	mov	r16,r22
    cf48:	af3ff82e 	bgeu	r21,fp,cf2c <__alt_mem_Onchip_SRAM+0xf800cf2c>
    cf4c:	d9002515 	stw	r4,148(sp)
    cf50:	dc002717 	ldw	r16,156(sp)
    cf54:	003e2a06 	br	c800 <__alt_mem_Onchip_SRAM+0xf800c800>
    cf58:	9cc03fcc 	andi	r19,r19,255
    cf5c:	b811883a 	mov	r8,r23
    cf60:	9802e91e 	bne	r19,zero,db08 <___vfiprintf_internal_r+0x1480>
    cf64:	8c400414 	ori	r17,r17,16
    cf68:	8880080c 	andi	r2,r17,32
    cf6c:	103fb81e 	bne	r2,zero,ce50 <__alt_mem_Onchip_SRAM+0xf800ce50>
    cf70:	8880040c 	andi	r2,r17,16
    cf74:	10022e26 	beq	r2,zero,d830 <___vfiprintf_internal_r+0x11a8>
    cf78:	d9402217 	ldw	r5,136(sp)
    cf7c:	2cc00017 	ldw	r19,0(r5)
    cf80:	29400104 	addi	r5,r5,4
    cf84:	d9402215 	stw	r5,136(sp)
    cf88:	9829d7fa 	srai	r20,r19,31
    cf8c:	a005883a 	mov	r2,r20
    cf90:	003fb506 	br	ce68 <__alt_mem_Onchip_SRAM+0xf800ce68>
    cf94:	9cc03fcc 	andi	r19,r19,255
    cf98:	b811883a 	mov	r8,r23
    cf9c:	9802fa1e 	bne	r19,zero,db88 <___vfiprintf_internal_r+0x1500>
    cfa0:	8c400414 	ori	r17,r17,16
    cfa4:	8880080c 	andi	r2,r17,32
    cfa8:	103f661e 	bne	r2,zero,cd44 <__alt_mem_Onchip_SRAM+0xf800cd44>
    cfac:	8880040c 	andi	r2,r17,16
    cfb0:	10020626 	beq	r2,zero,d7cc <___vfiprintf_internal_r+0x1144>
    cfb4:	d9402217 	ldw	r5,136(sp)
    cfb8:	d8001d85 	stb	zero,118(sp)
    cfbc:	0029883a 	mov	r20,zero
    cfc0:	28800104 	addi	r2,r5,4
    cfc4:	2cc00017 	ldw	r19,0(r5)
    cfc8:	80020816 	blt	r16,zero,d7ec <___vfiprintf_internal_r+0x1164>
    cfcc:	00ffdfc4 	movi	r3,-129
    cfd0:	d8802215 	stw	r2,136(sp)
    cfd4:	88e2703a 	and	r17,r17,r3
    cfd8:	983f651e 	bne	r19,zero,cd70 <__alt_mem_Onchip_SRAM+0xf800cd70>
    cfdc:	002b883a 	mov	r21,zero
    cfe0:	8002cf26 	beq	r16,zero,db20 <___vfiprintf_internal_r+0x1498>
    cfe4:	0027883a 	mov	r19,zero
    cfe8:	0029883a 	mov	r20,zero
    cfec:	003f6106 	br	cd74 <__alt_mem_Onchip_SRAM+0xf800cd74>
    cff0:	9cc03fcc 	andi	r19,r19,255
    cff4:	b811883a 	mov	r8,r23
    cff8:	9802e01e 	bne	r19,zero,db7c <___vfiprintf_internal_r+0x14f4>
    cffc:	8c400414 	ori	r17,r17,16
    d000:	8880080c 	andi	r2,r17,32
    d004:	1000641e 	bne	r2,zero,d198 <___vfiprintf_internal_r+0xb10>
    d008:	8880040c 	andi	r2,r17,16
    d00c:	1001c81e 	bne	r2,zero,d730 <___vfiprintf_internal_r+0x10a8>
    d010:	8880100c 	andi	r2,r17,64
    d014:	d8001d85 	stb	zero,118(sp)
    d018:	1002281e 	bne	r2,zero,d8bc <___vfiprintf_internal_r+0x1234>
    d01c:	d9002217 	ldw	r4,136(sp)
    d020:	0029883a 	mov	r20,zero
    d024:	20800104 	addi	r2,r4,4
    d028:	24c00017 	ldw	r19,0(r4)
    d02c:	8001c60e 	bge	r16,zero,d748 <___vfiprintf_internal_r+0x10c0>
    d030:	d8802215 	stw	r2,136(sp)
    d034:	002b883a 	mov	r21,zero
    d038:	9d04b03a 	or	r2,r19,r20
    d03c:	103f911e 	bne	r2,zero,ce84 <__alt_mem_Onchip_SRAM+0xf800ce84>
    d040:	00800044 	movi	r2,1
    d044:	10803fcc 	andi	r2,r2,255
    d048:	00c00044 	movi	r3,1
    d04c:	10c05f26 	beq	r2,r3,d1cc <___vfiprintf_internal_r+0xb44>
    d050:	00c00084 	movi	r3,2
    d054:	10ffe31e 	bne	r2,r3,cfe4 <__alt_mem_Onchip_SRAM+0xf800cfe4>
    d058:	0027883a 	mov	r19,zero
    d05c:	0029883a 	mov	r20,zero
    d060:	00015106 	br	d5a8 <___vfiprintf_internal_r+0xf20>
    d064:	9cc03fcc 	andi	r19,r19,255
    d068:	b811883a 	mov	r8,r23
    d06c:	9802c01e 	bne	r19,zero,db70 <___vfiprintf_internal_r+0x14e8>
    d070:	01400074 	movhi	r5,1
    d074:	295ac704 	addi	r5,r5,27420
    d078:	d9402615 	stw	r5,152(sp)
    d07c:	8880080c 	andi	r2,r17,32
    d080:	103f541e 	bne	r2,zero,cdd4 <__alt_mem_Onchip_SRAM+0xf800cdd4>
    d084:	8880040c 	andi	r2,r17,16
    d088:	1001f226 	beq	r2,zero,d854 <___vfiprintf_internal_r+0x11cc>
    d08c:	d9402217 	ldw	r5,136(sp)
    d090:	0029883a 	mov	r20,zero
    d094:	2cc00017 	ldw	r19,0(r5)
    d098:	29400104 	addi	r5,r5,4
    d09c:	d9402215 	stw	r5,136(sp)
    d0a0:	003f5106 	br	cde8 <__alt_mem_Onchip_SRAM+0xf800cde8>
    d0a4:	d8c02217 	ldw	r3,136(sp)
    d0a8:	b811883a 	mov	r8,r23
    d0ac:	d8001d85 	stb	zero,118(sp)
    d0b0:	1dc00017 	ldw	r23,0(r3)
    d0b4:	1f000104 	addi	fp,r3,4
    d0b8:	b8025926 	beq	r23,zero,da20 <___vfiprintf_internal_r+0x1398>
    d0bc:	80023316 	blt	r16,zero,d98c <___vfiprintf_internal_r+0x1304>
    d0c0:	800d883a 	mov	r6,r16
    d0c4:	000b883a 	mov	r5,zero
    d0c8:	b809883a 	mov	r4,r23
    d0cc:	da002a15 	stw	r8,168(sp)
    d0d0:	00090f00 	call	90f0 <memchr>
    d0d4:	da002a17 	ldw	r8,168(sp)
    d0d8:	10026826 	beq	r2,zero,da7c <___vfiprintf_internal_r+0x13f4>
    d0dc:	15e9c83a 	sub	r20,r2,r23
    d0e0:	dd401d83 	ldbu	r21,118(sp)
    d0e4:	df002215 	stw	fp,136(sp)
    d0e8:	0021883a 	mov	r16,zero
    d0ec:	003e6906 	br	ca94 <__alt_mem_Onchip_SRAM+0xf800ca94>
    d0f0:	9cc03fcc 	andi	r19,r19,255
    d0f4:	b811883a 	mov	r8,r23
    d0f8:	983fc126 	beq	r19,zero,d000 <__alt_mem_Onchip_SRAM+0xf800d000>
    d0fc:	d8c02303 	ldbu	r3,140(sp)
    d100:	d8c01d85 	stb	r3,118(sp)
    d104:	003fbe06 	br	d000 <__alt_mem_Onchip_SRAM+0xf800d000>
    d108:	d9002217 	ldw	r4,136(sp)
    d10c:	d9402217 	ldw	r5,136(sp)
    d110:	21000017 	ldw	r4,0(r4)
    d114:	28800104 	addi	r2,r5,4
    d118:	d9002515 	stw	r4,148(sp)
    d11c:	203e3d16 	blt	r4,zero,ca14 <__alt_mem_Onchip_SRAM+0xf800ca14>
    d120:	d8802215 	stw	r2,136(sp)
    d124:	b0c00007 	ldb	r3,0(r22)
    d128:	003db406 	br	c7fc <__alt_mem_Onchip_SRAM+0xf800c7fc>
    d12c:	00c00ac4 	movi	r3,43
    d130:	d8c02305 	stb	r3,140(sp)
    d134:	04c00044 	movi	r19,1
    d138:	b0c00007 	ldb	r3,0(r22)
    d13c:	003daf06 	br	c7fc <__alt_mem_Onchip_SRAM+0xf800c7fc>
    d140:	b0c00007 	ldb	r3,0(r22)
    d144:	01000a84 	movi	r4,42
    d148:	b4000044 	addi	r16,r22,1
    d14c:	19025e26 	beq	r3,r4,dac8 <___vfiprintf_internal_r+0x1440>
    d150:	1f3ff404 	addi	fp,r3,-48
    d154:	0009883a 	mov	r4,zero
    d158:	af025236 	bltu	r21,fp,daa4 <___vfiprintf_internal_r+0x141c>
    d15c:	01400284 	movi	r5,10
    d160:	0000ef80 	call	ef8 <__mulsi3>
    d164:	80c00007 	ldb	r3,0(r16)
    d168:	1709883a 	add	r4,r2,fp
    d16c:	85800044 	addi	r22,r16,1
    d170:	1f3ff404 	addi	fp,r3,-48
    d174:	b021883a 	mov	r16,r22
    d178:	af3ff82e 	bgeu	r21,fp,d15c <__alt_mem_Onchip_SRAM+0xf800d15c>
    d17c:	2021883a 	mov	r16,r4
    d180:	203d9f0e 	bge	r4,zero,c800 <__alt_mem_Onchip_SRAM+0xf800c800>
    d184:	043fffc4 	movi	r16,-1
    d188:	003d9d06 	br	c800 <__alt_mem_Onchip_SRAM+0xf800c800>
    d18c:	8c401014 	ori	r17,r17,64
    d190:	b0c00007 	ldb	r3,0(r22)
    d194:	003d9906 	br	c7fc <__alt_mem_Onchip_SRAM+0xf800c7fc>
    d198:	d9002217 	ldw	r4,136(sp)
    d19c:	d8001d85 	stb	zero,118(sp)
    d1a0:	20c00204 	addi	r3,r4,8
    d1a4:	24c00017 	ldw	r19,0(r4)
    d1a8:	25000117 	ldw	r20,4(r4)
    d1ac:	8001e716 	blt	r16,zero,d94c <___vfiprintf_internal_r+0x12c4>
    d1b0:	013fdfc4 	movi	r4,-129
    d1b4:	9d04b03a 	or	r2,r19,r20
    d1b8:	d8c02215 	stw	r3,136(sp)
    d1bc:	8922703a 	and	r17,r17,r4
    d1c0:	002b883a 	mov	r21,zero
    d1c4:	103f2f1e 	bne	r2,zero,ce84 <__alt_mem_Onchip_SRAM+0xf800ce84>
    d1c8:	803e2f26 	beq	r16,zero,ca88 <__alt_mem_Onchip_SRAM+0xf800ca88>
    d1cc:	0027883a 	mov	r19,zero
    d1d0:	9cc00c04 	addi	r19,r19,48
    d1d4:	dcc019c5 	stb	r19,103(sp)
    d1d8:	dd002817 	ldw	r20,160(sp)
    d1dc:	ddc019c4 	addi	r23,sp,103
    d1e0:	003e2c06 	br	ca94 <__alt_mem_Onchip_SRAM+0xf800ca94>
    d1e4:	9cc03fcc 	andi	r19,r19,255
    d1e8:	b811883a 	mov	r8,r23
    d1ec:	9802571e 	bne	r19,zero,db4c <___vfiprintf_internal_r+0x14c4>
    d1f0:	18005726 	beq	r3,zero,d350 <___vfiprintf_internal_r+0xcc8>
    d1f4:	04c00044 	movi	r19,1
    d1f8:	d8c01005 	stb	r3,64(sp)
    d1fc:	d8001d85 	stb	zero,118(sp)
    d200:	9829883a 	mov	r20,r19
    d204:	ddc01004 	addi	r23,sp,64
    d208:	003f0a06 	br	ce34 <__alt_mem_Onchip_SRAM+0xf800ce34>
    d20c:	d9402017 	ldw	r5,128(sp)
    d210:	d9002117 	ldw	r4,132(sp)
    d214:	d9801a04 	addi	r6,sp,104
    d218:	da802a15 	stw	r10,168(sp)
    d21c:	000c5740 	call	c574 <__sprint_r.part.0>
    d220:	da802a17 	ldw	r10,168(sp)
    d224:	1000501e 	bne	r2,zero,d368 <___vfiprintf_internal_r+0xce0>
    d228:	d9801b17 	ldw	r6,108(sp)
    d22c:	d8801c17 	ldw	r2,112(sp)
    d230:	d811883a 	mov	r8,sp
    d234:	31000044 	addi	r4,r6,1
    d238:	003e3606 	br	cb14 <__alt_mem_Onchip_SRAM+0xf800cb14>
    d23c:	d9001b17 	ldw	r4,108(sp)
    d240:	d8801c17 	ldw	r2,112(sp)
    d244:	21400044 	addi	r5,r4,1
    d248:	d9801d87 	ldb	r6,118(sp)
    d24c:	303e5226 	beq	r6,zero,cb98 <__alt_mem_Onchip_SRAM+0xf800cb98>
    d250:	01800044 	movi	r6,1
    d254:	d9001d84 	addi	r4,sp,118
    d258:	1185883a 	add	r2,r2,r6
    d25c:	41000015 	stw	r4,0(r8)
    d260:	41800115 	stw	r6,4(r8)
    d264:	d8801c15 	stw	r2,112(sp)
    d268:	d9401b15 	stw	r5,108(sp)
    d26c:	010001c4 	movi	r4,7
    d270:	2140b00e 	bge	r4,r5,d534 <___vfiprintf_internal_r+0xeac>
    d274:	1000f61e 	bne	r2,zero,d650 <___vfiprintf_internal_r+0xfc8>
    d278:	3800b31e 	bne	r7,zero,d548 <___vfiprintf_internal_r+0xec0>
    d27c:	0009883a 	mov	r4,zero
    d280:	300b883a 	mov	r5,r6
    d284:	d811883a 	mov	r8,sp
    d288:	01802004 	movi	r6,128
    d28c:	19be5226 	beq	r3,r6,cbd8 <__alt_mem_Onchip_SRAM+0xf800cbd8>
    d290:	8521c83a 	sub	r16,r16,r20
    d294:	043e790e 	bge	zero,r16,cc7c <__alt_mem_Onchip_SRAM+0xf800cc7c>
    d298:	05400404 	movi	r21,16
    d29c:	ac01b00e 	bge	r21,r16,d960 <___vfiprintf_internal_r+0x12d8>
    d2a0:	01400074 	movhi	r5,1
    d2a4:	295b3d04 	addi	r5,r5,27892
    d2a8:	d9402315 	stw	r5,140(sp)
    d2ac:	070001c4 	movi	fp,7
    d2b0:	00000506 	br	d2c8 <___vfiprintf_internal_r+0xc40>
    d2b4:	21400084 	addi	r5,r4,2
    d2b8:	42000204 	addi	r8,r8,8
    d2bc:	1809883a 	mov	r4,r3
    d2c0:	843ffc04 	addi	r16,r16,-16
    d2c4:	ac000d0e 	bge	r21,r16,d2fc <___vfiprintf_internal_r+0xc74>
    d2c8:	10800404 	addi	r2,r2,16
    d2cc:	20c00044 	addi	r3,r4,1
    d2d0:	44800015 	stw	r18,0(r8)
    d2d4:	45400115 	stw	r21,4(r8)
    d2d8:	d8801c15 	stw	r2,112(sp)
    d2dc:	d8c01b15 	stw	r3,108(sp)
    d2e0:	e0fff40e 	bge	fp,r3,d2b4 <__alt_mem_Onchip_SRAM+0xf800d2b4>
    d2e4:	1000101e 	bne	r2,zero,d328 <___vfiprintf_internal_r+0xca0>
    d2e8:	843ffc04 	addi	r16,r16,-16
    d2ec:	01400044 	movi	r5,1
    d2f0:	0009883a 	mov	r4,zero
    d2f4:	d811883a 	mov	r8,sp
    d2f8:	ac3ff316 	blt	r21,r16,d2c8 <__alt_mem_Onchip_SRAM+0xf800d2c8>
    d2fc:	d8c02317 	ldw	r3,140(sp)
    d300:	1405883a 	add	r2,r2,r16
    d304:	44000115 	stw	r16,4(r8)
    d308:	40c00015 	stw	r3,0(r8)
    d30c:	d8801c15 	stw	r2,112(sp)
    d310:	d9401b15 	stw	r5,108(sp)
    d314:	00c001c4 	movi	r3,7
    d318:	19401916 	blt	r3,r5,d380 <___vfiprintf_internal_r+0xcf8>
    d31c:	42000204 	addi	r8,r8,8
    d320:	29400044 	addi	r5,r5,1
    d324:	003e5506 	br	cc7c <__alt_mem_Onchip_SRAM+0xf800cc7c>
    d328:	d9402017 	ldw	r5,128(sp)
    d32c:	d9002117 	ldw	r4,132(sp)
    d330:	d9801a04 	addi	r6,sp,104
    d334:	000c5740 	call	c574 <__sprint_r.part.0>
    d338:	10000b1e 	bne	r2,zero,d368 <___vfiprintf_internal_r+0xce0>
    d33c:	d9001b17 	ldw	r4,108(sp)
    d340:	d8801c17 	ldw	r2,112(sp)
    d344:	d811883a 	mov	r8,sp
    d348:	21400044 	addi	r5,r4,1
    d34c:	003fdc06 	br	d2c0 <__alt_mem_Onchip_SRAM+0xf800d2c0>
    d350:	d8801c17 	ldw	r2,112(sp)
    d354:	10000426 	beq	r2,zero,d368 <___vfiprintf_internal_r+0xce0>
    d358:	d9402017 	ldw	r5,128(sp)
    d35c:	d9002117 	ldw	r4,132(sp)
    d360:	d9801a04 	addi	r6,sp,104
    d364:	000c5740 	call	c574 <__sprint_r.part.0>
    d368:	d9402017 	ldw	r5,128(sp)
    d36c:	2880030b 	ldhu	r2,12(r5)
    d370:	1080100c 	andi	r2,r2,64
    d374:	10014d1e 	bne	r2,zero,d8ac <___vfiprintf_internal_r+0x1224>
    d378:	d8802417 	ldw	r2,144(sp)
    d37c:	003d9706 	br	c9dc <__alt_mem_Onchip_SRAM+0xf800c9dc>
    d380:	1000d21e 	bne	r2,zero,d6cc <___vfiprintf_internal_r+0x1044>
    d384:	00c00044 	movi	r3,1
    d388:	a005883a 	mov	r2,r20
    d38c:	ddc00015 	stw	r23,0(sp)
    d390:	dd000115 	stw	r20,4(sp)
    d394:	dd001c15 	stw	r20,112(sp)
    d398:	d8c01b15 	stw	r3,108(sp)
    d39c:	d811883a 	mov	r8,sp
    d3a0:	42000204 	addi	r8,r8,8
    d3a4:	8c40010c 	andi	r17,r17,4
    d3a8:	88004026 	beq	r17,zero,d4ac <___vfiprintf_internal_r+0xe24>
    d3ac:	d9002517 	ldw	r4,148(sp)
    d3b0:	24e3c83a 	sub	r17,r4,r19
    d3b4:	04403d0e 	bge	zero,r17,d4ac <___vfiprintf_internal_r+0xe24>
    d3b8:	04000404 	movi	r16,16
    d3bc:	8441a90e 	bge	r16,r17,da64 <___vfiprintf_internal_r+0x13dc>
    d3c0:	00c00074 	movhi	r3,1
    d3c4:	18db4104 	addi	r3,r3,27908
    d3c8:	d9001b17 	ldw	r4,108(sp)
    d3cc:	d8c02315 	stw	r3,140(sp)
    d3d0:	050001c4 	movi	r20,7
    d3d4:	dd402117 	ldw	r21,132(sp)
    d3d8:	ddc02017 	ldw	r23,128(sp)
    d3dc:	00000506 	br	d3f4 <___vfiprintf_internal_r+0xd6c>
    d3e0:	21400084 	addi	r5,r4,2
    d3e4:	42000204 	addi	r8,r8,8
    d3e8:	1809883a 	mov	r4,r3
    d3ec:	8c7ffc04 	addi	r17,r17,-16
    d3f0:	84400f0e 	bge	r16,r17,d430 <___vfiprintf_internal_r+0xda8>
    d3f4:	01400074 	movhi	r5,1
    d3f8:	10800404 	addi	r2,r2,16
    d3fc:	20c00044 	addi	r3,r4,1
    d400:	295b4104 	addi	r5,r5,27908
    d404:	41400015 	stw	r5,0(r8)
    d408:	44000115 	stw	r16,4(r8)
    d40c:	d8801c15 	stw	r2,112(sp)
    d410:	d8c01b15 	stw	r3,108(sp)
    d414:	a0fff20e 	bge	r20,r3,d3e0 <__alt_mem_Onchip_SRAM+0xf800d3e0>
    d418:	1000141e 	bne	r2,zero,d46c <___vfiprintf_internal_r+0xde4>
    d41c:	8c7ffc04 	addi	r17,r17,-16
    d420:	01400044 	movi	r5,1
    d424:	0009883a 	mov	r4,zero
    d428:	d811883a 	mov	r8,sp
    d42c:	847ff116 	blt	r16,r17,d3f4 <__alt_mem_Onchip_SRAM+0xf800d3f4>
    d430:	d8c02317 	ldw	r3,140(sp)
    d434:	1445883a 	add	r2,r2,r17
    d438:	44400115 	stw	r17,4(r8)
    d43c:	40c00015 	stw	r3,0(r8)
    d440:	d8801c15 	stw	r2,112(sp)
    d444:	d9401b15 	stw	r5,108(sp)
    d448:	00c001c4 	movi	r3,7
    d44c:	1940170e 	bge	r3,r5,d4ac <___vfiprintf_internal_r+0xe24>
    d450:	1000101e 	bne	r2,zero,d494 <___vfiprintf_internal_r+0xe0c>
    d454:	d8802517 	ldw	r2,148(sp)
    d458:	14c11616 	blt	r2,r19,d8b4 <___vfiprintf_internal_r+0x122c>
    d45c:	d9002417 	ldw	r4,144(sp)
    d460:	2089883a 	add	r4,r4,r2
    d464:	d9002415 	stw	r4,144(sp)
    d468:	003e1806 	br	cccc <__alt_mem_Onchip_SRAM+0xf800cccc>
    d46c:	d9801a04 	addi	r6,sp,104
    d470:	b80b883a 	mov	r5,r23
    d474:	a809883a 	mov	r4,r21
    d478:	000c5740 	call	c574 <__sprint_r.part.0>
    d47c:	103fba1e 	bne	r2,zero,d368 <__alt_mem_Onchip_SRAM+0xf800d368>
    d480:	d9001b17 	ldw	r4,108(sp)
    d484:	d8801c17 	ldw	r2,112(sp)
    d488:	d811883a 	mov	r8,sp
    d48c:	21400044 	addi	r5,r4,1
    d490:	003fd606 	br	d3ec <__alt_mem_Onchip_SRAM+0xf800d3ec>
    d494:	d9402017 	ldw	r5,128(sp)
    d498:	d9002117 	ldw	r4,132(sp)
    d49c:	d9801a04 	addi	r6,sp,104
    d4a0:	000c5740 	call	c574 <__sprint_r.part.0>
    d4a4:	103fb01e 	bne	r2,zero,d368 <__alt_mem_Onchip_SRAM+0xf800d368>
    d4a8:	d8801c17 	ldw	r2,112(sp)
    d4ac:	d8c02517 	ldw	r3,148(sp)
    d4b0:	1cc0010e 	bge	r3,r19,d4b8 <___vfiprintf_internal_r+0xe30>
    d4b4:	9807883a 	mov	r3,r19
    d4b8:	d9002417 	ldw	r4,144(sp)
    d4bc:	20c9883a 	add	r4,r4,r3
    d4c0:	d9002415 	stw	r4,144(sp)
    d4c4:	103e0126 	beq	r2,zero,cccc <__alt_mem_Onchip_SRAM+0xf800cccc>
    d4c8:	d9402017 	ldw	r5,128(sp)
    d4cc:	d9002117 	ldw	r4,132(sp)
    d4d0:	d9801a04 	addi	r6,sp,104
    d4d4:	000c5740 	call	c574 <__sprint_r.part.0>
    d4d8:	103dfc26 	beq	r2,zero,cccc <__alt_mem_Onchip_SRAM+0xf800cccc>
    d4dc:	003fa206 	br	d368 <__alt_mem_Onchip_SRAM+0xf800d368>
    d4e0:	d9402017 	ldw	r5,128(sp)
    d4e4:	d9002117 	ldw	r4,132(sp)
    d4e8:	d9801a04 	addi	r6,sp,104
    d4ec:	d9c02b15 	stw	r7,172(sp)
    d4f0:	000c5740 	call	c574 <__sprint_r.part.0>
    d4f4:	d9c02b17 	ldw	r7,172(sp)
    d4f8:	103f9b1e 	bne	r2,zero,d368 <__alt_mem_Onchip_SRAM+0xf800d368>
    d4fc:	d9001b17 	ldw	r4,108(sp)
    d500:	d8801c17 	ldw	r2,112(sp)
    d504:	d811883a 	mov	r8,sp
    d508:	21800044 	addi	r6,r4,1
    d50c:	003dbf06 	br	cc0c <__alt_mem_Onchip_SRAM+0xf800cc0c>
    d510:	1000d81e 	bne	r2,zero,d874 <___vfiprintf_internal_r+0x11ec>
    d514:	d9001d87 	ldb	r4,118(sp)
    d518:	20000a26 	beq	r4,zero,d544 <___vfiprintf_internal_r+0xebc>
    d51c:	00800044 	movi	r2,1
    d520:	d9001d84 	addi	r4,sp,118
    d524:	100b883a 	mov	r5,r2
    d528:	d9000015 	stw	r4,0(sp)
    d52c:	d8800115 	stw	r2,4(sp)
    d530:	d811883a 	mov	r8,sp
    d534:	2809883a 	mov	r4,r5
    d538:	42000204 	addi	r8,r8,8
    d53c:	29400044 	addi	r5,r5,1
    d540:	003d9506 	br	cb98 <__alt_mem_Onchip_SRAM+0xf800cb98>
    d544:	3800fd26 	beq	r7,zero,d93c <___vfiprintf_internal_r+0x12b4>
    d548:	00800084 	movi	r2,2
    d54c:	d9001d04 	addi	r4,sp,116
    d550:	d9000015 	stw	r4,0(sp)
    d554:	d8800115 	stw	r2,4(sp)
    d558:	01400044 	movi	r5,1
    d55c:	d811883a 	mov	r8,sp
    d560:	2809883a 	mov	r4,r5
    d564:	42000204 	addi	r8,r8,8
    d568:	29400044 	addi	r5,r5,1
    d56c:	003f4606 	br	d288 <__alt_mem_Onchip_SRAM+0xf800d288>
    d570:	d8802517 	ldw	r2,148(sp)
    d574:	14c0010e 	bge	r2,r19,d57c <___vfiprintf_internal_r+0xef4>
    d578:	9805883a 	mov	r2,r19
    d57c:	d9402417 	ldw	r5,144(sp)
    d580:	288b883a 	add	r5,r5,r2
    d584:	d9402415 	stw	r5,144(sp)
    d588:	003dd006 	br	cccc <__alt_mem_Onchip_SRAM+0xf800cccc>
    d58c:	d8001d85 	stb	zero,118(sp)
    d590:	80005d16 	blt	r16,zero,d708 <___vfiprintf_internal_r+0x1080>
    d594:	00ffdfc4 	movi	r3,-129
    d598:	9d04b03a 	or	r2,r19,r20
    d59c:	88e2703a 	and	r17,r17,r3
    d5a0:	103d3726 	beq	r2,zero,ca80 <__alt_mem_Onchip_SRAM+0xf800ca80>
    d5a4:	002b883a 	mov	r21,zero
    d5a8:	d9002617 	ldw	r4,152(sp)
    d5ac:	ddc01a04 	addi	r23,sp,104
    d5b0:	988003cc 	andi	r2,r19,15
    d5b4:	a006973a 	slli	r3,r20,28
    d5b8:	2085883a 	add	r2,r4,r2
    d5bc:	9826d13a 	srli	r19,r19,4
    d5c0:	10800003 	ldbu	r2,0(r2)
    d5c4:	a028d13a 	srli	r20,r20,4
    d5c8:	bdffffc4 	addi	r23,r23,-1
    d5cc:	1ce6b03a 	or	r19,r3,r19
    d5d0:	b8800005 	stb	r2,0(r23)
    d5d4:	9d04b03a 	or	r2,r19,r20
    d5d8:	103ff51e 	bne	r2,zero,d5b0 <__alt_mem_Onchip_SRAM+0xf800d5b0>
    d5dc:	d8801e17 	ldw	r2,120(sp)
    d5e0:	15e9c83a 	sub	r20,r2,r23
    d5e4:	003d2b06 	br	ca94 <__alt_mem_Onchip_SRAM+0xf800ca94>
    d5e8:	d9402017 	ldw	r5,128(sp)
    d5ec:	d9002117 	ldw	r4,132(sp)
    d5f0:	d9801a04 	addi	r6,sp,104
    d5f4:	000c5740 	call	c574 <__sprint_r.part.0>
    d5f8:	103f5b1e 	bne	r2,zero,d368 <__alt_mem_Onchip_SRAM+0xf800d368>
    d5fc:	d8801c17 	ldw	r2,112(sp)
    d600:	d811883a 	mov	r8,sp
    d604:	003f6706 	br	d3a4 <__alt_mem_Onchip_SRAM+0xf800d3a4>
    d608:	d9402017 	ldw	r5,128(sp)
    d60c:	d9002117 	ldw	r4,132(sp)
    d610:	d9801a04 	addi	r6,sp,104
    d614:	000c5740 	call	c574 <__sprint_r.part.0>
    d618:	103f531e 	bne	r2,zero,d368 <__alt_mem_Onchip_SRAM+0xf800d368>
    d61c:	d811883a 	mov	r8,sp
    d620:	003cd906 	br	c988 <__alt_mem_Onchip_SRAM+0xf800c988>
    d624:	10803fcc 	andi	r2,r2,255
    d628:	1080201c 	xori	r2,r2,128
    d62c:	10bfe004 	addi	r2,r2,-128
    d630:	00c00c04 	movi	r3,48
    d634:	10ffe926 	beq	r2,r3,d5dc <__alt_mem_Onchip_SRAM+0xf800d5dc>
    d638:	b8ffffc5 	stb	r3,-1(r23)
    d63c:	d8c01e17 	ldw	r3,120(sp)
    d640:	b8bfffc4 	addi	r2,r23,-1
    d644:	102f883a 	mov	r23,r2
    d648:	18a9c83a 	sub	r20,r3,r2
    d64c:	003d1106 	br	ca94 <__alt_mem_Onchip_SRAM+0xf800ca94>
    d650:	d9402017 	ldw	r5,128(sp)
    d654:	d9002117 	ldw	r4,132(sp)
    d658:	d9801a04 	addi	r6,sp,104
    d65c:	d8c02a15 	stw	r3,168(sp)
    d660:	d9c02b15 	stw	r7,172(sp)
    d664:	000c5740 	call	c574 <__sprint_r.part.0>
    d668:	d8c02a17 	ldw	r3,168(sp)
    d66c:	d9c02b17 	ldw	r7,172(sp)
    d670:	103f3d1e 	bne	r2,zero,d368 <__alt_mem_Onchip_SRAM+0xf800d368>
    d674:	d9001b17 	ldw	r4,108(sp)
    d678:	d8801c17 	ldw	r2,112(sp)
    d67c:	d811883a 	mov	r8,sp
    d680:	21400044 	addi	r5,r4,1
    d684:	003d4406 	br	cb98 <__alt_mem_Onchip_SRAM+0xf800cb98>
    d688:	d9402017 	ldw	r5,128(sp)
    d68c:	d9002117 	ldw	r4,132(sp)
    d690:	d9801a04 	addi	r6,sp,104
    d694:	d8c02a15 	stw	r3,168(sp)
    d698:	000c5740 	call	c574 <__sprint_r.part.0>
    d69c:	d8c02a17 	ldw	r3,168(sp)
    d6a0:	103f311e 	bne	r2,zero,d368 <__alt_mem_Onchip_SRAM+0xf800d368>
    d6a4:	d9001b17 	ldw	r4,108(sp)
    d6a8:	d8801c17 	ldw	r2,112(sp)
    d6ac:	d811883a 	mov	r8,sp
    d6b0:	21400044 	addi	r5,r4,1
    d6b4:	003ef406 	br	d288 <__alt_mem_Onchip_SRAM+0xf800d288>
    d6b8:	1000bd1e 	bne	r2,zero,d9b0 <___vfiprintf_internal_r+0x1328>
    d6bc:	01400044 	movi	r5,1
    d6c0:	0009883a 	mov	r4,zero
    d6c4:	d811883a 	mov	r8,sp
    d6c8:	003ef106 	br	d290 <__alt_mem_Onchip_SRAM+0xf800d290>
    d6cc:	d9402017 	ldw	r5,128(sp)
    d6d0:	d9002117 	ldw	r4,132(sp)
    d6d4:	d9801a04 	addi	r6,sp,104
    d6d8:	000c5740 	call	c574 <__sprint_r.part.0>
    d6dc:	103f221e 	bne	r2,zero,d368 <__alt_mem_Onchip_SRAM+0xf800d368>
    d6e0:	d9401b17 	ldw	r5,108(sp)
    d6e4:	d8801c17 	ldw	r2,112(sp)
    d6e8:	d811883a 	mov	r8,sp
    d6ec:	29400044 	addi	r5,r5,1
    d6f0:	003d6206 	br	cc7c <__alt_mem_Onchip_SRAM+0xf800cc7c>
    d6f4:	01400074 	movhi	r5,1
    d6f8:	295acc04 	addi	r5,r5,27440
    d6fc:	d9402615 	stw	r5,152(sp)
    d700:	d8c02215 	stw	r3,136(sp)
    d704:	1023883a 	mov	r17,r2
    d708:	9d04b03a 	or	r2,r19,r20
    d70c:	103fa51e 	bne	r2,zero,d5a4 <__alt_mem_Onchip_SRAM+0xf800d5a4>
    d710:	002b883a 	mov	r21,zero
    d714:	00800084 	movi	r2,2
    d718:	003e4a06 	br	d044 <__alt_mem_Onchip_SRAM+0xf800d044>
    d71c:	01400074 	movhi	r5,1
    d720:	295acc04 	addi	r5,r5,27440
    d724:	002b883a 	mov	r21,zero
    d728:	d9402615 	stw	r5,152(sp)
    d72c:	003f9e06 	br	d5a8 <__alt_mem_Onchip_SRAM+0xf800d5a8>
    d730:	d9402217 	ldw	r5,136(sp)
    d734:	d8001d85 	stb	zero,118(sp)
    d738:	0029883a 	mov	r20,zero
    d73c:	28800104 	addi	r2,r5,4
    d740:	2cc00017 	ldw	r19,0(r5)
    d744:	803e3a16 	blt	r16,zero,d030 <__alt_mem_Onchip_SRAM+0xf800d030>
    d748:	00ffdfc4 	movi	r3,-129
    d74c:	d8802215 	stw	r2,136(sp)
    d750:	88e2703a 	and	r17,r17,r3
    d754:	002b883a 	mov	r21,zero
    d758:	983e9b26 	beq	r19,zero,d1c8 <__alt_mem_Onchip_SRAM+0xf800d1c8>
    d75c:	00800244 	movi	r2,9
    d760:	14fdc936 	bltu	r2,r19,ce88 <__alt_mem_Onchip_SRAM+0xf800ce88>
    d764:	003e9a06 	br	d1d0 <__alt_mem_Onchip_SRAM+0xf800d1d0>
    d768:	00800c04 	movi	r2,48
    d76c:	d8c01d45 	stb	r3,117(sp)
    d770:	d8801d05 	stb	r2,116(sp)
    d774:	d8001d85 	stb	zero,118(sp)
    d778:	88c00094 	ori	r3,r17,2
    d77c:	80009c16 	blt	r16,zero,d9f0 <___vfiprintf_internal_r+0x1368>
    d780:	00bfdfc4 	movi	r2,-129
    d784:	88a2703a 	and	r17,r17,r2
    d788:	8c400094 	ori	r17,r17,2
    d78c:	002b883a 	mov	r21,zero
    d790:	003f8506 	br	d5a8 <__alt_mem_Onchip_SRAM+0xf800d5a8>
    d794:	b029883a 	mov	r20,r22
    d798:	003c0b06 	br	c7c8 <__alt_mem_Onchip_SRAM+0xf800c7c8>
    d79c:	04e7c83a 	sub	r19,zero,r19
    d7a0:	05400b44 	movi	r21,45
    d7a4:	9804c03a 	cmpne	r2,r19,zero
    d7a8:	0529c83a 	sub	r20,zero,r20
    d7ac:	dd401d85 	stb	r21,118(sp)
    d7b0:	a0a9c83a 	sub	r20,r20,r2
    d7b4:	80009716 	blt	r16,zero,da14 <___vfiprintf_internal_r+0x138c>
    d7b8:	00bfdfc4 	movi	r2,-129
    d7bc:	88a2703a 	and	r17,r17,r2
    d7c0:	003db006 	br	ce84 <__alt_mem_Onchip_SRAM+0xf800ce84>
    d7c4:	b0c00007 	ldb	r3,0(r22)
    d7c8:	003c0c06 	br	c7fc <__alt_mem_Onchip_SRAM+0xf800c7fc>
    d7cc:	8880100c 	andi	r2,r17,64
    d7d0:	d8001d85 	stb	zero,118(sp)
    d7d4:	1000461e 	bne	r2,zero,d8f0 <___vfiprintf_internal_r+0x1268>
    d7d8:	d9002217 	ldw	r4,136(sp)
    d7dc:	0029883a 	mov	r20,zero
    d7e0:	20800104 	addi	r2,r4,4
    d7e4:	24c00017 	ldw	r19,0(r4)
    d7e8:	803df80e 	bge	r16,zero,cfcc <__alt_mem_Onchip_SRAM+0xf800cfcc>
    d7ec:	9d06b03a 	or	r3,r19,r20
    d7f0:	d8802215 	stw	r2,136(sp)
    d7f4:	183d5e1e 	bne	r3,zero,cd70 <__alt_mem_Onchip_SRAM+0xf800cd70>
    d7f8:	002b883a 	mov	r21,zero
    d7fc:	0005883a 	mov	r2,zero
    d800:	003e1006 	br	d044 <__alt_mem_Onchip_SRAM+0xf800d044>
    d804:	8880040c 	andi	r2,r17,16
    d808:	1000321e 	bne	r2,zero,d8d4 <___vfiprintf_internal_r+0x124c>
    d80c:	8c40100c 	andi	r17,r17,64
    d810:	88008d26 	beq	r17,zero,da48 <___vfiprintf_internal_r+0x13c0>
    d814:	d9402217 	ldw	r5,136(sp)
    d818:	d8c02417 	ldw	r3,144(sp)
    d81c:	28800017 	ldw	r2,0(r5)
    d820:	29400104 	addi	r5,r5,4
    d824:	d9402215 	stw	r5,136(sp)
    d828:	10c0000d 	sth	r3,0(r2)
    d82c:	003bca06 	br	c758 <__alt_mem_Onchip_SRAM+0xf800c758>
    d830:	8880100c 	andi	r2,r17,64
    d834:	10003a26 	beq	r2,zero,d920 <___vfiprintf_internal_r+0x1298>
    d838:	d8802217 	ldw	r2,136(sp)
    d83c:	14c0000f 	ldh	r19,0(r2)
    d840:	10800104 	addi	r2,r2,4
    d844:	d8802215 	stw	r2,136(sp)
    d848:	9829d7fa 	srai	r20,r19,31
    d84c:	a005883a 	mov	r2,r20
    d850:	003d8506 	br	ce68 <__alt_mem_Onchip_SRAM+0xf800ce68>
    d854:	8880100c 	andi	r2,r17,64
    d858:	10002b26 	beq	r2,zero,d908 <___vfiprintf_internal_r+0x1280>
    d85c:	d8802217 	ldw	r2,136(sp)
    d860:	0029883a 	mov	r20,zero
    d864:	14c0000b 	ldhu	r19,0(r2)
    d868:	10800104 	addi	r2,r2,4
    d86c:	d8802215 	stw	r2,136(sp)
    d870:	003d5d06 	br	cde8 <__alt_mem_Onchip_SRAM+0xf800cde8>
    d874:	d9402017 	ldw	r5,128(sp)
    d878:	d9002117 	ldw	r4,132(sp)
    d87c:	d9801a04 	addi	r6,sp,104
    d880:	d8c02a15 	stw	r3,168(sp)
    d884:	d9c02b15 	stw	r7,172(sp)
    d888:	000c5740 	call	c574 <__sprint_r.part.0>
    d88c:	d8c02a17 	ldw	r3,168(sp)
    d890:	d9c02b17 	ldw	r7,172(sp)
    d894:	103eb41e 	bne	r2,zero,d368 <__alt_mem_Onchip_SRAM+0xf800d368>
    d898:	d9001b17 	ldw	r4,108(sp)
    d89c:	d8801c17 	ldw	r2,112(sp)
    d8a0:	d811883a 	mov	r8,sp
    d8a4:	21400044 	addi	r5,r4,1
    d8a8:	003e6706 	br	d248 <__alt_mem_Onchip_SRAM+0xf800d248>
    d8ac:	00bfffc4 	movi	r2,-1
    d8b0:	003c4a06 	br	c9dc <__alt_mem_Onchip_SRAM+0xf800c9dc>
    d8b4:	9805883a 	mov	r2,r19
    d8b8:	003ee806 	br	d45c <__alt_mem_Onchip_SRAM+0xf800d45c>
    d8bc:	d8c02217 	ldw	r3,136(sp)
    d8c0:	0029883a 	mov	r20,zero
    d8c4:	18800104 	addi	r2,r3,4
    d8c8:	1cc0000b 	ldhu	r19,0(r3)
    d8cc:	803f9e0e 	bge	r16,zero,d748 <__alt_mem_Onchip_SRAM+0xf800d748>
    d8d0:	003dd706 	br	d030 <__alt_mem_Onchip_SRAM+0xf800d030>
    d8d4:	d8c02217 	ldw	r3,136(sp)
    d8d8:	d9002417 	ldw	r4,144(sp)
    d8dc:	18800017 	ldw	r2,0(r3)
    d8e0:	18c00104 	addi	r3,r3,4
    d8e4:	d8c02215 	stw	r3,136(sp)
    d8e8:	11000015 	stw	r4,0(r2)
    d8ec:	003b9a06 	br	c758 <__alt_mem_Onchip_SRAM+0xf800c758>
    d8f0:	d8c02217 	ldw	r3,136(sp)
    d8f4:	0029883a 	mov	r20,zero
    d8f8:	18800104 	addi	r2,r3,4
    d8fc:	1cc0000b 	ldhu	r19,0(r3)
    d900:	803db20e 	bge	r16,zero,cfcc <__alt_mem_Onchip_SRAM+0xf800cfcc>
    d904:	003fb906 	br	d7ec <__alt_mem_Onchip_SRAM+0xf800d7ec>
    d908:	d9002217 	ldw	r4,136(sp)
    d90c:	0029883a 	mov	r20,zero
    d910:	24c00017 	ldw	r19,0(r4)
    d914:	21000104 	addi	r4,r4,4
    d918:	d9002215 	stw	r4,136(sp)
    d91c:	003d3206 	br	cde8 <__alt_mem_Onchip_SRAM+0xf800cde8>
    d920:	d8c02217 	ldw	r3,136(sp)
    d924:	1cc00017 	ldw	r19,0(r3)
    d928:	18c00104 	addi	r3,r3,4
    d92c:	d8c02215 	stw	r3,136(sp)
    d930:	9829d7fa 	srai	r20,r19,31
    d934:	a005883a 	mov	r2,r20
    d938:	003d4b06 	br	ce68 <__alt_mem_Onchip_SRAM+0xf800ce68>
    d93c:	0009883a 	mov	r4,zero
    d940:	01400044 	movi	r5,1
    d944:	d811883a 	mov	r8,sp
    d948:	003e4f06 	br	d288 <__alt_mem_Onchip_SRAM+0xf800d288>
    d94c:	d8c02215 	stw	r3,136(sp)
    d950:	002b883a 	mov	r21,zero
    d954:	003db806 	br	d038 <__alt_mem_Onchip_SRAM+0xf800d038>
    d958:	d811883a 	mov	r8,sp
    d95c:	003e9606 	br	d3b8 <__alt_mem_Onchip_SRAM+0xf800d3b8>
    d960:	01000074 	movhi	r4,1
    d964:	211b3d04 	addi	r4,r4,27892
    d968:	d9002315 	stw	r4,140(sp)
    d96c:	003e6306 	br	d2fc <__alt_mem_Onchip_SRAM+0xf800d2fc>
    d970:	b0c00043 	ldbu	r3,1(r22)
    d974:	8c400814 	ori	r17,r17,32
    d978:	b5800044 	addi	r22,r22,1
    d97c:	18c03fcc 	andi	r3,r3,255
    d980:	18c0201c 	xori	r3,r3,128
    d984:	18ffe004 	addi	r3,r3,-128
    d988:	003b9c06 	br	c7fc <__alt_mem_Onchip_SRAM+0xf800c7fc>
    d98c:	b809883a 	mov	r4,r23
    d990:	da002a15 	stw	r8,168(sp)
    d994:	00013b80 	call	13b8 <strlen>
    d998:	1029883a 	mov	r20,r2
    d99c:	dd401d83 	ldbu	r21,118(sp)
    d9a0:	df002215 	stw	fp,136(sp)
    d9a4:	0021883a 	mov	r16,zero
    d9a8:	da002a17 	ldw	r8,168(sp)
    d9ac:	003c3906 	br	ca94 <__alt_mem_Onchip_SRAM+0xf800ca94>
    d9b0:	d9402017 	ldw	r5,128(sp)
    d9b4:	d9002117 	ldw	r4,132(sp)
    d9b8:	d9801a04 	addi	r6,sp,104
    d9bc:	000c5740 	call	c574 <__sprint_r.part.0>
    d9c0:	103e691e 	bne	r2,zero,d368 <__alt_mem_Onchip_SRAM+0xf800d368>
    d9c4:	d9001b17 	ldw	r4,108(sp)
    d9c8:	d8801c17 	ldw	r2,112(sp)
    d9cc:	d811883a 	mov	r8,sp
    d9d0:	21400044 	addi	r5,r4,1
    d9d4:	003e2e06 	br	d290 <__alt_mem_Onchip_SRAM+0xf800d290>
    d9d8:	01000074 	movhi	r4,1
    d9dc:	211b4104 	addi	r4,r4,27908
    d9e0:	d9002315 	stw	r4,140(sp)
    d9e4:	d9001b17 	ldw	r4,108(sp)
    d9e8:	21000044 	addi	r4,r4,1
    d9ec:	003c5e06 	br	cb68 <__alt_mem_Onchip_SRAM+0xf800cb68>
    d9f0:	002b883a 	mov	r21,zero
    d9f4:	00800084 	movi	r2,2
    d9f8:	10803fcc 	andi	r2,r2,255
    d9fc:	01000044 	movi	r4,1
    da00:	11002b26 	beq	r2,r4,dab0 <___vfiprintf_internal_r+0x1428>
    da04:	01000084 	movi	r4,2
    da08:	11002b1e 	bne	r2,r4,dab8 <___vfiprintf_internal_r+0x1430>
    da0c:	1823883a 	mov	r17,r3
    da10:	003ee506 	br	d5a8 <__alt_mem_Onchip_SRAM+0xf800d5a8>
    da14:	8807883a 	mov	r3,r17
    da18:	00800044 	movi	r2,1
    da1c:	003ff606 	br	d9f8 <__alt_mem_Onchip_SRAM+0xf800d9f8>
    da20:	00800184 	movi	r2,6
    da24:	1400012e 	bgeu	r2,r16,da2c <___vfiprintf_internal_r+0x13a4>
    da28:	1021883a 	mov	r16,r2
    da2c:	8029883a 	mov	r20,r16
    da30:	8027883a 	mov	r19,r16
    da34:	80002216 	blt	r16,zero,dac0 <___vfiprintf_internal_r+0x1438>
    da38:	05c00074 	movhi	r23,1
    da3c:	df002215 	stw	fp,136(sp)
    da40:	bddad104 	addi	r23,r23,27460
    da44:	003cfb06 	br	ce34 <__alt_mem_Onchip_SRAM+0xf800ce34>
    da48:	d9002217 	ldw	r4,136(sp)
    da4c:	d9402417 	ldw	r5,144(sp)
    da50:	20800017 	ldw	r2,0(r4)
    da54:	21000104 	addi	r4,r4,4
    da58:	d9002215 	stw	r4,136(sp)
    da5c:	11400015 	stw	r5,0(r2)
    da60:	003b3d06 	br	c758 <__alt_mem_Onchip_SRAM+0xf800c758>
    da64:	01400074 	movhi	r5,1
    da68:	295b4104 	addi	r5,r5,27908
    da6c:	d9402315 	stw	r5,140(sp)
    da70:	d9401b17 	ldw	r5,108(sp)
    da74:	29400044 	addi	r5,r5,1
    da78:	003e6d06 	br	d430 <__alt_mem_Onchip_SRAM+0xf800d430>
    da7c:	8029883a 	mov	r20,r16
    da80:	dd401d83 	ldbu	r21,118(sp)
    da84:	df002215 	stw	fp,136(sp)
    da88:	0021883a 	mov	r16,zero
    da8c:	003c0106 	br	ca94 <__alt_mem_Onchip_SRAM+0xf800ca94>
    da90:	00c00074 	movhi	r3,1
    da94:	18db3d04 	addi	r3,r3,27892
    da98:	d8c02315 	stw	r3,140(sp)
    da9c:	280d883a 	mov	r6,r5
    daa0:	003c6906 	br	cc48 <__alt_mem_Onchip_SRAM+0xf800cc48>
    daa4:	802d883a 	mov	r22,r16
    daa8:	0021883a 	mov	r16,zero
    daac:	003b5406 	br	c800 <__alt_mem_Onchip_SRAM+0xf800c800>
    dab0:	1823883a 	mov	r17,r3
    dab4:	003cf306 	br	ce84 <__alt_mem_Onchip_SRAM+0xf800ce84>
    dab8:	1823883a 	mov	r17,r3
    dabc:	003cad06 	br	cd74 <__alt_mem_Onchip_SRAM+0xf800cd74>
    dac0:	0027883a 	mov	r19,zero
    dac4:	003fdc06 	br	da38 <__alt_mem_Onchip_SRAM+0xf800da38>
    dac8:	d9402217 	ldw	r5,136(sp)
    dacc:	8005883a 	mov	r2,r16
    dad0:	b0c00043 	ldbu	r3,1(r22)
    dad4:	2c000017 	ldw	r16,0(r5)
    dad8:	29000104 	addi	r4,r5,4
    dadc:	d9002215 	stw	r4,136(sp)
    dae0:	102d883a 	mov	r22,r2
    dae4:	803fa50e 	bge	r16,zero,d97c <__alt_mem_Onchip_SRAM+0xf800d97c>
    dae8:	18c03fcc 	andi	r3,r3,255
    daec:	18c0201c 	xori	r3,r3,128
    daf0:	043fffc4 	movi	r16,-1
    daf4:	18ffe004 	addi	r3,r3,-128
    daf8:	003b4006 	br	c7fc <__alt_mem_Onchip_SRAM+0xf800c7fc>
    dafc:	d9402303 	ldbu	r5,140(sp)
    db00:	d9401d85 	stb	r5,118(sp)
    db04:	003cae06 	br	cdc0 <__alt_mem_Onchip_SRAM+0xf800cdc0>
    db08:	d8c02303 	ldbu	r3,140(sp)
    db0c:	d8c01d85 	stb	r3,118(sp)
    db10:	003d1406 	br	cf64 <__alt_mem_Onchip_SRAM+0xf800cf64>
    db14:	d8c02303 	ldbu	r3,140(sp)
    db18:	d8c01d85 	stb	r3,118(sp)
    db1c:	003cca06 	br	ce48 <__alt_mem_Onchip_SRAM+0xf800ce48>
    db20:	8880004c 	andi	r2,r17,1
    db24:	002b883a 	mov	r21,zero
    db28:	10000526 	beq	r2,zero,db40 <___vfiprintf_internal_r+0x14b8>
    db2c:	00800c04 	movi	r2,48
    db30:	d88019c5 	stb	r2,103(sp)
    db34:	dd002817 	ldw	r20,160(sp)
    db38:	ddc019c4 	addi	r23,sp,103
    db3c:	003bd506 	br	ca94 <__alt_mem_Onchip_SRAM+0xf800ca94>
    db40:	0029883a 	mov	r20,zero
    db44:	ddc01a04 	addi	r23,sp,104
    db48:	003bd206 	br	ca94 <__alt_mem_Onchip_SRAM+0xf800ca94>
    db4c:	d9002303 	ldbu	r4,140(sp)
    db50:	d9001d85 	stb	r4,118(sp)
    db54:	003da606 	br	d1f0 <__alt_mem_Onchip_SRAM+0xf800d1f0>
    db58:	d8c02303 	ldbu	r3,140(sp)
    db5c:	d8c01d85 	stb	r3,118(sp)
    db60:	003c7606 	br	cd3c <__alt_mem_Onchip_SRAM+0xf800cd3c>
    db64:	d8c02303 	ldbu	r3,140(sp)
    db68:	d8c01d85 	stb	r3,118(sp)
    db6c:	003c6506 	br	cd04 <__alt_mem_Onchip_SRAM+0xf800cd04>
    db70:	d9002303 	ldbu	r4,140(sp)
    db74:	d9001d85 	stb	r4,118(sp)
    db78:	003d3d06 	br	d070 <__alt_mem_Onchip_SRAM+0xf800d070>
    db7c:	d8c02303 	ldbu	r3,140(sp)
    db80:	d8c01d85 	stb	r3,118(sp)
    db84:	003d1d06 	br	cffc <__alt_mem_Onchip_SRAM+0xf800cffc>
    db88:	d8c02303 	ldbu	r3,140(sp)
    db8c:	d8c01d85 	stb	r3,118(sp)
    db90:	003d0306 	br	cfa0 <__alt_mem_Onchip_SRAM+0xf800cfa0>

0000db94 <__vfiprintf_internal>:
    db94:	008000b4 	movhi	r2,2
    db98:	10a24904 	addi	r2,r2,-30428
    db9c:	300f883a 	mov	r7,r6
    dba0:	280d883a 	mov	r6,r5
    dba4:	200b883a 	mov	r5,r4
    dba8:	11000017 	ldw	r4,0(r2)
    dbac:	000c6881 	jmpi	c688 <___vfiprintf_internal_r>

0000dbb0 <__sbprintf>:
    dbb0:	2880030b 	ldhu	r2,12(r5)
    dbb4:	2ac01917 	ldw	r11,100(r5)
    dbb8:	2a80038b 	ldhu	r10,14(r5)
    dbbc:	2a400717 	ldw	r9,28(r5)
    dbc0:	2a000917 	ldw	r8,36(r5)
    dbc4:	defee204 	addi	sp,sp,-1144
    dbc8:	00c10004 	movi	r3,1024
    dbcc:	dc011a15 	stw	r16,1128(sp)
    dbd0:	10bfff4c 	andi	r2,r2,65533
    dbd4:	2821883a 	mov	r16,r5
    dbd8:	d8cb883a 	add	r5,sp,r3
    dbdc:	dc811c15 	stw	r18,1136(sp)
    dbe0:	dc411b15 	stw	r17,1132(sp)
    dbe4:	dfc11d15 	stw	ra,1140(sp)
    dbe8:	2025883a 	mov	r18,r4
    dbec:	d881030d 	sth	r2,1036(sp)
    dbf0:	dac11915 	stw	r11,1124(sp)
    dbf4:	da81038d 	sth	r10,1038(sp)
    dbf8:	da410715 	stw	r9,1052(sp)
    dbfc:	da010915 	stw	r8,1060(sp)
    dc00:	dec10015 	stw	sp,1024(sp)
    dc04:	dec10415 	stw	sp,1040(sp)
    dc08:	d8c10215 	stw	r3,1032(sp)
    dc0c:	d8c10515 	stw	r3,1044(sp)
    dc10:	d8010615 	stw	zero,1048(sp)
    dc14:	000c6880 	call	c688 <___vfiprintf_internal_r>
    dc18:	1023883a 	mov	r17,r2
    dc1c:	10000416 	blt	r2,zero,dc30 <__sbprintf+0x80>
    dc20:	d9410004 	addi	r5,sp,1024
    dc24:	9009883a 	mov	r4,r18
    dc28:	00077300 	call	7730 <_fflush_r>
    dc2c:	10000d1e 	bne	r2,zero,dc64 <__sbprintf+0xb4>
    dc30:	d881030b 	ldhu	r2,1036(sp)
    dc34:	1080100c 	andi	r2,r2,64
    dc38:	10000326 	beq	r2,zero,dc48 <__sbprintf+0x98>
    dc3c:	8080030b 	ldhu	r2,12(r16)
    dc40:	10801014 	ori	r2,r2,64
    dc44:	8080030d 	sth	r2,12(r16)
    dc48:	8805883a 	mov	r2,r17
    dc4c:	dfc11d17 	ldw	ra,1140(sp)
    dc50:	dc811c17 	ldw	r18,1136(sp)
    dc54:	dc411b17 	ldw	r17,1132(sp)
    dc58:	dc011a17 	ldw	r16,1128(sp)
    dc5c:	dec11e04 	addi	sp,sp,1144
    dc60:	f800283a 	ret
    dc64:	047fffc4 	movi	r17,-1
    dc68:	003ff106 	br	dc30 <__alt_mem_Onchip_SRAM+0xf800dc30>

0000dc6c <__swbuf_r>:
    dc6c:	defffb04 	addi	sp,sp,-20
    dc70:	dcc00315 	stw	r19,12(sp)
    dc74:	dc800215 	stw	r18,8(sp)
    dc78:	dc000015 	stw	r16,0(sp)
    dc7c:	dfc00415 	stw	ra,16(sp)
    dc80:	dc400115 	stw	r17,4(sp)
    dc84:	2025883a 	mov	r18,r4
    dc88:	2827883a 	mov	r19,r5
    dc8c:	3021883a 	mov	r16,r6
    dc90:	20000226 	beq	r4,zero,dc9c <__swbuf_r+0x30>
    dc94:	20800e17 	ldw	r2,56(r4)
    dc98:	10004226 	beq	r2,zero,dda4 <__swbuf_r+0x138>
    dc9c:	80800617 	ldw	r2,24(r16)
    dca0:	8100030b 	ldhu	r4,12(r16)
    dca4:	80800215 	stw	r2,8(r16)
    dca8:	2080020c 	andi	r2,r4,8
    dcac:	10003626 	beq	r2,zero,dd88 <__swbuf_r+0x11c>
    dcb0:	80c00417 	ldw	r3,16(r16)
    dcb4:	18003426 	beq	r3,zero,dd88 <__swbuf_r+0x11c>
    dcb8:	2088000c 	andi	r2,r4,8192
    dcbc:	9c403fcc 	andi	r17,r19,255
    dcc0:	10001a26 	beq	r2,zero,dd2c <__swbuf_r+0xc0>
    dcc4:	80800017 	ldw	r2,0(r16)
    dcc8:	81000517 	ldw	r4,20(r16)
    dccc:	10c7c83a 	sub	r3,r2,r3
    dcd0:	1900200e 	bge	r3,r4,dd54 <__swbuf_r+0xe8>
    dcd4:	18c00044 	addi	r3,r3,1
    dcd8:	81000217 	ldw	r4,8(r16)
    dcdc:	11400044 	addi	r5,r2,1
    dce0:	81400015 	stw	r5,0(r16)
    dce4:	213fffc4 	addi	r4,r4,-1
    dce8:	81000215 	stw	r4,8(r16)
    dcec:	14c00005 	stb	r19,0(r2)
    dcf0:	80800517 	ldw	r2,20(r16)
    dcf4:	10c01e26 	beq	r2,r3,dd70 <__swbuf_r+0x104>
    dcf8:	8080030b 	ldhu	r2,12(r16)
    dcfc:	1080004c 	andi	r2,r2,1
    dd00:	10000226 	beq	r2,zero,dd0c <__swbuf_r+0xa0>
    dd04:	00800284 	movi	r2,10
    dd08:	88801926 	beq	r17,r2,dd70 <__swbuf_r+0x104>
    dd0c:	8805883a 	mov	r2,r17
    dd10:	dfc00417 	ldw	ra,16(sp)
    dd14:	dcc00317 	ldw	r19,12(sp)
    dd18:	dc800217 	ldw	r18,8(sp)
    dd1c:	dc400117 	ldw	r17,4(sp)
    dd20:	dc000017 	ldw	r16,0(sp)
    dd24:	dec00504 	addi	sp,sp,20
    dd28:	f800283a 	ret
    dd2c:	81401917 	ldw	r5,100(r16)
    dd30:	00b7ffc4 	movi	r2,-8193
    dd34:	21080014 	ori	r4,r4,8192
    dd38:	2884703a 	and	r2,r5,r2
    dd3c:	80801915 	stw	r2,100(r16)
    dd40:	80800017 	ldw	r2,0(r16)
    dd44:	8100030d 	sth	r4,12(r16)
    dd48:	81000517 	ldw	r4,20(r16)
    dd4c:	10c7c83a 	sub	r3,r2,r3
    dd50:	193fe016 	blt	r3,r4,dcd4 <__alt_mem_Onchip_SRAM+0xf800dcd4>
    dd54:	800b883a 	mov	r5,r16
    dd58:	9009883a 	mov	r4,r18
    dd5c:	00077300 	call	7730 <_fflush_r>
    dd60:	1000071e 	bne	r2,zero,dd80 <__swbuf_r+0x114>
    dd64:	80800017 	ldw	r2,0(r16)
    dd68:	00c00044 	movi	r3,1
    dd6c:	003fda06 	br	dcd8 <__alt_mem_Onchip_SRAM+0xf800dcd8>
    dd70:	800b883a 	mov	r5,r16
    dd74:	9009883a 	mov	r4,r18
    dd78:	00077300 	call	7730 <_fflush_r>
    dd7c:	103fe326 	beq	r2,zero,dd0c <__alt_mem_Onchip_SRAM+0xf800dd0c>
    dd80:	00bfffc4 	movi	r2,-1
    dd84:	003fe206 	br	dd10 <__alt_mem_Onchip_SRAM+0xf800dd10>
    dd88:	800b883a 	mov	r5,r16
    dd8c:	9009883a 	mov	r4,r18
    dd90:	0005b100 	call	5b10 <__swsetup_r>
    dd94:	103ffa1e 	bne	r2,zero,dd80 <__alt_mem_Onchip_SRAM+0xf800dd80>
    dd98:	8100030b 	ldhu	r4,12(r16)
    dd9c:	80c00417 	ldw	r3,16(r16)
    dda0:	003fc506 	br	dcb8 <__alt_mem_Onchip_SRAM+0xf800dcb8>
    dda4:	0007b1c0 	call	7b1c <__sinit>
    dda8:	003fbc06 	br	dc9c <__alt_mem_Onchip_SRAM+0xf800dc9c>

0000ddac <__swbuf>:
    ddac:	008000b4 	movhi	r2,2
    ddb0:	10a24904 	addi	r2,r2,-30428
    ddb4:	280d883a 	mov	r6,r5
    ddb8:	200b883a 	mov	r5,r4
    ddbc:	11000017 	ldw	r4,0(r2)
    ddc0:	000dc6c1 	jmpi	dc6c <__swbuf_r>

0000ddc4 <_write_r>:
    ddc4:	defffd04 	addi	sp,sp,-12
    ddc8:	2805883a 	mov	r2,r5
    ddcc:	dc000015 	stw	r16,0(sp)
    ddd0:	040000b4 	movhi	r16,2
    ddd4:	dc400115 	stw	r17,4(sp)
    ddd8:	300b883a 	mov	r5,r6
    dddc:	84294e04 	addi	r16,r16,-23240
    dde0:	2023883a 	mov	r17,r4
    dde4:	380d883a 	mov	r6,r7
    dde8:	1009883a 	mov	r4,r2
    ddec:	dfc00215 	stw	ra,8(sp)
    ddf0:	80000015 	stw	zero,0(r16)
    ddf4:	00126f00 	call	126f0 <write>
    ddf8:	00ffffc4 	movi	r3,-1
    ddfc:	10c00526 	beq	r2,r3,de14 <_write_r+0x50>
    de00:	dfc00217 	ldw	ra,8(sp)
    de04:	dc400117 	ldw	r17,4(sp)
    de08:	dc000017 	ldw	r16,0(sp)
    de0c:	dec00304 	addi	sp,sp,12
    de10:	f800283a 	ret
    de14:	80c00017 	ldw	r3,0(r16)
    de18:	183ff926 	beq	r3,zero,de00 <__alt_mem_Onchip_SRAM+0xf800de00>
    de1c:	88c00015 	stw	r3,0(r17)
    de20:	003ff706 	br	de00 <__alt_mem_Onchip_SRAM+0xf800de00>

0000de24 <_close_r>:
    de24:	defffd04 	addi	sp,sp,-12
    de28:	dc000015 	stw	r16,0(sp)
    de2c:	040000b4 	movhi	r16,2
    de30:	dc400115 	stw	r17,4(sp)
    de34:	84294e04 	addi	r16,r16,-23240
    de38:	2023883a 	mov	r17,r4
    de3c:	2809883a 	mov	r4,r5
    de40:	dfc00215 	stw	ra,8(sp)
    de44:	80000015 	stw	zero,0(r16)
    de48:	0011b000 	call	11b00 <close>
    de4c:	00ffffc4 	movi	r3,-1
    de50:	10c00526 	beq	r2,r3,de68 <_close_r+0x44>
    de54:	dfc00217 	ldw	ra,8(sp)
    de58:	dc400117 	ldw	r17,4(sp)
    de5c:	dc000017 	ldw	r16,0(sp)
    de60:	dec00304 	addi	sp,sp,12
    de64:	f800283a 	ret
    de68:	80c00017 	ldw	r3,0(r16)
    de6c:	183ff926 	beq	r3,zero,de54 <__alt_mem_Onchip_SRAM+0xf800de54>
    de70:	88c00015 	stw	r3,0(r17)
    de74:	003ff706 	br	de54 <__alt_mem_Onchip_SRAM+0xf800de54>

0000de78 <_calloc_r>:
    de78:	defffe04 	addi	sp,sp,-8
    de7c:	2805883a 	mov	r2,r5
    de80:	dc000015 	stw	r16,0(sp)
    de84:	300b883a 	mov	r5,r6
    de88:	2021883a 	mov	r16,r4
    de8c:	1009883a 	mov	r4,r2
    de90:	dfc00115 	stw	ra,4(sp)
    de94:	0000ef80 	call	ef8 <__mulsi3>
    de98:	100b883a 	mov	r5,r2
    de9c:	8009883a 	mov	r4,r16
    dea0:	00088e40 	call	88e4 <_malloc_r>
    dea4:	10002926 	beq	r2,zero,df4c <_calloc_r+0xd4>
    dea8:	11bfff17 	ldw	r6,-4(r2)
    deac:	1021883a 	mov	r16,r2
    deb0:	00bfff04 	movi	r2,-4
    deb4:	308c703a 	and	r6,r6,r2
    deb8:	00c00904 	movi	r3,36
    debc:	308d883a 	add	r6,r6,r2
    dec0:	19801636 	bltu	r3,r6,df1c <_calloc_r+0xa4>
    dec4:	008004c4 	movi	r2,19
    dec8:	11800b2e 	bgeu	r2,r6,def8 <_calloc_r+0x80>
    decc:	80000015 	stw	zero,0(r16)
    ded0:	80000115 	stw	zero,4(r16)
    ded4:	008006c4 	movi	r2,27
    ded8:	11801a2e 	bgeu	r2,r6,df44 <_calloc_r+0xcc>
    dedc:	80000215 	stw	zero,8(r16)
    dee0:	80000315 	stw	zero,12(r16)
    dee4:	30c0151e 	bne	r6,r3,df3c <_calloc_r+0xc4>
    dee8:	80000415 	stw	zero,16(r16)
    deec:	80800604 	addi	r2,r16,24
    def0:	80000515 	stw	zero,20(r16)
    def4:	00000106 	br	defc <_calloc_r+0x84>
    def8:	8005883a 	mov	r2,r16
    defc:	10000015 	stw	zero,0(r2)
    df00:	10000115 	stw	zero,4(r2)
    df04:	10000215 	stw	zero,8(r2)
    df08:	8005883a 	mov	r2,r16
    df0c:	dfc00117 	ldw	ra,4(sp)
    df10:	dc000017 	ldw	r16,0(sp)
    df14:	dec00204 	addi	sp,sp,8
    df18:	f800283a 	ret
    df1c:	000b883a 	mov	r5,zero
    df20:	8009883a 	mov	r4,r16
    df24:	00094780 	call	9478 <memset>
    df28:	8005883a 	mov	r2,r16
    df2c:	dfc00117 	ldw	ra,4(sp)
    df30:	dc000017 	ldw	r16,0(sp)
    df34:	dec00204 	addi	sp,sp,8
    df38:	f800283a 	ret
    df3c:	80800404 	addi	r2,r16,16
    df40:	003fee06 	br	defc <__alt_mem_Onchip_SRAM+0xf800defc>
    df44:	80800204 	addi	r2,r16,8
    df48:	003fec06 	br	defc <__alt_mem_Onchip_SRAM+0xf800defc>
    df4c:	0005883a 	mov	r2,zero
    df50:	003fee06 	br	df0c <__alt_mem_Onchip_SRAM+0xf800df0c>

0000df54 <_fclose_r>:
    df54:	28003926 	beq	r5,zero,e03c <_fclose_r+0xe8>
    df58:	defffc04 	addi	sp,sp,-16
    df5c:	dc400115 	stw	r17,4(sp)
    df60:	dc000015 	stw	r16,0(sp)
    df64:	dfc00315 	stw	ra,12(sp)
    df68:	dc800215 	stw	r18,8(sp)
    df6c:	2023883a 	mov	r17,r4
    df70:	2821883a 	mov	r16,r5
    df74:	20000226 	beq	r4,zero,df80 <_fclose_r+0x2c>
    df78:	20800e17 	ldw	r2,56(r4)
    df7c:	10002726 	beq	r2,zero,e01c <_fclose_r+0xc8>
    df80:	8080030f 	ldh	r2,12(r16)
    df84:	1000071e 	bne	r2,zero,dfa4 <_fclose_r+0x50>
    df88:	0005883a 	mov	r2,zero
    df8c:	dfc00317 	ldw	ra,12(sp)
    df90:	dc800217 	ldw	r18,8(sp)
    df94:	dc400117 	ldw	r17,4(sp)
    df98:	dc000017 	ldw	r16,0(sp)
    df9c:	dec00404 	addi	sp,sp,16
    dfa0:	f800283a 	ret
    dfa4:	800b883a 	mov	r5,r16
    dfa8:	8809883a 	mov	r4,r17
    dfac:	00075140 	call	7514 <__sflush_r>
    dfb0:	1025883a 	mov	r18,r2
    dfb4:	80800b17 	ldw	r2,44(r16)
    dfb8:	10000426 	beq	r2,zero,dfcc <_fclose_r+0x78>
    dfbc:	81400717 	ldw	r5,28(r16)
    dfc0:	8809883a 	mov	r4,r17
    dfc4:	103ee83a 	callr	r2
    dfc8:	10001616 	blt	r2,zero,e024 <_fclose_r+0xd0>
    dfcc:	8080030b 	ldhu	r2,12(r16)
    dfd0:	1080200c 	andi	r2,r2,128
    dfd4:	1000151e 	bne	r2,zero,e02c <_fclose_r+0xd8>
    dfd8:	81400c17 	ldw	r5,48(r16)
    dfdc:	28000526 	beq	r5,zero,dff4 <_fclose_r+0xa0>
    dfe0:	80801004 	addi	r2,r16,64
    dfe4:	28800226 	beq	r5,r2,dff0 <_fclose_r+0x9c>
    dfe8:	8809883a 	mov	r4,r17
    dfec:	0007c900 	call	7c90 <_free_r>
    dff0:	80000c15 	stw	zero,48(r16)
    dff4:	81401117 	ldw	r5,68(r16)
    dff8:	28000326 	beq	r5,zero,e008 <_fclose_r+0xb4>
    dffc:	8809883a 	mov	r4,r17
    e000:	0007c900 	call	7c90 <_free_r>
    e004:	80001115 	stw	zero,68(r16)
    e008:	0007b2c0 	call	7b2c <__sfp_lock_acquire>
    e00c:	8000030d 	sth	zero,12(r16)
    e010:	0007b300 	call	7b30 <__sfp_lock_release>
    e014:	9005883a 	mov	r2,r18
    e018:	003fdc06 	br	df8c <__alt_mem_Onchip_SRAM+0xf800df8c>
    e01c:	0007b1c0 	call	7b1c <__sinit>
    e020:	003fd706 	br	df80 <__alt_mem_Onchip_SRAM+0xf800df80>
    e024:	04bfffc4 	movi	r18,-1
    e028:	003fe806 	br	dfcc <__alt_mem_Onchip_SRAM+0xf800dfcc>
    e02c:	81400417 	ldw	r5,16(r16)
    e030:	8809883a 	mov	r4,r17
    e034:	0007c900 	call	7c90 <_free_r>
    e038:	003fe706 	br	dfd8 <__alt_mem_Onchip_SRAM+0xf800dfd8>
    e03c:	0005883a 	mov	r2,zero
    e040:	f800283a 	ret

0000e044 <fclose>:
    e044:	008000b4 	movhi	r2,2
    e048:	10a24904 	addi	r2,r2,-30428
    e04c:	200b883a 	mov	r5,r4
    e050:	11000017 	ldw	r4,0(r2)
    e054:	000df541 	jmpi	df54 <_fclose_r>

0000e058 <__fputwc>:
    e058:	defff804 	addi	sp,sp,-32
    e05c:	dcc00415 	stw	r19,16(sp)
    e060:	dc800315 	stw	r18,12(sp)
    e064:	dc000115 	stw	r16,4(sp)
    e068:	dfc00715 	stw	ra,28(sp)
    e06c:	dd400615 	stw	r21,24(sp)
    e070:	dd000515 	stw	r20,20(sp)
    e074:	dc400215 	stw	r17,8(sp)
    e078:	2027883a 	mov	r19,r4
    e07c:	2825883a 	mov	r18,r5
    e080:	3021883a 	mov	r16,r6
    e084:	00086d40 	call	86d4 <__locale_mb_cur_max>
    e088:	00c00044 	movi	r3,1
    e08c:	10c03e26 	beq	r2,r3,e188 <__fputwc+0x130>
    e090:	81c01704 	addi	r7,r16,92
    e094:	900d883a 	mov	r6,r18
    e098:	d80b883a 	mov	r5,sp
    e09c:	9809883a 	mov	r4,r19
    e0a0:	000e3d00 	call	e3d0 <_wcrtomb_r>
    e0a4:	1029883a 	mov	r20,r2
    e0a8:	00bfffc4 	movi	r2,-1
    e0ac:	a0802026 	beq	r20,r2,e130 <__fputwc+0xd8>
    e0b0:	d9400003 	ldbu	r5,0(sp)
    e0b4:	a0001c26 	beq	r20,zero,e128 <__fputwc+0xd0>
    e0b8:	0023883a 	mov	r17,zero
    e0bc:	05400284 	movi	r21,10
    e0c0:	00000906 	br	e0e8 <__fputwc+0x90>
    e0c4:	80800017 	ldw	r2,0(r16)
    e0c8:	11400005 	stb	r5,0(r2)
    e0cc:	80c00017 	ldw	r3,0(r16)
    e0d0:	18c00044 	addi	r3,r3,1
    e0d4:	80c00015 	stw	r3,0(r16)
    e0d8:	8c400044 	addi	r17,r17,1
    e0dc:	dc45883a 	add	r2,sp,r17
    e0e0:	8d00112e 	bgeu	r17,r20,e128 <__fputwc+0xd0>
    e0e4:	11400003 	ldbu	r5,0(r2)
    e0e8:	80c00217 	ldw	r3,8(r16)
    e0ec:	18ffffc4 	addi	r3,r3,-1
    e0f0:	80c00215 	stw	r3,8(r16)
    e0f4:	183ff30e 	bge	r3,zero,e0c4 <__alt_mem_Onchip_SRAM+0xf800e0c4>
    e0f8:	80800617 	ldw	r2,24(r16)
    e0fc:	18801916 	blt	r3,r2,e164 <__fputwc+0x10c>
    e100:	80800017 	ldw	r2,0(r16)
    e104:	11400005 	stb	r5,0(r2)
    e108:	80800017 	ldw	r2,0(r16)
    e10c:	10c00003 	ldbu	r3,0(r2)
    e110:	10800044 	addi	r2,r2,1
    e114:	1d402326 	beq	r3,r21,e1a4 <__fputwc+0x14c>
    e118:	80800015 	stw	r2,0(r16)
    e11c:	8c400044 	addi	r17,r17,1
    e120:	dc45883a 	add	r2,sp,r17
    e124:	8d3fef36 	bltu	r17,r20,e0e4 <__alt_mem_Onchip_SRAM+0xf800e0e4>
    e128:	9005883a 	mov	r2,r18
    e12c:	00000406 	br	e140 <__fputwc+0xe8>
    e130:	80c0030b 	ldhu	r3,12(r16)
    e134:	a005883a 	mov	r2,r20
    e138:	18c01014 	ori	r3,r3,64
    e13c:	80c0030d 	sth	r3,12(r16)
    e140:	dfc00717 	ldw	ra,28(sp)
    e144:	dd400617 	ldw	r21,24(sp)
    e148:	dd000517 	ldw	r20,20(sp)
    e14c:	dcc00417 	ldw	r19,16(sp)
    e150:	dc800317 	ldw	r18,12(sp)
    e154:	dc400217 	ldw	r17,8(sp)
    e158:	dc000117 	ldw	r16,4(sp)
    e15c:	dec00804 	addi	sp,sp,32
    e160:	f800283a 	ret
    e164:	800d883a 	mov	r6,r16
    e168:	29403fcc 	andi	r5,r5,255
    e16c:	9809883a 	mov	r4,r19
    e170:	000dc6c0 	call	dc6c <__swbuf_r>
    e174:	10bfffe0 	cmpeqi	r2,r2,-1
    e178:	10803fcc 	andi	r2,r2,255
    e17c:	103fd626 	beq	r2,zero,e0d8 <__alt_mem_Onchip_SRAM+0xf800e0d8>
    e180:	00bfffc4 	movi	r2,-1
    e184:	003fee06 	br	e140 <__alt_mem_Onchip_SRAM+0xf800e140>
    e188:	90ffffc4 	addi	r3,r18,-1
    e18c:	01003f84 	movi	r4,254
    e190:	20ffbf36 	bltu	r4,r3,e090 <__alt_mem_Onchip_SRAM+0xf800e090>
    e194:	900b883a 	mov	r5,r18
    e198:	dc800005 	stb	r18,0(sp)
    e19c:	1029883a 	mov	r20,r2
    e1a0:	003fc506 	br	e0b8 <__alt_mem_Onchip_SRAM+0xf800e0b8>
    e1a4:	800d883a 	mov	r6,r16
    e1a8:	a80b883a 	mov	r5,r21
    e1ac:	9809883a 	mov	r4,r19
    e1b0:	000dc6c0 	call	dc6c <__swbuf_r>
    e1b4:	10bfffe0 	cmpeqi	r2,r2,-1
    e1b8:	003fef06 	br	e178 <__alt_mem_Onchip_SRAM+0xf800e178>

0000e1bc <_fputwc_r>:
    e1bc:	3080030b 	ldhu	r2,12(r6)
    e1c0:	10c8000c 	andi	r3,r2,8192
    e1c4:	1800051e 	bne	r3,zero,e1dc <_fputwc_r+0x20>
    e1c8:	30c01917 	ldw	r3,100(r6)
    e1cc:	10880014 	ori	r2,r2,8192
    e1d0:	3080030d 	sth	r2,12(r6)
    e1d4:	18880014 	ori	r2,r3,8192
    e1d8:	30801915 	stw	r2,100(r6)
    e1dc:	000e0581 	jmpi	e058 <__fputwc>

0000e1e0 <fputwc>:
    e1e0:	008000b4 	movhi	r2,2
    e1e4:	defffc04 	addi	sp,sp,-16
    e1e8:	10a24904 	addi	r2,r2,-30428
    e1ec:	dc000115 	stw	r16,4(sp)
    e1f0:	14000017 	ldw	r16,0(r2)
    e1f4:	dc400215 	stw	r17,8(sp)
    e1f8:	dfc00315 	stw	ra,12(sp)
    e1fc:	2023883a 	mov	r17,r4
    e200:	80000226 	beq	r16,zero,e20c <fputwc+0x2c>
    e204:	80800e17 	ldw	r2,56(r16)
    e208:	10001026 	beq	r2,zero,e24c <fputwc+0x6c>
    e20c:	2880030b 	ldhu	r2,12(r5)
    e210:	10c8000c 	andi	r3,r2,8192
    e214:	1800051e 	bne	r3,zero,e22c <fputwc+0x4c>
    e218:	28c01917 	ldw	r3,100(r5)
    e21c:	10880014 	ori	r2,r2,8192
    e220:	2880030d 	sth	r2,12(r5)
    e224:	18880014 	ori	r2,r3,8192
    e228:	28801915 	stw	r2,100(r5)
    e22c:	280d883a 	mov	r6,r5
    e230:	8009883a 	mov	r4,r16
    e234:	880b883a 	mov	r5,r17
    e238:	dfc00317 	ldw	ra,12(sp)
    e23c:	dc400217 	ldw	r17,8(sp)
    e240:	dc000117 	ldw	r16,4(sp)
    e244:	dec00404 	addi	sp,sp,16
    e248:	000e0581 	jmpi	e058 <__fputwc>
    e24c:	8009883a 	mov	r4,r16
    e250:	d9400015 	stw	r5,0(sp)
    e254:	0007b1c0 	call	7b1c <__sinit>
    e258:	d9400017 	ldw	r5,0(sp)
    e25c:	003feb06 	br	e20c <__alt_mem_Onchip_SRAM+0xf800e20c>

0000e260 <_fstat_r>:
    e260:	defffd04 	addi	sp,sp,-12
    e264:	2805883a 	mov	r2,r5
    e268:	dc000015 	stw	r16,0(sp)
    e26c:	040000b4 	movhi	r16,2
    e270:	dc400115 	stw	r17,4(sp)
    e274:	84294e04 	addi	r16,r16,-23240
    e278:	2023883a 	mov	r17,r4
    e27c:	300b883a 	mov	r5,r6
    e280:	1009883a 	mov	r4,r2
    e284:	dfc00215 	stw	ra,8(sp)
    e288:	80000015 	stw	zero,0(r16)
    e28c:	0011c400 	call	11c40 <fstat>
    e290:	00ffffc4 	movi	r3,-1
    e294:	10c00526 	beq	r2,r3,e2ac <_fstat_r+0x4c>
    e298:	dfc00217 	ldw	ra,8(sp)
    e29c:	dc400117 	ldw	r17,4(sp)
    e2a0:	dc000017 	ldw	r16,0(sp)
    e2a4:	dec00304 	addi	sp,sp,12
    e2a8:	f800283a 	ret
    e2ac:	80c00017 	ldw	r3,0(r16)
    e2b0:	183ff926 	beq	r3,zero,e298 <__alt_mem_Onchip_SRAM+0xf800e298>
    e2b4:	88c00015 	stw	r3,0(r17)
    e2b8:	003ff706 	br	e298 <__alt_mem_Onchip_SRAM+0xf800e298>

0000e2bc <_isatty_r>:
    e2bc:	defffd04 	addi	sp,sp,-12
    e2c0:	dc000015 	stw	r16,0(sp)
    e2c4:	040000b4 	movhi	r16,2
    e2c8:	dc400115 	stw	r17,4(sp)
    e2cc:	84294e04 	addi	r16,r16,-23240
    e2d0:	2023883a 	mov	r17,r4
    e2d4:	2809883a 	mov	r4,r5
    e2d8:	dfc00215 	stw	ra,8(sp)
    e2dc:	80000015 	stw	zero,0(r16)
    e2e0:	0011f280 	call	11f28 <isatty>
    e2e4:	00ffffc4 	movi	r3,-1
    e2e8:	10c00526 	beq	r2,r3,e300 <_isatty_r+0x44>
    e2ec:	dfc00217 	ldw	ra,8(sp)
    e2f0:	dc400117 	ldw	r17,4(sp)
    e2f4:	dc000017 	ldw	r16,0(sp)
    e2f8:	dec00304 	addi	sp,sp,12
    e2fc:	f800283a 	ret
    e300:	80c00017 	ldw	r3,0(r16)
    e304:	183ff926 	beq	r3,zero,e2ec <__alt_mem_Onchip_SRAM+0xf800e2ec>
    e308:	88c00015 	stw	r3,0(r17)
    e30c:	003ff706 	br	e2ec <__alt_mem_Onchip_SRAM+0xf800e2ec>

0000e310 <_lseek_r>:
    e310:	defffd04 	addi	sp,sp,-12
    e314:	2805883a 	mov	r2,r5
    e318:	dc000015 	stw	r16,0(sp)
    e31c:	040000b4 	movhi	r16,2
    e320:	dc400115 	stw	r17,4(sp)
    e324:	300b883a 	mov	r5,r6
    e328:	84294e04 	addi	r16,r16,-23240
    e32c:	2023883a 	mov	r17,r4
    e330:	380d883a 	mov	r6,r7
    e334:	1009883a 	mov	r4,r2
    e338:	dfc00215 	stw	ra,8(sp)
    e33c:	80000015 	stw	zero,0(r16)
    e340:	00120fc0 	call	120fc <lseek>
    e344:	00ffffc4 	movi	r3,-1
    e348:	10c00526 	beq	r2,r3,e360 <_lseek_r+0x50>
    e34c:	dfc00217 	ldw	ra,8(sp)
    e350:	dc400117 	ldw	r17,4(sp)
    e354:	dc000017 	ldw	r16,0(sp)
    e358:	dec00304 	addi	sp,sp,12
    e35c:	f800283a 	ret
    e360:	80c00017 	ldw	r3,0(r16)
    e364:	183ff926 	beq	r3,zero,e34c <__alt_mem_Onchip_SRAM+0xf800e34c>
    e368:	88c00015 	stw	r3,0(r17)
    e36c:	003ff706 	br	e34c <__alt_mem_Onchip_SRAM+0xf800e34c>

0000e370 <_read_r>:
    e370:	defffd04 	addi	sp,sp,-12
    e374:	2805883a 	mov	r2,r5
    e378:	dc000015 	stw	r16,0(sp)
    e37c:	040000b4 	movhi	r16,2
    e380:	dc400115 	stw	r17,4(sp)
    e384:	300b883a 	mov	r5,r6
    e388:	84294e04 	addi	r16,r16,-23240
    e38c:	2023883a 	mov	r17,r4
    e390:	380d883a 	mov	r6,r7
    e394:	1009883a 	mov	r4,r2
    e398:	dfc00215 	stw	ra,8(sp)
    e39c:	80000015 	stw	zero,0(r16)
    e3a0:	00122d80 	call	122d8 <read>
    e3a4:	00ffffc4 	movi	r3,-1
    e3a8:	10c00526 	beq	r2,r3,e3c0 <_read_r+0x50>
    e3ac:	dfc00217 	ldw	ra,8(sp)
    e3b0:	dc400117 	ldw	r17,4(sp)
    e3b4:	dc000017 	ldw	r16,0(sp)
    e3b8:	dec00304 	addi	sp,sp,12
    e3bc:	f800283a 	ret
    e3c0:	80c00017 	ldw	r3,0(r16)
    e3c4:	183ff926 	beq	r3,zero,e3ac <__alt_mem_Onchip_SRAM+0xf800e3ac>
    e3c8:	88c00015 	stw	r3,0(r17)
    e3cc:	003ff706 	br	e3ac <__alt_mem_Onchip_SRAM+0xf800e3ac>

0000e3d0 <_wcrtomb_r>:
    e3d0:	defff604 	addi	sp,sp,-40
    e3d4:	008000b4 	movhi	r2,2
    e3d8:	dc800815 	stw	r18,32(sp)
    e3dc:	dc400715 	stw	r17,28(sp)
    e3e0:	dc000615 	stw	r16,24(sp)
    e3e4:	10a24d04 	addi	r2,r2,-30412
    e3e8:	dfc00915 	stw	ra,36(sp)
    e3ec:	2021883a 	mov	r16,r4
    e3f0:	3823883a 	mov	r17,r7
    e3f4:	14800017 	ldw	r18,0(r2)
    e3f8:	28001426 	beq	r5,zero,e44c <_wcrtomb_r+0x7c>
    e3fc:	d9400415 	stw	r5,16(sp)
    e400:	d9800515 	stw	r6,20(sp)
    e404:	00086c80 	call	86c8 <__locale_charset>
    e408:	d9800517 	ldw	r6,20(sp)
    e40c:	d9400417 	ldw	r5,16(sp)
    e410:	100f883a 	mov	r7,r2
    e414:	dc400015 	stw	r17,0(sp)
    e418:	8009883a 	mov	r4,r16
    e41c:	903ee83a 	callr	r18
    e420:	00ffffc4 	movi	r3,-1
    e424:	10c0031e 	bne	r2,r3,e434 <_wcrtomb_r+0x64>
    e428:	88000015 	stw	zero,0(r17)
    e42c:	00c02284 	movi	r3,138
    e430:	80c00015 	stw	r3,0(r16)
    e434:	dfc00917 	ldw	ra,36(sp)
    e438:	dc800817 	ldw	r18,32(sp)
    e43c:	dc400717 	ldw	r17,28(sp)
    e440:	dc000617 	ldw	r16,24(sp)
    e444:	dec00a04 	addi	sp,sp,40
    e448:	f800283a 	ret
    e44c:	00086c80 	call	86c8 <__locale_charset>
    e450:	100f883a 	mov	r7,r2
    e454:	dc400015 	stw	r17,0(sp)
    e458:	000d883a 	mov	r6,zero
    e45c:	d9400104 	addi	r5,sp,4
    e460:	8009883a 	mov	r4,r16
    e464:	903ee83a 	callr	r18
    e468:	003fed06 	br	e420 <__alt_mem_Onchip_SRAM+0xf800e420>

0000e46c <wcrtomb>:
    e46c:	defff604 	addi	sp,sp,-40
    e470:	008000b4 	movhi	r2,2
    e474:	dc800615 	stw	r18,24(sp)
    e478:	dc400515 	stw	r17,20(sp)
    e47c:	10a24904 	addi	r2,r2,-30428
    e480:	dfc00915 	stw	ra,36(sp)
    e484:	dd000815 	stw	r20,32(sp)
    e488:	dcc00715 	stw	r19,28(sp)
    e48c:	dc000415 	stw	r16,16(sp)
    e490:	3025883a 	mov	r18,r6
    e494:	14400017 	ldw	r17,0(r2)
    e498:	20001926 	beq	r4,zero,e500 <wcrtomb+0x94>
    e49c:	008000b4 	movhi	r2,2
    e4a0:	10a24d04 	addi	r2,r2,-30412
    e4a4:	15000017 	ldw	r20,0(r2)
    e4a8:	2021883a 	mov	r16,r4
    e4ac:	2827883a 	mov	r19,r5
    e4b0:	00086c80 	call	86c8 <__locale_charset>
    e4b4:	100f883a 	mov	r7,r2
    e4b8:	dc800015 	stw	r18,0(sp)
    e4bc:	980d883a 	mov	r6,r19
    e4c0:	800b883a 	mov	r5,r16
    e4c4:	8809883a 	mov	r4,r17
    e4c8:	a03ee83a 	callr	r20
    e4cc:	00ffffc4 	movi	r3,-1
    e4d0:	10c0031e 	bne	r2,r3,e4e0 <wcrtomb+0x74>
    e4d4:	90000015 	stw	zero,0(r18)
    e4d8:	00c02284 	movi	r3,138
    e4dc:	88c00015 	stw	r3,0(r17)
    e4e0:	dfc00917 	ldw	ra,36(sp)
    e4e4:	dd000817 	ldw	r20,32(sp)
    e4e8:	dcc00717 	ldw	r19,28(sp)
    e4ec:	dc800617 	ldw	r18,24(sp)
    e4f0:	dc400517 	ldw	r17,20(sp)
    e4f4:	dc000417 	ldw	r16,16(sp)
    e4f8:	dec00a04 	addi	sp,sp,40
    e4fc:	f800283a 	ret
    e500:	008000b4 	movhi	r2,2
    e504:	10a24d04 	addi	r2,r2,-30412
    e508:	14000017 	ldw	r16,0(r2)
    e50c:	00086c80 	call	86c8 <__locale_charset>
    e510:	100f883a 	mov	r7,r2
    e514:	dc800015 	stw	r18,0(sp)
    e518:	000d883a 	mov	r6,zero
    e51c:	d9400104 	addi	r5,sp,4
    e520:	8809883a 	mov	r4,r17
    e524:	803ee83a 	callr	r16
    e528:	003fe806 	br	e4cc <__alt_mem_Onchip_SRAM+0xf800e4cc>

0000e52c <__ascii_wctomb>:
    e52c:	28000526 	beq	r5,zero,e544 <__ascii_wctomb+0x18>
    e530:	00803fc4 	movi	r2,255
    e534:	11800536 	bltu	r2,r6,e54c <__ascii_wctomb+0x20>
    e538:	29800005 	stb	r6,0(r5)
    e53c:	00800044 	movi	r2,1
    e540:	f800283a 	ret
    e544:	0005883a 	mov	r2,zero
    e548:	f800283a 	ret
    e54c:	00802284 	movi	r2,138
    e550:	20800015 	stw	r2,0(r4)
    e554:	00bfffc4 	movi	r2,-1
    e558:	f800283a 	ret

0000e55c <_wctomb_r>:
    e55c:	008000b4 	movhi	r2,2
    e560:	defff904 	addi	sp,sp,-28
    e564:	10a24d04 	addi	r2,r2,-30412
    e568:	dfc00615 	stw	ra,24(sp)
    e56c:	dc400515 	stw	r17,20(sp)
    e570:	dc000415 	stw	r16,16(sp)
    e574:	3823883a 	mov	r17,r7
    e578:	14000017 	ldw	r16,0(r2)
    e57c:	d9000115 	stw	r4,4(sp)
    e580:	d9400215 	stw	r5,8(sp)
    e584:	d9800315 	stw	r6,12(sp)
    e588:	00086c80 	call	86c8 <__locale_charset>
    e58c:	d9800317 	ldw	r6,12(sp)
    e590:	d9400217 	ldw	r5,8(sp)
    e594:	d9000117 	ldw	r4,4(sp)
    e598:	100f883a 	mov	r7,r2
    e59c:	dc400015 	stw	r17,0(sp)
    e5a0:	803ee83a 	callr	r16
    e5a4:	dfc00617 	ldw	ra,24(sp)
    e5a8:	dc400517 	ldw	r17,20(sp)
    e5ac:	dc000417 	ldw	r16,16(sp)
    e5b0:	dec00704 	addi	sp,sp,28
    e5b4:	f800283a 	ret

0000e5b8 <__muldi3>:
    e5b8:	defff604 	addi	sp,sp,-40
    e5bc:	dd800615 	stw	r22,24(sp)
    e5c0:	dd400515 	stw	r21,20(sp)
    e5c4:	dc400115 	stw	r17,4(sp)
    e5c8:	357fffcc 	andi	r21,r6,65535
    e5cc:	2022d43a 	srli	r17,r4,16
    e5d0:	25bfffcc 	andi	r22,r4,65535
    e5d4:	dcc00315 	stw	r19,12(sp)
    e5d8:	dc800215 	stw	r18,8(sp)
    e5dc:	2027883a 	mov	r19,r4
    e5e0:	2825883a 	mov	r18,r5
    e5e4:	b009883a 	mov	r4,r22
    e5e8:	a80b883a 	mov	r5,r21
    e5ec:	dfc00915 	stw	ra,36(sp)
    e5f0:	df000815 	stw	fp,32(sp)
    e5f4:	ddc00715 	stw	r23,28(sp)
    e5f8:	3839883a 	mov	fp,r7
    e5fc:	302ed43a 	srli	r23,r6,16
    e600:	dd000415 	stw	r20,16(sp)
    e604:	dc000015 	stw	r16,0(sp)
    e608:	3029883a 	mov	r20,r6
    e60c:	0000ef80 	call	ef8 <__mulsi3>
    e610:	a80b883a 	mov	r5,r21
    e614:	8809883a 	mov	r4,r17
    e618:	1021883a 	mov	r16,r2
    e61c:	0000ef80 	call	ef8 <__mulsi3>
    e620:	8809883a 	mov	r4,r17
    e624:	b80b883a 	mov	r5,r23
    e628:	102b883a 	mov	r21,r2
    e62c:	0000ef80 	call	ef8 <__mulsi3>
    e630:	b80b883a 	mov	r5,r23
    e634:	b009883a 	mov	r4,r22
    e638:	1023883a 	mov	r17,r2
    e63c:	0000ef80 	call	ef8 <__mulsi3>
    e640:	8006d43a 	srli	r3,r16,16
    e644:	1545883a 	add	r2,r2,r21
    e648:	1885883a 	add	r2,r3,r2
    e64c:	1540022e 	bgeu	r2,r21,e658 <__muldi3+0xa0>
    e650:	00c00074 	movhi	r3,1
    e654:	88e3883a 	add	r17,r17,r3
    e658:	1006d43a 	srli	r3,r2,16
    e65c:	1004943a 	slli	r2,r2,16
    e660:	e00b883a 	mov	r5,fp
    e664:	9809883a 	mov	r4,r19
    e668:	843fffcc 	andi	r16,r16,65535
    e66c:	1c63883a 	add	r17,r3,r17
    e670:	1421883a 	add	r16,r2,r16
    e674:	0000ef80 	call	ef8 <__mulsi3>
    e678:	900b883a 	mov	r5,r18
    e67c:	a009883a 	mov	r4,r20
    e680:	1027883a 	mov	r19,r2
    e684:	0000ef80 	call	ef8 <__mulsi3>
    e688:	9885883a 	add	r2,r19,r2
    e68c:	1447883a 	add	r3,r2,r17
    e690:	8005883a 	mov	r2,r16
    e694:	dfc00917 	ldw	ra,36(sp)
    e698:	df000817 	ldw	fp,32(sp)
    e69c:	ddc00717 	ldw	r23,28(sp)
    e6a0:	dd800617 	ldw	r22,24(sp)
    e6a4:	dd400517 	ldw	r21,20(sp)
    e6a8:	dd000417 	ldw	r20,16(sp)
    e6ac:	dcc00317 	ldw	r19,12(sp)
    e6b0:	dc800217 	ldw	r18,8(sp)
    e6b4:	dc400117 	ldw	r17,4(sp)
    e6b8:	dc000017 	ldw	r16,0(sp)
    e6bc:	dec00a04 	addi	sp,sp,40
    e6c0:	f800283a 	ret

0000e6c4 <__udivdi3>:
    e6c4:	defff404 	addi	sp,sp,-48
    e6c8:	dcc00515 	stw	r19,20(sp)
    e6cc:	dc000215 	stw	r16,8(sp)
    e6d0:	dfc00b15 	stw	ra,44(sp)
    e6d4:	df000a15 	stw	fp,40(sp)
    e6d8:	ddc00915 	stw	r23,36(sp)
    e6dc:	dd800815 	stw	r22,32(sp)
    e6e0:	dd400715 	stw	r21,28(sp)
    e6e4:	dd000615 	stw	r20,24(sp)
    e6e8:	dc800415 	stw	r18,16(sp)
    e6ec:	dc400315 	stw	r17,12(sp)
    e6f0:	2027883a 	mov	r19,r4
    e6f4:	2821883a 	mov	r16,r5
    e6f8:	3800461e 	bne	r7,zero,e814 <__udivdi3+0x150>
    e6fc:	3023883a 	mov	r17,r6
    e700:	2025883a 	mov	r18,r4
    e704:	2980572e 	bgeu	r5,r6,e864 <__udivdi3+0x1a0>
    e708:	00bfffd4 	movui	r2,65535
    e70c:	282d883a 	mov	r22,r5
    e710:	1180b236 	bltu	r2,r6,e9dc <__udivdi3+0x318>
    e714:	00803fc4 	movi	r2,255
    e718:	1185803a 	cmpltu	r2,r2,r6
    e71c:	100490fa 	slli	r2,r2,3
    e720:	3086d83a 	srl	r3,r6,r2
    e724:	01000074 	movhi	r4,1
    e728:	211a8184 	addi	r4,r4,27142
    e72c:	20c7883a 	add	r3,r4,r3
    e730:	18c00003 	ldbu	r3,0(r3)
    e734:	1885883a 	add	r2,r3,r2
    e738:	00c00804 	movi	r3,32
    e73c:	1887c83a 	sub	r3,r3,r2
    e740:	18000526 	beq	r3,zero,e758 <__udivdi3+0x94>
    e744:	80e0983a 	sll	r16,r16,r3
    e748:	9884d83a 	srl	r2,r19,r2
    e74c:	30e2983a 	sll	r17,r6,r3
    e750:	98e4983a 	sll	r18,r19,r3
    e754:	142cb03a 	or	r22,r2,r16
    e758:	882ad43a 	srli	r21,r17,16
    e75c:	b009883a 	mov	r4,r22
    e760:	8d3fffcc 	andi	r20,r17,65535
    e764:	a80b883a 	mov	r5,r21
    e768:	0000ea00 	call	ea0 <__umodsi3>
    e76c:	b009883a 	mov	r4,r22
    e770:	a80b883a 	mov	r5,r21
    e774:	1027883a 	mov	r19,r2
    e778:	0000e3c0 	call	e3c <__udivsi3>
    e77c:	100b883a 	mov	r5,r2
    e780:	a009883a 	mov	r4,r20
    e784:	102d883a 	mov	r22,r2
    e788:	0000ef80 	call	ef8 <__mulsi3>
    e78c:	9826943a 	slli	r19,r19,16
    e790:	9006d43a 	srli	r3,r18,16
    e794:	1cc6b03a 	or	r3,r3,r19
    e798:	1880052e 	bgeu	r3,r2,e7b0 <__udivdi3+0xec>
    e79c:	1c47883a 	add	r3,r3,r17
    e7a0:	b13fffc4 	addi	r4,r22,-1
    e7a4:	1c400136 	bltu	r3,r17,e7ac <__udivdi3+0xe8>
    e7a8:	18814236 	bltu	r3,r2,ecb4 <__udivdi3+0x5f0>
    e7ac:	202d883a 	mov	r22,r4
    e7b0:	18a1c83a 	sub	r16,r3,r2
    e7b4:	8009883a 	mov	r4,r16
    e7b8:	a80b883a 	mov	r5,r21
    e7bc:	0000ea00 	call	ea0 <__umodsi3>
    e7c0:	1027883a 	mov	r19,r2
    e7c4:	8009883a 	mov	r4,r16
    e7c8:	a80b883a 	mov	r5,r21
    e7cc:	9826943a 	slli	r19,r19,16
    e7d0:	0000e3c0 	call	e3c <__udivsi3>
    e7d4:	100b883a 	mov	r5,r2
    e7d8:	a009883a 	mov	r4,r20
    e7dc:	94bfffcc 	andi	r18,r18,65535
    e7e0:	1021883a 	mov	r16,r2
    e7e4:	94e4b03a 	or	r18,r18,r19
    e7e8:	0000ef80 	call	ef8 <__mulsi3>
    e7ec:	9080052e 	bgeu	r18,r2,e804 <__udivdi3+0x140>
    e7f0:	8ca5883a 	add	r18,r17,r18
    e7f4:	80ffffc4 	addi	r3,r16,-1
    e7f8:	94410c36 	bltu	r18,r17,ec2c <__udivdi3+0x568>
    e7fc:	90810b2e 	bgeu	r18,r2,ec2c <__udivdi3+0x568>
    e800:	843fff84 	addi	r16,r16,-2
    e804:	b004943a 	slli	r2,r22,16
    e808:	0007883a 	mov	r3,zero
    e80c:	1404b03a 	or	r2,r2,r16
    e810:	00005e06 	br	e98c <__udivdi3+0x2c8>
    e814:	29c05b36 	bltu	r5,r7,e984 <__udivdi3+0x2c0>
    e818:	00bfffd4 	movui	r2,65535
    e81c:	11c0672e 	bgeu	r2,r7,e9bc <__udivdi3+0x2f8>
    e820:	00804034 	movhi	r2,256
    e824:	10bfffc4 	addi	r2,r2,-1
    e828:	11c10a36 	bltu	r2,r7,ec54 <__udivdi3+0x590>
    e82c:	00800404 	movi	r2,16
    e830:	3886d83a 	srl	r3,r7,r2
    e834:	01000074 	movhi	r4,1
    e838:	211a8184 	addi	r4,r4,27142
    e83c:	20c7883a 	add	r3,r4,r3
    e840:	18c00003 	ldbu	r3,0(r3)
    e844:	05c00804 	movi	r23,32
    e848:	1885883a 	add	r2,r3,r2
    e84c:	b8afc83a 	sub	r23,r23,r2
    e850:	b800671e 	bne	r23,zero,e9f0 <__udivdi3+0x32c>
    e854:	3c010536 	bltu	r7,r16,ec6c <__udivdi3+0x5a8>
    e858:	9985403a 	cmpgeu	r2,r19,r6
    e85c:	0007883a 	mov	r3,zero
    e860:	00004a06 	br	e98c <__udivdi3+0x2c8>
    e864:	3000041e 	bne	r6,zero,e878 <__udivdi3+0x1b4>
    e868:	000b883a 	mov	r5,zero
    e86c:	01000044 	movi	r4,1
    e870:	0000e3c0 	call	e3c <__udivsi3>
    e874:	1023883a 	mov	r17,r2
    e878:	00bfffd4 	movui	r2,65535
    e87c:	1440532e 	bgeu	r2,r17,e9cc <__udivdi3+0x308>
    e880:	00804034 	movhi	r2,256
    e884:	10bfffc4 	addi	r2,r2,-1
    e888:	1440f436 	bltu	r2,r17,ec5c <__udivdi3+0x598>
    e88c:	00800404 	movi	r2,16
    e890:	8886d83a 	srl	r3,r17,r2
    e894:	01000074 	movhi	r4,1
    e898:	211a8184 	addi	r4,r4,27142
    e89c:	20c7883a 	add	r3,r4,r3
    e8a0:	18c00003 	ldbu	r3,0(r3)
    e8a4:	1885883a 	add	r2,r3,r2
    e8a8:	00c00804 	movi	r3,32
    e8ac:	1887c83a 	sub	r3,r3,r2
    e8b0:	1800a51e 	bne	r3,zero,eb48 <__udivdi3+0x484>
    e8b4:	882ad43a 	srli	r21,r17,16
    e8b8:	8461c83a 	sub	r16,r16,r17
    e8bc:	8d3fffcc 	andi	r20,r17,65535
    e8c0:	00c00044 	movi	r3,1
    e8c4:	a80b883a 	mov	r5,r21
    e8c8:	8009883a 	mov	r4,r16
    e8cc:	d8c00115 	stw	r3,4(sp)
    e8d0:	0000ea00 	call	ea0 <__umodsi3>
    e8d4:	a80b883a 	mov	r5,r21
    e8d8:	8009883a 	mov	r4,r16
    e8dc:	1027883a 	mov	r19,r2
    e8e0:	0000e3c0 	call	e3c <__udivsi3>
    e8e4:	a00b883a 	mov	r5,r20
    e8e8:	1009883a 	mov	r4,r2
    e8ec:	102d883a 	mov	r22,r2
    e8f0:	0000ef80 	call	ef8 <__mulsi3>
    e8f4:	9826943a 	slli	r19,r19,16
    e8f8:	900ed43a 	srli	r7,r18,16
    e8fc:	d8c00117 	ldw	r3,4(sp)
    e900:	3cceb03a 	or	r7,r7,r19
    e904:	3880052e 	bgeu	r7,r2,e91c <__udivdi3+0x258>
    e908:	3c4f883a 	add	r7,r7,r17
    e90c:	b13fffc4 	addi	r4,r22,-1
    e910:	3c400136 	bltu	r7,r17,e918 <__udivdi3+0x254>
    e914:	3880e436 	bltu	r7,r2,eca8 <__udivdi3+0x5e4>
    e918:	202d883a 	mov	r22,r4
    e91c:	38a1c83a 	sub	r16,r7,r2
    e920:	8009883a 	mov	r4,r16
    e924:	a80b883a 	mov	r5,r21
    e928:	d8c00115 	stw	r3,4(sp)
    e92c:	0000ea00 	call	ea0 <__umodsi3>
    e930:	1027883a 	mov	r19,r2
    e934:	8009883a 	mov	r4,r16
    e938:	a80b883a 	mov	r5,r21
    e93c:	9826943a 	slli	r19,r19,16
    e940:	0000e3c0 	call	e3c <__udivsi3>
    e944:	a00b883a 	mov	r5,r20
    e948:	1009883a 	mov	r4,r2
    e94c:	94bfffcc 	andi	r18,r18,65535
    e950:	1021883a 	mov	r16,r2
    e954:	94e4b03a 	or	r18,r18,r19
    e958:	0000ef80 	call	ef8 <__mulsi3>
    e95c:	d8c00117 	ldw	r3,4(sp)
    e960:	9080052e 	bgeu	r18,r2,e978 <__udivdi3+0x2b4>
    e964:	8ca5883a 	add	r18,r17,r18
    e968:	813fffc4 	addi	r4,r16,-1
    e96c:	9440ad36 	bltu	r18,r17,ec24 <__udivdi3+0x560>
    e970:	9080ac2e 	bgeu	r18,r2,ec24 <__udivdi3+0x560>
    e974:	843fff84 	addi	r16,r16,-2
    e978:	b004943a 	slli	r2,r22,16
    e97c:	1404b03a 	or	r2,r2,r16
    e980:	00000206 	br	e98c <__udivdi3+0x2c8>
    e984:	0007883a 	mov	r3,zero
    e988:	0005883a 	mov	r2,zero
    e98c:	dfc00b17 	ldw	ra,44(sp)
    e990:	df000a17 	ldw	fp,40(sp)
    e994:	ddc00917 	ldw	r23,36(sp)
    e998:	dd800817 	ldw	r22,32(sp)
    e99c:	dd400717 	ldw	r21,28(sp)
    e9a0:	dd000617 	ldw	r20,24(sp)
    e9a4:	dcc00517 	ldw	r19,20(sp)
    e9a8:	dc800417 	ldw	r18,16(sp)
    e9ac:	dc400317 	ldw	r17,12(sp)
    e9b0:	dc000217 	ldw	r16,8(sp)
    e9b4:	dec00c04 	addi	sp,sp,48
    e9b8:	f800283a 	ret
    e9bc:	00803fc4 	movi	r2,255
    e9c0:	11c5803a 	cmpltu	r2,r2,r7
    e9c4:	100490fa 	slli	r2,r2,3
    e9c8:	003f9906 	br	e830 <__alt_mem_Onchip_SRAM+0xf800e830>
    e9cc:	00803fc4 	movi	r2,255
    e9d0:	1445803a 	cmpltu	r2,r2,r17
    e9d4:	100490fa 	slli	r2,r2,3
    e9d8:	003fad06 	br	e890 <__alt_mem_Onchip_SRAM+0xf800e890>
    e9dc:	00804034 	movhi	r2,256
    e9e0:	10bfffc4 	addi	r2,r2,-1
    e9e4:	11809f36 	bltu	r2,r6,ec64 <__udivdi3+0x5a0>
    e9e8:	00800404 	movi	r2,16
    e9ec:	003f4c06 	br	e720 <__alt_mem_Onchip_SRAM+0xf800e720>
    e9f0:	3dce983a 	sll	r7,r7,r23
    e9f4:	30b8d83a 	srl	fp,r6,r2
    e9f8:	80a2d83a 	srl	r17,r16,r2
    e9fc:	35cc983a 	sll	r6,r6,r23
    ea00:	3f38b03a 	or	fp,r7,fp
    ea04:	e024d43a 	srli	r18,fp,16
    ea08:	9884d83a 	srl	r2,r19,r2
    ea0c:	85e0983a 	sll	r16,r16,r23
    ea10:	8809883a 	mov	r4,r17
    ea14:	900b883a 	mov	r5,r18
    ea18:	d9800015 	stw	r6,0(sp)
    ea1c:	1420b03a 	or	r16,r2,r16
    ea20:	0000ea00 	call	ea0 <__umodsi3>
    ea24:	900b883a 	mov	r5,r18
    ea28:	8809883a 	mov	r4,r17
    ea2c:	1029883a 	mov	r20,r2
    ea30:	e5bfffcc 	andi	r22,fp,65535
    ea34:	0000e3c0 	call	e3c <__udivsi3>
    ea38:	100b883a 	mov	r5,r2
    ea3c:	b009883a 	mov	r4,r22
    ea40:	102b883a 	mov	r21,r2
    ea44:	0000ef80 	call	ef8 <__mulsi3>
    ea48:	a028943a 	slli	r20,r20,16
    ea4c:	8006d43a 	srli	r3,r16,16
    ea50:	1d06b03a 	or	r3,r3,r20
    ea54:	1880042e 	bgeu	r3,r2,ea68 <__udivdi3+0x3a4>
    ea58:	1f07883a 	add	r3,r3,fp
    ea5c:	a93fffc4 	addi	r4,r21,-1
    ea60:	1f00892e 	bgeu	r3,fp,ec88 <__udivdi3+0x5c4>
    ea64:	202b883a 	mov	r21,r4
    ea68:	18a3c83a 	sub	r17,r3,r2
    ea6c:	8809883a 	mov	r4,r17
    ea70:	900b883a 	mov	r5,r18
    ea74:	0000ea00 	call	ea0 <__umodsi3>
    ea78:	1029883a 	mov	r20,r2
    ea7c:	8809883a 	mov	r4,r17
    ea80:	900b883a 	mov	r5,r18
    ea84:	a028943a 	slli	r20,r20,16
    ea88:	0000e3c0 	call	e3c <__udivsi3>
    ea8c:	100b883a 	mov	r5,r2
    ea90:	b009883a 	mov	r4,r22
    ea94:	843fffcc 	andi	r16,r16,65535
    ea98:	1023883a 	mov	r17,r2
    ea9c:	8520b03a 	or	r16,r16,r20
    eaa0:	0000ef80 	call	ef8 <__mulsi3>
    eaa4:	8080042e 	bgeu	r16,r2,eab8 <__udivdi3+0x3f4>
    eaa8:	8721883a 	add	r16,r16,fp
    eaac:	88ffffc4 	addi	r3,r17,-1
    eab0:	8700712e 	bgeu	r16,fp,ec78 <__udivdi3+0x5b4>
    eab4:	1823883a 	mov	r17,r3
    eab8:	a80e943a 	slli	r7,r21,16
    eabc:	d8c00017 	ldw	r3,0(sp)
    eac0:	80a1c83a 	sub	r16,r16,r2
    eac4:	3c64b03a 	or	r18,r7,r17
    eac8:	1d3fffcc 	andi	r20,r3,65535
    eacc:	9022d43a 	srli	r17,r18,16
    ead0:	95bfffcc 	andi	r22,r18,65535
    ead4:	a00b883a 	mov	r5,r20
    ead8:	b009883a 	mov	r4,r22
    eadc:	182ad43a 	srli	r21,r3,16
    eae0:	0000ef80 	call	ef8 <__mulsi3>
    eae4:	a00b883a 	mov	r5,r20
    eae8:	8809883a 	mov	r4,r17
    eaec:	1039883a 	mov	fp,r2
    eaf0:	0000ef80 	call	ef8 <__mulsi3>
    eaf4:	8809883a 	mov	r4,r17
    eaf8:	a80b883a 	mov	r5,r21
    eafc:	1029883a 	mov	r20,r2
    eb00:	0000ef80 	call	ef8 <__mulsi3>
    eb04:	a80b883a 	mov	r5,r21
    eb08:	b009883a 	mov	r4,r22
    eb0c:	1023883a 	mov	r17,r2
    eb10:	0000ef80 	call	ef8 <__mulsi3>
    eb14:	e006d43a 	srli	r3,fp,16
    eb18:	1505883a 	add	r2,r2,r20
    eb1c:	1887883a 	add	r3,r3,r2
    eb20:	1d00022e 	bgeu	r3,r20,eb2c <__udivdi3+0x468>
    eb24:	00800074 	movhi	r2,1
    eb28:	88a3883a 	add	r17,r17,r2
    eb2c:	1804d43a 	srli	r2,r3,16
    eb30:	1463883a 	add	r17,r2,r17
    eb34:	84404436 	bltu	r16,r17,ec48 <__udivdi3+0x584>
    eb38:	84403e26 	beq	r16,r17,ec34 <__udivdi3+0x570>
    eb3c:	9005883a 	mov	r2,r18
    eb40:	0007883a 	mov	r3,zero
    eb44:	003f9106 	br	e98c <__alt_mem_Onchip_SRAM+0xf800e98c>
    eb48:	88e2983a 	sll	r17,r17,r3
    eb4c:	80aed83a 	srl	r23,r16,r2
    eb50:	80e0983a 	sll	r16,r16,r3
    eb54:	882ad43a 	srli	r21,r17,16
    eb58:	9884d83a 	srl	r2,r19,r2
    eb5c:	b809883a 	mov	r4,r23
    eb60:	a80b883a 	mov	r5,r21
    eb64:	98e4983a 	sll	r18,r19,r3
    eb68:	142cb03a 	or	r22,r2,r16
    eb6c:	0000ea00 	call	ea0 <__umodsi3>
    eb70:	b809883a 	mov	r4,r23
    eb74:	a80b883a 	mov	r5,r21
    eb78:	1027883a 	mov	r19,r2
    eb7c:	8d3fffcc 	andi	r20,r17,65535
    eb80:	0000e3c0 	call	e3c <__udivsi3>
    eb84:	a009883a 	mov	r4,r20
    eb88:	100b883a 	mov	r5,r2
    eb8c:	102f883a 	mov	r23,r2
    eb90:	0000ef80 	call	ef8 <__mulsi3>
    eb94:	9826943a 	slli	r19,r19,16
    eb98:	b008d43a 	srli	r4,r22,16
    eb9c:	24c8b03a 	or	r4,r4,r19
    eba0:	2080062e 	bgeu	r4,r2,ebbc <__udivdi3+0x4f8>
    eba4:	2449883a 	add	r4,r4,r17
    eba8:	b8ffffc4 	addi	r3,r23,-1
    ebac:	24403c36 	bltu	r4,r17,eca0 <__udivdi3+0x5dc>
    ebb0:	20803b2e 	bgeu	r4,r2,eca0 <__udivdi3+0x5dc>
    ebb4:	bdffff84 	addi	r23,r23,-2
    ebb8:	2449883a 	add	r4,r4,r17
    ebbc:	20a1c83a 	sub	r16,r4,r2
    ebc0:	a80b883a 	mov	r5,r21
    ebc4:	8009883a 	mov	r4,r16
    ebc8:	0000ea00 	call	ea0 <__umodsi3>
    ebcc:	a80b883a 	mov	r5,r21
    ebd0:	8009883a 	mov	r4,r16
    ebd4:	1027883a 	mov	r19,r2
    ebd8:	0000e3c0 	call	e3c <__udivsi3>
    ebdc:	a009883a 	mov	r4,r20
    ebe0:	100b883a 	mov	r5,r2
    ebe4:	9826943a 	slli	r19,r19,16
    ebe8:	1039883a 	mov	fp,r2
    ebec:	0000ef80 	call	ef8 <__mulsi3>
    ebf0:	b13fffcc 	andi	r4,r22,65535
    ebf4:	24c8b03a 	or	r4,r4,r19
    ebf8:	2080062e 	bgeu	r4,r2,ec14 <__udivdi3+0x550>
    ebfc:	2449883a 	add	r4,r4,r17
    ec00:	e0ffffc4 	addi	r3,fp,-1
    ec04:	24402436 	bltu	r4,r17,ec98 <__udivdi3+0x5d4>
    ec08:	2080232e 	bgeu	r4,r2,ec98 <__udivdi3+0x5d4>
    ec0c:	e73fff84 	addi	fp,fp,-2
    ec10:	2449883a 	add	r4,r4,r17
    ec14:	b82e943a 	slli	r23,r23,16
    ec18:	20a1c83a 	sub	r16,r4,r2
    ec1c:	bf06b03a 	or	r3,r23,fp
    ec20:	003f2806 	br	e8c4 <__alt_mem_Onchip_SRAM+0xf800e8c4>
    ec24:	2021883a 	mov	r16,r4
    ec28:	003f5306 	br	e978 <__alt_mem_Onchip_SRAM+0xf800e978>
    ec2c:	1821883a 	mov	r16,r3
    ec30:	003ef406 	br	e804 <__alt_mem_Onchip_SRAM+0xf800e804>
    ec34:	1806943a 	slli	r3,r3,16
    ec38:	9de6983a 	sll	r19,r19,r23
    ec3c:	e73fffcc 	andi	fp,fp,65535
    ec40:	1f07883a 	add	r3,r3,fp
    ec44:	98ffbd2e 	bgeu	r19,r3,eb3c <__alt_mem_Onchip_SRAM+0xf800eb3c>
    ec48:	90bfffc4 	addi	r2,r18,-1
    ec4c:	0007883a 	mov	r3,zero
    ec50:	003f4e06 	br	e98c <__alt_mem_Onchip_SRAM+0xf800e98c>
    ec54:	00800604 	movi	r2,24
    ec58:	003ef506 	br	e830 <__alt_mem_Onchip_SRAM+0xf800e830>
    ec5c:	00800604 	movi	r2,24
    ec60:	003f0b06 	br	e890 <__alt_mem_Onchip_SRAM+0xf800e890>
    ec64:	00800604 	movi	r2,24
    ec68:	003ead06 	br	e720 <__alt_mem_Onchip_SRAM+0xf800e720>
    ec6c:	0007883a 	mov	r3,zero
    ec70:	00800044 	movi	r2,1
    ec74:	003f4506 	br	e98c <__alt_mem_Onchip_SRAM+0xf800e98c>
    ec78:	80bf8e2e 	bgeu	r16,r2,eab4 <__alt_mem_Onchip_SRAM+0xf800eab4>
    ec7c:	8c7fff84 	addi	r17,r17,-2
    ec80:	8721883a 	add	r16,r16,fp
    ec84:	003f8c06 	br	eab8 <__alt_mem_Onchip_SRAM+0xf800eab8>
    ec88:	18bf762e 	bgeu	r3,r2,ea64 <__alt_mem_Onchip_SRAM+0xf800ea64>
    ec8c:	ad7fff84 	addi	r21,r21,-2
    ec90:	1f07883a 	add	r3,r3,fp
    ec94:	003f7406 	br	ea68 <__alt_mem_Onchip_SRAM+0xf800ea68>
    ec98:	1839883a 	mov	fp,r3
    ec9c:	003fdd06 	br	ec14 <__alt_mem_Onchip_SRAM+0xf800ec14>
    eca0:	182f883a 	mov	r23,r3
    eca4:	003fc506 	br	ebbc <__alt_mem_Onchip_SRAM+0xf800ebbc>
    eca8:	b5bfff84 	addi	r22,r22,-2
    ecac:	3c4f883a 	add	r7,r7,r17
    ecb0:	003f1a06 	br	e91c <__alt_mem_Onchip_SRAM+0xf800e91c>
    ecb4:	b5bfff84 	addi	r22,r22,-2
    ecb8:	1c47883a 	add	r3,r3,r17
    ecbc:	003ebc06 	br	e7b0 <__alt_mem_Onchip_SRAM+0xf800e7b0>

0000ecc0 <__umoddi3>:
    ecc0:	defff304 	addi	sp,sp,-52
    ecc4:	df000b15 	stw	fp,44(sp)
    ecc8:	dc400415 	stw	r17,16(sp)
    eccc:	dc000315 	stw	r16,12(sp)
    ecd0:	dfc00c15 	stw	ra,48(sp)
    ecd4:	ddc00a15 	stw	r23,40(sp)
    ecd8:	dd800915 	stw	r22,36(sp)
    ecdc:	dd400815 	stw	r21,32(sp)
    ece0:	dd000715 	stw	r20,28(sp)
    ece4:	dcc00615 	stw	r19,24(sp)
    ece8:	dc800515 	stw	r18,20(sp)
    ecec:	2021883a 	mov	r16,r4
    ecf0:	2823883a 	mov	r17,r5
    ecf4:	2839883a 	mov	fp,r5
    ecf8:	3800401e 	bne	r7,zero,edfc <__umoddi3+0x13c>
    ecfc:	3027883a 	mov	r19,r6
    ed00:	2029883a 	mov	r20,r4
    ed04:	2980552e 	bgeu	r5,r6,ee5c <__umoddi3+0x19c>
    ed08:	00bfffd4 	movui	r2,65535
    ed0c:	1180a236 	bltu	r2,r6,ef98 <__umoddi3+0x2d8>
    ed10:	01003fc4 	movi	r4,255
    ed14:	2189803a 	cmpltu	r4,r4,r6
    ed18:	200890fa 	slli	r4,r4,3
    ed1c:	3104d83a 	srl	r2,r6,r4
    ed20:	00c00074 	movhi	r3,1
    ed24:	18da8184 	addi	r3,r3,27142
    ed28:	1885883a 	add	r2,r3,r2
    ed2c:	10c00003 	ldbu	r3,0(r2)
    ed30:	00800804 	movi	r2,32
    ed34:	1909883a 	add	r4,r3,r4
    ed38:	1125c83a 	sub	r18,r2,r4
    ed3c:	90000526 	beq	r18,zero,ed54 <__umoddi3+0x94>
    ed40:	8ca2983a 	sll	r17,r17,r18
    ed44:	8108d83a 	srl	r4,r16,r4
    ed48:	34a6983a 	sll	r19,r6,r18
    ed4c:	84a8983a 	sll	r20,r16,r18
    ed50:	2478b03a 	or	fp,r4,r17
    ed54:	982cd43a 	srli	r22,r19,16
    ed58:	e009883a 	mov	r4,fp
    ed5c:	9dffffcc 	andi	r23,r19,65535
    ed60:	b00b883a 	mov	r5,r22
    ed64:	0000ea00 	call	ea0 <__umodsi3>
    ed68:	b00b883a 	mov	r5,r22
    ed6c:	e009883a 	mov	r4,fp
    ed70:	102b883a 	mov	r21,r2
    ed74:	0000e3c0 	call	e3c <__udivsi3>
    ed78:	100b883a 	mov	r5,r2
    ed7c:	b809883a 	mov	r4,r23
    ed80:	0000ef80 	call	ef8 <__mulsi3>
    ed84:	a82a943a 	slli	r21,r21,16
    ed88:	a006d43a 	srli	r3,r20,16
    ed8c:	1d46b03a 	or	r3,r3,r21
    ed90:	1880032e 	bgeu	r3,r2,eda0 <__umoddi3+0xe0>
    ed94:	1cc7883a 	add	r3,r3,r19
    ed98:	1cc00136 	bltu	r3,r19,eda0 <__umoddi3+0xe0>
    ed9c:	18813136 	bltu	r3,r2,f264 <__umoddi3+0x5a4>
    eda0:	18a1c83a 	sub	r16,r3,r2
    eda4:	b00b883a 	mov	r5,r22
    eda8:	8009883a 	mov	r4,r16
    edac:	0000ea00 	call	ea0 <__umodsi3>
    edb0:	b00b883a 	mov	r5,r22
    edb4:	8009883a 	mov	r4,r16
    edb8:	1023883a 	mov	r17,r2
    edbc:	0000e3c0 	call	e3c <__udivsi3>
    edc0:	100b883a 	mov	r5,r2
    edc4:	b809883a 	mov	r4,r23
    edc8:	8822943a 	slli	r17,r17,16
    edcc:	0000ef80 	call	ef8 <__mulsi3>
    edd0:	a0ffffcc 	andi	r3,r20,65535
    edd4:	1c46b03a 	or	r3,r3,r17
    edd8:	1880042e 	bgeu	r3,r2,edec <__umoddi3+0x12c>
    eddc:	1cc7883a 	add	r3,r3,r19
    ede0:	1cc00236 	bltu	r3,r19,edec <__umoddi3+0x12c>
    ede4:	1880012e 	bgeu	r3,r2,edec <__umoddi3+0x12c>
    ede8:	1cc7883a 	add	r3,r3,r19
    edec:	1885c83a 	sub	r2,r3,r2
    edf0:	1484d83a 	srl	r2,r2,r18
    edf4:	0007883a 	mov	r3,zero
    edf8:	00005306 	br	ef48 <__umoddi3+0x288>
    edfc:	29c05036 	bltu	r5,r7,ef40 <__umoddi3+0x280>
    ee00:	00bfffd4 	movui	r2,65535
    ee04:	11c05c2e 	bgeu	r2,r7,ef78 <__umoddi3+0x2b8>
    ee08:	00804034 	movhi	r2,256
    ee0c:	10bfffc4 	addi	r2,r2,-1
    ee10:	11c10636 	bltu	r2,r7,f22c <__umoddi3+0x56c>
    ee14:	01000404 	movi	r4,16
    ee18:	3904d83a 	srl	r2,r7,r4
    ee1c:	00c00074 	movhi	r3,1
    ee20:	18da8184 	addi	r3,r3,27142
    ee24:	1885883a 	add	r2,r3,r2
    ee28:	14c00003 	ldbu	r19,0(r2)
    ee2c:	00c00804 	movi	r3,32
    ee30:	9927883a 	add	r19,r19,r4
    ee34:	1ce9c83a 	sub	r20,r3,r19
    ee38:	a0005c1e 	bne	r20,zero,efac <__umoddi3+0x2ec>
    ee3c:	3c400136 	bltu	r7,r17,ee44 <__umoddi3+0x184>
    ee40:	81810a36 	bltu	r16,r6,f26c <__umoddi3+0x5ac>
    ee44:	8185c83a 	sub	r2,r16,r6
    ee48:	89e3c83a 	sub	r17,r17,r7
    ee4c:	8089803a 	cmpltu	r4,r16,r2
    ee50:	8939c83a 	sub	fp,r17,r4
    ee54:	e007883a 	mov	r3,fp
    ee58:	00003b06 	br	ef48 <__umoddi3+0x288>
    ee5c:	3000041e 	bne	r6,zero,ee70 <__umoddi3+0x1b0>
    ee60:	000b883a 	mov	r5,zero
    ee64:	01000044 	movi	r4,1
    ee68:	0000e3c0 	call	e3c <__udivsi3>
    ee6c:	1027883a 	mov	r19,r2
    ee70:	00bfffd4 	movui	r2,65535
    ee74:	14c0442e 	bgeu	r2,r19,ef88 <__umoddi3+0x2c8>
    ee78:	00804034 	movhi	r2,256
    ee7c:	10bfffc4 	addi	r2,r2,-1
    ee80:	14c0ec36 	bltu	r2,r19,f234 <__umoddi3+0x574>
    ee84:	00800404 	movi	r2,16
    ee88:	9886d83a 	srl	r3,r19,r2
    ee8c:	01000074 	movhi	r4,1
    ee90:	211a8184 	addi	r4,r4,27142
    ee94:	20c7883a 	add	r3,r4,r3
    ee98:	18c00003 	ldbu	r3,0(r3)
    ee9c:	1887883a 	add	r3,r3,r2
    eea0:	00800804 	movi	r2,32
    eea4:	10e5c83a 	sub	r18,r2,r3
    eea8:	9000ab1e 	bne	r18,zero,f158 <__umoddi3+0x498>
    eeac:	982cd43a 	srli	r22,r19,16
    eeb0:	8ce3c83a 	sub	r17,r17,r19
    eeb4:	9dffffcc 	andi	r23,r19,65535
    eeb8:	b00b883a 	mov	r5,r22
    eebc:	8809883a 	mov	r4,r17
    eec0:	0000ea00 	call	ea0 <__umodsi3>
    eec4:	b00b883a 	mov	r5,r22
    eec8:	8809883a 	mov	r4,r17
    eecc:	102b883a 	mov	r21,r2
    eed0:	0000e3c0 	call	e3c <__udivsi3>
    eed4:	b80b883a 	mov	r5,r23
    eed8:	1009883a 	mov	r4,r2
    eedc:	0000ef80 	call	ef8 <__mulsi3>
    eee0:	a82a943a 	slli	r21,r21,16
    eee4:	a006d43a 	srli	r3,r20,16
    eee8:	1d46b03a 	or	r3,r3,r21
    eeec:	1880042e 	bgeu	r3,r2,ef00 <__umoddi3+0x240>
    eef0:	1cc7883a 	add	r3,r3,r19
    eef4:	1cc00236 	bltu	r3,r19,ef00 <__umoddi3+0x240>
    eef8:	1880012e 	bgeu	r3,r2,ef00 <__umoddi3+0x240>
    eefc:	1cc7883a 	add	r3,r3,r19
    ef00:	18a1c83a 	sub	r16,r3,r2
    ef04:	b00b883a 	mov	r5,r22
    ef08:	8009883a 	mov	r4,r16
    ef0c:	0000ea00 	call	ea0 <__umodsi3>
    ef10:	1023883a 	mov	r17,r2
    ef14:	b00b883a 	mov	r5,r22
    ef18:	8009883a 	mov	r4,r16
    ef1c:	0000e3c0 	call	e3c <__udivsi3>
    ef20:	8822943a 	slli	r17,r17,16
    ef24:	b80b883a 	mov	r5,r23
    ef28:	1009883a 	mov	r4,r2
    ef2c:	0000ef80 	call	ef8 <__mulsi3>
    ef30:	a53fffcc 	andi	r20,r20,65535
    ef34:	a446b03a 	or	r3,r20,r17
    ef38:	18bfac2e 	bgeu	r3,r2,edec <__alt_mem_Onchip_SRAM+0xf800edec>
    ef3c:	003fa706 	br	eddc <__alt_mem_Onchip_SRAM+0xf800eddc>
    ef40:	2005883a 	mov	r2,r4
    ef44:	2807883a 	mov	r3,r5
    ef48:	dfc00c17 	ldw	ra,48(sp)
    ef4c:	df000b17 	ldw	fp,44(sp)
    ef50:	ddc00a17 	ldw	r23,40(sp)
    ef54:	dd800917 	ldw	r22,36(sp)
    ef58:	dd400817 	ldw	r21,32(sp)
    ef5c:	dd000717 	ldw	r20,28(sp)
    ef60:	dcc00617 	ldw	r19,24(sp)
    ef64:	dc800517 	ldw	r18,20(sp)
    ef68:	dc400417 	ldw	r17,16(sp)
    ef6c:	dc000317 	ldw	r16,12(sp)
    ef70:	dec00d04 	addi	sp,sp,52
    ef74:	f800283a 	ret
    ef78:	04c03fc4 	movi	r19,255
    ef7c:	99c9803a 	cmpltu	r4,r19,r7
    ef80:	200890fa 	slli	r4,r4,3
    ef84:	003fa406 	br	ee18 <__alt_mem_Onchip_SRAM+0xf800ee18>
    ef88:	00803fc4 	movi	r2,255
    ef8c:	14c5803a 	cmpltu	r2,r2,r19
    ef90:	100490fa 	slli	r2,r2,3
    ef94:	003fbc06 	br	ee88 <__alt_mem_Onchip_SRAM+0xf800ee88>
    ef98:	00804034 	movhi	r2,256
    ef9c:	10bfffc4 	addi	r2,r2,-1
    efa0:	1180a636 	bltu	r2,r6,f23c <__umoddi3+0x57c>
    efa4:	01000404 	movi	r4,16
    efa8:	003f5c06 	br	ed1c <__alt_mem_Onchip_SRAM+0xf800ed1c>
    efac:	3d0e983a 	sll	r7,r7,r20
    efb0:	34ead83a 	srl	r21,r6,r19
    efb4:	8cc6d83a 	srl	r3,r17,r19
    efb8:	8d10983a 	sll	r8,r17,r20
    efbc:	3d6ab03a 	or	r21,r7,r21
    efc0:	a82cd43a 	srli	r22,r21,16
    efc4:	84e2d83a 	srl	r17,r16,r19
    efc8:	1809883a 	mov	r4,r3
    efcc:	b00b883a 	mov	r5,r22
    efd0:	8a22b03a 	or	r17,r17,r8
    efd4:	3524983a 	sll	r18,r6,r20
    efd8:	dc400015 	stw	r17,0(sp)
    efdc:	d8c00115 	stw	r3,4(sp)
    efe0:	0000ea00 	call	ea0 <__umodsi3>
    efe4:	d8c00117 	ldw	r3,4(sp)
    efe8:	b00b883a 	mov	r5,r22
    efec:	1039883a 	mov	fp,r2
    eff0:	1809883a 	mov	r4,r3
    eff4:	0000e3c0 	call	e3c <__udivsi3>
    eff8:	adffffcc 	andi	r23,r21,65535
    effc:	100b883a 	mov	r5,r2
    f000:	b809883a 	mov	r4,r23
    f004:	1023883a 	mov	r17,r2
    f008:	0000ef80 	call	ef8 <__mulsi3>
    f00c:	d9400017 	ldw	r5,0(sp)
    f010:	e008943a 	slli	r4,fp,16
    f014:	8520983a 	sll	r16,r16,r20
    f018:	2806d43a 	srli	r3,r5,16
    f01c:	1906b03a 	or	r3,r3,r4
    f020:	1880042e 	bgeu	r3,r2,f034 <__umoddi3+0x374>
    f024:	1d47883a 	add	r3,r3,r21
    f028:	893fffc4 	addi	r4,r17,-1
    f02c:	1d40892e 	bgeu	r3,r21,f254 <__umoddi3+0x594>
    f030:	2023883a 	mov	r17,r4
    f034:	18b9c83a 	sub	fp,r3,r2
    f038:	b00b883a 	mov	r5,r22
    f03c:	e009883a 	mov	r4,fp
    f040:	0000ea00 	call	ea0 <__umodsi3>
    f044:	b00b883a 	mov	r5,r22
    f048:	e009883a 	mov	r4,fp
    f04c:	d8800215 	stw	r2,8(sp)
    f050:	0000e3c0 	call	e3c <__udivsi3>
    f054:	100b883a 	mov	r5,r2
    f058:	b809883a 	mov	r4,r23
    f05c:	102d883a 	mov	r22,r2
    f060:	0000ef80 	call	ef8 <__mulsi3>
    f064:	d9800217 	ldw	r6,8(sp)
    f068:	d8c00017 	ldw	r3,0(sp)
    f06c:	300c943a 	slli	r6,r6,16
    f070:	1a3fffcc 	andi	r8,r3,65535
    f074:	4190b03a 	or	r8,r8,r6
    f078:	4080042e 	bgeu	r8,r2,f08c <__umoddi3+0x3cc>
    f07c:	4551883a 	add	r8,r8,r21
    f080:	b0ffffc4 	addi	r3,r22,-1
    f084:	45406f2e 	bgeu	r8,r21,f244 <__umoddi3+0x584>
    f088:	182d883a 	mov	r22,r3
    f08c:	880e943a 	slli	r7,r17,16
    f090:	9006d43a 	srli	r3,r18,16
    f094:	91bfffcc 	andi	r6,r18,65535
    f098:	3dacb03a 	or	r22,r7,r22
    f09c:	b02ed43a 	srli	r23,r22,16
    f0a0:	b5bfffcc 	andi	r22,r22,65535
    f0a4:	300b883a 	mov	r5,r6
    f0a8:	b009883a 	mov	r4,r22
    f0ac:	40a3c83a 	sub	r17,r8,r2
    f0b0:	d8c00115 	stw	r3,4(sp)
    f0b4:	d9800215 	stw	r6,8(sp)
    f0b8:	0000ef80 	call	ef8 <__mulsi3>
    f0bc:	d9800217 	ldw	r6,8(sp)
    f0c0:	b809883a 	mov	r4,r23
    f0c4:	1039883a 	mov	fp,r2
    f0c8:	300b883a 	mov	r5,r6
    f0cc:	0000ef80 	call	ef8 <__mulsi3>
    f0d0:	d8c00117 	ldw	r3,4(sp)
    f0d4:	b809883a 	mov	r4,r23
    f0d8:	d8800215 	stw	r2,8(sp)
    f0dc:	180b883a 	mov	r5,r3
    f0e0:	0000ef80 	call	ef8 <__mulsi3>
    f0e4:	d8c00117 	ldw	r3,4(sp)
    f0e8:	b009883a 	mov	r4,r22
    f0ec:	102f883a 	mov	r23,r2
    f0f0:	180b883a 	mov	r5,r3
    f0f4:	0000ef80 	call	ef8 <__mulsi3>
    f0f8:	d9800217 	ldw	r6,8(sp)
    f0fc:	e006d43a 	srli	r3,fp,16
    f100:	1185883a 	add	r2,r2,r6
    f104:	1885883a 	add	r2,r3,r2
    f108:	1180022e 	bgeu	r2,r6,f114 <__umoddi3+0x454>
    f10c:	00c00074 	movhi	r3,1
    f110:	b8ef883a 	add	r23,r23,r3
    f114:	1006d43a 	srli	r3,r2,16
    f118:	1004943a 	slli	r2,r2,16
    f11c:	e73fffcc 	andi	fp,fp,65535
    f120:	1dc7883a 	add	r3,r3,r23
    f124:	1739883a 	add	fp,r2,fp
    f128:	88c03a36 	bltu	r17,r3,f214 <__umoddi3+0x554>
    f12c:	88c05126 	beq	r17,r3,f274 <__umoddi3+0x5b4>
    f130:	88c9c83a 	sub	r4,r17,r3
    f134:	e00f883a 	mov	r7,fp
    f138:	81cfc83a 	sub	r7,r16,r7
    f13c:	81c7803a 	cmpltu	r3,r16,r7
    f140:	20c7c83a 	sub	r3,r4,r3
    f144:	1cc4983a 	sll	r2,r3,r19
    f148:	3d0ed83a 	srl	r7,r7,r20
    f14c:	1d06d83a 	srl	r3,r3,r20
    f150:	11c4b03a 	or	r2,r2,r7
    f154:	003f7c06 	br	ef48 <__alt_mem_Onchip_SRAM+0xf800ef48>
    f158:	9ca6983a 	sll	r19,r19,r18
    f15c:	88f8d83a 	srl	fp,r17,r3
    f160:	80c4d83a 	srl	r2,r16,r3
    f164:	982cd43a 	srli	r22,r19,16
    f168:	8ca2983a 	sll	r17,r17,r18
    f16c:	e009883a 	mov	r4,fp
    f170:	b00b883a 	mov	r5,r22
    f174:	146ab03a 	or	r21,r2,r17
    f178:	0000ea00 	call	ea0 <__umodsi3>
    f17c:	b00b883a 	mov	r5,r22
    f180:	e009883a 	mov	r4,fp
    f184:	1029883a 	mov	r20,r2
    f188:	9dffffcc 	andi	r23,r19,65535
    f18c:	0000e3c0 	call	e3c <__udivsi3>
    f190:	b809883a 	mov	r4,r23
    f194:	100b883a 	mov	r5,r2
    f198:	0000ef80 	call	ef8 <__mulsi3>
    f19c:	a008943a 	slli	r4,r20,16
    f1a0:	a806d43a 	srli	r3,r21,16
    f1a4:	84a8983a 	sll	r20,r16,r18
    f1a8:	1906b03a 	or	r3,r3,r4
    f1ac:	1880042e 	bgeu	r3,r2,f1c0 <__umoddi3+0x500>
    f1b0:	1cc7883a 	add	r3,r3,r19
    f1b4:	1cc00236 	bltu	r3,r19,f1c0 <__umoddi3+0x500>
    f1b8:	1880012e 	bgeu	r3,r2,f1c0 <__umoddi3+0x500>
    f1bc:	1cc7883a 	add	r3,r3,r19
    f1c0:	18a3c83a 	sub	r17,r3,r2
    f1c4:	b00b883a 	mov	r5,r22
    f1c8:	8809883a 	mov	r4,r17
    f1cc:	0000ea00 	call	ea0 <__umodsi3>
    f1d0:	b00b883a 	mov	r5,r22
    f1d4:	8809883a 	mov	r4,r17
    f1d8:	1021883a 	mov	r16,r2
    f1dc:	0000e3c0 	call	e3c <__udivsi3>
    f1e0:	100b883a 	mov	r5,r2
    f1e4:	b809883a 	mov	r4,r23
    f1e8:	8020943a 	slli	r16,r16,16
    f1ec:	0000ef80 	call	ef8 <__mulsi3>
    f1f0:	a8ffffcc 	andi	r3,r21,65535
    f1f4:	1c06b03a 	or	r3,r3,r16
    f1f8:	1880042e 	bgeu	r3,r2,f20c <__umoddi3+0x54c>
    f1fc:	1cc7883a 	add	r3,r3,r19
    f200:	1cc00236 	bltu	r3,r19,f20c <__umoddi3+0x54c>
    f204:	1880012e 	bgeu	r3,r2,f20c <__umoddi3+0x54c>
    f208:	1cc7883a 	add	r3,r3,r19
    f20c:	18a3c83a 	sub	r17,r3,r2
    f210:	003f2906 	br	eeb8 <__alt_mem_Onchip_SRAM+0xf800eeb8>
    f214:	e48fc83a 	sub	r7,fp,r18
    f218:	1d49c83a 	sub	r4,r3,r21
    f21c:	e1f9803a 	cmpltu	fp,fp,r7
    f220:	2739c83a 	sub	fp,r4,fp
    f224:	8f09c83a 	sub	r4,r17,fp
    f228:	003fc306 	br	f138 <__alt_mem_Onchip_SRAM+0xf800f138>
    f22c:	01000604 	movi	r4,24
    f230:	003ef906 	br	ee18 <__alt_mem_Onchip_SRAM+0xf800ee18>
    f234:	00800604 	movi	r2,24
    f238:	003f1306 	br	ee88 <__alt_mem_Onchip_SRAM+0xf800ee88>
    f23c:	01000604 	movi	r4,24
    f240:	003eb606 	br	ed1c <__alt_mem_Onchip_SRAM+0xf800ed1c>
    f244:	40bf902e 	bgeu	r8,r2,f088 <__alt_mem_Onchip_SRAM+0xf800f088>
    f248:	b5bfff84 	addi	r22,r22,-2
    f24c:	4551883a 	add	r8,r8,r21
    f250:	003f8e06 	br	f08c <__alt_mem_Onchip_SRAM+0xf800f08c>
    f254:	18bf762e 	bgeu	r3,r2,f030 <__alt_mem_Onchip_SRAM+0xf800f030>
    f258:	8c7fff84 	addi	r17,r17,-2
    f25c:	1d47883a 	add	r3,r3,r21
    f260:	003f7406 	br	f034 <__alt_mem_Onchip_SRAM+0xf800f034>
    f264:	1cc7883a 	add	r3,r3,r19
    f268:	003ecd06 	br	eda0 <__alt_mem_Onchip_SRAM+0xf800eda0>
    f26c:	8005883a 	mov	r2,r16
    f270:	003ef806 	br	ee54 <__alt_mem_Onchip_SRAM+0xf800ee54>
    f274:	873fe736 	bltu	r16,fp,f214 <__alt_mem_Onchip_SRAM+0xf800f214>
    f278:	e00f883a 	mov	r7,fp
    f27c:	0009883a 	mov	r4,zero
    f280:	003fad06 	br	f138 <__alt_mem_Onchip_SRAM+0xf800f138>

0000f284 <__adddf3>:
    f284:	02c00434 	movhi	r11,16
    f288:	5affffc4 	addi	r11,r11,-1
    f28c:	2806d7fa 	srli	r3,r5,31
    f290:	2ad4703a 	and	r10,r5,r11
    f294:	3ad2703a 	and	r9,r7,r11
    f298:	3804d53a 	srli	r2,r7,20
    f29c:	3018d77a 	srli	r12,r6,29
    f2a0:	280ad53a 	srli	r5,r5,20
    f2a4:	501490fa 	slli	r10,r10,3
    f2a8:	2010d77a 	srli	r8,r4,29
    f2ac:	481290fa 	slli	r9,r9,3
    f2b0:	380ed7fa 	srli	r7,r7,31
    f2b4:	defffb04 	addi	sp,sp,-20
    f2b8:	dc800215 	stw	r18,8(sp)
    f2bc:	dc400115 	stw	r17,4(sp)
    f2c0:	dc000015 	stw	r16,0(sp)
    f2c4:	dfc00415 	stw	ra,16(sp)
    f2c8:	dcc00315 	stw	r19,12(sp)
    f2cc:	1c803fcc 	andi	r18,r3,255
    f2d0:	2c01ffcc 	andi	r16,r5,2047
    f2d4:	5210b03a 	or	r8,r10,r8
    f2d8:	202290fa 	slli	r17,r4,3
    f2dc:	1081ffcc 	andi	r2,r2,2047
    f2e0:	4b12b03a 	or	r9,r9,r12
    f2e4:	300c90fa 	slli	r6,r6,3
    f2e8:	91c07526 	beq	r18,r7,f4c0 <__adddf3+0x23c>
    f2ec:	8087c83a 	sub	r3,r16,r2
    f2f0:	00c0ab0e 	bge	zero,r3,f5a0 <__adddf3+0x31c>
    f2f4:	10002a1e 	bne	r2,zero,f3a0 <__adddf3+0x11c>
    f2f8:	4984b03a 	or	r2,r9,r6
    f2fc:	1000961e 	bne	r2,zero,f558 <__adddf3+0x2d4>
    f300:	888001cc 	andi	r2,r17,7
    f304:	10000726 	beq	r2,zero,f324 <__adddf3+0xa0>
    f308:	888003cc 	andi	r2,r17,15
    f30c:	00c00104 	movi	r3,4
    f310:	10c00426 	beq	r2,r3,f324 <__adddf3+0xa0>
    f314:	88c7883a 	add	r3,r17,r3
    f318:	1c63803a 	cmpltu	r17,r3,r17
    f31c:	4451883a 	add	r8,r8,r17
    f320:	1823883a 	mov	r17,r3
    f324:	4080202c 	andhi	r2,r8,128
    f328:	10005926 	beq	r2,zero,f490 <__adddf3+0x20c>
    f32c:	84000044 	addi	r16,r16,1
    f330:	0081ffc4 	movi	r2,2047
    f334:	8080ba26 	beq	r16,r2,f620 <__adddf3+0x39c>
    f338:	00bfe034 	movhi	r2,65408
    f33c:	10bfffc4 	addi	r2,r2,-1
    f340:	4090703a 	and	r8,r8,r2
    f344:	4004977a 	slli	r2,r8,29
    f348:	4010927a 	slli	r8,r8,9
    f34c:	8822d0fa 	srli	r17,r17,3
    f350:	8401ffcc 	andi	r16,r16,2047
    f354:	4010d33a 	srli	r8,r8,12
    f358:	9007883a 	mov	r3,r18
    f35c:	1444b03a 	or	r2,r2,r17
    f360:	8401ffcc 	andi	r16,r16,2047
    f364:	8020953a 	slli	r16,r16,20
    f368:	18c03fcc 	andi	r3,r3,255
    f36c:	01000434 	movhi	r4,16
    f370:	213fffc4 	addi	r4,r4,-1
    f374:	180697fa 	slli	r3,r3,31
    f378:	4110703a 	and	r8,r8,r4
    f37c:	4410b03a 	or	r8,r8,r16
    f380:	40c6b03a 	or	r3,r8,r3
    f384:	dfc00417 	ldw	ra,16(sp)
    f388:	dcc00317 	ldw	r19,12(sp)
    f38c:	dc800217 	ldw	r18,8(sp)
    f390:	dc400117 	ldw	r17,4(sp)
    f394:	dc000017 	ldw	r16,0(sp)
    f398:	dec00504 	addi	sp,sp,20
    f39c:	f800283a 	ret
    f3a0:	0081ffc4 	movi	r2,2047
    f3a4:	80bfd626 	beq	r16,r2,f300 <__alt_mem_Onchip_SRAM+0xf800f300>
    f3a8:	4a402034 	orhi	r9,r9,128
    f3ac:	00800e04 	movi	r2,56
    f3b0:	10c09f16 	blt	r2,r3,f630 <__adddf3+0x3ac>
    f3b4:	008007c4 	movi	r2,31
    f3b8:	10c0c216 	blt	r2,r3,f6c4 <__adddf3+0x440>
    f3bc:	00800804 	movi	r2,32
    f3c0:	10c5c83a 	sub	r2,r2,r3
    f3c4:	488a983a 	sll	r5,r9,r2
    f3c8:	30c8d83a 	srl	r4,r6,r3
    f3cc:	3084983a 	sll	r2,r6,r2
    f3d0:	48c6d83a 	srl	r3,r9,r3
    f3d4:	290cb03a 	or	r6,r5,r4
    f3d8:	1004c03a 	cmpne	r2,r2,zero
    f3dc:	308cb03a 	or	r6,r6,r2
    f3e0:	898dc83a 	sub	r6,r17,r6
    f3e4:	89a3803a 	cmpltu	r17,r17,r6
    f3e8:	40d1c83a 	sub	r8,r8,r3
    f3ec:	4451c83a 	sub	r8,r8,r17
    f3f0:	3023883a 	mov	r17,r6
    f3f4:	4080202c 	andhi	r2,r8,128
    f3f8:	10002326 	beq	r2,zero,f488 <__adddf3+0x204>
    f3fc:	04c02034 	movhi	r19,128
    f400:	9cffffc4 	addi	r19,r19,-1
    f404:	44e6703a 	and	r19,r8,r19
    f408:	98007626 	beq	r19,zero,f5e4 <__adddf3+0x360>
    f40c:	9809883a 	mov	r4,r19
    f410:	00010b40 	call	10b4 <__clzsi2>
    f414:	10fffe04 	addi	r3,r2,-8
    f418:	010007c4 	movi	r4,31
    f41c:	20c07716 	blt	r4,r3,f5fc <__adddf3+0x378>
    f420:	00800804 	movi	r2,32
    f424:	10c5c83a 	sub	r2,r2,r3
    f428:	8884d83a 	srl	r2,r17,r2
    f42c:	98d0983a 	sll	r8,r19,r3
    f430:	88e2983a 	sll	r17,r17,r3
    f434:	1204b03a 	or	r2,r2,r8
    f438:	1c007416 	blt	r3,r16,f60c <__adddf3+0x388>
    f43c:	1c21c83a 	sub	r16,r3,r16
    f440:	82000044 	addi	r8,r16,1
    f444:	00c007c4 	movi	r3,31
    f448:	1a009116 	blt	r3,r8,f690 <__adddf3+0x40c>
    f44c:	00c00804 	movi	r3,32
    f450:	1a07c83a 	sub	r3,r3,r8
    f454:	8a08d83a 	srl	r4,r17,r8
    f458:	88e2983a 	sll	r17,r17,r3
    f45c:	10c6983a 	sll	r3,r2,r3
    f460:	1210d83a 	srl	r8,r2,r8
    f464:	8804c03a 	cmpne	r2,r17,zero
    f468:	1906b03a 	or	r3,r3,r4
    f46c:	18a2b03a 	or	r17,r3,r2
    f470:	0021883a 	mov	r16,zero
    f474:	003fa206 	br	f300 <__alt_mem_Onchip_SRAM+0xf800f300>
    f478:	1890b03a 	or	r8,r3,r2
    f47c:	40017d26 	beq	r8,zero,fa74 <__adddf3+0x7f0>
    f480:	1011883a 	mov	r8,r2
    f484:	1823883a 	mov	r17,r3
    f488:	888001cc 	andi	r2,r17,7
    f48c:	103f9e1e 	bne	r2,zero,f308 <__alt_mem_Onchip_SRAM+0xf800f308>
    f490:	4004977a 	slli	r2,r8,29
    f494:	8822d0fa 	srli	r17,r17,3
    f498:	4010d0fa 	srli	r8,r8,3
    f49c:	9007883a 	mov	r3,r18
    f4a0:	1444b03a 	or	r2,r2,r17
    f4a4:	0101ffc4 	movi	r4,2047
    f4a8:	81002426 	beq	r16,r4,f53c <__adddf3+0x2b8>
    f4ac:	8120703a 	and	r16,r16,r4
    f4b0:	01000434 	movhi	r4,16
    f4b4:	213fffc4 	addi	r4,r4,-1
    f4b8:	4110703a 	and	r8,r8,r4
    f4bc:	003fa806 	br	f360 <__alt_mem_Onchip_SRAM+0xf800f360>
    f4c0:	8089c83a 	sub	r4,r16,r2
    f4c4:	01005e0e 	bge	zero,r4,f640 <__adddf3+0x3bc>
    f4c8:	10002b26 	beq	r2,zero,f578 <__adddf3+0x2f4>
    f4cc:	0081ffc4 	movi	r2,2047
    f4d0:	80bf8b26 	beq	r16,r2,f300 <__alt_mem_Onchip_SRAM+0xf800f300>
    f4d4:	4a402034 	orhi	r9,r9,128
    f4d8:	00800e04 	movi	r2,56
    f4dc:	1100a40e 	bge	r2,r4,f770 <__adddf3+0x4ec>
    f4e0:	498cb03a 	or	r6,r9,r6
    f4e4:	300ac03a 	cmpne	r5,r6,zero
    f4e8:	0013883a 	mov	r9,zero
    f4ec:	2c4b883a 	add	r5,r5,r17
    f4f0:	2c63803a 	cmpltu	r17,r5,r17
    f4f4:	4a11883a 	add	r8,r9,r8
    f4f8:	8a11883a 	add	r8,r17,r8
    f4fc:	2823883a 	mov	r17,r5
    f500:	4080202c 	andhi	r2,r8,128
    f504:	103fe026 	beq	r2,zero,f488 <__alt_mem_Onchip_SRAM+0xf800f488>
    f508:	84000044 	addi	r16,r16,1
    f50c:	0081ffc4 	movi	r2,2047
    f510:	8080d226 	beq	r16,r2,f85c <__adddf3+0x5d8>
    f514:	00bfe034 	movhi	r2,65408
    f518:	10bfffc4 	addi	r2,r2,-1
    f51c:	4090703a 	and	r8,r8,r2
    f520:	880ad07a 	srli	r5,r17,1
    f524:	400897fa 	slli	r4,r8,31
    f528:	88c0004c 	andi	r3,r17,1
    f52c:	28e2b03a 	or	r17,r5,r3
    f530:	4010d07a 	srli	r8,r8,1
    f534:	2462b03a 	or	r17,r4,r17
    f538:	003f7106 	br	f300 <__alt_mem_Onchip_SRAM+0xf800f300>
    f53c:	4088b03a 	or	r4,r8,r2
    f540:	20014526 	beq	r4,zero,fa58 <__adddf3+0x7d4>
    f544:	01000434 	movhi	r4,16
    f548:	42000234 	orhi	r8,r8,8
    f54c:	213fffc4 	addi	r4,r4,-1
    f550:	4110703a 	and	r8,r8,r4
    f554:	003f8206 	br	f360 <__alt_mem_Onchip_SRAM+0xf800f360>
    f558:	18ffffc4 	addi	r3,r3,-1
    f55c:	1800491e 	bne	r3,zero,f684 <__adddf3+0x400>
    f560:	898bc83a 	sub	r5,r17,r6
    f564:	8963803a 	cmpltu	r17,r17,r5
    f568:	4251c83a 	sub	r8,r8,r9
    f56c:	4451c83a 	sub	r8,r8,r17
    f570:	2823883a 	mov	r17,r5
    f574:	003f9f06 	br	f3f4 <__alt_mem_Onchip_SRAM+0xf800f3f4>
    f578:	4984b03a 	or	r2,r9,r6
    f57c:	103f6026 	beq	r2,zero,f300 <__alt_mem_Onchip_SRAM+0xf800f300>
    f580:	213fffc4 	addi	r4,r4,-1
    f584:	2000931e 	bne	r4,zero,f7d4 <__adddf3+0x550>
    f588:	898d883a 	add	r6,r17,r6
    f58c:	3463803a 	cmpltu	r17,r6,r17
    f590:	4251883a 	add	r8,r8,r9
    f594:	8a11883a 	add	r8,r17,r8
    f598:	3023883a 	mov	r17,r6
    f59c:	003fd806 	br	f500 <__alt_mem_Onchip_SRAM+0xf800f500>
    f5a0:	1800541e 	bne	r3,zero,f6f4 <__adddf3+0x470>
    f5a4:	80800044 	addi	r2,r16,1
    f5a8:	1081ffcc 	andi	r2,r2,2047
    f5ac:	00c00044 	movi	r3,1
    f5b0:	1880a00e 	bge	r3,r2,f834 <__adddf3+0x5b0>
    f5b4:	8989c83a 	sub	r4,r17,r6
    f5b8:	8905803a 	cmpltu	r2,r17,r4
    f5bc:	4267c83a 	sub	r19,r8,r9
    f5c0:	98a7c83a 	sub	r19,r19,r2
    f5c4:	9880202c 	andhi	r2,r19,128
    f5c8:	10006326 	beq	r2,zero,f758 <__adddf3+0x4d4>
    f5cc:	3463c83a 	sub	r17,r6,r17
    f5d0:	4a07c83a 	sub	r3,r9,r8
    f5d4:	344d803a 	cmpltu	r6,r6,r17
    f5d8:	19a7c83a 	sub	r19,r3,r6
    f5dc:	3825883a 	mov	r18,r7
    f5e0:	983f8a1e 	bne	r19,zero,f40c <__alt_mem_Onchip_SRAM+0xf800f40c>
    f5e4:	8809883a 	mov	r4,r17
    f5e8:	00010b40 	call	10b4 <__clzsi2>
    f5ec:	10800804 	addi	r2,r2,32
    f5f0:	10fffe04 	addi	r3,r2,-8
    f5f4:	010007c4 	movi	r4,31
    f5f8:	20ff890e 	bge	r4,r3,f420 <__alt_mem_Onchip_SRAM+0xf800f420>
    f5fc:	10bff604 	addi	r2,r2,-40
    f600:	8884983a 	sll	r2,r17,r2
    f604:	0023883a 	mov	r17,zero
    f608:	1c3f8c0e 	bge	r3,r16,f43c <__alt_mem_Onchip_SRAM+0xf800f43c>
    f60c:	023fe034 	movhi	r8,65408
    f610:	423fffc4 	addi	r8,r8,-1
    f614:	80e1c83a 	sub	r16,r16,r3
    f618:	1210703a 	and	r8,r2,r8
    f61c:	003f3806 	br	f300 <__alt_mem_Onchip_SRAM+0xf800f300>
    f620:	9007883a 	mov	r3,r18
    f624:	0011883a 	mov	r8,zero
    f628:	0005883a 	mov	r2,zero
    f62c:	003f4c06 	br	f360 <__alt_mem_Onchip_SRAM+0xf800f360>
    f630:	498cb03a 	or	r6,r9,r6
    f634:	300cc03a 	cmpne	r6,r6,zero
    f638:	0007883a 	mov	r3,zero
    f63c:	003f6806 	br	f3e0 <__alt_mem_Onchip_SRAM+0xf800f3e0>
    f640:	20009c1e 	bne	r4,zero,f8b4 <__adddf3+0x630>
    f644:	80800044 	addi	r2,r16,1
    f648:	1141ffcc 	andi	r5,r2,2047
    f64c:	01000044 	movi	r4,1
    f650:	2140670e 	bge	r4,r5,f7f0 <__adddf3+0x56c>
    f654:	0101ffc4 	movi	r4,2047
    f658:	11007f26 	beq	r2,r4,f858 <__adddf3+0x5d4>
    f65c:	898d883a 	add	r6,r17,r6
    f660:	4247883a 	add	r3,r8,r9
    f664:	3451803a 	cmpltu	r8,r6,r17
    f668:	40d1883a 	add	r8,r8,r3
    f66c:	402297fa 	slli	r17,r8,31
    f670:	300cd07a 	srli	r6,r6,1
    f674:	4010d07a 	srli	r8,r8,1
    f678:	1021883a 	mov	r16,r2
    f67c:	89a2b03a 	or	r17,r17,r6
    f680:	003f1f06 	br	f300 <__alt_mem_Onchip_SRAM+0xf800f300>
    f684:	0081ffc4 	movi	r2,2047
    f688:	80bf481e 	bne	r16,r2,f3ac <__alt_mem_Onchip_SRAM+0xf800f3ac>
    f68c:	003f1c06 	br	f300 <__alt_mem_Onchip_SRAM+0xf800f300>
    f690:	843ff844 	addi	r16,r16,-31
    f694:	01000804 	movi	r4,32
    f698:	1406d83a 	srl	r3,r2,r16
    f69c:	41005026 	beq	r8,r4,f7e0 <__adddf3+0x55c>
    f6a0:	01001004 	movi	r4,64
    f6a4:	2211c83a 	sub	r8,r4,r8
    f6a8:	1204983a 	sll	r2,r2,r8
    f6ac:	88a2b03a 	or	r17,r17,r2
    f6b0:	8822c03a 	cmpne	r17,r17,zero
    f6b4:	1c62b03a 	or	r17,r3,r17
    f6b8:	0011883a 	mov	r8,zero
    f6bc:	0021883a 	mov	r16,zero
    f6c0:	003f7106 	br	f488 <__alt_mem_Onchip_SRAM+0xf800f488>
    f6c4:	193ff804 	addi	r4,r3,-32
    f6c8:	00800804 	movi	r2,32
    f6cc:	4908d83a 	srl	r4,r9,r4
    f6d0:	18804526 	beq	r3,r2,f7e8 <__adddf3+0x564>
    f6d4:	00801004 	movi	r2,64
    f6d8:	10c5c83a 	sub	r2,r2,r3
    f6dc:	4886983a 	sll	r3,r9,r2
    f6e0:	198cb03a 	or	r6,r3,r6
    f6e4:	300cc03a 	cmpne	r6,r6,zero
    f6e8:	218cb03a 	or	r6,r4,r6
    f6ec:	0007883a 	mov	r3,zero
    f6f0:	003f3b06 	br	f3e0 <__alt_mem_Onchip_SRAM+0xf800f3e0>
    f6f4:	80002a26 	beq	r16,zero,f7a0 <__adddf3+0x51c>
    f6f8:	0101ffc4 	movi	r4,2047
    f6fc:	11006826 	beq	r2,r4,f8a0 <__adddf3+0x61c>
    f700:	00c7c83a 	sub	r3,zero,r3
    f704:	42002034 	orhi	r8,r8,128
    f708:	01000e04 	movi	r4,56
    f70c:	20c07c16 	blt	r4,r3,f900 <__adddf3+0x67c>
    f710:	010007c4 	movi	r4,31
    f714:	20c0da16 	blt	r4,r3,fa80 <__adddf3+0x7fc>
    f718:	01000804 	movi	r4,32
    f71c:	20c9c83a 	sub	r4,r4,r3
    f720:	4114983a 	sll	r10,r8,r4
    f724:	88cad83a 	srl	r5,r17,r3
    f728:	8908983a 	sll	r4,r17,r4
    f72c:	40c6d83a 	srl	r3,r8,r3
    f730:	5162b03a 	or	r17,r10,r5
    f734:	2008c03a 	cmpne	r4,r4,zero
    f738:	8922b03a 	or	r17,r17,r4
    f73c:	3463c83a 	sub	r17,r6,r17
    f740:	48c7c83a 	sub	r3,r9,r3
    f744:	344d803a 	cmpltu	r6,r6,r17
    f748:	1991c83a 	sub	r8,r3,r6
    f74c:	1021883a 	mov	r16,r2
    f750:	3825883a 	mov	r18,r7
    f754:	003f2706 	br	f3f4 <__alt_mem_Onchip_SRAM+0xf800f3f4>
    f758:	24d0b03a 	or	r8,r4,r19
    f75c:	40001b1e 	bne	r8,zero,f7cc <__adddf3+0x548>
    f760:	0005883a 	mov	r2,zero
    f764:	0007883a 	mov	r3,zero
    f768:	0021883a 	mov	r16,zero
    f76c:	003f4d06 	br	f4a4 <__alt_mem_Onchip_SRAM+0xf800f4a4>
    f770:	008007c4 	movi	r2,31
    f774:	11003c16 	blt	r2,r4,f868 <__adddf3+0x5e4>
    f778:	00800804 	movi	r2,32
    f77c:	1105c83a 	sub	r2,r2,r4
    f780:	488e983a 	sll	r7,r9,r2
    f784:	310ad83a 	srl	r5,r6,r4
    f788:	3084983a 	sll	r2,r6,r2
    f78c:	4912d83a 	srl	r9,r9,r4
    f790:	394ab03a 	or	r5,r7,r5
    f794:	1004c03a 	cmpne	r2,r2,zero
    f798:	288ab03a 	or	r5,r5,r2
    f79c:	003f5306 	br	f4ec <__alt_mem_Onchip_SRAM+0xf800f4ec>
    f7a0:	4448b03a 	or	r4,r8,r17
    f7a4:	20003e26 	beq	r4,zero,f8a0 <__adddf3+0x61c>
    f7a8:	00c6303a 	nor	r3,zero,r3
    f7ac:	18003a1e 	bne	r3,zero,f898 <__adddf3+0x614>
    f7b0:	3463c83a 	sub	r17,r6,r17
    f7b4:	4a07c83a 	sub	r3,r9,r8
    f7b8:	344d803a 	cmpltu	r6,r6,r17
    f7bc:	1991c83a 	sub	r8,r3,r6
    f7c0:	1021883a 	mov	r16,r2
    f7c4:	3825883a 	mov	r18,r7
    f7c8:	003f0a06 	br	f3f4 <__alt_mem_Onchip_SRAM+0xf800f3f4>
    f7cc:	2023883a 	mov	r17,r4
    f7d0:	003f0d06 	br	f408 <__alt_mem_Onchip_SRAM+0xf800f408>
    f7d4:	0081ffc4 	movi	r2,2047
    f7d8:	80bf3f1e 	bne	r16,r2,f4d8 <__alt_mem_Onchip_SRAM+0xf800f4d8>
    f7dc:	003ec806 	br	f300 <__alt_mem_Onchip_SRAM+0xf800f300>
    f7e0:	0005883a 	mov	r2,zero
    f7e4:	003fb106 	br	f6ac <__alt_mem_Onchip_SRAM+0xf800f6ac>
    f7e8:	0007883a 	mov	r3,zero
    f7ec:	003fbc06 	br	f6e0 <__alt_mem_Onchip_SRAM+0xf800f6e0>
    f7f0:	4444b03a 	or	r2,r8,r17
    f7f4:	8000871e 	bne	r16,zero,fa14 <__adddf3+0x790>
    f7f8:	1000ba26 	beq	r2,zero,fae4 <__adddf3+0x860>
    f7fc:	4984b03a 	or	r2,r9,r6
    f800:	103ebf26 	beq	r2,zero,f300 <__alt_mem_Onchip_SRAM+0xf800f300>
    f804:	8985883a 	add	r2,r17,r6
    f808:	4247883a 	add	r3,r8,r9
    f80c:	1451803a 	cmpltu	r8,r2,r17
    f810:	40d1883a 	add	r8,r8,r3
    f814:	40c0202c 	andhi	r3,r8,128
    f818:	1023883a 	mov	r17,r2
    f81c:	183f1a26 	beq	r3,zero,f488 <__alt_mem_Onchip_SRAM+0xf800f488>
    f820:	00bfe034 	movhi	r2,65408
    f824:	10bfffc4 	addi	r2,r2,-1
    f828:	2021883a 	mov	r16,r4
    f82c:	4090703a 	and	r8,r8,r2
    f830:	003eb306 	br	f300 <__alt_mem_Onchip_SRAM+0xf800f300>
    f834:	4444b03a 	or	r2,r8,r17
    f838:	8000291e 	bne	r16,zero,f8e0 <__adddf3+0x65c>
    f83c:	10004b1e 	bne	r2,zero,f96c <__adddf3+0x6e8>
    f840:	4990b03a 	or	r8,r9,r6
    f844:	40008b26 	beq	r8,zero,fa74 <__adddf3+0x7f0>
    f848:	4811883a 	mov	r8,r9
    f84c:	3023883a 	mov	r17,r6
    f850:	3825883a 	mov	r18,r7
    f854:	003eaa06 	br	f300 <__alt_mem_Onchip_SRAM+0xf800f300>
    f858:	1021883a 	mov	r16,r2
    f85c:	0011883a 	mov	r8,zero
    f860:	0005883a 	mov	r2,zero
    f864:	003f0f06 	br	f4a4 <__alt_mem_Onchip_SRAM+0xf800f4a4>
    f868:	217ff804 	addi	r5,r4,-32
    f86c:	00800804 	movi	r2,32
    f870:	494ad83a 	srl	r5,r9,r5
    f874:	20807d26 	beq	r4,r2,fa6c <__adddf3+0x7e8>
    f878:	00801004 	movi	r2,64
    f87c:	1109c83a 	sub	r4,r2,r4
    f880:	4912983a 	sll	r9,r9,r4
    f884:	498cb03a 	or	r6,r9,r6
    f888:	300cc03a 	cmpne	r6,r6,zero
    f88c:	298ab03a 	or	r5,r5,r6
    f890:	0013883a 	mov	r9,zero
    f894:	003f1506 	br	f4ec <__alt_mem_Onchip_SRAM+0xf800f4ec>
    f898:	0101ffc4 	movi	r4,2047
    f89c:	113f9a1e 	bne	r2,r4,f708 <__alt_mem_Onchip_SRAM+0xf800f708>
    f8a0:	4811883a 	mov	r8,r9
    f8a4:	3023883a 	mov	r17,r6
    f8a8:	1021883a 	mov	r16,r2
    f8ac:	3825883a 	mov	r18,r7
    f8b0:	003e9306 	br	f300 <__alt_mem_Onchip_SRAM+0xf800f300>
    f8b4:	8000161e 	bne	r16,zero,f910 <__adddf3+0x68c>
    f8b8:	444ab03a 	or	r5,r8,r17
    f8bc:	28005126 	beq	r5,zero,fa04 <__adddf3+0x780>
    f8c0:	0108303a 	nor	r4,zero,r4
    f8c4:	20004d1e 	bne	r4,zero,f9fc <__adddf3+0x778>
    f8c8:	89a3883a 	add	r17,r17,r6
    f8cc:	4253883a 	add	r9,r8,r9
    f8d0:	898d803a 	cmpltu	r6,r17,r6
    f8d4:	3251883a 	add	r8,r6,r9
    f8d8:	1021883a 	mov	r16,r2
    f8dc:	003f0806 	br	f500 <__alt_mem_Onchip_SRAM+0xf800f500>
    f8e0:	1000301e 	bne	r2,zero,f9a4 <__adddf3+0x720>
    f8e4:	4984b03a 	or	r2,r9,r6
    f8e8:	10007126 	beq	r2,zero,fab0 <__adddf3+0x82c>
    f8ec:	4811883a 	mov	r8,r9
    f8f0:	3023883a 	mov	r17,r6
    f8f4:	3825883a 	mov	r18,r7
    f8f8:	0401ffc4 	movi	r16,2047
    f8fc:	003e8006 	br	f300 <__alt_mem_Onchip_SRAM+0xf800f300>
    f900:	4462b03a 	or	r17,r8,r17
    f904:	8822c03a 	cmpne	r17,r17,zero
    f908:	0007883a 	mov	r3,zero
    f90c:	003f8b06 	br	f73c <__alt_mem_Onchip_SRAM+0xf800f73c>
    f910:	0141ffc4 	movi	r5,2047
    f914:	11403b26 	beq	r2,r5,fa04 <__adddf3+0x780>
    f918:	0109c83a 	sub	r4,zero,r4
    f91c:	42002034 	orhi	r8,r8,128
    f920:	01400e04 	movi	r5,56
    f924:	29006716 	blt	r5,r4,fac4 <__adddf3+0x840>
    f928:	014007c4 	movi	r5,31
    f92c:	29007016 	blt	r5,r4,faf0 <__adddf3+0x86c>
    f930:	01400804 	movi	r5,32
    f934:	290bc83a 	sub	r5,r5,r4
    f938:	4154983a 	sll	r10,r8,r5
    f93c:	890ed83a 	srl	r7,r17,r4
    f940:	894a983a 	sll	r5,r17,r5
    f944:	4108d83a 	srl	r4,r8,r4
    f948:	51e2b03a 	or	r17,r10,r7
    f94c:	280ac03a 	cmpne	r5,r5,zero
    f950:	8962b03a 	or	r17,r17,r5
    f954:	89a3883a 	add	r17,r17,r6
    f958:	2253883a 	add	r9,r4,r9
    f95c:	898d803a 	cmpltu	r6,r17,r6
    f960:	3251883a 	add	r8,r6,r9
    f964:	1021883a 	mov	r16,r2
    f968:	003ee506 	br	f500 <__alt_mem_Onchip_SRAM+0xf800f500>
    f96c:	4984b03a 	or	r2,r9,r6
    f970:	103e6326 	beq	r2,zero,f300 <__alt_mem_Onchip_SRAM+0xf800f300>
    f974:	8987c83a 	sub	r3,r17,r6
    f978:	88c9803a 	cmpltu	r4,r17,r3
    f97c:	4245c83a 	sub	r2,r8,r9
    f980:	1105c83a 	sub	r2,r2,r4
    f984:	1100202c 	andhi	r4,r2,128
    f988:	203ebb26 	beq	r4,zero,f478 <__alt_mem_Onchip_SRAM+0xf800f478>
    f98c:	3463c83a 	sub	r17,r6,r17
    f990:	4a07c83a 	sub	r3,r9,r8
    f994:	344d803a 	cmpltu	r6,r6,r17
    f998:	1991c83a 	sub	r8,r3,r6
    f99c:	3825883a 	mov	r18,r7
    f9a0:	003e5706 	br	f300 <__alt_mem_Onchip_SRAM+0xf800f300>
    f9a4:	4984b03a 	or	r2,r9,r6
    f9a8:	10002e26 	beq	r2,zero,fa64 <__adddf3+0x7e0>
    f9ac:	4004d0fa 	srli	r2,r8,3
    f9b0:	8822d0fa 	srli	r17,r17,3
    f9b4:	4010977a 	slli	r8,r8,29
    f9b8:	10c0022c 	andhi	r3,r2,8
    f9bc:	4462b03a 	or	r17,r8,r17
    f9c0:	18000826 	beq	r3,zero,f9e4 <__adddf3+0x760>
    f9c4:	4808d0fa 	srli	r4,r9,3
    f9c8:	20c0022c 	andhi	r3,r4,8
    f9cc:	1800051e 	bne	r3,zero,f9e4 <__adddf3+0x760>
    f9d0:	300cd0fa 	srli	r6,r6,3
    f9d4:	4806977a 	slli	r3,r9,29
    f9d8:	2005883a 	mov	r2,r4
    f9dc:	3825883a 	mov	r18,r7
    f9e0:	19a2b03a 	or	r17,r3,r6
    f9e4:	8810d77a 	srli	r8,r17,29
    f9e8:	100490fa 	slli	r2,r2,3
    f9ec:	882290fa 	slli	r17,r17,3
    f9f0:	0401ffc4 	movi	r16,2047
    f9f4:	4090b03a 	or	r8,r8,r2
    f9f8:	003e4106 	br	f300 <__alt_mem_Onchip_SRAM+0xf800f300>
    f9fc:	0141ffc4 	movi	r5,2047
    fa00:	117fc71e 	bne	r2,r5,f920 <__alt_mem_Onchip_SRAM+0xf800f920>
    fa04:	4811883a 	mov	r8,r9
    fa08:	3023883a 	mov	r17,r6
    fa0c:	1021883a 	mov	r16,r2
    fa10:	003e3b06 	br	f300 <__alt_mem_Onchip_SRAM+0xf800f300>
    fa14:	10002f26 	beq	r2,zero,fad4 <__adddf3+0x850>
    fa18:	4984b03a 	or	r2,r9,r6
    fa1c:	10001126 	beq	r2,zero,fa64 <__adddf3+0x7e0>
    fa20:	4004d0fa 	srli	r2,r8,3
    fa24:	8822d0fa 	srli	r17,r17,3
    fa28:	4010977a 	slli	r8,r8,29
    fa2c:	10c0022c 	andhi	r3,r2,8
    fa30:	4462b03a 	or	r17,r8,r17
    fa34:	183feb26 	beq	r3,zero,f9e4 <__alt_mem_Onchip_SRAM+0xf800f9e4>
    fa38:	4808d0fa 	srli	r4,r9,3
    fa3c:	20c0022c 	andhi	r3,r4,8
    fa40:	183fe81e 	bne	r3,zero,f9e4 <__alt_mem_Onchip_SRAM+0xf800f9e4>
    fa44:	300cd0fa 	srli	r6,r6,3
    fa48:	4806977a 	slli	r3,r9,29
    fa4c:	2005883a 	mov	r2,r4
    fa50:	19a2b03a 	or	r17,r3,r6
    fa54:	003fe306 	br	f9e4 <__alt_mem_Onchip_SRAM+0xf800f9e4>
    fa58:	0011883a 	mov	r8,zero
    fa5c:	0005883a 	mov	r2,zero
    fa60:	003e3f06 	br	f360 <__alt_mem_Onchip_SRAM+0xf800f360>
    fa64:	0401ffc4 	movi	r16,2047
    fa68:	003e2506 	br	f300 <__alt_mem_Onchip_SRAM+0xf800f300>
    fa6c:	0013883a 	mov	r9,zero
    fa70:	003f8406 	br	f884 <__alt_mem_Onchip_SRAM+0xf800f884>
    fa74:	0005883a 	mov	r2,zero
    fa78:	0007883a 	mov	r3,zero
    fa7c:	003e8906 	br	f4a4 <__alt_mem_Onchip_SRAM+0xf800f4a4>
    fa80:	197ff804 	addi	r5,r3,-32
    fa84:	01000804 	movi	r4,32
    fa88:	414ad83a 	srl	r5,r8,r5
    fa8c:	19002426 	beq	r3,r4,fb20 <__adddf3+0x89c>
    fa90:	01001004 	movi	r4,64
    fa94:	20c7c83a 	sub	r3,r4,r3
    fa98:	40c6983a 	sll	r3,r8,r3
    fa9c:	1c46b03a 	or	r3,r3,r17
    faa0:	1806c03a 	cmpne	r3,r3,zero
    faa4:	28e2b03a 	or	r17,r5,r3
    faa8:	0007883a 	mov	r3,zero
    faac:	003f2306 	br	f73c <__alt_mem_Onchip_SRAM+0xf800f73c>
    fab0:	0007883a 	mov	r3,zero
    fab4:	5811883a 	mov	r8,r11
    fab8:	00bfffc4 	movi	r2,-1
    fabc:	0401ffc4 	movi	r16,2047
    fac0:	003e7806 	br	f4a4 <__alt_mem_Onchip_SRAM+0xf800f4a4>
    fac4:	4462b03a 	or	r17,r8,r17
    fac8:	8822c03a 	cmpne	r17,r17,zero
    facc:	0009883a 	mov	r4,zero
    fad0:	003fa006 	br	f954 <__alt_mem_Onchip_SRAM+0xf800f954>
    fad4:	4811883a 	mov	r8,r9
    fad8:	3023883a 	mov	r17,r6
    fadc:	0401ffc4 	movi	r16,2047
    fae0:	003e0706 	br	f300 <__alt_mem_Onchip_SRAM+0xf800f300>
    fae4:	4811883a 	mov	r8,r9
    fae8:	3023883a 	mov	r17,r6
    faec:	003e0406 	br	f300 <__alt_mem_Onchip_SRAM+0xf800f300>
    faf0:	21fff804 	addi	r7,r4,-32
    faf4:	01400804 	movi	r5,32
    faf8:	41ced83a 	srl	r7,r8,r7
    fafc:	21400a26 	beq	r4,r5,fb28 <__adddf3+0x8a4>
    fb00:	01401004 	movi	r5,64
    fb04:	2909c83a 	sub	r4,r5,r4
    fb08:	4108983a 	sll	r4,r8,r4
    fb0c:	2448b03a 	or	r4,r4,r17
    fb10:	2008c03a 	cmpne	r4,r4,zero
    fb14:	3922b03a 	or	r17,r7,r4
    fb18:	0009883a 	mov	r4,zero
    fb1c:	003f8d06 	br	f954 <__alt_mem_Onchip_SRAM+0xf800f954>
    fb20:	0007883a 	mov	r3,zero
    fb24:	003fdd06 	br	fa9c <__alt_mem_Onchip_SRAM+0xf800fa9c>
    fb28:	0009883a 	mov	r4,zero
    fb2c:	003ff706 	br	fb0c <__alt_mem_Onchip_SRAM+0xf800fb0c>

0000fb30 <__divdf3>:
    fb30:	defff004 	addi	sp,sp,-64
    fb34:	dc800815 	stw	r18,32(sp)
    fb38:	2824d53a 	srli	r18,r5,20
    fb3c:	dd800c15 	stw	r22,48(sp)
    fb40:	282cd7fa 	srli	r22,r5,31
    fb44:	dc000615 	stw	r16,24(sp)
    fb48:	04000434 	movhi	r16,16
    fb4c:	843fffc4 	addi	r16,r16,-1
    fb50:	dfc00f15 	stw	ra,60(sp)
    fb54:	df000e15 	stw	fp,56(sp)
    fb58:	ddc00d15 	stw	r23,52(sp)
    fb5c:	dd400b15 	stw	r21,44(sp)
    fb60:	dd000a15 	stw	r20,40(sp)
    fb64:	dcc00915 	stw	r19,36(sp)
    fb68:	dc400715 	stw	r17,28(sp)
    fb6c:	9481ffcc 	andi	r18,r18,2047
    fb70:	2c20703a 	and	r16,r5,r16
    fb74:	b2003fcc 	andi	r8,r22,255
    fb78:	90006126 	beq	r18,zero,fd00 <__divdf3+0x1d0>
    fb7c:	0081ffc4 	movi	r2,2047
    fb80:	202b883a 	mov	r21,r4
    fb84:	90803726 	beq	r18,r2,fc64 <__divdf3+0x134>
    fb88:	80800434 	orhi	r2,r16,16
    fb8c:	100490fa 	slli	r2,r2,3
    fb90:	2020d77a 	srli	r16,r4,29
    fb94:	202a90fa 	slli	r21,r4,3
    fb98:	94bf0044 	addi	r18,r18,-1023
    fb9c:	80a0b03a 	or	r16,r16,r2
    fba0:	0013883a 	mov	r9,zero
    fba4:	000b883a 	mov	r5,zero
    fba8:	3806d53a 	srli	r3,r7,20
    fbac:	382ed7fa 	srli	r23,r7,31
    fbb0:	04400434 	movhi	r17,16
    fbb4:	8c7fffc4 	addi	r17,r17,-1
    fbb8:	18c1ffcc 	andi	r3,r3,2047
    fbbc:	3029883a 	mov	r20,r6
    fbc0:	3c62703a 	and	r17,r7,r17
    fbc4:	bf003fcc 	andi	fp,r23,255
    fbc8:	18006e26 	beq	r3,zero,fd84 <__divdf3+0x254>
    fbcc:	0081ffc4 	movi	r2,2047
    fbd0:	18806626 	beq	r3,r2,fd6c <__divdf3+0x23c>
    fbd4:	88800434 	orhi	r2,r17,16
    fbd8:	100490fa 	slli	r2,r2,3
    fbdc:	3022d77a 	srli	r17,r6,29
    fbe0:	302890fa 	slli	r20,r6,3
    fbe4:	18ff0044 	addi	r3,r3,-1023
    fbe8:	88a2b03a 	or	r17,r17,r2
    fbec:	000f883a 	mov	r7,zero
    fbf0:	b5e6f03a 	xor	r19,r22,r23
    fbf4:	3a4cb03a 	or	r6,r7,r9
    fbf8:	008003c4 	movi	r2,15
    fbfc:	9809883a 	mov	r4,r19
    fc00:	90c7c83a 	sub	r3,r18,r3
    fc04:	9cc03fcc 	andi	r19,r19,255
    fc08:	11809636 	bltu	r2,r6,fe64 <__divdf3+0x334>
    fc0c:	300c90ba 	slli	r6,r6,2
    fc10:	00800074 	movhi	r2,1
    fc14:	10bf0904 	addi	r2,r2,-988
    fc18:	308d883a 	add	r6,r6,r2
    fc1c:	30800017 	ldw	r2,0(r6)
    fc20:	1000683a 	jmp	r2
    fc24:	0000fe64 	muli	zero,zero,1017
    fc28:	0000fc9c 	xori	zero,zero,1010
    fc2c:	0000fe54 	movui	zero,1017
    fc30:	0000fc90 	cmplti	zero,zero,1010
    fc34:	0000fe54 	movui	zero,1017
    fc38:	0000fe28 	cmpgeui	zero,zero,1016
    fc3c:	0000fe54 	movui	zero,1017
    fc40:	0000fc90 	cmplti	zero,zero,1010
    fc44:	0000fc9c 	xori	zero,zero,1010
    fc48:	0000fc9c 	xori	zero,zero,1010
    fc4c:	0000fe28 	cmpgeui	zero,zero,1016
    fc50:	0000fc90 	cmplti	zero,zero,1010
    fc54:	0000fc80 	call	fc8 <__floatsisf+0x38>
    fc58:	0000fc80 	call	fc8 <__floatsisf+0x38>
    fc5c:	0000fc80 	call	fc8 <__floatsisf+0x38>
    fc60:	000101ec 	andhi	zero,zero,1031
    fc64:	2404b03a 	or	r2,r4,r16
    fc68:	10006c1e 	bne	r2,zero,fe1c <__divdf3+0x2ec>
    fc6c:	02400204 	movi	r9,8
    fc70:	0021883a 	mov	r16,zero
    fc74:	002b883a 	mov	r21,zero
    fc78:	01400084 	movi	r5,2
    fc7c:	003fca06 	br	fba8 <__alt_mem_Onchip_SRAM+0xf800fba8>
    fc80:	8023883a 	mov	r17,r16
    fc84:	a829883a 	mov	r20,r21
    fc88:	4039883a 	mov	fp,r8
    fc8c:	280f883a 	mov	r7,r5
    fc90:	00800084 	movi	r2,2
    fc94:	3881601e 	bne	r7,r2,10218 <__divdf3+0x6e8>
    fc98:	e027883a 	mov	r19,fp
    fc9c:	9900004c 	andi	r4,r19,1
    fca0:	0081ffc4 	movi	r2,2047
    fca4:	0021883a 	mov	r16,zero
    fca8:	002b883a 	mov	r21,zero
    fcac:	1004953a 	slli	r2,r2,20
    fcb0:	20c03fcc 	andi	r3,r4,255
    fcb4:	01400434 	movhi	r5,16
    fcb8:	297fffc4 	addi	r5,r5,-1
    fcbc:	180697fa 	slli	r3,r3,31
    fcc0:	8160703a 	and	r16,r16,r5
    fcc4:	80a0b03a 	or	r16,r16,r2
    fcc8:	80c6b03a 	or	r3,r16,r3
    fccc:	a805883a 	mov	r2,r21
    fcd0:	dfc00f17 	ldw	ra,60(sp)
    fcd4:	df000e17 	ldw	fp,56(sp)
    fcd8:	ddc00d17 	ldw	r23,52(sp)
    fcdc:	dd800c17 	ldw	r22,48(sp)
    fce0:	dd400b17 	ldw	r21,44(sp)
    fce4:	dd000a17 	ldw	r20,40(sp)
    fce8:	dcc00917 	ldw	r19,36(sp)
    fcec:	dc800817 	ldw	r18,32(sp)
    fcf0:	dc400717 	ldw	r17,28(sp)
    fcf4:	dc000617 	ldw	r16,24(sp)
    fcf8:	dec01004 	addi	sp,sp,64
    fcfc:	f800283a 	ret
    fd00:	2404b03a 	or	r2,r4,r16
    fd04:	2023883a 	mov	r17,r4
    fd08:	10003f26 	beq	r2,zero,fe08 <__divdf3+0x2d8>
    fd0c:	80015e26 	beq	r16,zero,10288 <__divdf3+0x758>
    fd10:	8009883a 	mov	r4,r16
    fd14:	d9800215 	stw	r6,8(sp)
    fd18:	d9c00515 	stw	r7,20(sp)
    fd1c:	da000415 	stw	r8,16(sp)
    fd20:	00010b40 	call	10b4 <__clzsi2>
    fd24:	d9800217 	ldw	r6,8(sp)
    fd28:	d9c00517 	ldw	r7,20(sp)
    fd2c:	da000417 	ldw	r8,16(sp)
    fd30:	113ffd44 	addi	r4,r2,-11
    fd34:	00c00704 	movi	r3,28
    fd38:	19014f16 	blt	r3,r4,10278 <__divdf3+0x748>
    fd3c:	00c00744 	movi	r3,29
    fd40:	157ffe04 	addi	r21,r2,-8
    fd44:	1907c83a 	sub	r3,r3,r4
    fd48:	8560983a 	sll	r16,r16,r21
    fd4c:	88c6d83a 	srl	r3,r17,r3
    fd50:	8d6a983a 	sll	r21,r17,r21
    fd54:	1c20b03a 	or	r16,r3,r16
    fd58:	1080fcc4 	addi	r2,r2,1011
    fd5c:	00a5c83a 	sub	r18,zero,r2
    fd60:	0013883a 	mov	r9,zero
    fd64:	000b883a 	mov	r5,zero
    fd68:	003f8f06 	br	fba8 <__alt_mem_Onchip_SRAM+0xf800fba8>
    fd6c:	3444b03a 	or	r2,r6,r17
    fd70:	1000231e 	bne	r2,zero,fe00 <__divdf3+0x2d0>
    fd74:	0023883a 	mov	r17,zero
    fd78:	0029883a 	mov	r20,zero
    fd7c:	01c00084 	movi	r7,2
    fd80:	003f9b06 	br	fbf0 <__alt_mem_Onchip_SRAM+0xf800fbf0>
    fd84:	3444b03a 	or	r2,r6,r17
    fd88:	10001926 	beq	r2,zero,fdf0 <__divdf3+0x2c0>
    fd8c:	88014b26 	beq	r17,zero,102bc <__divdf3+0x78c>
    fd90:	8809883a 	mov	r4,r17
    fd94:	d9400115 	stw	r5,4(sp)
    fd98:	d9800215 	stw	r6,8(sp)
    fd9c:	da000415 	stw	r8,16(sp)
    fda0:	da400315 	stw	r9,12(sp)
    fda4:	00010b40 	call	10b4 <__clzsi2>
    fda8:	d9400117 	ldw	r5,4(sp)
    fdac:	d9800217 	ldw	r6,8(sp)
    fdb0:	da000417 	ldw	r8,16(sp)
    fdb4:	da400317 	ldw	r9,12(sp)
    fdb8:	113ffd44 	addi	r4,r2,-11
    fdbc:	00c00704 	movi	r3,28
    fdc0:	19013a16 	blt	r3,r4,102ac <__divdf3+0x77c>
    fdc4:	00c00744 	movi	r3,29
    fdc8:	153ffe04 	addi	r20,r2,-8
    fdcc:	1907c83a 	sub	r3,r3,r4
    fdd0:	8d22983a 	sll	r17,r17,r20
    fdd4:	30c6d83a 	srl	r3,r6,r3
    fdd8:	3528983a 	sll	r20,r6,r20
    fddc:	1c62b03a 	or	r17,r3,r17
    fde0:	1080fcc4 	addi	r2,r2,1011
    fde4:	0087c83a 	sub	r3,zero,r2
    fde8:	000f883a 	mov	r7,zero
    fdec:	003f8006 	br	fbf0 <__alt_mem_Onchip_SRAM+0xf800fbf0>
    fdf0:	0023883a 	mov	r17,zero
    fdf4:	0029883a 	mov	r20,zero
    fdf8:	01c00044 	movi	r7,1
    fdfc:	003f7c06 	br	fbf0 <__alt_mem_Onchip_SRAM+0xf800fbf0>
    fe00:	01c000c4 	movi	r7,3
    fe04:	003f7a06 	br	fbf0 <__alt_mem_Onchip_SRAM+0xf800fbf0>
    fe08:	02400104 	movi	r9,4
    fe0c:	0021883a 	mov	r16,zero
    fe10:	002b883a 	mov	r21,zero
    fe14:	01400044 	movi	r5,1
    fe18:	003f6306 	br	fba8 <__alt_mem_Onchip_SRAM+0xf800fba8>
    fe1c:	02400304 	movi	r9,12
    fe20:	014000c4 	movi	r5,3
    fe24:	003f6006 	br	fba8 <__alt_mem_Onchip_SRAM+0xf800fba8>
    fe28:	04000434 	movhi	r16,16
    fe2c:	0009883a 	mov	r4,zero
    fe30:	843fffc4 	addi	r16,r16,-1
    fe34:	057fffc4 	movi	r21,-1
    fe38:	0081ffc4 	movi	r2,2047
    fe3c:	003f9b06 	br	fcac <__alt_mem_Onchip_SRAM+0xf800fcac>
    fe40:	00c00044 	movi	r3,1
    fe44:	1887c83a 	sub	r3,r3,r2
    fe48:	01000e04 	movi	r4,56
    fe4c:	20c1530e 	bge	r4,r3,1039c <__divdf3+0x86c>
    fe50:	9900004c 	andi	r4,r19,1
    fe54:	0005883a 	mov	r2,zero
    fe58:	0021883a 	mov	r16,zero
    fe5c:	002b883a 	mov	r21,zero
    fe60:	003f9206 	br	fcac <__alt_mem_Onchip_SRAM+0xf800fcac>
    fe64:	8c012e36 	bltu	r17,r16,10320 <__divdf3+0x7f0>
    fe68:	84412c26 	beq	r16,r17,1031c <__divdf3+0x7ec>
    fe6c:	a82f883a 	mov	r23,r21
    fe70:	18ffffc4 	addi	r3,r3,-1
    fe74:	002b883a 	mov	r21,zero
    fe78:	a004d63a 	srli	r2,r20,24
    fe7c:	8822923a 	slli	r17,r17,8
    fe80:	a028923a 	slli	r20,r20,8
    fe84:	8009883a 	mov	r4,r16
    fe88:	88acb03a 	or	r22,r17,r2
    fe8c:	dd000015 	stw	r20,0(sp)
    fe90:	b028d43a 	srli	r20,r22,16
    fe94:	d8c00215 	stw	r3,8(sp)
    fe98:	b4bfffcc 	andi	r18,r22,65535
    fe9c:	a00b883a 	mov	r5,r20
    fea0:	0000e3c0 	call	e3c <__udivsi3>
    fea4:	100b883a 	mov	r5,r2
    fea8:	9009883a 	mov	r4,r18
    feac:	1023883a 	mov	r17,r2
    feb0:	0000ef80 	call	ef8 <__mulsi3>
    feb4:	8009883a 	mov	r4,r16
    feb8:	a00b883a 	mov	r5,r20
    febc:	1039883a 	mov	fp,r2
    fec0:	0000ea00 	call	ea0 <__umodsi3>
    fec4:	1004943a 	slli	r2,r2,16
    fec8:	b808d43a 	srli	r4,r23,16
    fecc:	d8c00217 	ldw	r3,8(sp)
    fed0:	2084b03a 	or	r2,r4,r2
    fed4:	1700062e 	bgeu	r2,fp,fef0 <__divdf3+0x3c0>
    fed8:	1585883a 	add	r2,r2,r22
    fedc:	893fffc4 	addi	r4,r17,-1
    fee0:	15811d36 	bltu	r2,r22,10358 <__divdf3+0x828>
    fee4:	17011c2e 	bgeu	r2,fp,10358 <__divdf3+0x828>
    fee8:	8c7fff84 	addi	r17,r17,-2
    feec:	1585883a 	add	r2,r2,r22
    fef0:	1739c83a 	sub	fp,r2,fp
    fef4:	a00b883a 	mov	r5,r20
    fef8:	e009883a 	mov	r4,fp
    fefc:	d8c00215 	stw	r3,8(sp)
    ff00:	0000e3c0 	call	e3c <__udivsi3>
    ff04:	100b883a 	mov	r5,r2
    ff08:	9009883a 	mov	r4,r18
    ff0c:	1021883a 	mov	r16,r2
    ff10:	0000ef80 	call	ef8 <__mulsi3>
    ff14:	a00b883a 	mov	r5,r20
    ff18:	e009883a 	mov	r4,fp
    ff1c:	d8800415 	stw	r2,16(sp)
    ff20:	0000ea00 	call	ea0 <__umodsi3>
    ff24:	1004943a 	slli	r2,r2,16
    ff28:	da000417 	ldw	r8,16(sp)
    ff2c:	bdffffcc 	andi	r23,r23,65535
    ff30:	b884b03a 	or	r2,r23,r2
    ff34:	d8c00217 	ldw	r3,8(sp)
    ff38:	1200062e 	bgeu	r2,r8,ff54 <__divdf3+0x424>
    ff3c:	1585883a 	add	r2,r2,r22
    ff40:	813fffc4 	addi	r4,r16,-1
    ff44:	15810236 	bltu	r2,r22,10350 <__divdf3+0x820>
    ff48:	1201012e 	bgeu	r2,r8,10350 <__divdf3+0x820>
    ff4c:	843fff84 	addi	r16,r16,-2
    ff50:	1585883a 	add	r2,r2,r22
    ff54:	8822943a 	slli	r17,r17,16
    ff58:	d9800017 	ldw	r6,0(sp)
    ff5c:	1211c83a 	sub	r8,r2,r8
    ff60:	8c22b03a 	or	r17,r17,r16
    ff64:	373fffcc 	andi	fp,r6,65535
    ff68:	8abfffcc 	andi	r10,r17,65535
    ff6c:	8820d43a 	srli	r16,r17,16
    ff70:	5009883a 	mov	r4,r10
    ff74:	e00b883a 	mov	r5,fp
    ff78:	302ed43a 	srli	r23,r6,16
    ff7c:	d8c00215 	stw	r3,8(sp)
    ff80:	da000415 	stw	r8,16(sp)
    ff84:	da800115 	stw	r10,4(sp)
    ff88:	0000ef80 	call	ef8 <__mulsi3>
    ff8c:	800b883a 	mov	r5,r16
    ff90:	e009883a 	mov	r4,fp
    ff94:	d8800515 	stw	r2,20(sp)
    ff98:	0000ef80 	call	ef8 <__mulsi3>
    ff9c:	8009883a 	mov	r4,r16
    ffa0:	b80b883a 	mov	r5,r23
    ffa4:	d8800315 	stw	r2,12(sp)
    ffa8:	0000ef80 	call	ef8 <__mulsi3>
    ffac:	da800117 	ldw	r10,4(sp)
    ffb0:	b80b883a 	mov	r5,r23
    ffb4:	1021883a 	mov	r16,r2
    ffb8:	5009883a 	mov	r4,r10
    ffbc:	0000ef80 	call	ef8 <__mulsi3>
    ffc0:	d9c00517 	ldw	r7,20(sp)
    ffc4:	da400317 	ldw	r9,12(sp)
    ffc8:	d8c00217 	ldw	r3,8(sp)
    ffcc:	3808d43a 	srli	r4,r7,16
    ffd0:	1245883a 	add	r2,r2,r9
    ffd4:	da000417 	ldw	r8,16(sp)
    ffd8:	2085883a 	add	r2,r4,r2
    ffdc:	1240022e 	bgeu	r2,r9,ffe8 <__divdf3+0x4b8>
    ffe0:	01000074 	movhi	r4,1
    ffe4:	8121883a 	add	r16,r16,r4
    ffe8:	1008d43a 	srli	r4,r2,16
    ffec:	1004943a 	slli	r2,r2,16
    fff0:	39ffffcc 	andi	r7,r7,65535
    fff4:	2409883a 	add	r4,r4,r16
    fff8:	11c5883a 	add	r2,r2,r7
    fffc:	4100bb36 	bltu	r8,r4,102ec <__divdf3+0x7bc>
   10000:	4100d726 	beq	r8,r4,10360 <__divdf3+0x830>
   10004:	4109c83a 	sub	r4,r8,r4
   10008:	a8a1c83a 	sub	r16,r21,r2
   1000c:	ac2b803a 	cmpltu	r21,r21,r16
   10010:	256bc83a 	sub	r21,r4,r21
   10014:	b540d926 	beq	r22,r21,1037c <__divdf3+0x84c>
   10018:	a00b883a 	mov	r5,r20
   1001c:	a809883a 	mov	r4,r21
   10020:	d8c00215 	stw	r3,8(sp)
   10024:	0000e3c0 	call	e3c <__udivsi3>
   10028:	100b883a 	mov	r5,r2
   1002c:	9009883a 	mov	r4,r18
   10030:	d8800515 	stw	r2,20(sp)
   10034:	0000ef80 	call	ef8 <__mulsi3>
   10038:	a809883a 	mov	r4,r21
   1003c:	a00b883a 	mov	r5,r20
   10040:	d8800415 	stw	r2,16(sp)
   10044:	0000ea00 	call	ea0 <__umodsi3>
   10048:	1004943a 	slli	r2,r2,16
   1004c:	8008d43a 	srli	r4,r16,16
   10050:	da000417 	ldw	r8,16(sp)
   10054:	d8c00217 	ldw	r3,8(sp)
   10058:	2084b03a 	or	r2,r4,r2
   1005c:	d9c00517 	ldw	r7,20(sp)
   10060:	1200062e 	bgeu	r2,r8,1007c <__divdf3+0x54c>
   10064:	1585883a 	add	r2,r2,r22
   10068:	393fffc4 	addi	r4,r7,-1
   1006c:	1580c536 	bltu	r2,r22,10384 <__divdf3+0x854>
   10070:	1200c42e 	bgeu	r2,r8,10384 <__divdf3+0x854>
   10074:	39ffff84 	addi	r7,r7,-2
   10078:	1585883a 	add	r2,r2,r22
   1007c:	122bc83a 	sub	r21,r2,r8
   10080:	a00b883a 	mov	r5,r20
   10084:	a809883a 	mov	r4,r21
   10088:	d8c00215 	stw	r3,8(sp)
   1008c:	d9c00515 	stw	r7,20(sp)
   10090:	0000e3c0 	call	e3c <__udivsi3>
   10094:	9009883a 	mov	r4,r18
   10098:	100b883a 	mov	r5,r2
   1009c:	d8800415 	stw	r2,16(sp)
   100a0:	0000ef80 	call	ef8 <__mulsi3>
   100a4:	a809883a 	mov	r4,r21
   100a8:	a00b883a 	mov	r5,r20
   100ac:	1025883a 	mov	r18,r2
   100b0:	0000ea00 	call	ea0 <__umodsi3>
   100b4:	1004943a 	slli	r2,r2,16
   100b8:	813fffcc 	andi	r4,r16,65535
   100bc:	d8c00217 	ldw	r3,8(sp)
   100c0:	20a0b03a 	or	r16,r4,r2
   100c4:	d9c00517 	ldw	r7,20(sp)
   100c8:	da000417 	ldw	r8,16(sp)
   100cc:	8480062e 	bgeu	r16,r18,100e8 <__divdf3+0x5b8>
   100d0:	85a1883a 	add	r16,r16,r22
   100d4:	40bfffc4 	addi	r2,r8,-1
   100d8:	8580ac36 	bltu	r16,r22,1038c <__divdf3+0x85c>
   100dc:	8480ab2e 	bgeu	r16,r18,1038c <__divdf3+0x85c>
   100e0:	423fff84 	addi	r8,r8,-2
   100e4:	85a1883a 	add	r16,r16,r22
   100e8:	3804943a 	slli	r2,r7,16
   100ec:	84a1c83a 	sub	r16,r16,r18
   100f0:	e009883a 	mov	r4,fp
   100f4:	1228b03a 	or	r20,r2,r8
   100f8:	a1ffffcc 	andi	r7,r20,65535
   100fc:	a024d43a 	srli	r18,r20,16
   10100:	380b883a 	mov	r5,r7
   10104:	d8c00215 	stw	r3,8(sp)
   10108:	d9c00515 	stw	r7,20(sp)
   1010c:	0000ef80 	call	ef8 <__mulsi3>
   10110:	900b883a 	mov	r5,r18
   10114:	e009883a 	mov	r4,fp
   10118:	102b883a 	mov	r21,r2
   1011c:	0000ef80 	call	ef8 <__mulsi3>
   10120:	900b883a 	mov	r5,r18
   10124:	b809883a 	mov	r4,r23
   10128:	1039883a 	mov	fp,r2
   1012c:	0000ef80 	call	ef8 <__mulsi3>
   10130:	d9c00517 	ldw	r7,20(sp)
   10134:	b80b883a 	mov	r5,r23
   10138:	1025883a 	mov	r18,r2
   1013c:	3809883a 	mov	r4,r7
   10140:	0000ef80 	call	ef8 <__mulsi3>
   10144:	a808d43a 	srli	r4,r21,16
   10148:	1705883a 	add	r2,r2,fp
   1014c:	d8c00217 	ldw	r3,8(sp)
   10150:	2085883a 	add	r2,r4,r2
   10154:	1700022e 	bgeu	r2,fp,10160 <__divdf3+0x630>
   10158:	01000074 	movhi	r4,1
   1015c:	9125883a 	add	r18,r18,r4
   10160:	1008d43a 	srli	r4,r2,16
   10164:	1004943a 	slli	r2,r2,16
   10168:	ad7fffcc 	andi	r21,r21,65535
   1016c:	2489883a 	add	r4,r4,r18
   10170:	1545883a 	add	r2,r2,r21
   10174:	81003836 	bltu	r16,r4,10258 <__divdf3+0x728>
   10178:	81003626 	beq	r16,r4,10254 <__divdf3+0x724>
   1017c:	a5000054 	ori	r20,r20,1
   10180:	1880ffc4 	addi	r2,r3,1023
   10184:	00bf2e0e 	bge	zero,r2,fe40 <__alt_mem_Onchip_SRAM+0xf800fe40>
   10188:	a10001cc 	andi	r4,r20,7
   1018c:	20000726 	beq	r4,zero,101ac <__divdf3+0x67c>
   10190:	a10003cc 	andi	r4,r20,15
   10194:	01400104 	movi	r5,4
   10198:	21400426 	beq	r4,r5,101ac <__divdf3+0x67c>
   1019c:	a149883a 	add	r4,r20,r5
   101a0:	2529803a 	cmpltu	r20,r4,r20
   101a4:	8d23883a 	add	r17,r17,r20
   101a8:	2029883a 	mov	r20,r4
   101ac:	8900402c 	andhi	r4,r17,256
   101b0:	20000426 	beq	r4,zero,101c4 <__divdf3+0x694>
   101b4:	18810004 	addi	r2,r3,1024
   101b8:	00ffc034 	movhi	r3,65280
   101bc:	18ffffc4 	addi	r3,r3,-1
   101c0:	88e2703a 	and	r17,r17,r3
   101c4:	00c1ff84 	movi	r3,2046
   101c8:	18beb416 	blt	r3,r2,fc9c <__alt_mem_Onchip_SRAM+0xf800fc9c>
   101cc:	a028d0fa 	srli	r20,r20,3
   101d0:	882a977a 	slli	r21,r17,29
   101d4:	8820927a 	slli	r16,r17,9
   101d8:	1081ffcc 	andi	r2,r2,2047
   101dc:	ad2ab03a 	or	r21,r21,r20
   101e0:	8020d33a 	srli	r16,r16,12
   101e4:	9900004c 	andi	r4,r19,1
   101e8:	003eb006 	br	fcac <__alt_mem_Onchip_SRAM+0xf800fcac>
   101ec:	8080022c 	andhi	r2,r16,8
   101f0:	10001226 	beq	r2,zero,1023c <__divdf3+0x70c>
   101f4:	8880022c 	andhi	r2,r17,8
   101f8:	1000101e 	bne	r2,zero,1023c <__divdf3+0x70c>
   101fc:	00800434 	movhi	r2,16
   10200:	8c000234 	orhi	r16,r17,8
   10204:	10bfffc4 	addi	r2,r2,-1
   10208:	b809883a 	mov	r4,r23
   1020c:	80a0703a 	and	r16,r16,r2
   10210:	a02b883a 	mov	r21,r20
   10214:	003f0806 	br	fe38 <__alt_mem_Onchip_SRAM+0xf800fe38>
   10218:	008000c4 	movi	r2,3
   1021c:	3880b126 	beq	r7,r2,104e4 <__divdf3+0x9b4>
   10220:	00800044 	movi	r2,1
   10224:	38805b1e 	bne	r7,r2,10394 <__divdf3+0x864>
   10228:	e009883a 	mov	r4,fp
   1022c:	0005883a 	mov	r2,zero
   10230:	0021883a 	mov	r16,zero
   10234:	002b883a 	mov	r21,zero
   10238:	003e9c06 	br	fcac <__alt_mem_Onchip_SRAM+0xf800fcac>
   1023c:	00800434 	movhi	r2,16
   10240:	84000234 	orhi	r16,r16,8
   10244:	10bfffc4 	addi	r2,r2,-1
   10248:	b009883a 	mov	r4,r22
   1024c:	80a0703a 	and	r16,r16,r2
   10250:	003ef906 	br	fe38 <__alt_mem_Onchip_SRAM+0xf800fe38>
   10254:	103fca26 	beq	r2,zero,10180 <__alt_mem_Onchip_SRAM+0xf8010180>
   10258:	b421883a 	add	r16,r22,r16
   1025c:	a17fffc4 	addi	r5,r20,-1
   10260:	8580422e 	bgeu	r16,r22,1036c <__divdf3+0x83c>
   10264:	2829883a 	mov	r20,r5
   10268:	813fc41e 	bne	r16,r4,1017c <__alt_mem_Onchip_SRAM+0xf801017c>
   1026c:	d9800017 	ldw	r6,0(sp)
   10270:	30bfc21e 	bne	r6,r2,1017c <__alt_mem_Onchip_SRAM+0xf801017c>
   10274:	003fc206 	br	10180 <__alt_mem_Onchip_SRAM+0xf8010180>
   10278:	143ff604 	addi	r16,r2,-40
   1027c:	8c20983a 	sll	r16,r17,r16
   10280:	002b883a 	mov	r21,zero
   10284:	003eb406 	br	fd58 <__alt_mem_Onchip_SRAM+0xf800fd58>
   10288:	d9800215 	stw	r6,8(sp)
   1028c:	d9c00515 	stw	r7,20(sp)
   10290:	da000415 	stw	r8,16(sp)
   10294:	00010b40 	call	10b4 <__clzsi2>
   10298:	10800804 	addi	r2,r2,32
   1029c:	da000417 	ldw	r8,16(sp)
   102a0:	d9c00517 	ldw	r7,20(sp)
   102a4:	d9800217 	ldw	r6,8(sp)
   102a8:	003ea106 	br	fd30 <__alt_mem_Onchip_SRAM+0xf800fd30>
   102ac:	147ff604 	addi	r17,r2,-40
   102b0:	3462983a 	sll	r17,r6,r17
   102b4:	0029883a 	mov	r20,zero
   102b8:	003ec906 	br	fde0 <__alt_mem_Onchip_SRAM+0xf800fde0>
   102bc:	3009883a 	mov	r4,r6
   102c0:	d9400115 	stw	r5,4(sp)
   102c4:	d9800215 	stw	r6,8(sp)
   102c8:	da000415 	stw	r8,16(sp)
   102cc:	da400315 	stw	r9,12(sp)
   102d0:	00010b40 	call	10b4 <__clzsi2>
   102d4:	10800804 	addi	r2,r2,32
   102d8:	da400317 	ldw	r9,12(sp)
   102dc:	da000417 	ldw	r8,16(sp)
   102e0:	d9800217 	ldw	r6,8(sp)
   102e4:	d9400117 	ldw	r5,4(sp)
   102e8:	003eb306 	br	fdb8 <__alt_mem_Onchip_SRAM+0xf800fdb8>
   102ec:	d9800017 	ldw	r6,0(sp)
   102f0:	a9ab883a 	add	r21,r21,r6
   102f4:	a98b803a 	cmpltu	r5,r21,r6
   102f8:	2d8b883a 	add	r5,r5,r22
   102fc:	2a11883a 	add	r8,r5,r8
   10300:	897fffc4 	addi	r5,r17,-1
   10304:	b2000c2e 	bgeu	r22,r8,10338 <__divdf3+0x808>
   10308:	41003f36 	bltu	r8,r4,10408 <__divdf3+0x8d8>
   1030c:	22006c26 	beq	r4,r8,104c0 <__divdf3+0x990>
   10310:	4109c83a 	sub	r4,r8,r4
   10314:	2823883a 	mov	r17,r5
   10318:	003f3b06 	br	10008 <__alt_mem_Onchip_SRAM+0xf8010008>
   1031c:	ad3ed336 	bltu	r21,r20,fe6c <__alt_mem_Onchip_SRAM+0xf800fe6c>
   10320:	a804d07a 	srli	r2,r21,1
   10324:	802e97fa 	slli	r23,r16,31
   10328:	a82a97fa 	slli	r21,r21,31
   1032c:	8020d07a 	srli	r16,r16,1
   10330:	b8aeb03a 	or	r23,r23,r2
   10334:	003ed006 	br	fe78 <__alt_mem_Onchip_SRAM+0xf800fe78>
   10338:	b23ff51e 	bne	r22,r8,10310 <__alt_mem_Onchip_SRAM+0xf8010310>
   1033c:	d9800017 	ldw	r6,0(sp)
   10340:	a9bff12e 	bgeu	r21,r6,10308 <__alt_mem_Onchip_SRAM+0xf8010308>
   10344:	b109c83a 	sub	r4,r22,r4
   10348:	2823883a 	mov	r17,r5
   1034c:	003f2e06 	br	10008 <__alt_mem_Onchip_SRAM+0xf8010008>
   10350:	2021883a 	mov	r16,r4
   10354:	003eff06 	br	ff54 <__alt_mem_Onchip_SRAM+0xf800ff54>
   10358:	2023883a 	mov	r17,r4
   1035c:	003ee406 	br	fef0 <__alt_mem_Onchip_SRAM+0xf800fef0>
   10360:	a8bfe236 	bltu	r21,r2,102ec <__alt_mem_Onchip_SRAM+0xf80102ec>
   10364:	0009883a 	mov	r4,zero
   10368:	003f2706 	br	10008 <__alt_mem_Onchip_SRAM+0xf8010008>
   1036c:	81002d36 	bltu	r16,r4,10424 <__divdf3+0x8f4>
   10370:	24005626 	beq	r4,r16,104cc <__divdf3+0x99c>
   10374:	2829883a 	mov	r20,r5
   10378:	003f8006 	br	1017c <__alt_mem_Onchip_SRAM+0xf801017c>
   1037c:	053fffc4 	movi	r20,-1
   10380:	003f7f06 	br	10180 <__alt_mem_Onchip_SRAM+0xf8010180>
   10384:	200f883a 	mov	r7,r4
   10388:	003f3c06 	br	1007c <__alt_mem_Onchip_SRAM+0xf801007c>
   1038c:	1011883a 	mov	r8,r2
   10390:	003f5506 	br	100e8 <__alt_mem_Onchip_SRAM+0xf80100e8>
   10394:	e027883a 	mov	r19,fp
   10398:	003f7906 	br	10180 <__alt_mem_Onchip_SRAM+0xf8010180>
   1039c:	010007c4 	movi	r4,31
   103a0:	20c02816 	blt	r4,r3,10444 <__divdf3+0x914>
   103a4:	00800804 	movi	r2,32
   103a8:	10c5c83a 	sub	r2,r2,r3
   103ac:	888a983a 	sll	r5,r17,r2
   103b0:	a0c8d83a 	srl	r4,r20,r3
   103b4:	a084983a 	sll	r2,r20,r2
   103b8:	88e2d83a 	srl	r17,r17,r3
   103bc:	2906b03a 	or	r3,r5,r4
   103c0:	1004c03a 	cmpne	r2,r2,zero
   103c4:	1886b03a 	or	r3,r3,r2
   103c8:	188001cc 	andi	r2,r3,7
   103cc:	10000726 	beq	r2,zero,103ec <__divdf3+0x8bc>
   103d0:	188003cc 	andi	r2,r3,15
   103d4:	01000104 	movi	r4,4
   103d8:	11000426 	beq	r2,r4,103ec <__divdf3+0x8bc>
   103dc:	1805883a 	mov	r2,r3
   103e0:	10c00104 	addi	r3,r2,4
   103e4:	1885803a 	cmpltu	r2,r3,r2
   103e8:	88a3883a 	add	r17,r17,r2
   103ec:	8880202c 	andhi	r2,r17,128
   103f0:	10002926 	beq	r2,zero,10498 <__divdf3+0x968>
   103f4:	9900004c 	andi	r4,r19,1
   103f8:	00800044 	movi	r2,1
   103fc:	0021883a 	mov	r16,zero
   10400:	002b883a 	mov	r21,zero
   10404:	003e2906 	br	fcac <__alt_mem_Onchip_SRAM+0xf800fcac>
   10408:	d9800017 	ldw	r6,0(sp)
   1040c:	8c7fff84 	addi	r17,r17,-2
   10410:	a9ab883a 	add	r21,r21,r6
   10414:	a98b803a 	cmpltu	r5,r21,r6
   10418:	2d8b883a 	add	r5,r5,r22
   1041c:	2a11883a 	add	r8,r5,r8
   10420:	003ef806 	br	10004 <__alt_mem_Onchip_SRAM+0xf8010004>
   10424:	d9800017 	ldw	r6,0(sp)
   10428:	318f883a 	add	r7,r6,r6
   1042c:	398b803a 	cmpltu	r5,r7,r6
   10430:	2d8d883a 	add	r6,r5,r22
   10434:	81a1883a 	add	r16,r16,r6
   10438:	a17fff84 	addi	r5,r20,-2
   1043c:	d9c00015 	stw	r7,0(sp)
   10440:	003f8806 	br	10264 <__alt_mem_Onchip_SRAM+0xf8010264>
   10444:	013ff844 	movi	r4,-31
   10448:	2085c83a 	sub	r2,r4,r2
   1044c:	8888d83a 	srl	r4,r17,r2
   10450:	00800804 	movi	r2,32
   10454:	18802126 	beq	r3,r2,104dc <__divdf3+0x9ac>
   10458:	04001004 	movi	r16,64
   1045c:	80c7c83a 	sub	r3,r16,r3
   10460:	88e0983a 	sll	r16,r17,r3
   10464:	8504b03a 	or	r2,r16,r20
   10468:	1004c03a 	cmpne	r2,r2,zero
   1046c:	2084b03a 	or	r2,r4,r2
   10470:	144001cc 	andi	r17,r2,7
   10474:	88000d1e 	bne	r17,zero,104ac <__divdf3+0x97c>
   10478:	0021883a 	mov	r16,zero
   1047c:	102ad0fa 	srli	r21,r2,3
   10480:	9900004c 	andi	r4,r19,1
   10484:	0005883a 	mov	r2,zero
   10488:	ac6ab03a 	or	r21,r21,r17
   1048c:	003e0706 	br	fcac <__alt_mem_Onchip_SRAM+0xf800fcac>
   10490:	1007883a 	mov	r3,r2
   10494:	0023883a 	mov	r17,zero
   10498:	8820927a 	slli	r16,r17,9
   1049c:	1805883a 	mov	r2,r3
   104a0:	8822977a 	slli	r17,r17,29
   104a4:	8020d33a 	srli	r16,r16,12
   104a8:	003ff406 	br	1047c <__alt_mem_Onchip_SRAM+0xf801047c>
   104ac:	10c003cc 	andi	r3,r2,15
   104b0:	01000104 	movi	r4,4
   104b4:	193ff626 	beq	r3,r4,10490 <__alt_mem_Onchip_SRAM+0xf8010490>
   104b8:	0023883a 	mov	r17,zero
   104bc:	003fc806 	br	103e0 <__alt_mem_Onchip_SRAM+0xf80103e0>
   104c0:	a8bfd136 	bltu	r21,r2,10408 <__alt_mem_Onchip_SRAM+0xf8010408>
   104c4:	2823883a 	mov	r17,r5
   104c8:	003fa606 	br	10364 <__alt_mem_Onchip_SRAM+0xf8010364>
   104cc:	d9800017 	ldw	r6,0(sp)
   104d0:	30bfd436 	bltu	r6,r2,10424 <__alt_mem_Onchip_SRAM+0xf8010424>
   104d4:	2829883a 	mov	r20,r5
   104d8:	003f6406 	br	1026c <__alt_mem_Onchip_SRAM+0xf801026c>
   104dc:	0021883a 	mov	r16,zero
   104e0:	003fe006 	br	10464 <__alt_mem_Onchip_SRAM+0xf8010464>
   104e4:	00800434 	movhi	r2,16
   104e8:	8c000234 	orhi	r16,r17,8
   104ec:	10bfffc4 	addi	r2,r2,-1
   104f0:	e009883a 	mov	r4,fp
   104f4:	80a0703a 	and	r16,r16,r2
   104f8:	a02b883a 	mov	r21,r20
   104fc:	003e4e06 	br	fe38 <__alt_mem_Onchip_SRAM+0xf800fe38>

00010500 <__eqdf2>:
   10500:	2804d53a 	srli	r2,r5,20
   10504:	3806d53a 	srli	r3,r7,20
   10508:	02000434 	movhi	r8,16
   1050c:	423fffc4 	addi	r8,r8,-1
   10510:	1081ffcc 	andi	r2,r2,2047
   10514:	0281ffc4 	movi	r10,2047
   10518:	2a12703a 	and	r9,r5,r8
   1051c:	18c1ffcc 	andi	r3,r3,2047
   10520:	3a10703a 	and	r8,r7,r8
   10524:	280ad7fa 	srli	r5,r5,31
   10528:	380ed7fa 	srli	r7,r7,31
   1052c:	12801026 	beq	r2,r10,10570 <__eqdf2+0x70>
   10530:	0281ffc4 	movi	r10,2047
   10534:	1a800a26 	beq	r3,r10,10560 <__eqdf2+0x60>
   10538:	10c00226 	beq	r2,r3,10544 <__eqdf2+0x44>
   1053c:	00800044 	movi	r2,1
   10540:	f800283a 	ret
   10544:	4a3ffd1e 	bne	r9,r8,1053c <__alt_mem_Onchip_SRAM+0xf801053c>
   10548:	21bffc1e 	bne	r4,r6,1053c <__alt_mem_Onchip_SRAM+0xf801053c>
   1054c:	29c00c26 	beq	r5,r7,10580 <__eqdf2+0x80>
   10550:	103ffa1e 	bne	r2,zero,1053c <__alt_mem_Onchip_SRAM+0xf801053c>
   10554:	2244b03a 	or	r2,r4,r9
   10558:	1004c03a 	cmpne	r2,r2,zero
   1055c:	f800283a 	ret
   10560:	3214b03a 	or	r10,r6,r8
   10564:	503ff426 	beq	r10,zero,10538 <__alt_mem_Onchip_SRAM+0xf8010538>
   10568:	00800044 	movi	r2,1
   1056c:	f800283a 	ret
   10570:	2254b03a 	or	r10,r4,r9
   10574:	503fee26 	beq	r10,zero,10530 <__alt_mem_Onchip_SRAM+0xf8010530>
   10578:	00800044 	movi	r2,1
   1057c:	f800283a 	ret
   10580:	0005883a 	mov	r2,zero
   10584:	f800283a 	ret

00010588 <__gedf2>:
   10588:	2804d53a 	srli	r2,r5,20
   1058c:	3806d53a 	srli	r3,r7,20
   10590:	02000434 	movhi	r8,16
   10594:	423fffc4 	addi	r8,r8,-1
   10598:	1081ffcc 	andi	r2,r2,2047
   1059c:	0241ffc4 	movi	r9,2047
   105a0:	2a14703a 	and	r10,r5,r8
   105a4:	18c1ffcc 	andi	r3,r3,2047
   105a8:	3a10703a 	and	r8,r7,r8
   105ac:	280ad7fa 	srli	r5,r5,31
   105b0:	380ed7fa 	srli	r7,r7,31
   105b4:	12401d26 	beq	r2,r9,1062c <__gedf2+0xa4>
   105b8:	0241ffc4 	movi	r9,2047
   105bc:	1a401226 	beq	r3,r9,10608 <__gedf2+0x80>
   105c0:	1000081e 	bne	r2,zero,105e4 <__gedf2+0x5c>
   105c4:	2296b03a 	or	r11,r4,r10
   105c8:	5813003a 	cmpeq	r9,r11,zero
   105cc:	1800091e 	bne	r3,zero,105f4 <__gedf2+0x6c>
   105d0:	3218b03a 	or	r12,r6,r8
   105d4:	6000071e 	bne	r12,zero,105f4 <__gedf2+0x6c>
   105d8:	0005883a 	mov	r2,zero
   105dc:	5800101e 	bne	r11,zero,10620 <__gedf2+0x98>
   105e0:	f800283a 	ret
   105e4:	18000c1e 	bne	r3,zero,10618 <__gedf2+0x90>
   105e8:	3212b03a 	or	r9,r6,r8
   105ec:	48000c26 	beq	r9,zero,10620 <__gedf2+0x98>
   105f0:	0013883a 	mov	r9,zero
   105f4:	39c03fcc 	andi	r7,r7,255
   105f8:	48000826 	beq	r9,zero,1061c <__gedf2+0x94>
   105fc:	38000926 	beq	r7,zero,10624 <__gedf2+0x9c>
   10600:	00800044 	movi	r2,1
   10604:	f800283a 	ret
   10608:	3212b03a 	or	r9,r6,r8
   1060c:	483fec26 	beq	r9,zero,105c0 <__alt_mem_Onchip_SRAM+0xf80105c0>
   10610:	00bfff84 	movi	r2,-2
   10614:	f800283a 	ret
   10618:	39c03fcc 	andi	r7,r7,255
   1061c:	29c00626 	beq	r5,r7,10638 <__gedf2+0xb0>
   10620:	283ff726 	beq	r5,zero,10600 <__alt_mem_Onchip_SRAM+0xf8010600>
   10624:	00bfffc4 	movi	r2,-1
   10628:	f800283a 	ret
   1062c:	2292b03a 	or	r9,r4,r10
   10630:	483fe126 	beq	r9,zero,105b8 <__alt_mem_Onchip_SRAM+0xf80105b8>
   10634:	003ff606 	br	10610 <__alt_mem_Onchip_SRAM+0xf8010610>
   10638:	18bff916 	blt	r3,r2,10620 <__alt_mem_Onchip_SRAM+0xf8010620>
   1063c:	10c00316 	blt	r2,r3,1064c <__gedf2+0xc4>
   10640:	42bff736 	bltu	r8,r10,10620 <__alt_mem_Onchip_SRAM+0xf8010620>
   10644:	52000326 	beq	r10,r8,10654 <__gedf2+0xcc>
   10648:	5200042e 	bgeu	r10,r8,1065c <__gedf2+0xd4>
   1064c:	283fec1e 	bne	r5,zero,10600 <__alt_mem_Onchip_SRAM+0xf8010600>
   10650:	003ff406 	br	10624 <__alt_mem_Onchip_SRAM+0xf8010624>
   10654:	313ff236 	bltu	r6,r4,10620 <__alt_mem_Onchip_SRAM+0xf8010620>
   10658:	21bffc36 	bltu	r4,r6,1064c <__alt_mem_Onchip_SRAM+0xf801064c>
   1065c:	0005883a 	mov	r2,zero
   10660:	f800283a 	ret

00010664 <__ledf2>:
   10664:	2804d53a 	srli	r2,r5,20
   10668:	3810d53a 	srli	r8,r7,20
   1066c:	00c00434 	movhi	r3,16
   10670:	18ffffc4 	addi	r3,r3,-1
   10674:	1081ffcc 	andi	r2,r2,2047
   10678:	0241ffc4 	movi	r9,2047
   1067c:	28d4703a 	and	r10,r5,r3
   10680:	4201ffcc 	andi	r8,r8,2047
   10684:	38c6703a 	and	r3,r7,r3
   10688:	280ad7fa 	srli	r5,r5,31
   1068c:	380ed7fa 	srli	r7,r7,31
   10690:	12401f26 	beq	r2,r9,10710 <__ledf2+0xac>
   10694:	0241ffc4 	movi	r9,2047
   10698:	42401426 	beq	r8,r9,106ec <__ledf2+0x88>
   1069c:	1000091e 	bne	r2,zero,106c4 <__ledf2+0x60>
   106a0:	2296b03a 	or	r11,r4,r10
   106a4:	5813003a 	cmpeq	r9,r11,zero
   106a8:	29403fcc 	andi	r5,r5,255
   106ac:	40000a1e 	bne	r8,zero,106d8 <__ledf2+0x74>
   106b0:	30d8b03a 	or	r12,r6,r3
   106b4:	6000081e 	bne	r12,zero,106d8 <__ledf2+0x74>
   106b8:	0005883a 	mov	r2,zero
   106bc:	5800111e 	bne	r11,zero,10704 <__ledf2+0xa0>
   106c0:	f800283a 	ret
   106c4:	29403fcc 	andi	r5,r5,255
   106c8:	40000c1e 	bne	r8,zero,106fc <__ledf2+0x98>
   106cc:	30d2b03a 	or	r9,r6,r3
   106d0:	48000c26 	beq	r9,zero,10704 <__ledf2+0xa0>
   106d4:	0013883a 	mov	r9,zero
   106d8:	39c03fcc 	andi	r7,r7,255
   106dc:	48000826 	beq	r9,zero,10700 <__ledf2+0x9c>
   106e0:	38001126 	beq	r7,zero,10728 <__ledf2+0xc4>
   106e4:	00800044 	movi	r2,1
   106e8:	f800283a 	ret
   106ec:	30d2b03a 	or	r9,r6,r3
   106f0:	483fea26 	beq	r9,zero,1069c <__alt_mem_Onchip_SRAM+0xf801069c>
   106f4:	00800084 	movi	r2,2
   106f8:	f800283a 	ret
   106fc:	39c03fcc 	andi	r7,r7,255
   10700:	39400726 	beq	r7,r5,10720 <__ledf2+0xbc>
   10704:	2800081e 	bne	r5,zero,10728 <__ledf2+0xc4>
   10708:	00800044 	movi	r2,1
   1070c:	f800283a 	ret
   10710:	2292b03a 	or	r9,r4,r10
   10714:	483fdf26 	beq	r9,zero,10694 <__alt_mem_Onchip_SRAM+0xf8010694>
   10718:	00800084 	movi	r2,2
   1071c:	f800283a 	ret
   10720:	4080030e 	bge	r8,r2,10730 <__ledf2+0xcc>
   10724:	383fef26 	beq	r7,zero,106e4 <__alt_mem_Onchip_SRAM+0xf80106e4>
   10728:	00bfffc4 	movi	r2,-1
   1072c:	f800283a 	ret
   10730:	123feb16 	blt	r2,r8,106e0 <__alt_mem_Onchip_SRAM+0xf80106e0>
   10734:	1abff336 	bltu	r3,r10,10704 <__alt_mem_Onchip_SRAM+0xf8010704>
   10738:	50c00326 	beq	r10,r3,10748 <__ledf2+0xe4>
   1073c:	50c0042e 	bgeu	r10,r3,10750 <__ledf2+0xec>
   10740:	283fe81e 	bne	r5,zero,106e4 <__alt_mem_Onchip_SRAM+0xf80106e4>
   10744:	003ff806 	br	10728 <__alt_mem_Onchip_SRAM+0xf8010728>
   10748:	313fee36 	bltu	r6,r4,10704 <__alt_mem_Onchip_SRAM+0xf8010704>
   1074c:	21bffc36 	bltu	r4,r6,10740 <__alt_mem_Onchip_SRAM+0xf8010740>
   10750:	0005883a 	mov	r2,zero
   10754:	f800283a 	ret

00010758 <__muldf3>:
   10758:	deffee04 	addi	sp,sp,-72
   1075c:	dd000c15 	stw	r20,48(sp)
   10760:	2828d53a 	srli	r20,r5,20
   10764:	ddc00f15 	stw	r23,60(sp)
   10768:	282ed7fa 	srli	r23,r5,31
   1076c:	dc000815 	stw	r16,32(sp)
   10770:	04000434 	movhi	r16,16
   10774:	dcc00b15 	stw	r19,44(sp)
   10778:	843fffc4 	addi	r16,r16,-1
   1077c:	dfc01115 	stw	ra,68(sp)
   10780:	df001015 	stw	fp,64(sp)
   10784:	dd800e15 	stw	r22,56(sp)
   10788:	dd400d15 	stw	r21,52(sp)
   1078c:	dc800a15 	stw	r18,40(sp)
   10790:	dc400915 	stw	r17,36(sp)
   10794:	a501ffcc 	andi	r20,r20,2047
   10798:	2c20703a 	and	r16,r5,r16
   1079c:	b827883a 	mov	r19,r23
   107a0:	ba403fcc 	andi	r9,r23,255
   107a4:	a0006026 	beq	r20,zero,10928 <__muldf3+0x1d0>
   107a8:	0081ffc4 	movi	r2,2047
   107ac:	202d883a 	mov	r22,r4
   107b0:	a0803626 	beq	r20,r2,1088c <__muldf3+0x134>
   107b4:	84000434 	orhi	r16,r16,16
   107b8:	200ad77a 	srli	r5,r4,29
   107bc:	800490fa 	slli	r2,r16,3
   107c0:	202c90fa 	slli	r22,r4,3
   107c4:	a53f0044 	addi	r20,r20,-1023
   107c8:	28a0b03a 	or	r16,r5,r2
   107cc:	002b883a 	mov	r21,zero
   107d0:	000b883a 	mov	r5,zero
   107d4:	3804d53a 	srli	r2,r7,20
   107d8:	3838d7fa 	srli	fp,r7,31
   107dc:	04400434 	movhi	r17,16
   107e0:	8c7fffc4 	addi	r17,r17,-1
   107e4:	1081ffcc 	andi	r2,r2,2047
   107e8:	3025883a 	mov	r18,r6
   107ec:	3c62703a 	and	r17,r7,r17
   107f0:	e2803fcc 	andi	r10,fp,255
   107f4:	10006d26 	beq	r2,zero,109ac <__muldf3+0x254>
   107f8:	00c1ffc4 	movi	r3,2047
   107fc:	10c06526 	beq	r2,r3,10994 <__muldf3+0x23c>
   10800:	8c400434 	orhi	r17,r17,16
   10804:	300ed77a 	srli	r7,r6,29
   10808:	880690fa 	slli	r3,r17,3
   1080c:	302490fa 	slli	r18,r6,3
   10810:	10bf0044 	addi	r2,r2,-1023
   10814:	38e2b03a 	or	r17,r7,r3
   10818:	000f883a 	mov	r7,zero
   1081c:	a087883a 	add	r3,r20,r2
   10820:	010003c4 	movi	r4,15
   10824:	3d44b03a 	or	r2,r7,r21
   10828:	e5ccf03a 	xor	r6,fp,r23
   1082c:	1a000044 	addi	r8,r3,1
   10830:	20809b36 	bltu	r4,r2,10aa0 <__muldf3+0x348>
   10834:	100490ba 	slli	r2,r2,2
   10838:	01000074 	movhi	r4,1
   1083c:	21021304 	addi	r4,r4,2124
   10840:	1105883a 	add	r2,r2,r4
   10844:	10800017 	ldw	r2,0(r2)
   10848:	1000683a 	jmp	r2
   1084c:	00010aa0 	cmpeqi	zero,zero,1066
   10850:	000108ac 	andhi	zero,zero,1058
   10854:	000108ac 	andhi	zero,zero,1058
   10858:	000108a8 	cmpgeui	zero,zero,1058
   1085c:	00010a7c 	xorhi	zero,zero,1065
   10860:	00010a7c 	xorhi	zero,zero,1065
   10864:	00010a64 	muli	zero,zero,1065
   10868:	000108a8 	cmpgeui	zero,zero,1058
   1086c:	00010a7c 	xorhi	zero,zero,1065
   10870:	00010a64 	muli	zero,zero,1065
   10874:	00010a7c 	xorhi	zero,zero,1065
   10878:	000108a8 	cmpgeui	zero,zero,1058
   1087c:	00010a8c 	andi	zero,zero,1066
   10880:	00010a8c 	andi	zero,zero,1066
   10884:	00010a8c 	andi	zero,zero,1066
   10888:	00010dec 	andhi	zero,zero,1079
   1088c:	2404b03a 	or	r2,r4,r16
   10890:	1000711e 	bne	r2,zero,10a58 <__muldf3+0x300>
   10894:	05400204 	movi	r21,8
   10898:	0021883a 	mov	r16,zero
   1089c:	002d883a 	mov	r22,zero
   108a0:	01400084 	movi	r5,2
   108a4:	003fcb06 	br	107d4 <__alt_mem_Onchip_SRAM+0xf80107d4>
   108a8:	500d883a 	mov	r6,r10
   108ac:	00800084 	movi	r2,2
   108b0:	38805926 	beq	r7,r2,10a18 <__muldf3+0x2c0>
   108b4:	008000c4 	movi	r2,3
   108b8:	3881bb26 	beq	r7,r2,10fa8 <__muldf3+0x850>
   108bc:	00800044 	movi	r2,1
   108c0:	3881961e 	bne	r7,r2,10f1c <__muldf3+0x7c4>
   108c4:	3027883a 	mov	r19,r6
   108c8:	0005883a 	mov	r2,zero
   108cc:	0021883a 	mov	r16,zero
   108d0:	002d883a 	mov	r22,zero
   108d4:	1004953a 	slli	r2,r2,20
   108d8:	98c03fcc 	andi	r3,r19,255
   108dc:	04400434 	movhi	r17,16
   108e0:	8c7fffc4 	addi	r17,r17,-1
   108e4:	180697fa 	slli	r3,r3,31
   108e8:	8460703a 	and	r16,r16,r17
   108ec:	80a0b03a 	or	r16,r16,r2
   108f0:	80c6b03a 	or	r3,r16,r3
   108f4:	b005883a 	mov	r2,r22
   108f8:	dfc01117 	ldw	ra,68(sp)
   108fc:	df001017 	ldw	fp,64(sp)
   10900:	ddc00f17 	ldw	r23,60(sp)
   10904:	dd800e17 	ldw	r22,56(sp)
   10908:	dd400d17 	ldw	r21,52(sp)
   1090c:	dd000c17 	ldw	r20,48(sp)
   10910:	dcc00b17 	ldw	r19,44(sp)
   10914:	dc800a17 	ldw	r18,40(sp)
   10918:	dc400917 	ldw	r17,36(sp)
   1091c:	dc000817 	ldw	r16,32(sp)
   10920:	dec01204 	addi	sp,sp,72
   10924:	f800283a 	ret
   10928:	2404b03a 	or	r2,r4,r16
   1092c:	202b883a 	mov	r21,r4
   10930:	10004426 	beq	r2,zero,10a44 <__muldf3+0x2ec>
   10934:	80015126 	beq	r16,zero,10e7c <__muldf3+0x724>
   10938:	8009883a 	mov	r4,r16
   1093c:	d9800715 	stw	r6,28(sp)
   10940:	d9c00215 	stw	r7,8(sp)
   10944:	da400415 	stw	r9,16(sp)
   10948:	00010b40 	call	10b4 <__clzsi2>
   1094c:	d9800717 	ldw	r6,28(sp)
   10950:	d9c00217 	ldw	r7,8(sp)
   10954:	da400417 	ldw	r9,16(sp)
   10958:	113ffd44 	addi	r4,r2,-11
   1095c:	00c00704 	movi	r3,28
   10960:	19014216 	blt	r3,r4,10e6c <__muldf3+0x714>
   10964:	00c00744 	movi	r3,29
   10968:	15bffe04 	addi	r22,r2,-8
   1096c:	1907c83a 	sub	r3,r3,r4
   10970:	85a0983a 	sll	r16,r16,r22
   10974:	a8c6d83a 	srl	r3,r21,r3
   10978:	adac983a 	sll	r22,r21,r22
   1097c:	1c20b03a 	or	r16,r3,r16
   10980:	1080fcc4 	addi	r2,r2,1011
   10984:	00a9c83a 	sub	r20,zero,r2
   10988:	002b883a 	mov	r21,zero
   1098c:	000b883a 	mov	r5,zero
   10990:	003f9006 	br	107d4 <__alt_mem_Onchip_SRAM+0xf80107d4>
   10994:	3446b03a 	or	r3,r6,r17
   10998:	1800281e 	bne	r3,zero,10a3c <__muldf3+0x2e4>
   1099c:	0023883a 	mov	r17,zero
   109a0:	0025883a 	mov	r18,zero
   109a4:	01c00084 	movi	r7,2
   109a8:	003f9c06 	br	1081c <__alt_mem_Onchip_SRAM+0xf801081c>
   109ac:	3446b03a 	or	r3,r6,r17
   109b0:	18001e26 	beq	r3,zero,10a2c <__muldf3+0x2d4>
   109b4:	88012126 	beq	r17,zero,10e3c <__muldf3+0x6e4>
   109b8:	8809883a 	mov	r4,r17
   109bc:	d9400215 	stw	r5,8(sp)
   109c0:	d9800715 	stw	r6,28(sp)
   109c4:	da400415 	stw	r9,16(sp)
   109c8:	da800315 	stw	r10,12(sp)
   109cc:	00010b40 	call	10b4 <__clzsi2>
   109d0:	d9400217 	ldw	r5,8(sp)
   109d4:	d9800717 	ldw	r6,28(sp)
   109d8:	da400417 	ldw	r9,16(sp)
   109dc:	da800317 	ldw	r10,12(sp)
   109e0:	113ffd44 	addi	r4,r2,-11
   109e4:	00c00704 	movi	r3,28
   109e8:	19011016 	blt	r3,r4,10e2c <__muldf3+0x6d4>
   109ec:	00c00744 	movi	r3,29
   109f0:	14bffe04 	addi	r18,r2,-8
   109f4:	1907c83a 	sub	r3,r3,r4
   109f8:	8ca2983a 	sll	r17,r17,r18
   109fc:	30c6d83a 	srl	r3,r6,r3
   10a00:	34a4983a 	sll	r18,r6,r18
   10a04:	1c62b03a 	or	r17,r3,r17
   10a08:	1080fcc4 	addi	r2,r2,1011
   10a0c:	0085c83a 	sub	r2,zero,r2
   10a10:	000f883a 	mov	r7,zero
   10a14:	003f8106 	br	1081c <__alt_mem_Onchip_SRAM+0xf801081c>
   10a18:	3027883a 	mov	r19,r6
   10a1c:	0081ffc4 	movi	r2,2047
   10a20:	0021883a 	mov	r16,zero
   10a24:	002d883a 	mov	r22,zero
   10a28:	003faa06 	br	108d4 <__alt_mem_Onchip_SRAM+0xf80108d4>
   10a2c:	0023883a 	mov	r17,zero
   10a30:	0025883a 	mov	r18,zero
   10a34:	01c00044 	movi	r7,1
   10a38:	003f7806 	br	1081c <__alt_mem_Onchip_SRAM+0xf801081c>
   10a3c:	01c000c4 	movi	r7,3
   10a40:	003f7606 	br	1081c <__alt_mem_Onchip_SRAM+0xf801081c>
   10a44:	05400104 	movi	r21,4
   10a48:	0021883a 	mov	r16,zero
   10a4c:	002d883a 	mov	r22,zero
   10a50:	01400044 	movi	r5,1
   10a54:	003f5f06 	br	107d4 <__alt_mem_Onchip_SRAM+0xf80107d4>
   10a58:	05400304 	movi	r21,12
   10a5c:	014000c4 	movi	r5,3
   10a60:	003f5c06 	br	107d4 <__alt_mem_Onchip_SRAM+0xf80107d4>
   10a64:	04000434 	movhi	r16,16
   10a68:	0027883a 	mov	r19,zero
   10a6c:	843fffc4 	addi	r16,r16,-1
   10a70:	05bfffc4 	movi	r22,-1
   10a74:	0081ffc4 	movi	r2,2047
   10a78:	003f9606 	br	108d4 <__alt_mem_Onchip_SRAM+0xf80108d4>
   10a7c:	8023883a 	mov	r17,r16
   10a80:	b025883a 	mov	r18,r22
   10a84:	280f883a 	mov	r7,r5
   10a88:	003f8806 	br	108ac <__alt_mem_Onchip_SRAM+0xf80108ac>
   10a8c:	8023883a 	mov	r17,r16
   10a90:	b025883a 	mov	r18,r22
   10a94:	480d883a 	mov	r6,r9
   10a98:	280f883a 	mov	r7,r5
   10a9c:	003f8306 	br	108ac <__alt_mem_Onchip_SRAM+0xf80108ac>
   10aa0:	b026d43a 	srli	r19,r22,16
   10aa4:	902ed43a 	srli	r23,r18,16
   10aa8:	b5bfffcc 	andi	r22,r22,65535
   10aac:	94bfffcc 	andi	r18,r18,65535
   10ab0:	b00b883a 	mov	r5,r22
   10ab4:	9009883a 	mov	r4,r18
   10ab8:	d8c00515 	stw	r3,20(sp)
   10abc:	d9800715 	stw	r6,28(sp)
   10ac0:	da000615 	stw	r8,24(sp)
   10ac4:	0000ef80 	call	ef8 <__mulsi3>
   10ac8:	980b883a 	mov	r5,r19
   10acc:	9009883a 	mov	r4,r18
   10ad0:	1029883a 	mov	r20,r2
   10ad4:	0000ef80 	call	ef8 <__mulsi3>
   10ad8:	b80b883a 	mov	r5,r23
   10adc:	9809883a 	mov	r4,r19
   10ae0:	102b883a 	mov	r21,r2
   10ae4:	0000ef80 	call	ef8 <__mulsi3>
   10ae8:	b809883a 	mov	r4,r23
   10aec:	b00b883a 	mov	r5,r22
   10af0:	1039883a 	mov	fp,r2
   10af4:	0000ef80 	call	ef8 <__mulsi3>
   10af8:	a008d43a 	srli	r4,r20,16
   10afc:	1545883a 	add	r2,r2,r21
   10b00:	d8c00517 	ldw	r3,20(sp)
   10b04:	2085883a 	add	r2,r4,r2
   10b08:	d9800717 	ldw	r6,28(sp)
   10b0c:	da000617 	ldw	r8,24(sp)
   10b10:	1540022e 	bgeu	r2,r21,10b1c <__muldf3+0x3c4>
   10b14:	01000074 	movhi	r4,1
   10b18:	e139883a 	add	fp,fp,r4
   10b1c:	100e943a 	slli	r7,r2,16
   10b20:	1004d43a 	srli	r2,r2,16
   10b24:	882ad43a 	srli	r21,r17,16
   10b28:	a53fffcc 	andi	r20,r20,65535
   10b2c:	8c7fffcc 	andi	r17,r17,65535
   10b30:	3d29883a 	add	r20,r7,r20
   10b34:	b00b883a 	mov	r5,r22
   10b38:	8809883a 	mov	r4,r17
   10b3c:	d8c00515 	stw	r3,20(sp)
   10b40:	d9800715 	stw	r6,28(sp)
   10b44:	da000615 	stw	r8,24(sp)
   10b48:	dd000115 	stw	r20,4(sp)
   10b4c:	d8800015 	stw	r2,0(sp)
   10b50:	0000ef80 	call	ef8 <__mulsi3>
   10b54:	980b883a 	mov	r5,r19
   10b58:	8809883a 	mov	r4,r17
   10b5c:	d8800215 	stw	r2,8(sp)
   10b60:	0000ef80 	call	ef8 <__mulsi3>
   10b64:	9809883a 	mov	r4,r19
   10b68:	a80b883a 	mov	r5,r21
   10b6c:	1029883a 	mov	r20,r2
   10b70:	0000ef80 	call	ef8 <__mulsi3>
   10b74:	b00b883a 	mov	r5,r22
   10b78:	a809883a 	mov	r4,r21
   10b7c:	d8800415 	stw	r2,16(sp)
   10b80:	0000ef80 	call	ef8 <__mulsi3>
   10b84:	d9c00217 	ldw	r7,8(sp)
   10b88:	1505883a 	add	r2,r2,r20
   10b8c:	d8c00517 	ldw	r3,20(sp)
   10b90:	3826d43a 	srli	r19,r7,16
   10b94:	d9800717 	ldw	r6,28(sp)
   10b98:	da000617 	ldw	r8,24(sp)
   10b9c:	9885883a 	add	r2,r19,r2
   10ba0:	da400417 	ldw	r9,16(sp)
   10ba4:	1500022e 	bgeu	r2,r20,10bb0 <__muldf3+0x458>
   10ba8:	01000074 	movhi	r4,1
   10bac:	4913883a 	add	r9,r9,r4
   10bb0:	1028d43a 	srli	r20,r2,16
   10bb4:	1004943a 	slli	r2,r2,16
   10bb8:	802cd43a 	srli	r22,r16,16
   10bbc:	843fffcc 	andi	r16,r16,65535
   10bc0:	3cffffcc 	andi	r19,r7,65535
   10bc4:	9009883a 	mov	r4,r18
   10bc8:	800b883a 	mov	r5,r16
   10bcc:	a269883a 	add	r20,r20,r9
   10bd0:	d8c00515 	stw	r3,20(sp)
   10bd4:	d9800715 	stw	r6,28(sp)
   10bd8:	da000615 	stw	r8,24(sp)
   10bdc:	14e7883a 	add	r19,r2,r19
   10be0:	0000ef80 	call	ef8 <__mulsi3>
   10be4:	9009883a 	mov	r4,r18
   10be8:	b00b883a 	mov	r5,r22
   10bec:	d8800315 	stw	r2,12(sp)
   10bf0:	0000ef80 	call	ef8 <__mulsi3>
   10bf4:	b809883a 	mov	r4,r23
   10bf8:	b00b883a 	mov	r5,r22
   10bfc:	d8800215 	stw	r2,8(sp)
   10c00:	0000ef80 	call	ef8 <__mulsi3>
   10c04:	b80b883a 	mov	r5,r23
   10c08:	8009883a 	mov	r4,r16
   10c0c:	d8800415 	stw	r2,16(sp)
   10c10:	0000ef80 	call	ef8 <__mulsi3>
   10c14:	da800317 	ldw	r10,12(sp)
   10c18:	d9c00217 	ldw	r7,8(sp)
   10c1c:	d9000017 	ldw	r4,0(sp)
   10c20:	502ed43a 	srli	r23,r10,16
   10c24:	11c5883a 	add	r2,r2,r7
   10c28:	24e5883a 	add	r18,r4,r19
   10c2c:	b885883a 	add	r2,r23,r2
   10c30:	d8c00517 	ldw	r3,20(sp)
   10c34:	d9800717 	ldw	r6,28(sp)
   10c38:	da000617 	ldw	r8,24(sp)
   10c3c:	da400417 	ldw	r9,16(sp)
   10c40:	11c0022e 	bgeu	r2,r7,10c4c <__muldf3+0x4f4>
   10c44:	01000074 	movhi	r4,1
   10c48:	4913883a 	add	r9,r9,r4
   10c4c:	100ed43a 	srli	r7,r2,16
   10c50:	1004943a 	slli	r2,r2,16
   10c54:	55ffffcc 	andi	r23,r10,65535
   10c58:	3a53883a 	add	r9,r7,r9
   10c5c:	8809883a 	mov	r4,r17
   10c60:	800b883a 	mov	r5,r16
   10c64:	d8c00515 	stw	r3,20(sp)
   10c68:	d9800715 	stw	r6,28(sp)
   10c6c:	da000615 	stw	r8,24(sp)
   10c70:	da400415 	stw	r9,16(sp)
   10c74:	15ef883a 	add	r23,r2,r23
   10c78:	0000ef80 	call	ef8 <__mulsi3>
   10c7c:	8809883a 	mov	r4,r17
   10c80:	b00b883a 	mov	r5,r22
   10c84:	d8800215 	stw	r2,8(sp)
   10c88:	0000ef80 	call	ef8 <__mulsi3>
   10c8c:	b00b883a 	mov	r5,r22
   10c90:	a809883a 	mov	r4,r21
   10c94:	d8800315 	stw	r2,12(sp)
   10c98:	0000ef80 	call	ef8 <__mulsi3>
   10c9c:	8009883a 	mov	r4,r16
   10ca0:	a80b883a 	mov	r5,r21
   10ca4:	1023883a 	mov	r17,r2
   10ca8:	0000ef80 	call	ef8 <__mulsi3>
   10cac:	d9c00217 	ldw	r7,8(sp)
   10cb0:	da800317 	ldw	r10,12(sp)
   10cb4:	d8c00517 	ldw	r3,20(sp)
   10cb8:	3808d43a 	srli	r4,r7,16
   10cbc:	1285883a 	add	r2,r2,r10
   10cc0:	d9800717 	ldw	r6,28(sp)
   10cc4:	2085883a 	add	r2,r4,r2
   10cc8:	da000617 	ldw	r8,24(sp)
   10ccc:	da400417 	ldw	r9,16(sp)
   10cd0:	1280022e 	bgeu	r2,r10,10cdc <__muldf3+0x584>
   10cd4:	01000074 	movhi	r4,1
   10cd8:	8923883a 	add	r17,r17,r4
   10cdc:	1008943a 	slli	r4,r2,16
   10ce0:	39ffffcc 	andi	r7,r7,65535
   10ce4:	e4b9883a 	add	fp,fp,r18
   10ce8:	21cf883a 	add	r7,r4,r7
   10cec:	e4e7803a 	cmpltu	r19,fp,r19
   10cf0:	3d0f883a 	add	r7,r7,r20
   10cf4:	bf39883a 	add	fp,r23,fp
   10cf8:	99c9883a 	add	r4,r19,r7
   10cfc:	e5ef803a 	cmpltu	r23,fp,r23
   10d00:	490b883a 	add	r5,r9,r4
   10d04:	1004d43a 	srli	r2,r2,16
   10d08:	b965883a 	add	r18,r23,r5
   10d0c:	24c9803a 	cmpltu	r4,r4,r19
   10d10:	3d29803a 	cmpltu	r20,r7,r20
   10d14:	a128b03a 	or	r20,r20,r4
   10d18:	95ef803a 	cmpltu	r23,r18,r23
   10d1c:	2a53803a 	cmpltu	r9,r5,r9
   10d20:	a0a9883a 	add	r20,r20,r2
   10d24:	4deeb03a 	or	r23,r9,r23
   10d28:	a5ef883a 	add	r23,r20,r23
   10d2c:	bc63883a 	add	r17,r23,r17
   10d30:	e004927a 	slli	r2,fp,9
   10d34:	d9000117 	ldw	r4,4(sp)
   10d38:	882e927a 	slli	r23,r17,9
   10d3c:	9022d5fa 	srli	r17,r18,23
   10d40:	e038d5fa 	srli	fp,fp,23
   10d44:	1104b03a 	or	r2,r2,r4
   10d48:	9024927a 	slli	r18,r18,9
   10d4c:	1004c03a 	cmpne	r2,r2,zero
   10d50:	bc62b03a 	or	r17,r23,r17
   10d54:	1738b03a 	or	fp,r2,fp
   10d58:	8880402c 	andhi	r2,r17,256
   10d5c:	e4a4b03a 	or	r18,fp,r18
   10d60:	10000726 	beq	r2,zero,10d80 <__muldf3+0x628>
   10d64:	9006d07a 	srli	r3,r18,1
   10d68:	880497fa 	slli	r2,r17,31
   10d6c:	9480004c 	andi	r18,r18,1
   10d70:	8822d07a 	srli	r17,r17,1
   10d74:	1ca4b03a 	or	r18,r3,r18
   10d78:	14a4b03a 	or	r18,r2,r18
   10d7c:	4007883a 	mov	r3,r8
   10d80:	1880ffc4 	addi	r2,r3,1023
   10d84:	0080460e 	bge	zero,r2,10ea0 <__muldf3+0x748>
   10d88:	910001cc 	andi	r4,r18,7
   10d8c:	20000726 	beq	r4,zero,10dac <__muldf3+0x654>
   10d90:	910003cc 	andi	r4,r18,15
   10d94:	01400104 	movi	r5,4
   10d98:	21400426 	beq	r4,r5,10dac <__muldf3+0x654>
   10d9c:	9149883a 	add	r4,r18,r5
   10da0:	24a5803a 	cmpltu	r18,r4,r18
   10da4:	8ca3883a 	add	r17,r17,r18
   10da8:	2025883a 	mov	r18,r4
   10dac:	8900402c 	andhi	r4,r17,256
   10db0:	20000426 	beq	r4,zero,10dc4 <__muldf3+0x66c>
   10db4:	18810004 	addi	r2,r3,1024
   10db8:	00ffc034 	movhi	r3,65280
   10dbc:	18ffffc4 	addi	r3,r3,-1
   10dc0:	88e2703a 	and	r17,r17,r3
   10dc4:	00c1ff84 	movi	r3,2046
   10dc8:	18bf1316 	blt	r3,r2,10a18 <__alt_mem_Onchip_SRAM+0xf8010a18>
   10dcc:	882c977a 	slli	r22,r17,29
   10dd0:	9024d0fa 	srli	r18,r18,3
   10dd4:	8822927a 	slli	r17,r17,9
   10dd8:	1081ffcc 	andi	r2,r2,2047
   10ddc:	b4acb03a 	or	r22,r22,r18
   10de0:	8820d33a 	srli	r16,r17,12
   10de4:	3027883a 	mov	r19,r6
   10de8:	003eba06 	br	108d4 <__alt_mem_Onchip_SRAM+0xf80108d4>
   10dec:	8080022c 	andhi	r2,r16,8
   10df0:	10000926 	beq	r2,zero,10e18 <__muldf3+0x6c0>
   10df4:	8880022c 	andhi	r2,r17,8
   10df8:	1000071e 	bne	r2,zero,10e18 <__muldf3+0x6c0>
   10dfc:	00800434 	movhi	r2,16
   10e00:	8c000234 	orhi	r16,r17,8
   10e04:	10bfffc4 	addi	r2,r2,-1
   10e08:	e027883a 	mov	r19,fp
   10e0c:	80a0703a 	and	r16,r16,r2
   10e10:	902d883a 	mov	r22,r18
   10e14:	003f1706 	br	10a74 <__alt_mem_Onchip_SRAM+0xf8010a74>
   10e18:	00800434 	movhi	r2,16
   10e1c:	84000234 	orhi	r16,r16,8
   10e20:	10bfffc4 	addi	r2,r2,-1
   10e24:	80a0703a 	and	r16,r16,r2
   10e28:	003f1206 	br	10a74 <__alt_mem_Onchip_SRAM+0xf8010a74>
   10e2c:	147ff604 	addi	r17,r2,-40
   10e30:	3462983a 	sll	r17,r6,r17
   10e34:	0025883a 	mov	r18,zero
   10e38:	003ef306 	br	10a08 <__alt_mem_Onchip_SRAM+0xf8010a08>
   10e3c:	3009883a 	mov	r4,r6
   10e40:	d9400215 	stw	r5,8(sp)
   10e44:	d9800715 	stw	r6,28(sp)
   10e48:	da400415 	stw	r9,16(sp)
   10e4c:	da800315 	stw	r10,12(sp)
   10e50:	00010b40 	call	10b4 <__clzsi2>
   10e54:	10800804 	addi	r2,r2,32
   10e58:	da800317 	ldw	r10,12(sp)
   10e5c:	da400417 	ldw	r9,16(sp)
   10e60:	d9800717 	ldw	r6,28(sp)
   10e64:	d9400217 	ldw	r5,8(sp)
   10e68:	003edd06 	br	109e0 <__alt_mem_Onchip_SRAM+0xf80109e0>
   10e6c:	143ff604 	addi	r16,r2,-40
   10e70:	ac20983a 	sll	r16,r21,r16
   10e74:	002d883a 	mov	r22,zero
   10e78:	003ec106 	br	10980 <__alt_mem_Onchip_SRAM+0xf8010980>
   10e7c:	d9800715 	stw	r6,28(sp)
   10e80:	d9c00215 	stw	r7,8(sp)
   10e84:	da400415 	stw	r9,16(sp)
   10e88:	00010b40 	call	10b4 <__clzsi2>
   10e8c:	10800804 	addi	r2,r2,32
   10e90:	da400417 	ldw	r9,16(sp)
   10e94:	d9c00217 	ldw	r7,8(sp)
   10e98:	d9800717 	ldw	r6,28(sp)
   10e9c:	003eae06 	br	10958 <__alt_mem_Onchip_SRAM+0xf8010958>
   10ea0:	00c00044 	movi	r3,1
   10ea4:	1887c83a 	sub	r3,r3,r2
   10ea8:	01000e04 	movi	r4,56
   10eac:	20fe8516 	blt	r4,r3,108c4 <__alt_mem_Onchip_SRAM+0xf80108c4>
   10eb0:	010007c4 	movi	r4,31
   10eb4:	20c01b16 	blt	r4,r3,10f24 <__muldf3+0x7cc>
   10eb8:	00800804 	movi	r2,32
   10ebc:	10c5c83a 	sub	r2,r2,r3
   10ec0:	888a983a 	sll	r5,r17,r2
   10ec4:	90c8d83a 	srl	r4,r18,r3
   10ec8:	9084983a 	sll	r2,r18,r2
   10ecc:	88e2d83a 	srl	r17,r17,r3
   10ed0:	2906b03a 	or	r3,r5,r4
   10ed4:	1004c03a 	cmpne	r2,r2,zero
   10ed8:	1886b03a 	or	r3,r3,r2
   10edc:	188001cc 	andi	r2,r3,7
   10ee0:	10000726 	beq	r2,zero,10f00 <__muldf3+0x7a8>
   10ee4:	188003cc 	andi	r2,r3,15
   10ee8:	01000104 	movi	r4,4
   10eec:	11000426 	beq	r2,r4,10f00 <__muldf3+0x7a8>
   10ef0:	1805883a 	mov	r2,r3
   10ef4:	10c00104 	addi	r3,r2,4
   10ef8:	1885803a 	cmpltu	r2,r3,r2
   10efc:	88a3883a 	add	r17,r17,r2
   10f00:	8880202c 	andhi	r2,r17,128
   10f04:	10001c26 	beq	r2,zero,10f78 <__muldf3+0x820>
   10f08:	3027883a 	mov	r19,r6
   10f0c:	00800044 	movi	r2,1
   10f10:	0021883a 	mov	r16,zero
   10f14:	002d883a 	mov	r22,zero
   10f18:	003e6e06 	br	108d4 <__alt_mem_Onchip_SRAM+0xf80108d4>
   10f1c:	4007883a 	mov	r3,r8
   10f20:	003f9706 	br	10d80 <__alt_mem_Onchip_SRAM+0xf8010d80>
   10f24:	017ff844 	movi	r5,-31
   10f28:	2885c83a 	sub	r2,r5,r2
   10f2c:	888ad83a 	srl	r5,r17,r2
   10f30:	00800804 	movi	r2,32
   10f34:	18801a26 	beq	r3,r2,10fa0 <__muldf3+0x848>
   10f38:	01001004 	movi	r4,64
   10f3c:	20c7c83a 	sub	r3,r4,r3
   10f40:	88e2983a 	sll	r17,r17,r3
   10f44:	8ca4b03a 	or	r18,r17,r18
   10f48:	9004c03a 	cmpne	r2,r18,zero
   10f4c:	2884b03a 	or	r2,r5,r2
   10f50:	144001cc 	andi	r17,r2,7
   10f54:	88000d1e 	bne	r17,zero,10f8c <__muldf3+0x834>
   10f58:	0021883a 	mov	r16,zero
   10f5c:	102cd0fa 	srli	r22,r2,3
   10f60:	3027883a 	mov	r19,r6
   10f64:	0005883a 	mov	r2,zero
   10f68:	b46cb03a 	or	r22,r22,r17
   10f6c:	003e5906 	br	108d4 <__alt_mem_Onchip_SRAM+0xf80108d4>
   10f70:	1007883a 	mov	r3,r2
   10f74:	0023883a 	mov	r17,zero
   10f78:	8820927a 	slli	r16,r17,9
   10f7c:	1805883a 	mov	r2,r3
   10f80:	8822977a 	slli	r17,r17,29
   10f84:	8020d33a 	srli	r16,r16,12
   10f88:	003ff406 	br	10f5c <__alt_mem_Onchip_SRAM+0xf8010f5c>
   10f8c:	10c003cc 	andi	r3,r2,15
   10f90:	01000104 	movi	r4,4
   10f94:	193ff626 	beq	r3,r4,10f70 <__alt_mem_Onchip_SRAM+0xf8010f70>
   10f98:	0023883a 	mov	r17,zero
   10f9c:	003fd506 	br	10ef4 <__alt_mem_Onchip_SRAM+0xf8010ef4>
   10fa0:	0023883a 	mov	r17,zero
   10fa4:	003fe706 	br	10f44 <__alt_mem_Onchip_SRAM+0xf8010f44>
   10fa8:	00800434 	movhi	r2,16
   10fac:	8c000234 	orhi	r16,r17,8
   10fb0:	10bfffc4 	addi	r2,r2,-1
   10fb4:	3027883a 	mov	r19,r6
   10fb8:	80a0703a 	and	r16,r16,r2
   10fbc:	902d883a 	mov	r22,r18
   10fc0:	003eac06 	br	10a74 <__alt_mem_Onchip_SRAM+0xf8010a74>

00010fc4 <__subdf3>:
   10fc4:	02000434 	movhi	r8,16
   10fc8:	423fffc4 	addi	r8,r8,-1
   10fcc:	defffb04 	addi	sp,sp,-20
   10fd0:	2a14703a 	and	r10,r5,r8
   10fd4:	3812d53a 	srli	r9,r7,20
   10fd8:	3a10703a 	and	r8,r7,r8
   10fdc:	2006d77a 	srli	r3,r4,29
   10fe0:	3004d77a 	srli	r2,r6,29
   10fe4:	dc000015 	stw	r16,0(sp)
   10fe8:	501490fa 	slli	r10,r10,3
   10fec:	2820d53a 	srli	r16,r5,20
   10ff0:	401090fa 	slli	r8,r8,3
   10ff4:	dc800215 	stw	r18,8(sp)
   10ff8:	dc400115 	stw	r17,4(sp)
   10ffc:	dfc00415 	stw	ra,16(sp)
   11000:	202290fa 	slli	r17,r4,3
   11004:	dcc00315 	stw	r19,12(sp)
   11008:	4a41ffcc 	andi	r9,r9,2047
   1100c:	0101ffc4 	movi	r4,2047
   11010:	2824d7fa 	srli	r18,r5,31
   11014:	8401ffcc 	andi	r16,r16,2047
   11018:	50c6b03a 	or	r3,r10,r3
   1101c:	380ed7fa 	srli	r7,r7,31
   11020:	408ab03a 	or	r5,r8,r2
   11024:	300c90fa 	slli	r6,r6,3
   11028:	49009626 	beq	r9,r4,11284 <__subdf3+0x2c0>
   1102c:	39c0005c 	xori	r7,r7,1
   11030:	8245c83a 	sub	r2,r16,r9
   11034:	3c807426 	beq	r7,r18,11208 <__subdf3+0x244>
   11038:	0080af0e 	bge	zero,r2,112f8 <__subdf3+0x334>
   1103c:	48002a1e 	bne	r9,zero,110e8 <__subdf3+0x124>
   11040:	2988b03a 	or	r4,r5,r6
   11044:	20009a1e 	bne	r4,zero,112b0 <__subdf3+0x2ec>
   11048:	888001cc 	andi	r2,r17,7
   1104c:	10000726 	beq	r2,zero,1106c <__subdf3+0xa8>
   11050:	888003cc 	andi	r2,r17,15
   11054:	01000104 	movi	r4,4
   11058:	11000426 	beq	r2,r4,1106c <__subdf3+0xa8>
   1105c:	890b883a 	add	r5,r17,r4
   11060:	2c63803a 	cmpltu	r17,r5,r17
   11064:	1c47883a 	add	r3,r3,r17
   11068:	2823883a 	mov	r17,r5
   1106c:	1880202c 	andhi	r2,r3,128
   11070:	10005926 	beq	r2,zero,111d8 <__subdf3+0x214>
   11074:	84000044 	addi	r16,r16,1
   11078:	0081ffc4 	movi	r2,2047
   1107c:	8080be26 	beq	r16,r2,11378 <__subdf3+0x3b4>
   11080:	017fe034 	movhi	r5,65408
   11084:	297fffc4 	addi	r5,r5,-1
   11088:	1946703a 	and	r3,r3,r5
   1108c:	1804977a 	slli	r2,r3,29
   11090:	1806927a 	slli	r3,r3,9
   11094:	8822d0fa 	srli	r17,r17,3
   11098:	8401ffcc 	andi	r16,r16,2047
   1109c:	180ad33a 	srli	r5,r3,12
   110a0:	9100004c 	andi	r4,r18,1
   110a4:	1444b03a 	or	r2,r2,r17
   110a8:	80c1ffcc 	andi	r3,r16,2047
   110ac:	1820953a 	slli	r16,r3,20
   110b0:	20c03fcc 	andi	r3,r4,255
   110b4:	180897fa 	slli	r4,r3,31
   110b8:	00c00434 	movhi	r3,16
   110bc:	18ffffc4 	addi	r3,r3,-1
   110c0:	28c6703a 	and	r3,r5,r3
   110c4:	1c06b03a 	or	r3,r3,r16
   110c8:	1906b03a 	or	r3,r3,r4
   110cc:	dfc00417 	ldw	ra,16(sp)
   110d0:	dcc00317 	ldw	r19,12(sp)
   110d4:	dc800217 	ldw	r18,8(sp)
   110d8:	dc400117 	ldw	r17,4(sp)
   110dc:	dc000017 	ldw	r16,0(sp)
   110e0:	dec00504 	addi	sp,sp,20
   110e4:	f800283a 	ret
   110e8:	0101ffc4 	movi	r4,2047
   110ec:	813fd626 	beq	r16,r4,11048 <__alt_mem_Onchip_SRAM+0xf8011048>
   110f0:	29402034 	orhi	r5,r5,128
   110f4:	01000e04 	movi	r4,56
   110f8:	2080a316 	blt	r4,r2,11388 <__subdf3+0x3c4>
   110fc:	010007c4 	movi	r4,31
   11100:	2080c616 	blt	r4,r2,1141c <__subdf3+0x458>
   11104:	01000804 	movi	r4,32
   11108:	2089c83a 	sub	r4,r4,r2
   1110c:	2910983a 	sll	r8,r5,r4
   11110:	308ed83a 	srl	r7,r6,r2
   11114:	3108983a 	sll	r4,r6,r4
   11118:	2884d83a 	srl	r2,r5,r2
   1111c:	41ccb03a 	or	r6,r8,r7
   11120:	2008c03a 	cmpne	r4,r4,zero
   11124:	310cb03a 	or	r6,r6,r4
   11128:	898dc83a 	sub	r6,r17,r6
   1112c:	89a3803a 	cmpltu	r17,r17,r6
   11130:	1887c83a 	sub	r3,r3,r2
   11134:	1c47c83a 	sub	r3,r3,r17
   11138:	3023883a 	mov	r17,r6
   1113c:	1880202c 	andhi	r2,r3,128
   11140:	10002326 	beq	r2,zero,111d0 <__subdf3+0x20c>
   11144:	04c02034 	movhi	r19,128
   11148:	9cffffc4 	addi	r19,r19,-1
   1114c:	1ce6703a 	and	r19,r3,r19
   11150:	98007a26 	beq	r19,zero,1133c <__subdf3+0x378>
   11154:	9809883a 	mov	r4,r19
   11158:	00010b40 	call	10b4 <__clzsi2>
   1115c:	113ffe04 	addi	r4,r2,-8
   11160:	00c007c4 	movi	r3,31
   11164:	19007b16 	blt	r3,r4,11354 <__subdf3+0x390>
   11168:	00800804 	movi	r2,32
   1116c:	1105c83a 	sub	r2,r2,r4
   11170:	8884d83a 	srl	r2,r17,r2
   11174:	9906983a 	sll	r3,r19,r4
   11178:	8922983a 	sll	r17,r17,r4
   1117c:	10c4b03a 	or	r2,r2,r3
   11180:	24007816 	blt	r4,r16,11364 <__subdf3+0x3a0>
   11184:	2421c83a 	sub	r16,r4,r16
   11188:	80c00044 	addi	r3,r16,1
   1118c:	010007c4 	movi	r4,31
   11190:	20c09516 	blt	r4,r3,113e8 <__subdf3+0x424>
   11194:	01400804 	movi	r5,32
   11198:	28cbc83a 	sub	r5,r5,r3
   1119c:	88c8d83a 	srl	r4,r17,r3
   111a0:	8962983a 	sll	r17,r17,r5
   111a4:	114a983a 	sll	r5,r2,r5
   111a8:	10c6d83a 	srl	r3,r2,r3
   111ac:	8804c03a 	cmpne	r2,r17,zero
   111b0:	290ab03a 	or	r5,r5,r4
   111b4:	28a2b03a 	or	r17,r5,r2
   111b8:	0021883a 	mov	r16,zero
   111bc:	003fa206 	br	11048 <__alt_mem_Onchip_SRAM+0xf8011048>
   111c0:	2090b03a 	or	r8,r4,r2
   111c4:	40018e26 	beq	r8,zero,11800 <__subdf3+0x83c>
   111c8:	1007883a 	mov	r3,r2
   111cc:	2023883a 	mov	r17,r4
   111d0:	888001cc 	andi	r2,r17,7
   111d4:	103f9e1e 	bne	r2,zero,11050 <__alt_mem_Onchip_SRAM+0xf8011050>
   111d8:	1804977a 	slli	r2,r3,29
   111dc:	8822d0fa 	srli	r17,r17,3
   111e0:	1810d0fa 	srli	r8,r3,3
   111e4:	9100004c 	andi	r4,r18,1
   111e8:	1444b03a 	or	r2,r2,r17
   111ec:	00c1ffc4 	movi	r3,2047
   111f0:	80c02826 	beq	r16,r3,11294 <__subdf3+0x2d0>
   111f4:	01400434 	movhi	r5,16
   111f8:	297fffc4 	addi	r5,r5,-1
   111fc:	80e0703a 	and	r16,r16,r3
   11200:	414a703a 	and	r5,r8,r5
   11204:	003fa806 	br	110a8 <__alt_mem_Onchip_SRAM+0xf80110a8>
   11208:	0080630e 	bge	zero,r2,11398 <__subdf3+0x3d4>
   1120c:	48003026 	beq	r9,zero,112d0 <__subdf3+0x30c>
   11210:	0101ffc4 	movi	r4,2047
   11214:	813f8c26 	beq	r16,r4,11048 <__alt_mem_Onchip_SRAM+0xf8011048>
   11218:	29402034 	orhi	r5,r5,128
   1121c:	01000e04 	movi	r4,56
   11220:	2080a90e 	bge	r4,r2,114c8 <__subdf3+0x504>
   11224:	298cb03a 	or	r6,r5,r6
   11228:	3012c03a 	cmpne	r9,r6,zero
   1122c:	0005883a 	mov	r2,zero
   11230:	4c53883a 	add	r9,r9,r17
   11234:	4c63803a 	cmpltu	r17,r9,r17
   11238:	10c7883a 	add	r3,r2,r3
   1123c:	88c7883a 	add	r3,r17,r3
   11240:	4823883a 	mov	r17,r9
   11244:	1880202c 	andhi	r2,r3,128
   11248:	1000d026 	beq	r2,zero,1158c <__subdf3+0x5c8>
   1124c:	84000044 	addi	r16,r16,1
   11250:	0081ffc4 	movi	r2,2047
   11254:	8080fe26 	beq	r16,r2,11650 <__subdf3+0x68c>
   11258:	00bfe034 	movhi	r2,65408
   1125c:	10bfffc4 	addi	r2,r2,-1
   11260:	1886703a 	and	r3,r3,r2
   11264:	880ad07a 	srli	r5,r17,1
   11268:	180497fa 	slli	r2,r3,31
   1126c:	8900004c 	andi	r4,r17,1
   11270:	2922b03a 	or	r17,r5,r4
   11274:	1806d07a 	srli	r3,r3,1
   11278:	1462b03a 	or	r17,r2,r17
   1127c:	3825883a 	mov	r18,r7
   11280:	003f7106 	br	11048 <__alt_mem_Onchip_SRAM+0xf8011048>
   11284:	2984b03a 	or	r2,r5,r6
   11288:	103f6826 	beq	r2,zero,1102c <__alt_mem_Onchip_SRAM+0xf801102c>
   1128c:	39c03fcc 	andi	r7,r7,255
   11290:	003f6706 	br	11030 <__alt_mem_Onchip_SRAM+0xf8011030>
   11294:	4086b03a 	or	r3,r8,r2
   11298:	18015226 	beq	r3,zero,117e4 <__subdf3+0x820>
   1129c:	00c00434 	movhi	r3,16
   112a0:	41400234 	orhi	r5,r8,8
   112a4:	18ffffc4 	addi	r3,r3,-1
   112a8:	28ca703a 	and	r5,r5,r3
   112ac:	003f7e06 	br	110a8 <__alt_mem_Onchip_SRAM+0xf80110a8>
   112b0:	10bfffc4 	addi	r2,r2,-1
   112b4:	1000491e 	bne	r2,zero,113dc <__subdf3+0x418>
   112b8:	898fc83a 	sub	r7,r17,r6
   112bc:	89e3803a 	cmpltu	r17,r17,r7
   112c0:	1947c83a 	sub	r3,r3,r5
   112c4:	1c47c83a 	sub	r3,r3,r17
   112c8:	3823883a 	mov	r17,r7
   112cc:	003f9b06 	br	1113c <__alt_mem_Onchip_SRAM+0xf801113c>
   112d0:	2988b03a 	or	r4,r5,r6
   112d4:	203f5c26 	beq	r4,zero,11048 <__alt_mem_Onchip_SRAM+0xf8011048>
   112d8:	10bfffc4 	addi	r2,r2,-1
   112dc:	1000931e 	bne	r2,zero,1152c <__subdf3+0x568>
   112e0:	898d883a 	add	r6,r17,r6
   112e4:	3463803a 	cmpltu	r17,r6,r17
   112e8:	1947883a 	add	r3,r3,r5
   112ec:	88c7883a 	add	r3,r17,r3
   112f0:	3023883a 	mov	r17,r6
   112f4:	003fd306 	br	11244 <__alt_mem_Onchip_SRAM+0xf8011244>
   112f8:	1000541e 	bne	r2,zero,1144c <__subdf3+0x488>
   112fc:	80800044 	addi	r2,r16,1
   11300:	1081ffcc 	andi	r2,r2,2047
   11304:	01000044 	movi	r4,1
   11308:	2080a20e 	bge	r4,r2,11594 <__subdf3+0x5d0>
   1130c:	8989c83a 	sub	r4,r17,r6
   11310:	8905803a 	cmpltu	r2,r17,r4
   11314:	1967c83a 	sub	r19,r3,r5
   11318:	98a7c83a 	sub	r19,r19,r2
   1131c:	9880202c 	andhi	r2,r19,128
   11320:	10006326 	beq	r2,zero,114b0 <__subdf3+0x4ec>
   11324:	3463c83a 	sub	r17,r6,r17
   11328:	28c7c83a 	sub	r3,r5,r3
   1132c:	344d803a 	cmpltu	r6,r6,r17
   11330:	19a7c83a 	sub	r19,r3,r6
   11334:	3825883a 	mov	r18,r7
   11338:	983f861e 	bne	r19,zero,11154 <__alt_mem_Onchip_SRAM+0xf8011154>
   1133c:	8809883a 	mov	r4,r17
   11340:	00010b40 	call	10b4 <__clzsi2>
   11344:	10800804 	addi	r2,r2,32
   11348:	113ffe04 	addi	r4,r2,-8
   1134c:	00c007c4 	movi	r3,31
   11350:	193f850e 	bge	r3,r4,11168 <__alt_mem_Onchip_SRAM+0xf8011168>
   11354:	10bff604 	addi	r2,r2,-40
   11358:	8884983a 	sll	r2,r17,r2
   1135c:	0023883a 	mov	r17,zero
   11360:	243f880e 	bge	r4,r16,11184 <__alt_mem_Onchip_SRAM+0xf8011184>
   11364:	00ffe034 	movhi	r3,65408
   11368:	18ffffc4 	addi	r3,r3,-1
   1136c:	8121c83a 	sub	r16,r16,r4
   11370:	10c6703a 	and	r3,r2,r3
   11374:	003f3406 	br	11048 <__alt_mem_Onchip_SRAM+0xf8011048>
   11378:	9100004c 	andi	r4,r18,1
   1137c:	000b883a 	mov	r5,zero
   11380:	0005883a 	mov	r2,zero
   11384:	003f4806 	br	110a8 <__alt_mem_Onchip_SRAM+0xf80110a8>
   11388:	298cb03a 	or	r6,r5,r6
   1138c:	300cc03a 	cmpne	r6,r6,zero
   11390:	0005883a 	mov	r2,zero
   11394:	003f6406 	br	11128 <__alt_mem_Onchip_SRAM+0xf8011128>
   11398:	10009a1e 	bne	r2,zero,11604 <__subdf3+0x640>
   1139c:	82400044 	addi	r9,r16,1
   113a0:	4881ffcc 	andi	r2,r9,2047
   113a4:	02800044 	movi	r10,1
   113a8:	5080670e 	bge	r10,r2,11548 <__subdf3+0x584>
   113ac:	0081ffc4 	movi	r2,2047
   113b0:	4880af26 	beq	r9,r2,11670 <__subdf3+0x6ac>
   113b4:	898d883a 	add	r6,r17,r6
   113b8:	1945883a 	add	r2,r3,r5
   113bc:	3447803a 	cmpltu	r3,r6,r17
   113c0:	1887883a 	add	r3,r3,r2
   113c4:	182297fa 	slli	r17,r3,31
   113c8:	300cd07a 	srli	r6,r6,1
   113cc:	1806d07a 	srli	r3,r3,1
   113d0:	4821883a 	mov	r16,r9
   113d4:	89a2b03a 	or	r17,r17,r6
   113d8:	003f1b06 	br	11048 <__alt_mem_Onchip_SRAM+0xf8011048>
   113dc:	0101ffc4 	movi	r4,2047
   113e0:	813f441e 	bne	r16,r4,110f4 <__alt_mem_Onchip_SRAM+0xf80110f4>
   113e4:	003f1806 	br	11048 <__alt_mem_Onchip_SRAM+0xf8011048>
   113e8:	843ff844 	addi	r16,r16,-31
   113ec:	01400804 	movi	r5,32
   113f0:	1408d83a 	srl	r4,r2,r16
   113f4:	19405026 	beq	r3,r5,11538 <__subdf3+0x574>
   113f8:	01401004 	movi	r5,64
   113fc:	28c7c83a 	sub	r3,r5,r3
   11400:	10c4983a 	sll	r2,r2,r3
   11404:	88a2b03a 	or	r17,r17,r2
   11408:	8822c03a 	cmpne	r17,r17,zero
   1140c:	2462b03a 	or	r17,r4,r17
   11410:	0007883a 	mov	r3,zero
   11414:	0021883a 	mov	r16,zero
   11418:	003f6d06 	br	111d0 <__alt_mem_Onchip_SRAM+0xf80111d0>
   1141c:	11fff804 	addi	r7,r2,-32
   11420:	01000804 	movi	r4,32
   11424:	29ced83a 	srl	r7,r5,r7
   11428:	11004526 	beq	r2,r4,11540 <__subdf3+0x57c>
   1142c:	01001004 	movi	r4,64
   11430:	2089c83a 	sub	r4,r4,r2
   11434:	2904983a 	sll	r2,r5,r4
   11438:	118cb03a 	or	r6,r2,r6
   1143c:	300cc03a 	cmpne	r6,r6,zero
   11440:	398cb03a 	or	r6,r7,r6
   11444:	0005883a 	mov	r2,zero
   11448:	003f3706 	br	11128 <__alt_mem_Onchip_SRAM+0xf8011128>
   1144c:	80002a26 	beq	r16,zero,114f8 <__subdf3+0x534>
   11450:	0101ffc4 	movi	r4,2047
   11454:	49006626 	beq	r9,r4,115f0 <__subdf3+0x62c>
   11458:	0085c83a 	sub	r2,zero,r2
   1145c:	18c02034 	orhi	r3,r3,128
   11460:	01000e04 	movi	r4,56
   11464:	20807e16 	blt	r4,r2,11660 <__subdf3+0x69c>
   11468:	010007c4 	movi	r4,31
   1146c:	2080e716 	blt	r4,r2,1180c <__subdf3+0x848>
   11470:	01000804 	movi	r4,32
   11474:	2089c83a 	sub	r4,r4,r2
   11478:	1914983a 	sll	r10,r3,r4
   1147c:	8890d83a 	srl	r8,r17,r2
   11480:	8908983a 	sll	r4,r17,r4
   11484:	1884d83a 	srl	r2,r3,r2
   11488:	5222b03a 	or	r17,r10,r8
   1148c:	2006c03a 	cmpne	r3,r4,zero
   11490:	88e2b03a 	or	r17,r17,r3
   11494:	3463c83a 	sub	r17,r6,r17
   11498:	2885c83a 	sub	r2,r5,r2
   1149c:	344d803a 	cmpltu	r6,r6,r17
   114a0:	1187c83a 	sub	r3,r2,r6
   114a4:	4821883a 	mov	r16,r9
   114a8:	3825883a 	mov	r18,r7
   114ac:	003f2306 	br	1113c <__alt_mem_Onchip_SRAM+0xf801113c>
   114b0:	24d0b03a 	or	r8,r4,r19
   114b4:	40001b1e 	bne	r8,zero,11524 <__subdf3+0x560>
   114b8:	0005883a 	mov	r2,zero
   114bc:	0009883a 	mov	r4,zero
   114c0:	0021883a 	mov	r16,zero
   114c4:	003f4906 	br	111ec <__alt_mem_Onchip_SRAM+0xf80111ec>
   114c8:	010007c4 	movi	r4,31
   114cc:	20803a16 	blt	r4,r2,115b8 <__subdf3+0x5f4>
   114d0:	01000804 	movi	r4,32
   114d4:	2089c83a 	sub	r4,r4,r2
   114d8:	2912983a 	sll	r9,r5,r4
   114dc:	3090d83a 	srl	r8,r6,r2
   114e0:	3108983a 	sll	r4,r6,r4
   114e4:	2884d83a 	srl	r2,r5,r2
   114e8:	4a12b03a 	or	r9,r9,r8
   114ec:	2008c03a 	cmpne	r4,r4,zero
   114f0:	4912b03a 	or	r9,r9,r4
   114f4:	003f4e06 	br	11230 <__alt_mem_Onchip_SRAM+0xf8011230>
   114f8:	1c48b03a 	or	r4,r3,r17
   114fc:	20003c26 	beq	r4,zero,115f0 <__subdf3+0x62c>
   11500:	0084303a 	nor	r2,zero,r2
   11504:	1000381e 	bne	r2,zero,115e8 <__subdf3+0x624>
   11508:	3463c83a 	sub	r17,r6,r17
   1150c:	28c5c83a 	sub	r2,r5,r3
   11510:	344d803a 	cmpltu	r6,r6,r17
   11514:	1187c83a 	sub	r3,r2,r6
   11518:	4821883a 	mov	r16,r9
   1151c:	3825883a 	mov	r18,r7
   11520:	003f0606 	br	1113c <__alt_mem_Onchip_SRAM+0xf801113c>
   11524:	2023883a 	mov	r17,r4
   11528:	003f0906 	br	11150 <__alt_mem_Onchip_SRAM+0xf8011150>
   1152c:	0101ffc4 	movi	r4,2047
   11530:	813f3a1e 	bne	r16,r4,1121c <__alt_mem_Onchip_SRAM+0xf801121c>
   11534:	003ec406 	br	11048 <__alt_mem_Onchip_SRAM+0xf8011048>
   11538:	0005883a 	mov	r2,zero
   1153c:	003fb106 	br	11404 <__alt_mem_Onchip_SRAM+0xf8011404>
   11540:	0005883a 	mov	r2,zero
   11544:	003fbc06 	br	11438 <__alt_mem_Onchip_SRAM+0xf8011438>
   11548:	1c44b03a 	or	r2,r3,r17
   1154c:	80008e1e 	bne	r16,zero,11788 <__subdf3+0x7c4>
   11550:	1000c826 	beq	r2,zero,11874 <__subdf3+0x8b0>
   11554:	2984b03a 	or	r2,r5,r6
   11558:	103ebb26 	beq	r2,zero,11048 <__alt_mem_Onchip_SRAM+0xf8011048>
   1155c:	8989883a 	add	r4,r17,r6
   11560:	1945883a 	add	r2,r3,r5
   11564:	2447803a 	cmpltu	r3,r4,r17
   11568:	1887883a 	add	r3,r3,r2
   1156c:	1880202c 	andhi	r2,r3,128
   11570:	2023883a 	mov	r17,r4
   11574:	103f1626 	beq	r2,zero,111d0 <__alt_mem_Onchip_SRAM+0xf80111d0>
   11578:	00bfe034 	movhi	r2,65408
   1157c:	10bfffc4 	addi	r2,r2,-1
   11580:	5021883a 	mov	r16,r10
   11584:	1886703a 	and	r3,r3,r2
   11588:	003eaf06 	br	11048 <__alt_mem_Onchip_SRAM+0xf8011048>
   1158c:	3825883a 	mov	r18,r7
   11590:	003f0f06 	br	111d0 <__alt_mem_Onchip_SRAM+0xf80111d0>
   11594:	1c44b03a 	or	r2,r3,r17
   11598:	8000251e 	bne	r16,zero,11630 <__subdf3+0x66c>
   1159c:	1000661e 	bne	r2,zero,11738 <__subdf3+0x774>
   115a0:	2990b03a 	or	r8,r5,r6
   115a4:	40009626 	beq	r8,zero,11800 <__subdf3+0x83c>
   115a8:	2807883a 	mov	r3,r5
   115ac:	3023883a 	mov	r17,r6
   115b0:	3825883a 	mov	r18,r7
   115b4:	003ea406 	br	11048 <__alt_mem_Onchip_SRAM+0xf8011048>
   115b8:	127ff804 	addi	r9,r2,-32
   115bc:	01000804 	movi	r4,32
   115c0:	2a52d83a 	srl	r9,r5,r9
   115c4:	11008c26 	beq	r2,r4,117f8 <__subdf3+0x834>
   115c8:	01001004 	movi	r4,64
   115cc:	2085c83a 	sub	r2,r4,r2
   115d0:	2884983a 	sll	r2,r5,r2
   115d4:	118cb03a 	or	r6,r2,r6
   115d8:	300cc03a 	cmpne	r6,r6,zero
   115dc:	4992b03a 	or	r9,r9,r6
   115e0:	0005883a 	mov	r2,zero
   115e4:	003f1206 	br	11230 <__alt_mem_Onchip_SRAM+0xf8011230>
   115e8:	0101ffc4 	movi	r4,2047
   115ec:	493f9c1e 	bne	r9,r4,11460 <__alt_mem_Onchip_SRAM+0xf8011460>
   115f0:	2807883a 	mov	r3,r5
   115f4:	3023883a 	mov	r17,r6
   115f8:	4821883a 	mov	r16,r9
   115fc:	3825883a 	mov	r18,r7
   11600:	003e9106 	br	11048 <__alt_mem_Onchip_SRAM+0xf8011048>
   11604:	80001f1e 	bne	r16,zero,11684 <__subdf3+0x6c0>
   11608:	1c48b03a 	or	r4,r3,r17
   1160c:	20005a26 	beq	r4,zero,11778 <__subdf3+0x7b4>
   11610:	0084303a 	nor	r2,zero,r2
   11614:	1000561e 	bne	r2,zero,11770 <__subdf3+0x7ac>
   11618:	89a3883a 	add	r17,r17,r6
   1161c:	1945883a 	add	r2,r3,r5
   11620:	898d803a 	cmpltu	r6,r17,r6
   11624:	3087883a 	add	r3,r6,r2
   11628:	4821883a 	mov	r16,r9
   1162c:	003f0506 	br	11244 <__alt_mem_Onchip_SRAM+0xf8011244>
   11630:	10002b1e 	bne	r2,zero,116e0 <__subdf3+0x71c>
   11634:	2984b03a 	or	r2,r5,r6
   11638:	10008026 	beq	r2,zero,1183c <__subdf3+0x878>
   1163c:	2807883a 	mov	r3,r5
   11640:	3023883a 	mov	r17,r6
   11644:	3825883a 	mov	r18,r7
   11648:	0401ffc4 	movi	r16,2047
   1164c:	003e7e06 	br	11048 <__alt_mem_Onchip_SRAM+0xf8011048>
   11650:	3809883a 	mov	r4,r7
   11654:	0011883a 	mov	r8,zero
   11658:	0005883a 	mov	r2,zero
   1165c:	003ee306 	br	111ec <__alt_mem_Onchip_SRAM+0xf80111ec>
   11660:	1c62b03a 	or	r17,r3,r17
   11664:	8822c03a 	cmpne	r17,r17,zero
   11668:	0005883a 	mov	r2,zero
   1166c:	003f8906 	br	11494 <__alt_mem_Onchip_SRAM+0xf8011494>
   11670:	3809883a 	mov	r4,r7
   11674:	4821883a 	mov	r16,r9
   11678:	0011883a 	mov	r8,zero
   1167c:	0005883a 	mov	r2,zero
   11680:	003eda06 	br	111ec <__alt_mem_Onchip_SRAM+0xf80111ec>
   11684:	0101ffc4 	movi	r4,2047
   11688:	49003b26 	beq	r9,r4,11778 <__subdf3+0x7b4>
   1168c:	0085c83a 	sub	r2,zero,r2
   11690:	18c02034 	orhi	r3,r3,128
   11694:	01000e04 	movi	r4,56
   11698:	20806e16 	blt	r4,r2,11854 <__subdf3+0x890>
   1169c:	010007c4 	movi	r4,31
   116a0:	20807716 	blt	r4,r2,11880 <__subdf3+0x8bc>
   116a4:	01000804 	movi	r4,32
   116a8:	2089c83a 	sub	r4,r4,r2
   116ac:	1914983a 	sll	r10,r3,r4
   116b0:	8890d83a 	srl	r8,r17,r2
   116b4:	8908983a 	sll	r4,r17,r4
   116b8:	1884d83a 	srl	r2,r3,r2
   116bc:	5222b03a 	or	r17,r10,r8
   116c0:	2006c03a 	cmpne	r3,r4,zero
   116c4:	88e2b03a 	or	r17,r17,r3
   116c8:	89a3883a 	add	r17,r17,r6
   116cc:	1145883a 	add	r2,r2,r5
   116d0:	898d803a 	cmpltu	r6,r17,r6
   116d4:	3087883a 	add	r3,r6,r2
   116d8:	4821883a 	mov	r16,r9
   116dc:	003ed906 	br	11244 <__alt_mem_Onchip_SRAM+0xf8011244>
   116e0:	2984b03a 	or	r2,r5,r6
   116e4:	10004226 	beq	r2,zero,117f0 <__subdf3+0x82c>
   116e8:	1808d0fa 	srli	r4,r3,3
   116ec:	8822d0fa 	srli	r17,r17,3
   116f0:	1806977a 	slli	r3,r3,29
   116f4:	2080022c 	andhi	r2,r4,8
   116f8:	1c62b03a 	or	r17,r3,r17
   116fc:	10000826 	beq	r2,zero,11720 <__subdf3+0x75c>
   11700:	2812d0fa 	srli	r9,r5,3
   11704:	4880022c 	andhi	r2,r9,8
   11708:	1000051e 	bne	r2,zero,11720 <__subdf3+0x75c>
   1170c:	300cd0fa 	srli	r6,r6,3
   11710:	2804977a 	slli	r2,r5,29
   11714:	4809883a 	mov	r4,r9
   11718:	3825883a 	mov	r18,r7
   1171c:	11a2b03a 	or	r17,r2,r6
   11720:	8806d77a 	srli	r3,r17,29
   11724:	200890fa 	slli	r4,r4,3
   11728:	882290fa 	slli	r17,r17,3
   1172c:	0401ffc4 	movi	r16,2047
   11730:	1906b03a 	or	r3,r3,r4
   11734:	003e4406 	br	11048 <__alt_mem_Onchip_SRAM+0xf8011048>
   11738:	2984b03a 	or	r2,r5,r6
   1173c:	103e4226 	beq	r2,zero,11048 <__alt_mem_Onchip_SRAM+0xf8011048>
   11740:	8989c83a 	sub	r4,r17,r6
   11744:	8911803a 	cmpltu	r8,r17,r4
   11748:	1945c83a 	sub	r2,r3,r5
   1174c:	1205c83a 	sub	r2,r2,r8
   11750:	1200202c 	andhi	r8,r2,128
   11754:	403e9a26 	beq	r8,zero,111c0 <__alt_mem_Onchip_SRAM+0xf80111c0>
   11758:	3463c83a 	sub	r17,r6,r17
   1175c:	28c5c83a 	sub	r2,r5,r3
   11760:	344d803a 	cmpltu	r6,r6,r17
   11764:	1187c83a 	sub	r3,r2,r6
   11768:	3825883a 	mov	r18,r7
   1176c:	003e3606 	br	11048 <__alt_mem_Onchip_SRAM+0xf8011048>
   11770:	0101ffc4 	movi	r4,2047
   11774:	493fc71e 	bne	r9,r4,11694 <__alt_mem_Onchip_SRAM+0xf8011694>
   11778:	2807883a 	mov	r3,r5
   1177c:	3023883a 	mov	r17,r6
   11780:	4821883a 	mov	r16,r9
   11784:	003e3006 	br	11048 <__alt_mem_Onchip_SRAM+0xf8011048>
   11788:	10003626 	beq	r2,zero,11864 <__subdf3+0x8a0>
   1178c:	2984b03a 	or	r2,r5,r6
   11790:	10001726 	beq	r2,zero,117f0 <__subdf3+0x82c>
   11794:	1808d0fa 	srli	r4,r3,3
   11798:	8822d0fa 	srli	r17,r17,3
   1179c:	1806977a 	slli	r3,r3,29
   117a0:	2080022c 	andhi	r2,r4,8
   117a4:	1c62b03a 	or	r17,r3,r17
   117a8:	10000726 	beq	r2,zero,117c8 <__subdf3+0x804>
   117ac:	2812d0fa 	srli	r9,r5,3
   117b0:	4880022c 	andhi	r2,r9,8
   117b4:	1000041e 	bne	r2,zero,117c8 <__subdf3+0x804>
   117b8:	300cd0fa 	srli	r6,r6,3
   117bc:	2804977a 	slli	r2,r5,29
   117c0:	4809883a 	mov	r4,r9
   117c4:	11a2b03a 	or	r17,r2,r6
   117c8:	8806d77a 	srli	r3,r17,29
   117cc:	200890fa 	slli	r4,r4,3
   117d0:	882290fa 	slli	r17,r17,3
   117d4:	3825883a 	mov	r18,r7
   117d8:	1906b03a 	or	r3,r3,r4
   117dc:	0401ffc4 	movi	r16,2047
   117e0:	003e1906 	br	11048 <__alt_mem_Onchip_SRAM+0xf8011048>
   117e4:	000b883a 	mov	r5,zero
   117e8:	0005883a 	mov	r2,zero
   117ec:	003e2e06 	br	110a8 <__alt_mem_Onchip_SRAM+0xf80110a8>
   117f0:	0401ffc4 	movi	r16,2047
   117f4:	003e1406 	br	11048 <__alt_mem_Onchip_SRAM+0xf8011048>
   117f8:	0005883a 	mov	r2,zero
   117fc:	003f7506 	br	115d4 <__alt_mem_Onchip_SRAM+0xf80115d4>
   11800:	0005883a 	mov	r2,zero
   11804:	0009883a 	mov	r4,zero
   11808:	003e7806 	br	111ec <__alt_mem_Onchip_SRAM+0xf80111ec>
   1180c:	123ff804 	addi	r8,r2,-32
   11810:	01000804 	movi	r4,32
   11814:	1a10d83a 	srl	r8,r3,r8
   11818:	11002526 	beq	r2,r4,118b0 <__subdf3+0x8ec>
   1181c:	01001004 	movi	r4,64
   11820:	2085c83a 	sub	r2,r4,r2
   11824:	1884983a 	sll	r2,r3,r2
   11828:	1444b03a 	or	r2,r2,r17
   1182c:	1004c03a 	cmpne	r2,r2,zero
   11830:	40a2b03a 	or	r17,r8,r2
   11834:	0005883a 	mov	r2,zero
   11838:	003f1606 	br	11494 <__alt_mem_Onchip_SRAM+0xf8011494>
   1183c:	02000434 	movhi	r8,16
   11840:	0009883a 	mov	r4,zero
   11844:	423fffc4 	addi	r8,r8,-1
   11848:	00bfffc4 	movi	r2,-1
   1184c:	0401ffc4 	movi	r16,2047
   11850:	003e6606 	br	111ec <__alt_mem_Onchip_SRAM+0xf80111ec>
   11854:	1c62b03a 	or	r17,r3,r17
   11858:	8822c03a 	cmpne	r17,r17,zero
   1185c:	0005883a 	mov	r2,zero
   11860:	003f9906 	br	116c8 <__alt_mem_Onchip_SRAM+0xf80116c8>
   11864:	2807883a 	mov	r3,r5
   11868:	3023883a 	mov	r17,r6
   1186c:	0401ffc4 	movi	r16,2047
   11870:	003df506 	br	11048 <__alt_mem_Onchip_SRAM+0xf8011048>
   11874:	2807883a 	mov	r3,r5
   11878:	3023883a 	mov	r17,r6
   1187c:	003df206 	br	11048 <__alt_mem_Onchip_SRAM+0xf8011048>
   11880:	123ff804 	addi	r8,r2,-32
   11884:	01000804 	movi	r4,32
   11888:	1a10d83a 	srl	r8,r3,r8
   1188c:	11000a26 	beq	r2,r4,118b8 <__subdf3+0x8f4>
   11890:	01001004 	movi	r4,64
   11894:	2085c83a 	sub	r2,r4,r2
   11898:	1884983a 	sll	r2,r3,r2
   1189c:	1444b03a 	or	r2,r2,r17
   118a0:	1004c03a 	cmpne	r2,r2,zero
   118a4:	40a2b03a 	or	r17,r8,r2
   118a8:	0005883a 	mov	r2,zero
   118ac:	003f8606 	br	116c8 <__alt_mem_Onchip_SRAM+0xf80116c8>
   118b0:	0005883a 	mov	r2,zero
   118b4:	003fdc06 	br	11828 <__alt_mem_Onchip_SRAM+0xf8011828>
   118b8:	0005883a 	mov	r2,zero
   118bc:	003ff706 	br	1189c <__alt_mem_Onchip_SRAM+0xf801189c>

000118c0 <__fixdfsi>:
   118c0:	280cd53a 	srli	r6,r5,20
   118c4:	00c00434 	movhi	r3,16
   118c8:	18ffffc4 	addi	r3,r3,-1
   118cc:	3181ffcc 	andi	r6,r6,2047
   118d0:	01c0ff84 	movi	r7,1022
   118d4:	28c6703a 	and	r3,r5,r3
   118d8:	280ad7fa 	srli	r5,r5,31
   118dc:	3980120e 	bge	r7,r6,11928 <__fixdfsi+0x68>
   118e0:	00810744 	movi	r2,1053
   118e4:	11800c16 	blt	r2,r6,11918 <__fixdfsi+0x58>
   118e8:	00810cc4 	movi	r2,1075
   118ec:	1185c83a 	sub	r2,r2,r6
   118f0:	01c007c4 	movi	r7,31
   118f4:	18c00434 	orhi	r3,r3,16
   118f8:	38800d16 	blt	r7,r2,11930 <__fixdfsi+0x70>
   118fc:	31befb44 	addi	r6,r6,-1043
   11900:	2084d83a 	srl	r2,r4,r2
   11904:	1986983a 	sll	r3,r3,r6
   11908:	1884b03a 	or	r2,r3,r2
   1190c:	28000726 	beq	r5,zero,1192c <__fixdfsi+0x6c>
   11910:	0085c83a 	sub	r2,zero,r2
   11914:	f800283a 	ret
   11918:	00a00034 	movhi	r2,32768
   1191c:	10bfffc4 	addi	r2,r2,-1
   11920:	2885883a 	add	r2,r5,r2
   11924:	f800283a 	ret
   11928:	0005883a 	mov	r2,zero
   1192c:	f800283a 	ret
   11930:	008104c4 	movi	r2,1043
   11934:	1185c83a 	sub	r2,r2,r6
   11938:	1884d83a 	srl	r2,r3,r2
   1193c:	003ff306 	br	1190c <__alt_mem_Onchip_SRAM+0xf801190c>

00011940 <__floatsidf>:
   11940:	defffd04 	addi	sp,sp,-12
   11944:	dfc00215 	stw	ra,8(sp)
   11948:	dc400115 	stw	r17,4(sp)
   1194c:	dc000015 	stw	r16,0(sp)
   11950:	20002b26 	beq	r4,zero,11a00 <__floatsidf+0xc0>
   11954:	2023883a 	mov	r17,r4
   11958:	2020d7fa 	srli	r16,r4,31
   1195c:	20002d16 	blt	r4,zero,11a14 <__floatsidf+0xd4>
   11960:	8809883a 	mov	r4,r17
   11964:	00010b40 	call	10b4 <__clzsi2>
   11968:	01410784 	movi	r5,1054
   1196c:	288bc83a 	sub	r5,r5,r2
   11970:	01010cc4 	movi	r4,1075
   11974:	2149c83a 	sub	r4,r4,r5
   11978:	00c007c4 	movi	r3,31
   1197c:	1900160e 	bge	r3,r4,119d8 <__floatsidf+0x98>
   11980:	00c104c4 	movi	r3,1043
   11984:	1947c83a 	sub	r3,r3,r5
   11988:	88c6983a 	sll	r3,r17,r3
   1198c:	00800434 	movhi	r2,16
   11990:	10bfffc4 	addi	r2,r2,-1
   11994:	1886703a 	and	r3,r3,r2
   11998:	2941ffcc 	andi	r5,r5,2047
   1199c:	800d883a 	mov	r6,r16
   119a0:	0005883a 	mov	r2,zero
   119a4:	280a953a 	slli	r5,r5,20
   119a8:	31803fcc 	andi	r6,r6,255
   119ac:	01000434 	movhi	r4,16
   119b0:	300c97fa 	slli	r6,r6,31
   119b4:	213fffc4 	addi	r4,r4,-1
   119b8:	1906703a 	and	r3,r3,r4
   119bc:	1946b03a 	or	r3,r3,r5
   119c0:	1986b03a 	or	r3,r3,r6
   119c4:	dfc00217 	ldw	ra,8(sp)
   119c8:	dc400117 	ldw	r17,4(sp)
   119cc:	dc000017 	ldw	r16,0(sp)
   119d0:	dec00304 	addi	sp,sp,12
   119d4:	f800283a 	ret
   119d8:	00c002c4 	movi	r3,11
   119dc:	1887c83a 	sub	r3,r3,r2
   119e0:	88c6d83a 	srl	r3,r17,r3
   119e4:	8904983a 	sll	r2,r17,r4
   119e8:	01000434 	movhi	r4,16
   119ec:	213fffc4 	addi	r4,r4,-1
   119f0:	2941ffcc 	andi	r5,r5,2047
   119f4:	1906703a 	and	r3,r3,r4
   119f8:	800d883a 	mov	r6,r16
   119fc:	003fe906 	br	119a4 <__alt_mem_Onchip_SRAM+0xf80119a4>
   11a00:	000d883a 	mov	r6,zero
   11a04:	000b883a 	mov	r5,zero
   11a08:	0007883a 	mov	r3,zero
   11a0c:	0005883a 	mov	r2,zero
   11a10:	003fe406 	br	119a4 <__alt_mem_Onchip_SRAM+0xf80119a4>
   11a14:	0123c83a 	sub	r17,zero,r4
   11a18:	003fd106 	br	11960 <__alt_mem_Onchip_SRAM+0xf8011960>

00011a1c <__floatunsidf>:
   11a1c:	defffe04 	addi	sp,sp,-8
   11a20:	dc000015 	stw	r16,0(sp)
   11a24:	dfc00115 	stw	ra,4(sp)
   11a28:	2021883a 	mov	r16,r4
   11a2c:	20002226 	beq	r4,zero,11ab8 <__floatunsidf+0x9c>
   11a30:	00010b40 	call	10b4 <__clzsi2>
   11a34:	01010784 	movi	r4,1054
   11a38:	2089c83a 	sub	r4,r4,r2
   11a3c:	01810cc4 	movi	r6,1075
   11a40:	310dc83a 	sub	r6,r6,r4
   11a44:	00c007c4 	movi	r3,31
   11a48:	1980120e 	bge	r3,r6,11a94 <__floatunsidf+0x78>
   11a4c:	00c104c4 	movi	r3,1043
   11a50:	1907c83a 	sub	r3,r3,r4
   11a54:	80ca983a 	sll	r5,r16,r3
   11a58:	00800434 	movhi	r2,16
   11a5c:	10bfffc4 	addi	r2,r2,-1
   11a60:	2101ffcc 	andi	r4,r4,2047
   11a64:	0021883a 	mov	r16,zero
   11a68:	288a703a 	and	r5,r5,r2
   11a6c:	2008953a 	slli	r4,r4,20
   11a70:	00c00434 	movhi	r3,16
   11a74:	18ffffc4 	addi	r3,r3,-1
   11a78:	28c6703a 	and	r3,r5,r3
   11a7c:	8005883a 	mov	r2,r16
   11a80:	1906b03a 	or	r3,r3,r4
   11a84:	dfc00117 	ldw	ra,4(sp)
   11a88:	dc000017 	ldw	r16,0(sp)
   11a8c:	dec00204 	addi	sp,sp,8
   11a90:	f800283a 	ret
   11a94:	00c002c4 	movi	r3,11
   11a98:	188bc83a 	sub	r5,r3,r2
   11a9c:	814ad83a 	srl	r5,r16,r5
   11aa0:	00c00434 	movhi	r3,16
   11aa4:	18ffffc4 	addi	r3,r3,-1
   11aa8:	81a0983a 	sll	r16,r16,r6
   11aac:	2101ffcc 	andi	r4,r4,2047
   11ab0:	28ca703a 	and	r5,r5,r3
   11ab4:	003fed06 	br	11a6c <__alt_mem_Onchip_SRAM+0xf8011a6c>
   11ab8:	0009883a 	mov	r4,zero
   11abc:	000b883a 	mov	r5,zero
   11ac0:	003fea06 	br	11a6c <__alt_mem_Onchip_SRAM+0xf8011a6c>

00011ac4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   11ac4:	defffe04 	addi	sp,sp,-8
   11ac8:	dfc00115 	stw	ra,4(sp)
   11acc:	df000015 	stw	fp,0(sp)
   11ad0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   11ad4:	d0a01617 	ldw	r2,-32680(gp)
   11ad8:	10000326 	beq	r2,zero,11ae8 <alt_get_errno+0x24>
   11adc:	d0a01617 	ldw	r2,-32680(gp)
   11ae0:	103ee83a 	callr	r2
   11ae4:	00000106 	br	11aec <alt_get_errno+0x28>
   11ae8:	d0a71104 	addi	r2,gp,-25532
}
   11aec:	e037883a 	mov	sp,fp
   11af0:	dfc00117 	ldw	ra,4(sp)
   11af4:	df000017 	ldw	fp,0(sp)
   11af8:	dec00204 	addi	sp,sp,8
   11afc:	f800283a 	ret

00011b00 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   11b00:	defffb04 	addi	sp,sp,-20
   11b04:	dfc00415 	stw	ra,16(sp)
   11b08:	df000315 	stw	fp,12(sp)
   11b0c:	df000304 	addi	fp,sp,12
   11b10:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   11b14:	e0bfff17 	ldw	r2,-4(fp)
   11b18:	10000816 	blt	r2,zero,11b3c <close+0x3c>
   11b1c:	01400304 	movi	r5,12
   11b20:	e13fff17 	ldw	r4,-4(fp)
   11b24:	0000ef80 	call	ef8 <__mulsi3>
   11b28:	1007883a 	mov	r3,r2
   11b2c:	00800074 	movhi	r2,1
   11b30:	109d9d04 	addi	r2,r2,30324
   11b34:	1885883a 	add	r2,r3,r2
   11b38:	00000106 	br	11b40 <close+0x40>
   11b3c:	0005883a 	mov	r2,zero
   11b40:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
   11b44:	e0bffd17 	ldw	r2,-12(fp)
   11b48:	10001926 	beq	r2,zero,11bb0 <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   11b4c:	e0bffd17 	ldw	r2,-12(fp)
   11b50:	10800017 	ldw	r2,0(r2)
   11b54:	10800417 	ldw	r2,16(r2)
   11b58:	10000626 	beq	r2,zero,11b74 <close+0x74>
   11b5c:	e0bffd17 	ldw	r2,-12(fp)
   11b60:	10800017 	ldw	r2,0(r2)
   11b64:	10800417 	ldw	r2,16(r2)
   11b68:	e13ffd17 	ldw	r4,-12(fp)
   11b6c:	103ee83a 	callr	r2
   11b70:	00000106 	br	11b78 <close+0x78>
   11b74:	0005883a 	mov	r2,zero
   11b78:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   11b7c:	e13fff17 	ldw	r4,-4(fp)
   11b80:	00123dc0 	call	123dc <alt_release_fd>
    if (rval < 0)
   11b84:	e0bffe17 	ldw	r2,-8(fp)
   11b88:	1000070e 	bge	r2,zero,11ba8 <close+0xa8>
    {
      ALT_ERRNO = -rval;
   11b8c:	0011ac40 	call	11ac4 <alt_get_errno>
   11b90:	1007883a 	mov	r3,r2
   11b94:	e0bffe17 	ldw	r2,-8(fp)
   11b98:	0085c83a 	sub	r2,zero,r2
   11b9c:	18800015 	stw	r2,0(r3)
      return -1;
   11ba0:	00bfffc4 	movi	r2,-1
   11ba4:	00000706 	br	11bc4 <close+0xc4>
    }
    return 0;
   11ba8:	0005883a 	mov	r2,zero
   11bac:	00000506 	br	11bc4 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   11bb0:	0011ac40 	call	11ac4 <alt_get_errno>
   11bb4:	1007883a 	mov	r3,r2
   11bb8:	00801444 	movi	r2,81
   11bbc:	18800015 	stw	r2,0(r3)
    return -1;
   11bc0:	00bfffc4 	movi	r2,-1
  }
}
   11bc4:	e037883a 	mov	sp,fp
   11bc8:	dfc00117 	ldw	ra,4(sp)
   11bcc:	df000017 	ldw	fp,0(sp)
   11bd0:	dec00204 	addi	sp,sp,8
   11bd4:	f800283a 	ret

00011bd8 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   11bd8:	defffc04 	addi	sp,sp,-16
   11bdc:	df000315 	stw	fp,12(sp)
   11be0:	df000304 	addi	fp,sp,12
   11be4:	e13ffd15 	stw	r4,-12(fp)
   11be8:	e17ffe15 	stw	r5,-8(fp)
   11bec:	e1bfff15 	stw	r6,-4(fp)
  return len;
   11bf0:	e0bfff17 	ldw	r2,-4(fp)
}
   11bf4:	e037883a 	mov	sp,fp
   11bf8:	df000017 	ldw	fp,0(sp)
   11bfc:	dec00104 	addi	sp,sp,4
   11c00:	f800283a 	ret

00011c04 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   11c04:	defffe04 	addi	sp,sp,-8
   11c08:	dfc00115 	stw	ra,4(sp)
   11c0c:	df000015 	stw	fp,0(sp)
   11c10:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   11c14:	d0a01617 	ldw	r2,-32680(gp)
   11c18:	10000326 	beq	r2,zero,11c28 <alt_get_errno+0x24>
   11c1c:	d0a01617 	ldw	r2,-32680(gp)
   11c20:	103ee83a 	callr	r2
   11c24:	00000106 	br	11c2c <alt_get_errno+0x28>
   11c28:	d0a71104 	addi	r2,gp,-25532
}
   11c2c:	e037883a 	mov	sp,fp
   11c30:	dfc00117 	ldw	ra,4(sp)
   11c34:	df000017 	ldw	fp,0(sp)
   11c38:	dec00204 	addi	sp,sp,8
   11c3c:	f800283a 	ret

00011c40 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   11c40:	defffb04 	addi	sp,sp,-20
   11c44:	dfc00415 	stw	ra,16(sp)
   11c48:	df000315 	stw	fp,12(sp)
   11c4c:	df000304 	addi	fp,sp,12
   11c50:	e13ffe15 	stw	r4,-8(fp)
   11c54:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   11c58:	e0bffe17 	ldw	r2,-8(fp)
   11c5c:	10000816 	blt	r2,zero,11c80 <fstat+0x40>
   11c60:	01400304 	movi	r5,12
   11c64:	e13ffe17 	ldw	r4,-8(fp)
   11c68:	0000ef80 	call	ef8 <__mulsi3>
   11c6c:	1007883a 	mov	r3,r2
   11c70:	00800074 	movhi	r2,1
   11c74:	109d9d04 	addi	r2,r2,30324
   11c78:	1885883a 	add	r2,r3,r2
   11c7c:	00000106 	br	11c84 <fstat+0x44>
   11c80:	0005883a 	mov	r2,zero
   11c84:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
   11c88:	e0bffd17 	ldw	r2,-12(fp)
   11c8c:	10001026 	beq	r2,zero,11cd0 <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   11c90:	e0bffd17 	ldw	r2,-12(fp)
   11c94:	10800017 	ldw	r2,0(r2)
   11c98:	10800817 	ldw	r2,32(r2)
   11c9c:	10000726 	beq	r2,zero,11cbc <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
   11ca0:	e0bffd17 	ldw	r2,-12(fp)
   11ca4:	10800017 	ldw	r2,0(r2)
   11ca8:	10800817 	ldw	r2,32(r2)
   11cac:	e17fff17 	ldw	r5,-4(fp)
   11cb0:	e13ffd17 	ldw	r4,-12(fp)
   11cb4:	103ee83a 	callr	r2
   11cb8:	00000a06 	br	11ce4 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   11cbc:	e0bfff17 	ldw	r2,-4(fp)
   11cc0:	00c80004 	movi	r3,8192
   11cc4:	10c00115 	stw	r3,4(r2)
      return 0;
   11cc8:	0005883a 	mov	r2,zero
   11ccc:	00000506 	br	11ce4 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   11cd0:	0011c040 	call	11c04 <alt_get_errno>
   11cd4:	1007883a 	mov	r3,r2
   11cd8:	00801444 	movi	r2,81
   11cdc:	18800015 	stw	r2,0(r3)
    return -1;
   11ce0:	00bfffc4 	movi	r2,-1
  }
}
   11ce4:	e037883a 	mov	sp,fp
   11ce8:	dfc00117 	ldw	ra,4(sp)
   11cec:	df000017 	ldw	fp,0(sp)
   11cf0:	dec00204 	addi	sp,sp,8
   11cf4:	f800283a 	ret

00011cf8 <gettimeofday>:
   11cf8:	defff404 	addi	sp,sp,-48
   11cfc:	dfc00b15 	stw	ra,44(sp)
   11d00:	df000a15 	stw	fp,40(sp)
   11d04:	dd000915 	stw	r20,36(sp)
   11d08:	dcc00815 	stw	r19,32(sp)
   11d0c:	dc800715 	stw	r18,28(sp)
   11d10:	dc400615 	stw	r17,24(sp)
   11d14:	dc000515 	stw	r16,20(sp)
   11d18:	df000a04 	addi	fp,sp,40
   11d1c:	e13ff915 	stw	r4,-28(fp)
   11d20:	e17ffa15 	stw	r5,-24(fp)
   11d24:	e0bffa17 	ldw	r2,-24(fp)
   11d28:	e0bff615 	stw	r2,-40(fp)
   11d2c:	d0a72017 	ldw	r2,-25472(gp)
   11d30:	e0bff715 	stw	r2,-36(fp)
   11d34:	d0a71f17 	ldw	r2,-25476(gp)
   11d38:	e0bff815 	stw	r2,-32(fp)
   11d3c:	e0bff817 	ldw	r2,-32(fp)
   11d40:	10005f26 	beq	r2,zero,11ec0 <gettimeofday+0x1c8>
   11d44:	d0a71a17 	ldw	r2,-25496(gp)
   11d48:	1029883a 	mov	r20,r2
   11d4c:	e17ff817 	ldw	r5,-32(fp)
   11d50:	e13ff717 	ldw	r4,-36(fp)
   11d54:	0000e3c0 	call	e3c <__udivsi3>
   11d58:	a085883a 	add	r2,r20,r2
   11d5c:	1007883a 	mov	r3,r2
   11d60:	e0bff917 	ldw	r2,-28(fp)
   11d64:	10c00015 	stw	r3,0(r2)
   11d68:	d0a71b17 	ldw	r2,-25492(gp)
   11d6c:	1029883a 	mov	r20,r2
   11d70:	e0bff717 	ldw	r2,-36(fp)
   11d74:	1021883a 	mov	r16,r2
   11d78:	0023883a 	mov	r17,zero
   11d7c:	e17ff817 	ldw	r5,-32(fp)
   11d80:	010003f4 	movhi	r4,15
   11d84:	21109004 	addi	r4,r4,16960
   11d88:	0000e3c0 	call	e3c <__udivsi3>
   11d8c:	1025883a 	mov	r18,r2
   11d90:	0027883a 	mov	r19,zero
   11d94:	900d883a 	mov	r6,r18
   11d98:	980f883a 	mov	r7,r19
   11d9c:	8009883a 	mov	r4,r16
   11da0:	880b883a 	mov	r5,r17
   11da4:	000e5b80 	call	e5b8 <__muldi3>
   11da8:	1009883a 	mov	r4,r2
   11dac:	180b883a 	mov	r5,r3
   11db0:	2005883a 	mov	r2,r4
   11db4:	2807883a 	mov	r3,r5
   11db8:	018003f4 	movhi	r6,15
   11dbc:	31909004 	addi	r6,r6,16960
   11dc0:	000f883a 	mov	r7,zero
   11dc4:	1009883a 	mov	r4,r2
   11dc8:	180b883a 	mov	r5,r3
   11dcc:	000ecc00 	call	ecc0 <__umoddi3>
   11dd0:	1009883a 	mov	r4,r2
   11dd4:	180b883a 	mov	r5,r3
   11dd8:	2005883a 	mov	r2,r4
   11ddc:	2807883a 	mov	r3,r5
   11de0:	a085883a 	add	r2,r20,r2
   11de4:	1007883a 	mov	r3,r2
   11de8:	e0bff917 	ldw	r2,-28(fp)
   11dec:	10c00115 	stw	r3,4(r2)
   11df0:	00001406 	br	11e44 <gettimeofday+0x14c>
   11df4:	e0bff917 	ldw	r2,-28(fp)
   11df8:	10800017 	ldw	r2,0(r2)
   11dfc:	00800516 	blt	zero,r2,11e14 <gettimeofday+0x11c>
   11e00:	e0bff917 	ldw	r2,-28(fp)
   11e04:	10000015 	stw	zero,0(r2)
   11e08:	e0bff917 	ldw	r2,-28(fp)
   11e0c:	10000115 	stw	zero,4(r2)
   11e10:	00000f06 	br	11e50 <gettimeofday+0x158>
   11e14:	e0bff917 	ldw	r2,-28(fp)
   11e18:	10800017 	ldw	r2,0(r2)
   11e1c:	10ffffc4 	addi	r3,r2,-1
   11e20:	e0bff917 	ldw	r2,-28(fp)
   11e24:	10c00015 	stw	r3,0(r2)
   11e28:	e0bff917 	ldw	r2,-28(fp)
   11e2c:	10c00117 	ldw	r3,4(r2)
   11e30:	008003f4 	movhi	r2,15
   11e34:	10909004 	addi	r2,r2,16960
   11e38:	1887883a 	add	r3,r3,r2
   11e3c:	e0bff917 	ldw	r2,-28(fp)
   11e40:	10c00115 	stw	r3,4(r2)
   11e44:	e0bff917 	ldw	r2,-28(fp)
   11e48:	10800117 	ldw	r2,4(r2)
   11e4c:	103fe916 	blt	r2,zero,11df4 <__alt_mem_Onchip_SRAM+0xf8011df4>
   11e50:	00000c06 	br	11e84 <gettimeofday+0x18c>
   11e54:	e0bff917 	ldw	r2,-28(fp)
   11e58:	10800017 	ldw	r2,0(r2)
   11e5c:	10c00044 	addi	r3,r2,1
   11e60:	e0bff917 	ldw	r2,-28(fp)
   11e64:	10c00015 	stw	r3,0(r2)
   11e68:	e0bff917 	ldw	r2,-28(fp)
   11e6c:	10c00117 	ldw	r3,4(r2)
   11e70:	00bffc74 	movhi	r2,65521
   11e74:	10af7004 	addi	r2,r2,-16960
   11e78:	1887883a 	add	r3,r3,r2
   11e7c:	e0bff917 	ldw	r2,-28(fp)
   11e80:	10c00115 	stw	r3,4(r2)
   11e84:	e0bff917 	ldw	r2,-28(fp)
   11e88:	10c00117 	ldw	r3,4(r2)
   11e8c:	008003f4 	movhi	r2,15
   11e90:	10908fc4 	addi	r2,r2,16959
   11e94:	10ffef16 	blt	r2,r3,11e54 <__alt_mem_Onchip_SRAM+0xf8011e54>
   11e98:	e0bff617 	ldw	r2,-40(fp)
   11e9c:	10000626 	beq	r2,zero,11eb8 <gettimeofday+0x1c0>
   11ea0:	d0e71817 	ldw	r3,-25504(gp)
   11ea4:	e0bff617 	ldw	r2,-40(fp)
   11ea8:	10c00015 	stw	r3,0(r2)
   11eac:	d0e71917 	ldw	r3,-25500(gp)
   11eb0:	e0bff617 	ldw	r2,-40(fp)
   11eb4:	10c00115 	stw	r3,4(r2)
   11eb8:	0005883a 	mov	r2,zero
   11ebc:	00000106 	br	11ec4 <gettimeofday+0x1cc>
   11ec0:	00bfde84 	movi	r2,-134
   11ec4:	e6fffb04 	addi	sp,fp,-20
   11ec8:	dfc00617 	ldw	ra,24(sp)
   11ecc:	df000517 	ldw	fp,20(sp)
   11ed0:	dd000417 	ldw	r20,16(sp)
   11ed4:	dcc00317 	ldw	r19,12(sp)
   11ed8:	dc800217 	ldw	r18,8(sp)
   11edc:	dc400117 	ldw	r17,4(sp)
   11ee0:	dc000017 	ldw	r16,0(sp)
   11ee4:	dec00704 	addi	sp,sp,28
   11ee8:	f800283a 	ret

00011eec <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   11eec:	defffe04 	addi	sp,sp,-8
   11ef0:	dfc00115 	stw	ra,4(sp)
   11ef4:	df000015 	stw	fp,0(sp)
   11ef8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   11efc:	d0a01617 	ldw	r2,-32680(gp)
   11f00:	10000326 	beq	r2,zero,11f10 <alt_get_errno+0x24>
   11f04:	d0a01617 	ldw	r2,-32680(gp)
   11f08:	103ee83a 	callr	r2
   11f0c:	00000106 	br	11f14 <alt_get_errno+0x28>
   11f10:	d0a71104 	addi	r2,gp,-25532
}
   11f14:	e037883a 	mov	sp,fp
   11f18:	dfc00117 	ldw	ra,4(sp)
   11f1c:	df000017 	ldw	fp,0(sp)
   11f20:	dec00204 	addi	sp,sp,8
   11f24:	f800283a 	ret

00011f28 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   11f28:	deffed04 	addi	sp,sp,-76
   11f2c:	dfc01215 	stw	ra,72(sp)
   11f30:	df001115 	stw	fp,68(sp)
   11f34:	df001104 	addi	fp,sp,68
   11f38:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   11f3c:	e0bfff17 	ldw	r2,-4(fp)
   11f40:	10000816 	blt	r2,zero,11f64 <isatty+0x3c>
   11f44:	01400304 	movi	r5,12
   11f48:	e13fff17 	ldw	r4,-4(fp)
   11f4c:	0000ef80 	call	ef8 <__mulsi3>
   11f50:	1007883a 	mov	r3,r2
   11f54:	00800074 	movhi	r2,1
   11f58:	109d9d04 	addi	r2,r2,30324
   11f5c:	1885883a 	add	r2,r3,r2
   11f60:	00000106 	br	11f68 <isatty+0x40>
   11f64:	0005883a 	mov	r2,zero
   11f68:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
   11f6c:	e0bfef17 	ldw	r2,-68(fp)
   11f70:	10000e26 	beq	r2,zero,11fac <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   11f74:	e0bfef17 	ldw	r2,-68(fp)
   11f78:	10800017 	ldw	r2,0(r2)
   11f7c:	10800817 	ldw	r2,32(r2)
   11f80:	1000021e 	bne	r2,zero,11f8c <isatty+0x64>
    {
      return 1;
   11f84:	00800044 	movi	r2,1
   11f88:	00000d06 	br	11fc0 <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   11f8c:	e0bff004 	addi	r2,fp,-64
   11f90:	100b883a 	mov	r5,r2
   11f94:	e13fff17 	ldw	r4,-4(fp)
   11f98:	0011c400 	call	11c40 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   11f9c:	e0bff117 	ldw	r2,-60(fp)
   11fa0:	10880020 	cmpeqi	r2,r2,8192
   11fa4:	10803fcc 	andi	r2,r2,255
   11fa8:	00000506 	br	11fc0 <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   11fac:	0011eec0 	call	11eec <alt_get_errno>
   11fb0:	1007883a 	mov	r3,r2
   11fb4:	00801444 	movi	r2,81
   11fb8:	18800015 	stw	r2,0(r3)
    return 0;
   11fbc:	0005883a 	mov	r2,zero
  }
}
   11fc0:	e037883a 	mov	sp,fp
   11fc4:	dfc00117 	ldw	ra,4(sp)
   11fc8:	df000017 	ldw	fp,0(sp)
   11fcc:	dec00204 	addi	sp,sp,8
   11fd0:	f800283a 	ret

00011fd4 <alt_load_section>:
   11fd4:	defffc04 	addi	sp,sp,-16
   11fd8:	df000315 	stw	fp,12(sp)
   11fdc:	df000304 	addi	fp,sp,12
   11fe0:	e13ffd15 	stw	r4,-12(fp)
   11fe4:	e17ffe15 	stw	r5,-8(fp)
   11fe8:	e1bfff15 	stw	r6,-4(fp)
   11fec:	e0fffe17 	ldw	r3,-8(fp)
   11ff0:	e0bffd17 	ldw	r2,-12(fp)
   11ff4:	18800c26 	beq	r3,r2,12028 <alt_load_section+0x54>
   11ff8:	00000806 	br	1201c <alt_load_section+0x48>
   11ffc:	e0bffe17 	ldw	r2,-8(fp)
   12000:	10c00104 	addi	r3,r2,4
   12004:	e0fffe15 	stw	r3,-8(fp)
   12008:	e0fffd17 	ldw	r3,-12(fp)
   1200c:	19000104 	addi	r4,r3,4
   12010:	e13ffd15 	stw	r4,-12(fp)
   12014:	18c00017 	ldw	r3,0(r3)
   12018:	10c00015 	stw	r3,0(r2)
   1201c:	e0fffe17 	ldw	r3,-8(fp)
   12020:	e0bfff17 	ldw	r2,-4(fp)
   12024:	18bff51e 	bne	r3,r2,11ffc <__alt_mem_Onchip_SRAM+0xf8011ffc>
   12028:	0001883a 	nop
   1202c:	e037883a 	mov	sp,fp
   12030:	df000017 	ldw	fp,0(sp)
   12034:	dec00104 	addi	sp,sp,4
   12038:	f800283a 	ret

0001203c <alt_load>:
   1203c:	defffe04 	addi	sp,sp,-8
   12040:	dfc00115 	stw	ra,4(sp)
   12044:	df000015 	stw	fp,0(sp)
   12048:	d839883a 	mov	fp,sp
   1204c:	018000b4 	movhi	r6,2
   12050:	31a25c04 	addi	r6,r6,-30352
   12054:	01400074 	movhi	r5,1
   12058:	295b6a04 	addi	r5,r5,28072
   1205c:	010000b4 	movhi	r4,2
   12060:	21225c04 	addi	r4,r4,-30352
   12064:	0011fd40 	call	11fd4 <alt_load_section>
   12068:	01800034 	movhi	r6,0
   1206c:	31808c04 	addi	r6,r6,560
   12070:	01400034 	movhi	r5,0
   12074:	29400804 	addi	r5,r5,32
   12078:	01000034 	movhi	r4,0
   1207c:	21000804 	addi	r4,r4,32
   12080:	0011fd40 	call	11fd4 <alt_load_section>
   12084:	01800074 	movhi	r6,1
   12088:	319b6a04 	addi	r6,r6,28072
   1208c:	01400074 	movhi	r5,1
   12090:	295a7304 	addi	r5,r5,27084
   12094:	01000074 	movhi	r4,1
   12098:	211a7304 	addi	r4,r4,27084
   1209c:	0011fd40 	call	11fd4 <alt_load_section>
   120a0:	00158500 	call	15850 <alt_dcache_flush_all>
   120a4:	0015aa00 	call	15aa0 <alt_icache_flush_all>
   120a8:	0001883a 	nop
   120ac:	e037883a 	mov	sp,fp
   120b0:	dfc00117 	ldw	ra,4(sp)
   120b4:	df000017 	ldw	fp,0(sp)
   120b8:	dec00204 	addi	sp,sp,8
   120bc:	f800283a 	ret

000120c0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   120c0:	defffe04 	addi	sp,sp,-8
   120c4:	dfc00115 	stw	ra,4(sp)
   120c8:	df000015 	stw	fp,0(sp)
   120cc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   120d0:	d0a01617 	ldw	r2,-32680(gp)
   120d4:	10000326 	beq	r2,zero,120e4 <alt_get_errno+0x24>
   120d8:	d0a01617 	ldw	r2,-32680(gp)
   120dc:	103ee83a 	callr	r2
   120e0:	00000106 	br	120e8 <alt_get_errno+0x28>
   120e4:	d0a71104 	addi	r2,gp,-25532
}
   120e8:	e037883a 	mov	sp,fp
   120ec:	dfc00117 	ldw	ra,4(sp)
   120f0:	df000017 	ldw	fp,0(sp)
   120f4:	dec00204 	addi	sp,sp,8
   120f8:	f800283a 	ret

000120fc <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   120fc:	defff904 	addi	sp,sp,-28
   12100:	dfc00615 	stw	ra,24(sp)
   12104:	df000515 	stw	fp,20(sp)
   12108:	df000504 	addi	fp,sp,20
   1210c:	e13ffd15 	stw	r4,-12(fp)
   12110:	e17ffe15 	stw	r5,-8(fp)
   12114:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   12118:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   1211c:	e0bffd17 	ldw	r2,-12(fp)
   12120:	10000816 	blt	r2,zero,12144 <lseek+0x48>
   12124:	01400304 	movi	r5,12
   12128:	e13ffd17 	ldw	r4,-12(fp)
   1212c:	0000ef80 	call	ef8 <__mulsi3>
   12130:	1007883a 	mov	r3,r2
   12134:	00800074 	movhi	r2,1
   12138:	109d9d04 	addi	r2,r2,30324
   1213c:	1885883a 	add	r2,r3,r2
   12140:	00000106 	br	12148 <lseek+0x4c>
   12144:	0005883a 	mov	r2,zero
   12148:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
   1214c:	e0bffc17 	ldw	r2,-16(fp)
   12150:	10001026 	beq	r2,zero,12194 <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   12154:	e0bffc17 	ldw	r2,-16(fp)
   12158:	10800017 	ldw	r2,0(r2)
   1215c:	10800717 	ldw	r2,28(r2)
   12160:	10000926 	beq	r2,zero,12188 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   12164:	e0bffc17 	ldw	r2,-16(fp)
   12168:	10800017 	ldw	r2,0(r2)
   1216c:	10800717 	ldw	r2,28(r2)
   12170:	e1bfff17 	ldw	r6,-4(fp)
   12174:	e17ffe17 	ldw	r5,-8(fp)
   12178:	e13ffc17 	ldw	r4,-16(fp)
   1217c:	103ee83a 	callr	r2
   12180:	e0bffb15 	stw	r2,-20(fp)
   12184:	00000506 	br	1219c <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   12188:	00bfde84 	movi	r2,-134
   1218c:	e0bffb15 	stw	r2,-20(fp)
   12190:	00000206 	br	1219c <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
   12194:	00bfebc4 	movi	r2,-81
   12198:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
   1219c:	e0bffb17 	ldw	r2,-20(fp)
   121a0:	1000070e 	bge	r2,zero,121c0 <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
   121a4:	00120c00 	call	120c0 <alt_get_errno>
   121a8:	1007883a 	mov	r3,r2
   121ac:	e0bffb17 	ldw	r2,-20(fp)
   121b0:	0085c83a 	sub	r2,zero,r2
   121b4:	18800015 	stw	r2,0(r3)
    rc = -1;
   121b8:	00bfffc4 	movi	r2,-1
   121bc:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
   121c0:	e0bffb17 	ldw	r2,-20(fp)
}
   121c4:	e037883a 	mov	sp,fp
   121c8:	dfc00117 	ldw	ra,4(sp)
   121cc:	df000017 	ldw	fp,0(sp)
   121d0:	dec00204 	addi	sp,sp,8
   121d4:	f800283a 	ret

000121d8 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   121d8:	defffd04 	addi	sp,sp,-12
   121dc:	dfc00215 	stw	ra,8(sp)
   121e0:	df000115 	stw	fp,4(sp)
   121e4:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   121e8:	0009883a 	mov	r4,zero
   121ec:	00128240 	call	12824 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   121f0:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   121f4:	001285c0 	call	1285c <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   121f8:	01800074 	movhi	r6,1
   121fc:	319b4804 	addi	r6,r6,27936
   12200:	01400074 	movhi	r5,1
   12204:	295b4804 	addi	r5,r5,27936
   12208:	01000074 	movhi	r4,1
   1220c:	211b4804 	addi	r4,r4,27936
   12210:	0015e440 	call	15e44 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   12214:	00159500 	call	15950 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   12218:	01000074 	movhi	r4,1
   1221c:	21166c04 	addi	r4,r4,22960
   12220:	00166380 	call	16638 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   12224:	d0a71c17 	ldw	r2,-25488(gp)
   12228:	d0e71d17 	ldw	r3,-25484(gp)
   1222c:	d1271e17 	ldw	r4,-25480(gp)
   12230:	200d883a 	mov	r6,r4
   12234:	180b883a 	mov	r5,r3
   12238:	1009883a 	mov	r4,r2
   1223c:	0000c500 	call	c50 <main>
   12240:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   12244:	01000044 	movi	r4,1
   12248:	0011b000 	call	11b00 <close>
  exit (result);
   1224c:	e13fff17 	ldw	r4,-4(fp)
   12250:	001664c0 	call	1664c <exit>

00012254 <__malloc_lock>:
   12254:	defffe04 	addi	sp,sp,-8
   12258:	df000115 	stw	fp,4(sp)
   1225c:	df000104 	addi	fp,sp,4
   12260:	e13fff15 	stw	r4,-4(fp)
   12264:	0001883a 	nop
   12268:	e037883a 	mov	sp,fp
   1226c:	df000017 	ldw	fp,0(sp)
   12270:	dec00104 	addi	sp,sp,4
   12274:	f800283a 	ret

00012278 <__malloc_unlock>:
   12278:	defffe04 	addi	sp,sp,-8
   1227c:	df000115 	stw	fp,4(sp)
   12280:	df000104 	addi	fp,sp,4
   12284:	e13fff15 	stw	r4,-4(fp)
   12288:	0001883a 	nop
   1228c:	e037883a 	mov	sp,fp
   12290:	df000017 	ldw	fp,0(sp)
   12294:	dec00104 	addi	sp,sp,4
   12298:	f800283a 	ret

0001229c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   1229c:	defffe04 	addi	sp,sp,-8
   122a0:	dfc00115 	stw	ra,4(sp)
   122a4:	df000015 	stw	fp,0(sp)
   122a8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   122ac:	d0a01617 	ldw	r2,-32680(gp)
   122b0:	10000326 	beq	r2,zero,122c0 <alt_get_errno+0x24>
   122b4:	d0a01617 	ldw	r2,-32680(gp)
   122b8:	103ee83a 	callr	r2
   122bc:	00000106 	br	122c4 <alt_get_errno+0x28>
   122c0:	d0a71104 	addi	r2,gp,-25532
}
   122c4:	e037883a 	mov	sp,fp
   122c8:	dfc00117 	ldw	ra,4(sp)
   122cc:	df000017 	ldw	fp,0(sp)
   122d0:	dec00204 	addi	sp,sp,8
   122d4:	f800283a 	ret

000122d8 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   122d8:	defff904 	addi	sp,sp,-28
   122dc:	dfc00615 	stw	ra,24(sp)
   122e0:	df000515 	stw	fp,20(sp)
   122e4:	df000504 	addi	fp,sp,20
   122e8:	e13ffd15 	stw	r4,-12(fp)
   122ec:	e17ffe15 	stw	r5,-8(fp)
   122f0:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   122f4:	e0bffd17 	ldw	r2,-12(fp)
   122f8:	10000816 	blt	r2,zero,1231c <read+0x44>
   122fc:	01400304 	movi	r5,12
   12300:	e13ffd17 	ldw	r4,-12(fp)
   12304:	0000ef80 	call	ef8 <__mulsi3>
   12308:	1007883a 	mov	r3,r2
   1230c:	00800074 	movhi	r2,1
   12310:	109d9d04 	addi	r2,r2,30324
   12314:	1885883a 	add	r2,r3,r2
   12318:	00000106 	br	12320 <read+0x48>
   1231c:	0005883a 	mov	r2,zero
   12320:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   12324:	e0bffb17 	ldw	r2,-20(fp)
   12328:	10002226 	beq	r2,zero,123b4 <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   1232c:	e0bffb17 	ldw	r2,-20(fp)
   12330:	10800217 	ldw	r2,8(r2)
   12334:	108000cc 	andi	r2,r2,3
   12338:	10800060 	cmpeqi	r2,r2,1
   1233c:	1000181e 	bne	r2,zero,123a0 <read+0xc8>
        (fd->dev->read))
   12340:	e0bffb17 	ldw	r2,-20(fp)
   12344:	10800017 	ldw	r2,0(r2)
   12348:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   1234c:	10001426 	beq	r2,zero,123a0 <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   12350:	e0bffb17 	ldw	r2,-20(fp)
   12354:	10800017 	ldw	r2,0(r2)
   12358:	10800517 	ldw	r2,20(r2)
   1235c:	e0ffff17 	ldw	r3,-4(fp)
   12360:	180d883a 	mov	r6,r3
   12364:	e17ffe17 	ldw	r5,-8(fp)
   12368:	e13ffb17 	ldw	r4,-20(fp)
   1236c:	103ee83a 	callr	r2
   12370:	e0bffc15 	stw	r2,-16(fp)
   12374:	e0bffc17 	ldw	r2,-16(fp)
   12378:	1000070e 	bge	r2,zero,12398 <read+0xc0>
        {
          ALT_ERRNO = -rval;
   1237c:	001229c0 	call	1229c <alt_get_errno>
   12380:	1007883a 	mov	r3,r2
   12384:	e0bffc17 	ldw	r2,-16(fp)
   12388:	0085c83a 	sub	r2,zero,r2
   1238c:	18800015 	stw	r2,0(r3)
          return -1;
   12390:	00bfffc4 	movi	r2,-1
   12394:	00000c06 	br	123c8 <read+0xf0>
        }
        return rval;
   12398:	e0bffc17 	ldw	r2,-16(fp)
   1239c:	00000a06 	br	123c8 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
   123a0:	001229c0 	call	1229c <alt_get_errno>
   123a4:	1007883a 	mov	r3,r2
   123a8:	00800344 	movi	r2,13
   123ac:	18800015 	stw	r2,0(r3)
   123b0:	00000406 	br	123c4 <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   123b4:	001229c0 	call	1229c <alt_get_errno>
   123b8:	1007883a 	mov	r3,r2
   123bc:	00801444 	movi	r2,81
   123c0:	18800015 	stw	r2,0(r3)
  }
  return -1;
   123c4:	00bfffc4 	movi	r2,-1
}
   123c8:	e037883a 	mov	sp,fp
   123cc:	dfc00117 	ldw	ra,4(sp)
   123d0:	df000017 	ldw	fp,0(sp)
   123d4:	dec00204 	addi	sp,sp,8
   123d8:	f800283a 	ret

000123dc <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   123dc:	defffc04 	addi	sp,sp,-16
   123e0:	dfc00315 	stw	ra,12(sp)
   123e4:	df000215 	stw	fp,8(sp)
   123e8:	dc000115 	stw	r16,4(sp)
   123ec:	df000204 	addi	fp,sp,8
   123f0:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
   123f4:	e0bffe17 	ldw	r2,-8(fp)
   123f8:	108000d0 	cmplti	r2,r2,3
   123fc:	1000111e 	bne	r2,zero,12444 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
   12400:	04000074 	movhi	r16,1
   12404:	841d9d04 	addi	r16,r16,30324
   12408:	e0bffe17 	ldw	r2,-8(fp)
   1240c:	01400304 	movi	r5,12
   12410:	1009883a 	mov	r4,r2
   12414:	0000ef80 	call	ef8 <__mulsi3>
   12418:	8085883a 	add	r2,r16,r2
   1241c:	10800204 	addi	r2,r2,8
   12420:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   12424:	04000074 	movhi	r16,1
   12428:	841d9d04 	addi	r16,r16,30324
   1242c:	e0bffe17 	ldw	r2,-8(fp)
   12430:	01400304 	movi	r5,12
   12434:	1009883a 	mov	r4,r2
   12438:	0000ef80 	call	ef8 <__mulsi3>
   1243c:	8085883a 	add	r2,r16,r2
   12440:	10000015 	stw	zero,0(r2)
  }
}
   12444:	0001883a 	nop
   12448:	e6ffff04 	addi	sp,fp,-4
   1244c:	dfc00217 	ldw	ra,8(sp)
   12450:	df000117 	ldw	fp,4(sp)
   12454:	dc000017 	ldw	r16,0(sp)
   12458:	dec00304 	addi	sp,sp,12
   1245c:	f800283a 	ret

00012460 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   12460:	defff904 	addi	sp,sp,-28
   12464:	df000615 	stw	fp,24(sp)
   12468:	df000604 	addi	fp,sp,24
   1246c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   12470:	0005303a 	rdctl	r2,status
   12474:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   12478:	e0fffe17 	ldw	r3,-8(fp)
   1247c:	00bfff84 	movi	r2,-2
   12480:	1884703a 	and	r2,r3,r2
   12484:	1001703a 	wrctl	status,r2
  
  return context;
   12488:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   1248c:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   12490:	d0a01717 	ldw	r2,-32676(gp)
   12494:	10c000c4 	addi	r3,r2,3
   12498:	00bfff04 	movi	r2,-4
   1249c:	1884703a 	and	r2,r3,r2
   124a0:	d0a01715 	stw	r2,-32676(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   124a4:	d0e01717 	ldw	r3,-32676(gp)
   124a8:	e0bfff17 	ldw	r2,-4(fp)
   124ac:	1887883a 	add	r3,r3,r2
   124b0:	00810034 	movhi	r2,1024
   124b4:	10800004 	addi	r2,r2,0
   124b8:	10c0062e 	bgeu	r2,r3,124d4 <sbrk+0x74>
   124bc:	e0bffb17 	ldw	r2,-20(fp)
   124c0:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   124c4:	e0bffa17 	ldw	r2,-24(fp)
   124c8:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   124cc:	00bfffc4 	movi	r2,-1
   124d0:	00000b06 	br	12500 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
   124d4:	d0a01717 	ldw	r2,-32676(gp)
   124d8:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
   124dc:	d0e01717 	ldw	r3,-32676(gp)
   124e0:	e0bfff17 	ldw	r2,-4(fp)
   124e4:	1885883a 	add	r2,r3,r2
   124e8:	d0a01715 	stw	r2,-32676(gp)
   124ec:	e0bffb17 	ldw	r2,-20(fp)
   124f0:	e0bffc15 	stw	r2,-16(fp)
   124f4:	e0bffc17 	ldw	r2,-16(fp)
   124f8:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   124fc:	e0bffd17 	ldw	r2,-12(fp)
} 
   12500:	e037883a 	mov	sp,fp
   12504:	df000017 	ldw	fp,0(sp)
   12508:	dec00104 	addi	sp,sp,4
   1250c:	f800283a 	ret

00012510 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   12510:	defffa04 	addi	sp,sp,-24
   12514:	df000515 	stw	fp,20(sp)
   12518:	df000504 	addi	fp,sp,20
   1251c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   12520:	0005303a 	rdctl	r2,status
   12524:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   12528:	e0fffc17 	ldw	r3,-16(fp)
   1252c:	00bfff84 	movi	r2,-2
   12530:	1884703a 	and	r2,r3,r2
   12534:	1001703a 	wrctl	status,r2
  
  return context;
   12538:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   1253c:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   12540:	e0bfff17 	ldw	r2,-4(fp)
   12544:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   12548:	e0bffd17 	ldw	r2,-12(fp)
   1254c:	10800017 	ldw	r2,0(r2)
   12550:	e0fffd17 	ldw	r3,-12(fp)
   12554:	18c00117 	ldw	r3,4(r3)
   12558:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   1255c:	e0bffd17 	ldw	r2,-12(fp)
   12560:	10800117 	ldw	r2,4(r2)
   12564:	e0fffd17 	ldw	r3,-12(fp)
   12568:	18c00017 	ldw	r3,0(r3)
   1256c:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   12570:	e0bffd17 	ldw	r2,-12(fp)
   12574:	e0fffd17 	ldw	r3,-12(fp)
   12578:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   1257c:	e0bffd17 	ldw	r2,-12(fp)
   12580:	e0fffd17 	ldw	r3,-12(fp)
   12584:	10c00015 	stw	r3,0(r2)
   12588:	e0bffb17 	ldw	r2,-20(fp)
   1258c:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   12590:	e0bffe17 	ldw	r2,-8(fp)
   12594:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   12598:	0001883a 	nop
   1259c:	e037883a 	mov	sp,fp
   125a0:	df000017 	ldw	fp,0(sp)
   125a4:	dec00104 	addi	sp,sp,4
   125a8:	f800283a 	ret

000125ac <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   125ac:	defffb04 	addi	sp,sp,-20
   125b0:	dfc00415 	stw	ra,16(sp)
   125b4:	df000315 	stw	fp,12(sp)
   125b8:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   125bc:	d0a01817 	ldw	r2,-32672(gp)
   125c0:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   125c4:	d0a72017 	ldw	r2,-25472(gp)
   125c8:	10800044 	addi	r2,r2,1
   125cc:	d0a72015 	stw	r2,-25472(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   125d0:	00002e06 	br	1268c <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   125d4:	e0bffd17 	ldw	r2,-12(fp)
   125d8:	10800017 	ldw	r2,0(r2)
   125dc:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   125e0:	e0bffd17 	ldw	r2,-12(fp)
   125e4:	10800403 	ldbu	r2,16(r2)
   125e8:	10803fcc 	andi	r2,r2,255
   125ec:	10000426 	beq	r2,zero,12600 <alt_tick+0x54>
   125f0:	d0a72017 	ldw	r2,-25472(gp)
   125f4:	1000021e 	bne	r2,zero,12600 <alt_tick+0x54>
    {
      alarm->rollover = 0;
   125f8:	e0bffd17 	ldw	r2,-12(fp)
   125fc:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   12600:	e0bffd17 	ldw	r2,-12(fp)
   12604:	10800217 	ldw	r2,8(r2)
   12608:	d0e72017 	ldw	r3,-25472(gp)
   1260c:	18801d36 	bltu	r3,r2,12684 <alt_tick+0xd8>
   12610:	e0bffd17 	ldw	r2,-12(fp)
   12614:	10800403 	ldbu	r2,16(r2)
   12618:	10803fcc 	andi	r2,r2,255
   1261c:	1000191e 	bne	r2,zero,12684 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   12620:	e0bffd17 	ldw	r2,-12(fp)
   12624:	10800317 	ldw	r2,12(r2)
   12628:	e0fffd17 	ldw	r3,-12(fp)
   1262c:	18c00517 	ldw	r3,20(r3)
   12630:	1809883a 	mov	r4,r3
   12634:	103ee83a 	callr	r2
   12638:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   1263c:	e0bfff17 	ldw	r2,-4(fp)
   12640:	1000031e 	bne	r2,zero,12650 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   12644:	e13ffd17 	ldw	r4,-12(fp)
   12648:	00125100 	call	12510 <alt_alarm_stop>
   1264c:	00000d06 	br	12684 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   12650:	e0bffd17 	ldw	r2,-12(fp)
   12654:	10c00217 	ldw	r3,8(r2)
   12658:	e0bfff17 	ldw	r2,-4(fp)
   1265c:	1887883a 	add	r3,r3,r2
   12660:	e0bffd17 	ldw	r2,-12(fp)
   12664:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   12668:	e0bffd17 	ldw	r2,-12(fp)
   1266c:	10c00217 	ldw	r3,8(r2)
   12670:	d0a72017 	ldw	r2,-25472(gp)
   12674:	1880032e 	bgeu	r3,r2,12684 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   12678:	e0bffd17 	ldw	r2,-12(fp)
   1267c:	00c00044 	movi	r3,1
   12680:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   12684:	e0bffe17 	ldw	r2,-8(fp)
   12688:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   1268c:	e0fffd17 	ldw	r3,-12(fp)
   12690:	d0a01804 	addi	r2,gp,-32672
   12694:	18bfcf1e 	bne	r3,r2,125d4 <__alt_mem_Onchip_SRAM+0xf80125d4>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   12698:	0001883a 	nop
}
   1269c:	0001883a 	nop
   126a0:	e037883a 	mov	sp,fp
   126a4:	dfc00117 	ldw	ra,4(sp)
   126a8:	df000017 	ldw	fp,0(sp)
   126ac:	dec00204 	addi	sp,sp,8
   126b0:	f800283a 	ret

000126b4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   126b4:	defffe04 	addi	sp,sp,-8
   126b8:	dfc00115 	stw	ra,4(sp)
   126bc:	df000015 	stw	fp,0(sp)
   126c0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   126c4:	d0a01617 	ldw	r2,-32680(gp)
   126c8:	10000326 	beq	r2,zero,126d8 <alt_get_errno+0x24>
   126cc:	d0a01617 	ldw	r2,-32680(gp)
   126d0:	103ee83a 	callr	r2
   126d4:	00000106 	br	126dc <alt_get_errno+0x28>
   126d8:	d0a71104 	addi	r2,gp,-25532
}
   126dc:	e037883a 	mov	sp,fp
   126e0:	dfc00117 	ldw	ra,4(sp)
   126e4:	df000017 	ldw	fp,0(sp)
   126e8:	dec00204 	addi	sp,sp,8
   126ec:	f800283a 	ret

000126f0 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   126f0:	defff904 	addi	sp,sp,-28
   126f4:	dfc00615 	stw	ra,24(sp)
   126f8:	df000515 	stw	fp,20(sp)
   126fc:	df000504 	addi	fp,sp,20
   12700:	e13ffd15 	stw	r4,-12(fp)
   12704:	e17ffe15 	stw	r5,-8(fp)
   12708:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   1270c:	e0bffd17 	ldw	r2,-12(fp)
   12710:	10000816 	blt	r2,zero,12734 <write+0x44>
   12714:	01400304 	movi	r5,12
   12718:	e13ffd17 	ldw	r4,-12(fp)
   1271c:	0000ef80 	call	ef8 <__mulsi3>
   12720:	1007883a 	mov	r3,r2
   12724:	00800074 	movhi	r2,1
   12728:	109d9d04 	addi	r2,r2,30324
   1272c:	1885883a 	add	r2,r3,r2
   12730:	00000106 	br	12738 <write+0x48>
   12734:	0005883a 	mov	r2,zero
   12738:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   1273c:	e0bffb17 	ldw	r2,-20(fp)
   12740:	10002126 	beq	r2,zero,127c8 <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   12744:	e0bffb17 	ldw	r2,-20(fp)
   12748:	10800217 	ldw	r2,8(r2)
   1274c:	108000cc 	andi	r2,r2,3
   12750:	10001826 	beq	r2,zero,127b4 <write+0xc4>
   12754:	e0bffb17 	ldw	r2,-20(fp)
   12758:	10800017 	ldw	r2,0(r2)
   1275c:	10800617 	ldw	r2,24(r2)
   12760:	10001426 	beq	r2,zero,127b4 <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   12764:	e0bffb17 	ldw	r2,-20(fp)
   12768:	10800017 	ldw	r2,0(r2)
   1276c:	10800617 	ldw	r2,24(r2)
   12770:	e0ffff17 	ldw	r3,-4(fp)
   12774:	180d883a 	mov	r6,r3
   12778:	e17ffe17 	ldw	r5,-8(fp)
   1277c:	e13ffb17 	ldw	r4,-20(fp)
   12780:	103ee83a 	callr	r2
   12784:	e0bffc15 	stw	r2,-16(fp)
   12788:	e0bffc17 	ldw	r2,-16(fp)
   1278c:	1000070e 	bge	r2,zero,127ac <write+0xbc>
      {
        ALT_ERRNO = -rval;
   12790:	00126b40 	call	126b4 <alt_get_errno>
   12794:	1007883a 	mov	r3,r2
   12798:	e0bffc17 	ldw	r2,-16(fp)
   1279c:	0085c83a 	sub	r2,zero,r2
   127a0:	18800015 	stw	r2,0(r3)
        return -1;
   127a4:	00bfffc4 	movi	r2,-1
   127a8:	00000c06 	br	127dc <write+0xec>
      }
      return rval;
   127ac:	e0bffc17 	ldw	r2,-16(fp)
   127b0:	00000a06 	br	127dc <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
   127b4:	00126b40 	call	126b4 <alt_get_errno>
   127b8:	1007883a 	mov	r3,r2
   127bc:	00800344 	movi	r2,13
   127c0:	18800015 	stw	r2,0(r3)
   127c4:	00000406 	br	127d8 <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   127c8:	00126b40 	call	126b4 <alt_get_errno>
   127cc:	1007883a 	mov	r3,r2
   127d0:	00801444 	movi	r2,81
   127d4:	18800015 	stw	r2,0(r3)
  }
  return -1;
   127d8:	00bfffc4 	movi	r2,-1
}
   127dc:	e037883a 	mov	sp,fp
   127e0:	dfc00117 	ldw	ra,4(sp)
   127e4:	df000017 	ldw	fp,0(sp)
   127e8:	dec00204 	addi	sp,sp,8
   127ec:	f800283a 	ret

000127f0 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   127f0:	defffd04 	addi	sp,sp,-12
   127f4:	dfc00215 	stw	ra,8(sp)
   127f8:	df000115 	stw	fp,4(sp)
   127fc:	df000104 	addi	fp,sp,4
   12800:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   12804:	d1601304 	addi	r5,gp,-32692
   12808:	e13fff17 	ldw	r4,-4(fp)
   1280c:	00158ac0 	call	158ac <alt_dev_llist_insert>
}
   12810:	e037883a 	mov	sp,fp
   12814:	dfc00117 	ldw	ra,4(sp)
   12818:	df000017 	ldw	fp,0(sp)
   1281c:	dec00204 	addi	sp,sp,8
   12820:	f800283a 	ret

00012824 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   12824:	defffd04 	addi	sp,sp,-12
   12828:	dfc00215 	stw	ra,8(sp)
   1282c:	df000115 	stw	fp,4(sp)
   12830:	df000104 	addi	fp,sp,4
   12834:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2, Nios2);
   12838:	00163ac0 	call	163ac <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   1283c:	00800044 	movi	r2,1
   12840:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   12844:	0001883a 	nop
   12848:	e037883a 	mov	sp,fp
   1284c:	dfc00117 	ldw	ra,4(sp)
   12850:	df000017 	ldw	fp,0(sp)
   12854:	dec00204 	addi	sp,sp,8
   12858:	f800283a 	ret

0001285c <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   1285c:	defffe04 	addi	sp,sp,-8
   12860:	dfc00115 	stw	ra,4(sp)
   12864:	df000015 	stw	fp,0(sp)
   12868:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( INTERVAL_TIMER, Interval_Timer);
   1286c:	01c00204 	movi	r7,8
   12870:	000d883a 	mov	r6,zero
   12874:	000b883a 	mov	r5,zero
   12878:	013fc834 	movhi	r4,65312
   1287c:	21080004 	addi	r4,r4,8192
   12880:	0014fe40 	call	14fe4 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_TIMER_INIT ( INTERVAL_TIMER_2, Interval_Timer_2);
    ALTERA_AVALON_I2C_INIT ( CAMERA_I2C, camera_i2c);
   12884:	01000074 	movhi	r4,1
   12888:	211dfd04 	addi	r4,r4,30708
   1288c:	0012b3c0 	call	12b3c <alt_avalon_i2c_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, JTAG_UART);
   12890:	01800204 	movi	r6,8
   12894:	000b883a 	mov	r5,zero
   12898:	01000074 	movhi	r4,1
   1289c:	211e1504 	addi	r4,r4,30804
   128a0:	00146680 	call	14668 <altera_avalon_jtag_uart_init>
   128a4:	01000074 	movhi	r4,1
   128a8:	211e0b04 	addi	r4,r4,30764
   128ac:	00127f00 	call	127f0 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, SysID);
   128b0:	0001883a 	nop
    ALTERA_MODULAR_ADC_INIT ( JOYSTICK_ADC, JoyStick_ADC);
   128b4:	01bfffc4 	movi	r6,-1
   128b8:	017fffc4 	movi	r5,-1
   128bc:	010000b4 	movhi	r4,2
   128c0:	21222304 	addi	r4,r4,-30580
   128c4:	00151b40 	call	151b4 <altera_modular_adc_init>
    ALTERA_UP_AVALON_ACCELEROMETER_SPI_INIT ( ACCELEROMETER_SPI, Accelerometer_SPI);
   128c8:	010000b4 	movhi	r4,2
   128cc:	21223204 	addi	r4,r4,-30520
   128d0:	00127f00 	call	127f0 <alt_dev_reg>
}
   128d4:	0001883a 	nop
   128d8:	e037883a 	mov	sp,fp
   128dc:	dfc00117 	ldw	ra,4(sp)
   128e0:	df000017 	ldw	fp,0(sp)
   128e4:	dec00204 	addi	sp,sp,8
   128e8:	f800283a 	ret

000128ec <optional_irq_callback>:

/* for all functions in this file, see the altera_avalon_i2c.h file for more complete function descriptions. */

/* optional irq callback */
static void optional_irq_callback(void * context)
{
   128ec:	defff904 	addi	sp,sp,-28
   128f0:	dfc00615 	stw	ra,24(sp)
   128f4:	df000515 	stw	fp,20(sp)
   128f8:	df000504 	addi	fp,sp,20
   128fc:	e13fff15 	stw	r4,-4(fp)
   int timeout=100000;
   12900:	008000b4 	movhi	r2,2
   12904:	10a1a804 	addi	r2,r2,-31072
   12908:	e0bffb15 	stw	r2,-20(fp)
   alt_u32 bytes_read;

   ALT_AVALON_I2C_DEV_t *i2c_dev = context;
   1290c:	e0bfff17 	ldw	r2,-4(fp)
   12910:	e0bffc15 	stw	r2,-16(fp)
   IRQ_DATA_t *irq = i2c_dev->callback_context;
   12914:	e0bffc17 	ldw	r2,-16(fp)
   12918:	10800717 	ldw	r2,28(r2)
   1291c:	e0bffd15 	stw	r2,-12(fp)

   if (irq->irq_busy==2)  /*receive request*/
   12920:	e0bffd17 	ldw	r2,-12(fp)
   12924:	10800217 	ldw	r2,8(r2)
   12928:	10800098 	cmpnei	r2,r2,2
   1292c:	1000251e 	bne	r2,zero,129c4 <optional_irq_callback+0xd8>
   {
       alt_avalon_i2c_rx_read_available(i2c_dev, irq->buffer, irq->size, &bytes_read);
   12930:	e0bffd17 	ldw	r2,-12(fp)
   12934:	10c00017 	ldw	r3,0(r2)
   12938:	e0bffd17 	ldw	r2,-12(fp)
   1293c:	10800117 	ldw	r2,4(r2)
   12940:	e13ffe04 	addi	r4,fp,-8
   12944:	200f883a 	mov	r7,r4
   12948:	100d883a 	mov	r6,r2
   1294c:	180b883a 	mov	r5,r3
   12950:	e13ffc17 	ldw	r4,-16(fp)
   12954:	001309c0 	call	1309c <alt_avalon_i2c_rx_read_available>
       irq->size-=bytes_read;
   12958:	e0bffd17 	ldw	r2,-12(fp)
   1295c:	10c00117 	ldw	r3,4(r2)
   12960:	e0bffe17 	ldw	r2,-8(fp)
   12964:	1887c83a 	sub	r3,r3,r2
   12968:	e0bffd17 	ldw	r2,-12(fp)
   1296c:	10c00115 	stw	r3,4(r2)
       irq->buffer+=bytes_read;
   12970:	e0bffd17 	ldw	r2,-12(fp)
   12974:	10c00017 	ldw	r3,0(r2)
   12978:	e0bffe17 	ldw	r2,-8(fp)
   1297c:	1887883a 	add	r3,r3,r2
   12980:	e0bffd17 	ldw	r2,-12(fp)
   12984:	10c00015 	stw	r3,0(r2)
       if (irq->size > 0)
   12988:	e0bffd17 	ldw	r2,-12(fp)
   1298c:	10800117 	ldw	r2,4(r2)
   12990:	10000c26 	beq	r2,zero,129c4 <optional_irq_callback+0xd8>
       {
         /* clear ISR register content */
         alt_avalon_i2c_int_clear(i2c_dev,ALT_AVALON_I2C_ISR_ALL_CLEARABLE_INTS_MSK);
   12994:	01400704 	movi	r5,28
   12998:	e13ffc17 	ldw	r4,-16(fp)
   1299c:	00142540 	call	14254 <alt_avalon_i2c_int_clear>
         /* re-enable the RX_READY interrupt */
         alt_avalon_i2c_int_enable(i2c_dev,ALT_AVALON_I2C_ISER_RX_READY_EN_MSK);
   129a0:	01400084 	movi	r5,2
   129a4:	e13ffc17 	ldw	r4,-16(fp)
   129a8:	00142f80 	call	142f8 <alt_avalon_i2c_int_enable>
   129ac:	00000e06 	br	129e8 <optional_irq_callback+0xfc>
    /*for a write, this code will only be reached after the cmd fifo is*/
    /*empty (sent).  For a read this code will only be reached after all*/
    /*bytes have been received.*/
    while (alt_avalon_i2c_is_busy(i2c_dev)) 
    { 
      if (--timeout == 0)
   129b0:	e0bffb17 	ldw	r2,-20(fp)
   129b4:	10bfffc4 	addi	r2,r2,-1
   129b8:	e0bffb15 	stw	r2,-20(fp)
   129bc:	e0bffb17 	ldw	r2,-20(fp)
   129c0:	10000426 	beq	r2,zero,129d4 <optional_irq_callback+0xe8>

    /*transaction should be done so no or minimal looping should occur*/
    /*for a write, this code will only be reached after the cmd fifo is*/
    /*empty (sent).  For a read this code will only be reached after all*/
    /*bytes have been received.*/
    while (alt_avalon_i2c_is_busy(i2c_dev)) 
   129c4:	e13ffc17 	ldw	r4,-16(fp)
   129c8:	00130580 	call	13058 <alt_avalon_i2c_is_busy>
   129cc:	103ff81e 	bne	r2,zero,129b0 <__alt_mem_Onchip_SRAM+0xf80129b0>
   129d0:	00000106 	br	129d8 <optional_irq_callback+0xec>
    { 
      if (--timeout == 0)
      {
         break;
   129d4:	0001883a 	nop
      }
    }

    /*disable the ip.  The ip is disabled and enabled for each transaction.*/
    alt_avalon_i2c_disable(i2c_dev);
   129d8:	e13ffc17 	ldw	r4,-16(fp)
   129dc:	0012d000 	call	12d00 <alt_avalon_i2c_disable>

    irq->irq_busy=0;
   129e0:	e0bffd17 	ldw	r2,-12(fp)
   129e4:	10000215 	stw	zero,8(r2)
}
   129e8:	e037883a 	mov	sp,fp
   129ec:	dfc00117 	ldw	ra,4(sp)
   129f0:	df000017 	ldw	fp,0(sp)
   129f4:	dec00204 	addi	sp,sp,8
   129f8:	f800283a 	ret

000129fc <alt_avalon_i2c_register_optional_irq_handler>:

void alt_avalon_i2c_register_optional_irq_handler(ALT_AVALON_I2C_DEV_t *i2c_dev,IRQ_DATA_t * irq_data)
{
   129fc:	defffc04 	addi	sp,sp,-16
   12a00:	dfc00315 	stw	ra,12(sp)
   12a04:	df000215 	stw	fp,8(sp)
   12a08:	df000204 	addi	fp,sp,8
   12a0c:	e13ffe15 	stw	r4,-8(fp)
   12a10:	e17fff15 	stw	r5,-4(fp)
   irq_data->irq_busy=0;
   12a14:	e0bfff17 	ldw	r2,-4(fp)
   12a18:	10000215 	stw	zero,8(r2)
   alt_avalon_i2c_register_callback(i2c_dev,optional_irq_callback,0,irq_data);
   12a1c:	e1ffff17 	ldw	r7,-4(fp)
   12a20:	000d883a 	mov	r6,zero
   12a24:	01400074 	movhi	r5,1
   12a28:	294a3b04 	addi	r5,r5,10476
   12a2c:	e13ffe17 	ldw	r4,-8(fp)
   12a30:	0012ae80 	call	12ae8 <alt_avalon_i2c_register_callback>
}
   12a34:	0001883a 	nop
   12a38:	e037883a 	mov	sp,fp
   12a3c:	dfc00117 	ldw	ra,4(sp)
   12a40:	df000017 	ldw	fp,0(sp)
   12a44:	dec00204 	addi	sp,sp,8
   12a48:	f800283a 	ret

00012a4c <alt_avalon_i2c_irq>:
ALT_LLIST_HEAD(alt_avalon_i2c_list);

/* Interrupt handler for the AVALON_I2C module. */
/* Interrupts are not re-enabled in this handler */
static void alt_avalon_i2c_irq(void *context)
{
   12a4c:	defff904 	addi	sp,sp,-28
   12a50:	dfc00615 	stw	ra,24(sp)
   12a54:	df000515 	stw	fp,20(sp)
   12a58:	df000504 	addi	fp,sp,20
   12a5c:	e13fff15 	stw	r4,-4(fp)
    ALT_AVALON_I2C_DEV_t *dev = (ALT_AVALON_I2C_DEV_t *) context;
   12a60:	e0bfff17 	ldw	r2,-4(fp)
   12a64:	e0bffb15 	stw	r2,-20(fp)
    alt_irq_context cpu_sr;
     
    /*disable i2c interrupts*/
    alt_avalon_i2c_int_disable(dev,ALT_AVALON_I2C_ISR_ALLINTS_MSK);
   12a68:	014007c4 	movi	r5,31
   12a6c:	e13ffb17 	ldw	r4,-20(fp)
   12a70:	00142900 	call	14290 <alt_avalon_i2c_int_disable>
    
    /* clear irq status */
    alt_avalon_i2c_int_clear(dev,ALT_AVALON_I2C_ISR_ALL_CLEARABLE_INTS_MSK);
   12a74:	01400704 	movi	r5,28
   12a78:	e13ffb17 	ldw	r4,-20(fp)
   12a7c:	00142540 	call	14254 <alt_avalon_i2c_int_clear>
    * Other interrupts are explicitly disabled if callbacks
    * are registered because there is no guarantee that they are 
    * pre-emption-safe. This allows the driver to support 
    * interrupt pre-emption.
    */
    if(dev->callback) 
   12a80:	e0bffb17 	ldw	r2,-20(fp)
   12a84:	10800617 	ldw	r2,24(r2)
   12a88:	10001126 	beq	r2,zero,12ad0 <alt_avalon_i2c_irq+0x84>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   12a8c:	0005303a 	rdctl	r2,status
   12a90:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   12a94:	e0fffd17 	ldw	r3,-12(fp)
   12a98:	00bfff84 	movi	r2,-2
   12a9c:	1884703a 	and	r2,r3,r2
   12aa0:	1001703a 	wrctl	status,r2
  
  return context;
   12aa4:	e0bffd17 	ldw	r2,-12(fp)
    {
        cpu_sr = alt_irq_disable_all();
   12aa8:	e0bffc15 	stw	r2,-16(fp)
        dev->callback(dev);
   12aac:	e0bffb17 	ldw	r2,-20(fp)
   12ab0:	10800617 	ldw	r2,24(r2)
   12ab4:	e13ffb17 	ldw	r4,-20(fp)
   12ab8:	103ee83a 	callr	r2
   12abc:	e0bffc17 	ldw	r2,-16(fp)
   12ac0:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   12ac4:	e0bffe17 	ldw	r2,-8(fp)
   12ac8:	1001703a 	wrctl	status,r2
        alt_irq_enable_all(cpu_sr);
    }

    return;
   12acc:	0001883a 	nop
   12ad0:	0001883a 	nop
}
   12ad4:	e037883a 	mov	sp,fp
   12ad8:	dfc00117 	ldw	ra,4(sp)
   12adc:	df000017 	ldw	fp,0(sp)
   12ae0:	dec00204 	addi	sp,sp,8
   12ae4:	f800283a 	ret

00012ae8 <alt_avalon_i2c_register_callback>:
void alt_avalon_i2c_register_callback(
    ALT_AVALON_I2C_DEV_t *dev,
    alt_avalon_i2c_callback callback,
    alt_u32 control,
    void *context)
{
   12ae8:	defffb04 	addi	sp,sp,-20
   12aec:	df000415 	stw	fp,16(sp)
   12af0:	df000404 	addi	fp,sp,16
   12af4:	e13ffc15 	stw	r4,-16(fp)
   12af8:	e17ffd15 	stw	r5,-12(fp)
   12afc:	e1bffe15 	stw	r6,-8(fp)
   12b00:	e1ffff15 	stw	r7,-4(fp)
    dev->callback         = callback;
   12b04:	e0bffc17 	ldw	r2,-16(fp)
   12b08:	e0fffd17 	ldw	r3,-12(fp)
   12b0c:	10c00615 	stw	r3,24(r2)
    dev->callback_context = context;
   12b10:	e0bffc17 	ldw	r2,-16(fp)
   12b14:	e0ffff17 	ldw	r3,-4(fp)
   12b18:	10c00715 	stw	r3,28(r2)
    dev->control          = control;
   12b1c:	e0bffc17 	ldw	r2,-16(fp)
   12b20:	e0fffe17 	ldw	r3,-8(fp)
   12b24:	10c00815 	stw	r3,32(r2)

    return ;
   12b28:	0001883a 	nop
}
   12b2c:	e037883a 	mov	sp,fp
   12b30:	df000017 	ldw	fp,0(sp)
   12b34:	dec00104 	addi	sp,sp,4
   12b38:	f800283a 	ret

00012b3c <alt_avalon_i2c_init>:

 /* Initializes the I2C Module. This routine is called
 * from the ALT_AVALON_I2C_INIT macro and is called automatically
 * by alt_sys_init.c */
void alt_avalon_i2c_init (ALT_AVALON_I2C_DEV_t *dev)
{
   12b3c:	defff704 	addi	sp,sp,-36
   12b40:	dfc00815 	stw	ra,32(sp)
   12b44:	df000715 	stw	fp,28(sp)
   12b48:	df000704 	addi	fp,sp,28
   12b4c:	e13fff15 	stw	r4,-4(fp)
    extern alt_llist alt_avalon_i2c_list;
    ALT_AVALON_I2C_MASTER_CONFIG_t cfg;
    int error;

    /* disable ip */
    alt_avalon_i2c_disable(dev);
   12b50:	e13fff17 	ldw	r4,-4(fp)
   12b54:	0012d000 	call	12d00 <alt_avalon_i2c_disable>

    /* Disable interrupts */
    alt_avalon_i2c_int_disable(dev,ALT_AVALON_I2C_ISR_ALLINTS_MSK);
   12b58:	014007c4 	movi	r5,31
   12b5c:	e13fff17 	ldw	r4,-4(fp)
   12b60:	00142900 	call	14290 <alt_avalon_i2c_int_disable>

    /* clear ISR register content */
    alt_avalon_i2c_int_clear(dev,ALT_AVALON_I2C_ISR_ALL_CLEARABLE_INTS_MSK);
   12b64:	01400704 	movi	r5,28
   12b68:	e13fff17 	ldw	r4,-4(fp)
   12b6c:	00142540 	call	14254 <alt_avalon_i2c_int_clear>
    
    /* set the cmd fifo threshold */
    alt_avalon_i2c_tfr_cmd_fifo_threshold_set(dev,ALT_AVALON_I2C_TFR_CMD_FIFO_NOT_FULL);
   12b70:	014000c4 	movi	r5,3
   12b74:	e13fff17 	ldw	r4,-4(fp)
   12b78:	001449c0 	call	1449c <alt_avalon_i2c_tfr_cmd_fifo_threshold_set>
    
    /* set the tx fifo threshold */
    alt_avalon_i2c_rx_fifo_threshold_set(dev,ALT_AVALON_I2C_RX_DATA_FIFO_FULL);
   12b7c:	014000c4 	movi	r5,3
   12b80:	e13fff17 	ldw	r4,-4(fp)
   12b84:	00143ec0 	call	143ec <alt_avalon_i2c_rx_fifo_threshold_set>
    
    /* set the default bus speed */
    cfg.speed_mode = ALT_AVALON_I2C_SPEED_STANDARD;
   12b88:	e03ffc15 	stw	zero,-16(fp)
    
    /*set the address mode */
    cfg.addr_mode = ALT_AVALON_I2C_ADDR_MODE_7_BIT;
   12b8c:	e03ffb15 	stw	zero,-20(fp)
    
    /* set the bus speed */
    alt_avalon_i2c_master_config_speed_set(dev,&cfg,ALT_AVALON_I2C_SS_MAX_HZ);
   12b90:	e0bffb04 	addi	r2,fp,-20
   12b94:	018000b4 	movhi	r6,2
   12b98:	31a1a804 	addi	r6,r6,-31072
   12b9c:	100b883a 	mov	r5,r2
   12ba0:	e13fff17 	ldw	r4,-4(fp)
   12ba4:	0012f5c0 	call	12f5c <alt_avalon_i2c_master_config_speed_set>
    
    /* write the cfg information */
    alt_avalon_i2c_master_config_set(dev,&cfg);
   12ba8:	e0bffb04 	addi	r2,fp,-20
   12bac:	100b883a 	mov	r5,r2
   12bb0:	e13fff17 	ldw	r4,-4(fp)
   12bb4:	0012dfc0 	call	12dfc <alt_avalon_i2c_master_config_set>
    
    /* Register this instance of the i2c controller with HAL */
    alt_dev_llist_insert((alt_dev_llist*) dev, &alt_avalon_i2c_list);
   12bb8:	d1601a04 	addi	r5,gp,-32664
   12bbc:	e13fff17 	ldw	r4,-4(fp)
   12bc0:	00158ac0 	call	158ac <alt_dev_llist_insert>
 * HAL.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_no_error (void)
{
  return 0;
   12bc4:	0005883a 	mov	r2,zero

    /*
     * Creating semaphores used to protect access to the registers 
     * when running in a multi-threaded environment.
     */
    error = ALT_SEM_CREATE (&dev->regs_lock, 1);
   12bc8:	e0bffa15 	stw	r2,-24(fp)

    if (!error)
   12bcc:	e0bffa17 	ldw	r2,-24(fp)
   12bd0:	10000c1e 	bne	r2,zero,12c04 <alt_avalon_i2c_init+0xc8>
    {        
        /* Install IRQ handler */
        alt_ic_isr_register(dev->irq_controller_ID, dev->irq_ID, alt_avalon_i2c_irq, dev, 0x0);
   12bd4:	e0bfff17 	ldw	r2,-4(fp)
   12bd8:	10c00417 	ldw	r3,16(r2)
   12bdc:	e0bfff17 	ldw	r2,-4(fp)
   12be0:	10800517 	ldw	r2,20(r2)
   12be4:	d8000015 	stw	zero,0(sp)
   12be8:	e1ffff17 	ldw	r7,-4(fp)
   12bec:	01800074 	movhi	r6,1
   12bf0:	318a9304 	addi	r6,r6,10828
   12bf4:	100b883a 	mov	r5,r2
   12bf8:	1809883a 	mov	r4,r3
   12bfc:	0015ac00 	call	15ac0 <alt_ic_isr_register>
    else
    {
        alt_printf("failed to create semaphores\n");
    }

    return;
   12c00:	00000406 	br	12c14 <alt_avalon_i2c_init+0xd8>
        /* Install IRQ handler */
        alt_ic_isr_register(dev->irq_controller_ID, dev->irq_ID, alt_avalon_i2c_irq, dev, 0x0);
    }
    else
    {
        alt_printf("failed to create semaphores\n");
   12c04:	01000074 	movhi	r4,1
   12c08:	211b6204 	addi	r4,r4,28040
   12c0c:	00161440 	call	16144 <alt_printf>
    }

    return;
   12c10:	0001883a 	nop

}
   12c14:	e037883a 	mov	sp,fp
   12c18:	dfc00117 	ldw	ra,4(sp)
   12c1c:	df000017 	ldw	fp,0(sp)
   12c20:	dec00204 	addi	sp,sp,8
   12c24:	f800283a 	ret

00012c28 <alt_avalon_i2c_open>:

/*  Retrieve a pointer to the i2c instance */
ALT_AVALON_I2C_DEV_t* alt_avalon_i2c_open(const char* name)
{
   12c28:	defffc04 	addi	sp,sp,-16
   12c2c:	dfc00315 	stw	ra,12(sp)
   12c30:	df000215 	stw	fp,8(sp)
   12c34:	df000204 	addi	fp,sp,8
   12c38:	e13fff15 	stw	r4,-4(fp)
    ALT_AVALON_I2C_DEV_t* dev = NULL;
   12c3c:	e03ffe15 	stw	zero,-8(fp)

    dev = (ALT_AVALON_I2C_DEV_t*) alt_find_dev (name, &alt_avalon_i2c_list);
   12c40:	d1601a04 	addi	r5,gp,-32664
   12c44:	e13fff17 	ldw	r4,-4(fp)
   12c48:	0015a100 	call	15a10 <alt_find_dev>
   12c4c:	e0bffe15 	stw	r2,-8(fp)

    return dev;
   12c50:	e0bffe17 	ldw	r2,-8(fp)
}
   12c54:	e037883a 	mov	sp,fp
   12c58:	dfc00117 	ldw	ra,4(sp)
   12c5c:	df000017 	ldw	fp,0(sp)
   12c60:	dec00204 	addi	sp,sp,8
   12c64:	f800283a 	ret

00012c68 <alt_avalon_i2c_enable>:

/* enable the avalon i2c ip */
ALT_AVALON_I2C_STATUS_CODE alt_avalon_i2c_enable(ALT_AVALON_I2C_DEV_t *i2c_dev)
{
   12c68:	defffc04 	addi	sp,sp,-16
   12c6c:	df000315 	stw	fp,12(sp)
   12c70:	df000304 	addi	fp,sp,12
   12c74:	e13fff15 	stw	r4,-4(fp)
   IRQ_DATA_t *irq_data = i2c_dev->callback_context;
   12c78:	e0bfff17 	ldw	r2,-4(fp)
   12c7c:	10800717 	ldw	r2,28(r2)
   12c80:	e0bffd15 	stw	r2,-12(fp)
   alt_u32 enable_status;
       
   /*if the ip is already enabled, return a busy status*/
   enable_status = (IORD_ALT_AVALON_I2C_CTRL(i2c_dev->i2c_base) & ALT_AVALON_I2C_CTRL_EN_MSK) >> ALT_AVALON_I2C_CTRL_EN_OFST;
   12c84:	e0bfff17 	ldw	r2,-4(fp)
   12c88:	10800317 	ldw	r2,12(r2)
   12c8c:	10800204 	addi	r2,r2,8
   12c90:	10800037 	ldwio	r2,0(r2)
   12c94:	1080004c 	andi	r2,r2,1
   12c98:	e0bffe15 	stw	r2,-8(fp)
   if (enable_status)
   12c9c:	e0bffe17 	ldw	r2,-8(fp)
   12ca0:	10000226 	beq	r2,zero,12cac <alt_avalon_i2c_enable+0x44>
   {
     return ALT_AVALON_I2C_BUSY;
   12ca4:	00bffe44 	movi	r2,-7
   12ca8:	00001106 	br	12cf0 <alt_avalon_i2c_enable+0x88>
   }
   
   /*if the optional irq callback is registered ensure irq_busy is 0*/
   if (i2c_dev->callback == optional_irq_callback)
   12cac:	e0bfff17 	ldw	r2,-4(fp)
   12cb0:	10c00617 	ldw	r3,24(r2)
   12cb4:	00800074 	movhi	r2,1
   12cb8:	108a3b04 	addi	r2,r2,10476
   12cbc:	1880021e 	bne	r3,r2,12cc8 <alt_avalon_i2c_enable+0x60>
   {
     irq_data->irq_busy=0;
   12cc0:	e0bffd17 	ldw	r2,-12(fp)
   12cc4:	10000215 	stw	zero,8(r2)
   }
   
   /* enable ip */
   IORMW_ALT_AVALON_I2C_CTRL(i2c_dev->i2c_base,ALT_AVALON_I2C_CTRL_EN_MSK,ALT_AVALON_I2C_CTRL_EN_MSK);
   12cc8:	e0bfff17 	ldw	r2,-4(fp)
   12ccc:	10800317 	ldw	r2,12(r2)
   12cd0:	10800204 	addi	r2,r2,8
   12cd4:	e0ffff17 	ldw	r3,-4(fp)
   12cd8:	18c00317 	ldw	r3,12(r3)
   12cdc:	18c00204 	addi	r3,r3,8
   12ce0:	18c00037 	ldwio	r3,0(r3)
   12ce4:	18c00054 	ori	r3,r3,1
   12ce8:	10c00035 	stwio	r3,0(r2)

   return ALT_AVALON_I2C_SUCCESS;
   12cec:	0005883a 	mov	r2,zero
}
   12cf0:	e037883a 	mov	sp,fp
   12cf4:	df000017 	ldw	fp,0(sp)
   12cf8:	dec00104 	addi	sp,sp,4
   12cfc:	f800283a 	ret

00012d00 <alt_avalon_i2c_disable>:

/* disable the avalon i2c ip */
void alt_avalon_i2c_disable(ALT_AVALON_I2C_DEV_t *i2c_dev)
{
   12d00:	defffe04 	addi	sp,sp,-8
   12d04:	df000115 	stw	fp,4(sp)
   12d08:	df000104 	addi	fp,sp,4
   12d0c:	e13fff15 	stw	r4,-4(fp)
   /* disable ip */
   IORMW_ALT_AVALON_I2C_CTRL(i2c_dev->i2c_base,0,ALT_AVALON_I2C_CTRL_EN_MSK);
   12d10:	e0bfff17 	ldw	r2,-4(fp)
   12d14:	10800317 	ldw	r2,12(r2)
   12d18:	10800204 	addi	r2,r2,8
   12d1c:	e0ffff17 	ldw	r3,-4(fp)
   12d20:	18c00317 	ldw	r3,12(r3)
   12d24:	18c00204 	addi	r3,r3,8
   12d28:	19000037 	ldwio	r4,0(r3)
   12d2c:	00ffff84 	movi	r3,-2
   12d30:	20c6703a 	and	r3,r4,r3
   12d34:	10c00035 	stwio	r3,0(r2)

}
   12d38:	0001883a 	nop
   12d3c:	e037883a 	mov	sp,fp
   12d40:	df000017 	ldw	fp,0(sp)
   12d44:	dec00104 	addi	sp,sp,4
   12d48:	f800283a 	ret

00012d4c <alt_avalon_i2c_master_config_get>:

/* populate the the master config structure from the register values */
void alt_avalon_i2c_master_config_get(ALT_AVALON_I2C_DEV_t *i2c_dev,
                                          ALT_AVALON_I2C_MASTER_CONFIG_t* cfg)
{
   12d4c:	defffd04 	addi	sp,sp,-12
   12d50:	df000215 	stw	fp,8(sp)
   12d54:	df000204 	addi	fp,sp,8
   12d58:	e13ffe15 	stw	r4,-8(fp)
   12d5c:	e17fff15 	stw	r5,-4(fp)

    cfg->addr_mode = i2c_dev->address_mode;
   12d60:	e0bffe17 	ldw	r2,-8(fp)
   12d64:	10c00d17 	ldw	r3,52(r2)
   12d68:	e0bfff17 	ldw	r2,-4(fp)
   12d6c:	10c00015 	stw	r3,0(r2)
    cfg->speed_mode = (IORD_ALT_AVALON_I2C_CTRL(i2c_dev->i2c_base) & ALT_AVALON_I2C_CTRL_BUS_SPEED_MSK) >> ALT_AVALON_I2C_CTRL_BUS_SPEED_OFST;    
   12d70:	e0bffe17 	ldw	r2,-8(fp)
   12d74:	10800317 	ldw	r2,12(r2)
   12d78:	10800204 	addi	r2,r2,8
   12d7c:	10800037 	ldwio	r2,0(r2)
   12d80:	1080008c 	andi	r2,r2,2
   12d84:	1005d07a 	srai	r2,r2,1
   12d88:	1007883a 	mov	r3,r2
   12d8c:	e0bfff17 	ldw	r2,-4(fp)
   12d90:	10c00115 	stw	r3,4(r2)

    cfg->scl_hcnt = (IORD_ALT_AVALON_I2C_SCL_HIGH(i2c_dev->i2c_base) & ALT_AVALON_I2C_SCL_HIGH_COUNT_PERIOD_MSK) >> ALT_AVALON_I2C_SCL_HIGH_COUNT_PERIOD_OFST;    
   12d94:	e0bffe17 	ldw	r2,-8(fp)
   12d98:	10800317 	ldw	r2,12(r2)
   12d9c:	10800904 	addi	r2,r2,36
   12da0:	10800037 	ldwio	r2,0(r2)
   12da4:	1007883a 	mov	r3,r2
   12da8:	e0bfff17 	ldw	r2,-4(fp)
   12dac:	10c0020d 	sth	r3,8(r2)
    cfg->scl_lcnt = (IORD_ALT_AVALON_I2C_SCL_LOW(i2c_dev->i2c_base) & ALT_AVALON_I2C_SCL_LOW_COUNT_PERIOD_MSK) >> ALT_AVALON_I2C_SCL_LOW_COUNT_PERIOD_OFST;    
   12db0:	e0bffe17 	ldw	r2,-8(fp)
   12db4:	10800317 	ldw	r2,12(r2)
   12db8:	10800804 	addi	r2,r2,32
   12dbc:	10800037 	ldwio	r2,0(r2)
   12dc0:	1007883a 	mov	r3,r2
   12dc4:	e0bfff17 	ldw	r2,-4(fp)
   12dc8:	10c0028d 	sth	r3,10(r2)
    cfg->sda_cnt = (IORD_ALT_AVALON_I2C_SDA_HOLD(i2c_dev->i2c_base) & ALT_AVALON_I2C_SDA_HOLD_COUNT_PERIOD_MSK) >> ALT_AVALON_I2C_SDA_HOLD_COUNT_PERIOD_OFST;    
   12dcc:	e0bffe17 	ldw	r2,-8(fp)
   12dd0:	10800317 	ldw	r2,12(r2)
   12dd4:	10800a04 	addi	r2,r2,40
   12dd8:	10800037 	ldwio	r2,0(r2)
   12ddc:	1007883a 	mov	r3,r2
   12de0:	e0bfff17 	ldw	r2,-4(fp)
   12de4:	10c0030d 	sth	r3,12(r2)
}
   12de8:	0001883a 	nop
   12dec:	e037883a 	mov	sp,fp
   12df0:	df000017 	ldw	fp,0(sp)
   12df4:	dec00104 	addi	sp,sp,4
   12df8:	f800283a 	ret

00012dfc <alt_avalon_i2c_master_config_set>:

/* set the registers from the master config structure */
void alt_avalon_i2c_master_config_set(ALT_AVALON_I2C_DEV_t *i2c_dev,
                                          const ALT_AVALON_I2C_MASTER_CONFIG_t* cfg)
{
   12dfc:	defffd04 	addi	sp,sp,-12
   12e00:	df000215 	stw	fp,8(sp)
   12e04:	df000204 	addi	fp,sp,8
   12e08:	e13ffe15 	stw	r4,-8(fp)
   12e0c:	e17fff15 	stw	r5,-4(fp)
    i2c_dev->address_mode   =   cfg->addr_mode;
   12e10:	e0bfff17 	ldw	r2,-4(fp)
   12e14:	10c00017 	ldw	r3,0(r2)
   12e18:	e0bffe17 	ldw	r2,-8(fp)
   12e1c:	10c00d15 	stw	r3,52(r2)
    IORMW_ALT_AVALON_I2C_CTRL(i2c_dev->i2c_base,(cfg->speed_mode) << ALT_AVALON_I2C_CTRL_BUS_SPEED_OFST,ALT_AVALON_I2C_CTRL_BUS_SPEED_MSK);
   12e20:	e0bffe17 	ldw	r2,-8(fp)
   12e24:	10800317 	ldw	r2,12(r2)
   12e28:	10c00204 	addi	r3,r2,8
   12e2c:	e0bffe17 	ldw	r2,-8(fp)
   12e30:	10800317 	ldw	r2,12(r2)
   12e34:	10800204 	addi	r2,r2,8
   12e38:	10800037 	ldwio	r2,0(r2)
   12e3c:	1009883a 	mov	r4,r2
   12e40:	00bfff44 	movi	r2,-3
   12e44:	2088703a 	and	r4,r4,r2
   12e48:	e0bfff17 	ldw	r2,-4(fp)
   12e4c:	10800117 	ldw	r2,4(r2)
   12e50:	1085883a 	add	r2,r2,r2
   12e54:	1080008c 	andi	r2,r2,2
   12e58:	2084b03a 	or	r2,r4,r2
   12e5c:	18800035 	stwio	r2,0(r3)

    IOWR_ALT_AVALON_I2C_SCL_HIGH(i2c_dev->i2c_base,cfg->scl_hcnt);
   12e60:	e0bffe17 	ldw	r2,-8(fp)
   12e64:	10800317 	ldw	r2,12(r2)
   12e68:	10800904 	addi	r2,r2,36
   12e6c:	e0ffff17 	ldw	r3,-4(fp)
   12e70:	18c0020b 	ldhu	r3,8(r3)
   12e74:	18ffffcc 	andi	r3,r3,65535
   12e78:	10c00035 	stwio	r3,0(r2)
    IOWR_ALT_AVALON_I2C_SCL_LOW(i2c_dev->i2c_base,cfg->scl_lcnt);
   12e7c:	e0bffe17 	ldw	r2,-8(fp)
   12e80:	10800317 	ldw	r2,12(r2)
   12e84:	10800804 	addi	r2,r2,32
   12e88:	e0ffff17 	ldw	r3,-4(fp)
   12e8c:	18c0028b 	ldhu	r3,10(r3)
   12e90:	18ffffcc 	andi	r3,r3,65535
   12e94:	10c00035 	stwio	r3,0(r2)
    IOWR_ALT_AVALON_I2C_SDA_HOLD(i2c_dev->i2c_base,cfg->sda_cnt);
   12e98:	e0bffe17 	ldw	r2,-8(fp)
   12e9c:	10800317 	ldw	r2,12(r2)
   12ea0:	10800a04 	addi	r2,r2,40
   12ea4:	e0ffff17 	ldw	r3,-4(fp)
   12ea8:	18c0030b 	ldhu	r3,12(r3)
   12eac:	18ffffcc 	andi	r3,r3,65535
   12eb0:	10c00035 	stwio	r3,0(r2)
}
   12eb4:	0001883a 	nop
   12eb8:	e037883a 	mov	sp,fp
   12ebc:	df000017 	ldw	fp,0(sp)
   12ec0:	dec00104 	addi	sp,sp,4
   12ec4:	f800283a 	ret

00012ec8 <alt_avalon_i2c_master_config_speed_get>:
 * I2C master configuration.
*/
ALT_AVALON_I2C_STATUS_CODE alt_avalon_i2c_master_config_speed_get(ALT_AVALON_I2C_DEV_t *i2c_dev,
                                                const ALT_AVALON_I2C_MASTER_CONFIG_t* cfg,
                                                alt_u32 * speed_in_hz)
{
   12ec8:	defffb04 	addi	sp,sp,-20
   12ecc:	dfc00415 	stw	ra,16(sp)
   12ed0:	df000315 	stw	fp,12(sp)
   12ed4:	df000304 	addi	fp,sp,12
   12ed8:	e13ffd15 	stw	r4,-12(fp)
   12edc:	e17ffe15 	stw	r5,-8(fp)
   12ee0:	e1bfff15 	stw	r6,-4(fp)

   if ((cfg->scl_lcnt == 0) || (cfg->scl_hcnt == 0))
   12ee4:	e0bffe17 	ldw	r2,-8(fp)
   12ee8:	1080028b 	ldhu	r2,10(r2)
   12eec:	10bfffcc 	andi	r2,r2,65535
   12ef0:	10000426 	beq	r2,zero,12f04 <alt_avalon_i2c_master_config_speed_get+0x3c>
   12ef4:	e0bffe17 	ldw	r2,-8(fp)
   12ef8:	1080020b 	ldhu	r2,8(r2)
   12efc:	10bfffcc 	andi	r2,r2,65535
   12f00:	1000021e 	bne	r2,zero,12f0c <alt_avalon_i2c_master_config_speed_get+0x44>
   {
       return ALT_AVALON_I2C_BAD_ARG;
   12f04:	00bfff44 	movi	r2,-3
   12f08:	00000f06 	br	12f48 <alt_avalon_i2c_master_config_speed_get+0x80>
   }
    
   *speed_in_hz = (i2c_dev->ip_freq_in_hz) / (cfg->scl_lcnt + cfg->scl_hcnt);
   12f0c:	e0bffd17 	ldw	r2,-12(fp)
   12f10:	11000c17 	ldw	r4,48(r2)
   12f14:	e0bffe17 	ldw	r2,-8(fp)
   12f18:	1080028b 	ldhu	r2,10(r2)
   12f1c:	10ffffcc 	andi	r3,r2,65535
   12f20:	e0bffe17 	ldw	r2,-8(fp)
   12f24:	1080020b 	ldhu	r2,8(r2)
   12f28:	10bfffcc 	andi	r2,r2,65535
   12f2c:	1885883a 	add	r2,r3,r2
   12f30:	100b883a 	mov	r5,r2
   12f34:	0000e3c0 	call	e3c <__udivsi3>
   12f38:	1007883a 	mov	r3,r2
   12f3c:	e0bfff17 	ldw	r2,-4(fp)
   12f40:	10c00015 	stw	r3,0(r2)

   return ALT_AVALON_I2C_SUCCESS;
   12f44:	0005883a 	mov	r2,zero
}
   12f48:	e037883a 	mov	sp,fp
   12f4c:	dfc00117 	ldw	ra,4(sp)
   12f50:	df000017 	ldw	fp,0(sp)
   12f54:	dec00204 	addi	sp,sp,8
   12f58:	f800283a 	ret

00012f5c <alt_avalon_i2c_master_config_speed_set>:
/*This is a utility function that computes parameters for the I2C master
 * configuration that best matches the speed requested. */
 ALT_AVALON_I2C_STATUS_CODE alt_avalon_i2c_master_config_speed_set(ALT_AVALON_I2C_DEV_t *i2c_dev,
                                                ALT_AVALON_I2C_MASTER_CONFIG_t * cfg,
                                                alt_u32 speed_in_hz)
{
   12f5c:	defff904 	addi	sp,sp,-28
   12f60:	dfc00615 	stw	ra,24(sp)
   12f64:	df000515 	stw	fp,20(sp)
   12f68:	df000504 	addi	fp,sp,20
   12f6c:	e13ffd15 	stw	r4,-12(fp)
   12f70:	e17ffe15 	stw	r5,-8(fp)
   12f74:	e1bfff15 	stw	r6,-4(fp)
    alt_u32 scl_lcnt,scl_hcnt;

    /* If speed is not standard or fast return range error */
    if ((speed_in_hz > ALT_AVALON_I2C_FS_MAX_HZ) || (speed_in_hz < ALT_AVALON_I2C_SS_MIN_HZ) || (speed_in_hz == 0))
   12f78:	e0ffff17 	ldw	r3,-4(fp)
   12f7c:	008001b4 	movhi	r2,6
   12f80:	1086a004 	addi	r2,r2,6784
   12f84:	10c00436 	bltu	r2,r3,12f98 <alt_avalon_i2c_master_config_speed_set+0x3c>
   12f88:	e0bfff17 	ldw	r2,-4(fp)
   12f8c:	10000226 	beq	r2,zero,12f98 <alt_avalon_i2c_master_config_speed_set+0x3c>
   12f90:	e0bfff17 	ldw	r2,-4(fp)
   12f94:	1000021e 	bne	r2,zero,12fa0 <alt_avalon_i2c_master_config_speed_set+0x44>
    {
        return ALT_AVALON_I2C_RANGE;
   12f98:	00bfff04 	movi	r2,-4
   12f9c:	00002906 	br	13044 <alt_avalon_i2c_master_config_speed_set+0xe8>
    }

     /* <lcount> = <internal clock> / 2 * <speed, Hz> */
    scl_lcnt = (i2c_dev->ip_freq_in_hz) / (speed_in_hz << 1);
   12fa0:	e0bffd17 	ldw	r2,-12(fp)
   12fa4:	10c00c17 	ldw	r3,48(r2)
   12fa8:	e0bfff17 	ldw	r2,-4(fp)
   12fac:	1085883a 	add	r2,r2,r2
   12fb0:	100b883a 	mov	r5,r2
   12fb4:	1809883a 	mov	r4,r3
   12fb8:	0000e3c0 	call	e3c <__udivsi3>
   12fbc:	e0bffb15 	stw	r2,-20(fp)

    /* adjust h/l by predetermined amount */
    scl_hcnt = scl_lcnt + ALT_AVALON_I2C_DIFF_LCNT_HCNT;
   12fc0:	e0bffb17 	ldw	r2,-20(fp)
   12fc4:	10800f04 	addi	r2,r2,60
   12fc8:	e0bffc15 	stw	r2,-16(fp)
    scl_lcnt = scl_lcnt - ALT_AVALON_I2C_DIFF_LCNT_HCNT;
   12fcc:	e0bffb17 	ldw	r2,-20(fp)
   12fd0:	10bff104 	addi	r2,r2,-60
   12fd4:	e0bffb15 	stw	r2,-20(fp)

    if (speed_in_hz > ALT_AVALON_I2C_FS_MIN_HZ)
   12fd8:	e0ffff17 	ldw	r3,-4(fp)
   12fdc:	008000b4 	movhi	r2,2
   12fe0:	10a1a804 	addi	r2,r2,-31072
   12fe4:	10c0042e 	bgeu	r2,r3,12ff8 <alt_avalon_i2c_master_config_speed_set+0x9c>
    {
       cfg->speed_mode = ALT_AVALON_I2C_SPEED_FAST;
   12fe8:	e0bffe17 	ldw	r2,-8(fp)
   12fec:	00c00044 	movi	r3,1
   12ff0:	10c00115 	stw	r3,4(r2)
   12ff4:	00000206 	br	13000 <alt_avalon_i2c_master_config_speed_set+0xa4>
    }
    else 
    {
       cfg->speed_mode = ALT_AVALON_I2C_SPEED_STANDARD;    
   12ff8:	e0bffe17 	ldw	r2,-8(fp)
   12ffc:	10000115 	stw	zero,4(r2)
    }

    cfg->scl_lcnt = scl_lcnt;
   13000:	e0bffb17 	ldw	r2,-20(fp)
   13004:	1007883a 	mov	r3,r2
   13008:	e0bffe17 	ldw	r2,-8(fp)
   1300c:	10c0028d 	sth	r3,10(r2)
    cfg->scl_hcnt = scl_hcnt;
   13010:	e0bffc17 	ldw	r2,-16(fp)
   13014:	1007883a 	mov	r3,r2
   13018:	e0bffe17 	ldw	r2,-8(fp)
   1301c:	10c0020d 	sth	r3,8(r2)
    cfg->sda_cnt  = scl_lcnt - (scl_lcnt / 2);
   13020:	e0bffb17 	ldw	r2,-20(fp)
   13024:	1007883a 	mov	r3,r2
   13028:	e0bffb17 	ldw	r2,-20(fp)
   1302c:	1004d07a 	srli	r2,r2,1
   13030:	1885c83a 	sub	r2,r3,r2
   13034:	1007883a 	mov	r3,r2
   13038:	e0bffe17 	ldw	r2,-8(fp)
   1303c:	10c0030d 	sth	r3,12(r2)

    return ALT_AVALON_I2C_SUCCESS;
   13040:	0005883a 	mov	r2,zero

}
   13044:	e037883a 	mov	sp,fp
   13048:	dfc00117 	ldw	ra,4(sp)
   1304c:	df000017 	ldw	fp,0(sp)
   13050:	dec00204 	addi	sp,sp,8
   13054:	f800283a 	ret

00013058 <alt_avalon_i2c_is_busy>:

/*Returns ALT_AVALON_I2C_TRUE if the I2C controller is busy. The I2C controller is busy if
 * not in the IDLE state */
ALT_AVALON_I2C_STATUS_CODE alt_avalon_i2c_is_busy(ALT_AVALON_I2C_DEV_t *i2c_dev)
{
   13058:	defffe04 	addi	sp,sp,-8
   1305c:	df000115 	stw	fp,4(sp)
   13060:	df000104 	addi	fp,sp,4
   13064:	e13fff15 	stw	r4,-4(fp)

    if (IORD_ALT_AVALON_I2C_STATUS(i2c_dev->i2c_base) & ALT_AVALON_I2C_STATUS_CORE_STATUS_MSK)
   13068:	e0bfff17 	ldw	r2,-4(fp)
   1306c:	10800317 	ldw	r2,12(r2)
   13070:	10800504 	addi	r2,r2,20
   13074:	10800037 	ldwio	r2,0(r2)
   13078:	1080004c 	andi	r2,r2,1
   1307c:	10000226 	beq	r2,zero,13088 <alt_avalon_i2c_is_busy+0x30>
    {
       return ALT_AVALON_I2C_TRUE;
   13080:	00800044 	movi	r2,1
   13084:	00000106 	br	1308c <alt_avalon_i2c_is_busy+0x34>
    }

    return ALT_AVALON_I2C_FALSE;
   13088:	0005883a 	mov	r2,zero
}
   1308c:	e037883a 	mov	sp,fp
   13090:	df000017 	ldw	fp,0(sp)
   13094:	dec00104 	addi	sp,sp,4
   13098:	f800283a 	ret

0001309c <alt_avalon_i2c_rx_read_available>:

/*Read all available bytes from the receive FIFO up to max_bytes_to_read.  If max_bytes_to_read = 0 then read all available */
void alt_avalon_i2c_rx_read_available(ALT_AVALON_I2C_DEV_t *i2c_dev, alt_u8 *buffer, alt_u32 max_bytes_to_read, alt_u32 *bytes_read)
{
   1309c:	defffb04 	addi	sp,sp,-20
   130a0:	df000415 	stw	fp,16(sp)
   130a4:	df000404 	addi	fp,sp,16
   130a8:	e13ffc15 	stw	r4,-16(fp)
   130ac:	e17ffd15 	stw	r5,-12(fp)
   130b0:	e1bffe15 	stw	r6,-8(fp)
   130b4:	e1ffff15 	stw	r7,-4(fp)
    *bytes_read = 0;
   130b8:	e0bfff17 	ldw	r2,-4(fp)
   130bc:	10000015 	stw	zero,0(r2)
    
    while (IORD_ALT_AVALON_I2C_RX_DATA_FIFO_LVL(i2c_dev->i2c_base))
   130c0:	00001406 	br	13114 <alt_avalon_i2c_rx_read_available+0x78>
    {
       buffer[*bytes_read] = (alt_u8)IORD_ALT_AVALON_I2C_RX_DATA(i2c_dev->i2c_base);
   130c4:	e0bfff17 	ldw	r2,-4(fp)
   130c8:	10800017 	ldw	r2,0(r2)
   130cc:	e0fffd17 	ldw	r3,-12(fp)
   130d0:	1885883a 	add	r2,r3,r2
   130d4:	e0fffc17 	ldw	r3,-16(fp)
   130d8:	18c00317 	ldw	r3,12(r3)
   130dc:	18c00104 	addi	r3,r3,4
   130e0:	18c00037 	ldwio	r3,0(r3)
   130e4:	10c00005 	stb	r3,0(r2)
       *bytes_read+=1; 
   130e8:	e0bfff17 	ldw	r2,-4(fp)
   130ec:	10800017 	ldw	r2,0(r2)
   130f0:	10c00044 	addi	r3,r2,1
   130f4:	e0bfff17 	ldw	r2,-4(fp)
   130f8:	10c00015 	stw	r3,0(r2)
       if ((*bytes_read == max_bytes_to_read) && (max_bytes_to_read != 0)) break;       
   130fc:	e0bfff17 	ldw	r2,-4(fp)
   13100:	10c00017 	ldw	r3,0(r2)
   13104:	e0bffe17 	ldw	r2,-8(fp)
   13108:	1880021e 	bne	r3,r2,13114 <alt_avalon_i2c_rx_read_available+0x78>
   1310c:	e0bffe17 	ldw	r2,-8(fp)
   13110:	1000061e 	bne	r2,zero,1312c <alt_avalon_i2c_rx_read_available+0x90>
/*Read all available bytes from the receive FIFO up to max_bytes_to_read.  If max_bytes_to_read = 0 then read all available */
void alt_avalon_i2c_rx_read_available(ALT_AVALON_I2C_DEV_t *i2c_dev, alt_u8 *buffer, alt_u32 max_bytes_to_read, alt_u32 *bytes_read)
{
    *bytes_read = 0;
    
    while (IORD_ALT_AVALON_I2C_RX_DATA_FIFO_LVL(i2c_dev->i2c_base))
   13114:	e0bffc17 	ldw	r2,-16(fp)
   13118:	10800317 	ldw	r2,12(r2)
   1311c:	10800704 	addi	r2,r2,28
   13120:	10800037 	ldwio	r2,0(r2)
   13124:	103fe71e 	bne	r2,zero,130c4 <__alt_mem_Onchip_SRAM+0xf80130c4>
    {
       buffer[*bytes_read] = (alt_u8)IORD_ALT_AVALON_I2C_RX_DATA(i2c_dev->i2c_base);
       *bytes_read+=1; 
       if ((*bytes_read == max_bytes_to_read) && (max_bytes_to_read != 0)) break;       
    }
}
   13128:	00000106 	br	13130 <alt_avalon_i2c_rx_read_available+0x94>
    
    while (IORD_ALT_AVALON_I2C_RX_DATA_FIFO_LVL(i2c_dev->i2c_base))
    {
       buffer[*bytes_read] = (alt_u8)IORD_ALT_AVALON_I2C_RX_DATA(i2c_dev->i2c_base);
       *bytes_read+=1; 
       if ((*bytes_read == max_bytes_to_read) && (max_bytes_to_read != 0)) break;       
   1312c:	0001883a 	nop
    }
}
   13130:	0001883a 	nop
   13134:	e037883a 	mov	sp,fp
   13138:	df000017 	ldw	fp,0(sp)
   1313c:	dec00104 	addi	sp,sp,4
   13140:	f800283a 	ret

00013144 <alt_avalon_i2c_rx_read>:

/*when a byte is available, reads a single data byte from the receive FIFO. */
ALT_AVALON_I2C_STATUS_CODE alt_avalon_i2c_rx_read(ALT_AVALON_I2C_DEV_t *i2c_dev, alt_u8 *val)
{
   13144:	defffa04 	addi	sp,sp,-24
   13148:	dfc00515 	stw	ra,20(sp)
   1314c:	df000415 	stw	fp,16(sp)
   13150:	df000404 	addi	fp,sp,16
   13154:	e13ffe15 	stw	r4,-8(fp)
   13158:	e17fff15 	stw	r5,-4(fp)
    alt_u32 status = ALT_AVALON_I2C_SUCCESS;
   1315c:	e03ffc15 	stw	zero,-16(fp)
    alt_u32 timeout = 100000;
   13160:	008000b4 	movhi	r2,2
   13164:	10a1a804 	addi	r2,r2,-31072
   13168:	e0bffd15 	stw	r2,-12(fp)


    while (IORD_ALT_AVALON_I2C_RX_DATA_FIFO_LVL(i2c_dev->i2c_base) == 0)
   1316c:	00000d06 	br	131a4 <alt_avalon_i2c_rx_read+0x60>
    {
      if (timeout<10) alt_busy_sleep(10000);
   13170:	e0bffd17 	ldw	r2,-12(fp)
   13174:	108002a8 	cmpgeui	r2,r2,10
   13178:	1000021e 	bne	r2,zero,13184 <alt_avalon_i2c_rx_read+0x40>
   1317c:	0109c404 	movi	r4,10000
   13180:	00156f80 	call	156f8 <alt_busy_sleep>
      if (--timeout == 0)
   13184:	e0bffd17 	ldw	r2,-12(fp)
   13188:	10bfffc4 	addi	r2,r2,-1
   1318c:	e0bffd15 	stw	r2,-12(fp)
   13190:	e0bffd17 	ldw	r2,-12(fp)
   13194:	1000031e 	bne	r2,zero,131a4 <alt_avalon_i2c_rx_read+0x60>
      {
        status = ALT_AVALON_I2C_TIMEOUT;
   13198:	00bfff84 	movi	r2,-2
   1319c:	e0bffc15 	stw	r2,-16(fp)
        break;
   131a0:	00000506 	br	131b8 <alt_avalon_i2c_rx_read+0x74>
{
    alt_u32 status = ALT_AVALON_I2C_SUCCESS;
    alt_u32 timeout = 100000;


    while (IORD_ALT_AVALON_I2C_RX_DATA_FIFO_LVL(i2c_dev->i2c_base) == 0)
   131a4:	e0bffe17 	ldw	r2,-8(fp)
   131a8:	10800317 	ldw	r2,12(r2)
   131ac:	10800704 	addi	r2,r2,28
   131b0:	10800037 	ldwio	r2,0(r2)
   131b4:	103fee26 	beq	r2,zero,13170 <__alt_mem_Onchip_SRAM+0xf8013170>
        status = ALT_AVALON_I2C_TIMEOUT;
        break;
      }
    }

    *val = (alt_u8)IORD_ALT_AVALON_I2C_RX_DATA(i2c_dev->i2c_base);
   131b8:	e0bffe17 	ldw	r2,-8(fp)
   131bc:	10800317 	ldw	r2,12(r2)
   131c0:	10800104 	addi	r2,r2,4
   131c4:	10800037 	ldwio	r2,0(r2)
   131c8:	1007883a 	mov	r3,r2
   131cc:	e0bfff17 	ldw	r2,-4(fp)
   131d0:	10c00005 	stb	r3,0(r2)
        
    return status;
   131d4:	e0bffc17 	ldw	r2,-16(fp)
}
   131d8:	e037883a 	mov	sp,fp
   131dc:	dfc00117 	ldw	ra,4(sp)
   131e0:	df000017 	ldw	fp,0(sp)
   131e4:	dec00204 	addi	sp,sp,8
   131e8:	f800283a 	ret

000131ec <alt_avalon_i2c_cmd_write>:
/* When space is available, writes the Transfer Command FIFO. */
ALT_AVALON_I2C_STATUS_CODE alt_avalon_i2c_cmd_write(ALT_AVALON_I2C_DEV_t *i2c_dev, 
                                                      alt_u8 val,
                                                      alt_u8 issue_restart,
                                                      alt_u8 issue_stop)
{
   131ec:	defff804 	addi	sp,sp,-32
   131f0:	dfc00715 	stw	ra,28(sp)
   131f4:	df000615 	stw	fp,24(sp)
   131f8:	df000604 	addi	fp,sp,24
   131fc:	e13ffc15 	stw	r4,-16(fp)
   13200:	2809883a 	mov	r4,r5
   13204:	3007883a 	mov	r3,r6
   13208:	3805883a 	mov	r2,r7
   1320c:	e13ffd05 	stb	r4,-12(fp)
   13210:	e0fffe05 	stb	r3,-8(fp)
   13214:	e0bfff05 	stb	r2,-4(fp)
    alt_u32 timeout = 10000;
   13218:	0089c404 	movi	r2,10000
   1321c:	e0bffa15 	stw	r2,-24(fp)
    ALT_AVALON_I2C_STATUS_CODE status = ALT_AVALON_I2C_SUCCESS;
   13220:	e03ffb15 	stw	zero,-20(fp)


    while ((IORD_ALT_AVALON_I2C_ISR(i2c_dev->i2c_base) & ALT_AVALON_I2C_ISR_TX_READY_MSK)==0) 
   13224:	00000c06 	br	13258 <alt_avalon_i2c_cmd_write+0x6c>
    {
      if (timeout<10) alt_busy_sleep(10000);    
   13228:	e0bffa17 	ldw	r2,-24(fp)
   1322c:	108002a8 	cmpgeui	r2,r2,10
   13230:	1000021e 	bne	r2,zero,1323c <alt_avalon_i2c_cmd_write+0x50>
   13234:	0109c404 	movi	r4,10000
   13238:	00156f80 	call	156f8 <alt_busy_sleep>
      if (--timeout == 0)
   1323c:	e0bffa17 	ldw	r2,-24(fp)
   13240:	10bfffc4 	addi	r2,r2,-1
   13244:	e0bffa15 	stw	r2,-24(fp)
   13248:	e0bffa17 	ldw	r2,-24(fp)
   1324c:	1000021e 	bne	r2,zero,13258 <alt_avalon_i2c_cmd_write+0x6c>
      {
        return ALT_AVALON_I2C_TIMEOUT;
   13250:	00bfff84 	movi	r2,-2
   13254:	00001906 	br	132bc <alt_avalon_i2c_cmd_write+0xd0>
{
    alt_u32 timeout = 10000;
    ALT_AVALON_I2C_STATUS_CODE status = ALT_AVALON_I2C_SUCCESS;


    while ((IORD_ALT_AVALON_I2C_ISR(i2c_dev->i2c_base) & ALT_AVALON_I2C_ISR_TX_READY_MSK)==0) 
   13258:	e0bffc17 	ldw	r2,-16(fp)
   1325c:	10800317 	ldw	r2,12(r2)
   13260:	10800404 	addi	r2,r2,16
   13264:	10800037 	ldwio	r2,0(r2)
   13268:	1080004c 	andi	r2,r2,1
   1326c:	103fee26 	beq	r2,zero,13228 <__alt_mem_Onchip_SRAM+0xf8013228>
      {
        return ALT_AVALON_I2C_TIMEOUT;
      }
    }

    IOWR_ALT_AVALON_I2C_TFR_CMD(i2c_dev->i2c_base,val |
   13270:	e0bffc17 	ldw	r2,-16(fp)
   13274:	10800317 	ldw	r2,12(r2)
   13278:	e13ffd03 	ldbu	r4,-12(fp)
   1327c:	e0fffe03 	ldbu	r3,-8(fp)
   13280:	1806927a 	slli	r3,r3,9
   13284:	20c8b03a 	or	r4,r4,r3
   13288:	e0ffff03 	ldbu	r3,-4(fp)
   1328c:	1806923a 	slli	r3,r3,8
   13290:	20c6b03a 	or	r3,r4,r3
   13294:	10c00035 	stwio	r3,0(r2)
                                     (issue_restart << ALT_AVALON_I2C_TFR_CMD_STA_OFST) |
                                     (issue_stop << ALT_AVALON_I2C_TFR_CMD_STO_OFST));


    /*check for nack error*/
    alt_avalon_i2c_check_nack(i2c_dev,&status);
   13298:	e0bffb04 	addi	r2,fp,-20
   1329c:	100b883a 	mov	r5,r2
   132a0:	e13ffc17 	ldw	r4,-16(fp)
   132a4:	001342c0 	call	1342c <alt_avalon_i2c_check_nack>
    
    /*check for arb lost*/
    alt_avalon_i2c_check_arblost(i2c_dev,&status);
   132a8:	e0bffb04 	addi	r2,fp,-20
   132ac:	100b883a 	mov	r5,r2
   132b0:	e13ffc17 	ldw	r4,-16(fp)
   132b4:	00134780 	call	13478 <alt_avalon_i2c_check_arblost>
    
    return status;
   132b8:	e0bffb17 	ldw	r2,-20(fp)
}
   132bc:	e037883a 	mov	sp,fp
   132c0:	dfc00117 	ldw	ra,4(sp)
   132c4:	df000017 	ldw	fp,0(sp)
   132c8:	dec00204 	addi	sp,sp,8
   132cc:	f800283a 	ret

000132d0 <alt_avalon_i2c_send_address>:

/*send 7 or 10 bit i2c address to cmd fifo*/
ALT_AVALON_I2C_STATUS_CODE alt_avalon_i2c_send_address(ALT_AVALON_I2C_DEV_t *i2c_dev,
                                                       const alt_u32 rw_bit,
                                                       const alt_u8 issue_restart)
{
   132d0:	defffa04 	addi	sp,sp,-24
   132d4:	dfc00515 	stw	ra,20(sp)
   132d8:	df000415 	stw	fp,16(sp)
   132dc:	df000404 	addi	fp,sp,16
   132e0:	e13ffd15 	stw	r4,-12(fp)
   132e4:	e17ffe15 	stw	r5,-8(fp)
   132e8:	3005883a 	mov	r2,r6
   132ec:	e0bfff05 	stb	r2,-4(fp)
    alt_u32 status;
        
    if (i2c_dev->address_mode == ALT_AVALON_I2C_ADDR_MODE_10_BIT)
   132f0:	e0bffd17 	ldw	r2,-12(fp)
   132f4:	10800d17 	ldw	r2,52(r2)
   132f8:	10800058 	cmpnei	r2,r2,1
   132fc:	10001c1e 	bne	r2,zero,13370 <alt_avalon_i2c_send_address+0xa0>
    {
       status = alt_avalon_i2c_cmd_write(i2c_dev,(((i2c_dev->master_target_address | TARGET_ADDR_MASK_10BIT) >> 7) & 0xfe) | rw_bit,issue_restart,ALT_AVALON_I2C_NO_STOP);
   13300:	e0bffd17 	ldw	r2,-12(fp)
   13304:	10800917 	ldw	r2,36(r2)
   13308:	109e0014 	ori	r2,r2,30720
   1330c:	1004d1fa 	srli	r2,r2,7
   13310:	1007883a 	mov	r3,r2
   13314:	00bfff84 	movi	r2,-2
   13318:	1884703a 	and	r2,r3,r2
   1331c:	1007883a 	mov	r3,r2
   13320:	e0bffe17 	ldw	r2,-8(fp)
   13324:	1884b03a 	or	r2,r3,r2
   13328:	10803fcc 	andi	r2,r2,255
   1332c:	e0ffff03 	ldbu	r3,-4(fp)
   13330:	000f883a 	mov	r7,zero
   13334:	180d883a 	mov	r6,r3
   13338:	100b883a 	mov	r5,r2
   1333c:	e13ffd17 	ldw	r4,-12(fp)
   13340:	00131ec0 	call	131ec <alt_avalon_i2c_cmd_write>
   13344:	e0bffc15 	stw	r2,-16(fp)
       status = alt_avalon_i2c_cmd_write(i2c_dev,i2c_dev->master_target_address & 0xff,ALT_AVALON_I2C_NO_RESTART,ALT_AVALON_I2C_NO_STOP);      
   13348:	e0bffd17 	ldw	r2,-12(fp)
   1334c:	10800917 	ldw	r2,36(r2)
   13350:	10803fcc 	andi	r2,r2,255
   13354:	000f883a 	mov	r7,zero
   13358:	000d883a 	mov	r6,zero
   1335c:	100b883a 	mov	r5,r2
   13360:	e13ffd17 	ldw	r4,-12(fp)
   13364:	00131ec0 	call	131ec <alt_avalon_i2c_cmd_write>
   13368:	e0bffc15 	stw	r2,-16(fp)
   1336c:	00000e06 	br	133a8 <alt_avalon_i2c_send_address+0xd8>
    }
    else
    {
       status = alt_avalon_i2c_cmd_write(i2c_dev,(i2c_dev->master_target_address << 1) | rw_bit,issue_restart,ALT_AVALON_I2C_NO_STOP);
   13370:	e0bffd17 	ldw	r2,-12(fp)
   13374:	10800917 	ldw	r2,36(r2)
   13378:	1085883a 	add	r2,r2,r2
   1337c:	1007883a 	mov	r3,r2
   13380:	e0bffe17 	ldw	r2,-8(fp)
   13384:	1884b03a 	or	r2,r3,r2
   13388:	10803fcc 	andi	r2,r2,255
   1338c:	e0ffff03 	ldbu	r3,-4(fp)
   13390:	000f883a 	mov	r7,zero
   13394:	180d883a 	mov	r6,r3
   13398:	100b883a 	mov	r5,r2
   1339c:	e13ffd17 	ldw	r4,-12(fp)
   133a0:	00131ec0 	call	131ec <alt_avalon_i2c_cmd_write>
   133a4:	e0bffc15 	stw	r2,-16(fp)
    }
    
    return status;
   133a8:	e0bffc17 	ldw	r2,-16(fp)
}
   133ac:	e037883a 	mov	sp,fp
   133b0:	dfc00117 	ldw	ra,4(sp)
   133b4:	df000017 	ldw	fp,0(sp)
   133b8:	dec00204 	addi	sp,sp,8
   133bc:	f800283a 	ret

000133c0 <alt_avalon_i2c_master_target_get>:

/* This function returns the current target address. */
void alt_avalon_i2c_master_target_get(ALT_AVALON_I2C_DEV_t * i2c_dev, alt_u32 * target_addr)
{
   133c0:	defffd04 	addi	sp,sp,-12
   133c4:	df000215 	stw	fp,8(sp)
   133c8:	df000204 	addi	fp,sp,8
   133cc:	e13ffe15 	stw	r4,-8(fp)
   133d0:	e17fff15 	stw	r5,-4(fp)
    *target_addr=i2c_dev->master_target_address;
   133d4:	e0bffe17 	ldw	r2,-8(fp)
   133d8:	10c00917 	ldw	r3,36(r2)
   133dc:	e0bfff17 	ldw	r2,-4(fp)
   133e0:	10c00015 	stw	r3,0(r2)
}
   133e4:	0001883a 	nop
   133e8:	e037883a 	mov	sp,fp
   133ec:	df000017 	ldw	fp,0(sp)
   133f0:	dec00104 	addi	sp,sp,4
   133f4:	f800283a 	ret

000133f8 <alt_avalon_i2c_master_target_set>:

/* This function updates the target address for any upcoming I2C bus IO. */
void alt_avalon_i2c_master_target_set(ALT_AVALON_I2C_DEV_t * i2c_dev, alt_u32 target_addr)
{
   133f8:	defffd04 	addi	sp,sp,-12
   133fc:	df000215 	stw	fp,8(sp)
   13400:	df000204 	addi	fp,sp,8
   13404:	e13ffe15 	stw	r4,-8(fp)
   13408:	e17fff15 	stw	r5,-4(fp)
    i2c_dev->master_target_address=target_addr;
   1340c:	e0bffe17 	ldw	r2,-8(fp)
   13410:	e0ffff17 	ldw	r3,-4(fp)
   13414:	10c00915 	stw	r3,36(r2)
}
   13418:	0001883a 	nop
   1341c:	e037883a 	mov	sp,fp
   13420:	df000017 	ldw	fp,0(sp)
   13424:	dec00104 	addi	sp,sp,4
   13428:	f800283a 	ret

0001342c <alt_avalon_i2c_check_nack>:

/*if nack detected, status is set to ALT_AVALON_I2C_NACK_ERR*/
void alt_avalon_i2c_check_nack(ALT_AVALON_I2C_DEV_t *i2c_dev,ALT_AVALON_I2C_STATUS_CODE * status)
{    
   1342c:	defffd04 	addi	sp,sp,-12
   13430:	df000215 	stw	fp,8(sp)
   13434:	df000204 	addi	fp,sp,8
   13438:	e13ffe15 	stw	r4,-8(fp)
   1343c:	e17fff15 	stw	r5,-4(fp)
    if (IORD_ALT_AVALON_I2C_ISR(i2c_dev->i2c_base) & ALT_AVALON_I2C_ISR_NACK_DET_MSK)
   13440:	e0bffe17 	ldw	r2,-8(fp)
   13444:	10800317 	ldw	r2,12(r2)
   13448:	10800404 	addi	r2,r2,16
   1344c:	10800037 	ldwio	r2,0(r2)
   13450:	1080010c 	andi	r2,r2,4
   13454:	10000326 	beq	r2,zero,13464 <alt_avalon_i2c_check_nack+0x38>
    {
      *status=ALT_AVALON_I2C_NACK_ERR;
   13458:	e0bfff17 	ldw	r2,-4(fp)
   1345c:	00fffec4 	movi	r3,-5
   13460:	10c00015 	stw	r3,0(r2)
    }
}
   13464:	0001883a 	nop
   13468:	e037883a 	mov	sp,fp
   1346c:	df000017 	ldw	fp,0(sp)
   13470:	dec00104 	addi	sp,sp,4
   13474:	f800283a 	ret

00013478 <alt_avalon_i2c_check_arblost>:

/*if arb lost is detected, status is set to ALT_AVALON_I2C_ARB_LOST_ERR*/
void alt_avalon_i2c_check_arblost(ALT_AVALON_I2C_DEV_t *i2c_dev,ALT_AVALON_I2C_STATUS_CODE * status)
{      
   13478:	defffd04 	addi	sp,sp,-12
   1347c:	df000215 	stw	fp,8(sp)
   13480:	df000204 	addi	fp,sp,8
   13484:	e13ffe15 	stw	r4,-8(fp)
   13488:	e17fff15 	stw	r5,-4(fp)
    if (IORD_ALT_AVALON_I2C_ISR(i2c_dev->i2c_base) & ALT_AVALON_I2C_ISR_ARBLOST_DET_MSK)
   1348c:	e0bffe17 	ldw	r2,-8(fp)
   13490:	10800317 	ldw	r2,12(r2)
   13494:	10800404 	addi	r2,r2,16
   13498:	10800037 	ldwio	r2,0(r2)
   1349c:	1080020c 	andi	r2,r2,8
   134a0:	10000326 	beq	r2,zero,134b0 <alt_avalon_i2c_check_arblost+0x38>
    {
      *status=ALT_AVALON_I2C_ARB_LOST_ERR;
   134a4:	e0bfff17 	ldw	r2,-4(fp)
   134a8:	00fffe84 	movi	r3,-6
   134ac:	10c00015 	stw	r3,0(r2)
    }
}
   134b0:	0001883a 	nop
   134b4:	e037883a 	mov	sp,fp
   134b8:	df000017 	ldw	fp,0(sp)
   134bc:	dec00104 	addi	sp,sp,4
   134c0:	f800283a 	ret

000134c4 <alt_avalon_i2c_interrupt_transaction_status>:

ALT_AVALON_I2C_STATUS_CODE alt_avalon_i2c_interrupt_transaction_status(ALT_AVALON_I2C_DEV_t *i2c_dev)
{
   134c4:	defff804 	addi	sp,sp,-32
   134c8:	dfc00715 	stw	ra,28(sp)
   134cc:	df000615 	stw	fp,24(sp)
   134d0:	df000604 	addi	fp,sp,24
   134d4:	e13fff15 	stw	r4,-4(fp)
    ALT_AVALON_I2C_STATUS_CODE status = ALT_AVALON_I2C_SUCCESS;
   134d8:	e03ffc15 	stw	zero,-16(fp)
    IRQ_DATA_t *irq_data = i2c_dev->callback_context;
   134dc:	e0bfff17 	ldw	r2,-4(fp)
   134e0:	10800717 	ldw	r2,28(r2)
   134e4:	e0bffb15 	stw	r2,-20(fp)
    alt_u32 timeout=10000 * irq_data->size + 10000;
   134e8:	e0bffb17 	ldw	r2,-20(fp)
   134ec:	10800117 	ldw	r2,4(r2)
   134f0:	10800044 	addi	r2,r2,1
   134f4:	0149c404 	movi	r5,10000
   134f8:	1009883a 	mov	r4,r2
   134fc:	0000ef80 	call	ef8 <__mulsi3>
   13500:	e0bffa15 	stw	r2,-24(fp)
    alt_u32 saveints,temp_bytes_read;
    
    /* save current enabled interrupts */
    alt_avalon_i2c_enabled_ints_get(i2c_dev,&saveints);
   13504:	e0bffd04 	addi	r2,fp,-12
   13508:	100b883a 	mov	r5,r2
   1350c:	e13fff17 	ldw	r4,-4(fp)
   13510:	001435c0 	call	1435c <alt_avalon_i2c_enabled_ints_get>
    
    /* disable the enabled interrupts */
    alt_avalon_i2c_int_disable(i2c_dev,saveints);
   13514:	e0bffd17 	ldw	r2,-12(fp)
   13518:	100b883a 	mov	r5,r2
   1351c:	e13fff17 	ldw	r4,-4(fp)
   13520:	00142900 	call	14290 <alt_avalon_i2c_int_disable>
    
    alt_avalon_i2c_check_nack(i2c_dev,&status);
   13524:	e0bffc04 	addi	r2,fp,-16
   13528:	100b883a 	mov	r5,r2
   1352c:	e13fff17 	ldw	r4,-4(fp)
   13530:	001342c0 	call	1342c <alt_avalon_i2c_check_nack>

    if (status!=ALT_AVALON_I2C_SUCCESS)
   13534:	e0bffc17 	ldw	r2,-16(fp)
   13538:	10002226 	beq	r2,zero,135c4 <alt_avalon_i2c_interrupt_transaction_status+0x100>
    {
      if (irq_data->irq_busy)
   1353c:	e0bffb17 	ldw	r2,-20(fp)
   13540:	10800217 	ldw	r2,8(r2)
   13544:	10001d26 	beq	r2,zero,135bc <alt_avalon_i2c_interrupt_transaction_status+0xf8>
      {
        while (alt_avalon_i2c_is_busy(i2c_dev))
   13548:	00000d06 	br	13580 <alt_avalon_i2c_interrupt_transaction_status+0xbc>
        {
              if (timeout<10) alt_busy_sleep(10000);
   1354c:	e0bffa17 	ldw	r2,-24(fp)
   13550:	108002a8 	cmpgeui	r2,r2,10
   13554:	1000021e 	bne	r2,zero,13560 <alt_avalon_i2c_interrupt_transaction_status+0x9c>
   13558:	0109c404 	movi	r4,10000
   1355c:	00156f80 	call	156f8 <alt_busy_sleep>
              if (--timeout == 0)
   13560:	e0bffa17 	ldw	r2,-24(fp)
   13564:	10bfffc4 	addi	r2,r2,-1
   13568:	e0bffa15 	stw	r2,-24(fp)
   1356c:	e0bffa17 	ldw	r2,-24(fp)
   13570:	1000031e 	bne	r2,zero,13580 <alt_avalon_i2c_interrupt_transaction_status+0xbc>
              {
                 status = ALT_AVALON_I2C_TIMEOUT;
   13574:	00bfff84 	movi	r2,-2
   13578:	e0bffc15 	stw	r2,-16(fp)
                 break;
   1357c:	00000306 	br	1358c <alt_avalon_i2c_interrupt_transaction_status+0xc8>

    if (status!=ALT_AVALON_I2C_SUCCESS)
    {
      if (irq_data->irq_busy)
      {
        while (alt_avalon_i2c_is_busy(i2c_dev))
   13580:	e13fff17 	ldw	r4,-4(fp)
   13584:	00130580 	call	13058 <alt_avalon_i2c_is_busy>
   13588:	103ff01e 	bne	r2,zero,1354c <__alt_mem_Onchip_SRAM+0xf801354c>
                 break;
              }
        }
          
        /*clear any rx entries */
        alt_avalon_i2c_rx_read_available(i2c_dev, irq_data->buffer,0,&temp_bytes_read);
   1358c:	e0bffb17 	ldw	r2,-20(fp)
   13590:	10800017 	ldw	r2,0(r2)
   13594:	e0fffe04 	addi	r3,fp,-8
   13598:	180f883a 	mov	r7,r3
   1359c:	000d883a 	mov	r6,zero
   135a0:	100b883a 	mov	r5,r2
   135a4:	e13fff17 	ldw	r4,-4(fp)
   135a8:	001309c0 	call	1309c <alt_avalon_i2c_rx_read_available>
       
        /*disable the ip.  The ip is disabled and enabled for each transaction. */
        alt_avalon_i2c_disable(i2c_dev);
   135ac:	e13fff17 	ldw	r4,-4(fp)
   135b0:	0012d000 	call	12d00 <alt_avalon_i2c_disable>
          
        /*abort the transaction */
        irq_data->irq_busy=0;
   135b4:	e0bffb17 	ldw	r2,-20(fp)
   135b8:	10000215 	stw	zero,8(r2)
      }
      
      /*return nack error so transaction can be retried*/
      return status;
   135bc:	e0bffc17 	ldw	r2,-16(fp)
   135c0:	00000a06 	br	135ec <alt_avalon_i2c_interrupt_transaction_status+0x128>
    }
    
    if (irq_data->irq_busy)
   135c4:	e0bffb17 	ldw	r2,-20(fp)
   135c8:	10800217 	ldw	r2,8(r2)
   135cc:	10000626 	beq	r2,zero,135e8 <alt_avalon_i2c_interrupt_transaction_status+0x124>
    {
        /*re-enable the interrupts*/
        alt_avalon_i2c_int_enable(i2c_dev,saveints);
   135d0:	e0bffd17 	ldw	r2,-12(fp)
   135d4:	100b883a 	mov	r5,r2
   135d8:	e13fff17 	ldw	r4,-4(fp)
   135dc:	00142f80 	call	142f8 <alt_avalon_i2c_int_enable>
        
        /*return transaction still busy*/
        return ALT_AVALON_I2C_BUSY;
   135e0:	00bffe44 	movi	r2,-7
   135e4:	00000106 	br	135ec <alt_avalon_i2c_interrupt_transaction_status+0x128>
    }
    
    /*return transaction completed status, ok to do another transaction*/
    return ALT_AVALON_I2C_SUCCESS;
   135e8:	0005883a 	mov	r2,zero
}
   135ec:	e037883a 	mov	sp,fp
   135f0:	dfc00117 	ldw	ra,4(sp)
   135f4:	df000017 	ldw	fp,0(sp)
   135f8:	dec00204 	addi	sp,sp,8
   135fc:	f800283a 	ret

00013600 <alt_avalon_i2c_master_tx>:
/*transmit function with retry and optionally interrupts*/
ALT_AVALON_I2C_STATUS_CODE alt_avalon_i2c_master_tx(ALT_AVALON_I2C_DEV_t *i2c_dev,
                                       const alt_u8 * buffer,
                                       const alt_u32 size,
                                       const alt_u8 use_interrupts)
{
   13600:	defff704 	addi	sp,sp,-36
   13604:	dfc00815 	stw	ra,32(sp)
   13608:	df000715 	stw	fp,28(sp)
   1360c:	df000704 	addi	fp,sp,28
   13610:	e13ffc15 	stw	r4,-16(fp)
   13614:	e17ffd15 	stw	r5,-12(fp)
   13618:	e1bffe15 	stw	r6,-8(fp)
   1361c:	3805883a 	mov	r2,r7
   13620:	e0bfff05 	stb	r2,-4(fp)
    ALT_AVALON_I2C_STATUS_CODE status;
    alt_u32 retry=10000;  
   13624:	0089c404 	movi	r2,10000
   13628:	e0bffb15 	stw	r2,-20(fp)
    
    while (retry--)
   1362c:	00002206 	br	136b8 <alt_avalon_i2c_master_tx+0xb8>
    {
      if (retry<10) alt_busy_sleep(10000);
   13630:	e0bffb17 	ldw	r2,-20(fp)
   13634:	108002a8 	cmpgeui	r2,r2,10
   13638:	1000021e 	bne	r2,zero,13644 <alt_avalon_i2c_master_tx+0x44>
   1363c:	0109c404 	movi	r4,10000
   13640:	00156f80 	call	156f8 <alt_busy_sleep>
      if (use_interrupts)
   13644:	e0bfff03 	ldbu	r2,-4(fp)
   13648:	10000926 	beq	r2,zero,13670 <alt_avalon_i2c_master_tx+0x70>
      {
         status = alt_avalon_i2c_master_transmit_using_interrupts(i2c_dev, buffer, size, ALT_AVALON_I2C_NO_RESTART, ALT_AVALON_I2C_STOP); 
   1364c:	00800044 	movi	r2,1
   13650:	d8800015 	stw	r2,0(sp)
   13654:	000f883a 	mov	r7,zero
   13658:	e1bffe17 	ldw	r6,-8(fp)
   1365c:	e17ffd17 	ldw	r5,-12(fp)
   13660:	e13ffc17 	ldw	r4,-16(fp)
   13664:	0013bac0 	call	13bac <alt_avalon_i2c_master_transmit_using_interrupts>
   13668:	e0bffa15 	stw	r2,-24(fp)
   1366c:	00000806 	br	13690 <alt_avalon_i2c_master_tx+0x90>
      }
      else
      {
         status = alt_avalon_i2c_master_transmit(i2c_dev, buffer, size, ALT_AVALON_I2C_NO_RESTART, ALT_AVALON_I2C_STOP);
   13670:	00800044 	movi	r2,1
   13674:	d8800015 	stw	r2,0(sp)
   13678:	000f883a 	mov	r7,zero
   1367c:	e1bffe17 	ldw	r6,-8(fp)
   13680:	e17ffd17 	ldw	r5,-12(fp)
   13684:	e13ffc17 	ldw	r4,-16(fp)
   13688:	00139ec0 	call	139ec <alt_avalon_i2c_master_transmit>
   1368c:	e0bffa15 	stw	r2,-24(fp)
      }
      if ((status==ALT_AVALON_I2C_ARB_LOST_ERR) || (status==ALT_AVALON_I2C_NACK_ERR) || (status==ALT_AVALON_I2C_BUSY)) continue;
   13690:	e0bffa17 	ldw	r2,-24(fp)
   13694:	10bffea0 	cmpeqi	r2,r2,-6
   13698:	1000061e 	bne	r2,zero,136b4 <alt_avalon_i2c_master_tx+0xb4>
   1369c:	e0bffa17 	ldw	r2,-24(fp)
   136a0:	10bffee0 	cmpeqi	r2,r2,-5
   136a4:	1000031e 	bne	r2,zero,136b4 <alt_avalon_i2c_master_tx+0xb4>
   136a8:	e0bffa17 	ldw	r2,-24(fp)
   136ac:	10bffe58 	cmpnei	r2,r2,-7
   136b0:	1000061e 	bne	r2,zero,136cc <alt_avalon_i2c_master_tx+0xcc>
   136b4:	0001883a 	nop
                                       const alt_u8 use_interrupts)
{
    ALT_AVALON_I2C_STATUS_CODE status;
    alt_u32 retry=10000;  
    
    while (retry--)
   136b8:	e0bffb17 	ldw	r2,-20(fp)
   136bc:	10ffffc4 	addi	r3,r2,-1
   136c0:	e0fffb15 	stw	r3,-20(fp)
   136c4:	103fda1e 	bne	r2,zero,13630 <__alt_mem_Onchip_SRAM+0xf8013630>
   136c8:	00000106 	br	136d0 <alt_avalon_i2c_master_tx+0xd0>
      else
      {
         status = alt_avalon_i2c_master_transmit(i2c_dev, buffer, size, ALT_AVALON_I2C_NO_RESTART, ALT_AVALON_I2C_STOP);
      }
      if ((status==ALT_AVALON_I2C_ARB_LOST_ERR) || (status==ALT_AVALON_I2C_NACK_ERR) || (status==ALT_AVALON_I2C_BUSY)) continue;
      break;
   136cc:	0001883a 	nop
    }

    return status;
   136d0:	e0bffa17 	ldw	r2,-24(fp)
}        
   136d4:	e037883a 	mov	sp,fp
   136d8:	dfc00117 	ldw	ra,4(sp)
   136dc:	df000017 	ldw	fp,0(sp)
   136e0:	dec00204 	addi	sp,sp,8
   136e4:	f800283a 	ret

000136e8 <alt_avalon_i2c_master_rx>:
/*receive function with retry and optionally interrupts*/
ALT_AVALON_I2C_STATUS_CODE alt_avalon_i2c_master_rx(ALT_AVALON_I2C_DEV_t *i2c_dev,
                                       alt_u8 * buffer,
                                       const alt_u32 size,
                                       const alt_u8 use_interrupts)
{
   136e8:	defff704 	addi	sp,sp,-36
   136ec:	dfc00815 	stw	ra,32(sp)
   136f0:	df000715 	stw	fp,28(sp)
   136f4:	df000704 	addi	fp,sp,28
   136f8:	e13ffc15 	stw	r4,-16(fp)
   136fc:	e17ffd15 	stw	r5,-12(fp)
   13700:	e1bffe15 	stw	r6,-8(fp)
   13704:	3805883a 	mov	r2,r7
   13708:	e0bfff05 	stb	r2,-4(fp)
    ALT_AVALON_I2C_STATUS_CODE status;
    alt_u32 retry=10000;  
   1370c:	0089c404 	movi	r2,10000
   13710:	e0bffb15 	stw	r2,-20(fp)
    
    if (use_interrupts) 
   13714:	e0bfff03 	ldbu	r2,-4(fp)
   13718:	10003426 	beq	r2,zero,137ec <alt_avalon_i2c_master_rx+0x104>
    {
      while (retry--) 
   1371c:	00001706 	br	1377c <alt_avalon_i2c_master_rx+0x94>
      {
        if (retry<10) alt_busy_sleep(10000);      
   13720:	e0bffb17 	ldw	r2,-20(fp)
   13724:	108002a8 	cmpgeui	r2,r2,10
   13728:	1000021e 	bne	r2,zero,13734 <alt_avalon_i2c_master_rx+0x4c>
   1372c:	0109c404 	movi	r4,10000
   13730:	00156f80 	call	156f8 <alt_busy_sleep>
        status = alt_avalon_i2c_master_receive_using_interrupts(i2c_dev, buffer, size, ALT_AVALON_I2C_NO_RESTART, ALT_AVALON_I2C_STOP);     
   13734:	00800044 	movi	r2,1
   13738:	d8800015 	stw	r2,0(sp)
   1373c:	000f883a 	mov	r7,zero
   13740:	e1bffe17 	ldw	r6,-8(fp)
   13744:	e17ffd17 	ldw	r5,-12(fp)
   13748:	e13ffc17 	ldw	r4,-16(fp)
   1374c:	0013fc80 	call	13fc8 <alt_avalon_i2c_master_receive_using_interrupts>
   13750:	e0bffa15 	stw	r2,-24(fp)
        if ((status==ALT_AVALON_I2C_ARB_LOST_ERR) || (status==ALT_AVALON_I2C_NACK_ERR) || (status==ALT_AVALON_I2C_BUSY)) continue;
   13754:	e0bffa17 	ldw	r2,-24(fp)
   13758:	10bffea0 	cmpeqi	r2,r2,-6
   1375c:	1000061e 	bne	r2,zero,13778 <alt_avalon_i2c_master_rx+0x90>
   13760:	e0bffa17 	ldw	r2,-24(fp)
   13764:	10bffee0 	cmpeqi	r2,r2,-5
   13768:	1000031e 	bne	r2,zero,13778 <alt_avalon_i2c_master_rx+0x90>
   1376c:	e0bffa17 	ldw	r2,-24(fp)
   13770:	10bffe58 	cmpnei	r2,r2,-7
   13774:	1000221e 	bne	r2,zero,13800 <alt_avalon_i2c_master_rx+0x118>
   13778:	0001883a 	nop
    ALT_AVALON_I2C_STATUS_CODE status;
    alt_u32 retry=10000;  
    
    if (use_interrupts) 
    {
      while (retry--) 
   1377c:	e0bffb17 	ldw	r2,-20(fp)
   13780:	10ffffc4 	addi	r3,r2,-1
   13784:	e0fffb15 	stw	r3,-20(fp)
   13788:	103fe51e 	bne	r2,zero,13720 <__alt_mem_Onchip_SRAM+0xf8013720>
   1378c:	00001f06 	br	1380c <alt_avalon_i2c_master_rx+0x124>
    }
    else
    {
      while (retry--) 
      {
        if (retry<10) alt_busy_sleep(10000);      
   13790:	e0bffb17 	ldw	r2,-20(fp)
   13794:	108002a8 	cmpgeui	r2,r2,10
   13798:	1000021e 	bne	r2,zero,137a4 <alt_avalon_i2c_master_rx+0xbc>
   1379c:	0109c404 	movi	r4,10000
   137a0:	00156f80 	call	156f8 <alt_busy_sleep>
        status = alt_avalon_i2c_master_receive(i2c_dev, buffer, size, ALT_AVALON_I2C_NO_RESTART, ALT_AVALON_I2C_STOP);     
   137a4:	00800044 	movi	r2,1
   137a8:	d8800015 	stw	r2,0(sp)
   137ac:	000f883a 	mov	r7,zero
   137b0:	e1bffe17 	ldw	r6,-8(fp)
   137b4:	e17ffd17 	ldw	r5,-12(fp)
   137b8:	e13ffc17 	ldw	r4,-16(fp)
   137bc:	0013db80 	call	13db8 <alt_avalon_i2c_master_receive>
   137c0:	e0bffa15 	stw	r2,-24(fp)
        if ((status==ALT_AVALON_I2C_ARB_LOST_ERR) || (status==ALT_AVALON_I2C_NACK_ERR) || (status==ALT_AVALON_I2C_BUSY)) continue;
   137c4:	e0bffa17 	ldw	r2,-24(fp)
   137c8:	10bffea0 	cmpeqi	r2,r2,-6
   137cc:	1000061e 	bne	r2,zero,137e8 <alt_avalon_i2c_master_rx+0x100>
   137d0:	e0bffa17 	ldw	r2,-24(fp)
   137d4:	10bffee0 	cmpeqi	r2,r2,-5
   137d8:	1000031e 	bne	r2,zero,137e8 <alt_avalon_i2c_master_rx+0x100>
   137dc:	e0bffa17 	ldw	r2,-24(fp)
   137e0:	10bffe58 	cmpnei	r2,r2,-7
   137e4:	1000081e 	bne	r2,zero,13808 <alt_avalon_i2c_master_rx+0x120>
   137e8:	0001883a 	nop
        break;
      }
    }
    else
    {
      while (retry--) 
   137ec:	e0bffb17 	ldw	r2,-20(fp)
   137f0:	10ffffc4 	addi	r3,r2,-1
   137f4:	e0fffb15 	stw	r3,-20(fp)
   137f8:	103fe51e 	bne	r2,zero,13790 <__alt_mem_Onchip_SRAM+0xf8013790>
   137fc:	00000306 	br	1380c <alt_avalon_i2c_master_rx+0x124>
      while (retry--) 
      {
        if (retry<10) alt_busy_sleep(10000);      
        status = alt_avalon_i2c_master_receive_using_interrupts(i2c_dev, buffer, size, ALT_AVALON_I2C_NO_RESTART, ALT_AVALON_I2C_STOP);     
        if ((status==ALT_AVALON_I2C_ARB_LOST_ERR) || (status==ALT_AVALON_I2C_NACK_ERR) || (status==ALT_AVALON_I2C_BUSY)) continue;
        break;
   13800:	0001883a 	nop
   13804:	00000106 	br	1380c <alt_avalon_i2c_master_rx+0x124>
      while (retry--) 
      {
        if (retry<10) alt_busy_sleep(10000);      
        status = alt_avalon_i2c_master_receive(i2c_dev, buffer, size, ALT_AVALON_I2C_NO_RESTART, ALT_AVALON_I2C_STOP);     
        if ((status==ALT_AVALON_I2C_ARB_LOST_ERR) || (status==ALT_AVALON_I2C_NACK_ERR) || (status==ALT_AVALON_I2C_BUSY)) continue;
        break;
   13808:	0001883a 	nop
      }
    }
    
    return status;
   1380c:	e0bffa17 	ldw	r2,-24(fp)
}        
   13810:	e037883a 	mov	sp,fp
   13814:	dfc00117 	ldw	ra,4(sp)
   13818:	df000017 	ldw	fp,0(sp)
   1381c:	dec00204 	addi	sp,sp,8
   13820:	f800283a 	ret

00013824 <alt_avalon_i2c_master_tx_rx>:
                                       const alt_u8 * txbuffer,
                                       const alt_u32 txsize,
                                       alt_u8 * rxbuffer,
                                       const alt_u32 rxsize,
                                       const alt_u8 use_interrupts)                                       
{
   13824:	defff604 	addi	sp,sp,-40
   13828:	dfc00915 	stw	ra,36(sp)
   1382c:	df000815 	stw	fp,32(sp)
   13830:	df000804 	addi	fp,sp,32
   13834:	e13ffb15 	stw	r4,-20(fp)
   13838:	e17ffc15 	stw	r5,-16(fp)
   1383c:	e1bffd15 	stw	r6,-12(fp)
   13840:	e1fffe15 	stw	r7,-8(fp)
   13844:	e0800317 	ldw	r2,12(fp)
   13848:	e0bfff05 	stb	r2,-4(fp)
    ALT_AVALON_I2C_STATUS_CODE status;
    alt_u32 retry=10000;  
   1384c:	0089c404 	movi	r2,10000
   13850:	e0bffa15 	stw	r2,-24(fp)
    
    if (use_interrupts)
   13854:	e0bfff03 	ldbu	r2,-4(fp)
   13858:	10005626 	beq	r2,zero,139b4 <alt_avalon_i2c_master_tx_rx+0x190>
    {
      while (retry--) 
   1385c:	00002806 	br	13900 <alt_avalon_i2c_master_tx_rx+0xdc>
      {
        if (retry<10) alt_busy_sleep(10000);      
   13860:	e0bffa17 	ldw	r2,-24(fp)
   13864:	108002a8 	cmpgeui	r2,r2,10
   13868:	1000021e 	bne	r2,zero,13874 <alt_avalon_i2c_master_tx_rx+0x50>
   1386c:	0109c404 	movi	r4,10000
   13870:	00156f80 	call	156f8 <alt_busy_sleep>
        status = alt_avalon_i2c_master_transmit_using_interrupts(i2c_dev, txbuffer, txsize, ALT_AVALON_I2C_NO_RESTART, ALT_AVALON_I2C_NO_STOP);     
   13874:	d8000015 	stw	zero,0(sp)
   13878:	000f883a 	mov	r7,zero
   1387c:	e1bffd17 	ldw	r6,-12(fp)
   13880:	e17ffc17 	ldw	r5,-16(fp)
   13884:	e13ffb17 	ldw	r4,-20(fp)
   13888:	0013bac0 	call	13bac <alt_avalon_i2c_master_transmit_using_interrupts>
   1388c:	e0bff915 	stw	r2,-28(fp)
        if ((status==ALT_AVALON_I2C_ARB_LOST_ERR) || (status==ALT_AVALON_I2C_NACK_ERR) || (status==ALT_AVALON_I2C_BUSY)) continue;
   13890:	e0bff917 	ldw	r2,-28(fp)
   13894:	10bffea0 	cmpeqi	r2,r2,-6
   13898:	1000191e 	bne	r2,zero,13900 <alt_avalon_i2c_master_tx_rx+0xdc>
   1389c:	e0bff917 	ldw	r2,-28(fp)
   138a0:	10bffee0 	cmpeqi	r2,r2,-5
   138a4:	1000161e 	bne	r2,zero,13900 <alt_avalon_i2c_master_tx_rx+0xdc>
   138a8:	e0bff917 	ldw	r2,-28(fp)
   138ac:	10bffe58 	cmpnei	r2,r2,-7
   138b0:	1000011e 	bne	r2,zero,138b8 <alt_avalon_i2c_master_tx_rx+0x94>
   138b4:	00001206 	br	13900 <alt_avalon_i2c_master_tx_rx+0xdc>
  
        status = alt_avalon_i2c_master_receive_using_interrupts(i2c_dev, rxbuffer, rxsize, ALT_AVALON_I2C_RESTART, ALT_AVALON_I2C_STOP);     
   138b8:	00800044 	movi	r2,1
   138bc:	d8800015 	stw	r2,0(sp)
   138c0:	01c00044 	movi	r7,1
   138c4:	e1800217 	ldw	r6,8(fp)
   138c8:	e17ffe17 	ldw	r5,-8(fp)
   138cc:	e13ffb17 	ldw	r4,-20(fp)
   138d0:	0013fc80 	call	13fc8 <alt_avalon_i2c_master_receive_using_interrupts>
   138d4:	e0bff915 	stw	r2,-28(fp)
        if ((status==ALT_AVALON_I2C_ARB_LOST_ERR) || (status==ALT_AVALON_I2C_NACK_ERR) || (status==ALT_AVALON_I2C_BUSY)) continue;
   138d8:	e0bff917 	ldw	r2,-28(fp)
   138dc:	10bffea0 	cmpeqi	r2,r2,-6
   138e0:	1000061e 	bne	r2,zero,138fc <alt_avalon_i2c_master_tx_rx+0xd8>
   138e4:	e0bff917 	ldw	r2,-28(fp)
   138e8:	10bffee0 	cmpeqi	r2,r2,-5
   138ec:	1000031e 	bne	r2,zero,138fc <alt_avalon_i2c_master_tx_rx+0xd8>
   138f0:	e0bff917 	ldw	r2,-28(fp)
   138f4:	10bffe58 	cmpnei	r2,r2,-7
   138f8:	1000331e 	bne	r2,zero,139c8 <alt_avalon_i2c_master_tx_rx+0x1a4>
   138fc:	0001883a 	nop
    ALT_AVALON_I2C_STATUS_CODE status;
    alt_u32 retry=10000;  
    
    if (use_interrupts)
    {
      while (retry--) 
   13900:	e0bffa17 	ldw	r2,-24(fp)
   13904:	10ffffc4 	addi	r3,r2,-1
   13908:	e0fffa15 	stw	r3,-24(fp)
   1390c:	103fd41e 	bne	r2,zero,13860 <__alt_mem_Onchip_SRAM+0xf8013860>
   13910:	00003006 	br	139d4 <alt_avalon_i2c_master_tx_rx+0x1b0>
    }
    else 
    {
      while (retry--) 
      {
        if (retry<10) alt_busy_sleep(10000);      
   13914:	e0bffa17 	ldw	r2,-24(fp)
   13918:	108002a8 	cmpgeui	r2,r2,10
   1391c:	1000021e 	bne	r2,zero,13928 <alt_avalon_i2c_master_tx_rx+0x104>
   13920:	0109c404 	movi	r4,10000
   13924:	00156f80 	call	156f8 <alt_busy_sleep>
        status = alt_avalon_i2c_master_transmit(i2c_dev, txbuffer, txsize, ALT_AVALON_I2C_NO_RESTART, ALT_AVALON_I2C_NO_STOP);     
   13928:	d8000015 	stw	zero,0(sp)
   1392c:	000f883a 	mov	r7,zero
   13930:	e1bffd17 	ldw	r6,-12(fp)
   13934:	e17ffc17 	ldw	r5,-16(fp)
   13938:	e13ffb17 	ldw	r4,-20(fp)
   1393c:	00139ec0 	call	139ec <alt_avalon_i2c_master_transmit>
   13940:	e0bff915 	stw	r2,-28(fp)
        if ((status==ALT_AVALON_I2C_ARB_LOST_ERR) || (status==ALT_AVALON_I2C_NACK_ERR) || (status==ALT_AVALON_I2C_BUSY)) continue;
   13944:	e0bff917 	ldw	r2,-28(fp)
   13948:	10bffea0 	cmpeqi	r2,r2,-6
   1394c:	1000191e 	bne	r2,zero,139b4 <alt_avalon_i2c_master_tx_rx+0x190>
   13950:	e0bff917 	ldw	r2,-28(fp)
   13954:	10bffee0 	cmpeqi	r2,r2,-5
   13958:	1000161e 	bne	r2,zero,139b4 <alt_avalon_i2c_master_tx_rx+0x190>
   1395c:	e0bff917 	ldw	r2,-28(fp)
   13960:	10bffe58 	cmpnei	r2,r2,-7
   13964:	1000011e 	bne	r2,zero,1396c <alt_avalon_i2c_master_tx_rx+0x148>
   13968:	00001206 	br	139b4 <alt_avalon_i2c_master_tx_rx+0x190>

        status = alt_avalon_i2c_master_receive(i2c_dev, rxbuffer, rxsize, ALT_AVALON_I2C_RESTART, ALT_AVALON_I2C_STOP);     
   1396c:	00800044 	movi	r2,1
   13970:	d8800015 	stw	r2,0(sp)
   13974:	01c00044 	movi	r7,1
   13978:	e1800217 	ldw	r6,8(fp)
   1397c:	e17ffe17 	ldw	r5,-8(fp)
   13980:	e13ffb17 	ldw	r4,-20(fp)
   13984:	0013db80 	call	13db8 <alt_avalon_i2c_master_receive>
   13988:	e0bff915 	stw	r2,-28(fp)
        if ((status==ALT_AVALON_I2C_ARB_LOST_ERR) || (status==ALT_AVALON_I2C_NACK_ERR) || (status==ALT_AVALON_I2C_BUSY)) continue;
   1398c:	e0bff917 	ldw	r2,-28(fp)
   13990:	10bffea0 	cmpeqi	r2,r2,-6
   13994:	1000061e 	bne	r2,zero,139b0 <alt_avalon_i2c_master_tx_rx+0x18c>
   13998:	e0bff917 	ldw	r2,-28(fp)
   1399c:	10bffee0 	cmpeqi	r2,r2,-5
   139a0:	1000031e 	bne	r2,zero,139b0 <alt_avalon_i2c_master_tx_rx+0x18c>
   139a4:	e0bff917 	ldw	r2,-28(fp)
   139a8:	10bffe58 	cmpnei	r2,r2,-7
   139ac:	1000081e 	bne	r2,zero,139d0 <alt_avalon_i2c_master_tx_rx+0x1ac>
   139b0:	0001883a 	nop
        break;
      }
    }
    else 
    {
      while (retry--) 
   139b4:	e0bffa17 	ldw	r2,-24(fp)
   139b8:	10ffffc4 	addi	r3,r2,-1
   139bc:	e0fffa15 	stw	r3,-24(fp)
   139c0:	103fd41e 	bne	r2,zero,13914 <__alt_mem_Onchip_SRAM+0xf8013914>
   139c4:	00000306 	br	139d4 <alt_avalon_i2c_master_tx_rx+0x1b0>
        if ((status==ALT_AVALON_I2C_ARB_LOST_ERR) || (status==ALT_AVALON_I2C_NACK_ERR) || (status==ALT_AVALON_I2C_BUSY)) continue;
  
        status = alt_avalon_i2c_master_receive_using_interrupts(i2c_dev, rxbuffer, rxsize, ALT_AVALON_I2C_RESTART, ALT_AVALON_I2C_STOP);     
        if ((status==ALT_AVALON_I2C_ARB_LOST_ERR) || (status==ALT_AVALON_I2C_NACK_ERR) || (status==ALT_AVALON_I2C_BUSY)) continue;
  
        break;
   139c8:	0001883a 	nop
   139cc:	00000106 	br	139d4 <alt_avalon_i2c_master_tx_rx+0x1b0>
        if ((status==ALT_AVALON_I2C_ARB_LOST_ERR) || (status==ALT_AVALON_I2C_NACK_ERR) || (status==ALT_AVALON_I2C_BUSY)) continue;

        status = alt_avalon_i2c_master_receive(i2c_dev, rxbuffer, rxsize, ALT_AVALON_I2C_RESTART, ALT_AVALON_I2C_STOP);     
        if ((status==ALT_AVALON_I2C_ARB_LOST_ERR) || (status==ALT_AVALON_I2C_NACK_ERR) || (status==ALT_AVALON_I2C_BUSY)) continue;
  
        break;
   139d0:	0001883a 	nop
      }
    }
    
    return status;
   139d4:	e0bff917 	ldw	r2,-28(fp)
}                                       
   139d8:	e037883a 	mov	sp,fp
   139dc:	dfc00117 	ldw	ra,4(sp)
   139e0:	df000017 	ldw	fp,0(sp)
   139e4:	dec00204 	addi	sp,sp,8
   139e8:	f800283a 	ret

000139ec <alt_avalon_i2c_master_transmit>:
ALT_AVALON_I2C_STATUS_CODE alt_avalon_i2c_master_transmit(ALT_AVALON_I2C_DEV_t *i2c_dev,
                                        const alt_u8 * buffer,
                                        alt_u32 size,
                                        const alt_u8 issue_restart,
                                        const alt_u8 issue_stop)
{
   139ec:	defff704 	addi	sp,sp,-36
   139f0:	dfc00815 	stw	ra,32(sp)
   139f4:	df000715 	stw	fp,28(sp)
   139f8:	df000704 	addi	fp,sp,28
   139fc:	e13ffb15 	stw	r4,-20(fp)
   13a00:	e17ffc15 	stw	r5,-16(fp)
   13a04:	e1bffd15 	stw	r6,-12(fp)
   13a08:	3807883a 	mov	r3,r7
   13a0c:	e0800217 	ldw	r2,8(fp)
   13a10:	e0fffe05 	stb	r3,-8(fp)
   13a14:	e0bfff05 	stb	r2,-4(fp)
    ALT_AVALON_I2C_STATUS_CODE status = ALT_AVALON_I2C_SUCCESS;
   13a18:	e03ffa15 	stw	zero,-24(fp)
    alt_u32 timeout=size * 10000;
   13a1c:	0149c404 	movi	r5,10000
   13a20:	e13ffd17 	ldw	r4,-12(fp)
   13a24:	0000ef80 	call	ef8 <__mulsi3>
   13a28:	e0bff915 	stw	r2,-28(fp)
    
    if (size==0)
   13a2c:	e0bffd17 	ldw	r2,-12(fp)
   13a30:	1000021e 	bne	r2,zero,13a3c <alt_avalon_i2c_master_transmit+0x50>
    {
      return ALT_AVALON_I2C_SUCCESS;
   13a34:	0005883a 	mov	r2,zero
   13a38:	00005706 	br	13b98 <alt_avalon_i2c_master_transmit+0x1ac>
    }
    
    /*if a new transaction, enable ip and clear int status*/
    if (!issue_restart) 
   13a3c:	e0bffe03 	ldbu	r2,-8(fp)
   13a40:	10000a1e 	bne	r2,zero,13a6c <alt_avalon_i2c_master_transmit+0x80>
    {
      /*enable the ip.  The ip is disabled and enabled for each transaction.*/
      status = alt_avalon_i2c_enable(i2c_dev);
   13a44:	e13ffb17 	ldw	r4,-20(fp)
   13a48:	0012c680 	call	12c68 <alt_avalon_i2c_enable>
   13a4c:	e0bffa15 	stw	r2,-24(fp)
      if (status != ALT_AVALON_I2C_SUCCESS)
   13a50:	e0bffa17 	ldw	r2,-24(fp)
   13a54:	10000226 	beq	r2,zero,13a60 <alt_avalon_i2c_master_transmit+0x74>
      {
        return status;
   13a58:	e0bffa17 	ldw	r2,-24(fp)
   13a5c:	00004e06 	br	13b98 <alt_avalon_i2c_master_transmit+0x1ac>
      }

      /*Clear the ISR reg*/
      alt_avalon_i2c_int_clear(i2c_dev,ALT_AVALON_I2C_ISR_ALL_CLEARABLE_INTS_MSK);
   13a60:	01400704 	movi	r5,28
   13a64:	e13ffb17 	ldw	r4,-20(fp)
   13a68:	00142540 	call	14254 <alt_avalon_i2c_int_clear>
    }

    /*Start Write, transmit address. */
    status = alt_avalon_i2c_send_address(i2c_dev,ALT_AVALON_I2C_WRITE,issue_restart);
   13a6c:	e0bffe03 	ldbu	r2,-8(fp)
   13a70:	100d883a 	mov	r6,r2
   13a74:	000b883a 	mov	r5,zero
   13a78:	e13ffb17 	ldw	r4,-20(fp)
   13a7c:	00132d00 	call	132d0 <alt_avalon_i2c_send_address>
   13a80:	e0bffa15 	stw	r2,-24(fp)
      
    if (status == ALT_AVALON_I2C_SUCCESS)
   13a84:	e0bffa17 	ldw	r2,-24(fp)
   13a88:	1000271e 	bne	r2,zero,13b28 <alt_avalon_i2c_master_transmit+0x13c>
    {
        while ((size > 1) && (status == ALT_AVALON_I2C_SUCCESS))
   13a8c:	00000f06 	br	13acc <alt_avalon_i2c_master_transmit+0xe0>
        {
            status = alt_avalon_i2c_cmd_write(i2c_dev, *buffer, ALT_AVALON_I2C_NO_RESTART, ALT_AVALON_I2C_NO_STOP);
   13a90:	e0bffc17 	ldw	r2,-16(fp)
   13a94:	10800003 	ldbu	r2,0(r2)
   13a98:	10803fcc 	andi	r2,r2,255
   13a9c:	000f883a 	mov	r7,zero
   13aa0:	000d883a 	mov	r6,zero
   13aa4:	100b883a 	mov	r5,r2
   13aa8:	e13ffb17 	ldw	r4,-20(fp)
   13aac:	00131ec0 	call	131ec <alt_avalon_i2c_cmd_write>
   13ab0:	e0bffa15 	stw	r2,-24(fp)
            
            ++buffer;
   13ab4:	e0bffc17 	ldw	r2,-16(fp)
   13ab8:	10800044 	addi	r2,r2,1
   13abc:	e0bffc15 	stw	r2,-16(fp)
            --size;
   13ac0:	e0bffd17 	ldw	r2,-12(fp)
   13ac4:	10bfffc4 	addi	r2,r2,-1
   13ac8:	e0bffd15 	stw	r2,-12(fp)
    /*Start Write, transmit address. */
    status = alt_avalon_i2c_send_address(i2c_dev,ALT_AVALON_I2C_WRITE,issue_restart);
      
    if (status == ALT_AVALON_I2C_SUCCESS)
    {
        while ((size > 1) && (status == ALT_AVALON_I2C_SUCCESS))
   13acc:	e0bffd17 	ldw	r2,-12(fp)
   13ad0:	108000b0 	cmpltui	r2,r2,2
   13ad4:	1000021e 	bne	r2,zero,13ae0 <alt_avalon_i2c_master_transmit+0xf4>
   13ad8:	e0bffa17 	ldw	r2,-24(fp)
   13adc:	103fec26 	beq	r2,zero,13a90 <__alt_mem_Onchip_SRAM+0xf8013a90>
            ++buffer;
            --size;
        }

        /* Last byte */
        if (status == ALT_AVALON_I2C_SUCCESS)
   13ae0:	e0bffa17 	ldw	r2,-24(fp)
   13ae4:	1000101e 	bne	r2,zero,13b28 <alt_avalon_i2c_master_transmit+0x13c>
        {
            status = alt_avalon_i2c_cmd_write(i2c_dev, *buffer, ALT_AVALON_I2C_NO_RESTART, issue_stop);
   13ae8:	e0bffc17 	ldw	r2,-16(fp)
   13aec:	10800003 	ldbu	r2,0(r2)
   13af0:	10803fcc 	andi	r2,r2,255
   13af4:	e0ffff03 	ldbu	r3,-4(fp)
   13af8:	180f883a 	mov	r7,r3
   13afc:	000d883a 	mov	r6,zero
   13b00:	100b883a 	mov	r5,r2
   13b04:	e13ffb17 	ldw	r4,-20(fp)
   13b08:	00131ec0 	call	131ec <alt_avalon_i2c_cmd_write>
   13b0c:	e0bffa15 	stw	r2,-24(fp)

            ++buffer;
   13b10:	e0bffc17 	ldw	r2,-16(fp)
   13b14:	10800044 	addi	r2,r2,1
   13b18:	e0bffc15 	stw	r2,-16(fp)
            --size;
   13b1c:	e0bffd17 	ldw	r2,-12(fp)
   13b20:	10bfffc4 	addi	r2,r2,-1
   13b24:	e0bffd15 	stw	r2,-12(fp)
        }
    }
    
    /*if end of transaction, wait until the ip is idle then disable the ip*/
    if ((issue_stop) || (status != ALT_AVALON_I2C_SUCCESS)) 
   13b28:	e0bfff03 	ldbu	r2,-4(fp)
   13b2c:	1000101e 	bne	r2,zero,13b70 <alt_avalon_i2c_master_transmit+0x184>
   13b30:	e0bffa17 	ldw	r2,-24(fp)
   13b34:	10001726 	beq	r2,zero,13b94 <alt_avalon_i2c_master_transmit+0x1a8>
    {

        while (alt_avalon_i2c_is_busy(i2c_dev))
   13b38:	00000d06 	br	13b70 <alt_avalon_i2c_master_transmit+0x184>
        {
            if (timeout<10) alt_busy_sleep(10000);
   13b3c:	e0bff917 	ldw	r2,-28(fp)
   13b40:	108002a8 	cmpgeui	r2,r2,10
   13b44:	1000021e 	bne	r2,zero,13b50 <alt_avalon_i2c_master_transmit+0x164>
   13b48:	0109c404 	movi	r4,10000
   13b4c:	00156f80 	call	156f8 <alt_busy_sleep>
            if (--timeout == 0)
   13b50:	e0bff917 	ldw	r2,-28(fp)
   13b54:	10bfffc4 	addi	r2,r2,-1
   13b58:	e0bff915 	stw	r2,-28(fp)
   13b5c:	e0bff917 	ldw	r2,-28(fp)
   13b60:	1000031e 	bne	r2,zero,13b70 <alt_avalon_i2c_master_transmit+0x184>
            {
               status = ALT_AVALON_I2C_TIMEOUT;
   13b64:	00bfff84 	movi	r2,-2
   13b68:	e0bffa15 	stw	r2,-24(fp)
               break;
   13b6c:	00000306 	br	13b7c <alt_avalon_i2c_master_transmit+0x190>
    
    /*if end of transaction, wait until the ip is idle then disable the ip*/
    if ((issue_stop) || (status != ALT_AVALON_I2C_SUCCESS)) 
    {

        while (alt_avalon_i2c_is_busy(i2c_dev))
   13b70:	e13ffb17 	ldw	r4,-20(fp)
   13b74:	00130580 	call	13058 <alt_avalon_i2c_is_busy>
   13b78:	103ff01e 	bne	r2,zero,13b3c <__alt_mem_Onchip_SRAM+0xf8013b3c>
               break;
            }
        }
     
        /*check for a nack error*/
        alt_avalon_i2c_check_nack(i2c_dev,&status);
   13b7c:	e0bffa04 	addi	r2,fp,-24
   13b80:	100b883a 	mov	r5,r2
   13b84:	e13ffb17 	ldw	r4,-20(fp)
   13b88:	001342c0 	call	1342c <alt_avalon_i2c_check_nack>
        
        /*disable the ip.  The ip is disabled and enabled for each transaction.*/
        alt_avalon_i2c_disable(i2c_dev);
   13b8c:	e13ffb17 	ldw	r4,-20(fp)
   13b90:	0012d000 	call	12d00 <alt_avalon_i2c_disable>
    }


    return status;
   13b94:	e0bffa17 	ldw	r2,-24(fp)
}
   13b98:	e037883a 	mov	sp,fp
   13b9c:	dfc00117 	ldw	ra,4(sp)
   13ba0:	df000017 	ldw	fp,0(sp)
   13ba4:	dec00204 	addi	sp,sp,8
   13ba8:	f800283a 	ret

00013bac <alt_avalon_i2c_master_transmit_using_interrupts>:
ALT_AVALON_I2C_STATUS_CODE alt_avalon_i2c_master_transmit_using_interrupts(ALT_AVALON_I2C_DEV_t *i2c_dev,
                                        const alt_u8 * buffer,
                                        alt_u32 size,
                                        const alt_u8 issue_restart,
                                        const alt_u8 issue_stop)
{
   13bac:	defff604 	addi	sp,sp,-40
   13bb0:	dfc00915 	stw	ra,36(sp)
   13bb4:	df000815 	stw	fp,32(sp)
   13bb8:	df000804 	addi	fp,sp,32
   13bbc:	e13ffb15 	stw	r4,-20(fp)
   13bc0:	e17ffc15 	stw	r5,-16(fp)
   13bc4:	e1bffd15 	stw	r6,-12(fp)
   13bc8:	3807883a 	mov	r3,r7
   13bcc:	e0800217 	ldw	r2,8(fp)
   13bd0:	e0fffe05 	stb	r3,-8(fp)
   13bd4:	e0bfff05 	stb	r2,-4(fp)
    ALT_AVALON_I2C_STATUS_CODE status = ALT_AVALON_I2C_SUCCESS;
   13bd8:	e03ff815 	stw	zero,-32(fp)
    alt_u32 timeout=size*10000;
   13bdc:	0149c404 	movi	r5,10000
   13be0:	e13ffd17 	ldw	r4,-12(fp)
   13be4:	0000ef80 	call	ef8 <__mulsi3>
   13be8:	e0bff915 	stw	r2,-28(fp)
    IRQ_DATA_t *irq_data = i2c_dev->callback_context;    
   13bec:	e0bffb17 	ldw	r2,-20(fp)
   13bf0:	10800717 	ldw	r2,28(r2)
   13bf4:	e0bffa15 	stw	r2,-24(fp)
    
    if (size==0)
   13bf8:	e0bffd17 	ldw	r2,-12(fp)
   13bfc:	1000021e 	bne	r2,zero,13c08 <alt_avalon_i2c_master_transmit_using_interrupts+0x5c>
    {
      return ALT_AVALON_I2C_SUCCESS;
   13c00:	0005883a 	mov	r2,zero
   13c04:	00006706 	br	13da4 <alt_avalon_i2c_master_transmit_using_interrupts+0x1f8>
    }
    
    /*IS the optional interrupt handler registered??*/
    if (i2c_dev->callback != optional_irq_callback)
   13c08:	e0bffb17 	ldw	r2,-20(fp)
   13c0c:	10c00617 	ldw	r3,24(r2)
   13c10:	00800074 	movhi	r2,1
   13c14:	108a3b04 	addi	r2,r2,10476
   13c18:	18800226 	beq	r3,r2,13c24 <alt_avalon_i2c_master_transmit_using_interrupts+0x78>
    {
       return ALT_AVALON_I2C_BAD_ARG;    
   13c1c:	00bfff44 	movi	r2,-3
   13c20:	00006006 	br	13da4 <alt_avalon_i2c_master_transmit_using_interrupts+0x1f8>
    }
    
    /*if a new transaction, enable ip and clear int status*/
    if (!issue_restart) 
   13c24:	e0bffe03 	ldbu	r2,-8(fp)
   13c28:	10000a1e 	bne	r2,zero,13c54 <alt_avalon_i2c_master_transmit_using_interrupts+0xa8>
    {
      /*enable the ip.  The ip is disabled and enabled for each transaction.*/
      status = alt_avalon_i2c_enable(i2c_dev);
   13c2c:	e13ffb17 	ldw	r4,-20(fp)
   13c30:	0012c680 	call	12c68 <alt_avalon_i2c_enable>
   13c34:	e0bff815 	stw	r2,-32(fp)
      if (status != ALT_AVALON_I2C_SUCCESS)
   13c38:	e0bff817 	ldw	r2,-32(fp)
   13c3c:	10000226 	beq	r2,zero,13c48 <alt_avalon_i2c_master_transmit_using_interrupts+0x9c>
      {
        return status;
   13c40:	e0bff817 	ldw	r2,-32(fp)
   13c44:	00005706 	br	13da4 <alt_avalon_i2c_master_transmit_using_interrupts+0x1f8>
      }

      /*Clear the ISR reg*/
      alt_avalon_i2c_int_clear(i2c_dev,ALT_AVALON_I2C_ISR_ALL_CLEARABLE_INTS_MSK);
   13c48:	01400704 	movi	r5,28
   13c4c:	e13ffb17 	ldw	r4,-20(fp)
   13c50:	00142540 	call	14254 <alt_avalon_i2c_int_clear>
    }

    /*Start Write, transmit address. */
    status = alt_avalon_i2c_send_address(i2c_dev,ALT_AVALON_I2C_WRITE,issue_restart);
   13c54:	e0bffe03 	ldbu	r2,-8(fp)
   13c58:	100d883a 	mov	r6,r2
   13c5c:	000b883a 	mov	r5,zero
   13c60:	e13ffb17 	ldw	r4,-20(fp)
   13c64:	00132d00 	call	132d0 <alt_avalon_i2c_send_address>
   13c68:	e0bff815 	stw	r2,-32(fp)
        
    if (status == ALT_AVALON_I2C_SUCCESS)
   13c6c:	e0bff817 	ldw	r2,-32(fp)
   13c70:	1000271e 	bne	r2,zero,13d10 <alt_avalon_i2c_master_transmit_using_interrupts+0x164>
    {
        while ((size > 1) && (status == ALT_AVALON_I2C_SUCCESS))
   13c74:	00000f06 	br	13cb4 <alt_avalon_i2c_master_transmit_using_interrupts+0x108>
        {
            status = alt_avalon_i2c_cmd_write(i2c_dev, *buffer, ALT_AVALON_I2C_NO_RESTART, ALT_AVALON_I2C_NO_STOP);
   13c78:	e0bffc17 	ldw	r2,-16(fp)
   13c7c:	10800003 	ldbu	r2,0(r2)
   13c80:	10803fcc 	andi	r2,r2,255
   13c84:	000f883a 	mov	r7,zero
   13c88:	000d883a 	mov	r6,zero
   13c8c:	100b883a 	mov	r5,r2
   13c90:	e13ffb17 	ldw	r4,-20(fp)
   13c94:	00131ec0 	call	131ec <alt_avalon_i2c_cmd_write>
   13c98:	e0bff815 	stw	r2,-32(fp)
            
            ++buffer;
   13c9c:	e0bffc17 	ldw	r2,-16(fp)
   13ca0:	10800044 	addi	r2,r2,1
   13ca4:	e0bffc15 	stw	r2,-16(fp)
            --size;
   13ca8:	e0bffd17 	ldw	r2,-12(fp)
   13cac:	10bfffc4 	addi	r2,r2,-1
   13cb0:	e0bffd15 	stw	r2,-12(fp)
    /*Start Write, transmit address. */
    status = alt_avalon_i2c_send_address(i2c_dev,ALT_AVALON_I2C_WRITE,issue_restart);
        
    if (status == ALT_AVALON_I2C_SUCCESS)
    {
        while ((size > 1) && (status == ALT_AVALON_I2C_SUCCESS))
   13cb4:	e0bffd17 	ldw	r2,-12(fp)
   13cb8:	108000b0 	cmpltui	r2,r2,2
   13cbc:	1000021e 	bne	r2,zero,13cc8 <alt_avalon_i2c_master_transmit_using_interrupts+0x11c>
   13cc0:	e0bff817 	ldw	r2,-32(fp)
   13cc4:	103fec26 	beq	r2,zero,13c78 <__alt_mem_Onchip_SRAM+0xf8013c78>
            ++buffer;
            --size;
        }

        /* Last byte */
        if (status == ALT_AVALON_I2C_SUCCESS)
   13cc8:	e0bff817 	ldw	r2,-32(fp)
   13ccc:	1000101e 	bne	r2,zero,13d10 <alt_avalon_i2c_master_transmit_using_interrupts+0x164>
        {
            status = alt_avalon_i2c_cmd_write(i2c_dev, *buffer, ALT_AVALON_I2C_NO_RESTART, issue_stop);
   13cd0:	e0bffc17 	ldw	r2,-16(fp)
   13cd4:	10800003 	ldbu	r2,0(r2)
   13cd8:	10803fcc 	andi	r2,r2,255
   13cdc:	e0ffff03 	ldbu	r3,-4(fp)
   13ce0:	180f883a 	mov	r7,r3
   13ce4:	000d883a 	mov	r6,zero
   13ce8:	100b883a 	mov	r5,r2
   13cec:	e13ffb17 	ldw	r4,-20(fp)
   13cf0:	00131ec0 	call	131ec <alt_avalon_i2c_cmd_write>
   13cf4:	e0bff815 	stw	r2,-32(fp)

            ++buffer;
   13cf8:	e0bffc17 	ldw	r2,-16(fp)
   13cfc:	10800044 	addi	r2,r2,1
   13d00:	e0bffc15 	stw	r2,-16(fp)
            --size;
   13d04:	e0bffd17 	ldw	r2,-12(fp)
   13d08:	10bfffc4 	addi	r2,r2,-1
   13d0c:	e0bffd15 	stw	r2,-12(fp)
        }
    }
    
    /*if error, wait until the ip is idle then disable the ip*/
    if (status != ALT_AVALON_I2C_SUCCESS) 
   13d10:	e0bff817 	ldw	r2,-32(fp)
   13d14:	10001426 	beq	r2,zero,13d68 <alt_avalon_i2c_master_transmit_using_interrupts+0x1bc>
    {

        while (alt_avalon_i2c_is_busy(i2c_dev))
   13d18:	00000d06 	br	13d50 <alt_avalon_i2c_master_transmit_using_interrupts+0x1a4>
        {
            if (timeout<10) alt_busy_sleep(10000);        
   13d1c:	e0bff917 	ldw	r2,-28(fp)
   13d20:	108002a8 	cmpgeui	r2,r2,10
   13d24:	1000021e 	bne	r2,zero,13d30 <alt_avalon_i2c_master_transmit_using_interrupts+0x184>
   13d28:	0109c404 	movi	r4,10000
   13d2c:	00156f80 	call	156f8 <alt_busy_sleep>
            if (--timeout == 0)
   13d30:	e0bff917 	ldw	r2,-28(fp)
   13d34:	10bfffc4 	addi	r2,r2,-1
   13d38:	e0bff915 	stw	r2,-28(fp)
   13d3c:	e0bff917 	ldw	r2,-28(fp)
   13d40:	1000031e 	bne	r2,zero,13d50 <alt_avalon_i2c_master_transmit_using_interrupts+0x1a4>
            {
               status = ALT_AVALON_I2C_TIMEOUT;
   13d44:	00bfff84 	movi	r2,-2
   13d48:	e0bff815 	stw	r2,-32(fp)
               break;
   13d4c:	00000306 	br	13d5c <alt_avalon_i2c_master_transmit_using_interrupts+0x1b0>
    
    /*if error, wait until the ip is idle then disable the ip*/
    if (status != ALT_AVALON_I2C_SUCCESS) 
    {

        while (alt_avalon_i2c_is_busy(i2c_dev))
   13d50:	e13ffb17 	ldw	r4,-20(fp)
   13d54:	00130580 	call	13058 <alt_avalon_i2c_is_busy>
   13d58:	103ff01e 	bne	r2,zero,13d1c <__alt_mem_Onchip_SRAM+0xf8013d1c>
               break;
            }
        }
     
        /*disable the ip.  The ip is disabled and enabled for each transaction.*/
        alt_avalon_i2c_disable(i2c_dev);
   13d5c:	e13ffb17 	ldw	r4,-20(fp)
   13d60:	0012d000 	call	12d00 <alt_avalon_i2c_disable>
   13d64:	00000e06 	br	13da0 <alt_avalon_i2c_master_transmit_using_interrupts+0x1f4>
    }
    else
    {
       if (issue_stop)
   13d68:	e0bfff03 	ldbu	r2,-4(fp)
   13d6c:	10000c26 	beq	r2,zero,13da0 <alt_avalon_i2c_master_transmit_using_interrupts+0x1f4>
       {
         /* clear ISR register content */
         alt_avalon_i2c_int_clear(i2c_dev,ALT_AVALON_I2C_ISR_ALL_CLEARABLE_INTS_MSK);
   13d70:	01400704 	movi	r5,28
   13d74:	e13ffb17 	ldw	r4,-20(fp)
   13d78:	00142540 	call	14254 <alt_avalon_i2c_int_clear>
         /* set the cmd fifo threshold */
         alt_avalon_i2c_tfr_cmd_fifo_threshold_set(i2c_dev,ALT_AVALON_I2C_TFR_CMD_FIFO_EMPTY);
   13d7c:	000b883a 	mov	r5,zero
   13d80:	e13ffb17 	ldw	r4,-20(fp)
   13d84:	001449c0 	call	1449c <alt_avalon_i2c_tfr_cmd_fifo_threshold_set>
         /* set the interrupt transaction busy bit */
         irq_data->irq_busy=1;
   13d88:	e0bffa17 	ldw	r2,-24(fp)
   13d8c:	00c00044 	movi	r3,1
   13d90:	10c00215 	stw	r3,8(r2)
         /* enable the TX_READY interrupt */
         alt_avalon_i2c_int_enable(i2c_dev,ALT_AVALON_I2C_ISER_TX_READY_EN_MSK);
   13d94:	01400044 	movi	r5,1
   13d98:	e13ffb17 	ldw	r4,-20(fp)
   13d9c:	00142f80 	call	142f8 <alt_avalon_i2c_int_enable>
       }
    }
    
    return status;
   13da0:	e0bff817 	ldw	r2,-32(fp)
}
   13da4:	e037883a 	mov	sp,fp
   13da8:	dfc00117 	ldw	ra,4(sp)
   13dac:	df000017 	ldw	fp,0(sp)
   13db0:	dec00204 	addi	sp,sp,8
   13db4:	f800283a 	ret

00013db8 <alt_avalon_i2c_master_receive>:
ALT_AVALON_I2C_STATUS_CODE alt_avalon_i2c_master_receive(ALT_AVALON_I2C_DEV_t *i2c_dev,
                                       alt_u8 * buffer,
                                       const alt_u32 size,
                                       const alt_u8 issue_restart,
                                       const alt_u8 issue_stop)
{
   13db8:	defff404 	addi	sp,sp,-48
   13dbc:	dfc00b15 	stw	ra,44(sp)
   13dc0:	df000a15 	stw	fp,40(sp)
   13dc4:	df000a04 	addi	fp,sp,40
   13dc8:	e13ffb15 	stw	r4,-20(fp)
   13dcc:	e17ffc15 	stw	r5,-16(fp)
   13dd0:	e1bffd15 	stw	r6,-12(fp)
   13dd4:	3807883a 	mov	r3,r7
   13dd8:	e0800217 	ldw	r2,8(fp)
   13ddc:	e0fffe05 	stb	r3,-8(fp)
   13de0:	e0bfff05 	stb	r2,-4(fp)
    ALT_AVALON_I2C_STATUS_CODE status = ALT_AVALON_I2C_SUCCESS;
   13de4:	e03ff915 	stw	zero,-28(fp)
    alt_u32 timeout;
    alt_u32 bytes_read=0;
   13de8:	e03ff715 	stw	zero,-36(fp)
    alt_u32 bytes_written=0;
   13dec:	e03ff815 	stw	zero,-32(fp)
    alt_u32 temp_bytes_read;
    
    if (size==0)
   13df0:	e0bffd17 	ldw	r2,-12(fp)
   13df4:	1000021e 	bne	r2,zero,13e00 <alt_avalon_i2c_master_receive+0x48>
    {
      return ALT_AVALON_I2C_SUCCESS;
   13df8:	0005883a 	mov	r2,zero
   13dfc:	00006d06 	br	13fb4 <alt_avalon_i2c_master_receive+0x1fc>
    }
    
    /*if a new transaction, enable ip and clear int status*/
    if (!issue_restart) 
   13e00:	e0bffe03 	ldbu	r2,-8(fp)
   13e04:	10000a1e 	bne	r2,zero,13e30 <alt_avalon_i2c_master_receive+0x78>
    {
       /*enable the ip.  The ip is disabled and enabled for each transaction.*/
      status = alt_avalon_i2c_enable(i2c_dev);
   13e08:	e13ffb17 	ldw	r4,-20(fp)
   13e0c:	0012c680 	call	12c68 <alt_avalon_i2c_enable>
   13e10:	e0bff915 	stw	r2,-28(fp)
      if (status != ALT_AVALON_I2C_SUCCESS)
   13e14:	e0bff917 	ldw	r2,-28(fp)
   13e18:	10000226 	beq	r2,zero,13e24 <alt_avalon_i2c_master_receive+0x6c>
      {
        return status;
   13e1c:	e0bff917 	ldw	r2,-28(fp)
   13e20:	00006406 	br	13fb4 <alt_avalon_i2c_master_receive+0x1fc>
      }

      /*Clear the ISR reg*/
      alt_avalon_i2c_int_clear(i2c_dev,ALT_AVALON_I2C_ISR_ALL_CLEARABLE_INTS_MSK);
   13e24:	01400704 	movi	r5,28
   13e28:	e13ffb17 	ldw	r4,-20(fp)
   13e2c:	00142540 	call	14254 <alt_avalon_i2c_int_clear>
    }

    /*Start Write, transmit address. */
    status = alt_avalon_i2c_send_address(i2c_dev,ALT_AVALON_I2C_READ,issue_restart);
   13e30:	e0bffe03 	ldbu	r2,-8(fp)
   13e34:	100d883a 	mov	r6,r2
   13e38:	01400044 	movi	r5,1
   13e3c:	e13ffb17 	ldw	r4,-20(fp)
   13e40:	00132d00 	call	132d0 <alt_avalon_i2c_send_address>
   13e44:	e0bff915 	stw	r2,-28(fp)

    if (status == ALT_AVALON_I2C_SUCCESS)
   13e48:	e0bff917 	ldw	r2,-28(fp)
   13e4c:	1000341e 	bne	r2,zero,13f20 <alt_avalon_i2c_master_receive+0x168>
    {
        while ((bytes_written < (size-1)) && (status == ALT_AVALON_I2C_SUCCESS))
   13e50:	00001906 	br	13eb8 <alt_avalon_i2c_master_receive+0x100>
        {
            status = alt_avalon_i2c_cmd_write(i2c_dev, 0, ALT_AVALON_I2C_NO_RESTART, ALT_AVALON_I2C_NO_STOP);
   13e54:	000f883a 	mov	r7,zero
   13e58:	000d883a 	mov	r6,zero
   13e5c:	000b883a 	mov	r5,zero
   13e60:	e13ffb17 	ldw	r4,-20(fp)
   13e64:	00131ec0 	call	131ec <alt_avalon_i2c_cmd_write>
   13e68:	e0bff915 	stw	r2,-28(fp)
            bytes_written++;
   13e6c:	e0bff817 	ldw	r2,-32(fp)
   13e70:	10800044 	addi	r2,r2,1
   13e74:	e0bff815 	stw	r2,-32(fp)
            if (status == ALT_AVALON_I2C_SUCCESS)
   13e78:	e0bff917 	ldw	r2,-28(fp)
   13e7c:	10000e1e 	bne	r2,zero,13eb8 <alt_avalon_i2c_master_receive+0x100>
            {
               alt_avalon_i2c_rx_read_available(i2c_dev, buffer,0,&temp_bytes_read);
   13e80:	e0bffa04 	addi	r2,fp,-24
   13e84:	100f883a 	mov	r7,r2
   13e88:	000d883a 	mov	r6,zero
   13e8c:	e17ffc17 	ldw	r5,-16(fp)
   13e90:	e13ffb17 	ldw	r4,-20(fp)
   13e94:	001309c0 	call	1309c <alt_avalon_i2c_rx_read_available>
               buffer+=temp_bytes_read;
   13e98:	e0bffa17 	ldw	r2,-24(fp)
   13e9c:	e0fffc17 	ldw	r3,-16(fp)
   13ea0:	1885883a 	add	r2,r3,r2
   13ea4:	e0bffc15 	stw	r2,-16(fp)
               bytes_read+=temp_bytes_read;
   13ea8:	e0bffa17 	ldw	r2,-24(fp)
   13eac:	e0fff717 	ldw	r3,-36(fp)
   13eb0:	1885883a 	add	r2,r3,r2
   13eb4:	e0bff715 	stw	r2,-36(fp)
    /*Start Write, transmit address. */
    status = alt_avalon_i2c_send_address(i2c_dev,ALT_AVALON_I2C_READ,issue_restart);

    if (status == ALT_AVALON_I2C_SUCCESS)
    {
        while ((bytes_written < (size-1)) && (status == ALT_AVALON_I2C_SUCCESS))
   13eb8:	e0bffd17 	ldw	r2,-12(fp)
   13ebc:	10bfffc4 	addi	r2,r2,-1
   13ec0:	e0fff817 	ldw	r3,-32(fp)
   13ec4:	1880022e 	bgeu	r3,r2,13ed0 <alt_avalon_i2c_master_receive+0x118>
   13ec8:	e0bff917 	ldw	r2,-28(fp)
   13ecc:	103fe126 	beq	r2,zero,13e54 <__alt_mem_Onchip_SRAM+0xf8013e54>
               bytes_read+=temp_bytes_read;
            }
        }

        /* Last byte */
        if (status == ALT_AVALON_I2C_SUCCESS)
   13ed0:	e0bff917 	ldw	r2,-28(fp)
   13ed4:	1000121e 	bne	r2,zero,13f20 <alt_avalon_i2c_master_receive+0x168>
        {
            status = alt_avalon_i2c_cmd_write(i2c_dev, 0, ALT_AVALON_I2C_NO_RESTART, issue_stop);
   13ed8:	e0bfff03 	ldbu	r2,-4(fp)
   13edc:	100f883a 	mov	r7,r2
   13ee0:	000d883a 	mov	r6,zero
   13ee4:	000b883a 	mov	r5,zero
   13ee8:	e13ffb17 	ldw	r4,-20(fp)
   13eec:	00131ec0 	call	131ec <alt_avalon_i2c_cmd_write>
   13ef0:	e0bff915 	stw	r2,-28(fp)
        }
    }
    
    while ((bytes_read < size) && (status==ALT_AVALON_I2C_SUCCESS)) 
   13ef4:	00000a06 	br	13f20 <alt_avalon_i2c_master_receive+0x168>
    {
        status=alt_avalon_i2c_rx_read(i2c_dev, buffer);
   13ef8:	e17ffc17 	ldw	r5,-16(fp)
   13efc:	e13ffb17 	ldw	r4,-20(fp)
   13f00:	00131440 	call	13144 <alt_avalon_i2c_rx_read>
   13f04:	e0bff915 	stw	r2,-28(fp)
        buffer++;
   13f08:	e0bffc17 	ldw	r2,-16(fp)
   13f0c:	10800044 	addi	r2,r2,1
   13f10:	e0bffc15 	stw	r2,-16(fp)
        bytes_read++;
   13f14:	e0bff717 	ldw	r2,-36(fp)
   13f18:	10800044 	addi	r2,r2,1
   13f1c:	e0bff715 	stw	r2,-36(fp)
        {
            status = alt_avalon_i2c_cmd_write(i2c_dev, 0, ALT_AVALON_I2C_NO_RESTART, issue_stop);
        }
    }
    
    while ((bytes_read < size) && (status==ALT_AVALON_I2C_SUCCESS)) 
   13f20:	e0fff717 	ldw	r3,-36(fp)
   13f24:	e0bffd17 	ldw	r2,-12(fp)
   13f28:	1880022e 	bgeu	r3,r2,13f34 <alt_avalon_i2c_master_receive+0x17c>
   13f2c:	e0bff917 	ldw	r2,-28(fp)
   13f30:	103ff126 	beq	r2,zero,13ef8 <__alt_mem_Onchip_SRAM+0xf8013ef8>
        buffer++;
        bytes_read++;
    }

    /*if end of transaction, wait until the ip is idle then disable the ip*/
    if ((issue_stop) || (status != ALT_AVALON_I2C_SUCCESS)) 
   13f34:	e0bfff03 	ldbu	r2,-4(fp)
   13f38:	1000021e 	bne	r2,zero,13f44 <alt_avalon_i2c_master_receive+0x18c>
   13f3c:	e0bff917 	ldw	r2,-28(fp)
   13f40:	10001b26 	beq	r2,zero,13fb0 <alt_avalon_i2c_master_receive+0x1f8>
    {
        timeout=10000 * size;
   13f44:	0149c404 	movi	r5,10000
   13f48:	e13ffd17 	ldw	r4,-12(fp)
   13f4c:	0000ef80 	call	ef8 <__mulsi3>
   13f50:	e0bff615 	stw	r2,-40(fp)
        while (alt_avalon_i2c_is_busy(i2c_dev))
   13f54:	00000d06 	br	13f8c <alt_avalon_i2c_master_receive+0x1d4>
        {
            if (timeout<10) alt_busy_sleep(10000);
   13f58:	e0bff617 	ldw	r2,-40(fp)
   13f5c:	108002a8 	cmpgeui	r2,r2,10
   13f60:	1000021e 	bne	r2,zero,13f6c <alt_avalon_i2c_master_receive+0x1b4>
   13f64:	0109c404 	movi	r4,10000
   13f68:	00156f80 	call	156f8 <alt_busy_sleep>
            if (--timeout == 0)
   13f6c:	e0bff617 	ldw	r2,-40(fp)
   13f70:	10bfffc4 	addi	r2,r2,-1
   13f74:	e0bff615 	stw	r2,-40(fp)
   13f78:	e0bff617 	ldw	r2,-40(fp)
   13f7c:	1000031e 	bne	r2,zero,13f8c <alt_avalon_i2c_master_receive+0x1d4>
            {
               status = ALT_AVALON_I2C_TIMEOUT;
   13f80:	00bfff84 	movi	r2,-2
   13f84:	e0bff915 	stw	r2,-28(fp)
               break;
   13f88:	00000306 	br	13f98 <alt_avalon_i2c_master_receive+0x1e0>

    /*if end of transaction, wait until the ip is idle then disable the ip*/
    if ((issue_stop) || (status != ALT_AVALON_I2C_SUCCESS)) 
    {
        timeout=10000 * size;
        while (alt_avalon_i2c_is_busy(i2c_dev))
   13f8c:	e13ffb17 	ldw	r4,-20(fp)
   13f90:	00130580 	call	13058 <alt_avalon_i2c_is_busy>
   13f94:	103ff01e 	bne	r2,zero,13f58 <__alt_mem_Onchip_SRAM+0xf8013f58>
               break;
            }
        }

        /*check for nack error*/
        alt_avalon_i2c_check_nack(i2c_dev,&status);    
   13f98:	e0bff904 	addi	r2,fp,-28
   13f9c:	100b883a 	mov	r5,r2
   13fa0:	e13ffb17 	ldw	r4,-20(fp)
   13fa4:	001342c0 	call	1342c <alt_avalon_i2c_check_nack>
        
        /*disable the ip.  The ip is disabled and enabled for each transaction.*/
        alt_avalon_i2c_disable(i2c_dev);
   13fa8:	e13ffb17 	ldw	r4,-20(fp)
   13fac:	0012d000 	call	12d00 <alt_avalon_i2c_disable>
    }

    return status;
   13fb0:	e0bff917 	ldw	r2,-28(fp)
}
   13fb4:	e037883a 	mov	sp,fp
   13fb8:	dfc00117 	ldw	ra,4(sp)
   13fbc:	df000017 	ldw	fp,0(sp)
   13fc0:	dec00204 	addi	sp,sp,8
   13fc4:	f800283a 	ret

00013fc8 <alt_avalon_i2c_master_receive_using_interrupts>:
ALT_AVALON_I2C_STATUS_CODE alt_avalon_i2c_master_receive_using_interrupts(ALT_AVALON_I2C_DEV_t *i2c_dev,
                                       alt_u8 * buffer,
                                       const alt_u32 size,
                                       const alt_u8 issue_restart,
                                       const alt_u8 issue_stop)
{
   13fc8:	defff504 	addi	sp,sp,-44
   13fcc:	dfc00a15 	stw	ra,40(sp)
   13fd0:	df000915 	stw	fp,36(sp)
   13fd4:	df000904 	addi	fp,sp,36
   13fd8:	e13ffb15 	stw	r4,-20(fp)
   13fdc:	e17ffc15 	stw	r5,-16(fp)
   13fe0:	e1bffd15 	stw	r6,-12(fp)
   13fe4:	3807883a 	mov	r3,r7
   13fe8:	e0800217 	ldw	r2,8(fp)
   13fec:	e0fffe05 	stb	r3,-8(fp)
   13ff0:	e0bfff05 	stb	r2,-4(fp)
    ALT_AVALON_I2C_STATUS_CODE status = ALT_AVALON_I2C_SUCCESS;
   13ff4:	e03ff715 	stw	zero,-36(fp)
    IRQ_DATA_t *irq_data = i2c_dev->callback_context;    
   13ff8:	e0bffb17 	ldw	r2,-20(fp)
   13ffc:	10800717 	ldw	r2,28(r2)
   14000:	e0bffa15 	stw	r2,-24(fp)
    alt_u32 timeout;
    alt_u32 bytes_written=0;
   14004:	e03ff915 	stw	zero,-28(fp)
    
    if (size==0)
   14008:	e0bffd17 	ldw	r2,-12(fp)
   1400c:	1000021e 	bne	r2,zero,14018 <alt_avalon_i2c_master_receive_using_interrupts+0x50>
    {
      return ALT_AVALON_I2C_SUCCESS;
   14010:	0005883a 	mov	r2,zero
   14014:	00006306 	br	141a4 <alt_avalon_i2c_master_receive_using_interrupts+0x1dc>
    }
    
    /*Is the optional interrupt handler registered??*/
    if (i2c_dev->callback != optional_irq_callback)
   14018:	e0bffb17 	ldw	r2,-20(fp)
   1401c:	10c00617 	ldw	r3,24(r2)
   14020:	00800074 	movhi	r2,1
   14024:	108a3b04 	addi	r2,r2,10476
   14028:	18800226 	beq	r3,r2,14034 <alt_avalon_i2c_master_receive_using_interrupts+0x6c>
    {
       return ALT_AVALON_I2C_BAD_ARG;    
   1402c:	00bfff44 	movi	r2,-3
   14030:	00005c06 	br	141a4 <alt_avalon_i2c_master_receive_using_interrupts+0x1dc>
    }
    
    /*if a new transaction, enable ip and clear int status*/
    if (!issue_restart) 
   14034:	e0bffe03 	ldbu	r2,-8(fp)
   14038:	10000a1e 	bne	r2,zero,14064 <alt_avalon_i2c_master_receive_using_interrupts+0x9c>
    {
      /*enable the ip.  The ip is disabled and enabled for each transaction.*/
      status = alt_avalon_i2c_enable(i2c_dev);
   1403c:	e13ffb17 	ldw	r4,-20(fp)
   14040:	0012c680 	call	12c68 <alt_avalon_i2c_enable>
   14044:	e0bff715 	stw	r2,-36(fp)
      if (status != ALT_AVALON_I2C_SUCCESS)
   14048:	e0bff717 	ldw	r2,-36(fp)
   1404c:	10000226 	beq	r2,zero,14058 <alt_avalon_i2c_master_receive_using_interrupts+0x90>
      {
        return status;
   14050:	e0bff717 	ldw	r2,-36(fp)
   14054:	00005306 	br	141a4 <alt_avalon_i2c_master_receive_using_interrupts+0x1dc>
      }

      /*Clear the ISR reg*/
      alt_avalon_i2c_int_clear(i2c_dev,ALT_AVALON_I2C_ISR_ALL_CLEARABLE_INTS_MSK);
   14058:	01400704 	movi	r5,28
   1405c:	e13ffb17 	ldw	r4,-20(fp)
   14060:	00142540 	call	14254 <alt_avalon_i2c_int_clear>
      
    }

    /*Start Write, transmit address. */
    status = alt_avalon_i2c_send_address(i2c_dev,ALT_AVALON_I2C_READ,issue_restart);
   14064:	e0bffe03 	ldbu	r2,-8(fp)
   14068:	100d883a 	mov	r6,r2
   1406c:	01400044 	movi	r5,1
   14070:	e13ffb17 	ldw	r4,-20(fp)
   14074:	00132d00 	call	132d0 <alt_avalon_i2c_send_address>
   14078:	e0bff715 	stw	r2,-36(fp)

    if (status == ALT_AVALON_I2C_SUCCESS)
   1407c:	e0bff717 	ldw	r2,-36(fp)
   14080:	1000191e 	bne	r2,zero,140e8 <alt_avalon_i2c_master_receive_using_interrupts+0x120>
    {
        while ((bytes_written < (size-1)) && (status == ALT_AVALON_I2C_SUCCESS))
   14084:	00000906 	br	140ac <alt_avalon_i2c_master_receive_using_interrupts+0xe4>
        {
            status = alt_avalon_i2c_cmd_write(i2c_dev, 0, ALT_AVALON_I2C_NO_RESTART, ALT_AVALON_I2C_NO_STOP);
   14088:	000f883a 	mov	r7,zero
   1408c:	000d883a 	mov	r6,zero
   14090:	000b883a 	mov	r5,zero
   14094:	e13ffb17 	ldw	r4,-20(fp)
   14098:	00131ec0 	call	131ec <alt_avalon_i2c_cmd_write>
   1409c:	e0bff715 	stw	r2,-36(fp)
            bytes_written++;
   140a0:	e0bff917 	ldw	r2,-28(fp)
   140a4:	10800044 	addi	r2,r2,1
   140a8:	e0bff915 	stw	r2,-28(fp)
    /*Start Write, transmit address. */
    status = alt_avalon_i2c_send_address(i2c_dev,ALT_AVALON_I2C_READ,issue_restart);

    if (status == ALT_AVALON_I2C_SUCCESS)
    {
        while ((bytes_written < (size-1)) && (status == ALT_AVALON_I2C_SUCCESS))
   140ac:	e0bffd17 	ldw	r2,-12(fp)
   140b0:	10bfffc4 	addi	r2,r2,-1
   140b4:	e0fff917 	ldw	r3,-28(fp)
   140b8:	1880022e 	bgeu	r3,r2,140c4 <alt_avalon_i2c_master_receive_using_interrupts+0xfc>
   140bc:	e0bff717 	ldw	r2,-36(fp)
   140c0:	103ff126 	beq	r2,zero,14088 <__alt_mem_Onchip_SRAM+0xf8014088>
            status = alt_avalon_i2c_cmd_write(i2c_dev, 0, ALT_AVALON_I2C_NO_RESTART, ALT_AVALON_I2C_NO_STOP);
            bytes_written++;
        }

        /* Last byte */
        if (status == ALT_AVALON_I2C_SUCCESS)
   140c4:	e0bff717 	ldw	r2,-36(fp)
   140c8:	1000071e 	bne	r2,zero,140e8 <alt_avalon_i2c_master_receive_using_interrupts+0x120>
        {
            status = alt_avalon_i2c_cmd_write(i2c_dev, 0, ALT_AVALON_I2C_NO_RESTART, issue_stop);
   140cc:	e0bfff03 	ldbu	r2,-4(fp)
   140d0:	100f883a 	mov	r7,r2
   140d4:	000d883a 	mov	r6,zero
   140d8:	000b883a 	mov	r5,zero
   140dc:	e13ffb17 	ldw	r4,-20(fp)
   140e0:	00131ec0 	call	131ec <alt_avalon_i2c_cmd_write>
   140e4:	e0bff715 	stw	r2,-36(fp)
        }
    }
    
    /*if error, wait until the ip is idle then disable the ip*/
    if (status != ALT_AVALON_I2C_SUCCESS) 
   140e8:	e0bff717 	ldw	r2,-36(fp)
   140ec:	10001826 	beq	r2,zero,14150 <alt_avalon_i2c_master_receive_using_interrupts+0x188>
    {
        timeout=10000 * size;
   140f0:	0149c404 	movi	r5,10000
   140f4:	e13ffd17 	ldw	r4,-12(fp)
   140f8:	0000ef80 	call	ef8 <__mulsi3>
   140fc:	e0bff815 	stw	r2,-32(fp)
        while (alt_avalon_i2c_is_busy(i2c_dev))
   14100:	00000d06 	br	14138 <alt_avalon_i2c_master_receive_using_interrupts+0x170>
        {
            if (timeout<10) alt_busy_sleep(10000);
   14104:	e0bff817 	ldw	r2,-32(fp)
   14108:	108002a8 	cmpgeui	r2,r2,10
   1410c:	1000021e 	bne	r2,zero,14118 <alt_avalon_i2c_master_receive_using_interrupts+0x150>
   14110:	0109c404 	movi	r4,10000
   14114:	00156f80 	call	156f8 <alt_busy_sleep>
            if (--timeout == 0)
   14118:	e0bff817 	ldw	r2,-32(fp)
   1411c:	10bfffc4 	addi	r2,r2,-1
   14120:	e0bff815 	stw	r2,-32(fp)
   14124:	e0bff817 	ldw	r2,-32(fp)
   14128:	1000031e 	bne	r2,zero,14138 <alt_avalon_i2c_master_receive_using_interrupts+0x170>
            {
               status = ALT_AVALON_I2C_TIMEOUT;
   1412c:	00bfff84 	movi	r2,-2
   14130:	e0bff715 	stw	r2,-36(fp)
               break;
   14134:	00000306 	br	14144 <alt_avalon_i2c_master_receive_using_interrupts+0x17c>
    
    /*if error, wait until the ip is idle then disable the ip*/
    if (status != ALT_AVALON_I2C_SUCCESS) 
    {
        timeout=10000 * size;
        while (alt_avalon_i2c_is_busy(i2c_dev))
   14138:	e13ffb17 	ldw	r4,-20(fp)
   1413c:	00130580 	call	13058 <alt_avalon_i2c_is_busy>
   14140:	103ff01e 	bne	r2,zero,14104 <__alt_mem_Onchip_SRAM+0xf8014104>
               break;
            }
        }
     
        /*disable the ip.  The ip is disabled and enabled for each transaction.*/
        alt_avalon_i2c_disable(i2c_dev);
   14144:	e13ffb17 	ldw	r4,-20(fp)
   14148:	0012d000 	call	12d00 <alt_avalon_i2c_disable>
   1414c:	00001406 	br	141a0 <alt_avalon_i2c_master_receive_using_interrupts+0x1d8>
    }
    else
    {
       if (issue_stop)
   14150:	e0bfff03 	ldbu	r2,-4(fp)
   14154:	10001226 	beq	r2,zero,141a0 <alt_avalon_i2c_master_receive_using_interrupts+0x1d8>
       {
         /* clear ISR register content */
         alt_avalon_i2c_int_clear(i2c_dev,ALT_AVALON_I2C_ISR_ALL_CLEARABLE_INTS_MSK);
   14158:	01400704 	movi	r5,28
   1415c:	e13ffb17 	ldw	r4,-20(fp)
   14160:	00142540 	call	14254 <alt_avalon_i2c_int_clear>
         /* set the cmd fifo threshold */
         alt_avalon_i2c_rx_fifo_threshold_set(i2c_dev,ALT_AVALON_I2C_RX_DATA_FIFO_1_ENTRY);
   14164:	000b883a 	mov	r5,zero
   14168:	e13ffb17 	ldw	r4,-20(fp)
   1416c:	00143ec0 	call	143ec <alt_avalon_i2c_rx_fifo_threshold_set>
         /* set the interrupt transaction busy bit  2 = receive */
         irq_data->irq_busy=2;
   14170:	e0bffa17 	ldw	r2,-24(fp)
   14174:	00c00084 	movi	r3,2
   14178:	10c00215 	stw	r3,8(r2)
         
         irq_data->buffer = buffer;
   1417c:	e0bffa17 	ldw	r2,-24(fp)
   14180:	e0fffc17 	ldw	r3,-16(fp)
   14184:	10c00015 	stw	r3,0(r2)
         irq_data->size = size;
   14188:	e0bffa17 	ldw	r2,-24(fp)
   1418c:	e0fffd17 	ldw	r3,-12(fp)
   14190:	10c00115 	stw	r3,4(r2)
         
         /* enable the RX_READY interrupt */
         alt_avalon_i2c_int_enable(i2c_dev,ALT_AVALON_I2C_ISER_RX_READY_EN_MSK);
   14194:	01400084 	movi	r5,2
   14198:	e13ffb17 	ldw	r4,-20(fp)
   1419c:	00142f80 	call	142f8 <alt_avalon_i2c_int_enable>
       }
    }

    return status;
   141a0:	e0bff717 	ldw	r2,-36(fp)
}
   141a4:	e037883a 	mov	sp,fp
   141a8:	dfc00117 	ldw	ra,4(sp)
   141ac:	df000017 	ldw	fp,0(sp)
   141b0:	dec00204 	addi	sp,sp,8
   141b4:	f800283a 	ret

000141b8 <alt_avalon_i2c_int_status_get>:

/* Returns the current I2C controller interrupt status conditions. */
void alt_avalon_i2c_int_status_get(ALT_AVALON_I2C_DEV_t *i2c_dev,
                                       alt_u32 *status)
{
   141b8:	defffd04 	addi	sp,sp,-12
   141bc:	df000215 	stw	fp,8(sp)
   141c0:	df000204 	addi	fp,sp,8
   141c4:	e13ffe15 	stw	r4,-8(fp)
   141c8:	e17fff15 	stw	r5,-4(fp)
    *status = IORD_ALT_AVALON_I2C_ISR(i2c_dev->i2c_base) & IORD_ALT_AVALON_I2C_ISER(i2c_dev->i2c_base);
   141cc:	e0bffe17 	ldw	r2,-8(fp)
   141d0:	10800317 	ldw	r2,12(r2)
   141d4:	10800404 	addi	r2,r2,16
   141d8:	10c00037 	ldwio	r3,0(r2)
   141dc:	e0bffe17 	ldw	r2,-8(fp)
   141e0:	10800317 	ldw	r2,12(r2)
   141e4:	10800304 	addi	r2,r2,12
   141e8:	10800037 	ldwio	r2,0(r2)
   141ec:	1884703a 	and	r2,r3,r2
   141f0:	1007883a 	mov	r3,r2
   141f4:	e0bfff17 	ldw	r2,-4(fp)
   141f8:	10c00015 	stw	r3,0(r2)
}
   141fc:	0001883a 	nop
   14200:	e037883a 	mov	sp,fp
   14204:	df000017 	ldw	fp,0(sp)
   14208:	dec00104 	addi	sp,sp,4
   1420c:	f800283a 	ret

00014210 <alt_avalon_i2c_int_raw_status_get>:

/*Returns the I2C controller raw interrupt status conditions irrespective of
 * the interrupt status condition enablement state. */
void alt_avalon_i2c_int_raw_status_get(ALT_AVALON_I2C_DEV_t *i2c_dev,
                                           alt_u32 *status)
{
   14210:	defffd04 	addi	sp,sp,-12
   14214:	df000215 	stw	fp,8(sp)
   14218:	df000204 	addi	fp,sp,8
   1421c:	e13ffe15 	stw	r4,-8(fp)
   14220:	e17fff15 	stw	r5,-4(fp)
    *status = IORD_ALT_AVALON_I2C_ISR(i2c_dev->i2c_base);
   14224:	e0bffe17 	ldw	r2,-8(fp)
   14228:	10800317 	ldw	r2,12(r2)
   1422c:	10800404 	addi	r2,r2,16
   14230:	10800037 	ldwio	r2,0(r2)
   14234:	1007883a 	mov	r3,r2
   14238:	e0bfff17 	ldw	r2,-4(fp)
   1423c:	10c00015 	stw	r3,0(r2)
}
   14240:	0001883a 	nop
   14244:	e037883a 	mov	sp,fp
   14248:	df000017 	ldw	fp,0(sp)
   1424c:	dec00104 	addi	sp,sp,4
   14250:	f800283a 	ret

00014254 <alt_avalon_i2c_int_clear>:

/*Clears the specified I2C controller interrupt status conditions identified
 * in the mask. */
void alt_avalon_i2c_int_clear(ALT_AVALON_I2C_DEV_t *i2c_dev, const alt_u32 mask)
{
   14254:	defffd04 	addi	sp,sp,-12
   14258:	df000215 	stw	fp,8(sp)
   1425c:	df000204 	addi	fp,sp,8
   14260:	e13ffe15 	stw	r4,-8(fp)
   14264:	e17fff15 	stw	r5,-4(fp)
    IOWR_ALT_AVALON_I2C_ISR(i2c_dev->i2c_base,mask);
   14268:	e0bffe17 	ldw	r2,-8(fp)
   1426c:	10800317 	ldw	r2,12(r2)
   14270:	10800404 	addi	r2,r2,16
   14274:	e0ffff17 	ldw	r3,-4(fp)
   14278:	10c00035 	stwio	r3,0(r2)
}
   1427c:	0001883a 	nop
   14280:	e037883a 	mov	sp,fp
   14284:	df000017 	ldw	fp,0(sp)
   14288:	dec00104 	addi	sp,sp,4
   1428c:	f800283a 	ret

00014290 <alt_avalon_i2c_int_disable>:

/*Disable the specified I2C controller interrupt status conditions identified in
 * the mask. */
void alt_avalon_i2c_int_disable(ALT_AVALON_I2C_DEV_t *i2c_dev, const alt_u32 mask)
{
   14290:	defffb04 	addi	sp,sp,-20
   14294:	dfc00415 	stw	ra,16(sp)
   14298:	df000315 	stw	fp,12(sp)
   1429c:	df000304 	addi	fp,sp,12
   142a0:	e13ffe15 	stw	r4,-8(fp)
   142a4:	e17fff15 	stw	r5,-4(fp)
   alt_u32 enabled_ints;
    
   alt_avalon_i2c_enabled_ints_get(i2c_dev,&enabled_ints);
   142a8:	e17ffd04 	addi	r5,fp,-12
   142ac:	e13ffe17 	ldw	r4,-8(fp)
   142b0:	001435c0 	call	1435c <alt_avalon_i2c_enabled_ints_get>
   enabled_ints &=  (~mask);
   142b4:	e0bfff17 	ldw	r2,-4(fp)
   142b8:	0086303a 	nor	r3,zero,r2
   142bc:	e0bffd17 	ldw	r2,-12(fp)
   142c0:	1884703a 	and	r2,r3,r2
   142c4:	e0bffd15 	stw	r2,-12(fp)
   IOWR_ALT_AVALON_I2C_ISER(i2c_dev->i2c_base,ALT_AVALON_I2C_ISR_ALLINTS_MSK & enabled_ints);
   142c8:	e0bffe17 	ldw	r2,-8(fp)
   142cc:	10800317 	ldw	r2,12(r2)
   142d0:	10800304 	addi	r2,r2,12
   142d4:	e0fffd17 	ldw	r3,-12(fp)
   142d8:	18c007cc 	andi	r3,r3,31
   142dc:	10c00035 	stwio	r3,0(r2)
}
   142e0:	0001883a 	nop
   142e4:	e037883a 	mov	sp,fp
   142e8:	dfc00117 	ldw	ra,4(sp)
   142ec:	df000017 	ldw	fp,0(sp)
   142f0:	dec00204 	addi	sp,sp,8
   142f4:	f800283a 	ret

000142f8 <alt_avalon_i2c_int_enable>:

/*Enable the specified I2C controller interrupt status conditions identified in
 * the mask. */
void alt_avalon_i2c_int_enable(ALT_AVALON_I2C_DEV_t *i2c_dev, const alt_u32 mask)
{
   142f8:	defffb04 	addi	sp,sp,-20
   142fc:	dfc00415 	stw	ra,16(sp)
   14300:	df000315 	stw	fp,12(sp)
   14304:	df000304 	addi	fp,sp,12
   14308:	e13ffe15 	stw	r4,-8(fp)
   1430c:	e17fff15 	stw	r5,-4(fp)
    alt_u32 enabled_ints;
    
    alt_avalon_i2c_enabled_ints_get(i2c_dev,&enabled_ints);
   14310:	e17ffd04 	addi	r5,fp,-12
   14314:	e13ffe17 	ldw	r4,-8(fp)
   14318:	001435c0 	call	1435c <alt_avalon_i2c_enabled_ints_get>
    enabled_ints |= mask;
   1431c:	e0fffd17 	ldw	r3,-12(fp)
   14320:	e0bfff17 	ldw	r2,-4(fp)
   14324:	1884b03a 	or	r2,r3,r2
   14328:	e0bffd15 	stw	r2,-12(fp)
    IOWR_ALT_AVALON_I2C_ISER(i2c_dev->i2c_base,ALT_AVALON_I2C_ISR_ALLINTS_MSK & enabled_ints);
   1432c:	e0bffe17 	ldw	r2,-8(fp)
   14330:	10800317 	ldw	r2,12(r2)
   14334:	10800304 	addi	r2,r2,12
   14338:	e0fffd17 	ldw	r3,-12(fp)
   1433c:	18c007cc 	andi	r3,r3,31
   14340:	10c00035 	stwio	r3,0(r2)
}
   14344:	0001883a 	nop
   14348:	e037883a 	mov	sp,fp
   1434c:	dfc00117 	ldw	ra,4(sp)
   14350:	df000017 	ldw	fp,0(sp)
   14354:	dec00204 	addi	sp,sp,8
   14358:	f800283a 	ret

0001435c <alt_avalon_i2c_enabled_ints_get>:

/*gets the enabled i2c interrupts. */
void alt_avalon_i2c_enabled_ints_get(ALT_AVALON_I2C_DEV_t *i2c_dev, alt_u32 * enabled_ints)
{
   1435c:	defffd04 	addi	sp,sp,-12
   14360:	df000215 	stw	fp,8(sp)
   14364:	df000204 	addi	fp,sp,8
   14368:	e13ffe15 	stw	r4,-8(fp)
   1436c:	e17fff15 	stw	r5,-4(fp)
    *enabled_ints=IORD_ALT_AVALON_I2C_ISER(i2c_dev->i2c_base) & ALT_AVALON_I2C_ISR_ALLINTS_MSK;
   14370:	e0bffe17 	ldw	r2,-8(fp)
   14374:	10800317 	ldw	r2,12(r2)
   14378:	10800304 	addi	r2,r2,12
   1437c:	10800037 	ldwio	r2,0(r2)
   14380:	10c007cc 	andi	r3,r2,31
   14384:	e0bfff17 	ldw	r2,-4(fp)
   14388:	10c00015 	stw	r3,0(r2)
}
   1438c:	0001883a 	nop
   14390:	e037883a 	mov	sp,fp
   14394:	df000017 	ldw	fp,0(sp)
   14398:	dec00104 	addi	sp,sp,4
   1439c:	f800283a 	ret

000143a0 <alt_avalon_i2c_rx_fifo_threshold_get>:

/*Gets the current receive FIFO threshold level value. */
void alt_avalon_i2c_rx_fifo_threshold_get(ALT_AVALON_I2C_DEV_t *i2c_dev,
                                              ALT_AVALON_I2C_RX_DATA_FIFO_THRESHOLD_t *threshold)
{
   143a0:	defffd04 	addi	sp,sp,-12
   143a4:	df000215 	stw	fp,8(sp)
   143a8:	df000204 	addi	fp,sp,8
   143ac:	e13ffe15 	stw	r4,-8(fp)
   143b0:	e17fff15 	stw	r5,-4(fp)
    *threshold = (IORD_ALT_AVALON_I2C_CTRL(i2c_dev->i2c_base) & ALT_AVALON_I2C_CTRL_RX_DATA_FIFO_THD_MSK) >>  ALT_AVALON_I2C_CTRL_RX_DATA_FIFO_THD_OFST;
   143b4:	e0bffe17 	ldw	r2,-8(fp)
   143b8:	10800317 	ldw	r2,12(r2)
   143bc:	10800204 	addi	r2,r2,8
   143c0:	10800037 	ldwio	r2,0(r2)
   143c4:	10800c0c 	andi	r2,r2,48
   143c8:	1005d13a 	srai	r2,r2,4
   143cc:	1007883a 	mov	r3,r2
   143d0:	e0bfff17 	ldw	r2,-4(fp)
   143d4:	10c00015 	stw	r3,0(r2)
}
   143d8:	0001883a 	nop
   143dc:	e037883a 	mov	sp,fp
   143e0:	df000017 	ldw	fp,0(sp)
   143e4:	dec00104 	addi	sp,sp,4
   143e8:	f800283a 	ret

000143ec <alt_avalon_i2c_rx_fifo_threshold_set>:

/*sets the current receive FIFO threshold level value. */
void alt_avalon_i2c_rx_fifo_threshold_set(ALT_AVALON_I2C_DEV_t *i2c_dev,
                                              const ALT_AVALON_I2C_RX_DATA_FIFO_THRESHOLD_t threshold)
{
   143ec:	defffd04 	addi	sp,sp,-12
   143f0:	df000215 	stw	fp,8(sp)
   143f4:	df000204 	addi	fp,sp,8
   143f8:	e13ffe15 	stw	r4,-8(fp)
   143fc:	e17fff15 	stw	r5,-4(fp)
    IORMW_ALT_AVALON_I2C_CTRL(i2c_dev->i2c_base,threshold << ALT_AVALON_I2C_CTRL_RX_DATA_FIFO_THD_OFST,ALT_AVALON_I2C_CTRL_RX_DATA_FIFO_THD_MSK);
   14400:	e0bffe17 	ldw	r2,-8(fp)
   14404:	10800317 	ldw	r2,12(r2)
   14408:	10800204 	addi	r2,r2,8
   1440c:	e0fffe17 	ldw	r3,-8(fp)
   14410:	18c00317 	ldw	r3,12(r3)
   14414:	18c00204 	addi	r3,r3,8
   14418:	18c00037 	ldwio	r3,0(r3)
   1441c:	1809883a 	mov	r4,r3
   14420:	00fff3c4 	movi	r3,-49
   14424:	20c8703a 	and	r4,r4,r3
   14428:	e0ffff17 	ldw	r3,-4(fp)
   1442c:	1806913a 	slli	r3,r3,4
   14430:	18c00c0c 	andi	r3,r3,48
   14434:	20c6b03a 	or	r3,r4,r3
   14438:	10c00035 	stwio	r3,0(r2)
}
   1443c:	0001883a 	nop
   14440:	e037883a 	mov	sp,fp
   14444:	df000017 	ldw	fp,0(sp)
   14448:	dec00104 	addi	sp,sp,4
   1444c:	f800283a 	ret

00014450 <alt_avalon_i2c_tfr_cmd_fifo_threshold_get>:

/*Gets the current Transfer Command FIFO threshold level value.*/
void alt_avalon_i2c_tfr_cmd_fifo_threshold_get(ALT_AVALON_I2C_DEV_t *i2c_dev,
                                              ALT_AVALON_I2C_TFR_CMD_FIFO_THRESHOLD_t *threshold)
{
   14450:	defffd04 	addi	sp,sp,-12
   14454:	df000215 	stw	fp,8(sp)
   14458:	df000204 	addi	fp,sp,8
   1445c:	e13ffe15 	stw	r4,-8(fp)
   14460:	e17fff15 	stw	r5,-4(fp)
    *threshold = (IORD_ALT_AVALON_I2C_CTRL(i2c_dev->i2c_base) & ALT_AVALON_I2C_CTRL_TFR_CMD_FIFO_THD_MSK) >> ALT_AVALON_I2C_CTRL_TFR_CMD_FIFO_THD_OFST;
   14464:	e0bffe17 	ldw	r2,-8(fp)
   14468:	10800317 	ldw	r2,12(r2)
   1446c:	10800204 	addi	r2,r2,8
   14470:	10800037 	ldwio	r2,0(r2)
   14474:	1080030c 	andi	r2,r2,12
   14478:	1005d0ba 	srai	r2,r2,2
   1447c:	1007883a 	mov	r3,r2
   14480:	e0bfff17 	ldw	r2,-4(fp)
   14484:	10c00015 	stw	r3,0(r2)
}
   14488:	0001883a 	nop
   1448c:	e037883a 	mov	sp,fp
   14490:	df000017 	ldw	fp,0(sp)
   14494:	dec00104 	addi	sp,sp,4
   14498:	f800283a 	ret

0001449c <alt_avalon_i2c_tfr_cmd_fifo_threshold_set>:

/*Sets the current Transfer Command FIFO threshold level value.*/
void alt_avalon_i2c_tfr_cmd_fifo_threshold_set(ALT_AVALON_I2C_DEV_t *i2c_dev,
                                              const ALT_AVALON_I2C_TFR_CMD_FIFO_THRESHOLD_t threshold)
{
   1449c:	defffd04 	addi	sp,sp,-12
   144a0:	df000215 	stw	fp,8(sp)
   144a4:	df000204 	addi	fp,sp,8
   144a8:	e13ffe15 	stw	r4,-8(fp)
   144ac:	e17fff15 	stw	r5,-4(fp)
  IORMW_ALT_AVALON_I2C_CTRL(i2c_dev->i2c_base,threshold << ALT_AVALON_I2C_CTRL_TFR_CMD_FIFO_THD_OFST,ALT_AVALON_I2C_CTRL_TFR_CMD_FIFO_THD_MSK);
   144b0:	e0bffe17 	ldw	r2,-8(fp)
   144b4:	10800317 	ldw	r2,12(r2)
   144b8:	10c00204 	addi	r3,r2,8
   144bc:	e0bffe17 	ldw	r2,-8(fp)
   144c0:	10800317 	ldw	r2,12(r2)
   144c4:	10800204 	addi	r2,r2,8
   144c8:	10800037 	ldwio	r2,0(r2)
   144cc:	1009883a 	mov	r4,r2
   144d0:	00bffcc4 	movi	r2,-13
   144d4:	2088703a 	and	r4,r4,r2
   144d8:	e0bfff17 	ldw	r2,-4(fp)
   144dc:	1085883a 	add	r2,r2,r2
   144e0:	1085883a 	add	r2,r2,r2
   144e4:	1080030c 	andi	r2,r2,12
   144e8:	2084b03a 	or	r2,r4,r2
   144ec:	18800035 	stwio	r2,0(r3)
}
   144f0:	0001883a 	nop
   144f4:	e037883a 	mov	sp,fp
   144f8:	df000017 	ldw	fp,0(sp)
   144fc:	dec00104 	addi	sp,sp,4
   14500:	f800283a 	ret

00014504 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   14504:	defffa04 	addi	sp,sp,-24
   14508:	dfc00515 	stw	ra,20(sp)
   1450c:	df000415 	stw	fp,16(sp)
   14510:	df000404 	addi	fp,sp,16
   14514:	e13ffd15 	stw	r4,-12(fp)
   14518:	e17ffe15 	stw	r5,-8(fp)
   1451c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   14520:	e0bffd17 	ldw	r2,-12(fp)
   14524:	10800017 	ldw	r2,0(r2)
   14528:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   1452c:	e0bffc17 	ldw	r2,-16(fp)
   14530:	10c00a04 	addi	r3,r2,40
   14534:	e0bffd17 	ldw	r2,-12(fp)
   14538:	10800217 	ldw	r2,8(r2)
   1453c:	100f883a 	mov	r7,r2
   14540:	e1bfff17 	ldw	r6,-4(fp)
   14544:	e17ffe17 	ldw	r5,-8(fp)
   14548:	1809883a 	mov	r4,r3
   1454c:	0014b2c0 	call	14b2c <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   14550:	e037883a 	mov	sp,fp
   14554:	dfc00117 	ldw	ra,4(sp)
   14558:	df000017 	ldw	fp,0(sp)
   1455c:	dec00204 	addi	sp,sp,8
   14560:	f800283a 	ret

00014564 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   14564:	defffa04 	addi	sp,sp,-24
   14568:	dfc00515 	stw	ra,20(sp)
   1456c:	df000415 	stw	fp,16(sp)
   14570:	df000404 	addi	fp,sp,16
   14574:	e13ffd15 	stw	r4,-12(fp)
   14578:	e17ffe15 	stw	r5,-8(fp)
   1457c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   14580:	e0bffd17 	ldw	r2,-12(fp)
   14584:	10800017 	ldw	r2,0(r2)
   14588:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   1458c:	e0bffc17 	ldw	r2,-16(fp)
   14590:	10c00a04 	addi	r3,r2,40
   14594:	e0bffd17 	ldw	r2,-12(fp)
   14598:	10800217 	ldw	r2,8(r2)
   1459c:	100f883a 	mov	r7,r2
   145a0:	e1bfff17 	ldw	r6,-4(fp)
   145a4:	e17ffe17 	ldw	r5,-8(fp)
   145a8:	1809883a 	mov	r4,r3
   145ac:	0014d480 	call	14d48 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   145b0:	e037883a 	mov	sp,fp
   145b4:	dfc00117 	ldw	ra,4(sp)
   145b8:	df000017 	ldw	fp,0(sp)
   145bc:	dec00204 	addi	sp,sp,8
   145c0:	f800283a 	ret

000145c4 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   145c4:	defffc04 	addi	sp,sp,-16
   145c8:	dfc00315 	stw	ra,12(sp)
   145cc:	df000215 	stw	fp,8(sp)
   145d0:	df000204 	addi	fp,sp,8
   145d4:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   145d8:	e0bfff17 	ldw	r2,-4(fp)
   145dc:	10800017 	ldw	r2,0(r2)
   145e0:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   145e4:	e0bffe17 	ldw	r2,-8(fp)
   145e8:	10c00a04 	addi	r3,r2,40
   145ec:	e0bfff17 	ldw	r2,-4(fp)
   145f0:	10800217 	ldw	r2,8(r2)
   145f4:	100b883a 	mov	r5,r2
   145f8:	1809883a 	mov	r4,r3
   145fc:	00149d40 	call	149d4 <altera_avalon_jtag_uart_close>
}
   14600:	e037883a 	mov	sp,fp
   14604:	dfc00117 	ldw	ra,4(sp)
   14608:	df000017 	ldw	fp,0(sp)
   1460c:	dec00204 	addi	sp,sp,8
   14610:	f800283a 	ret

00014614 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   14614:	defffa04 	addi	sp,sp,-24
   14618:	dfc00515 	stw	ra,20(sp)
   1461c:	df000415 	stw	fp,16(sp)
   14620:	df000404 	addi	fp,sp,16
   14624:	e13ffd15 	stw	r4,-12(fp)
   14628:	e17ffe15 	stw	r5,-8(fp)
   1462c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   14630:	e0bffd17 	ldw	r2,-12(fp)
   14634:	10800017 	ldw	r2,0(r2)
   14638:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   1463c:	e0bffc17 	ldw	r2,-16(fp)
   14640:	10800a04 	addi	r2,r2,40
   14644:	e1bfff17 	ldw	r6,-4(fp)
   14648:	e17ffe17 	ldw	r5,-8(fp)
   1464c:	1009883a 	mov	r4,r2
   14650:	0014a3c0 	call	14a3c <altera_avalon_jtag_uart_ioctl>
}
   14654:	e037883a 	mov	sp,fp
   14658:	dfc00117 	ldw	ra,4(sp)
   1465c:	df000017 	ldw	fp,0(sp)
   14660:	dec00204 	addi	sp,sp,8
   14664:	f800283a 	ret

00014668 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   14668:	defffa04 	addi	sp,sp,-24
   1466c:	dfc00515 	stw	ra,20(sp)
   14670:	df000415 	stw	fp,16(sp)
   14674:	df000404 	addi	fp,sp,16
   14678:	e13ffd15 	stw	r4,-12(fp)
   1467c:	e17ffe15 	stw	r5,-8(fp)
   14680:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   14684:	e0bffd17 	ldw	r2,-12(fp)
   14688:	00c00044 	movi	r3,1
   1468c:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   14690:	e0bffd17 	ldw	r2,-12(fp)
   14694:	10800017 	ldw	r2,0(r2)
   14698:	10800104 	addi	r2,r2,4
   1469c:	1007883a 	mov	r3,r2
   146a0:	e0bffd17 	ldw	r2,-12(fp)
   146a4:	10800817 	ldw	r2,32(r2)
   146a8:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   146ac:	e0bffe17 	ldw	r2,-8(fp)
   146b0:	e0ffff17 	ldw	r3,-4(fp)
   146b4:	d8000015 	stw	zero,0(sp)
   146b8:	e1fffd17 	ldw	r7,-12(fp)
   146bc:	01800074 	movhi	r6,1
   146c0:	3191ca04 	addi	r6,r6,18216
   146c4:	180b883a 	mov	r5,r3
   146c8:	1009883a 	mov	r4,r2
   146cc:	0015ac00 	call	15ac0 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   146d0:	e0bffd17 	ldw	r2,-12(fp)
   146d4:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   146d8:	e0bffd17 	ldw	r2,-12(fp)
   146dc:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   146e0:	d0e71f17 	ldw	r3,-25476(gp)
   146e4:	e1fffd17 	ldw	r7,-12(fp)
   146e8:	01800074 	movhi	r6,1
   146ec:	31924d04 	addi	r6,r6,18740
   146f0:	180b883a 	mov	r5,r3
   146f4:	1009883a 	mov	r4,r2
   146f8:	00155cc0 	call	155cc <alt_alarm_start>
   146fc:	1000040e 	bge	r2,zero,14710 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   14700:	e0fffd17 	ldw	r3,-12(fp)
   14704:	00a00034 	movhi	r2,32768
   14708:	10bfffc4 	addi	r2,r2,-1
   1470c:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   14710:	0001883a 	nop
   14714:	e037883a 	mov	sp,fp
   14718:	dfc00117 	ldw	ra,4(sp)
   1471c:	df000017 	ldw	fp,0(sp)
   14720:	dec00204 	addi	sp,sp,8
   14724:	f800283a 	ret

00014728 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   14728:	defff804 	addi	sp,sp,-32
   1472c:	df000715 	stw	fp,28(sp)
   14730:	df000704 	addi	fp,sp,28
   14734:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   14738:	e0bfff17 	ldw	r2,-4(fp)
   1473c:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
   14740:	e0bffb17 	ldw	r2,-20(fp)
   14744:	10800017 	ldw	r2,0(r2)
   14748:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   1474c:	e0bffc17 	ldw	r2,-16(fp)
   14750:	10800104 	addi	r2,r2,4
   14754:	10800037 	ldwio	r2,0(r2)
   14758:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   1475c:	e0bffd17 	ldw	r2,-12(fp)
   14760:	1080c00c 	andi	r2,r2,768
   14764:	10006d26 	beq	r2,zero,1491c <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   14768:	e0bffd17 	ldw	r2,-12(fp)
   1476c:	1080400c 	andi	r2,r2,256
   14770:	10003526 	beq	r2,zero,14848 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   14774:	00800074 	movhi	r2,1
   14778:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   1477c:	e0bffb17 	ldw	r2,-20(fp)
   14780:	10800a17 	ldw	r2,40(r2)
   14784:	10800044 	addi	r2,r2,1
   14788:	1081ffcc 	andi	r2,r2,2047
   1478c:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
   14790:	e0bffb17 	ldw	r2,-20(fp)
   14794:	10c00b17 	ldw	r3,44(r2)
   14798:	e0bffe17 	ldw	r2,-8(fp)
   1479c:	18801526 	beq	r3,r2,147f4 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   147a0:	e0bffc17 	ldw	r2,-16(fp)
   147a4:	10800037 	ldwio	r2,0(r2)
   147a8:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   147ac:	e0bff917 	ldw	r2,-28(fp)
   147b0:	10a0000c 	andi	r2,r2,32768
   147b4:	10001126 	beq	r2,zero,147fc <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   147b8:	e0bffb17 	ldw	r2,-20(fp)
   147bc:	10800a17 	ldw	r2,40(r2)
   147c0:	e0fff917 	ldw	r3,-28(fp)
   147c4:	1809883a 	mov	r4,r3
   147c8:	e0fffb17 	ldw	r3,-20(fp)
   147cc:	1885883a 	add	r2,r3,r2
   147d0:	10800e04 	addi	r2,r2,56
   147d4:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   147d8:	e0bffb17 	ldw	r2,-20(fp)
   147dc:	10800a17 	ldw	r2,40(r2)
   147e0:	10800044 	addi	r2,r2,1
   147e4:	10c1ffcc 	andi	r3,r2,2047
   147e8:	e0bffb17 	ldw	r2,-20(fp)
   147ec:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   147f0:	003fe206 	br	1477c <__alt_mem_Onchip_SRAM+0xf801477c>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
   147f4:	0001883a 	nop
   147f8:	00000106 	br	14800 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
   147fc:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   14800:	e0bff917 	ldw	r2,-28(fp)
   14804:	10bfffec 	andhi	r2,r2,65535
   14808:	10000f26 	beq	r2,zero,14848 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   1480c:	e0bffb17 	ldw	r2,-20(fp)
   14810:	10c00817 	ldw	r3,32(r2)
   14814:	00bfff84 	movi	r2,-2
   14818:	1886703a 	and	r3,r3,r2
   1481c:	e0bffb17 	ldw	r2,-20(fp)
   14820:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   14824:	e0bffc17 	ldw	r2,-16(fp)
   14828:	10800104 	addi	r2,r2,4
   1482c:	1007883a 	mov	r3,r2
   14830:	e0bffb17 	ldw	r2,-20(fp)
   14834:	10800817 	ldw	r2,32(r2)
   14838:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   1483c:	e0bffc17 	ldw	r2,-16(fp)
   14840:	10800104 	addi	r2,r2,4
   14844:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   14848:	e0bffd17 	ldw	r2,-12(fp)
   1484c:	1080800c 	andi	r2,r2,512
   14850:	103fbe26 	beq	r2,zero,1474c <__alt_mem_Onchip_SRAM+0xf801474c>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   14854:	e0bffd17 	ldw	r2,-12(fp)
   14858:	1004d43a 	srli	r2,r2,16
   1485c:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   14860:	00001406 	br	148b4 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   14864:	e0bffc17 	ldw	r2,-16(fp)
   14868:	e0fffb17 	ldw	r3,-20(fp)
   1486c:	18c00d17 	ldw	r3,52(r3)
   14870:	e13ffb17 	ldw	r4,-20(fp)
   14874:	20c7883a 	add	r3,r4,r3
   14878:	18c20e04 	addi	r3,r3,2104
   1487c:	18c00003 	ldbu	r3,0(r3)
   14880:	18c03fcc 	andi	r3,r3,255
   14884:	18c0201c 	xori	r3,r3,128
   14888:	18ffe004 	addi	r3,r3,-128
   1488c:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   14890:	e0bffb17 	ldw	r2,-20(fp)
   14894:	10800d17 	ldw	r2,52(r2)
   14898:	10800044 	addi	r2,r2,1
   1489c:	10c1ffcc 	andi	r3,r2,2047
   148a0:	e0bffb17 	ldw	r2,-20(fp)
   148a4:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   148a8:	e0bffa17 	ldw	r2,-24(fp)
   148ac:	10bfffc4 	addi	r2,r2,-1
   148b0:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   148b4:	e0bffa17 	ldw	r2,-24(fp)
   148b8:	10000526 	beq	r2,zero,148d0 <altera_avalon_jtag_uart_irq+0x1a8>
   148bc:	e0bffb17 	ldw	r2,-20(fp)
   148c0:	10c00d17 	ldw	r3,52(r2)
   148c4:	e0bffb17 	ldw	r2,-20(fp)
   148c8:	10800c17 	ldw	r2,48(r2)
   148cc:	18bfe51e 	bne	r3,r2,14864 <__alt_mem_Onchip_SRAM+0xf8014864>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   148d0:	e0bffa17 	ldw	r2,-24(fp)
   148d4:	103f9d26 	beq	r2,zero,1474c <__alt_mem_Onchip_SRAM+0xf801474c>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   148d8:	e0bffb17 	ldw	r2,-20(fp)
   148dc:	10c00817 	ldw	r3,32(r2)
   148e0:	00bfff44 	movi	r2,-3
   148e4:	1886703a 	and	r3,r3,r2
   148e8:	e0bffb17 	ldw	r2,-20(fp)
   148ec:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   148f0:	e0bffb17 	ldw	r2,-20(fp)
   148f4:	10800017 	ldw	r2,0(r2)
   148f8:	10800104 	addi	r2,r2,4
   148fc:	1007883a 	mov	r3,r2
   14900:	e0bffb17 	ldw	r2,-20(fp)
   14904:	10800817 	ldw	r2,32(r2)
   14908:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   1490c:	e0bffc17 	ldw	r2,-16(fp)
   14910:	10800104 	addi	r2,r2,4
   14914:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   14918:	003f8c06 	br	1474c <__alt_mem_Onchip_SRAM+0xf801474c>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
   1491c:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
   14920:	0001883a 	nop
   14924:	e037883a 	mov	sp,fp
   14928:	df000017 	ldw	fp,0(sp)
   1492c:	dec00104 	addi	sp,sp,4
   14930:	f800283a 	ret

00014934 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   14934:	defff804 	addi	sp,sp,-32
   14938:	df000715 	stw	fp,28(sp)
   1493c:	df000704 	addi	fp,sp,28
   14940:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   14944:	e0bffb17 	ldw	r2,-20(fp)
   14948:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   1494c:	e0bff917 	ldw	r2,-28(fp)
   14950:	10800017 	ldw	r2,0(r2)
   14954:	10800104 	addi	r2,r2,4
   14958:	10800037 	ldwio	r2,0(r2)
   1495c:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   14960:	e0bffa17 	ldw	r2,-24(fp)
   14964:	1081000c 	andi	r2,r2,1024
   14968:	10000b26 	beq	r2,zero,14998 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   1496c:	e0bff917 	ldw	r2,-28(fp)
   14970:	10800017 	ldw	r2,0(r2)
   14974:	10800104 	addi	r2,r2,4
   14978:	1007883a 	mov	r3,r2
   1497c:	e0bff917 	ldw	r2,-28(fp)
   14980:	10800817 	ldw	r2,32(r2)
   14984:	10810014 	ori	r2,r2,1024
   14988:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   1498c:	e0bff917 	ldw	r2,-28(fp)
   14990:	10000915 	stw	zero,36(r2)
   14994:	00000a06 	br	149c0 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   14998:	e0bff917 	ldw	r2,-28(fp)
   1499c:	10c00917 	ldw	r3,36(r2)
   149a0:	00a00034 	movhi	r2,32768
   149a4:	10bfff04 	addi	r2,r2,-4
   149a8:	10c00536 	bltu	r2,r3,149c0 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   149ac:	e0bff917 	ldw	r2,-28(fp)
   149b0:	10800917 	ldw	r2,36(r2)
   149b4:	10c00044 	addi	r3,r2,1
   149b8:	e0bff917 	ldw	r2,-28(fp)
   149bc:	10c00915 	stw	r3,36(r2)
   149c0:	d0a71f17 	ldw	r2,-25476(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   149c4:	e037883a 	mov	sp,fp
   149c8:	df000017 	ldw	fp,0(sp)
   149cc:	dec00104 	addi	sp,sp,4
   149d0:	f800283a 	ret

000149d4 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   149d4:	defffd04 	addi	sp,sp,-12
   149d8:	df000215 	stw	fp,8(sp)
   149dc:	df000204 	addi	fp,sp,8
   149e0:	e13ffe15 	stw	r4,-8(fp)
   149e4:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   149e8:	00000506 	br	14a00 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   149ec:	e0bfff17 	ldw	r2,-4(fp)
   149f0:	1090000c 	andi	r2,r2,16384
   149f4:	10000226 	beq	r2,zero,14a00 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   149f8:	00bffd44 	movi	r2,-11
   149fc:	00000b06 	br	14a2c <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   14a00:	e0bffe17 	ldw	r2,-8(fp)
   14a04:	10c00d17 	ldw	r3,52(r2)
   14a08:	e0bffe17 	ldw	r2,-8(fp)
   14a0c:	10800c17 	ldw	r2,48(r2)
   14a10:	18800526 	beq	r3,r2,14a28 <altera_avalon_jtag_uart_close+0x54>
   14a14:	e0bffe17 	ldw	r2,-8(fp)
   14a18:	10c00917 	ldw	r3,36(r2)
   14a1c:	e0bffe17 	ldw	r2,-8(fp)
   14a20:	10800117 	ldw	r2,4(r2)
   14a24:	18bff136 	bltu	r3,r2,149ec <__alt_mem_Onchip_SRAM+0xf80149ec>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   14a28:	0005883a 	mov	r2,zero
}
   14a2c:	e037883a 	mov	sp,fp
   14a30:	df000017 	ldw	fp,0(sp)
   14a34:	dec00104 	addi	sp,sp,4
   14a38:	f800283a 	ret

00014a3c <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   14a3c:	defffa04 	addi	sp,sp,-24
   14a40:	df000515 	stw	fp,20(sp)
   14a44:	df000504 	addi	fp,sp,20
   14a48:	e13ffd15 	stw	r4,-12(fp)
   14a4c:	e17ffe15 	stw	r5,-8(fp)
   14a50:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
   14a54:	00bff9c4 	movi	r2,-25
   14a58:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
   14a5c:	e0bffe17 	ldw	r2,-8(fp)
   14a60:	10da8060 	cmpeqi	r3,r2,27137
   14a64:	1800031e 	bne	r3,zero,14a74 <altera_avalon_jtag_uart_ioctl+0x38>
   14a68:	109a80a0 	cmpeqi	r2,r2,27138
   14a6c:	1000181e 	bne	r2,zero,14ad0 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
   14a70:	00002906 	br	14b18 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   14a74:	e0bffd17 	ldw	r2,-12(fp)
   14a78:	10c00117 	ldw	r3,4(r2)
   14a7c:	00a00034 	movhi	r2,32768
   14a80:	10bfffc4 	addi	r2,r2,-1
   14a84:	18802126 	beq	r3,r2,14b0c <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
   14a88:	e0bfff17 	ldw	r2,-4(fp)
   14a8c:	10800017 	ldw	r2,0(r2)
   14a90:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   14a94:	e0bffc17 	ldw	r2,-16(fp)
   14a98:	10800090 	cmplti	r2,r2,2
   14a9c:	1000061e 	bne	r2,zero,14ab8 <altera_avalon_jtag_uart_ioctl+0x7c>
   14aa0:	e0fffc17 	ldw	r3,-16(fp)
   14aa4:	00a00034 	movhi	r2,32768
   14aa8:	10bfffc4 	addi	r2,r2,-1
   14aac:	18800226 	beq	r3,r2,14ab8 <altera_avalon_jtag_uart_ioctl+0x7c>
   14ab0:	e0bffc17 	ldw	r2,-16(fp)
   14ab4:	00000206 	br	14ac0 <altera_avalon_jtag_uart_ioctl+0x84>
   14ab8:	00a00034 	movhi	r2,32768
   14abc:	10bfff84 	addi	r2,r2,-2
   14ac0:	e0fffd17 	ldw	r3,-12(fp)
   14ac4:	18800115 	stw	r2,4(r3)
      rc = 0;
   14ac8:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   14acc:	00000f06 	br	14b0c <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   14ad0:	e0bffd17 	ldw	r2,-12(fp)
   14ad4:	10c00117 	ldw	r3,4(r2)
   14ad8:	00a00034 	movhi	r2,32768
   14adc:	10bfffc4 	addi	r2,r2,-1
   14ae0:	18800c26 	beq	r3,r2,14b14 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   14ae4:	e0bffd17 	ldw	r2,-12(fp)
   14ae8:	10c00917 	ldw	r3,36(r2)
   14aec:	e0bffd17 	ldw	r2,-12(fp)
   14af0:	10800117 	ldw	r2,4(r2)
   14af4:	1885803a 	cmpltu	r2,r3,r2
   14af8:	10c03fcc 	andi	r3,r2,255
   14afc:	e0bfff17 	ldw	r2,-4(fp)
   14b00:	10c00015 	stw	r3,0(r2)
      rc = 0;
   14b04:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   14b08:	00000206 	br	14b14 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
   14b0c:	0001883a 	nop
   14b10:	00000106 	br	14b18 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
   14b14:	0001883a 	nop

  default:
    break;
  }

  return rc;
   14b18:	e0bffb17 	ldw	r2,-20(fp)
}
   14b1c:	e037883a 	mov	sp,fp
   14b20:	df000017 	ldw	fp,0(sp)
   14b24:	dec00104 	addi	sp,sp,4
   14b28:	f800283a 	ret

00014b2c <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   14b2c:	defff304 	addi	sp,sp,-52
   14b30:	dfc00c15 	stw	ra,48(sp)
   14b34:	df000b15 	stw	fp,44(sp)
   14b38:	df000b04 	addi	fp,sp,44
   14b3c:	e13ffc15 	stw	r4,-16(fp)
   14b40:	e17ffd15 	stw	r5,-12(fp)
   14b44:	e1bffe15 	stw	r6,-8(fp)
   14b48:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
   14b4c:	e0bffd17 	ldw	r2,-12(fp)
   14b50:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   14b54:	00004706 	br	14c74 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   14b58:	e0bffc17 	ldw	r2,-16(fp)
   14b5c:	10800a17 	ldw	r2,40(r2)
   14b60:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   14b64:	e0bffc17 	ldw	r2,-16(fp)
   14b68:	10800b17 	ldw	r2,44(r2)
   14b6c:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
   14b70:	e0fff717 	ldw	r3,-36(fp)
   14b74:	e0bff817 	ldw	r2,-32(fp)
   14b78:	18800536 	bltu	r3,r2,14b90 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   14b7c:	e0fff717 	ldw	r3,-36(fp)
   14b80:	e0bff817 	ldw	r2,-32(fp)
   14b84:	1885c83a 	sub	r2,r3,r2
   14b88:	e0bff615 	stw	r2,-40(fp)
   14b8c:	00000406 	br	14ba0 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   14b90:	00c20004 	movi	r3,2048
   14b94:	e0bff817 	ldw	r2,-32(fp)
   14b98:	1885c83a 	sub	r2,r3,r2
   14b9c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   14ba0:	e0bff617 	ldw	r2,-40(fp)
   14ba4:	10001e26 	beq	r2,zero,14c20 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   14ba8:	e0fffe17 	ldw	r3,-8(fp)
   14bac:	e0bff617 	ldw	r2,-40(fp)
   14bb0:	1880022e 	bgeu	r3,r2,14bbc <altera_avalon_jtag_uart_read+0x90>
        n = space;
   14bb4:	e0bffe17 	ldw	r2,-8(fp)
   14bb8:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   14bbc:	e0bffc17 	ldw	r2,-16(fp)
   14bc0:	10c00e04 	addi	r3,r2,56
   14bc4:	e0bff817 	ldw	r2,-32(fp)
   14bc8:	1885883a 	add	r2,r3,r2
   14bcc:	e1bff617 	ldw	r6,-40(fp)
   14bd0:	100b883a 	mov	r5,r2
   14bd4:	e13ff517 	ldw	r4,-44(fp)
   14bd8:	00091d40 	call	91d4 <memcpy>
      ptr   += n;
   14bdc:	e0fff517 	ldw	r3,-44(fp)
   14be0:	e0bff617 	ldw	r2,-40(fp)
   14be4:	1885883a 	add	r2,r3,r2
   14be8:	e0bff515 	stw	r2,-44(fp)
      space -= n;
   14bec:	e0fffe17 	ldw	r3,-8(fp)
   14bf0:	e0bff617 	ldw	r2,-40(fp)
   14bf4:	1885c83a 	sub	r2,r3,r2
   14bf8:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   14bfc:	e0fff817 	ldw	r3,-32(fp)
   14c00:	e0bff617 	ldw	r2,-40(fp)
   14c04:	1885883a 	add	r2,r3,r2
   14c08:	10c1ffcc 	andi	r3,r2,2047
   14c0c:	e0bffc17 	ldw	r2,-16(fp)
   14c10:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   14c14:	e0bffe17 	ldw	r2,-8(fp)
   14c18:	00bfcf16 	blt	zero,r2,14b58 <__alt_mem_Onchip_SRAM+0xf8014b58>
   14c1c:	00000106 	br	14c24 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
   14c20:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
   14c24:	e0fff517 	ldw	r3,-44(fp)
   14c28:	e0bffd17 	ldw	r2,-12(fp)
   14c2c:	1880141e 	bne	r3,r2,14c80 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   14c30:	e0bfff17 	ldw	r2,-4(fp)
   14c34:	1090000c 	andi	r2,r2,16384
   14c38:	1000131e 	bne	r2,zero,14c88 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   14c3c:	0001883a 	nop
   14c40:	e0bffc17 	ldw	r2,-16(fp)
   14c44:	10c00a17 	ldw	r3,40(r2)
   14c48:	e0bff717 	ldw	r2,-36(fp)
   14c4c:	1880051e 	bne	r3,r2,14c64 <altera_avalon_jtag_uart_read+0x138>
   14c50:	e0bffc17 	ldw	r2,-16(fp)
   14c54:	10c00917 	ldw	r3,36(r2)
   14c58:	e0bffc17 	ldw	r2,-16(fp)
   14c5c:	10800117 	ldw	r2,4(r2)
   14c60:	18bff736 	bltu	r3,r2,14c40 <__alt_mem_Onchip_SRAM+0xf8014c40>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   14c64:	e0bffc17 	ldw	r2,-16(fp)
   14c68:	10c00a17 	ldw	r3,40(r2)
   14c6c:	e0bff717 	ldw	r2,-36(fp)
   14c70:	18800726 	beq	r3,r2,14c90 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   14c74:	e0bffe17 	ldw	r2,-8(fp)
   14c78:	00bfb716 	blt	zero,r2,14b58 <__alt_mem_Onchip_SRAM+0xf8014b58>
   14c7c:	00000506 	br	14c94 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
   14c80:	0001883a 	nop
   14c84:	00000306 	br	14c94 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
   14c88:	0001883a 	nop
   14c8c:	00000106 	br	14c94 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
   14c90:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   14c94:	e0fff517 	ldw	r3,-44(fp)
   14c98:	e0bffd17 	ldw	r2,-12(fp)
   14c9c:	18801826 	beq	r3,r2,14d00 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   14ca0:	0005303a 	rdctl	r2,status
   14ca4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   14ca8:	e0fffb17 	ldw	r3,-20(fp)
   14cac:	00bfff84 	movi	r2,-2
   14cb0:	1884703a 	and	r2,r3,r2
   14cb4:	1001703a 	wrctl	status,r2
  
  return context;
   14cb8:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   14cbc:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   14cc0:	e0bffc17 	ldw	r2,-16(fp)
   14cc4:	10800817 	ldw	r2,32(r2)
   14cc8:	10c00054 	ori	r3,r2,1
   14ccc:	e0bffc17 	ldw	r2,-16(fp)
   14cd0:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   14cd4:	e0bffc17 	ldw	r2,-16(fp)
   14cd8:	10800017 	ldw	r2,0(r2)
   14cdc:	10800104 	addi	r2,r2,4
   14ce0:	1007883a 	mov	r3,r2
   14ce4:	e0bffc17 	ldw	r2,-16(fp)
   14ce8:	10800817 	ldw	r2,32(r2)
   14cec:	18800035 	stwio	r2,0(r3)
   14cf0:	e0bffa17 	ldw	r2,-24(fp)
   14cf4:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   14cf8:	e0bff917 	ldw	r2,-28(fp)
   14cfc:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   14d00:	e0fff517 	ldw	r3,-44(fp)
   14d04:	e0bffd17 	ldw	r2,-12(fp)
   14d08:	18800426 	beq	r3,r2,14d1c <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
   14d0c:	e0fff517 	ldw	r3,-44(fp)
   14d10:	e0bffd17 	ldw	r2,-12(fp)
   14d14:	1885c83a 	sub	r2,r3,r2
   14d18:	00000606 	br	14d34 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
   14d1c:	e0bfff17 	ldw	r2,-4(fp)
   14d20:	1090000c 	andi	r2,r2,16384
   14d24:	10000226 	beq	r2,zero,14d30 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   14d28:	00bffd44 	movi	r2,-11
   14d2c:	00000106 	br	14d34 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
   14d30:	00bffec4 	movi	r2,-5
}
   14d34:	e037883a 	mov	sp,fp
   14d38:	dfc00117 	ldw	ra,4(sp)
   14d3c:	df000017 	ldw	fp,0(sp)
   14d40:	dec00204 	addi	sp,sp,8
   14d44:	f800283a 	ret

00014d48 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   14d48:	defff304 	addi	sp,sp,-52
   14d4c:	dfc00c15 	stw	ra,48(sp)
   14d50:	df000b15 	stw	fp,44(sp)
   14d54:	df000b04 	addi	fp,sp,44
   14d58:	e13ffc15 	stw	r4,-16(fp)
   14d5c:	e17ffd15 	stw	r5,-12(fp)
   14d60:	e1bffe15 	stw	r6,-8(fp)
   14d64:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   14d68:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   14d6c:	e0bffd17 	ldw	r2,-12(fp)
   14d70:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   14d74:	00003706 	br	14e54 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   14d78:	e0bffc17 	ldw	r2,-16(fp)
   14d7c:	10800c17 	ldw	r2,48(r2)
   14d80:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
   14d84:	e0bffc17 	ldw	r2,-16(fp)
   14d88:	10800d17 	ldw	r2,52(r2)
   14d8c:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
   14d90:	e0fff917 	ldw	r3,-28(fp)
   14d94:	e0bff517 	ldw	r2,-44(fp)
   14d98:	1880062e 	bgeu	r3,r2,14db4 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   14d9c:	e0fff517 	ldw	r3,-44(fp)
   14da0:	e0bff917 	ldw	r2,-28(fp)
   14da4:	1885c83a 	sub	r2,r3,r2
   14da8:	10bfffc4 	addi	r2,r2,-1
   14dac:	e0bff615 	stw	r2,-40(fp)
   14db0:	00000b06 	br	14de0 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   14db4:	e0bff517 	ldw	r2,-44(fp)
   14db8:	10000526 	beq	r2,zero,14dd0 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   14dbc:	00c20004 	movi	r3,2048
   14dc0:	e0bff917 	ldw	r2,-28(fp)
   14dc4:	1885c83a 	sub	r2,r3,r2
   14dc8:	e0bff615 	stw	r2,-40(fp)
   14dcc:	00000406 	br	14de0 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   14dd0:	00c1ffc4 	movi	r3,2047
   14dd4:	e0bff917 	ldw	r2,-28(fp)
   14dd8:	1885c83a 	sub	r2,r3,r2
   14ddc:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   14de0:	e0bff617 	ldw	r2,-40(fp)
   14de4:	10001e26 	beq	r2,zero,14e60 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   14de8:	e0fffe17 	ldw	r3,-8(fp)
   14dec:	e0bff617 	ldw	r2,-40(fp)
   14df0:	1880022e 	bgeu	r3,r2,14dfc <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   14df4:	e0bffe17 	ldw	r2,-8(fp)
   14df8:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   14dfc:	e0bffc17 	ldw	r2,-16(fp)
   14e00:	10c20e04 	addi	r3,r2,2104
   14e04:	e0bff917 	ldw	r2,-28(fp)
   14e08:	1885883a 	add	r2,r3,r2
   14e0c:	e1bff617 	ldw	r6,-40(fp)
   14e10:	e17ffd17 	ldw	r5,-12(fp)
   14e14:	1009883a 	mov	r4,r2
   14e18:	00091d40 	call	91d4 <memcpy>
      ptr   += n;
   14e1c:	e0fffd17 	ldw	r3,-12(fp)
   14e20:	e0bff617 	ldw	r2,-40(fp)
   14e24:	1885883a 	add	r2,r3,r2
   14e28:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
   14e2c:	e0fffe17 	ldw	r3,-8(fp)
   14e30:	e0bff617 	ldw	r2,-40(fp)
   14e34:	1885c83a 	sub	r2,r3,r2
   14e38:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   14e3c:	e0fff917 	ldw	r3,-28(fp)
   14e40:	e0bff617 	ldw	r2,-40(fp)
   14e44:	1885883a 	add	r2,r3,r2
   14e48:	10c1ffcc 	andi	r3,r2,2047
   14e4c:	e0bffc17 	ldw	r2,-16(fp)
   14e50:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   14e54:	e0bffe17 	ldw	r2,-8(fp)
   14e58:	00bfc716 	blt	zero,r2,14d78 <__alt_mem_Onchip_SRAM+0xf8014d78>
   14e5c:	00000106 	br	14e64 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
   14e60:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   14e64:	0005303a 	rdctl	r2,status
   14e68:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   14e6c:	e0fffb17 	ldw	r3,-20(fp)
   14e70:	00bfff84 	movi	r2,-2
   14e74:	1884703a 	and	r2,r3,r2
   14e78:	1001703a 	wrctl	status,r2
  
  return context;
   14e7c:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   14e80:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   14e84:	e0bffc17 	ldw	r2,-16(fp)
   14e88:	10800817 	ldw	r2,32(r2)
   14e8c:	10c00094 	ori	r3,r2,2
   14e90:	e0bffc17 	ldw	r2,-16(fp)
   14e94:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   14e98:	e0bffc17 	ldw	r2,-16(fp)
   14e9c:	10800017 	ldw	r2,0(r2)
   14ea0:	10800104 	addi	r2,r2,4
   14ea4:	1007883a 	mov	r3,r2
   14ea8:	e0bffc17 	ldw	r2,-16(fp)
   14eac:	10800817 	ldw	r2,32(r2)
   14eb0:	18800035 	stwio	r2,0(r3)
   14eb4:	e0bffa17 	ldw	r2,-24(fp)
   14eb8:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   14ebc:	e0bff817 	ldw	r2,-32(fp)
   14ec0:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   14ec4:	e0bffe17 	ldw	r2,-8(fp)
   14ec8:	0080100e 	bge	zero,r2,14f0c <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
   14ecc:	e0bfff17 	ldw	r2,-4(fp)
   14ed0:	1090000c 	andi	r2,r2,16384
   14ed4:	1000101e 	bne	r2,zero,14f18 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   14ed8:	0001883a 	nop
   14edc:	e0bffc17 	ldw	r2,-16(fp)
   14ee0:	10c00d17 	ldw	r3,52(r2)
   14ee4:	e0bff517 	ldw	r2,-44(fp)
   14ee8:	1880051e 	bne	r3,r2,14f00 <altera_avalon_jtag_uart_write+0x1b8>
   14eec:	e0bffc17 	ldw	r2,-16(fp)
   14ef0:	10c00917 	ldw	r3,36(r2)
   14ef4:	e0bffc17 	ldw	r2,-16(fp)
   14ef8:	10800117 	ldw	r2,4(r2)
   14efc:	18bff736 	bltu	r3,r2,14edc <__alt_mem_Onchip_SRAM+0xf8014edc>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   14f00:	e0bffc17 	ldw	r2,-16(fp)
   14f04:	10800917 	ldw	r2,36(r2)
   14f08:	1000051e 	bne	r2,zero,14f20 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
   14f0c:	e0bffe17 	ldw	r2,-8(fp)
   14f10:	00bfd016 	blt	zero,r2,14e54 <__alt_mem_Onchip_SRAM+0xf8014e54>
   14f14:	00000306 	br	14f24 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
   14f18:	0001883a 	nop
   14f1c:	00000106 	br	14f24 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
   14f20:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   14f24:	e0fffd17 	ldw	r3,-12(fp)
   14f28:	e0bff717 	ldw	r2,-36(fp)
   14f2c:	18800426 	beq	r3,r2,14f40 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
   14f30:	e0fffd17 	ldw	r3,-12(fp)
   14f34:	e0bff717 	ldw	r2,-36(fp)
   14f38:	1885c83a 	sub	r2,r3,r2
   14f3c:	00000606 	br	14f58 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
   14f40:	e0bfff17 	ldw	r2,-4(fp)
   14f44:	1090000c 	andi	r2,r2,16384
   14f48:	10000226 	beq	r2,zero,14f54 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
   14f4c:	00bffd44 	movi	r2,-11
   14f50:	00000106 	br	14f58 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   14f54:	00bffec4 	movi	r2,-5
}
   14f58:	e037883a 	mov	sp,fp
   14f5c:	dfc00117 	ldw	ra,4(sp)
   14f60:	df000017 	ldw	fp,0(sp)
   14f64:	dec00204 	addi	sp,sp,8
   14f68:	f800283a 	ret

00014f6c <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
   14f6c:	defffa04 	addi	sp,sp,-24
   14f70:	dfc00515 	stw	ra,20(sp)
   14f74:	df000415 	stw	fp,16(sp)
   14f78:	df000404 	addi	fp,sp,16
   14f7c:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
   14f80:	0007883a 	mov	r3,zero
   14f84:	e0bfff17 	ldw	r2,-4(fp)
   14f88:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
   14f8c:	e0bfff17 	ldw	r2,-4(fp)
   14f90:	10800104 	addi	r2,r2,4
   14f94:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   14f98:	0005303a 	rdctl	r2,status
   14f9c:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   14fa0:	e0fffd17 	ldw	r3,-12(fp)
   14fa4:	00bfff84 	movi	r2,-2
   14fa8:	1884703a 	and	r2,r3,r2
   14fac:	1001703a 	wrctl	status,r2
  
  return context;
   14fb0:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
   14fb4:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
   14fb8:	00125ac0 	call	125ac <alt_tick>
   14fbc:	e0bffc17 	ldw	r2,-16(fp)
   14fc0:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   14fc4:	e0bffe17 	ldw	r2,-8(fp)
   14fc8:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
   14fcc:	0001883a 	nop
   14fd0:	e037883a 	mov	sp,fp
   14fd4:	dfc00117 	ldw	ra,4(sp)
   14fd8:	df000017 	ldw	fp,0(sp)
   14fdc:	dec00204 	addi	sp,sp,8
   14fe0:	f800283a 	ret

00014fe4 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
   14fe4:	defff804 	addi	sp,sp,-32
   14fe8:	dfc00715 	stw	ra,28(sp)
   14fec:	df000615 	stw	fp,24(sp)
   14ff0:	df000604 	addi	fp,sp,24
   14ff4:	e13ffc15 	stw	r4,-16(fp)
   14ff8:	e17ffd15 	stw	r5,-12(fp)
   14ffc:	e1bffe15 	stw	r6,-8(fp)
   15000:	e1ffff15 	stw	r7,-4(fp)
   15004:	e0bfff17 	ldw	r2,-4(fp)
   15008:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
   1500c:	d0a71f17 	ldw	r2,-25476(gp)
   15010:	1000021e 	bne	r2,zero,1501c <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
   15014:	e0bffb17 	ldw	r2,-20(fp)
   15018:	d0a71f15 	stw	r2,-25476(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
   1501c:	e0bffc17 	ldw	r2,-16(fp)
   15020:	10800104 	addi	r2,r2,4
   15024:	00c001c4 	movi	r3,7
   15028:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
   1502c:	d8000015 	stw	zero,0(sp)
   15030:	e1fffc17 	ldw	r7,-16(fp)
   15034:	01800074 	movhi	r6,1
   15038:	3193db04 	addi	r6,r6,20332
   1503c:	e17ffe17 	ldw	r5,-8(fp)
   15040:	e13ffd17 	ldw	r4,-12(fp)
   15044:	0015ac00 	call	15ac0 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
   15048:	0001883a 	nop
   1504c:	e037883a 	mov	sp,fp
   15050:	dfc00117 	ldw	ra,4(sp)
   15054:	df000017 	ldw	fp,0(sp)
   15058:	dec00204 	addi	sp,sp,8
   1505c:	f800283a 	ret

00015060 <alt_adc_irq>:
 * alt_adc_irq()
 *
 * Interrupt handler for the altera modular adc.
 */
static void alt_adc_irq(void *context)
{
   15060:	defff904 	addi	sp,sp,-28
   15064:	dfc00615 	stw	ra,24(sp)
   15068:	df000515 	stw	fp,20(sp)
   1506c:	df000504 	addi	fp,sp,20
   15070:	e13fff15 	stw	r4,-4(fp)
    alt_modular_adc_dev *dev = (alt_modular_adc_dev *) context;
   15074:	e0bfff17 	ldw	r2,-4(fp)
   15078:	e0bffb15 	stw	r2,-20(fp)
    alt_irq_context cpu_sr = 0;
   1507c:	e03ffc15 	stw	zero,-16(fp)

	if(NULL != dev)
   15080:	e0bffb17 	ldw	r2,-20(fp)
   15084:	10001a26 	beq	r2,zero,150f0 <alt_adc_irq+0x90>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   15088:	0005303a 	rdctl	r2,status
   1508c:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   15090:	e0fffe17 	ldw	r3,-8(fp)
   15094:	00bfff84 	movi	r2,-2
   15098:	1884703a 	and	r2,r3,r2
   1509c:	1001703a 	wrctl	status,r2
  
  return context;
   150a0:	e0bffe17 	ldw	r2,-8(fp)
	{
	    cpu_sr = alt_irq_disable_all();
   150a4:	e0bffc15 	stw	r2,-16(fp)
		* Other interrupts are explicitly disabled if callbacks
		* are registered because there is no guarantee that they are 
		* pre-emption-safe. This allows the driver to support 
		* interrupt pre-emption.
		*/
		if(dev->callback) 
   150a8:	e0bffb17 	ldw	r2,-20(fp)
   150ac:	10800a17 	ldw	r2,40(r2)
   150b0:	10000626 	beq	r2,zero,150cc <alt_adc_irq+0x6c>
		{
			dev->callback (dev->callback_context);
   150b4:	e0bffb17 	ldw	r2,-20(fp)
   150b8:	10800a17 	ldw	r2,40(r2)
   150bc:	e0fffb17 	ldw	r3,-20(fp)
   150c0:	18c00b17 	ldw	r3,44(r3)
   150c4:	1809883a 	mov	r4,r3
   150c8:	103ee83a 	callr	r2
		}
    
		/* clear the IRQ status */
		adc_clear_interrupt_status(dev->sample_store_base);
   150cc:	e0bffb17 	ldw	r2,-20(fp)
   150d0:	10800c17 	ldw	r2,48(r2)
   150d4:	1009883a 	mov	r4,r2
   150d8:	001550c0 	call	1550c <adc_clear_interrupt_status>
   150dc:	e0bffc17 	ldw	r2,-16(fp)
   150e0:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   150e4:	e0bffd17 	ldw	r2,-12(fp)
   150e8:	1001703a 	wrctl	status,r2
	    
		alt_irq_enable_all(cpu_sr);
	}
	
    return;
   150ec:	0001883a 	nop
   150f0:	0001883a 	nop
}
   150f4:	e037883a 	mov	sp,fp
   150f8:	dfc00117 	ldw	ra,4(sp)
   150fc:	df000017 	ldw	fp,0(sp)
   15100:	dec00204 	addi	sp,sp,8
   15104:	f800283a 	ret

00015108 <alt_adc_word_read>:
 * Returns:
 * 0 -> success
 * -EINVAL -> Invalid arguments
**/
int alt_adc_word_read (alt_u32 sample_store_base, alt_u32* dest_ptr, alt_u32 len)
{
   15108:	defff804 	addi	sp,sp,-32
   1510c:	df000715 	stw	fp,28(sp)
   15110:	df000704 	addi	fp,sp,28
   15114:	e13ffd15 	stw	r4,-12(fp)
   15118:	e17ffe15 	stw	r5,-8(fp)
   1511c:	e1bfff15 	stw	r6,-4(fp)
    alt_u32 word = 0;
   15120:	e03ff915 	stw	zero,-28(fp)
    alt_u32 word_length = len;
   15124:	e0bfff17 	ldw	r2,-4(fp)
   15128:	e0bffb15 	stw	r2,-20(fp)
    alt_u32* dest_buf = dest_ptr;
   1512c:	e0bffe17 	ldw	r2,-8(fp)
   15130:	e0bffa15 	stw	r2,-24(fp)
    alt_u32 base = sample_store_base;
   15134:	e0bffd17 	ldw	r2,-12(fp)
   15138:	e0bffc15 	stw	r2,-16(fp)
     
    /* return -EINVAL if invalid arguments passed into function */
    if(NULL == dest_buf)
   1513c:	e0bffa17 	ldw	r2,-24(fp)
   15140:	1000021e 	bne	r2,zero,1514c <alt_adc_word_read+0x44>
    {
    	return -EINVAL;
   15144:	00bffa84 	movi	r2,-22
   15148:	00001606 	br	151a4 <alt_adc_word_read+0x9c>
    }

    for(word = 0; word < word_length; word++)
   1514c:	e03ff915 	stw	zero,-28(fp)
   15150:	00001006 	br	15194 <alt_adc_word_read+0x8c>
    {
       *dest_buf = IORD_32DIRECT((base + (word * 4)),0);
   15154:	e0bff917 	ldw	r2,-28(fp)
   15158:	1085883a 	add	r2,r2,r2
   1515c:	1085883a 	add	r2,r2,r2
   15160:	1007883a 	mov	r3,r2
   15164:	e0bffc17 	ldw	r2,-16(fp)
   15168:	1885883a 	add	r2,r3,r2
   1516c:	10800037 	ldwio	r2,0(r2)
   15170:	1007883a 	mov	r3,r2
   15174:	e0bffa17 	ldw	r2,-24(fp)
   15178:	10c00015 	stw	r3,0(r2)

       dest_buf++;
   1517c:	e0bffa17 	ldw	r2,-24(fp)
   15180:	10800104 	addi	r2,r2,4
   15184:	e0bffa15 	stw	r2,-24(fp)
    if(NULL == dest_buf)
    {
    	return -EINVAL;
    }

    for(word = 0; word < word_length; word++)
   15188:	e0bff917 	ldw	r2,-28(fp)
   1518c:	10800044 	addi	r2,r2,1
   15190:	e0bff915 	stw	r2,-28(fp)
   15194:	e0fff917 	ldw	r3,-28(fp)
   15198:	e0bffb17 	ldw	r2,-20(fp)
   1519c:	18bfed36 	bltu	r3,r2,15154 <__alt_mem_Onchip_SRAM+0xf8015154>
       *dest_buf = IORD_32DIRECT((base + (word * 4)),0);

       dest_buf++;
    }

    return 0;
   151a0:	0005883a 	mov	r2,zero

}
   151a4:	e037883a 	mov	sp,fp
   151a8:	df000017 	ldw	fp,0(sp)
   151ac:	dec00104 	addi	sp,sp,4
   151b0:	f800283a 	ret

000151b4 <altera_modular_adc_init>:


void altera_modular_adc_init(alt_modular_adc_dev* dev, alt_32 ic_id, alt_32 irq)
{
   151b4:	defffa04 	addi	sp,sp,-24
   151b8:	dfc00515 	stw	ra,20(sp)
   151bc:	df000415 	stw	fp,16(sp)
   151c0:	df000404 	addi	fp,sp,16
   151c4:	e13ffd15 	stw	r4,-12(fp)
   151c8:	e17ffe15 	stw	r5,-8(fp)
   151cc:	e1bfff15 	stw	r6,-4(fp)
    extern alt_llist altera_modular_adc_list;
    alt_dev_llist_insert((alt_dev_llist*) dev, &altera_modular_adc_list);
   151d0:	d1601c04 	addi	r5,gp,-32656
   151d4:	e13ffd17 	ldw	r4,-12(fp)
   151d8:	00158ac0 	call	158ac <alt_dev_llist_insert>
	
	if ((0 <= ic_id) && (0 <= irq))
   151dc:	e0bffe17 	ldw	r2,-8(fp)
   151e0:	10000b16 	blt	r2,zero,15210 <altera_modular_adc_init+0x5c>
   151e4:	e0bfff17 	ldw	r2,-4(fp)
   151e8:	10000916 	blt	r2,zero,15210 <altera_modular_adc_init+0x5c>
	{
          /* Install IRQ handler */
	  #ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
              alt_ic_isr_register(ic_id, irq, alt_adc_irq, 
   151ec:	e0bffe17 	ldw	r2,-8(fp)
   151f0:	e0ffff17 	ldw	r3,-4(fp)
   151f4:	d8000015 	stw	zero,0(sp)
   151f8:	e1fffd17 	ldw	r7,-12(fp)
   151fc:	01800074 	movhi	r6,1
   15200:	31941804 	addi	r6,r6,20576
   15204:	180b883a 	mov	r5,r3
   15208:	1009883a 	mov	r4,r2
   1520c:	0015ac00 	call	15ac0 <alt_ic_isr_register>
                      dev, NULL);
          #else
             alt_irq_register(irq, dev, alt_adc_irq);
          #endif 
	}
}
   15210:	0001883a 	nop
   15214:	e037883a 	mov	sp,fp
   15218:	dfc00117 	ldw	ra,4(sp)
   1521c:	df000017 	ldw	fp,0(sp)
   15220:	dec00204 	addi	sp,sp,8
   15224:	f800283a 	ret

00015228 <alt_adc_register_callback>:
void alt_adc_register_callback(
	alt_modular_adc_dev *dev,
	alt_adc_callback callback,
	void *context,
	alt_u32 sample_store_base)
{
   15228:	defffa04 	addi	sp,sp,-24
   1522c:	dfc00515 	stw	ra,20(sp)
   15230:	df000415 	stw	fp,16(sp)
   15234:	df000404 	addi	fp,sp,16
   15238:	e13ffc15 	stw	r4,-16(fp)
   1523c:	e17ffd15 	stw	r5,-12(fp)
   15240:	e1bffe15 	stw	r6,-8(fp)
   15244:	e1ffff15 	stw	r7,-4(fp)
    dev->callback         = callback;
   15248:	e0bffc17 	ldw	r2,-16(fp)
   1524c:	e0fffd17 	ldw	r3,-12(fp)
   15250:	10c00a15 	stw	r3,40(r2)
    dev->callback_context = context;
   15254:	e0bffc17 	ldw	r2,-16(fp)
   15258:	e0fffe17 	ldw	r3,-8(fp)
   1525c:	10c00b15 	stw	r3,44(r2)
    dev->sample_store_base = sample_store_base;
   15260:	e0bffc17 	ldw	r2,-16(fp)
   15264:	e0ffff17 	ldw	r3,-4(fp)
   15268:	10c00c15 	stw	r3,48(r2)
	
	if(NULL != callback)
   1526c:	e0bffd17 	ldw	r2,-12(fp)
   15270:	10000726 	beq	r2,zero,15290 <alt_adc_register_callback+0x68>
	{
                adc_clear_interrupt_status(sample_store_base);
   15274:	e0bfff17 	ldw	r2,-4(fp)
   15278:	1009883a 	mov	r4,r2
   1527c:	001550c0 	call	1550c <adc_clear_interrupt_status>
		adc_interrupt_enable(sample_store_base);
   15280:	e0bfff17 	ldw	r2,-4(fp)
   15284:	1009883a 	mov	r4,r2
   15288:	00154800 	call	15480 <adc_interrupt_enable>
                adc_clear_interrupt_status(sample_store_base);
	}
	
    
	
    return ;
   1528c:	00000706 	br	152ac <alt_adc_register_callback+0x84>
                adc_clear_interrupt_status(sample_store_base);
		adc_interrupt_enable(sample_store_base);
	}
	else
	{
		adc_interrupt_disable(sample_store_base);
   15290:	e0bfff17 	ldw	r2,-4(fp)
   15294:	1009883a 	mov	r4,r2
   15298:	00154c40 	call	154c4 <adc_interrupt_disable>
                adc_clear_interrupt_status(sample_store_base);
   1529c:	e0bfff17 	ldw	r2,-4(fp)
   152a0:	1009883a 	mov	r4,r2
   152a4:	001550c0 	call	1550c <adc_clear_interrupt_status>
	}
	
    
	
    return ;
   152a8:	0001883a 	nop
}
   152ac:	e037883a 	mov	sp,fp
   152b0:	dfc00117 	ldw	ra,4(sp)
   152b4:	df000017 	ldw	fp,0(sp)
   152b8:	dec00204 	addi	sp,sp,8
   152bc:	f800283a 	ret

000152c0 <altera_modular_adc_open>:

alt_modular_adc_dev* altera_modular_adc_open (const char *name)
{
   152c0:	defffc04 	addi	sp,sp,-16
   152c4:	dfc00315 	stw	ra,12(sp)
   152c8:	df000215 	stw	fp,8(sp)
   152cc:	df000204 	addi	fp,sp,8
   152d0:	e13fff15 	stw	r4,-4(fp)
    alt_modular_adc_dev *dev = NULL;
   152d4:	e03ffe15 	stw	zero,-8(fp)

    /* Find requested device */
    dev = (alt_modular_adc_dev*) alt_find_dev (name, &altera_modular_adc_list);
   152d8:	d1601c04 	addi	r5,gp,-32656
   152dc:	e13fff17 	ldw	r4,-4(fp)
   152e0:	0015a100 	call	15a10 <alt_find_dev>
   152e4:	e0bffe15 	stw	r2,-8(fp)

    return dev;
   152e8:	e0bffe17 	ldw	r2,-8(fp)
}
   152ec:	e037883a 	mov	sp,fp
   152f0:	dfc00117 	ldw	ra,4(sp)
   152f4:	df000017 	ldw	fp,0(sp)
   152f8:	dec00204 	addi	sp,sp,8
   152fc:	f800283a 	ret

00015300 <adc_stop>:

void adc_stop(int sequencer_base)
{
   15300:	defffe04 	addi	sp,sp,-8
   15304:	df000115 	stw	fp,4(sp)
   15308:	df000104 	addi	fp,sp,4
   1530c:	e13fff15 	stw	r4,-4(fp)
    ALTERA_MODULAR_ADC_SEQUENCER_STOP(sequencer_base);
   15310:	e0bfff17 	ldw	r2,-4(fp)
   15314:	e0ffff17 	ldw	r3,-4(fp)
   15318:	19000037 	ldwio	r4,0(r3)
   1531c:	00ffff84 	movi	r3,-2
   15320:	20c6703a 	and	r3,r4,r3
   15324:	10c00035 	stwio	r3,0(r2)
   15328:	0001883a 	nop
   1532c:	e0bfff17 	ldw	r2,-4(fp)
   15330:	10800037 	ldwio	r2,0(r2)
   15334:	1080004c 	andi	r2,r2,1
   15338:	103ffc1e 	bne	r2,zero,1532c <__alt_mem_Onchip_SRAM+0xf801532c>
}
   1533c:	0001883a 	nop
   15340:	e037883a 	mov	sp,fp
   15344:	df000017 	ldw	fp,0(sp)
   15348:	dec00104 	addi	sp,sp,4
   1534c:	f800283a 	ret

00015350 <adc_start>:

void adc_start(int sequencer_base)
{
   15350:	defffe04 	addi	sp,sp,-8
   15354:	df000115 	stw	fp,4(sp)
   15358:	df000104 	addi	fp,sp,4
   1535c:	e13fff15 	stw	r4,-4(fp)
    ALTERA_MODULAR_ADC_SEQUENCER_START(sequencer_base);
   15360:	e0bfff17 	ldw	r2,-4(fp)
   15364:	e0ffff17 	ldw	r3,-4(fp)
   15368:	18c00037 	ldwio	r3,0(r3)
   1536c:	18c00054 	ori	r3,r3,1
   15370:	10c00035 	stwio	r3,0(r2)
}
   15374:	0001883a 	nop
   15378:	e037883a 	mov	sp,fp
   1537c:	df000017 	ldw	fp,0(sp)
   15380:	dec00104 	addi	sp,sp,4
   15384:	f800283a 	ret

00015388 <adc_set_mode_run_once>:

void adc_set_mode_run_once(int sequencer_base)
{
   15388:	defffe04 	addi	sp,sp,-8
   1538c:	df000115 	stw	fp,4(sp)
   15390:	df000104 	addi	fp,sp,4
   15394:	e13fff15 	stw	r4,-4(fp)
    /* Note: Stop the ADC before calling this function,
       changing ADC mode while RUN bit is set has no effect. */
    ALTERA_MODULAR_ADC_SEQUENCER_MODE_RUN_ONCE(sequencer_base);
   15398:	e0bfff17 	ldw	r2,-4(fp)
   1539c:	e0ffff17 	ldw	r3,-4(fp)
   153a0:	19000037 	ldwio	r4,0(r3)
   153a4:	00fffc44 	movi	r3,-15
   153a8:	20c6703a 	and	r3,r4,r3
   153ac:	18c00094 	ori	r3,r3,2
   153b0:	10c00035 	stwio	r3,0(r2)
}
   153b4:	0001883a 	nop
   153b8:	e037883a 	mov	sp,fp
   153bc:	df000017 	ldw	fp,0(sp)
   153c0:	dec00104 	addi	sp,sp,4
   153c4:	f800283a 	ret

000153c8 <adc_set_mode_run_continuously>:

void adc_set_mode_run_continuously(int sequencer_base)
{
   153c8:	defffe04 	addi	sp,sp,-8
   153cc:	df000115 	stw	fp,4(sp)
   153d0:	df000104 	addi	fp,sp,4
   153d4:	e13fff15 	stw	r4,-4(fp)
    /* Note: Stop the ADC before calling this function,
       changing ADC mode while RUN bit is set has no effect. */
    ALTERA_MODULAR_ADC_SEQUENCER_MODE_RUN_CONTINUOUSLY(sequencer_base);
   153d8:	e0bfff17 	ldw	r2,-4(fp)
   153dc:	e0ffff17 	ldw	r3,-4(fp)
   153e0:	19000037 	ldwio	r4,0(r3)
   153e4:	00fffc44 	movi	r3,-15
   153e8:	20c6703a 	and	r3,r4,r3
   153ec:	10c00035 	stwio	r3,0(r2)
}
   153f0:	0001883a 	nop
   153f4:	e037883a 	mov	sp,fp
   153f8:	df000017 	ldw	fp,0(sp)
   153fc:	dec00104 	addi	sp,sp,4
   15400:	f800283a 	ret

00015404 <adc_recalibrate>:

void adc_recalibrate(int sequencer_base)
{
   15404:	defffc04 	addi	sp,sp,-16
   15408:	dfc00315 	stw	ra,12(sp)
   1540c:	df000215 	stw	fp,8(sp)
   15410:	df000204 	addi	fp,sp,8
   15414:	e13fff15 	stw	r4,-4(fp)
         2. Start the ADC Sequencer Core.
         5. Poll for RUN bit to be clear
         6. Restore CMD register
     */
    alt_u32 backup_cmd_reg;
    backup_cmd_reg = IORD_ALTERA_MODULAR_ADC_SEQUENCER_CMD_REG(sequencer_base);
   15418:	e0bfff17 	ldw	r2,-4(fp)
   1541c:	10800037 	ldwio	r2,0(r2)
   15420:	e0bffe15 	stw	r2,-8(fp)
    adc_stop(sequencer_base);
   15424:	e13fff17 	ldw	r4,-4(fp)
   15428:	00153000 	call	15300 <adc_stop>
    ALTERA_MODULAR_ADC_SEQUENCER_MODE_RUN_RECALIBRATION(sequencer_base);
   1542c:	e0bfff17 	ldw	r2,-4(fp)
   15430:	e0ffff17 	ldw	r3,-4(fp)
   15434:	18c00037 	ldwio	r3,0(r3)
   15438:	18c00394 	ori	r3,r3,14
   1543c:	10c00035 	stwio	r3,0(r2)
    adc_start(sequencer_base);
   15440:	e13fff17 	ldw	r4,-4(fp)
   15444:	00153500 	call	15350 <adc_start>
    while(IORD_ALTERA_MODULAR_ADC_SEQUENCER_CMD_REG(sequencer_base)
   15448:	0001883a 	nop
   1544c:	e0bfff17 	ldw	r2,-4(fp)
   15450:	10800037 	ldwio	r2,0(r2)
             & ALTERA_MODULAR_ADC_SEQUENCER_CMD_RUN_MSK);
   15454:	1080004c 	andi	r2,r2,1
    alt_u32 backup_cmd_reg;
    backup_cmd_reg = IORD_ALTERA_MODULAR_ADC_SEQUENCER_CMD_REG(sequencer_base);
    adc_stop(sequencer_base);
    ALTERA_MODULAR_ADC_SEQUENCER_MODE_RUN_RECALIBRATION(sequencer_base);
    adc_start(sequencer_base);
    while(IORD_ALTERA_MODULAR_ADC_SEQUENCER_CMD_REG(sequencer_base)
   15458:	103ffc1e 	bne	r2,zero,1544c <__alt_mem_Onchip_SRAM+0xf801544c>
             & ALTERA_MODULAR_ADC_SEQUENCER_CMD_RUN_MSK);
    IOWR_ALTERA_MODULAR_ADC_SEQUENCER_CMD_REG(sequencer_base, backup_cmd_reg);
   1545c:	e0bfff17 	ldw	r2,-4(fp)
   15460:	e0fffe17 	ldw	r3,-8(fp)
   15464:	10c00035 	stwio	r3,0(r2)
}
   15468:	0001883a 	nop
   1546c:	e037883a 	mov	sp,fp
   15470:	dfc00117 	ldw	ra,4(sp)
   15474:	df000017 	ldw	fp,0(sp)
   15478:	dec00204 	addi	sp,sp,8
   1547c:	f800283a 	ret

00015480 <adc_interrupt_enable>:

void adc_interrupt_enable(int sample_store_base)
{
   15480:	defffe04 	addi	sp,sp,-8
   15484:	df000115 	stw	fp,4(sp)
   15488:	df000104 	addi	fp,sp,4
   1548c:	e13fff15 	stw	r4,-4(fp)
    ALTERA_MODULAR_ADC_SAMPLE_STORAGE_IRQ_ENABLE(sample_store_base);
   15490:	e0bfff17 	ldw	r2,-4(fp)
   15494:	10804004 	addi	r2,r2,256
   15498:	1007883a 	mov	r3,r2
   1549c:	e0bfff17 	ldw	r2,-4(fp)
   154a0:	10804004 	addi	r2,r2,256
   154a4:	10800037 	ldwio	r2,0(r2)
   154a8:	10800054 	ori	r2,r2,1
   154ac:	18800035 	stwio	r2,0(r3)
}
   154b0:	0001883a 	nop
   154b4:	e037883a 	mov	sp,fp
   154b8:	df000017 	ldw	fp,0(sp)
   154bc:	dec00104 	addi	sp,sp,4
   154c0:	f800283a 	ret

000154c4 <adc_interrupt_disable>:

void adc_interrupt_disable(int sample_store_base)
{
   154c4:	defffe04 	addi	sp,sp,-8
   154c8:	df000115 	stw	fp,4(sp)
   154cc:	df000104 	addi	fp,sp,4
   154d0:	e13fff15 	stw	r4,-4(fp)
    ALTERA_MODULAR_ADC_SAMPLE_STORAGE_IRQ_DISABLE(sample_store_base);
   154d4:	e0bfff17 	ldw	r2,-4(fp)
   154d8:	10804004 	addi	r2,r2,256
   154dc:	1009883a 	mov	r4,r2
   154e0:	e0bfff17 	ldw	r2,-4(fp)
   154e4:	10804004 	addi	r2,r2,256
   154e8:	10c00037 	ldwio	r3,0(r2)
   154ec:	00bfff84 	movi	r2,-2
   154f0:	1884703a 	and	r2,r3,r2
   154f4:	20800035 	stwio	r2,0(r4)
}
   154f8:	0001883a 	nop
   154fc:	e037883a 	mov	sp,fp
   15500:	df000017 	ldw	fp,0(sp)
   15504:	dec00104 	addi	sp,sp,4
   15508:	f800283a 	ret

0001550c <adc_clear_interrupt_status>:

void adc_clear_interrupt_status(int sample_store_base)
{
   1550c:	defffe04 	addi	sp,sp,-8
   15510:	df000115 	stw	fp,4(sp)
   15514:	df000104 	addi	fp,sp,4
   15518:	e13fff15 	stw	r4,-4(fp)
    CLEAR_ALTERA_MODULAR_ADC_SAMPLE_STORAGE_IRQ_STATUS(sample_store_base);
   1551c:	e0bfff17 	ldw	r2,-4(fp)
   15520:	10804104 	addi	r2,r2,260
   15524:	1007883a 	mov	r3,r2
   15528:	e0bfff17 	ldw	r2,-4(fp)
   1552c:	10804104 	addi	r2,r2,260
   15530:	10800037 	ldwio	r2,0(r2)
   15534:	10800054 	ori	r2,r2,1
   15538:	18800035 	stwio	r2,0(r3)
}
   1553c:	0001883a 	nop
   15540:	e037883a 	mov	sp,fp
   15544:	df000017 	ldw	fp,0(sp)
   15548:	dec00104 	addi	sp,sp,4
   1554c:	f800283a 	ret

00015550 <adc_interrupt_asserted>:

int adc_interrupt_asserted(int sample_store_base)
{
   15550:	defffe04 	addi	sp,sp,-8
   15554:	df000115 	stw	fp,4(sp)
   15558:	df000104 	addi	fp,sp,4
   1555c:	e13fff15 	stw	r4,-4(fp)
    return((READ_ALTERA_MODULAR_ADC_SAMPLE_STORAGE_IRQ_STATUS(sample_store_base)==1) ? -1 : 0);
   15560:	e0bfff17 	ldw	r2,-4(fp)
   15564:	10804104 	addi	r2,r2,260
   15568:	10800037 	ldwio	r2,0(r2)
   1556c:	1080004c 	andi	r2,r2,1
   15570:	10000226 	beq	r2,zero,1557c <adc_interrupt_asserted+0x2c>
   15574:	00bfffc4 	movi	r2,-1
   15578:	00000106 	br	15580 <adc_interrupt_asserted+0x30>
   1557c:	0005883a 	mov	r2,zero
}
   15580:	e037883a 	mov	sp,fp
   15584:	df000017 	ldw	fp,0(sp)
   15588:	dec00104 	addi	sp,sp,4
   1558c:	f800283a 	ret

00015590 <adc_wait_for_interrupt>:

void adc_wait_for_interrupt(int sample_store_base)
{
   15590:	defffe04 	addi	sp,sp,-8
   15594:	df000115 	stw	fp,4(sp)
   15598:	df000104 	addi	fp,sp,4
   1559c:	e13fff15 	stw	r4,-4(fp)
    WAIT_FOR_ALTERA_MODULAR_ADC_SAMPLE_STORAGE_IRQ(sample_store_base);
   155a0:	0001883a 	nop
   155a4:	e0bfff17 	ldw	r2,-4(fp)
   155a8:	10804104 	addi	r2,r2,260
   155ac:	10800037 	ldwio	r2,0(r2)
   155b0:	1080004c 	andi	r2,r2,1
   155b4:	103ffb26 	beq	r2,zero,155a4 <__alt_mem_Onchip_SRAM+0xf80155a4>
}
   155b8:	0001883a 	nop
   155bc:	e037883a 	mov	sp,fp
   155c0:	df000017 	ldw	fp,0(sp)
   155c4:	dec00104 	addi	sp,sp,4
   155c8:	f800283a 	ret

000155cc <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   155cc:	defff504 	addi	sp,sp,-44
   155d0:	df000a15 	stw	fp,40(sp)
   155d4:	df000a04 	addi	fp,sp,40
   155d8:	e13ffc15 	stw	r4,-16(fp)
   155dc:	e17ffd15 	stw	r5,-12(fp)
   155e0:	e1bffe15 	stw	r6,-8(fp)
   155e4:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   155e8:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   155ec:	d0a71f17 	ldw	r2,-25476(gp)
  
  if (alt_ticks_per_second ())
   155f0:	10003c26 	beq	r2,zero,156e4 <alt_alarm_start+0x118>
  {
    if (alarm)
   155f4:	e0bffc17 	ldw	r2,-16(fp)
   155f8:	10003826 	beq	r2,zero,156dc <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
   155fc:	e0bffc17 	ldw	r2,-16(fp)
   15600:	e0fffe17 	ldw	r3,-8(fp)
   15604:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   15608:	e0bffc17 	ldw	r2,-16(fp)
   1560c:	e0ffff17 	ldw	r3,-4(fp)
   15610:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   15614:	0005303a 	rdctl	r2,status
   15618:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   1561c:	e0fff917 	ldw	r3,-28(fp)
   15620:	00bfff84 	movi	r2,-2
   15624:	1884703a 	and	r2,r3,r2
   15628:	1001703a 	wrctl	status,r2
  
  return context;
   1562c:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   15630:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   15634:	d0a72017 	ldw	r2,-25472(gp)
      
      current_nticks = alt_nticks();
   15638:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   1563c:	e0fffd17 	ldw	r3,-12(fp)
   15640:	e0bff617 	ldw	r2,-40(fp)
   15644:	1885883a 	add	r2,r3,r2
   15648:	10c00044 	addi	r3,r2,1
   1564c:	e0bffc17 	ldw	r2,-16(fp)
   15650:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   15654:	e0bffc17 	ldw	r2,-16(fp)
   15658:	10c00217 	ldw	r3,8(r2)
   1565c:	e0bff617 	ldw	r2,-40(fp)
   15660:	1880042e 	bgeu	r3,r2,15674 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   15664:	e0bffc17 	ldw	r2,-16(fp)
   15668:	00c00044 	movi	r3,1
   1566c:	10c00405 	stb	r3,16(r2)
   15670:	00000206 	br	1567c <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   15674:	e0bffc17 	ldw	r2,-16(fp)
   15678:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   1567c:	e0bffc17 	ldw	r2,-16(fp)
   15680:	d0e01804 	addi	r3,gp,-32672
   15684:	e0fffa15 	stw	r3,-24(fp)
   15688:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   1568c:	e0bffb17 	ldw	r2,-20(fp)
   15690:	e0fffa17 	ldw	r3,-24(fp)
   15694:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   15698:	e0bffa17 	ldw	r2,-24(fp)
   1569c:	10c00017 	ldw	r3,0(r2)
   156a0:	e0bffb17 	ldw	r2,-20(fp)
   156a4:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   156a8:	e0bffa17 	ldw	r2,-24(fp)
   156ac:	10800017 	ldw	r2,0(r2)
   156b0:	e0fffb17 	ldw	r3,-20(fp)
   156b4:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   156b8:	e0bffa17 	ldw	r2,-24(fp)
   156bc:	e0fffb17 	ldw	r3,-20(fp)
   156c0:	10c00015 	stw	r3,0(r2)
   156c4:	e0bff817 	ldw	r2,-32(fp)
   156c8:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   156cc:	e0bff717 	ldw	r2,-36(fp)
   156d0:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   156d4:	0005883a 	mov	r2,zero
   156d8:	00000306 	br	156e8 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
   156dc:	00bffa84 	movi	r2,-22
   156e0:	00000106 	br	156e8 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
   156e4:	00bfde84 	movi	r2,-134
  }
}
   156e8:	e037883a 	mov	sp,fp
   156ec:	df000017 	ldw	fp,0(sp)
   156f0:	dec00104 	addi	sp,sp,4
   156f4:	f800283a 	ret

000156f8 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
   156f8:	defffa04 	addi	sp,sp,-24
   156fc:	dfc00515 	stw	ra,20(sp)
   15700:	df000415 	stw	fp,16(sp)
   15704:	df000404 	addi	fp,sp,16
   15708:	e13fff15 	stw	r4,-4(fp)
  int big_loops;
  alt_u32 cycles_per_loop;
  
  if (!strcmp(NIOS2_CPU_IMPLEMENTATION,"tiny"))
  {
    cycles_per_loop = 9;
   1570c:	00800244 	movi	r2,9
   15710:	e0bffd15 	stw	r2,-12(fp)
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
   15714:	014003f4 	movhi	r5,15
   15718:	29509004 	addi	r5,r5,16960
   1571c:	e13ffd17 	ldw	r4,-12(fp)
   15720:	0000ef80 	call	ef8 <__mulsi3>
   15724:	100b883a 	mov	r5,r2
   15728:	01017db4 	movhi	r4,1526
   1572c:	21384004 	addi	r4,r4,-7936
   15730:	0000e3c0 	call	e3c <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
   15734:	100b883a 	mov	r5,r2
   15738:	01200034 	movhi	r4,32768
   1573c:	213fffc4 	addi	r4,r4,-1
   15740:	0000e3c0 	call	e3c <__udivsi3>
   15744:	100b883a 	mov	r5,r2
   15748:	e13fff17 	ldw	r4,-4(fp)
   1574c:	0000e3c0 	call	e3c <__udivsi3>
   15750:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
   15754:	e0bffe17 	ldw	r2,-8(fp)
   15758:	10002a26 	beq	r2,zero,15804 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
   1575c:	e03ffc15 	stw	zero,-16(fp)
   15760:	00001706 	br	157c0 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
   15764:	00a00034 	movhi	r2,32768
   15768:	10bfffc4 	addi	r2,r2,-1
   1576c:	10bfffc4 	addi	r2,r2,-1
   15770:	103ffe1e 	bne	r2,zero,1576c <__alt_mem_Onchip_SRAM+0xf801576c>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
   15774:	014003f4 	movhi	r5,15
   15778:	29509004 	addi	r5,r5,16960
   1577c:	e13ffd17 	ldw	r4,-12(fp)
   15780:	0000ef80 	call	ef8 <__mulsi3>
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
   15784:	100b883a 	mov	r5,r2
   15788:	01017db4 	movhi	r4,1526
   1578c:	21384004 	addi	r4,r4,-7936
   15790:	0000e3c0 	call	e3c <__udivsi3>
   15794:	100b883a 	mov	r5,r2
   15798:	01200034 	movhi	r4,32768
   1579c:	213fffc4 	addi	r4,r4,-1
   157a0:	0000e3c0 	call	e3c <__udivsi3>
   157a4:	1007883a 	mov	r3,r2
   157a8:	e0bfff17 	ldw	r2,-4(fp)
   157ac:	10c5c83a 	sub	r2,r2,r3
   157b0:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
   157b4:	e0bffc17 	ldw	r2,-16(fp)
   157b8:	10800044 	addi	r2,r2,1
   157bc:	e0bffc15 	stw	r2,-16(fp)
   157c0:	e0fffc17 	ldw	r3,-16(fp)
   157c4:	e0bffe17 	ldw	r2,-8(fp)
   157c8:	18bfe616 	blt	r3,r2,15764 <__alt_mem_Onchip_SRAM+0xf8015764>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   157cc:	014003f4 	movhi	r5,15
   157d0:	29509004 	addi	r5,r5,16960
   157d4:	e13ffd17 	ldw	r4,-12(fp)
   157d8:	0000ef80 	call	ef8 <__mulsi3>
   157dc:	100b883a 	mov	r5,r2
   157e0:	01017db4 	movhi	r4,1526
   157e4:	21384004 	addi	r4,r4,-7936
   157e8:	0000e3c0 	call	e3c <__udivsi3>
   157ec:	e17fff17 	ldw	r5,-4(fp)
   157f0:	1009883a 	mov	r4,r2
   157f4:	0000ef80 	call	ef8 <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   157f8:	10bfffc4 	addi	r2,r2,-1
   157fc:	103ffe1e 	bne	r2,zero,157f8 <__alt_mem_Onchip_SRAM+0xf80157f8>
   15800:	00000d06 	br	15838 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   15804:	014003f4 	movhi	r5,15
   15808:	29509004 	addi	r5,r5,16960
   1580c:	e13ffd17 	ldw	r4,-12(fp)
   15810:	0000ef80 	call	ef8 <__mulsi3>
   15814:	100b883a 	mov	r5,r2
   15818:	01017db4 	movhi	r4,1526
   1581c:	21384004 	addi	r4,r4,-7936
   15820:	0000e3c0 	call	e3c <__udivsi3>
   15824:	e17fff17 	ldw	r5,-4(fp)
   15828:	1009883a 	mov	r4,r2
   1582c:	0000ef80 	call	ef8 <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   15830:	10bfffc4 	addi	r2,r2,-1
   15834:	00bffe16 	blt	zero,r2,15830 <__alt_mem_Onchip_SRAM+0xf8015830>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
   15838:	0005883a 	mov	r2,zero
}
   1583c:	e037883a 	mov	sp,fp
   15840:	dfc00117 	ldw	ra,4(sp)
   15844:	df000017 	ldw	fp,0(sp)
   15848:	dec00204 	addi	sp,sp,8
   1584c:	f800283a 	ret

00015850 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   15850:	deffff04 	addi	sp,sp,-4
   15854:	df000015 	stw	fp,0(sp)
   15858:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   1585c:	0001883a 	nop
   15860:	e037883a 	mov	sp,fp
   15864:	df000017 	ldw	fp,0(sp)
   15868:	dec00104 	addi	sp,sp,4
   1586c:	f800283a 	ret

00015870 <alt_get_errno>:
   15870:	defffe04 	addi	sp,sp,-8
   15874:	dfc00115 	stw	ra,4(sp)
   15878:	df000015 	stw	fp,0(sp)
   1587c:	d839883a 	mov	fp,sp
   15880:	d0a01617 	ldw	r2,-32680(gp)
   15884:	10000326 	beq	r2,zero,15894 <alt_get_errno+0x24>
   15888:	d0a01617 	ldw	r2,-32680(gp)
   1588c:	103ee83a 	callr	r2
   15890:	00000106 	br	15898 <alt_get_errno+0x28>
   15894:	d0a71104 	addi	r2,gp,-25532
   15898:	e037883a 	mov	sp,fp
   1589c:	dfc00117 	ldw	ra,4(sp)
   158a0:	df000017 	ldw	fp,0(sp)
   158a4:	dec00204 	addi	sp,sp,8
   158a8:	f800283a 	ret

000158ac <alt_dev_llist_insert>:
   158ac:	defffa04 	addi	sp,sp,-24
   158b0:	dfc00515 	stw	ra,20(sp)
   158b4:	df000415 	stw	fp,16(sp)
   158b8:	df000404 	addi	fp,sp,16
   158bc:	e13ffe15 	stw	r4,-8(fp)
   158c0:	e17fff15 	stw	r5,-4(fp)
   158c4:	e0bffe17 	ldw	r2,-8(fp)
   158c8:	10000326 	beq	r2,zero,158d8 <alt_dev_llist_insert+0x2c>
   158cc:	e0bffe17 	ldw	r2,-8(fp)
   158d0:	10800217 	ldw	r2,8(r2)
   158d4:	1000061e 	bne	r2,zero,158f0 <alt_dev_llist_insert+0x44>
   158d8:	00158700 	call	15870 <alt_get_errno>
   158dc:	1007883a 	mov	r3,r2
   158e0:	00800584 	movi	r2,22
   158e4:	18800015 	stw	r2,0(r3)
   158e8:	00bffa84 	movi	r2,-22
   158ec:	00001306 	br	1593c <alt_dev_llist_insert+0x90>
   158f0:	e0bffe17 	ldw	r2,-8(fp)
   158f4:	e0ffff17 	ldw	r3,-4(fp)
   158f8:	e0fffc15 	stw	r3,-16(fp)
   158fc:	e0bffd15 	stw	r2,-12(fp)
   15900:	e0bffd17 	ldw	r2,-12(fp)
   15904:	e0fffc17 	ldw	r3,-16(fp)
   15908:	10c00115 	stw	r3,4(r2)
   1590c:	e0bffc17 	ldw	r2,-16(fp)
   15910:	10c00017 	ldw	r3,0(r2)
   15914:	e0bffd17 	ldw	r2,-12(fp)
   15918:	10c00015 	stw	r3,0(r2)
   1591c:	e0bffc17 	ldw	r2,-16(fp)
   15920:	10800017 	ldw	r2,0(r2)
   15924:	e0fffd17 	ldw	r3,-12(fp)
   15928:	10c00115 	stw	r3,4(r2)
   1592c:	e0bffc17 	ldw	r2,-16(fp)
   15930:	e0fffd17 	ldw	r3,-12(fp)
   15934:	10c00015 	stw	r3,0(r2)
   15938:	0005883a 	mov	r2,zero
   1593c:	e037883a 	mov	sp,fp
   15940:	dfc00117 	ldw	ra,4(sp)
   15944:	df000017 	ldw	fp,0(sp)
   15948:	dec00204 	addi	sp,sp,8
   1594c:	f800283a 	ret

00015950 <_do_ctors>:
   15950:	defffd04 	addi	sp,sp,-12
   15954:	dfc00215 	stw	ra,8(sp)
   15958:	df000115 	stw	fp,4(sp)
   1595c:	df000104 	addi	fp,sp,4
   15960:	00800074 	movhi	r2,1
   15964:	109a7204 	addi	r2,r2,27080
   15968:	e0bfff15 	stw	r2,-4(fp)
   1596c:	00000606 	br	15988 <_do_ctors+0x38>
   15970:	e0bfff17 	ldw	r2,-4(fp)
   15974:	10800017 	ldw	r2,0(r2)
   15978:	103ee83a 	callr	r2
   1597c:	e0bfff17 	ldw	r2,-4(fp)
   15980:	10bfff04 	addi	r2,r2,-4
   15984:	e0bfff15 	stw	r2,-4(fp)
   15988:	e0ffff17 	ldw	r3,-4(fp)
   1598c:	00800074 	movhi	r2,1
   15990:	109a7304 	addi	r2,r2,27084
   15994:	18bff62e 	bgeu	r3,r2,15970 <__alt_mem_Onchip_SRAM+0xf8015970>
   15998:	0001883a 	nop
   1599c:	e037883a 	mov	sp,fp
   159a0:	dfc00117 	ldw	ra,4(sp)
   159a4:	df000017 	ldw	fp,0(sp)
   159a8:	dec00204 	addi	sp,sp,8
   159ac:	f800283a 	ret

000159b0 <_do_dtors>:
   159b0:	defffd04 	addi	sp,sp,-12
   159b4:	dfc00215 	stw	ra,8(sp)
   159b8:	df000115 	stw	fp,4(sp)
   159bc:	df000104 	addi	fp,sp,4
   159c0:	00800074 	movhi	r2,1
   159c4:	109a7204 	addi	r2,r2,27080
   159c8:	e0bfff15 	stw	r2,-4(fp)
   159cc:	00000606 	br	159e8 <_do_dtors+0x38>
   159d0:	e0bfff17 	ldw	r2,-4(fp)
   159d4:	10800017 	ldw	r2,0(r2)
   159d8:	103ee83a 	callr	r2
   159dc:	e0bfff17 	ldw	r2,-4(fp)
   159e0:	10bfff04 	addi	r2,r2,-4
   159e4:	e0bfff15 	stw	r2,-4(fp)
   159e8:	e0ffff17 	ldw	r3,-4(fp)
   159ec:	00800074 	movhi	r2,1
   159f0:	109a7304 	addi	r2,r2,27084
   159f4:	18bff62e 	bgeu	r3,r2,159d0 <__alt_mem_Onchip_SRAM+0xf80159d0>
   159f8:	0001883a 	nop
   159fc:	e037883a 	mov	sp,fp
   15a00:	dfc00117 	ldw	ra,4(sp)
   15a04:	df000017 	ldw	fp,0(sp)
   15a08:	dec00204 	addi	sp,sp,8
   15a0c:	f800283a 	ret

00015a10 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   15a10:	defffa04 	addi	sp,sp,-24
   15a14:	dfc00515 	stw	ra,20(sp)
   15a18:	df000415 	stw	fp,16(sp)
   15a1c:	df000404 	addi	fp,sp,16
   15a20:	e13ffe15 	stw	r4,-8(fp)
   15a24:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   15a28:	e0bfff17 	ldw	r2,-4(fp)
   15a2c:	10800017 	ldw	r2,0(r2)
   15a30:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   15a34:	e13ffe17 	ldw	r4,-8(fp)
   15a38:	00013b80 	call	13b8 <strlen>
   15a3c:	10800044 	addi	r2,r2,1
   15a40:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   15a44:	00000d06 	br	15a7c <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   15a48:	e0bffc17 	ldw	r2,-16(fp)
   15a4c:	10800217 	ldw	r2,8(r2)
   15a50:	e0fffd17 	ldw	r3,-12(fp)
   15a54:	180d883a 	mov	r6,r3
   15a58:	e17ffe17 	ldw	r5,-8(fp)
   15a5c:	1009883a 	mov	r4,r2
   15a60:	00166840 	call	16684 <memcmp>
   15a64:	1000021e 	bne	r2,zero,15a70 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   15a68:	e0bffc17 	ldw	r2,-16(fp)
   15a6c:	00000706 	br	15a8c <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   15a70:	e0bffc17 	ldw	r2,-16(fp)
   15a74:	10800017 	ldw	r2,0(r2)
   15a78:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   15a7c:	e0fffc17 	ldw	r3,-16(fp)
   15a80:	e0bfff17 	ldw	r2,-4(fp)
   15a84:	18bff01e 	bne	r3,r2,15a48 <__alt_mem_Onchip_SRAM+0xf8015a48>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   15a88:	0005883a 	mov	r2,zero
}
   15a8c:	e037883a 	mov	sp,fp
   15a90:	dfc00117 	ldw	ra,4(sp)
   15a94:	df000017 	ldw	fp,0(sp)
   15a98:	dec00204 	addi	sp,sp,8
   15a9c:	f800283a 	ret

00015aa0 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   15aa0:	deffff04 	addi	sp,sp,-4
   15aa4:	df000015 	stw	fp,0(sp)
   15aa8:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
   15aac:	0001883a 	nop
   15ab0:	e037883a 	mov	sp,fp
   15ab4:	df000017 	ldw	fp,0(sp)
   15ab8:	dec00104 	addi	sp,sp,4
   15abc:	f800283a 	ret

00015ac0 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   15ac0:	defff904 	addi	sp,sp,-28
   15ac4:	dfc00615 	stw	ra,24(sp)
   15ac8:	df000515 	stw	fp,20(sp)
   15acc:	df000504 	addi	fp,sp,20
   15ad0:	e13ffc15 	stw	r4,-16(fp)
   15ad4:	e17ffd15 	stw	r5,-12(fp)
   15ad8:	e1bffe15 	stw	r6,-8(fp)
   15adc:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   15ae0:	e0800217 	ldw	r2,8(fp)
   15ae4:	d8800015 	stw	r2,0(sp)
   15ae8:	e1ffff17 	ldw	r7,-4(fp)
   15aec:	e1bffe17 	ldw	r6,-8(fp)
   15af0:	e17ffd17 	ldw	r5,-12(fp)
   15af4:	e13ffc17 	ldw	r4,-16(fp)
   15af8:	0015c700 	call	15c70 <alt_iic_isr_register>
}  
   15afc:	e037883a 	mov	sp,fp
   15b00:	dfc00117 	ldw	ra,4(sp)
   15b04:	df000017 	ldw	fp,0(sp)
   15b08:	dec00204 	addi	sp,sp,8
   15b0c:	f800283a 	ret

00015b10 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   15b10:	defff904 	addi	sp,sp,-28
   15b14:	df000615 	stw	fp,24(sp)
   15b18:	df000604 	addi	fp,sp,24
   15b1c:	e13ffe15 	stw	r4,-8(fp)
   15b20:	e17fff15 	stw	r5,-4(fp)
   15b24:	e0bfff17 	ldw	r2,-4(fp)
   15b28:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   15b2c:	0005303a 	rdctl	r2,status
   15b30:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   15b34:	e0fffb17 	ldw	r3,-20(fp)
   15b38:	00bfff84 	movi	r2,-2
   15b3c:	1884703a 	and	r2,r3,r2
   15b40:	1001703a 	wrctl	status,r2
  
  return context;
   15b44:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   15b48:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
   15b4c:	00c00044 	movi	r3,1
   15b50:	e0bffa17 	ldw	r2,-24(fp)
   15b54:	1884983a 	sll	r2,r3,r2
   15b58:	1007883a 	mov	r3,r2
   15b5c:	d0a72117 	ldw	r2,-25468(gp)
   15b60:	1884b03a 	or	r2,r3,r2
   15b64:	d0a72115 	stw	r2,-25468(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   15b68:	d0a72117 	ldw	r2,-25468(gp)
   15b6c:	100170fa 	wrctl	ienable,r2
   15b70:	e0bffc17 	ldw	r2,-16(fp)
   15b74:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   15b78:	e0bffd17 	ldw	r2,-12(fp)
   15b7c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   15b80:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
   15b84:	0001883a 	nop
}
   15b88:	e037883a 	mov	sp,fp
   15b8c:	df000017 	ldw	fp,0(sp)
   15b90:	dec00104 	addi	sp,sp,4
   15b94:	f800283a 	ret

00015b98 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   15b98:	defff904 	addi	sp,sp,-28
   15b9c:	df000615 	stw	fp,24(sp)
   15ba0:	df000604 	addi	fp,sp,24
   15ba4:	e13ffe15 	stw	r4,-8(fp)
   15ba8:	e17fff15 	stw	r5,-4(fp)
   15bac:	e0bfff17 	ldw	r2,-4(fp)
   15bb0:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   15bb4:	0005303a 	rdctl	r2,status
   15bb8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   15bbc:	e0fffb17 	ldw	r3,-20(fp)
   15bc0:	00bfff84 	movi	r2,-2
   15bc4:	1884703a 	and	r2,r3,r2
   15bc8:	1001703a 	wrctl	status,r2
  
  return context;
   15bcc:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   15bd0:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
   15bd4:	00c00044 	movi	r3,1
   15bd8:	e0bffa17 	ldw	r2,-24(fp)
   15bdc:	1884983a 	sll	r2,r3,r2
   15be0:	0084303a 	nor	r2,zero,r2
   15be4:	1007883a 	mov	r3,r2
   15be8:	d0a72117 	ldw	r2,-25468(gp)
   15bec:	1884703a 	and	r2,r3,r2
   15bf0:	d0a72115 	stw	r2,-25468(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   15bf4:	d0a72117 	ldw	r2,-25468(gp)
   15bf8:	100170fa 	wrctl	ienable,r2
   15bfc:	e0bffc17 	ldw	r2,-16(fp)
   15c00:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   15c04:	e0bffd17 	ldw	r2,-12(fp)
   15c08:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   15c0c:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
   15c10:	0001883a 	nop
}
   15c14:	e037883a 	mov	sp,fp
   15c18:	df000017 	ldw	fp,0(sp)
   15c1c:	dec00104 	addi	sp,sp,4
   15c20:	f800283a 	ret

00015c24 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   15c24:	defffc04 	addi	sp,sp,-16
   15c28:	df000315 	stw	fp,12(sp)
   15c2c:	df000304 	addi	fp,sp,12
   15c30:	e13ffe15 	stw	r4,-8(fp)
   15c34:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   15c38:	000530fa 	rdctl	r2,ienable
   15c3c:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   15c40:	00c00044 	movi	r3,1
   15c44:	e0bfff17 	ldw	r2,-4(fp)
   15c48:	1884983a 	sll	r2,r3,r2
   15c4c:	1007883a 	mov	r3,r2
   15c50:	e0bffd17 	ldw	r2,-12(fp)
   15c54:	1884703a 	and	r2,r3,r2
   15c58:	1004c03a 	cmpne	r2,r2,zero
   15c5c:	10803fcc 	andi	r2,r2,255
}
   15c60:	e037883a 	mov	sp,fp
   15c64:	df000017 	ldw	fp,0(sp)
   15c68:	dec00104 	addi	sp,sp,4
   15c6c:	f800283a 	ret

00015c70 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   15c70:	defff504 	addi	sp,sp,-44
   15c74:	dfc00a15 	stw	ra,40(sp)
   15c78:	df000915 	stw	fp,36(sp)
   15c7c:	df000904 	addi	fp,sp,36
   15c80:	e13ffc15 	stw	r4,-16(fp)
   15c84:	e17ffd15 	stw	r5,-12(fp)
   15c88:	e1bffe15 	stw	r6,-8(fp)
   15c8c:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
   15c90:	00bffa84 	movi	r2,-22
   15c94:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   15c98:	e0bffd17 	ldw	r2,-12(fp)
   15c9c:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   15ca0:	e0bff817 	ldw	r2,-32(fp)
   15ca4:	10800808 	cmpgei	r2,r2,32
   15ca8:	1000271e 	bne	r2,zero,15d48 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   15cac:	0005303a 	rdctl	r2,status
   15cb0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   15cb4:	e0fffb17 	ldw	r3,-20(fp)
   15cb8:	00bfff84 	movi	r2,-2
   15cbc:	1884703a 	and	r2,r3,r2
   15cc0:	1001703a 	wrctl	status,r2
  
  return context;
   15cc4:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   15cc8:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
   15ccc:	008000b4 	movhi	r2,2
   15cd0:	10a96a04 	addi	r2,r2,-23128
   15cd4:	e0fff817 	ldw	r3,-32(fp)
   15cd8:	180690fa 	slli	r3,r3,3
   15cdc:	10c5883a 	add	r2,r2,r3
   15ce0:	e0fffe17 	ldw	r3,-8(fp)
   15ce4:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
   15ce8:	008000b4 	movhi	r2,2
   15cec:	10a96a04 	addi	r2,r2,-23128
   15cf0:	e0fff817 	ldw	r3,-32(fp)
   15cf4:	180690fa 	slli	r3,r3,3
   15cf8:	10c5883a 	add	r2,r2,r3
   15cfc:	10800104 	addi	r2,r2,4
   15d00:	e0ffff17 	ldw	r3,-4(fp)
   15d04:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   15d08:	e0bffe17 	ldw	r2,-8(fp)
   15d0c:	10000526 	beq	r2,zero,15d24 <alt_iic_isr_register+0xb4>
   15d10:	e0bff817 	ldw	r2,-32(fp)
   15d14:	100b883a 	mov	r5,r2
   15d18:	e13ffc17 	ldw	r4,-16(fp)
   15d1c:	0015b100 	call	15b10 <alt_ic_irq_enable>
   15d20:	00000406 	br	15d34 <alt_iic_isr_register+0xc4>
   15d24:	e0bff817 	ldw	r2,-32(fp)
   15d28:	100b883a 	mov	r5,r2
   15d2c:	e13ffc17 	ldw	r4,-16(fp)
   15d30:	0015b980 	call	15b98 <alt_ic_irq_disable>
   15d34:	e0bff715 	stw	r2,-36(fp)
   15d38:	e0bffa17 	ldw	r2,-24(fp)
   15d3c:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   15d40:	e0bff917 	ldw	r2,-28(fp)
   15d44:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   15d48:	e0bff717 	ldw	r2,-36(fp)
}
   15d4c:	e037883a 	mov	sp,fp
   15d50:	dfc00117 	ldw	ra,4(sp)
   15d54:	df000017 	ldw	fp,0(sp)
   15d58:	dec00204 	addi	sp,sp,8
   15d5c:	f800283a 	ret

00015d60 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   15d60:	defff804 	addi	sp,sp,-32
   15d64:	dfc00715 	stw	ra,28(sp)
   15d68:	df000615 	stw	fp,24(sp)
   15d6c:	dc000515 	stw	r16,20(sp)
   15d70:	df000604 	addi	fp,sp,24
   15d74:	e13ffb15 	stw	r4,-20(fp)
   15d78:	e17ffc15 	stw	r5,-16(fp)
   15d7c:	e1bffd15 	stw	r6,-12(fp)
   15d80:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
   15d84:	e1bffe17 	ldw	r6,-8(fp)
   15d88:	e17ffd17 	ldw	r5,-12(fp)
   15d8c:	e13ffc17 	ldw	r4,-16(fp)
   15d90:	0015fe80 	call	15fe8 <open>
   15d94:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
   15d98:	e0bffa17 	ldw	r2,-24(fp)
   15d9c:	10002216 	blt	r2,zero,15e28 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
   15da0:	04000074 	movhi	r16,1
   15da4:	841d9d04 	addi	r16,r16,30324
   15da8:	e0bffa17 	ldw	r2,-24(fp)
   15dac:	01400304 	movi	r5,12
   15db0:	1009883a 	mov	r4,r2
   15db4:	0000ef80 	call	ef8 <__mulsi3>
   15db8:	8085883a 	add	r2,r16,r2
   15dbc:	10c00017 	ldw	r3,0(r2)
   15dc0:	e0bffb17 	ldw	r2,-20(fp)
   15dc4:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   15dc8:	04000074 	movhi	r16,1
   15dcc:	841d9d04 	addi	r16,r16,30324
   15dd0:	e0bffa17 	ldw	r2,-24(fp)
   15dd4:	01400304 	movi	r5,12
   15dd8:	1009883a 	mov	r4,r2
   15ddc:	0000ef80 	call	ef8 <__mulsi3>
   15de0:	8085883a 	add	r2,r16,r2
   15de4:	10800104 	addi	r2,r2,4
   15de8:	10c00017 	ldw	r3,0(r2)
   15dec:	e0bffb17 	ldw	r2,-20(fp)
   15df0:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   15df4:	04000074 	movhi	r16,1
   15df8:	841d9d04 	addi	r16,r16,30324
   15dfc:	e0bffa17 	ldw	r2,-24(fp)
   15e00:	01400304 	movi	r5,12
   15e04:	1009883a 	mov	r4,r2
   15e08:	0000ef80 	call	ef8 <__mulsi3>
   15e0c:	8085883a 	add	r2,r16,r2
   15e10:	10800204 	addi	r2,r2,8
   15e14:	10c00017 	ldw	r3,0(r2)
   15e18:	e0bffb17 	ldw	r2,-20(fp)
   15e1c:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   15e20:	e13ffa17 	ldw	r4,-24(fp)
   15e24:	00123dc0 	call	123dc <alt_release_fd>
  }
} 
   15e28:	0001883a 	nop
   15e2c:	e6ffff04 	addi	sp,fp,-4
   15e30:	dfc00217 	ldw	ra,8(sp)
   15e34:	df000117 	ldw	fp,4(sp)
   15e38:	dc000017 	ldw	r16,0(sp)
   15e3c:	dec00304 	addi	sp,sp,12
   15e40:	f800283a 	ret

00015e44 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   15e44:	defffb04 	addi	sp,sp,-20
   15e48:	dfc00415 	stw	ra,16(sp)
   15e4c:	df000315 	stw	fp,12(sp)
   15e50:	df000304 	addi	fp,sp,12
   15e54:	e13ffd15 	stw	r4,-12(fp)
   15e58:	e17ffe15 	stw	r5,-8(fp)
   15e5c:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   15e60:	01c07fc4 	movi	r7,511
   15e64:	01800044 	movi	r6,1
   15e68:	e17ffd17 	ldw	r5,-12(fp)
   15e6c:	01000074 	movhi	r4,1
   15e70:	211da004 	addi	r4,r4,30336
   15e74:	0015d600 	call	15d60 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   15e78:	01c07fc4 	movi	r7,511
   15e7c:	000d883a 	mov	r6,zero
   15e80:	e17ffe17 	ldw	r5,-8(fp)
   15e84:	01000074 	movhi	r4,1
   15e88:	211d9d04 	addi	r4,r4,30324
   15e8c:	0015d600 	call	15d60 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   15e90:	01c07fc4 	movi	r7,511
   15e94:	01800044 	movi	r6,1
   15e98:	e17fff17 	ldw	r5,-4(fp)
   15e9c:	01000074 	movhi	r4,1
   15ea0:	211da304 	addi	r4,r4,30348
   15ea4:	0015d600 	call	15d60 <alt_open_fd>
}  
   15ea8:	0001883a 	nop
   15eac:	e037883a 	mov	sp,fp
   15eb0:	dfc00117 	ldw	ra,4(sp)
   15eb4:	df000017 	ldw	fp,0(sp)
   15eb8:	dec00204 	addi	sp,sp,8
   15ebc:	f800283a 	ret

00015ec0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   15ec0:	defffe04 	addi	sp,sp,-8
   15ec4:	dfc00115 	stw	ra,4(sp)
   15ec8:	df000015 	stw	fp,0(sp)
   15ecc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   15ed0:	d0a01617 	ldw	r2,-32680(gp)
   15ed4:	10000326 	beq	r2,zero,15ee4 <alt_get_errno+0x24>
   15ed8:	d0a01617 	ldw	r2,-32680(gp)
   15edc:	103ee83a 	callr	r2
   15ee0:	00000106 	br	15ee8 <alt_get_errno+0x28>
   15ee4:	d0a71104 	addi	r2,gp,-25532
}
   15ee8:	e037883a 	mov	sp,fp
   15eec:	dfc00117 	ldw	ra,4(sp)
   15ef0:	df000017 	ldw	fp,0(sp)
   15ef4:	dec00204 	addi	sp,sp,8
   15ef8:	f800283a 	ret

00015efc <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   15efc:	defffb04 	addi	sp,sp,-20
   15f00:	dfc00415 	stw	ra,16(sp)
   15f04:	df000315 	stw	fp,12(sp)
   15f08:	dc000215 	stw	r16,8(sp)
   15f0c:	df000304 	addi	fp,sp,12
   15f10:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   15f14:	e0bffe17 	ldw	r2,-8(fp)
   15f18:	10800217 	ldw	r2,8(r2)
   15f1c:	10d00034 	orhi	r3,r2,16384
   15f20:	e0bffe17 	ldw	r2,-8(fp)
   15f24:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   15f28:	e03ffd15 	stw	zero,-12(fp)
   15f2c:	00002306 	br	15fbc <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   15f30:	04000074 	movhi	r16,1
   15f34:	841d9d04 	addi	r16,r16,30324
   15f38:	e0bffd17 	ldw	r2,-12(fp)
   15f3c:	01400304 	movi	r5,12
   15f40:	1009883a 	mov	r4,r2
   15f44:	0000ef80 	call	ef8 <__mulsi3>
   15f48:	8085883a 	add	r2,r16,r2
   15f4c:	10c00017 	ldw	r3,0(r2)
   15f50:	e0bffe17 	ldw	r2,-8(fp)
   15f54:	10800017 	ldw	r2,0(r2)
   15f58:	1880151e 	bne	r3,r2,15fb0 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   15f5c:	04000074 	movhi	r16,1
   15f60:	841d9d04 	addi	r16,r16,30324
   15f64:	e0bffd17 	ldw	r2,-12(fp)
   15f68:	01400304 	movi	r5,12
   15f6c:	1009883a 	mov	r4,r2
   15f70:	0000ef80 	call	ef8 <__mulsi3>
   15f74:	8085883a 	add	r2,r16,r2
   15f78:	10800204 	addi	r2,r2,8
   15f7c:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   15f80:	10000b0e 	bge	r2,zero,15fb0 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   15f84:	01400304 	movi	r5,12
   15f88:	e13ffd17 	ldw	r4,-12(fp)
   15f8c:	0000ef80 	call	ef8 <__mulsi3>
   15f90:	1007883a 	mov	r3,r2
   15f94:	00800074 	movhi	r2,1
   15f98:	109d9d04 	addi	r2,r2,30324
   15f9c:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   15fa0:	e0bffe17 	ldw	r2,-8(fp)
   15fa4:	18800226 	beq	r3,r2,15fb0 <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   15fa8:	00bffcc4 	movi	r2,-13
   15fac:	00000806 	br	15fd0 <alt_file_locked+0xd4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   15fb0:	e0bffd17 	ldw	r2,-12(fp)
   15fb4:	10800044 	addi	r2,r2,1
   15fb8:	e0bffd15 	stw	r2,-12(fp)
   15fbc:	d0a01517 	ldw	r2,-32684(gp)
   15fc0:	1007883a 	mov	r3,r2
   15fc4:	e0bffd17 	ldw	r2,-12(fp)
   15fc8:	18bfd92e 	bgeu	r3,r2,15f30 <__alt_mem_Onchip_SRAM+0xf8015f30>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   15fcc:	0005883a 	mov	r2,zero
}
   15fd0:	e6ffff04 	addi	sp,fp,-4
   15fd4:	dfc00217 	ldw	ra,8(sp)
   15fd8:	df000117 	ldw	fp,4(sp)
   15fdc:	dc000017 	ldw	r16,0(sp)
   15fe0:	dec00304 	addi	sp,sp,12
   15fe4:	f800283a 	ret

00015fe8 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   15fe8:	defff604 	addi	sp,sp,-40
   15fec:	dfc00915 	stw	ra,36(sp)
   15ff0:	df000815 	stw	fp,32(sp)
   15ff4:	df000804 	addi	fp,sp,32
   15ff8:	e13ffd15 	stw	r4,-12(fp)
   15ffc:	e17ffe15 	stw	r5,-8(fp)
   16000:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   16004:	00bfffc4 	movi	r2,-1
   16008:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   1600c:	00bffb44 	movi	r2,-19
   16010:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   16014:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   16018:	d1601304 	addi	r5,gp,-32692
   1601c:	e13ffd17 	ldw	r4,-12(fp)
   16020:	0015a100 	call	15a10 <alt_find_dev>
   16024:	e0bff815 	stw	r2,-32(fp)
   16028:	e0bff817 	ldw	r2,-32(fp)
   1602c:	1000051e 	bne	r2,zero,16044 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   16030:	e13ffd17 	ldw	r4,-12(fp)
   16034:	00163d00 	call	163d0 <alt_find_file>
   16038:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   1603c:	00800044 	movi	r2,1
   16040:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   16044:	e0bff817 	ldw	r2,-32(fp)
   16048:	10002b26 	beq	r2,zero,160f8 <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
   1604c:	e13ff817 	ldw	r4,-32(fp)
   16050:	00164d80 	call	164d8 <alt_get_fd>
   16054:	e0bff915 	stw	r2,-28(fp)
   16058:	e0bff917 	ldw	r2,-28(fp)
   1605c:	1000030e 	bge	r2,zero,1606c <open+0x84>
    {
      status = index;
   16060:	e0bff917 	ldw	r2,-28(fp)
   16064:	e0bffa15 	stw	r2,-24(fp)
   16068:	00002506 	br	16100 <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
   1606c:	01400304 	movi	r5,12
   16070:	e13ff917 	ldw	r4,-28(fp)
   16074:	0000ef80 	call	ef8 <__mulsi3>
   16078:	1007883a 	mov	r3,r2
   1607c:	00800074 	movhi	r2,1
   16080:	109d9d04 	addi	r2,r2,30324
   16084:	1885883a 	add	r2,r3,r2
   16088:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   1608c:	e0fffe17 	ldw	r3,-8(fp)
   16090:	00900034 	movhi	r2,16384
   16094:	10bfffc4 	addi	r2,r2,-1
   16098:	1886703a 	and	r3,r3,r2
   1609c:	e0bffc17 	ldw	r2,-16(fp)
   160a0:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   160a4:	e0bffb17 	ldw	r2,-20(fp)
   160a8:	1000051e 	bne	r2,zero,160c0 <open+0xd8>
   160ac:	e13ffc17 	ldw	r4,-16(fp)
   160b0:	0015efc0 	call	15efc <alt_file_locked>
   160b4:	e0bffa15 	stw	r2,-24(fp)
   160b8:	e0bffa17 	ldw	r2,-24(fp)
   160bc:	10001016 	blt	r2,zero,16100 <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   160c0:	e0bff817 	ldw	r2,-32(fp)
   160c4:	10800317 	ldw	r2,12(r2)
   160c8:	10000826 	beq	r2,zero,160ec <open+0x104>
   160cc:	e0bff817 	ldw	r2,-32(fp)
   160d0:	10800317 	ldw	r2,12(r2)
   160d4:	e1ffff17 	ldw	r7,-4(fp)
   160d8:	e1bffe17 	ldw	r6,-8(fp)
   160dc:	e17ffd17 	ldw	r5,-12(fp)
   160e0:	e13ffc17 	ldw	r4,-16(fp)
   160e4:	103ee83a 	callr	r2
   160e8:	00000106 	br	160f0 <open+0x108>
   160ec:	0005883a 	mov	r2,zero
   160f0:	e0bffa15 	stw	r2,-24(fp)
   160f4:	00000206 	br	16100 <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
   160f8:	00bffb44 	movi	r2,-19
   160fc:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   16100:	e0bffa17 	ldw	r2,-24(fp)
   16104:	1000090e 	bge	r2,zero,1612c <open+0x144>
  {
    alt_release_fd (index);  
   16108:	e13ff917 	ldw	r4,-28(fp)
   1610c:	00123dc0 	call	123dc <alt_release_fd>
    ALT_ERRNO = -status;
   16110:	0015ec00 	call	15ec0 <alt_get_errno>
   16114:	1007883a 	mov	r3,r2
   16118:	e0bffa17 	ldw	r2,-24(fp)
   1611c:	0085c83a 	sub	r2,zero,r2
   16120:	18800015 	stw	r2,0(r3)
    return -1;
   16124:	00bfffc4 	movi	r2,-1
   16128:	00000106 	br	16130 <open+0x148>
  }
  
  /* return the reference upon success */

  return index;
   1612c:	e0bff917 	ldw	r2,-28(fp)
}
   16130:	e037883a 	mov	sp,fp
   16134:	dfc00117 	ldw	ra,4(sp)
   16138:	df000017 	ldw	fp,0(sp)
   1613c:	dec00204 	addi	sp,sp,8
   16140:	f800283a 	ret

00016144 <alt_printf>:
   16144:	defff204 	addi	sp,sp,-56
   16148:	dfc00a15 	stw	ra,40(sp)
   1614c:	df000915 	stw	fp,36(sp)
   16150:	df000904 	addi	fp,sp,36
   16154:	e13fff15 	stw	r4,-4(fp)
   16158:	e1400215 	stw	r5,8(fp)
   1615c:	e1800315 	stw	r6,12(fp)
   16160:	e1c00415 	stw	r7,16(fp)
   16164:	e0800204 	addi	r2,fp,8
   16168:	e0bffe15 	stw	r2,-8(fp)
   1616c:	e0bfff17 	ldw	r2,-4(fp)
   16170:	e0bff715 	stw	r2,-36(fp)
   16174:	00006f06 	br	16334 <alt_printf+0x1f0>
   16178:	e0bff807 	ldb	r2,-32(fp)
   1617c:	10800960 	cmpeqi	r2,r2,37
   16180:	1000041e 	bne	r2,zero,16194 <alt_printf+0x50>
   16184:	e0bff807 	ldb	r2,-32(fp)
   16188:	1009883a 	mov	r4,r2
   1618c:	00163700 	call	16370 <alt_putchar>
   16190:	00006806 	br	16334 <alt_printf+0x1f0>
   16194:	e0bff717 	ldw	r2,-36(fp)
   16198:	10c00044 	addi	r3,r2,1
   1619c:	e0fff715 	stw	r3,-36(fp)
   161a0:	10800003 	ldbu	r2,0(r2)
   161a4:	e0bff805 	stb	r2,-32(fp)
   161a8:	e0bff807 	ldb	r2,-32(fp)
   161ac:	10006926 	beq	r2,zero,16354 <alt_printf+0x210>
   161b0:	e0bff807 	ldb	r2,-32(fp)
   161b4:	10800958 	cmpnei	r2,r2,37
   161b8:	1000041e 	bne	r2,zero,161cc <alt_printf+0x88>
   161bc:	e0bff807 	ldb	r2,-32(fp)
   161c0:	1009883a 	mov	r4,r2
   161c4:	00163700 	call	16370 <alt_putchar>
   161c8:	00005a06 	br	16334 <alt_printf+0x1f0>
   161cc:	e0bff807 	ldb	r2,-32(fp)
   161d0:	108018d8 	cmpnei	r2,r2,99
   161d4:	1000081e 	bne	r2,zero,161f8 <alt_printf+0xb4>
   161d8:	e0bffe17 	ldw	r2,-8(fp)
   161dc:	10c00104 	addi	r3,r2,4
   161e0:	e0fffe15 	stw	r3,-8(fp)
   161e4:	10800017 	ldw	r2,0(r2)
   161e8:	e0bffd15 	stw	r2,-12(fp)
   161ec:	e13ffd17 	ldw	r4,-12(fp)
   161f0:	00163700 	call	16370 <alt_putchar>
   161f4:	00004f06 	br	16334 <alt_printf+0x1f0>
   161f8:	e0bff807 	ldb	r2,-32(fp)
   161fc:	10801e18 	cmpnei	r2,r2,120
   16200:	1000341e 	bne	r2,zero,162d4 <alt_printf+0x190>
   16204:	e0bffe17 	ldw	r2,-8(fp)
   16208:	10c00104 	addi	r3,r2,4
   1620c:	e0fffe15 	stw	r3,-8(fp)
   16210:	10800017 	ldw	r2,0(r2)
   16214:	e0bffb15 	stw	r2,-20(fp)
   16218:	e0bffb17 	ldw	r2,-20(fp)
   1621c:	1000031e 	bne	r2,zero,1622c <alt_printf+0xe8>
   16220:	01000c04 	movi	r4,48
   16224:	00163700 	call	16370 <alt_putchar>
   16228:	00004206 	br	16334 <alt_printf+0x1f0>
   1622c:	00800704 	movi	r2,28
   16230:	e0bff915 	stw	r2,-28(fp)
   16234:	00000306 	br	16244 <alt_printf+0x100>
   16238:	e0bff917 	ldw	r2,-28(fp)
   1623c:	10bfff04 	addi	r2,r2,-4
   16240:	e0bff915 	stw	r2,-28(fp)
   16244:	00c003c4 	movi	r3,15
   16248:	e0bff917 	ldw	r2,-28(fp)
   1624c:	1884983a 	sll	r2,r3,r2
   16250:	1007883a 	mov	r3,r2
   16254:	e0bffb17 	ldw	r2,-20(fp)
   16258:	1884703a 	and	r2,r3,r2
   1625c:	103ff626 	beq	r2,zero,16238 <__alt_mem_Onchip_SRAM+0xf8016238>
   16260:	00001906 	br	162c8 <alt_printf+0x184>
   16264:	00c003c4 	movi	r3,15
   16268:	e0bff917 	ldw	r2,-28(fp)
   1626c:	1884983a 	sll	r2,r3,r2
   16270:	1007883a 	mov	r3,r2
   16274:	e0bffb17 	ldw	r2,-20(fp)
   16278:	1886703a 	and	r3,r3,r2
   1627c:	e0bff917 	ldw	r2,-28(fp)
   16280:	1884d83a 	srl	r2,r3,r2
   16284:	e0bffc15 	stw	r2,-16(fp)
   16288:	e0bffc17 	ldw	r2,-16(fp)
   1628c:	108002a8 	cmpgeui	r2,r2,10
   16290:	1000041e 	bne	r2,zero,162a4 <alt_printf+0x160>
   16294:	e0bffc17 	ldw	r2,-16(fp)
   16298:	10800c04 	addi	r2,r2,48
   1629c:	e0bff805 	stb	r2,-32(fp)
   162a0:	00000306 	br	162b0 <alt_printf+0x16c>
   162a4:	e0bffc17 	ldw	r2,-16(fp)
   162a8:	108015c4 	addi	r2,r2,87
   162ac:	e0bff805 	stb	r2,-32(fp)
   162b0:	e0bff807 	ldb	r2,-32(fp)
   162b4:	1009883a 	mov	r4,r2
   162b8:	00163700 	call	16370 <alt_putchar>
   162bc:	e0bff917 	ldw	r2,-28(fp)
   162c0:	10bfff04 	addi	r2,r2,-4
   162c4:	e0bff915 	stw	r2,-28(fp)
   162c8:	e0bff917 	ldw	r2,-28(fp)
   162cc:	103fe50e 	bge	r2,zero,16264 <__alt_mem_Onchip_SRAM+0xf8016264>
   162d0:	00001806 	br	16334 <alt_printf+0x1f0>
   162d4:	e0bff807 	ldb	r2,-32(fp)
   162d8:	10801cd8 	cmpnei	r2,r2,115
   162dc:	1000151e 	bne	r2,zero,16334 <alt_printf+0x1f0>
   162e0:	e0bffe17 	ldw	r2,-8(fp)
   162e4:	10c00104 	addi	r3,r2,4
   162e8:	e0fffe15 	stw	r3,-8(fp)
   162ec:	10800017 	ldw	r2,0(r2)
   162f0:	e0bffa15 	stw	r2,-24(fp)
   162f4:	00000906 	br	1631c <alt_printf+0x1d8>
   162f8:	e0bffa17 	ldw	r2,-24(fp)
   162fc:	10c00044 	addi	r3,r2,1
   16300:	e0fffa15 	stw	r3,-24(fp)
   16304:	10800003 	ldbu	r2,0(r2)
   16308:	10803fcc 	andi	r2,r2,255
   1630c:	1080201c 	xori	r2,r2,128
   16310:	10bfe004 	addi	r2,r2,-128
   16314:	1009883a 	mov	r4,r2
   16318:	00163700 	call	16370 <alt_putchar>
   1631c:	e0bffa17 	ldw	r2,-24(fp)
   16320:	10800003 	ldbu	r2,0(r2)
   16324:	10803fcc 	andi	r2,r2,255
   16328:	1080201c 	xori	r2,r2,128
   1632c:	10bfe004 	addi	r2,r2,-128
   16330:	103ff11e 	bne	r2,zero,162f8 <__alt_mem_Onchip_SRAM+0xf80162f8>
   16334:	e0bff717 	ldw	r2,-36(fp)
   16338:	10c00044 	addi	r3,r2,1
   1633c:	e0fff715 	stw	r3,-36(fp)
   16340:	10800003 	ldbu	r2,0(r2)
   16344:	e0bff805 	stb	r2,-32(fp)
   16348:	e0bff807 	ldb	r2,-32(fp)
   1634c:	103f8a1e 	bne	r2,zero,16178 <__alt_mem_Onchip_SRAM+0xf8016178>
   16350:	00000106 	br	16358 <alt_printf+0x214>
   16354:	0001883a 	nop
   16358:	0001883a 	nop
   1635c:	e037883a 	mov	sp,fp
   16360:	dfc00117 	ldw	ra,4(sp)
   16364:	df000017 	ldw	fp,0(sp)
   16368:	dec00504 	addi	sp,sp,20
   1636c:	f800283a 	ret

00016370 <alt_putchar>:
   16370:	defffd04 	addi	sp,sp,-12
   16374:	dfc00215 	stw	ra,8(sp)
   16378:	df000115 	stw	fp,4(sp)
   1637c:	df000104 	addi	fp,sp,4
   16380:	e13fff15 	stw	r4,-4(fp)
   16384:	d0a00c17 	ldw	r2,-32720(gp)
   16388:	10800217 	ldw	r2,8(r2)
   1638c:	100b883a 	mov	r5,r2
   16390:	e13fff17 	ldw	r4,-4(fp)
   16394:	000a6f80 	call	a6f8 <putc>
   16398:	e037883a 	mov	sp,fp
   1639c:	dfc00117 	ldw	ra,4(sp)
   163a0:	df000017 	ldw	fp,0(sp)
   163a4:	dec00204 	addi	sp,sp,8
   163a8:	f800283a 	ret

000163ac <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   163ac:	deffff04 	addi	sp,sp,-4
   163b0:	df000015 	stw	fp,0(sp)
   163b4:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   163b8:	000170fa 	wrctl	ienable,zero
}
   163bc:	0001883a 	nop
   163c0:	e037883a 	mov	sp,fp
   163c4:	df000017 	ldw	fp,0(sp)
   163c8:	dec00104 	addi	sp,sp,4
   163cc:	f800283a 	ret

000163d0 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   163d0:	defffb04 	addi	sp,sp,-20
   163d4:	dfc00415 	stw	ra,16(sp)
   163d8:	df000315 	stw	fp,12(sp)
   163dc:	df000304 	addi	fp,sp,12
   163e0:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   163e4:	d0a01117 	ldw	r2,-32700(gp)
   163e8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   163ec:	00003106 	br	164b4 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   163f0:	e0bffd17 	ldw	r2,-12(fp)
   163f4:	10800217 	ldw	r2,8(r2)
   163f8:	1009883a 	mov	r4,r2
   163fc:	00013b80 	call	13b8 <strlen>
   16400:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   16404:	e0bffd17 	ldw	r2,-12(fp)
   16408:	10c00217 	ldw	r3,8(r2)
   1640c:	e0bffe17 	ldw	r2,-8(fp)
   16410:	10bfffc4 	addi	r2,r2,-1
   16414:	1885883a 	add	r2,r3,r2
   16418:	10800003 	ldbu	r2,0(r2)
   1641c:	10803fcc 	andi	r2,r2,255
   16420:	1080201c 	xori	r2,r2,128
   16424:	10bfe004 	addi	r2,r2,-128
   16428:	10800bd8 	cmpnei	r2,r2,47
   1642c:	1000031e 	bne	r2,zero,1643c <alt_find_file+0x6c>
    {
      len -= 1;
   16430:	e0bffe17 	ldw	r2,-8(fp)
   16434:	10bfffc4 	addi	r2,r2,-1
   16438:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   1643c:	e0bffe17 	ldw	r2,-8(fp)
   16440:	e0ffff17 	ldw	r3,-4(fp)
   16444:	1885883a 	add	r2,r3,r2
   16448:	10800003 	ldbu	r2,0(r2)
   1644c:	10803fcc 	andi	r2,r2,255
   16450:	1080201c 	xori	r2,r2,128
   16454:	10bfe004 	addi	r2,r2,-128
   16458:	10800be0 	cmpeqi	r2,r2,47
   1645c:	1000081e 	bne	r2,zero,16480 <alt_find_file+0xb0>
   16460:	e0bffe17 	ldw	r2,-8(fp)
   16464:	e0ffff17 	ldw	r3,-4(fp)
   16468:	1885883a 	add	r2,r3,r2
   1646c:	10800003 	ldbu	r2,0(r2)
   16470:	10803fcc 	andi	r2,r2,255
   16474:	1080201c 	xori	r2,r2,128
   16478:	10bfe004 	addi	r2,r2,-128
   1647c:	10000a1e 	bne	r2,zero,164a8 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   16480:	e0bffd17 	ldw	r2,-12(fp)
   16484:	10800217 	ldw	r2,8(r2)
   16488:	e0fffe17 	ldw	r3,-8(fp)
   1648c:	180d883a 	mov	r6,r3
   16490:	e17fff17 	ldw	r5,-4(fp)
   16494:	1009883a 	mov	r4,r2
   16498:	00166840 	call	16684 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   1649c:	1000021e 	bne	r2,zero,164a8 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   164a0:	e0bffd17 	ldw	r2,-12(fp)
   164a4:	00000706 	br	164c4 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   164a8:	e0bffd17 	ldw	r2,-12(fp)
   164ac:	10800017 	ldw	r2,0(r2)
   164b0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   164b4:	e0fffd17 	ldw	r3,-12(fp)
   164b8:	d0a01104 	addi	r2,gp,-32700
   164bc:	18bfcc1e 	bne	r3,r2,163f0 <__alt_mem_Onchip_SRAM+0xf80163f0>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   164c0:	0005883a 	mov	r2,zero
}
   164c4:	e037883a 	mov	sp,fp
   164c8:	dfc00117 	ldw	ra,4(sp)
   164cc:	df000017 	ldw	fp,0(sp)
   164d0:	dec00204 	addi	sp,sp,8
   164d4:	f800283a 	ret

000164d8 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   164d8:	defffa04 	addi	sp,sp,-24
   164dc:	dfc00515 	stw	ra,20(sp)
   164e0:	df000415 	stw	fp,16(sp)
   164e4:	dc000315 	stw	r16,12(sp)
   164e8:	df000404 	addi	fp,sp,16
   164ec:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
   164f0:	00bffa04 	movi	r2,-24
   164f4:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   164f8:	e03ffc15 	stw	zero,-16(fp)
   164fc:	00001d06 	br	16574 <alt_get_fd+0x9c>
  {
    if (!alt_fd_list[i].dev)
   16500:	04000074 	movhi	r16,1
   16504:	841d9d04 	addi	r16,r16,30324
   16508:	e0bffc17 	ldw	r2,-16(fp)
   1650c:	01400304 	movi	r5,12
   16510:	1009883a 	mov	r4,r2
   16514:	0000ef80 	call	ef8 <__mulsi3>
   16518:	8085883a 	add	r2,r16,r2
   1651c:	10800017 	ldw	r2,0(r2)
   16520:	1000111e 	bne	r2,zero,16568 <alt_get_fd+0x90>
    {
      alt_fd_list[i].dev = dev;
   16524:	04000074 	movhi	r16,1
   16528:	841d9d04 	addi	r16,r16,30324
   1652c:	e0bffc17 	ldw	r2,-16(fp)
   16530:	01400304 	movi	r5,12
   16534:	1009883a 	mov	r4,r2
   16538:	0000ef80 	call	ef8 <__mulsi3>
   1653c:	8085883a 	add	r2,r16,r2
   16540:	e0fffe17 	ldw	r3,-8(fp)
   16544:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   16548:	d0e01517 	ldw	r3,-32684(gp)
   1654c:	e0bffc17 	ldw	r2,-16(fp)
   16550:	1880020e 	bge	r3,r2,1655c <alt_get_fd+0x84>
      {
        alt_max_fd = i;
   16554:	e0bffc17 	ldw	r2,-16(fp)
   16558:	d0a01515 	stw	r2,-32684(gp)
      }
      rc = i;
   1655c:	e0bffc17 	ldw	r2,-16(fp)
   16560:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
   16564:	00000606 	br	16580 <alt_get_fd+0xa8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   16568:	e0bffc17 	ldw	r2,-16(fp)
   1656c:	10800044 	addi	r2,r2,1
   16570:	e0bffc15 	stw	r2,-16(fp)
   16574:	e0bffc17 	ldw	r2,-16(fp)
   16578:	10800810 	cmplti	r2,r2,32
   1657c:	103fe01e 	bne	r2,zero,16500 <__alt_mem_Onchip_SRAM+0xf8016500>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   16580:	e0bffd17 	ldw	r2,-12(fp)
}
   16584:	e6ffff04 	addi	sp,fp,-4
   16588:	dfc00217 	ldw	ra,8(sp)
   1658c:	df000117 	ldw	fp,4(sp)
   16590:	dc000017 	ldw	r16,0(sp)
   16594:	dec00304 	addi	sp,sp,12
   16598:	f800283a 	ret

0001659c <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   1659c:	defffe04 	addi	sp,sp,-8
   165a0:	df000115 	stw	fp,4(sp)
   165a4:	df000104 	addi	fp,sp,4
   165a8:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   165ac:	e0bfff17 	ldw	r2,-4(fp)
   165b0:	10bffe84 	addi	r2,r2,-6
   165b4:	10c00428 	cmpgeui	r3,r2,16
   165b8:	18001a1e 	bne	r3,zero,16624 <alt_exception_cause_generated_bad_addr+0x88>
   165bc:	100690ba 	slli	r3,r2,2
   165c0:	00800074 	movhi	r2,1
   165c4:	10997504 	addi	r2,r2,26068
   165c8:	1885883a 	add	r2,r3,r2
   165cc:	10800017 	ldw	r2,0(r2)
   165d0:	1000683a 	jmp	r2
   165d4:	00016614 	movui	zero,1432
   165d8:	00016614 	movui	zero,1432
   165dc:	00016624 	muli	zero,zero,1432
   165e0:	00016624 	muli	zero,zero,1432
   165e4:	00016624 	muli	zero,zero,1432
   165e8:	00016614 	movui	zero,1432
   165ec:	0001661c 	xori	zero,zero,1432
   165f0:	00016624 	muli	zero,zero,1432
   165f4:	00016614 	movui	zero,1432
   165f8:	00016614 	movui	zero,1432
   165fc:	00016624 	muli	zero,zero,1432
   16600:	00016614 	movui	zero,1432
   16604:	0001661c 	xori	zero,zero,1432
   16608:	00016624 	muli	zero,zero,1432
   1660c:	00016624 	muli	zero,zero,1432
   16610:	00016614 	movui	zero,1432
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   16614:	00800044 	movi	r2,1
   16618:	00000306 	br	16628 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   1661c:	0005883a 	mov	r2,zero
   16620:	00000106 	br	16628 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
   16624:	0005883a 	mov	r2,zero
  }
}
   16628:	e037883a 	mov	sp,fp
   1662c:	df000017 	ldw	fp,0(sp)
   16630:	dec00104 	addi	sp,sp,4
   16634:	f800283a 	ret

00016638 <atexit>:
   16638:	200b883a 	mov	r5,r4
   1663c:	000f883a 	mov	r7,zero
   16640:	000d883a 	mov	r6,zero
   16644:	0009883a 	mov	r4,zero
   16648:	00167001 	jmpi	16700 <__register_exitproc>

0001664c <exit>:
   1664c:	defffe04 	addi	sp,sp,-8
   16650:	000b883a 	mov	r5,zero
   16654:	dc000015 	stw	r16,0(sp)
   16658:	dfc00115 	stw	ra,4(sp)
   1665c:	2021883a 	mov	r16,r4
   16660:	00168180 	call	16818 <__call_exitprocs>
   16664:	008000b4 	movhi	r2,2
   16668:	10a24804 	addi	r2,r2,-30432
   1666c:	11000017 	ldw	r4,0(r2)
   16670:	20800f17 	ldw	r2,60(r4)
   16674:	10000126 	beq	r2,zero,1667c <exit+0x30>
   16678:	103ee83a 	callr	r2
   1667c:	8009883a 	mov	r4,r16
   16680:	00169980 	call	16998 <_exit>

00016684 <memcmp>:
   16684:	01c000c4 	movi	r7,3
   16688:	3980192e 	bgeu	r7,r6,166f0 <memcmp+0x6c>
   1668c:	2144b03a 	or	r2,r4,r5
   16690:	11c4703a 	and	r2,r2,r7
   16694:	10000f26 	beq	r2,zero,166d4 <memcmp+0x50>
   16698:	20800003 	ldbu	r2,0(r4)
   1669c:	28c00003 	ldbu	r3,0(r5)
   166a0:	10c0151e 	bne	r2,r3,166f8 <memcmp+0x74>
   166a4:	31bfff84 	addi	r6,r6,-2
   166a8:	01ffffc4 	movi	r7,-1
   166ac:	00000406 	br	166c0 <memcmp+0x3c>
   166b0:	20800003 	ldbu	r2,0(r4)
   166b4:	28c00003 	ldbu	r3,0(r5)
   166b8:	31bfffc4 	addi	r6,r6,-1
   166bc:	10c00e1e 	bne	r2,r3,166f8 <memcmp+0x74>
   166c0:	21000044 	addi	r4,r4,1
   166c4:	29400044 	addi	r5,r5,1
   166c8:	31fff91e 	bne	r6,r7,166b0 <__alt_mem_Onchip_SRAM+0xf80166b0>
   166cc:	0005883a 	mov	r2,zero
   166d0:	f800283a 	ret
   166d4:	20c00017 	ldw	r3,0(r4)
   166d8:	28800017 	ldw	r2,0(r5)
   166dc:	18bfee1e 	bne	r3,r2,16698 <__alt_mem_Onchip_SRAM+0xf8016698>
   166e0:	31bfff04 	addi	r6,r6,-4
   166e4:	21000104 	addi	r4,r4,4
   166e8:	29400104 	addi	r5,r5,4
   166ec:	39bff936 	bltu	r7,r6,166d4 <__alt_mem_Onchip_SRAM+0xf80166d4>
   166f0:	303fe91e 	bne	r6,zero,16698 <__alt_mem_Onchip_SRAM+0xf8016698>
   166f4:	003ff506 	br	166cc <__alt_mem_Onchip_SRAM+0xf80166cc>
   166f8:	10c5c83a 	sub	r2,r2,r3
   166fc:	f800283a 	ret

00016700 <__register_exitproc>:
   16700:	defffa04 	addi	sp,sp,-24
   16704:	dc000315 	stw	r16,12(sp)
   16708:	040000b4 	movhi	r16,2
   1670c:	84224804 	addi	r16,r16,-30432
   16710:	80c00017 	ldw	r3,0(r16)
   16714:	dc400415 	stw	r17,16(sp)
   16718:	dfc00515 	stw	ra,20(sp)
   1671c:	18805217 	ldw	r2,328(r3)
   16720:	2023883a 	mov	r17,r4
   16724:	10003726 	beq	r2,zero,16804 <__register_exitproc+0x104>
   16728:	10c00117 	ldw	r3,4(r2)
   1672c:	010007c4 	movi	r4,31
   16730:	20c00e16 	blt	r4,r3,1676c <__register_exitproc+0x6c>
   16734:	1a000044 	addi	r8,r3,1
   16738:	8800221e 	bne	r17,zero,167c4 <__register_exitproc+0xc4>
   1673c:	18c00084 	addi	r3,r3,2
   16740:	18c7883a 	add	r3,r3,r3
   16744:	18c7883a 	add	r3,r3,r3
   16748:	12000115 	stw	r8,4(r2)
   1674c:	10c7883a 	add	r3,r2,r3
   16750:	19400015 	stw	r5,0(r3)
   16754:	0005883a 	mov	r2,zero
   16758:	dfc00517 	ldw	ra,20(sp)
   1675c:	dc400417 	ldw	r17,16(sp)
   16760:	dc000317 	ldw	r16,12(sp)
   16764:	dec00604 	addi	sp,sp,24
   16768:	f800283a 	ret
   1676c:	00800034 	movhi	r2,0
   16770:	10800004 	addi	r2,r2,0
   16774:	10002626 	beq	r2,zero,16810 <__register_exitproc+0x110>
   16778:	01006404 	movi	r4,400
   1677c:	d9400015 	stw	r5,0(sp)
   16780:	d9800115 	stw	r6,4(sp)
   16784:	d9c00215 	stw	r7,8(sp)
   16788:	00000000 	call	0 <__alt_mem_SDRAM>
   1678c:	d9400017 	ldw	r5,0(sp)
   16790:	d9800117 	ldw	r6,4(sp)
   16794:	d9c00217 	ldw	r7,8(sp)
   16798:	10001d26 	beq	r2,zero,16810 <__register_exitproc+0x110>
   1679c:	81000017 	ldw	r4,0(r16)
   167a0:	10000115 	stw	zero,4(r2)
   167a4:	02000044 	movi	r8,1
   167a8:	22405217 	ldw	r9,328(r4)
   167ac:	0007883a 	mov	r3,zero
   167b0:	12400015 	stw	r9,0(r2)
   167b4:	20805215 	stw	r2,328(r4)
   167b8:	10006215 	stw	zero,392(r2)
   167bc:	10006315 	stw	zero,396(r2)
   167c0:	883fde26 	beq	r17,zero,1673c <__alt_mem_Onchip_SRAM+0xf801673c>
   167c4:	18c9883a 	add	r4,r3,r3
   167c8:	2109883a 	add	r4,r4,r4
   167cc:	1109883a 	add	r4,r2,r4
   167d0:	21802215 	stw	r6,136(r4)
   167d4:	01800044 	movi	r6,1
   167d8:	12406217 	ldw	r9,392(r2)
   167dc:	30cc983a 	sll	r6,r6,r3
   167e0:	4992b03a 	or	r9,r9,r6
   167e4:	12406215 	stw	r9,392(r2)
   167e8:	21c04215 	stw	r7,264(r4)
   167ec:	01000084 	movi	r4,2
   167f0:	893fd21e 	bne	r17,r4,1673c <__alt_mem_Onchip_SRAM+0xf801673c>
   167f4:	11006317 	ldw	r4,396(r2)
   167f8:	218cb03a 	or	r6,r4,r6
   167fc:	11806315 	stw	r6,396(r2)
   16800:	003fce06 	br	1673c <__alt_mem_Onchip_SRAM+0xf801673c>
   16804:	18805304 	addi	r2,r3,332
   16808:	18805215 	stw	r2,328(r3)
   1680c:	003fc606 	br	16728 <__alt_mem_Onchip_SRAM+0xf8016728>
   16810:	00bfffc4 	movi	r2,-1
   16814:	003fd006 	br	16758 <__alt_mem_Onchip_SRAM+0xf8016758>

00016818 <__call_exitprocs>:
   16818:	defff504 	addi	sp,sp,-44
   1681c:	df000915 	stw	fp,36(sp)
   16820:	dd400615 	stw	r21,24(sp)
   16824:	dc800315 	stw	r18,12(sp)
   16828:	dfc00a15 	stw	ra,40(sp)
   1682c:	ddc00815 	stw	r23,32(sp)
   16830:	dd800715 	stw	r22,28(sp)
   16834:	dd000515 	stw	r20,20(sp)
   16838:	dcc00415 	stw	r19,16(sp)
   1683c:	dc400215 	stw	r17,8(sp)
   16840:	dc000115 	stw	r16,4(sp)
   16844:	d9000015 	stw	r4,0(sp)
   16848:	2839883a 	mov	fp,r5
   1684c:	04800044 	movi	r18,1
   16850:	057fffc4 	movi	r21,-1
   16854:	008000b4 	movhi	r2,2
   16858:	10a24804 	addi	r2,r2,-30432
   1685c:	12000017 	ldw	r8,0(r2)
   16860:	45005217 	ldw	r20,328(r8)
   16864:	44c05204 	addi	r19,r8,328
   16868:	a0001c26 	beq	r20,zero,168dc <__call_exitprocs+0xc4>
   1686c:	a0800117 	ldw	r2,4(r20)
   16870:	15ffffc4 	addi	r23,r2,-1
   16874:	b8000d16 	blt	r23,zero,168ac <__call_exitprocs+0x94>
   16878:	14000044 	addi	r16,r2,1
   1687c:	8421883a 	add	r16,r16,r16
   16880:	8421883a 	add	r16,r16,r16
   16884:	84402004 	addi	r17,r16,128
   16888:	a463883a 	add	r17,r20,r17
   1688c:	a421883a 	add	r16,r20,r16
   16890:	e0001e26 	beq	fp,zero,1690c <__call_exitprocs+0xf4>
   16894:	80804017 	ldw	r2,256(r16)
   16898:	e0801c26 	beq	fp,r2,1690c <__call_exitprocs+0xf4>
   1689c:	bdffffc4 	addi	r23,r23,-1
   168a0:	843fff04 	addi	r16,r16,-4
   168a4:	8c7fff04 	addi	r17,r17,-4
   168a8:	bd7ff91e 	bne	r23,r21,16890 <__alt_mem_Onchip_SRAM+0xf8016890>
   168ac:	00800034 	movhi	r2,0
   168b0:	10800004 	addi	r2,r2,0
   168b4:	10000926 	beq	r2,zero,168dc <__call_exitprocs+0xc4>
   168b8:	a0800117 	ldw	r2,4(r20)
   168bc:	1000301e 	bne	r2,zero,16980 <__call_exitprocs+0x168>
   168c0:	a0800017 	ldw	r2,0(r20)
   168c4:	10003226 	beq	r2,zero,16990 <__call_exitprocs+0x178>
   168c8:	a009883a 	mov	r4,r20
   168cc:	98800015 	stw	r2,0(r19)
   168d0:	00000000 	call	0 <__alt_mem_SDRAM>
   168d4:	9d000017 	ldw	r20,0(r19)
   168d8:	a03fe41e 	bne	r20,zero,1686c <__alt_mem_Onchip_SRAM+0xf801686c>
   168dc:	dfc00a17 	ldw	ra,40(sp)
   168e0:	df000917 	ldw	fp,36(sp)
   168e4:	ddc00817 	ldw	r23,32(sp)
   168e8:	dd800717 	ldw	r22,28(sp)
   168ec:	dd400617 	ldw	r21,24(sp)
   168f0:	dd000517 	ldw	r20,20(sp)
   168f4:	dcc00417 	ldw	r19,16(sp)
   168f8:	dc800317 	ldw	r18,12(sp)
   168fc:	dc400217 	ldw	r17,8(sp)
   16900:	dc000117 	ldw	r16,4(sp)
   16904:	dec00b04 	addi	sp,sp,44
   16908:	f800283a 	ret
   1690c:	a0800117 	ldw	r2,4(r20)
   16910:	80c00017 	ldw	r3,0(r16)
   16914:	10bfffc4 	addi	r2,r2,-1
   16918:	15c01426 	beq	r2,r23,1696c <__call_exitprocs+0x154>
   1691c:	80000015 	stw	zero,0(r16)
   16920:	183fde26 	beq	r3,zero,1689c <__alt_mem_Onchip_SRAM+0xf801689c>
   16924:	95c8983a 	sll	r4,r18,r23
   16928:	a0806217 	ldw	r2,392(r20)
   1692c:	a5800117 	ldw	r22,4(r20)
   16930:	2084703a 	and	r2,r4,r2
   16934:	10000b26 	beq	r2,zero,16964 <__call_exitprocs+0x14c>
   16938:	a0806317 	ldw	r2,396(r20)
   1693c:	2088703a 	and	r4,r4,r2
   16940:	20000c1e 	bne	r4,zero,16974 <__call_exitprocs+0x15c>
   16944:	89400017 	ldw	r5,0(r17)
   16948:	d9000017 	ldw	r4,0(sp)
   1694c:	183ee83a 	callr	r3
   16950:	a0800117 	ldw	r2,4(r20)
   16954:	15bfbf1e 	bne	r2,r22,16854 <__alt_mem_Onchip_SRAM+0xf8016854>
   16958:	98800017 	ldw	r2,0(r19)
   1695c:	153fcf26 	beq	r2,r20,1689c <__alt_mem_Onchip_SRAM+0xf801689c>
   16960:	003fbc06 	br	16854 <__alt_mem_Onchip_SRAM+0xf8016854>
   16964:	183ee83a 	callr	r3
   16968:	003ff906 	br	16950 <__alt_mem_Onchip_SRAM+0xf8016950>
   1696c:	a5c00115 	stw	r23,4(r20)
   16970:	003feb06 	br	16920 <__alt_mem_Onchip_SRAM+0xf8016920>
   16974:	89000017 	ldw	r4,0(r17)
   16978:	183ee83a 	callr	r3
   1697c:	003ff406 	br	16950 <__alt_mem_Onchip_SRAM+0xf8016950>
   16980:	a0800017 	ldw	r2,0(r20)
   16984:	a027883a 	mov	r19,r20
   16988:	1029883a 	mov	r20,r2
   1698c:	003fb606 	br	16868 <__alt_mem_Onchip_SRAM+0xf8016868>
   16990:	0005883a 	mov	r2,zero
   16994:	003ffb06 	br	16984 <__alt_mem_Onchip_SRAM+0xf8016984>

00016998 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   16998:	defffd04 	addi	sp,sp,-12
   1699c:	df000215 	stw	fp,8(sp)
   169a0:	df000204 	addi	fp,sp,8
   169a4:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   169a8:	0001883a 	nop
   169ac:	e0bfff17 	ldw	r2,-4(fp)
   169b0:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   169b4:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   169b8:	10000226 	beq	r2,zero,169c4 <_exit+0x2c>
    ALT_SIM_FAIL();
   169bc:	002af070 	cmpltui	zero,zero,43969
   169c0:	00000106 	br	169c8 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   169c4:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   169c8:	003fff06 	br	169c8 <__alt_mem_Onchip_SRAM+0xf80169c8>
