
CE2830Lab.elf:     file format elf32-littlenios2
CE2830Lab.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000230

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00000020 paddr 0x00000020 align 2**12
         filesz 0x00016d40 memsz 0x00016d40 flags r-x
    LOAD off    0x00017d60 vaddr 0x00016d60 paddr 0x00018928 align 2**12
         filesz 0x00001bc8 memsz 0x00001bc8 flags rw-
    LOAD off    0x0001a4f0 vaddr 0x0001a4f0 paddr 0x0001a4f0 align 2**12
         filesz 0x00000000 memsz 0x00000170 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00000000  00000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000210  00000020  00000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00016754  00000230  00000230  00001230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000003dc  00016984  00016984  00017984  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001bc8  00016d60  00018928  00017d60  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000170  0001a4f0  0001a4f0  0001a4f0  2**2
                  ALLOC, SMALL_DATA
  6 .SDRAM        00000000  0001a660  0001a660  00019928  2**0
                  CONTENTS
  7 .Onchip_SRAM  00000000  08000000  08000000  00019928  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  00019928  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 000011c0  00000000  00000000  00019950  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   0002c780  00000000  00000000  0001ab10  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 0000b337  00000000  00000000  00047290  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000e774  00000000  00000000  000525c7  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00003070  00000000  00000000  00060d3c  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00004cd1  00000000  00000000  00063dac  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    0001d090  00000000  00000000  00068a7d  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000040  00000000  00000000  00085b10  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00001bc8  00000000  00000000  00085b50  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  0008baa2  2**0
                  CONTENTS, READONLY
 19 .cpu          00000005  00000000  00000000  0008baa5  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  0008baaa  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  0008baab  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  0008baac  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  0008bab0  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  0008bab4  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   00000009  00000000  00000000  0008bab8  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    00000009  00000000  00000000  0008bac1  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   00000009  00000000  00000000  0008baca  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 0000000f  00000000  00000000  0008bad3  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 0000003d  00000000  00000000  0008bae2  2**0
                  CONTENTS, READONLY
 30 .jdi          00006bd6  00000000  00000000  0008bb1f  2**0
                  CONTENTS, READONLY
 31 .sopcinfo     000c55f0  00000000  00000000  000926f5  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .entry	00000000 .entry
00000020 l    d  .exceptions	00000000 .exceptions
00000230 l    d  .text	00000000 .text
00016984 l    d  .rodata	00000000 .rodata
00016d60 l    d  .rwdata	00000000 .rwdata
0001a4f0 l    d  .bss	00000000 .bss
0001a660 l    d  .SDRAM	00000000 .SDRAM
08000000 l    d  .Onchip_SRAM	00000000 .Onchip_SRAM
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../CE2830Lab_bsp//obj/HAL/src/crt0.o
00000268 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 ServoAPI.c
00000000 l    df *ABS*	00000000 SevenSegs.c
000188ac l     O .rwdata	00000004 HEX0HEX3
000188b0 l     O .rwdata	00000004 HEX4HEX5
00000000 l    df *ABS*	00000000 accelerometer.c
000188b4 l     O .rwdata	00000004 acceleromter
00000000 l    df *ABS*	00000000 adc.c
000188b8 l     O .rwdata	00000004 samples
000188bc l     O .rwdata	00000004 sequencerCmd
00000000 l    df *ABS*	00000000 camera.c
000188c0 l     O .rwdata	00000004 camera
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 main.c
000188c4 l     O .rwdata	00000004 HEX0HEX3
000188c8 l     O .rwdata	00000004 HEX4HEX5
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 fixsfsi.c
00000000 l    df *ABS*	00000000 floatsisf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00016b06 l     O .rodata	00000010 zeroes.4389
00016b16 l     O .rodata	00000010 blanks.4388
00000000 l    df *ABS*	00000000 time.c
00000000 l    df *ABS*	00000000 vfprintf.c
00016b26 l     O .rodata	00000010 zeroes.4404
00005a0c l     F .text	000000bc __sbprintf
00016b36 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00005c1c l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00007774 l     F .text	00000008 __fp_unlock
00007788 l     F .text	0000019c __sinit.part.1
00007924 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 gettimeofdayr.c
00000000 l    df *ABS*	00000000 impure.c
00016d60 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 locale.c
000171a4 l     O .rwdata	00000020 lc_ctype_charset
00017184 l     O .rwdata	00000020 lc_message_charset
000171c4 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
00016b68 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
00016c8c l     O .rodata	00000010 zeroes.4333
00016c9c l     O .rodata	00000010 blanks.4332
00000000 l    df *ABS*	00000000 vfprintf.c
0000c52c l     F .text	000000fc __sprint_r.part.0
00016cac l     O .rodata	00000010 zeroes.4349
0000db68 l     F .text	000000bc __sbprintf
00016cbc l     O .rodata	00000010 blanks.4348
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
00011a7c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
00011b90 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
00011bbc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_gettod.c
00000000 l    df *ABS*	00000000 alt_isatty.c
00011ea4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
00011f8c l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
00012078 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
00012254 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00018908 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 alt_write.c
0001266c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
000127a8 l     F .text	00000034 alt_dev_reg
000177ac l     O .rwdata	00000038 camera_i2c
000177e4 l     O .rwdata	00001060 JTAG_UART
00018844 l     O .rwdata	0000003c JoyStick_ADC
00018880 l     O .rwdata	0000002c Accelerometer_SPI
00000000 l    df *ABS*	00000000 altera_avalon_i2c.c
000128a4 l     F .text	00000110 optional_irq_callback
00012a04 l     F .text	0000009c alt_avalon_i2c_irq
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
000146e0 l     F .text	0000020c altera_avalon_jtag_uart_irq
000148ec l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
00014f24 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_modular_adc.c
00015018 l     F .text	000000a8 alt_adc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00015828 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
00015d18 l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
00015e78 l     F .text	0000003c alt_get_errno
00015eb4 l     F .text	000000ec alt_file_locked
00000000 l    df *ABS*	00000000 alt_printf.c
00000000 l    df *ABS*	00000000 alt_putchar.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
0001a534 g     O .bss	00000004 alt_instruction_exception_handler
00001144 g     F .text	00000018 putchar
0000a498 g     F .text	00000074 _mprec_log10
000152b8 g     F .text	00000050 adc_stop
0000a584 g     F .text	0000008c __any_on
0000e274 g     F .text	00000054 _isatty_r
00016b74 g     O .rodata	00000028 __mprec_tinytens
00012190 g     F .text	0000007c alt_main
000003d4 g     F .text	00000098 ASCII_to_7Seg
000188d0 g     O .rwdata	00000004 pushbuttons
0000115c g     F .text	000000c0 _puts_r
0001a560 g     O .bss	00000100 alt_irq
0000e2c8 g     F .text	00000060 _lseek_r
00018928 g       *ABS*	00000000 __flash_rwdata_start
000104b8 g     F .text	00000088 .hidden __eqdf2
000085a8 g     F .text	0000005c _gettimeofday_r
0001a660 g       *ABS*	00000000 __alt_heap_start
00001100 g     F .text	0000003c printf
00000a08 g     F .text	00000094 cam_write_data
0000e388 g     F .text	0000009c _wcrtomb_r
0000ae7c g     F .text	0000005c __sseek
00007ad4 g     F .text	00000010 __sinit
0000dc24 g     F .text	00000140 __swbuf_r
00008604 g     F .text	0000007c _setlocale_r
0000792c g     F .text	00000078 __sfmoreglue
000130fc g     F .text	000000a8 alt_avalon_i2c_rx_read
00012230 g     F .text	00000024 __malloc_unlock
0000071c g     F .text	000000b0 acc_steady_servo
00014314 g     F .text	00000044 alt_avalon_i2c_enabled_ints_get
00012e80 g     F .text	00000094 alt_avalon_i2c_master_config_speed_get
000092d4 g     F .text	0000015c memmove
00000310 g     F .text	00000034 servo_pan
00007abc g     F .text	00000018 _cleanup
00013b64 g     F .text	0000020c alt_avalon_i2c_master_transmit_using_interrupts
00009558 g     F .text	000000a8 _Balloc
00000ed8 g     F .text	00000070 .hidden __fixsfsi
00010540 g     F .text	000000dc .hidden __gtdf2
00016364 g     F .text	00000024 altera_nios2_gen2_irq_init
00000000 g     F .entry	0000000c __reset
0001547c g     F .text	00000048 adc_interrupt_disable
00000020 g       *ABS*	00000000 __flash_exceptions_start
0000e218 g     F .text	0000005c _fstat_r
0001a4f0 g     O .bss	00000004 errno
0000adf8 g     F .text	00000008 __seofread
0000b18c g     F .text	000013a0 ___svfiprintf_internal_r
0001516c g     F .text	00000074 altera_modular_adc_init
0001a520 g     O .bss	00000004 alt_argv
000208ac g       *ABS*	00000000 _gp
00014358 g     F .text	0000004c alt_avalon_i2c_rx_fifo_threshold_get
00013010 g     F .text	00000044 alt_avalon_i2c_is_busy
0001762c g     O .rwdata	00000180 alt_fd_list
0000113c g     F .text	00000008 _putchar_r
00012db4 g     F .text	000000cc alt_avalon_i2c_master_config_set
000159c8 g     F .text	00000090 alt_find_dev
0000918c g     F .text	00000148 memcpy
0000777c g     F .text	0000000c _cleanup_r
000118f8 g     F .text	000000dc .hidden __floatsidf
00015380 g     F .text	0000003c adc_set_mode_run_continuously
00015dfc g     F .text	0000007c alt_io_redirect
0001061c g     F .text	000000f4 .hidden __ltdf2
00016984 g       *ABS*	00000000 __DTOR_END__
000139a4 g     F .text	000001c0 alt_avalon_i2c_master_transmit
0000121c g     F .text	00000014 puts
00016554 g     F .text	0000009c alt_exception_cause_generated_bad_addr
0000acdc g     F .text	00000074 __fpclassifyd
0000a3f4 g     F .text	000000a4 __ratio
0000db4c g     F .text	0000001c __vfiprintf_internal
00014ae4 g     F .text	0000021c altera_avalon_jtag_uart_read
000010d0 g     F .text	00000030 _printf_r
00000df4 g     F .text	00000064 .hidden __udivsi3
00011ee0 g     F .text	000000ac isatty
00016bc4 g     O .rodata	000000c8 __mprec_tens
00008680 g     F .text	0000000c __locale_charset
0001a50c g     O .bss	00000008 alt_timezone
00012c20 g     F .text	00000098 alt_avalon_i2c_enable
0001a508 g     O .bss	00000004 __malloc_top_pad
00014248 g     F .text	00000068 alt_avalon_i2c_int_disable
000188e0 g     O .rwdata	00000004 __mb_cur_max
000086b0 g     F .text	0000000c _localeconv_r
0000998c g     F .text	0000003c __i2b
00007f58 g     F .text	000004c8 __sfvwrite_r
0000046c g     F .text	00000100 num_to_7Seg
0000ad50 g     F .text	00000054 _sbrk_r
0000e328 g     F .text	00000060 _read_r
0001891c g     O .rwdata	00000008 altera_modular_adc_list
00018900 g     O .rwdata	00000004 alt_max_fd
0000df0c g     F .text	000000f0 _fclose_r
00007744 g     F .text	00000030 fflush
0001a504 g     O .bss	00000004 __malloc_max_sbrked_mem
00013d70 g     F .text	00000210 alt_avalon_i2c_master_receive
0000f23c g     F .text	000008ac .hidden __adddf3
0000a19c g     F .text	0000010c __b2d
0000ec78 g     F .text	000005c4 .hidden __umoddi3
000120b4 g     F .text	000000dc lseek
000142b0 g     F .text	00000064 alt_avalon_i2c_int_enable
000188d8 g     O .rwdata	00000004 _global_impure_ptr
0000a778 g     F .text	00000564 _realloc_r
0001a660 g       *ABS*	00000000 __bss_end
00015c28 g     F .text	000000f0 alt_iic_isr_register
00012564 g     F .text	00000108 alt_tick
0000e67c g     F .text	000005fc .hidden __udivdi3
00014170 g     F .text	00000058 alt_avalon_i2c_int_status_get
0000e174 g     F .text	00000024 _fputwc_r
00015548 g     F .text	0000003c adc_wait_for_interrupt
00016b9c g     O .rodata	00000028 __mprec_bigtens
00009770 g     F .text	00000104 __s2b
000119d4 g     F .text	000000a8 .hidden __floatunsidf
00009edc g     F .text	00000060 __mcmp
0000056c g     F .text	00000090 acc_read_x
000188d4 g     O .rwdata	00000004 slideSwitches
00007af4 g     F .text	00000018 __fp_lock_all
00015bdc g     F .text	0000004c alt_ic_irq_enabled
000124c8 g     F .text	0000009c alt_alarm_stop
00012aa0 g     F .text	00000054 alt_avalon_i2c_register_callback
00000884 g     F .text	000000c8 read_joystick
0001a530 g     O .bss	00000004 alt_irq_active
00012af4 g     F .text	000000ec alt_avalon_i2c_init
000000fc g     F .exceptions	000000d4 alt_irq_handler
00017604 g     O .rwdata	00000028 alt_dev_null
00015340 g     F .text	00000040 adc_set_mode_run_once
00015808 g     F .text	00000020 alt_dcache_flush_all
00009874 g     F .text	00000068 __hi0bits
00011878 g     F .text	00000080 .hidden __fixdfsi
0000084c g     F .text	00000038 read_channel2
00018928 g       *ABS*	00000000 __ram_rwdata_end
000188f8 g     O .rwdata	00000008 alt_dev_list
000126a8 g     F .text	00000100 write
0000a610 g     F .text	000000a0 _putc_r
00013430 g     F .text	0000004c alt_avalon_i2c_check_arblost
0001420c g     F .text	0000003c alt_avalon_i2c_int_clear
00016d60 g       *ABS*	00000000 __ram_rodata_end
00011bf8 g     F .text	000000b8 fstat
00000000 g       *ABS*	00000000 __alt_mem_SDRAM
0001061c g     F .text	000000f4 .hidden __ledf2
00000bb4 g     F .text	00000054 delay_1ms
00018914 g     O .rwdata	00000008 alt_avalon_i2c_list
00015308 g     F .text	00000038 adc_start
00009c54 g     F .text	00000140 __pow5mult
0000c640 g     F .text	0000150c ___vfiprintf_internal_r
0001a4fc g     O .bss	00000004 __nlocale_changed
00000e58 g     F .text	00000058 .hidden __umodsi3
0001a660 g       *ABS*	00000000 end
000188cc g     O .rwdata	00000004 leds
00000b5c g     F .text	00000058 delay_1s
00014620 g     F .text	000000c0 altera_avalon_jtag_uart_init
000001d0 g     F .exceptions	00000060 alt_instruction_exception_entry
00012be0 g     F .text	00000040 alt_avalon_i2c_open
00016984 g       *ABS*	00000000 __CTOR_LIST__
04000000 g       *ABS*	00000000 __alt_stack_pointer
000135b8 g     F .text	000000e8 alt_avalon_i2c_master_tx
00014f9c g     F .text	0000007c alt_avalon_timer_sc_init
0000106c g     F .text	00000064 .hidden __clzsi2
00014d00 g     F .text	00000224 altera_avalon_jtag_uart_write
00007ae4 g     F .text	00000004 __sfp_lock_acquire
000090a8 g     F .text	000000e4 memchr
00003714 g     F .text	000022dc ___vfprintf_internal_r
000012ac g     F .text	00000058 _sprintf_r
00007c48 g     F .text	00000310 _free_r
000160fc g     F .text	0000022c alt_printf
0000868c g     F .text	00000010 __locale_mb_cur_max
000167d0 g     F .text	00000180 __call_exitprocs
0001a4f8 g     O .bss	00000004 __mlocale_changed
000129b4 g     F .text	00000050 alt_avalon_i2c_register_optional_irq_handler
000188e4 g     O .rwdata	00000004 __malloc_sbrk_base
00000230 g     F .text	0000003c _start
0001a528 g     O .bss	00000004 _alt_tick_rate
00013f80 g     F .text	000001f0 alt_avalon_i2c_master_receive_using_interrupts
00001248 g     F .text	00000064 rand
000143a4 g     F .text	00000064 alt_avalon_i2c_rx_fifo_threshold_set
00000344 g     F .text	00000060 servo_randomMovement
00009d94 g     F .text	00000148 __lshift
0001a52c g     O .bss	00000004 _alt_nticks
00012290 g     F .text	00000104 read
00012814 g     F .text	00000090 alt_sys_init
00000f48 g     F .text	00000124 .hidden __floatsisf
0000afbc g     F .text	000001d0 __ssprint_r
000166b8 g     F .text	00000118 __register_exitproc
000137dc g     F .text	000001c8 alt_avalon_i2c_master_tx_rx
000099c8 g     F .text	0000028c __multiply
0001498c g     F .text	00000068 altera_avalon_jtag_uart_close
00000eb0 g     F .text	00000028 .hidden __mulsi3
00016d60 g       *ABS*	00000000 __ram_rwdata_start
00016984 g       *ABS*	00000000 __ram_rodata_start
0001a538 g     O .bss	00000028 __malloc_current_mallinfo
000009c4 g     F .text	00000024 cam_setReg
0000a2a8 g     F .text	0000014c __d2b
000002d8 g     F .text	00000038 servo_center
000144bc g     F .text	00000060 altera_avalon_jtag_uart_read_fd
00016490 g     F .text	000000c4 alt_get_fd
000156b0 g     F .text	00000158 alt_busy_sleep
0000dddc g     F .text	00000054 _close_r
0001663c g     F .text	0000007c memcmp
00013054 g     F .text	000000a8 alt_avalon_i2c_rx_read_available
0001457c g     F .text	00000050 altera_avalon_jtag_uart_close_fd
0001a660 g       *ABS*	00000000 __alt_stack_base
000145cc g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00005ac8 g     F .text	00000154 __swsetup_r
00015438 g     F .text	00000044 adc_interrupt_enable
0000fae8 g     F .text	000009d0 .hidden __divdf3
000079a4 g     F .text	00000118 __sfp
0000a50c g     F .text	00000078 __copybits
000171fc g     O .rwdata	00000408 __malloc_av_
00007af0 g     F .text	00000004 __sinit_lock_release
000009e8 g     F .text	00000020 cam_getReg
00010710 g     F .text	0000086c .hidden __muldf3
0000ada4 g     F .text	00000054 __sread
00016388 g     F .text	00000108 alt_find_file
00015864 g     F .text	000000a4 alt_dev_llist_insert
0001220c g     F .text	00000024 __malloc_lock
00012418 g     F .text	000000b0 sbrk
00001408 g     F .text	000022bc ___svfprintf_internal_r
0001347c g     F .text	0000013c alt_avalon_i2c_interrupt_transaction_status
000133e4 g     F .text	0000004c alt_avalon_i2c_check_nack
000076e8 g     F .text	0000005c _fflush_r
0000de30 g     F .text	000000dc _calloc_r
00011cb0 g     F .text	000001f4 gettimeofday
0001a4f0 g       *ABS*	00000000 __bss_start
00009430 g     F .text	00000128 memset
00000c08 g     F .text	000000f4 main
00000814 g     F .text	00000038 read_channel1
000133b0 g     F .text	00000034 alt_avalon_i2c_master_target_set
0001a524 g     O .bss	00000004 alt_envp
0001a500 g     O .bss	00000004 __malloc_max_total_mem
00000a9c g     F .text	000000c0 cam_read_data
0001451c g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0000dd64 g     F .text	00000018 __swbuf
00001230 g     F .text	00000018 srand
000141c8 g     F .text	00000044 alt_avalon_i2c_int_raw_status_get
000150c0 g     F .text	000000ac alt_adc_word_read
0000aed8 g     F .text	00000008 __sclose
04000000 g       *ABS*	00000000 __alt_heap_limit
0000dffc g     F .text	00000014 fclose
00005e44 g     F .text	00001688 _dtoa_r
0000889c g     F .text	0000080c _malloc_r
0000e4e4 g     F .text	00000030 __ascii_wctomb
000036c4 g     F .text	00000050 time
00018904 g     O .rwdata	00000004 alt_errno
00008420 g     F .text	000000c4 _fwalk
0000026c g     F .text	0000006c servo_setAngle
0000a6b0 g     F .text	000000c8 putc
00000cfc g     F .text	00000084 .hidden __divsi3
00007b24 g     F .text	00000124 _malloc_trim_r
00016984 g       *ABS*	00000000 __CTOR_END__
0000aee0 g     F .text	000000dc strcmp
00016984 g       *ABS*	00000000 __flash_rodata_start
00016984 g       *ABS*	00000000 __DTOR_LIST__
000104b8 g     F .text	00000088 .hidden __nedf2
000127dc g     F .text	00000038 alt_irq_init
00012394 g     F .text	00000084 alt_release_fd
00001304 g     F .text	0000006c sprintf
000169be g     O .rodata	00000100 .hidden __clz_tab
000005fc g     F .text	00000090 acc_read_y
0001a4f4 g     O .bss	00000004 _PathLocale
000165f0 g     F .text	00000014 atexit
0000dd7c g     F .text	00000060 _write_r
000086bc g     F .text	00000018 setlocale
000188dc g     O .rwdata	00000004 _impure_ptr
0001a51c g     O .bss	00000004 alt_argc
000007cc g     F .text	00000048 adc_init
000074cc g     F .text	0000021c __sflush_r
00015968 g     F .text	00000060 _do_dtors
000086a8 g     F .text	00000008 __locale_cjk_lang
00013378 g     F .text	00000038 alt_avalon_i2c_master_target_get
00013288 g     F .text	000000f0 alt_avalon_i2c_send_address
00000020 g       .exceptions	00000000 alt_irq_entry
0000a138 g     F .text	00000064 __ulp
00007b0c g     F .text	00000018 __fp_unlock_all
000188f0 g     O .rwdata	00000008 alt_fs_list
0001a514 g     O .bss	00000008 alt_resettime
00000020 g       *ABS*	00000000 __ram_exceptions_start
000086d4 g     F .text	0000000c localeconv
00014454 g     F .text	00000068 alt_avalon_i2c_tfr_cmd_fifo_threshold_set
00015a78 g     F .text	00000050 alt_ic_isr_register
00012cb8 g     F .text	0000004c alt_avalon_i2c_disable
00018928 g       *ABS*	00000000 _edata
0001a660 g       *ABS*	00000000 _end
00015508 g     F .text	00000040 adc_interrupt_asserted
0000e010 g     F .text	00000164 __fputwc
00000230 g       *ABS*	00000000 __ram_exceptions_end
000149f4 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
08000000 g       *ABS*	00000000 __alt_mem_Onchip_SRAM
00012d04 g     F .text	000000b0 alt_avalon_i2c_master_config_get
00015b50 g     F .text	0000008c alt_ic_irq_disable
0000ae00 g     F .text	0000007c __swrite
000188e8 g     O .rwdata	00000004 __malloc_trim_threshold
000154c4 g     F .text	00000044 adc_clear_interrupt_status
0000869c g     F .text	0000000c __locale_msgcharset
00016604 g     F .text	00000038 exit
000084e4 g     F .text	000000c4 _fwalk_reent
00009f3c g     F .text	000001fc __mdiff
00000d80 g     F .text	00000074 .hidden __modsi3
000003a4 g     F .text	00000030 clearSevenSegs
04000000 g       *ABS*	00000000 __alt_data_end
00000020 g     F .exceptions	00000000 alt_exception
00007ae8 g     F .text	00000004 __sfp_lock_release
00012f14 g     F .text	000000fc alt_avalon_i2c_master_config_speed_set
000131a4 g     F .text	000000e4 alt_avalon_i2c_cmd_write
00015278 g     F .text	00000040 altera_modular_adc_open
0000068c g     F .text	00000090 acc_read_z
00016950 g     F .text	00000034 _exit
00015584 g     F .text	0000012c alt_alarm_start
0000094c g     F .text	00000078 cam_init
0000e570 g     F .text	0000010c .hidden __muldi3
000086e0 g     F .text	000001bc __smakebuf_r
00001370 g     F .text	00000098 strlen
00015fa0 g     F .text	0000015c open
00010540 g     F .text	000000dc .hidden __gedf2
00016328 g     F .text	0000003c alt_putchar
000153bc g     F .text	0000007c adc_recalibrate
000188ec g     O .rwdata	00000004 __wctomb
0000c628 g     F .text	00000018 __sprint_r
00015a58 g     F .text	00000020 alt_icache_flush_all
00018924 g     O .rwdata	00000004 alt_priority_mask
00015ac8 g     F .text	00000088 alt_ic_irq_enable
000059f0 g     F .text	0000001c __vfprintf_internal
0000e514 g     F .text	0000005c _wctomb_r
00010f7c g     F .text	000008fc .hidden __subdf3
000098dc g     F .text	000000b0 __lo0bits
0001890c g     O .rwdata	00000008 alt_alarm_list
00015908 g     F .text	00000060 _do_ctors
0000e424 g     F .text	000000c0 wcrtomb
00011ab8 g     F .text	000000d8 close
00014408 g     F .text	0000004c alt_avalon_i2c_tfr_cmd_fifo_threshold_get
00011ff4 g     F .text	00000084 alt_load
000136a0 g     F .text	0000013c alt_avalon_i2c_master_rx
0000e198 g     F .text	00000080 fputwc
000151e0 g     F .text	00000098 alt_adc_register_callback
00007aec g     F .text	00000004 __sinit_lock_acquire
00009628 g     F .text	00000148 __multadd
00009600 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   0:	00400034 	movhi	at,0
    ori r1, r1, %lo(_start)
   4:	08408c14 	ori	at,at,560
    jmp r1
   8:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  20:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  24:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  28:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  2c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  30:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  34:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  38:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  3c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  40:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  44:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  48:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  4c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  50:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  54:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  58:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  5c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  60:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  64:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  68:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  6c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  70:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  74:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  78:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  7c:	10000326 	beq	r2,zero,8c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  80:	20000226 	beq	r4,zero,8c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  84:	00000fc0 	call	fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  88:	00000706 	br	a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  8c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  90:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  94:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  98:	00001d00 	call	1d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  9c:	1000021e 	bne	r2,zero,a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  f8:	ef80083a 	eret

000000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  fc:	defff904 	addi	sp,sp,-28
 100:	dfc00615 	stw	ra,24(sp)
 104:	df000515 	stw	fp,20(sp)
 108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 10c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 110:	0005313a 	rdctl	r2,ipending
 114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 11c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 124:	00800044 	movi	r2,1
 128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 12c:	e0fffb17 	ldw	r3,-20(fp)
 130:	e0bffc17 	ldw	r2,-16(fp)
 134:	1884703a 	and	r2,r3,r2
 138:	10001426 	beq	r2,zero,18c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 13c:	008000b4 	movhi	r2,2
 140:	10a95804 	addi	r2,r2,-23200
 144:	e0fffd17 	ldw	r3,-12(fp)
 148:	180690fa 	slli	r3,r3,3
 14c:	10c5883a 	add	r2,r2,r3
 150:	10c00017 	ldw	r3,0(r2)
 154:	008000b4 	movhi	r2,2
 158:	10a95804 	addi	r2,r2,-23200
 15c:	e13ffd17 	ldw	r4,-12(fp)
 160:	200890fa 	slli	r4,r4,3
 164:	1105883a 	add	r2,r2,r4
 168:	10800104 	addi	r2,r2,4
 16c:	10800017 	ldw	r2,0(r2)
 170:	1009883a 	mov	r4,r2
 174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 17c:	0005313a 	rdctl	r2,ipending
 180:	e0bfff15 	stw	r2,-4(fp)

  return active;
 184:	e0bfff17 	ldw	r2,-4(fp)
 188:	00000706 	br	1a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 18c:	e0bffc17 	ldw	r2,-16(fp)
 190:	1085883a 	add	r2,r2,r2
 194:	e0bffc15 	stw	r2,-16(fp)
      i++;
 198:	e0bffd17 	ldw	r2,-12(fp)
 19c:	10800044 	addi	r2,r2,1
 1a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 1a4:	003fe106 	br	12c <__alt_mem_Onchip_SRAM+0xf800012c>

    active = alt_irq_pending ();
 1a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 1ac:	e0bffb17 	ldw	r2,-20(fp)
 1b0:	103fdb1e 	bne	r2,zero,120 <__alt_mem_Onchip_SRAM+0xf8000120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 1b4:	0001883a 	nop
}
 1b8:	0001883a 	nop
 1bc:	e037883a 	mov	sp,fp
 1c0:	dfc00117 	ldw	ra,4(sp)
 1c4:	df000017 	ldw	fp,0(sp)
 1c8:	dec00204 	addi	sp,sp,8
 1cc:	f800283a 	ret

000001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 1d0:	defffb04 	addi	sp,sp,-20
 1d4:	dfc00415 	stw	ra,16(sp)
 1d8:	df000315 	stw	fp,12(sp)
 1dc:	df000304 	addi	fp,sp,12
 1e0:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
 1e4:	00bfffc4 	movi	r2,-1
 1e8:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
 1ec:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 1f0:	d0a72217 	ldw	r2,-25464(gp)
 1f4:	10000726 	beq	r2,zero,214 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 1f8:	d0a72217 	ldw	r2,-25464(gp)
 1fc:	e0fffd17 	ldw	r3,-12(fp)
 200:	e1bffe17 	ldw	r6,-8(fp)
 204:	e17fff17 	ldw	r5,-4(fp)
 208:	1809883a 	mov	r4,r3
 20c:	103ee83a 	callr	r2
 210:	00000206 	br	21c <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 214:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 218:	0005883a 	mov	r2,zero
}
 21c:	e037883a 	mov	sp,fp
 220:	dfc00117 	ldw	ra,4(sp)
 224:	df000017 	ldw	fp,0(sp)
 228:	dec00204 	addi	sp,sp,8
 22c:	f800283a 	ret

Disassembly of section .text:

00000230 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
     230:	06c10034 	movhi	sp,1024
    ori sp, sp, %lo(__alt_stack_pointer)
     234:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
     238:	068000b4 	movhi	gp,2
    ori gp, gp, %lo(_gp)
     23c:	d6822b14 	ori	gp,gp,2220
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
     240:	00800074 	movhi	r2,1
    ori r2, r2, %lo(__bss_start)
     244:	10a93c14 	ori	r2,r2,42224

    movhi r3, %hi(__bss_end)
     248:	00c00074 	movhi	r3,1
    ori r3, r3, %lo(__bss_end)
     24c:	18e99814 	ori	r3,r3,42592

    beq r2, r3, 1f
     250:	10c00326 	beq	r2,r3,260 <_start+0x30>

0:
    stw zero, (r2)
     254:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
     258:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
     25c:	10fffd36 	bltu	r2,r3,254 <__alt_mem_Onchip_SRAM+0xf8000254>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
     260:	0011ff40 	call	11ff4 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
     264:	00121900 	call	12190 <alt_main>

00000268 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
     268:	003fff06 	br	268 <__alt_mem_Onchip_SRAM+0xf8000268>

0000026c <servo_setAngle>:
 */

#include "ServoAPI.h"


bool servo_setAngle(SERVO servo, alt_8 angle){
     26c:	defffc04 	addi	sp,sp,-16
     270:	df000315 	stw	fp,12(sp)
     274:	df000304 	addi	fp,sp,12
     278:	e13ffe15 	stw	r4,-8(fp)
     27c:	2805883a 	mov	r2,r5
     280:	e0bfff05 	stb	r2,-4(fp)
	volatile alt_u32* addr = (alt_u32*) servo;
     284:	e0bffe17 	ldw	r2,-8(fp)
     288:	e0bffd15 	stw	r2,-12(fp)
	if((angle > 45) || (angle < -45)){
     28c:	e0bfff07 	ldb	r2,-4(fp)
     290:	10800b88 	cmpgei	r2,r2,46
     294:	1000031e 	bne	r2,zero,2a4 <servo_setAngle+0x38>
     298:	e0bfff07 	ldb	r2,-4(fp)
     29c:	10bff4c8 	cmpgei	r2,r2,-45
     2a0:	1000021e 	bne	r2,zero,2ac <servo_setAngle+0x40>
		return false;
     2a4:	0005883a 	mov	r2,zero
     2a8:	00000706 	br	2c8 <servo_setAngle+0x5c>
	} else {
		*addr = ((alt_u8) (((100/45)*angle)+100));
     2ac:	e0bfff03 	ldbu	r2,-4(fp)
     2b0:	10800c84 	addi	r2,r2,50
     2b4:	1085883a 	add	r2,r2,r2
     2b8:	10c03fcc 	andi	r3,r2,255
     2bc:	e0bffd17 	ldw	r2,-12(fp)
     2c0:	10c00015 	stw	r3,0(r2)
		return true;
     2c4:	00800044 	movi	r2,1
	}
}
     2c8:	e037883a 	mov	sp,fp
     2cc:	df000017 	ldw	fp,0(sp)
     2d0:	dec00104 	addi	sp,sp,4
     2d4:	f800283a 	ret

000002d8 <servo_center>:

bool servo_center(SERVO servo){
     2d8:	defffd04 	addi	sp,sp,-12
     2dc:	df000215 	stw	fp,8(sp)
     2e0:	df000204 	addi	fp,sp,8
     2e4:	e13fff15 	stw	r4,-4(fp)
	volatile alt_u32* addr = (alt_u32*) servo;
     2e8:	e0bfff17 	ldw	r2,-4(fp)
     2ec:	e0bffe15 	stw	r2,-8(fp)
	*addr = 100;
     2f0:	e0bffe17 	ldw	r2,-8(fp)
     2f4:	00c01904 	movi	r3,100
     2f8:	10c00015 	stw	r3,0(r2)
	return true;
     2fc:	00800044 	movi	r2,1
}
     300:	e037883a 	mov	sp,fp
     304:	df000017 	ldw	fp,0(sp)
     308:	dec00104 	addi	sp,sp,4
     30c:	f800283a 	ret

00000310 <servo_pan>:

bool servo_pan(SERVO servo, alt_u32 speed, float cycles){
     310:	defffb04 	addi	sp,sp,-20
     314:	df000415 	stw	fp,16(sp)
     318:	df000404 	addi	fp,sp,16
     31c:	e13ffd15 	stw	r4,-12(fp)
     320:	e17ffe15 	stw	r5,-8(fp)
     324:	e1bfff15 	stw	r6,-4(fp)
	volatile alt_u32* addr = (alt_u32*) servo;
     328:	e0bffd17 	ldw	r2,-12(fp)
     32c:	e0bffc15 	stw	r2,-16(fp)
	//TODO
	return false;
     330:	0005883a 	mov	r2,zero
}
     334:	e037883a 	mov	sp,fp
     338:	df000017 	ldw	fp,0(sp)
     33c:	dec00104 	addi	sp,sp,4
     340:	f800283a 	ret

00000344 <servo_randomMovement>:

bool servo_randomMovement(SERVO servo){
     344:	defffc04 	addi	sp,sp,-16
     348:	dfc00315 	stw	ra,12(sp)
     34c:	df000215 	stw	fp,8(sp)
     350:	df000204 	addi	fp,sp,8
     354:	e13fff15 	stw	r4,-4(fp)
	volatile alt_u32* addr = (alt_u32*) servo;
     358:	e0bfff17 	ldw	r2,-4(fp)
     35c:	e0bffe15 	stw	r2,-8(fp)
	srand(time(0));
     360:	0009883a 	mov	r4,zero
     364:	00036c40 	call	36c4 <time>
     368:	1009883a 	mov	r4,r2
     36c:	00012300 	call	1230 <srand>
	*addr = ((alt_u8)(rand()%200));
     370:	00012480 	call	1248 <rand>
     374:	01403204 	movi	r5,200
     378:	1009883a 	mov	r4,r2
     37c:	0000d800 	call	d80 <__modsi3>
     380:	10c03fcc 	andi	r3,r2,255
     384:	e0bffe17 	ldw	r2,-8(fp)
     388:	10c00015 	stw	r3,0(r2)
	return true;
     38c:	00800044 	movi	r2,1
}
     390:	e037883a 	mov	sp,fp
     394:	dfc00117 	ldw	ra,4(sp)
     398:	df000017 	ldw	fp,0(sp)
     39c:	dec00204 	addi	sp,sp,8
     3a0:	f800283a 	ret

000003a4 <clearSevenSegs>:
 */
#include "alt_types.h"
#include "SevenSegs.h"
#include <stdio.h>

void clearSevenSegs(){
     3a4:	deffff04 	addi	sp,sp,-4
     3a8:	df000015 	stw	fp,0(sp)
     3ac:	d839883a 	mov	fp,sp
	*HEX0HEX3 = 0;
     3b0:	d0a00017 	ldw	r2,-32768(gp)
     3b4:	10000015 	stw	zero,0(r2)
    *HEX4HEX5 = 0;
     3b8:	d0a00117 	ldw	r2,-32764(gp)
     3bc:	10000015 	stw	zero,0(r2)
}
     3c0:	0001883a 	nop
     3c4:	e037883a 	mov	sp,fp
     3c8:	df000017 	ldw	fp,0(sp)
     3cc:	dec00104 	addi	sp,sp,4
     3d0:	f800283a 	ret

000003d4 <ASCII_to_7Seg>:

char ASCII_to_7Seg(char c){
     3d4:	defffb04 	addi	sp,sp,-20
     3d8:	df000415 	stw	fp,16(sp)
     3dc:	df000404 	addi	fp,sp,16
     3e0:	2005883a 	mov	r2,r4
     3e4:	e0bfff05 	stb	r2,-4(fp)
	if(c != 0){
     3e8:	e0bfff07 	ldb	r2,-4(fp)
     3ec:	10000326 	beq	r2,zero,3fc <ASCII_to_7Seg+0x28>
		c -= 0x30;
     3f0:	e0bfff03 	ldbu	r2,-4(fp)
     3f4:	10bff404 	addi	r2,r2,-48
     3f8:	e0bfff05 	stb	r2,-4(fp)
	}
	char HEXMap[10] = {0b0111111,
     3fc:	00800fc4 	movi	r2,63
     400:	e0bffc05 	stb	r2,-16(fp)
     404:	00800184 	movi	r2,6
     408:	e0bffc45 	stb	r2,-15(fp)
     40c:	008016c4 	movi	r2,91
     410:	e0bffc85 	stb	r2,-14(fp)
     414:	008013c4 	movi	r2,79
     418:	e0bffcc5 	stb	r2,-13(fp)
     41c:	00801984 	movi	r2,102
     420:	e0bffd05 	stb	r2,-12(fp)
     424:	00801b44 	movi	r2,109
     428:	e0bffd45 	stb	r2,-11(fp)
     42c:	00801f04 	movi	r2,124
     430:	e0bffd85 	stb	r2,-10(fp)
     434:	008001c4 	movi	r2,7
     438:	e0bffdc5 	stb	r2,-9(fp)
     43c:	00801fc4 	movi	r2,127
     440:	e0bffe05 	stb	r2,-8(fp)
     444:	008019c4 	movi	r2,103
     448:	e0bffe45 	stb	r2,-7(fp)
			0b1101101,
			0b1111100,
			0b0000111,
			0b1111111,
			0b1100111};
	return HEXMap[c];
     44c:	e0bfff07 	ldb	r2,-4(fp)
     450:	e0fffc04 	addi	r3,fp,-16
     454:	1885883a 	add	r2,r3,r2
     458:	10800003 	ldbu	r2,0(r2)
};
     45c:	e037883a 	mov	sp,fp
     460:	df000017 	ldw	fp,0(sp)
     464:	dec00104 	addi	sp,sp,4
     468:	f800283a 	ret

0000046c <num_to_7Seg>:

void num_to_7Seg(alt_u16 num){
     46c:	defff904 	addi	sp,sp,-28
     470:	dfc00615 	stw	ra,24(sp)
     474:	df000515 	stw	fp,20(sp)
     478:	df000504 	addi	fp,sp,20
     47c:	2005883a 	mov	r2,r4
     480:	e0bfff0d 	sth	r2,-4(fp)
	char BCDOut[6] = {0};
     484:	e03ffd15 	stw	zero,-12(fp)
     488:	e03ffe0d 	sth	zero,-8(fp)
	sprintf(BCDOut, "%d", (num>9999 ? 9999 : num));
     48c:	e0bfff0b 	ldhu	r2,-4(fp)
     490:	1089c428 	cmpgeui	r2,r2,10000
     494:	1000021e 	bne	r2,zero,4a0 <num_to_7Seg+0x34>
     498:	e0bfff0b 	ldhu	r2,-4(fp)
     49c:	00000106 	br	4a4 <num_to_7Seg+0x38>
     4a0:	0089c3c4 	movi	r2,9999
     4a4:	e0fffd04 	addi	r3,fp,-12
     4a8:	100d883a 	mov	r6,r2
     4ac:	01400074 	movhi	r5,1
     4b0:	295a6104 	addi	r5,r5,27012
     4b4:	1809883a 	mov	r4,r3
     4b8:	00013040 	call	1304 <sprintf>
	alt_u32 HexOut = 0;
     4bc:	e03ffb15 	stw	zero,-20(fp)
	for(int i = 0; i <= 3; i++){
     4c0:	e03ffc15 	stw	zero,-16(fp)
     4c4:	00001d06 	br	53c <num_to_7Seg+0xd0>
		if(BCDOut[i] != 0){
     4c8:	e0fffd04 	addi	r3,fp,-12
     4cc:	e0bffc17 	ldw	r2,-16(fp)
     4d0:	1885883a 	add	r2,r3,r2
     4d4:	10800003 	ldbu	r2,0(r2)
     4d8:	10803fcc 	andi	r2,r2,255
     4dc:	1080201c 	xori	r2,r2,128
     4e0:	10bfe004 	addi	r2,r2,-128
     4e4:	10001226 	beq	r2,zero,530 <num_to_7Seg+0xc4>
			HexOut = HexOut << 8;
     4e8:	e0bffb17 	ldw	r2,-20(fp)
     4ec:	1004923a 	slli	r2,r2,8
     4f0:	e0bffb15 	stw	r2,-20(fp)
			HexOut |= ASCII_to_7Seg(BCDOut[i]);
     4f4:	e0fffd04 	addi	r3,fp,-12
     4f8:	e0bffc17 	ldw	r2,-16(fp)
     4fc:	1885883a 	add	r2,r3,r2
     500:	10800003 	ldbu	r2,0(r2)
     504:	10803fcc 	andi	r2,r2,255
     508:	1080201c 	xori	r2,r2,128
     50c:	10bfe004 	addi	r2,r2,-128
     510:	1009883a 	mov	r4,r2
     514:	00003d40 	call	3d4 <ASCII_to_7Seg>
     518:	10803fcc 	andi	r2,r2,255
     51c:	1080201c 	xori	r2,r2,128
     520:	10bfe004 	addi	r2,r2,-128
     524:	e0fffb17 	ldw	r3,-20(fp)
     528:	1884b03a 	or	r2,r3,r2
     52c:	e0bffb15 	stw	r2,-20(fp)

void num_to_7Seg(alt_u16 num){
	char BCDOut[6] = {0};
	sprintf(BCDOut, "%d", (num>9999 ? 9999 : num));
	alt_u32 HexOut = 0;
	for(int i = 0; i <= 3; i++){
     530:	e0bffc17 	ldw	r2,-16(fp)
     534:	10800044 	addi	r2,r2,1
     538:	e0bffc15 	stw	r2,-16(fp)
     53c:	e0bffc17 	ldw	r2,-16(fp)
     540:	10800110 	cmplti	r2,r2,4
     544:	103fe01e 	bne	r2,zero,4c8 <__alt_mem_Onchip_SRAM+0xf80004c8>
		if(BCDOut[i] != 0){
			HexOut = HexOut << 8;
			HexOut |= ASCII_to_7Seg(BCDOut[i]);
		}
	}
	*HEX0HEX3 = HexOut;
     548:	d0a00017 	ldw	r2,-32768(gp)
     54c:	e0fffb17 	ldw	r3,-20(fp)
     550:	10c00015 	stw	r3,0(r2)
}
     554:	0001883a 	nop
     558:	e037883a 	mov	sp,fp
     55c:	dfc00117 	ldw	ra,4(sp)
     560:	df000017 	ldw	fp,0(sp)
     564:	dec00204 	addi	sp,sp,8
     568:	f800283a 	ret

0000056c <acc_read_x>:
#include "accelerometer.h"
#include "ServoAPI.h"

 static volatile ACCELEROMETER* acceleromter = (alt_u32*) ACCELEROMETER_BASE;

 int acc_read_x(){
     56c:	defffe04 	addi	sp,sp,-8
     570:	df000115 	stw	fp,4(sp)
     574:	df000104 	addi	fp,sp,4
     acceleromter->address = DATAX0;
     578:	d0a00217 	ldw	r2,-32760(gp)
     57c:	00c00c84 	movi	r3,50
     580:	10c00005 	stb	r3,0(r2)
     alt_16 data = 0x0000|acceleromter->data;
     584:	d0a00217 	ldw	r2,-32760(gp)
     588:	10800043 	ldbu	r2,1(r2)
     58c:	10803fcc 	andi	r2,r2,255
     590:	e0bfff0d 	sth	r2,-4(fp)
     acceleromter->address = DATAX1;
     594:	d0a00217 	ldw	r2,-32760(gp)
     598:	00c00cc4 	movi	r3,51
     59c:	10c00005 	stb	r3,0(r2)
     data |= ((acceleromter->data&0x01)<<8);
     5a0:	d0a00217 	ldw	r2,-32760(gp)
     5a4:	10800043 	ldbu	r2,1(r2)
     5a8:	10803fcc 	andi	r2,r2,255
     5ac:	1080004c 	andi	r2,r2,1
     5b0:	1004923a 	slli	r2,r2,8
     5b4:	1007883a 	mov	r3,r2
     5b8:	e0bfff0b 	ldhu	r2,-4(fp)
     5bc:	1884b03a 	or	r2,r3,r2
     5c0:	e0bfff0d 	sth	r2,-4(fp)
     if(acceleromter->data&0x02 == 2){
     5c4:	d0a00217 	ldw	r2,-32760(gp)
     5c8:	10800043 	ldbu	r2,1(r2)
     5cc:	10803fcc 	andi	r2,r2,255
     5d0:	1080004c 	andi	r2,r2,1
     5d4:	10000426 	beq	r2,zero,5e8 <acc_read_x+0x7c>
         data |= (0b1111111<<9);
     5d8:	e0ffff0b 	ldhu	r3,-4(fp)
     5dc:	00bf8004 	movi	r2,-512
     5e0:	1884b03a 	or	r2,r3,r2
     5e4:	e0bfff0d 	sth	r2,-4(fp)
     }
     return (int)data;
     5e8:	e0bfff0f 	ldh	r2,-4(fp)
 }
     5ec:	e037883a 	mov	sp,fp
     5f0:	df000017 	ldw	fp,0(sp)
     5f4:	dec00104 	addi	sp,sp,4
     5f8:	f800283a 	ret

000005fc <acc_read_y>:

int acc_read_y(){
     5fc:	defffe04 	addi	sp,sp,-8
     600:	df000115 	stw	fp,4(sp)
     604:	df000104 	addi	fp,sp,4
     acceleromter->address = DATAY0;
     608:	d0a00217 	ldw	r2,-32760(gp)
     60c:	00c00d04 	movi	r3,52
     610:	10c00005 	stb	r3,0(r2)
     alt_16 data = 0x0000|acceleromter->data;
     614:	d0a00217 	ldw	r2,-32760(gp)
     618:	10800043 	ldbu	r2,1(r2)
     61c:	10803fcc 	andi	r2,r2,255
     620:	e0bfff0d 	sth	r2,-4(fp)
     acceleromter->address = DATAY1;
     624:	d0a00217 	ldw	r2,-32760(gp)
     628:	00c00d44 	movi	r3,53
     62c:	10c00005 	stb	r3,0(r2)
     data |= ((acceleromter->data&0x01)<<8);
     630:	d0a00217 	ldw	r2,-32760(gp)
     634:	10800043 	ldbu	r2,1(r2)
     638:	10803fcc 	andi	r2,r2,255
     63c:	1080004c 	andi	r2,r2,1
     640:	1004923a 	slli	r2,r2,8
     644:	1007883a 	mov	r3,r2
     648:	e0bfff0b 	ldhu	r2,-4(fp)
     64c:	1884b03a 	or	r2,r3,r2
     650:	e0bfff0d 	sth	r2,-4(fp)
     if(acceleromter->data&0x02 == 2){
     654:	d0a00217 	ldw	r2,-32760(gp)
     658:	10800043 	ldbu	r2,1(r2)
     65c:	10803fcc 	andi	r2,r2,255
     660:	1080004c 	andi	r2,r2,1
     664:	10000426 	beq	r2,zero,678 <acc_read_y+0x7c>
         data |= (0b1111111<<9);
     668:	e0ffff0b 	ldhu	r3,-4(fp)
     66c:	00bf8004 	movi	r2,-512
     670:	1884b03a 	or	r2,r3,r2
     674:	e0bfff0d 	sth	r2,-4(fp)
     }
     return (int)data;
     678:	e0bfff0f 	ldh	r2,-4(fp)
 }
     67c:	e037883a 	mov	sp,fp
     680:	df000017 	ldw	fp,0(sp)
     684:	dec00104 	addi	sp,sp,4
     688:	f800283a 	ret

0000068c <acc_read_z>:

 int acc_read_z(){
     68c:	defffe04 	addi	sp,sp,-8
     690:	df000115 	stw	fp,4(sp)
     694:	df000104 	addi	fp,sp,4
     acceleromter->address = DATAZ0;
     698:	d0a00217 	ldw	r2,-32760(gp)
     69c:	00c00d84 	movi	r3,54
     6a0:	10c00005 	stb	r3,0(r2)
     alt_16 data = 0x0000|acceleromter->data;
     6a4:	d0a00217 	ldw	r2,-32760(gp)
     6a8:	10800043 	ldbu	r2,1(r2)
     6ac:	10803fcc 	andi	r2,r2,255
     6b0:	e0bfff0d 	sth	r2,-4(fp)
     acceleromter->address = DATAZ1;
     6b4:	d0a00217 	ldw	r2,-32760(gp)
     6b8:	00c00dc4 	movi	r3,55
     6bc:	10c00005 	stb	r3,0(r2)
     data |= ((acceleromter->data&0x01)<<8);
     6c0:	d0a00217 	ldw	r2,-32760(gp)
     6c4:	10800043 	ldbu	r2,1(r2)
     6c8:	10803fcc 	andi	r2,r2,255
     6cc:	1080004c 	andi	r2,r2,1
     6d0:	1004923a 	slli	r2,r2,8
     6d4:	1007883a 	mov	r3,r2
     6d8:	e0bfff0b 	ldhu	r2,-4(fp)
     6dc:	1884b03a 	or	r2,r3,r2
     6e0:	e0bfff0d 	sth	r2,-4(fp)
     if(acceleromter->data&0x02 == 2){
     6e4:	d0a00217 	ldw	r2,-32760(gp)
     6e8:	10800043 	ldbu	r2,1(r2)
     6ec:	10803fcc 	andi	r2,r2,255
     6f0:	1080004c 	andi	r2,r2,1
     6f4:	10000426 	beq	r2,zero,708 <acc_read_z+0x7c>
         data |= (0b1111111<<9);
     6f8:	e0ffff0b 	ldhu	r3,-4(fp)
     6fc:	00bf8004 	movi	r2,-512
     700:	1884b03a 	or	r2,r3,r2
     704:	e0bfff0d 	sth	r2,-4(fp)
     }
     return (int)data;
     708:	e0bfff0f 	ldh	r2,-4(fp)
 }
     70c:	e037883a 	mov	sp,fp
     710:	df000017 	ldw	fp,0(sp)
     714:	dec00104 	addi	sp,sp,4
     718:	f800283a 	ret

0000071c <acc_steady_servo>:

 void acc_steady_servo(){
     71c:	defffe04 	addi	sp,sp,-8
     720:	dfc00115 	stw	ra,4(sp)
     724:	df000015 	stw	fp,0(sp)
     728:	d839883a 	mov	fp,sp
	 servo_setAngle(SERVO_X, (alt_8)(-acc_read_y()*0.1765));
     72c:	00005fc0 	call	5fc <acc_read_y>
     730:	0085c83a 	sub	r2,zero,r2
     734:	1009883a 	mov	r4,r2
     738:	0000f480 	call	f48 <__floatsisf>
     73c:	1007883a 	mov	r3,r2
     740:	008f8d74 	movhi	r2,15925
     744:	10af1a84 	addi	r2,r2,-17302
     748:	1885ff32 	custom	252,r2,r3,r2
     74c:	1009883a 	mov	r4,r2
     750:	0000ed80 	call	ed8 <__fixsfsi>
     754:	10803fcc 	andi	r2,r2,255
     758:	1080201c 	xori	r2,r2,128
     75c:	10bfe004 	addi	r2,r2,-128
     760:	100b883a 	mov	r5,r2
     764:	013fc834 	movhi	r4,65312
     768:	21002404 	addi	r4,r4,144
     76c:	000026c0 	call	26c <servo_setAngle>
	 servo_setAngle(SERVO_Y, (alt_8)(-acc_read_x()*0.1765));
     770:	000056c0 	call	56c <acc_read_x>
     774:	0085c83a 	sub	r2,zero,r2
     778:	1009883a 	mov	r4,r2
     77c:	0000f480 	call	f48 <__floatsisf>
     780:	1007883a 	mov	r3,r2
     784:	008f8d74 	movhi	r2,15925
     788:	10af1a84 	addi	r2,r2,-17302
     78c:	1885ff32 	custom	252,r2,r3,r2
     790:	1009883a 	mov	r4,r2
     794:	0000ed80 	call	ed8 <__fixsfsi>
     798:	10803fcc 	andi	r2,r2,255
     79c:	1080201c 	xori	r2,r2,128
     7a0:	10bfe004 	addi	r2,r2,-128
     7a4:	100b883a 	mov	r5,r2
     7a8:	013fc834 	movhi	r4,65312
     7ac:	21002804 	addi	r4,r4,160
     7b0:	000026c0 	call	26c <servo_setAngle>
 }
     7b4:	0001883a 	nop
     7b8:	e037883a 	mov	sp,fp
     7bc:	dfc00117 	ldw	ra,4(sp)
     7c0:	df000017 	ldw	fp,0(sp)
     7c4:	dec00204 	addi	sp,sp,8
     7c8:	f800283a 	ret

000007cc <adc_init>:
#include "adc.h"

static volatile ADC_SAMPLE_STORE* samples = (alt_u32*) ADC_SAMPLE_STORE_BASE;
static volatile alt_u32* sequencerCmd = (alt_u32*) ADC_SEQUENCER_BASE;

void adc_init() {
     7cc:	defffe04 	addi	sp,sp,-8
     7d0:	df000115 	stw	fp,4(sp)
     7d4:	df000104 	addi	fp,sp,4
	alt_u32 data = *sequencerCmd;
     7d8:	d0a00417 	ldw	r2,-32752(gp)
     7dc:	10800017 	ldw	r2,0(r2)
     7e0:	e0bfff15 	stw	r2,-4(fp)
	data = (data&0xF) | 0b0001;
     7e4:	e0bfff17 	ldw	r2,-4(fp)
     7e8:	1080038c 	andi	r2,r2,14
     7ec:	10800054 	ori	r2,r2,1
     7f0:	e0bfff15 	stw	r2,-4(fp)
	*sequencerCmd = data;
     7f4:	d0a00417 	ldw	r2,-32752(gp)
     7f8:	e0ffff17 	ldw	r3,-4(fp)
     7fc:	10c00015 	stw	r3,0(r2)
}
     800:	0001883a 	nop
     804:	e037883a 	mov	sp,fp
     808:	df000017 	ldw	fp,0(sp)
     80c:	dec00104 	addi	sp,sp,4
     810:	f800283a 	ret

00000814 <read_channel1>:

alt_u16 read_channel1() {
     814:	defffe04 	addi	sp,sp,-8
     818:	df000115 	stw	fp,4(sp)
     81c:	df000104 	addi	fp,sp,4
    alt_u32 data = samples->slot0;
     820:	d0a00317 	ldw	r2,-32756(gp)
     824:	10800017 	ldw	r2,0(r2)
     828:	e0bfff15 	stw	r2,-4(fp)
    data &= 0xFFF;
     82c:	e0bfff17 	ldw	r2,-4(fp)
     830:	1083ffcc 	andi	r2,r2,4095
     834:	e0bfff15 	stw	r2,-4(fp)
    return data;
     838:	e0bfff17 	ldw	r2,-4(fp)
}
     83c:	e037883a 	mov	sp,fp
     840:	df000017 	ldw	fp,0(sp)
     844:	dec00104 	addi	sp,sp,4
     848:	f800283a 	ret

0000084c <read_channel2>:

alt_u16 read_channel2() {
     84c:	defffe04 	addi	sp,sp,-8
     850:	df000115 	stw	fp,4(sp)
     854:	df000104 	addi	fp,sp,4
    alt_u32 data = samples->slot1;
     858:	d0a00317 	ldw	r2,-32756(gp)
     85c:	10800117 	ldw	r2,4(r2)
     860:	e0bfff15 	stw	r2,-4(fp)
    data &= 0xFFF;
     864:	e0bfff17 	ldw	r2,-4(fp)
     868:	1083ffcc 	andi	r2,r2,4095
     86c:	e0bfff15 	stw	r2,-4(fp)
    return data;
     870:	e0bfff17 	ldw	r2,-4(fp)
}
     874:	e037883a 	mov	sp,fp
     878:	df000017 	ldw	fp,0(sp)
     87c:	dec00104 	addi	sp,sp,4
     880:	f800283a 	ret

00000884 <read_joystick>:

void read_joystick() {
     884:	defffe04 	addi	sp,sp,-8
     888:	dfc00115 	stw	ra,4(sp)
     88c:	df000015 	stw	fp,0(sp)
     890:	d839883a 	mov	fp,sp
	servo_setAngle(SERVO_Y, (alt_8) (read_channel1() / 4000.0 * 90 - 45));
     894:	00008140 	call	814 <read_channel1>
     898:	10bfffcc 	andi	r2,r2,65535
     89c:	1009883a 	mov	r4,r2
     8a0:	0000f480 	call	f48 <__floatsisf>
     8a4:	1007883a 	mov	r3,r2
     8a8:	00915eb4 	movhi	r2,17786
     8ac:	1887fff2 	custom	255,r3,r3,r2
     8b0:	0090ad34 	movhi	r2,17076
     8b4:	1887ff32 	custom	252,r3,r3,r2
     8b8:	00908d34 	movhi	r2,16948
     8bc:	1885ffb2 	custom	254,r2,r3,r2
     8c0:	1009883a 	mov	r4,r2
     8c4:	0000ed80 	call	ed8 <__fixsfsi>
     8c8:	10803fcc 	andi	r2,r2,255
     8cc:	1080201c 	xori	r2,r2,128
     8d0:	10bfe004 	addi	r2,r2,-128
     8d4:	100b883a 	mov	r5,r2
     8d8:	013fc834 	movhi	r4,65312
     8dc:	21002804 	addi	r4,r4,160
     8e0:	000026c0 	call	26c <servo_setAngle>
	servo_setAngle(SERVO_X, (alt_8) (read_channel2() / 4000.0 * 90 - 45));
     8e4:	000084c0 	call	84c <read_channel2>
     8e8:	10bfffcc 	andi	r2,r2,65535
     8ec:	1009883a 	mov	r4,r2
     8f0:	0000f480 	call	f48 <__floatsisf>
     8f4:	1007883a 	mov	r3,r2
     8f8:	00915eb4 	movhi	r2,17786
     8fc:	1887fff2 	custom	255,r3,r3,r2
     900:	0090ad34 	movhi	r2,17076
     904:	1887ff32 	custom	252,r3,r3,r2
     908:	00908d34 	movhi	r2,16948
     90c:	1885ffb2 	custom	254,r2,r3,r2
     910:	1009883a 	mov	r4,r2
     914:	0000ed80 	call	ed8 <__fixsfsi>
     918:	10803fcc 	andi	r2,r2,255
     91c:	1080201c 	xori	r2,r2,128
     920:	10bfe004 	addi	r2,r2,-128
     924:	100b883a 	mov	r5,r2
     928:	013fc834 	movhi	r4,65312
     92c:	21002404 	addi	r4,r4,144
     930:	000026c0 	call	26c <servo_setAngle>
}
     934:	0001883a 	nop
     938:	e037883a 	mov	sp,fp
     93c:	dfc00117 	ldw	ra,4(sp)
     940:	df000017 	ldw	fp,0(sp)
     944:	dec00204 	addi	sp,sp,8
     948:	f800283a 	ret

0000094c <cam_init>:

#include "camera.h"

static volatile CAMERA* camera = (alt_u32*) CAM_BASE;

void cam_init() {
     94c:	deffff04 	addi	sp,sp,-4
     950:	df000015 	stw	fp,0(sp)
     954:	d839883a 	mov	fp,sp
    // TODO
	//turn disable peripheral core
	camera->CTRL &= 0xFFFFFFFE;
     958:	d0a00517 	ldw	r2,-32748(gp)
     95c:	d0e00517 	ldw	r3,-32748(gp)
     960:	19000217 	ldw	r4,8(r3)
     964:	00ffff84 	movi	r3,-2
     968:	20c6703a 	and	r3,r4,r3
     96c:	10c00215 	stw	r3,8(r2)
	//set to standard transfer mode
	camera->CTRL &= 0xFFFFFFFD;
     970:	d0a00517 	ldw	r2,-32748(gp)
     974:	d0e00517 	ldw	r3,-32748(gp)
     978:	19000217 	ldw	r4,8(r3)
     97c:	00ffff44 	movi	r3,-3
     980:	20c6703a 	and	r3,r4,r3
     984:	10c00215 	stw	r3,8(r2)
	//enable rx and tx interrupts
	camera->ISER |= 0x3;
     988:	d0a00517 	ldw	r2,-32748(gp)
     98c:	d0e00517 	ldw	r3,-32748(gp)
     990:	18c00317 	ldw	r3,12(r3)
     994:	18c000d4 	ori	r3,r3,3
     998:	10c00315 	stw	r3,12(r2)
	//enable peripheral core
	camera->CTRL |= 0b1;
     99c:	d0a00517 	ldw	r2,-32748(gp)
     9a0:	d0e00517 	ldw	r3,-32748(gp)
     9a4:	18c00217 	ldw	r3,8(r3)
     9a8:	18c00054 	ori	r3,r3,1
     9ac:	10c00215 	stw	r3,8(r2)
}
     9b0:	0001883a 	nop
     9b4:	e037883a 	mov	sp,fp
     9b8:	df000017 	ldw	fp,0(sp)
     9bc:	dec00104 	addi	sp,sp,4
     9c0:	f800283a 	ret

000009c4 <cam_setReg>:

void cam_setReg(alt_u32* cmd) {
     9c4:	defffe04 	addi	sp,sp,-8
     9c8:	df000115 	stw	fp,4(sp)
     9cc:	df000104 	addi	fp,sp,4
     9d0:	e13fff15 	stw	r4,-4(fp)
    // TODO
}
     9d4:	0001883a 	nop
     9d8:	e037883a 	mov	sp,fp
     9dc:	df000017 	ldw	fp,0(sp)
     9e0:	dec00104 	addi	sp,sp,4
     9e4:	f800283a 	ret

000009e8 <cam_getReg>:

alt_u32 cam_getReg() {
     9e8:	deffff04 	addi	sp,sp,-4
     9ec:	df000015 	stw	fp,0(sp)
     9f0:	d839883a 	mov	fp,sp
    // TODO
    return 0;
     9f4:	0005883a 	mov	r2,zero
}
     9f8:	e037883a 	mov	sp,fp
     9fc:	df000017 	ldw	fp,0(sp)
     a00:	dec00104 	addi	sp,sp,4
     a04:	f800283a 	ret

00000a08 <cam_write_data>:

void cam_write_data(int addr, int data){
     a08:	defffd04 	addi	sp,sp,-12
     a0c:	df000215 	stw	fp,8(sp)
     a10:	df000204 	addi	fp,sp,8
     a14:	e13ffe15 	stw	r4,-8(fp)
     a18:	e17fff15 	stw	r5,-4(fp)
	//assert start bit
	//camera->TFR_CMD |= 1<<9;
	//wait for transmit ready
	while(!(camera->ISR&0b1 == 1)){};
     a1c:	0001883a 	nop
     a20:	d0a00517 	ldw	r2,-32748(gp)
     a24:	10800417 	ldw	r2,16(r2)
     a28:	1080004c 	andi	r2,r2,1
     a2c:	103ffc26 	beq	r2,zero,a20 <__alt_mem_Onchip_SRAM+0xf8000a20>
	//assert write ID
	camera->TFR_CMD = (0x42) | (1<<9);
     a30:	d0a00517 	ldw	r2,-32748(gp)
     a34:	00c09084 	movi	r3,578
     a38:	10c00015 	stw	r3,0(r2)
	//wait for transmit ready
	while(!(camera->ISR&0b1 == 1)){};
     a3c:	0001883a 	nop
     a40:	d0a00517 	ldw	r2,-32748(gp)
     a44:	10800417 	ldw	r2,16(r2)
     a48:	1080004c 	andi	r2,r2,1
     a4c:	103ffc26 	beq	r2,zero,a40 <__alt_mem_Onchip_SRAM+0xf8000a40>
	//specify address (shift for write bit)
	camera->TFR_CMD = addr<<1;
     a50:	d0e00517 	ldw	r3,-32748(gp)
     a54:	e0bffe17 	ldw	r2,-8(fp)
     a58:	1085883a 	add	r2,r2,r2
     a5c:	18800015 	stw	r2,0(r3)
	//wait for transmit ready
	while(!(camera->ISR&0b1 == 1)){};
     a60:	0001883a 	nop
     a64:	d0a00517 	ldw	r2,-32748(gp)
     a68:	10800417 	ldw	r2,16(r2)
     a6c:	1080004c 	andi	r2,r2,1
     a70:	103ffc26 	beq	r2,zero,a64 <__alt_mem_Onchip_SRAM+0xf8000a64>
	//actually write data (shift for write bit)
	camera->TFR_CMD = (data<<1) | (1<<8);
     a74:	d0e00517 	ldw	r3,-32748(gp)
     a78:	e0bfff17 	ldw	r2,-4(fp)
     a7c:	1085883a 	add	r2,r2,r2
     a80:	10804014 	ori	r2,r2,256
     a84:	18800015 	stw	r2,0(r3)
	//stop transmit
	//camera->TFR_CMD |= 1<<8;


}
     a88:	0001883a 	nop
     a8c:	e037883a 	mov	sp,fp
     a90:	df000017 	ldw	fp,0(sp)
     a94:	dec00104 	addi	sp,sp,4
     a98:	f800283a 	ret

00000a9c <cam_read_data>:

alt_u8 cam_read_data(int addr){
     a9c:	defffd04 	addi	sp,sp,-12
     aa0:	df000215 	stw	fp,8(sp)
     aa4:	df000204 	addi	fp,sp,8
     aa8:	e13fff15 	stw	r4,-4(fp)
	//assert start bit
	//camera->TFR_CMD |= 1<<9;
	//wait for transmit ready
	while(!(camera->ISR&0b1 == 1)){};
     aac:	0001883a 	nop
     ab0:	d0a00517 	ldw	r2,-32748(gp)
     ab4:	10800417 	ldw	r2,16(r2)
     ab8:	1080004c 	andi	r2,r2,1
     abc:	103ffc26 	beq	r2,zero,ab0 <__alt_mem_Onchip_SRAM+0xf8000ab0>
	//assert write ID
	camera->TFR_CMD = (0x42) | (1<<9);
     ac0:	d0a00517 	ldw	r2,-32748(gp)
     ac4:	00c09084 	movi	r3,578
     ac8:	10c00015 	stw	r3,0(r2)
	//wait for transmit ready
	while(!(camera->ISR&0b1 == 1)){};
     acc:	0001883a 	nop
     ad0:	d0a00517 	ldw	r2,-32748(gp)
     ad4:	10800417 	ldw	r2,16(r2)
     ad8:	1080004c 	andi	r2,r2,1
     adc:	103ffc26 	beq	r2,zero,ad0 <__alt_mem_Onchip_SRAM+0xf8000ad0>
	//specify address (shift for write bit)
	camera->TFR_CMD = (addr<<1) | (1<<9);
     ae0:	d0e00517 	ldw	r3,-32748(gp)
     ae4:	e0bfff17 	ldw	r2,-4(fp)
     ae8:	1085883a 	add	r2,r2,r2
     aec:	10808014 	ori	r2,r2,512
     af0:	18800015 	stw	r2,0(r3)
	//stop transmit
	//camera->TFR_CMD |= 1<<8;
	//do i need to restart transmit here? doc's just stay stop
	//camera->TFR_CMD |= 1<<9;
	//wait for transmit ready
	while(!(camera->ISR&0b1 == 1)){};
     af4:	0001883a 	nop
     af8:	d0a00517 	ldw	r2,-32748(gp)
     afc:	10800417 	ldw	r2,16(r2)
     b00:	1080004c 	andi	r2,r2,1
     b04:	103ffc26 	beq	r2,zero,af8 <__alt_mem_Onchip_SRAM+0xf8000af8>
	//assert read ID
	camera->TFR_CMD = 0x43;
     b08:	d0a00517 	ldw	r2,-32748(gp)
     b0c:	00c010c4 	movi	r3,67
     b10:	10c00015 	stw	r3,0(r2)
	//wait for receive ready
	while(!(camera->ISR&2 == 2)){};
     b14:	0001883a 	nop
     b18:	d0a00517 	ldw	r2,-32748(gp)
     b1c:	10800417 	ldw	r2,16(r2)
     b20:	1080004c 	andi	r2,r2,1
     b24:	103ffc26 	beq	r2,zero,b18 <__alt_mem_Onchip_SRAM+0xf8000b18>
	//read and return
	alt_u8 ret = (camera->RX_DATA&0xFF);
     b28:	d0a00517 	ldw	r2,-32748(gp)
     b2c:	10800117 	ldw	r2,4(r2)
     b30:	e0bffe05 	stb	r2,-8(fp)
	//stop transmit
	camera->TFR_CMD |= 1<<8;
     b34:	d0a00517 	ldw	r2,-32748(gp)
     b38:	d0e00517 	ldw	r3,-32748(gp)
     b3c:	18c00017 	ldw	r3,0(r3)
     b40:	18c04014 	ori	r3,r3,256
     b44:	10c00015 	stw	r3,0(r2)
	return ret;
     b48:	e0bffe03 	ldbu	r2,-8(fp)

}
     b4c:	e037883a 	mov	sp,fp
     b50:	df000017 	ldw	fp,0(sp)
     b54:	dec00104 	addi	sp,sp,4
     b58:	f800283a 	ret

00000b5c <delay_1s>:
 */

#include "alt_types.h"
#include "delay.h"  //include declaration header file

void delay_1s(alt_u32 n){
     b5c:	defffc04 	addi	sp,sp,-16
     b60:	dfc00315 	stw	ra,12(sp)
     b64:	df000215 	stw	fp,8(sp)
     b68:	df000204 	addi	fp,sp,8
     b6c:	e13fff15 	stw	r4,-4(fp)
	int i = 500000*n;
     b70:	01400234 	movhi	r5,8
     b74:	29684804 	addi	r5,r5,-24288
     b78:	e13fff17 	ldw	r4,-4(fp)
     b7c:	0000eb00 	call	eb0 <__mulsi3>
     b80:	e0bffe15 	stw	r2,-8(fp)
	while(i>0){
     b84:	00000306 	br	b94 <delay_1s+0x38>
		i--;
     b88:	e0bffe17 	ldw	r2,-8(fp)
     b8c:	10bfffc4 	addi	r2,r2,-1
     b90:	e0bffe15 	stw	r2,-8(fp)
#include "alt_types.h"
#include "delay.h"  //include declaration header file

void delay_1s(alt_u32 n){
	int i = 500000*n;
	while(i>0){
     b94:	e0bffe17 	ldw	r2,-8(fp)
     b98:	00bffb16 	blt	zero,r2,b88 <__alt_mem_Onchip_SRAM+0xf8000b88>
		i--;
	}
}
     b9c:	0001883a 	nop
     ba0:	e037883a 	mov	sp,fp
     ba4:	dfc00117 	ldw	ra,4(sp)
     ba8:	df000017 	ldw	fp,0(sp)
     bac:	dec00204 	addi	sp,sp,8
     bb0:	f800283a 	ret

00000bb4 <delay_1ms>:
void delay_1ms(alt_u32 n){
     bb4:	defffc04 	addi	sp,sp,-16
     bb8:	dfc00315 	stw	ra,12(sp)
     bbc:	df000215 	stw	fp,8(sp)
     bc0:	df000204 	addi	fp,sp,8
     bc4:	e13fff15 	stw	r4,-4(fp)
	int i = 500*n;
     bc8:	01407d04 	movi	r5,500
     bcc:	e13fff17 	ldw	r4,-4(fp)
     bd0:	0000eb00 	call	eb0 <__mulsi3>
     bd4:	e0bffe15 	stw	r2,-8(fp)
	while(i>0){
     bd8:	00000306 	br	be8 <delay_1ms+0x34>
		i--;
     bdc:	e0bffe17 	ldw	r2,-8(fp)
     be0:	10bfffc4 	addi	r2,r2,-1
     be4:	e0bffe15 	stw	r2,-8(fp)
		i--;
	}
}
void delay_1ms(alt_u32 n){
	int i = 500*n;
	while(i>0){
     be8:	e0bffe17 	ldw	r2,-8(fp)
     bec:	00bffb16 	blt	zero,r2,bdc <__alt_mem_Onchip_SRAM+0xf8000bdc>
		i--;
	}
}
     bf0:	0001883a 	nop
     bf4:	e037883a 	mov	sp,fp
     bf8:	dfc00117 	ldw	ra,4(sp)
     bfc:	df000017 	ldw	fp,0(sp)
     c00:	dec00204 	addi	sp,sp,8
     c04:	f800283a 	ret

00000c08 <main>:
 * 2: move servos
 */
#define DEBUG 2


int main(){
     c08:	defffd04 	addi	sp,sp,-12
     c0c:	dfc00215 	stw	ra,8(sp)
     c10:	df000115 	stw	fp,4(sp)
     c14:	dc000015 	stw	r16,0(sp)
     c18:	df000104 	addi	fp,sp,4
  printf("Welcome to the test display!\n");
     c1c:	01000074 	movhi	r4,1
     c20:	211a6204 	addi	r4,r4,27016
     c24:	000121c0 	call	121c <puts>
  //clear on boot up
  clearSevenSegs();
     c28:	00003a40 	call	3a4 <clearSevenSegs>
  //initalize ADC
  adc_init();
     c2c:	00007cc0 	call	7cc <adc_init>
  cam_init();
     c30:	000094c0 	call	94c <cam_init>
  cam_write_data(0x01,0x40);
     c34:	01401004 	movi	r5,64
     c38:	01000044 	movi	r4,1
     c3c:	0000a080 	call	a08 <cam_write_data>
  while(1){

	//determine if switch 0 is on or off. if on display channel 1
	//else if off, display channel 2 on the hex display
	while (DEBUG == 2) {
		if(((*slideSwitches)&1) == 1){
     c40:	d0a00a17 	ldw	r2,-32728(gp)
     c44:	1080000b 	ldhu	r2,0(r2)
     c48:	10bfffcc 	andi	r2,r2,65535
     c4c:	1080004c 	andi	r2,r2,1
     c50:	10000f26 	beq	r2,zero,c90 <main+0x88>
			*HEX4HEX5 = (*HEX4HEX5&0x0000)|(ASCII_to_7Seg('1')<< 8);
     c54:	d0a00717 	ldw	r2,-32740(gp)
     c58:	10800017 	ldw	r2,0(r2)
     c5c:	d4200717 	ldw	r16,-32740(gp)
     c60:	01000c44 	movi	r4,49
     c64:	00003d40 	call	3d4 <ASCII_to_7Seg>
     c68:	10803fcc 	andi	r2,r2,255
     c6c:	1080201c 	xori	r2,r2,128
     c70:	10bfe004 	addi	r2,r2,-128
     c74:	1004923a 	slli	r2,r2,8
     c78:	80800015 	stw	r2,0(r16)
			num_to_7Seg(read_channel1());
     c7c:	00008140 	call	814 <read_channel1>
     c80:	10bfffcc 	andi	r2,r2,65535
     c84:	1009883a 	mov	r4,r2
     c88:	000046c0 	call	46c <num_to_7Seg>
     c8c:	00000e06 	br	cc8 <main+0xc0>
		} else {
			*HEX4HEX5 = (*HEX4HEX5&0x0000)|(ASCII_to_7Seg('0')<< 8);
     c90:	d0a00717 	ldw	r2,-32740(gp)
     c94:	10800017 	ldw	r2,0(r2)
     c98:	d4200717 	ldw	r16,-32740(gp)
     c9c:	01000c04 	movi	r4,48
     ca0:	00003d40 	call	3d4 <ASCII_to_7Seg>
     ca4:	10803fcc 	andi	r2,r2,255
     ca8:	1080201c 	xori	r2,r2,128
     cac:	10bfe004 	addi	r2,r2,-128
     cb0:	1004923a 	slli	r2,r2,8
     cb4:	80800015 	stw	r2,0(r16)
			num_to_7Seg(read_channel2());
     cb8:	000084c0 	call	84c <read_channel2>
     cbc:	10bfffcc 	andi	r2,r2,65535
     cc0:	1009883a 	mov	r4,r2
     cc4:	000046c0 	call	46c <num_to_7Seg>
		}
		//read_joystick();
		acc_steady_servo();
     cc8:	000071c0 	call	71c <acc_steady_servo>
		//printf("X: %d\n", acc_read_x());
		//printf("Y: %d\n", acc_read_y());
		//printf("Z: %d\n", acc_read_z());
		printf("camera blue gain: %d\n", cam_read_data(0x01));
     ccc:	01000044 	movi	r4,1
     cd0:	0000a9c0 	call	a9c <cam_read_data>
     cd4:	10803fcc 	andi	r2,r2,255
     cd8:	100b883a 	mov	r5,r2
     cdc:	01000074 	movhi	r4,1
     ce0:	211a6a04 	addi	r4,r4,27048
     ce4:	00011000 	call	1100 <printf>
		printf("\n");
     ce8:	01000284 	movi	r4,10
     cec:	00011440 	call	1144 <putchar>
		delay_1ms(200);
     cf0:	01003204 	movi	r4,200
     cf4:	0000bb40 	call	bb4 <delay_1ms>
	}
     cf8:	003fd106 	br	c40 <__alt_mem_Onchip_SRAM+0xf8000c40>

00000cfc <__divsi3>:
     cfc:	20001b16 	blt	r4,zero,d6c <__divsi3+0x70>
     d00:	000f883a 	mov	r7,zero
     d04:	28001616 	blt	r5,zero,d60 <__divsi3+0x64>
     d08:	200d883a 	mov	r6,r4
     d0c:	29001a2e 	bgeu	r5,r4,d78 <__divsi3+0x7c>
     d10:	00800804 	movi	r2,32
     d14:	00c00044 	movi	r3,1
     d18:	00000106 	br	d20 <__divsi3+0x24>
     d1c:	10000d26 	beq	r2,zero,d54 <__divsi3+0x58>
     d20:	294b883a 	add	r5,r5,r5
     d24:	10bfffc4 	addi	r2,r2,-1
     d28:	18c7883a 	add	r3,r3,r3
     d2c:	293ffb36 	bltu	r5,r4,d1c <__alt_mem_Onchip_SRAM+0xf8000d1c>
     d30:	0005883a 	mov	r2,zero
     d34:	18000726 	beq	r3,zero,d54 <__divsi3+0x58>
     d38:	0005883a 	mov	r2,zero
     d3c:	31400236 	bltu	r6,r5,d48 <__divsi3+0x4c>
     d40:	314dc83a 	sub	r6,r6,r5
     d44:	10c4b03a 	or	r2,r2,r3
     d48:	1806d07a 	srli	r3,r3,1
     d4c:	280ad07a 	srli	r5,r5,1
     d50:	183ffa1e 	bne	r3,zero,d3c <__alt_mem_Onchip_SRAM+0xf8000d3c>
     d54:	38000126 	beq	r7,zero,d5c <__divsi3+0x60>
     d58:	0085c83a 	sub	r2,zero,r2
     d5c:	f800283a 	ret
     d60:	014bc83a 	sub	r5,zero,r5
     d64:	39c0005c 	xori	r7,r7,1
     d68:	003fe706 	br	d08 <__alt_mem_Onchip_SRAM+0xf8000d08>
     d6c:	0109c83a 	sub	r4,zero,r4
     d70:	01c00044 	movi	r7,1
     d74:	003fe306 	br	d04 <__alt_mem_Onchip_SRAM+0xf8000d04>
     d78:	00c00044 	movi	r3,1
     d7c:	003fee06 	br	d38 <__alt_mem_Onchip_SRAM+0xf8000d38>

00000d80 <__modsi3>:
     d80:	20001716 	blt	r4,zero,de0 <__modsi3+0x60>
     d84:	000f883a 	mov	r7,zero
     d88:	2005883a 	mov	r2,r4
     d8c:	28001216 	blt	r5,zero,dd8 <__modsi3+0x58>
     d90:	2900162e 	bgeu	r5,r4,dec <__modsi3+0x6c>
     d94:	01800804 	movi	r6,32
     d98:	00c00044 	movi	r3,1
     d9c:	00000106 	br	da4 <__modsi3+0x24>
     da0:	30000a26 	beq	r6,zero,dcc <__modsi3+0x4c>
     da4:	294b883a 	add	r5,r5,r5
     da8:	31bfffc4 	addi	r6,r6,-1
     dac:	18c7883a 	add	r3,r3,r3
     db0:	293ffb36 	bltu	r5,r4,da0 <__alt_mem_Onchip_SRAM+0xf8000da0>
     db4:	18000526 	beq	r3,zero,dcc <__modsi3+0x4c>
     db8:	1806d07a 	srli	r3,r3,1
     dbc:	11400136 	bltu	r2,r5,dc4 <__modsi3+0x44>
     dc0:	1145c83a 	sub	r2,r2,r5
     dc4:	280ad07a 	srli	r5,r5,1
     dc8:	183ffb1e 	bne	r3,zero,db8 <__alt_mem_Onchip_SRAM+0xf8000db8>
     dcc:	38000126 	beq	r7,zero,dd4 <__modsi3+0x54>
     dd0:	0085c83a 	sub	r2,zero,r2
     dd4:	f800283a 	ret
     dd8:	014bc83a 	sub	r5,zero,r5
     ddc:	003fec06 	br	d90 <__alt_mem_Onchip_SRAM+0xf8000d90>
     de0:	0109c83a 	sub	r4,zero,r4
     de4:	01c00044 	movi	r7,1
     de8:	003fe706 	br	d88 <__alt_mem_Onchip_SRAM+0xf8000d88>
     dec:	00c00044 	movi	r3,1
     df0:	003ff106 	br	db8 <__alt_mem_Onchip_SRAM+0xf8000db8>

00000df4 <__udivsi3>:
     df4:	200d883a 	mov	r6,r4
     df8:	2900152e 	bgeu	r5,r4,e50 <__udivsi3+0x5c>
     dfc:	28001416 	blt	r5,zero,e50 <__udivsi3+0x5c>
     e00:	00800804 	movi	r2,32
     e04:	00c00044 	movi	r3,1
     e08:	00000206 	br	e14 <__udivsi3+0x20>
     e0c:	10000e26 	beq	r2,zero,e48 <__udivsi3+0x54>
     e10:	28000516 	blt	r5,zero,e28 <__udivsi3+0x34>
     e14:	294b883a 	add	r5,r5,r5
     e18:	10bfffc4 	addi	r2,r2,-1
     e1c:	18c7883a 	add	r3,r3,r3
     e20:	293ffa36 	bltu	r5,r4,e0c <__alt_mem_Onchip_SRAM+0xf8000e0c>
     e24:	18000826 	beq	r3,zero,e48 <__udivsi3+0x54>
     e28:	0005883a 	mov	r2,zero
     e2c:	31400236 	bltu	r6,r5,e38 <__udivsi3+0x44>
     e30:	314dc83a 	sub	r6,r6,r5
     e34:	10c4b03a 	or	r2,r2,r3
     e38:	1806d07a 	srli	r3,r3,1
     e3c:	280ad07a 	srli	r5,r5,1
     e40:	183ffa1e 	bne	r3,zero,e2c <__alt_mem_Onchip_SRAM+0xf8000e2c>
     e44:	f800283a 	ret
     e48:	0005883a 	mov	r2,zero
     e4c:	f800283a 	ret
     e50:	00c00044 	movi	r3,1
     e54:	003ff406 	br	e28 <__alt_mem_Onchip_SRAM+0xf8000e28>

00000e58 <__umodsi3>:
     e58:	2005883a 	mov	r2,r4
     e5c:	2900122e 	bgeu	r5,r4,ea8 <__umodsi3+0x50>
     e60:	28001116 	blt	r5,zero,ea8 <__umodsi3+0x50>
     e64:	01800804 	movi	r6,32
     e68:	00c00044 	movi	r3,1
     e6c:	00000206 	br	e78 <__umodsi3+0x20>
     e70:	30000c26 	beq	r6,zero,ea4 <__umodsi3+0x4c>
     e74:	28000516 	blt	r5,zero,e8c <__umodsi3+0x34>
     e78:	294b883a 	add	r5,r5,r5
     e7c:	31bfffc4 	addi	r6,r6,-1
     e80:	18c7883a 	add	r3,r3,r3
     e84:	293ffa36 	bltu	r5,r4,e70 <__alt_mem_Onchip_SRAM+0xf8000e70>
     e88:	18000626 	beq	r3,zero,ea4 <__umodsi3+0x4c>
     e8c:	1806d07a 	srli	r3,r3,1
     e90:	11400136 	bltu	r2,r5,e98 <__umodsi3+0x40>
     e94:	1145c83a 	sub	r2,r2,r5
     e98:	280ad07a 	srli	r5,r5,1
     e9c:	183ffb1e 	bne	r3,zero,e8c <__alt_mem_Onchip_SRAM+0xf8000e8c>
     ea0:	f800283a 	ret
     ea4:	f800283a 	ret
     ea8:	00c00044 	movi	r3,1
     eac:	003ff706 	br	e8c <__alt_mem_Onchip_SRAM+0xf8000e8c>

00000eb0 <__mulsi3>:
     eb0:	0005883a 	mov	r2,zero
     eb4:	20000726 	beq	r4,zero,ed4 <__mulsi3+0x24>
     eb8:	20c0004c 	andi	r3,r4,1
     ebc:	2008d07a 	srli	r4,r4,1
     ec0:	18000126 	beq	r3,zero,ec8 <__mulsi3+0x18>
     ec4:	1145883a 	add	r2,r2,r5
     ec8:	294b883a 	add	r5,r5,r5
     ecc:	203ffa1e 	bne	r4,zero,eb8 <__alt_mem_Onchip_SRAM+0xf8000eb8>
     ed0:	f800283a 	ret
     ed4:	f800283a 	ret

00000ed8 <__fixsfsi>:
     ed8:	200ad5fa 	srli	r5,r4,23
     edc:	00c02034 	movhi	r3,128
     ee0:	18ffffc4 	addi	r3,r3,-1
     ee4:	29403fcc 	andi	r5,r5,255
     ee8:	00801f84 	movi	r2,126
     eec:	1906703a 	and	r3,r3,r4
     ef0:	2008d7fa 	srli	r4,r4,31
     ef4:	11400e0e 	bge	r2,r5,f30 <__fixsfsi+0x58>
     ef8:	00802744 	movi	r2,157
     efc:	11400816 	blt	r2,r5,f20 <__fixsfsi+0x48>
     f00:	00802544 	movi	r2,149
     f04:	18c02034 	orhi	r3,r3,128
     f08:	11400b0e 	bge	r2,r5,f38 <__fixsfsi+0x60>
     f0c:	28bfda84 	addi	r2,r5,-150
     f10:	1884983a 	sll	r2,r3,r2
     f14:	20000726 	beq	r4,zero,f34 <__fixsfsi+0x5c>
     f18:	0085c83a 	sub	r2,zero,r2
     f1c:	f800283a 	ret
     f20:	00a00034 	movhi	r2,32768
     f24:	10bfffc4 	addi	r2,r2,-1
     f28:	2085883a 	add	r2,r4,r2
     f2c:	f800283a 	ret
     f30:	0005883a 	mov	r2,zero
     f34:	f800283a 	ret
     f38:	00802584 	movi	r2,150
     f3c:	1145c83a 	sub	r2,r2,r5
     f40:	1884d83a 	srl	r2,r3,r2
     f44:	003ff306 	br	f14 <__alt_mem_Onchip_SRAM+0xf8000f14>

00000f48 <__floatsisf>:
     f48:	defffd04 	addi	sp,sp,-12
     f4c:	dfc00215 	stw	ra,8(sp)
     f50:	dc400115 	stw	r17,4(sp)
     f54:	dc000015 	stw	r16,0(sp)
     f58:	20003526 	beq	r4,zero,1030 <__floatsisf+0xe8>
     f5c:	2021883a 	mov	r16,r4
     f60:	2022d7fa 	srli	r17,r4,31
     f64:	20003616 	blt	r4,zero,1040 <__floatsisf+0xf8>
     f68:	8009883a 	mov	r4,r16
     f6c:	000106c0 	call	106c <__clzsi2>
     f70:	00c02784 	movi	r3,158
     f74:	1887c83a 	sub	r3,r3,r2
     f78:	01002584 	movi	r4,150
     f7c:	20c01416 	blt	r4,r3,fd0 <__floatsisf+0x88>
     f80:	20c9c83a 	sub	r4,r4,r3
     f84:	8120983a 	sll	r16,r16,r4
     f88:	00802034 	movhi	r2,128
     f8c:	10bfffc4 	addi	r2,r2,-1
     f90:	8809883a 	mov	r4,r17
     f94:	80a0703a 	and	r16,r16,r2
     f98:	18803fcc 	andi	r2,r3,255
     f9c:	100695fa 	slli	r3,r2,23
     fa0:	20803fcc 	andi	r2,r4,255
     fa4:	100897fa 	slli	r4,r2,31
     fa8:	00802034 	movhi	r2,128
     fac:	10bfffc4 	addi	r2,r2,-1
     fb0:	8084703a 	and	r2,r16,r2
     fb4:	10c4b03a 	or	r2,r2,r3
     fb8:	1104b03a 	or	r2,r2,r4
     fbc:	dfc00217 	ldw	ra,8(sp)
     fc0:	dc400117 	ldw	r17,4(sp)
     fc4:	dc000017 	ldw	r16,0(sp)
     fc8:	dec00304 	addi	sp,sp,12
     fcc:	f800283a 	ret
     fd0:	01002644 	movi	r4,153
     fd4:	20c01c16 	blt	r4,r3,1048 <__floatsisf+0x100>
     fd8:	20c9c83a 	sub	r4,r4,r3
     fdc:	8120983a 	sll	r16,r16,r4
     fe0:	013f0034 	movhi	r4,64512
     fe4:	213fffc4 	addi	r4,r4,-1
     fe8:	814001cc 	andi	r5,r16,7
     fec:	8108703a 	and	r4,r16,r4
     ff0:	28000426 	beq	r5,zero,1004 <__floatsisf+0xbc>
     ff4:	840003cc 	andi	r16,r16,15
     ff8:	01400104 	movi	r5,4
     ffc:	81400126 	beq	r16,r5,1004 <__floatsisf+0xbc>
    1000:	2149883a 	add	r4,r4,r5
    1004:	2141002c 	andhi	r5,r4,1024
    1008:	28000526 	beq	r5,zero,1020 <__floatsisf+0xd8>
    100c:	00c027c4 	movi	r3,159
    1010:	1887c83a 	sub	r3,r3,r2
    1014:	00bf0034 	movhi	r2,64512
    1018:	10bfffc4 	addi	r2,r2,-1
    101c:	2088703a 	and	r4,r4,r2
    1020:	202091ba 	slli	r16,r4,6
    1024:	8809883a 	mov	r4,r17
    1028:	8020d27a 	srli	r16,r16,9
    102c:	003fda06 	br	f98 <__alt_mem_Onchip_SRAM+0xf8000f98>
    1030:	0009883a 	mov	r4,zero
    1034:	0007883a 	mov	r3,zero
    1038:	0021883a 	mov	r16,zero
    103c:	003fd606 	br	f98 <__alt_mem_Onchip_SRAM+0xf8000f98>
    1040:	0121c83a 	sub	r16,zero,r4
    1044:	003fc806 	br	f68 <__alt_mem_Onchip_SRAM+0xf8000f68>
    1048:	01002e44 	movi	r4,185
    104c:	20c9c83a 	sub	r4,r4,r3
    1050:	01400144 	movi	r5,5
    1054:	8108983a 	sll	r4,r16,r4
    1058:	288bc83a 	sub	r5,r5,r2
    105c:	8160d83a 	srl	r16,r16,r5
    1060:	2008c03a 	cmpne	r4,r4,zero
    1064:	8120b03a 	or	r16,r16,r4
    1068:	003fdd06 	br	fe0 <__alt_mem_Onchip_SRAM+0xf8000fe0>

0000106c <__clzsi2>:
    106c:	00bfffd4 	movui	r2,65535
    1070:	11000536 	bltu	r2,r4,1088 <__clzsi2+0x1c>
    1074:	00803fc4 	movi	r2,255
    1078:	11000f36 	bltu	r2,r4,10b8 <__clzsi2+0x4c>
    107c:	00800804 	movi	r2,32
    1080:	0007883a 	mov	r3,zero
    1084:	00000506 	br	109c <__clzsi2+0x30>
    1088:	00804034 	movhi	r2,256
    108c:	10bfffc4 	addi	r2,r2,-1
    1090:	11000c2e 	bgeu	r2,r4,10c4 <__clzsi2+0x58>
    1094:	00800204 	movi	r2,8
    1098:	00c00604 	movi	r3,24
    109c:	20c8d83a 	srl	r4,r4,r3
    10a0:	00c00074 	movhi	r3,1
    10a4:	18da6f84 	addi	r3,r3,27070
    10a8:	1909883a 	add	r4,r3,r4
    10ac:	20c00003 	ldbu	r3,0(r4)
    10b0:	10c5c83a 	sub	r2,r2,r3
    10b4:	f800283a 	ret
    10b8:	00800604 	movi	r2,24
    10bc:	00c00204 	movi	r3,8
    10c0:	003ff606 	br	109c <__alt_mem_Onchip_SRAM+0xf800109c>
    10c4:	00800404 	movi	r2,16
    10c8:	1007883a 	mov	r3,r2
    10cc:	003ff306 	br	109c <__alt_mem_Onchip_SRAM+0xf800109c>

000010d0 <_printf_r>:
    10d0:	defffd04 	addi	sp,sp,-12
    10d4:	2805883a 	mov	r2,r5
    10d8:	dfc00015 	stw	ra,0(sp)
    10dc:	d9800115 	stw	r6,4(sp)
    10e0:	d9c00215 	stw	r7,8(sp)
    10e4:	21400217 	ldw	r5,8(r4)
    10e8:	d9c00104 	addi	r7,sp,4
    10ec:	100d883a 	mov	r6,r2
    10f0:	00037140 	call	3714 <___vfprintf_internal_r>
    10f4:	dfc00017 	ldw	ra,0(sp)
    10f8:	dec00304 	addi	sp,sp,12
    10fc:	f800283a 	ret

00001100 <printf>:
    1100:	defffc04 	addi	sp,sp,-16
    1104:	dfc00015 	stw	ra,0(sp)
    1108:	d9400115 	stw	r5,4(sp)
    110c:	d9800215 	stw	r6,8(sp)
    1110:	d9c00315 	stw	r7,12(sp)
    1114:	008000b4 	movhi	r2,2
    1118:	10a23704 	addi	r2,r2,-30500
    111c:	10800017 	ldw	r2,0(r2)
    1120:	200b883a 	mov	r5,r4
    1124:	d9800104 	addi	r6,sp,4
    1128:	11000217 	ldw	r4,8(r2)
    112c:	00059f00 	call	59f0 <__vfprintf_internal>
    1130:	dfc00017 	ldw	ra,0(sp)
    1134:	dec00404 	addi	sp,sp,16
    1138:	f800283a 	ret

0000113c <_putchar_r>:
    113c:	21800217 	ldw	r6,8(r4)
    1140:	000a6101 	jmpi	a610 <_putc_r>

00001144 <putchar>:
    1144:	008000b4 	movhi	r2,2
    1148:	10a23704 	addi	r2,r2,-30500
    114c:	200b883a 	mov	r5,r4
    1150:	11000017 	ldw	r4,0(r2)
    1154:	21800217 	ldw	r6,8(r4)
    1158:	000a6101 	jmpi	a610 <_putc_r>

0000115c <_puts_r>:
    115c:	defff604 	addi	sp,sp,-40
    1160:	dc000715 	stw	r16,28(sp)
    1164:	2021883a 	mov	r16,r4
    1168:	2809883a 	mov	r4,r5
    116c:	dc400815 	stw	r17,32(sp)
    1170:	dfc00915 	stw	ra,36(sp)
    1174:	2823883a 	mov	r17,r5
    1178:	00013700 	call	1370 <strlen>
    117c:	10c00044 	addi	r3,r2,1
    1180:	d8800115 	stw	r2,4(sp)
    1184:	00800074 	movhi	r2,1
    1188:	109ab004 	addi	r2,r2,27328
    118c:	d8800215 	stw	r2,8(sp)
    1190:	00800044 	movi	r2,1
    1194:	d8800315 	stw	r2,12(sp)
    1198:	00800084 	movi	r2,2
    119c:	dc400015 	stw	r17,0(sp)
    11a0:	d8c00615 	stw	r3,24(sp)
    11a4:	dec00415 	stw	sp,16(sp)
    11a8:	d8800515 	stw	r2,20(sp)
    11ac:	80000226 	beq	r16,zero,11b8 <_puts_r+0x5c>
    11b0:	80800e17 	ldw	r2,56(r16)
    11b4:	10001426 	beq	r2,zero,1208 <_puts_r+0xac>
    11b8:	81400217 	ldw	r5,8(r16)
    11bc:	2880030b 	ldhu	r2,12(r5)
    11c0:	10c8000c 	andi	r3,r2,8192
    11c4:	1800061e 	bne	r3,zero,11e0 <_puts_r+0x84>
    11c8:	29001917 	ldw	r4,100(r5)
    11cc:	00f7ffc4 	movi	r3,-8193
    11d0:	10880014 	ori	r2,r2,8192
    11d4:	20c6703a 	and	r3,r4,r3
    11d8:	2880030d 	sth	r2,12(r5)
    11dc:	28c01915 	stw	r3,100(r5)
    11e0:	d9800404 	addi	r6,sp,16
    11e4:	8009883a 	mov	r4,r16
    11e8:	0007f580 	call	7f58 <__sfvwrite_r>
    11ec:	1000091e 	bne	r2,zero,1214 <_puts_r+0xb8>
    11f0:	00800284 	movi	r2,10
    11f4:	dfc00917 	ldw	ra,36(sp)
    11f8:	dc400817 	ldw	r17,32(sp)
    11fc:	dc000717 	ldw	r16,28(sp)
    1200:	dec00a04 	addi	sp,sp,40
    1204:	f800283a 	ret
    1208:	8009883a 	mov	r4,r16
    120c:	0007ad40 	call	7ad4 <__sinit>
    1210:	003fe906 	br	11b8 <__alt_mem_Onchip_SRAM+0xf80011b8>
    1214:	00bfffc4 	movi	r2,-1
    1218:	003ff606 	br	11f4 <__alt_mem_Onchip_SRAM+0xf80011f4>

0000121c <puts>:
    121c:	008000b4 	movhi	r2,2
    1220:	10a23704 	addi	r2,r2,-30500
    1224:	200b883a 	mov	r5,r4
    1228:	11000017 	ldw	r4,0(r2)
    122c:	000115c1 	jmpi	115c <_puts_r>

00001230 <srand>:
    1230:	008000b4 	movhi	r2,2
    1234:	10a23704 	addi	r2,r2,-30500
    1238:	10800017 	ldw	r2,0(r2)
    123c:	11002915 	stw	r4,164(r2)
    1240:	10002a15 	stw	zero,168(r2)
    1244:	f800283a 	ret

00001248 <rand>:
    1248:	008000b4 	movhi	r2,2
    124c:	defffe04 	addi	sp,sp,-8
    1250:	10a23704 	addi	r2,r2,-30500
    1254:	dc000015 	stw	r16,0(sp)
    1258:	14000017 	ldw	r16,0(r2)
    125c:	dfc00115 	stw	ra,4(sp)
    1260:	01932574 	movhi	r6,19605
    1264:	81002917 	ldw	r4,164(r16)
    1268:	81402a17 	ldw	r5,168(r16)
    126c:	01d614b4 	movhi	r7,22610
    1270:	319fcb44 	addi	r6,r6,32557
    1274:	39fd0b44 	addi	r7,r7,-3027
    1278:	000e5700 	call	e570 <__muldi3>
    127c:	11000044 	addi	r4,r2,1
    1280:	2085803a 	cmpltu	r2,r4,r2
    1284:	10c7883a 	add	r3,r2,r3
    1288:	00a00034 	movhi	r2,32768
    128c:	10bfffc4 	addi	r2,r2,-1
    1290:	1884703a 	and	r2,r3,r2
    1294:	81002915 	stw	r4,164(r16)
    1298:	80c02a15 	stw	r3,168(r16)
    129c:	dfc00117 	ldw	ra,4(sp)
    12a0:	dc000017 	ldw	r16,0(sp)
    12a4:	dec00204 	addi	sp,sp,8
    12a8:	f800283a 	ret

000012ac <_sprintf_r>:
    12ac:	deffe404 	addi	sp,sp,-112
    12b0:	2807883a 	mov	r3,r5
    12b4:	dfc01a15 	stw	ra,104(sp)
    12b8:	d9c01b15 	stw	r7,108(sp)
    12bc:	00a00034 	movhi	r2,32768
    12c0:	10bfffc4 	addi	r2,r2,-1
    12c4:	02008204 	movi	r8,520
    12c8:	d8800215 	stw	r2,8(sp)
    12cc:	d8800515 	stw	r2,20(sp)
    12d0:	d9c01b04 	addi	r7,sp,108
    12d4:	d80b883a 	mov	r5,sp
    12d8:	00bfffc4 	movi	r2,-1
    12dc:	d8c00015 	stw	r3,0(sp)
    12e0:	d8c00415 	stw	r3,16(sp)
    12e4:	da00030d 	sth	r8,12(sp)
    12e8:	d880038d 	sth	r2,14(sp)
    12ec:	00014080 	call	1408 <___svfprintf_internal_r>
    12f0:	d8c00017 	ldw	r3,0(sp)
    12f4:	18000005 	stb	zero,0(r3)
    12f8:	dfc01a17 	ldw	ra,104(sp)
    12fc:	dec01c04 	addi	sp,sp,112
    1300:	f800283a 	ret

00001304 <sprintf>:
    1304:	deffe304 	addi	sp,sp,-116
    1308:	2007883a 	mov	r3,r4
    130c:	dfc01a15 	stw	ra,104(sp)
    1310:	d9801b15 	stw	r6,108(sp)
    1314:	d9c01c15 	stw	r7,112(sp)
    1318:	010000b4 	movhi	r4,2
    131c:	21223704 	addi	r4,r4,-30500
    1320:	21000017 	ldw	r4,0(r4)
    1324:	00a00034 	movhi	r2,32768
    1328:	10bfffc4 	addi	r2,r2,-1
    132c:	280d883a 	mov	r6,r5
    1330:	02008204 	movi	r8,520
    1334:	d8800215 	stw	r2,8(sp)
    1338:	d8800515 	stw	r2,20(sp)
    133c:	d9c01b04 	addi	r7,sp,108
    1340:	d80b883a 	mov	r5,sp
    1344:	00bfffc4 	movi	r2,-1
    1348:	d8c00015 	stw	r3,0(sp)
    134c:	d8c00415 	stw	r3,16(sp)
    1350:	da00030d 	sth	r8,12(sp)
    1354:	d880038d 	sth	r2,14(sp)
    1358:	00014080 	call	1408 <___svfprintf_internal_r>
    135c:	d8c00017 	ldw	r3,0(sp)
    1360:	18000005 	stb	zero,0(r3)
    1364:	dfc01a17 	ldw	ra,104(sp)
    1368:	dec01d04 	addi	sp,sp,116
    136c:	f800283a 	ret

00001370 <strlen>:
    1370:	208000cc 	andi	r2,r4,3
    1374:	10002026 	beq	r2,zero,13f8 <strlen+0x88>
    1378:	20800007 	ldb	r2,0(r4)
    137c:	10002026 	beq	r2,zero,1400 <strlen+0x90>
    1380:	2005883a 	mov	r2,r4
    1384:	00000206 	br	1390 <strlen+0x20>
    1388:	10c00007 	ldb	r3,0(r2)
    138c:	18001826 	beq	r3,zero,13f0 <strlen+0x80>
    1390:	10800044 	addi	r2,r2,1
    1394:	10c000cc 	andi	r3,r2,3
    1398:	183ffb1e 	bne	r3,zero,1388 <__alt_mem_Onchip_SRAM+0xf8001388>
    139c:	10c00017 	ldw	r3,0(r2)
    13a0:	01ffbff4 	movhi	r7,65279
    13a4:	39ffbfc4 	addi	r7,r7,-257
    13a8:	00ca303a 	nor	r5,zero,r3
    13ac:	01a02074 	movhi	r6,32897
    13b0:	19c7883a 	add	r3,r3,r7
    13b4:	31a02004 	addi	r6,r6,-32640
    13b8:	1946703a 	and	r3,r3,r5
    13bc:	1986703a 	and	r3,r3,r6
    13c0:	1800091e 	bne	r3,zero,13e8 <strlen+0x78>
    13c4:	10800104 	addi	r2,r2,4
    13c8:	10c00017 	ldw	r3,0(r2)
    13cc:	19cb883a 	add	r5,r3,r7
    13d0:	00c6303a 	nor	r3,zero,r3
    13d4:	28c6703a 	and	r3,r5,r3
    13d8:	1986703a 	and	r3,r3,r6
    13dc:	183ff926 	beq	r3,zero,13c4 <__alt_mem_Onchip_SRAM+0xf80013c4>
    13e0:	00000106 	br	13e8 <strlen+0x78>
    13e4:	10800044 	addi	r2,r2,1
    13e8:	10c00007 	ldb	r3,0(r2)
    13ec:	183ffd1e 	bne	r3,zero,13e4 <__alt_mem_Onchip_SRAM+0xf80013e4>
    13f0:	1105c83a 	sub	r2,r2,r4
    13f4:	f800283a 	ret
    13f8:	2005883a 	mov	r2,r4
    13fc:	003fe706 	br	139c <__alt_mem_Onchip_SRAM+0xf800139c>
    1400:	0005883a 	mov	r2,zero
    1404:	f800283a 	ret

00001408 <___svfprintf_internal_r>:
    1408:	deffb704 	addi	sp,sp,-292
    140c:	dfc04815 	stw	ra,288(sp)
    1410:	ddc04615 	stw	r23,280(sp)
    1414:	d9402d15 	stw	r5,180(sp)
    1418:	d9003915 	stw	r4,228(sp)
    141c:	302f883a 	mov	r23,r6
    1420:	d9c02e15 	stw	r7,184(sp)
    1424:	df004715 	stw	fp,284(sp)
    1428:	dd804515 	stw	r22,276(sp)
    142c:	dd404415 	stw	r21,272(sp)
    1430:	dd004315 	stw	r20,268(sp)
    1434:	dcc04215 	stw	r19,264(sp)
    1438:	dc804115 	stw	r18,260(sp)
    143c:	dc404015 	stw	r17,256(sp)
    1440:	dc003f15 	stw	r16,252(sp)
    1444:	00086b00 	call	86b0 <_localeconv_r>
    1448:	10800017 	ldw	r2,0(r2)
    144c:	1009883a 	mov	r4,r2
    1450:	d8803415 	stw	r2,208(sp)
    1454:	00013700 	call	1370 <strlen>
    1458:	d8c02d17 	ldw	r3,180(sp)
    145c:	d8803815 	stw	r2,224(sp)
    1460:	1880030b 	ldhu	r2,12(r3)
    1464:	1080200c 	andi	r2,r2,128
    1468:	10000226 	beq	r2,zero,1474 <___svfprintf_internal_r+0x6c>
    146c:	18800417 	ldw	r2,16(r3)
    1470:	1006b126 	beq	r2,zero,2f38 <___svfprintf_internal_r+0x1b30>
    1474:	dcc03917 	ldw	r19,228(sp)
    1478:	d8c00404 	addi	r3,sp,16
    147c:	05400074 	movhi	r21,1
    1480:	d9001e04 	addi	r4,sp,120
    1484:	ad5ac184 	addi	r21,r21,27398
    1488:	d8c01e15 	stw	r3,120(sp)
    148c:	d8002015 	stw	zero,128(sp)
    1490:	d8001f15 	stw	zero,124(sp)
    1494:	d8003315 	stw	zero,204(sp)
    1498:	d8003615 	stw	zero,216(sp)
    149c:	d8003715 	stw	zero,220(sp)
    14a0:	1811883a 	mov	r8,r3
    14a4:	d8003a15 	stw	zero,232(sp)
    14a8:	d8003b15 	stw	zero,236(sp)
    14ac:	d8002f15 	stw	zero,188(sp)
    14b0:	d9002815 	stw	r4,160(sp)
    14b4:	b8800007 	ldb	r2,0(r23)
    14b8:	10027726 	beq	r2,zero,1e98 <___svfprintf_internal_r+0xa90>
    14bc:	00c00944 	movi	r3,37
    14c0:	b823883a 	mov	r17,r23
    14c4:	10c0021e 	bne	r2,r3,14d0 <___svfprintf_internal_r+0xc8>
    14c8:	00001406 	br	151c <___svfprintf_internal_r+0x114>
    14cc:	10c00326 	beq	r2,r3,14dc <___svfprintf_internal_r+0xd4>
    14d0:	8c400044 	addi	r17,r17,1
    14d4:	88800007 	ldb	r2,0(r17)
    14d8:	103ffc1e 	bne	r2,zero,14cc <__alt_mem_Onchip_SRAM+0xf80014cc>
    14dc:	8de1c83a 	sub	r16,r17,r23
    14e0:	80000e26 	beq	r16,zero,151c <___svfprintf_internal_r+0x114>
    14e4:	d8c02017 	ldw	r3,128(sp)
    14e8:	d8801f17 	ldw	r2,124(sp)
    14ec:	45c00015 	stw	r23,0(r8)
    14f0:	1c07883a 	add	r3,r3,r16
    14f4:	10800044 	addi	r2,r2,1
    14f8:	d8c02015 	stw	r3,128(sp)
    14fc:	44000115 	stw	r16,4(r8)
    1500:	d8801f15 	stw	r2,124(sp)
    1504:	00c001c4 	movi	r3,7
    1508:	18809916 	blt	r3,r2,1770 <___svfprintf_internal_r+0x368>
    150c:	42000204 	addi	r8,r8,8
    1510:	d9402f17 	ldw	r5,188(sp)
    1514:	2c0b883a 	add	r5,r5,r16
    1518:	d9402f15 	stw	r5,188(sp)
    151c:	88800007 	ldb	r2,0(r17)
    1520:	10009a26 	beq	r2,zero,178c <___svfprintf_internal_r+0x384>
    1524:	8dc00044 	addi	r23,r17,1
    1528:	8c400047 	ldb	r17,1(r17)
    152c:	0021883a 	mov	r16,zero
    1530:	00bfffc4 	movi	r2,-1
    1534:	0025883a 	mov	r18,zero
    1538:	dc002905 	stb	r16,164(sp)
    153c:	d8002785 	stb	zero,158(sp)
    1540:	d8002b05 	stb	zero,172(sp)
    1544:	d8802a15 	stw	r2,168(sp)
    1548:	d8003115 	stw	zero,196(sp)
    154c:	05001604 	movi	r20,88
    1550:	05800244 	movi	r22,9
    1554:	4039883a 	mov	fp,r8
    1558:	9021883a 	mov	r16,r18
    155c:	bdc00044 	addi	r23,r23,1
    1560:	88bff804 	addi	r2,r17,-32
    1564:	a0831e36 	bltu	r20,r2,21e0 <___svfprintf_internal_r+0xdd8>
    1568:	100490ba 	slli	r2,r2,2
    156c:	00c00034 	movhi	r3,0
    1570:	18c56004 	addi	r3,r3,5504
    1574:	10c5883a 	add	r2,r2,r3
    1578:	10800017 	ldw	r2,0(r2)
    157c:	1000683a 	jmp	r2
    1580:	00002128 	cmpgeui	zero,zero,132
    1584:	000021e0 	cmpeqi	zero,zero,135
    1588:	000021e0 	cmpeqi	zero,zero,135
    158c:	0000211c 	xori	zero,zero,132
    1590:	000021e0 	cmpeqi	zero,zero,135
    1594:	000021e0 	cmpeqi	zero,zero,135
    1598:	000021e0 	cmpeqi	zero,zero,135
    159c:	000021e0 	cmpeqi	zero,zero,135
    15a0:	000021e0 	cmpeqi	zero,zero,135
    15a4:	000021e0 	cmpeqi	zero,zero,135
    15a8:	000017e8 	cmpgeui	zero,zero,95
    15ac:	0000202c 	andhi	zero,zero,128
    15b0:	000021e0 	cmpeqi	zero,zero,135
    15b4:	000016f4 	movhi	zero,91
    15b8:	0000180c 	andi	zero,zero,96
    15bc:	000021e0 	cmpeqi	zero,zero,135
    15c0:	00001898 	cmpnei	zero,zero,98
    15c4:	0000185c 	xori	zero,zero,97
    15c8:	0000185c 	xori	zero,zero,97
    15cc:	0000185c 	xori	zero,zero,97
    15d0:	0000185c 	xori	zero,zero,97
    15d4:	0000185c 	xori	zero,zero,97
    15d8:	0000185c 	xori	zero,zero,97
    15dc:	0000185c 	xori	zero,zero,97
    15e0:	0000185c 	xori	zero,zero,97
    15e4:	0000185c 	xori	zero,zero,97
    15e8:	000021e0 	cmpeqi	zero,zero,135
    15ec:	000021e0 	cmpeqi	zero,zero,135
    15f0:	000021e0 	cmpeqi	zero,zero,135
    15f4:	000021e0 	cmpeqi	zero,zero,135
    15f8:	000021e0 	cmpeqi	zero,zero,135
    15fc:	000021e0 	cmpeqi	zero,zero,135
    1600:	000021e0 	cmpeqi	zero,zero,135
    1604:	000021e0 	cmpeqi	zero,zero,135
    1608:	000021e0 	cmpeqi	zero,zero,135
    160c:	000021e0 	cmpeqi	zero,zero,135
    1610:	0000195c 	xori	zero,zero,101
    1614:	000018a4 	muli	zero,zero,98
    1618:	000021e0 	cmpeqi	zero,zero,135
    161c:	000018a4 	muli	zero,zero,98
    1620:	000021e0 	cmpeqi	zero,zero,135
    1624:	000021e0 	cmpeqi	zero,zero,135
    1628:	000021e0 	cmpeqi	zero,zero,135
    162c:	000021e0 	cmpeqi	zero,zero,135
    1630:	00001950 	cmplti	zero,zero,101
    1634:	000021e0 	cmpeqi	zero,zero,135
    1638:	000021e0 	cmpeqi	zero,zero,135
    163c:	00001a24 	muli	zero,zero,104
    1640:	000021e0 	cmpeqi	zero,zero,135
    1644:	000021e0 	cmpeqi	zero,zero,135
    1648:	000021e0 	cmpeqi	zero,zero,135
    164c:	000021e0 	cmpeqi	zero,zero,135
    1650:	000021e0 	cmpeqi	zero,zero,135
    1654:	00001ea0 	cmpeqi	zero,zero,122
    1658:	000021e0 	cmpeqi	zero,zero,135
    165c:	000021e0 	cmpeqi	zero,zero,135
    1660:	00001f0c 	andi	zero,zero,124
    1664:	000021e0 	cmpeqi	zero,zero,135
    1668:	000021e0 	cmpeqi	zero,zero,135
    166c:	000021e0 	cmpeqi	zero,zero,135
    1670:	000021e0 	cmpeqi	zero,zero,135
    1674:	000021e0 	cmpeqi	zero,zero,135
    1678:	000021e0 	cmpeqi	zero,zero,135
    167c:	000021e0 	cmpeqi	zero,zero,135
    1680:	000021e0 	cmpeqi	zero,zero,135
    1684:	000021e0 	cmpeqi	zero,zero,135
    1688:	000021e0 	cmpeqi	zero,zero,135
    168c:	00001fc8 	cmpgei	zero,zero,127
    1690:	00002148 	cmpgei	zero,zero,133
    1694:	000018a4 	muli	zero,zero,98
    1698:	000018a4 	muli	zero,zero,98
    169c:	000018a4 	muli	zero,zero,98
    16a0:	000021bc 	xorhi	zero,zero,134
    16a4:	00002148 	cmpgei	zero,zero,133
    16a8:	000021e0 	cmpeqi	zero,zero,135
    16ac:	000021e0 	cmpeqi	zero,zero,135
    16b0:	00002168 	cmpgeui	zero,zero,133
    16b4:	000021e0 	cmpeqi	zero,zero,135
    16b8:	0000217c 	xorhi	zero,zero,133
    16bc:	0000200c 	andi	zero,zero,128
    16c0:	00001700 	call	170 <alt_irq_handler+0x74>
    16c4:	00002044 	movi	zero,129
    16c8:	000021e0 	cmpeqi	zero,zero,135
    16cc:	00002050 	cmplti	zero,zero,129
    16d0:	000021e0 	cmpeqi	zero,zero,135
    16d4:	000020b4 	movhi	zero,130
    16d8:	000021e0 	cmpeqi	zero,zero,135
    16dc:	000021e0 	cmpeqi	zero,zero,135
    16e0:	000020d4 	movui	zero,131
    16e4:	d8c03117 	ldw	r3,196(sp)
    16e8:	d8802e15 	stw	r2,184(sp)
    16ec:	00c7c83a 	sub	r3,zero,r3
    16f0:	d8c03115 	stw	r3,196(sp)
    16f4:	84000114 	ori	r16,r16,4
    16f8:	bc400007 	ldb	r17,0(r23)
    16fc:	003f9706 	br	155c <__alt_mem_Onchip_SRAM+0xf800155c>
    1700:	00800c04 	movi	r2,48
    1704:	d8802705 	stb	r2,156(sp)
    1708:	00801e04 	movi	r2,120
    170c:	d8802745 	stb	r2,157(sp)
    1710:	d9002a17 	ldw	r4,168(sp)
    1714:	d8802e17 	ldw	r2,184(sp)
    1718:	d8002785 	stb	zero,158(sp)
    171c:	e011883a 	mov	r8,fp
    1720:	10c00104 	addi	r3,r2,4
    1724:	15000017 	ldw	r20,0(r2)
    1728:	002d883a 	mov	r22,zero
    172c:	80800094 	ori	r2,r16,2
    1730:	2002b616 	blt	r4,zero,220c <___svfprintf_internal_r+0xe04>
    1734:	00bfdfc4 	movi	r2,-129
    1738:	80a4703a 	and	r18,r16,r2
    173c:	d8c02e15 	stw	r3,184(sp)
    1740:	94800094 	ori	r18,r18,2
    1744:	a002a01e 	bne	r20,zero,21c8 <___svfprintf_internal_r+0xdc0>
    1748:	01400074 	movhi	r5,1
    174c:	295aba04 	addi	r5,r5,27368
    1750:	d9403a15 	stw	r5,232(sp)
    1754:	04401e04 	movi	r17,120
    1758:	d8c02a17 	ldw	r3,168(sp)
    175c:	0039883a 	mov	fp,zero
    1760:	1801e626 	beq	r3,zero,1efc <___svfprintf_internal_r+0xaf4>
    1764:	0029883a 	mov	r20,zero
    1768:	002d883a 	mov	r22,zero
    176c:	00020506 	br	1f84 <___svfprintf_internal_r+0xb7c>
    1770:	d9402d17 	ldw	r5,180(sp)
    1774:	d9801e04 	addi	r6,sp,120
    1778:	9809883a 	mov	r4,r19
    177c:	000afbc0 	call	afbc <__ssprint_r>
    1780:	1000081e 	bne	r2,zero,17a4 <___svfprintf_internal_r+0x39c>
    1784:	da000404 	addi	r8,sp,16
    1788:	003f6106 	br	1510 <__alt_mem_Onchip_SRAM+0xf8001510>
    178c:	d8802017 	ldw	r2,128(sp)
    1790:	10000426 	beq	r2,zero,17a4 <___svfprintf_internal_r+0x39c>
    1794:	d9402d17 	ldw	r5,180(sp)
    1798:	d9003917 	ldw	r4,228(sp)
    179c:	d9801e04 	addi	r6,sp,120
    17a0:	000afbc0 	call	afbc <__ssprint_r>
    17a4:	d8802d17 	ldw	r2,180(sp)
    17a8:	10c0030b 	ldhu	r3,12(r2)
    17ac:	d8802f17 	ldw	r2,188(sp)
    17b0:	18c0100c 	andi	r3,r3,64
    17b4:	1806251e 	bne	r3,zero,304c <___svfprintf_internal_r+0x1c44>
    17b8:	dfc04817 	ldw	ra,288(sp)
    17bc:	df004717 	ldw	fp,284(sp)
    17c0:	ddc04617 	ldw	r23,280(sp)
    17c4:	dd804517 	ldw	r22,276(sp)
    17c8:	dd404417 	ldw	r21,272(sp)
    17cc:	dd004317 	ldw	r20,268(sp)
    17d0:	dcc04217 	ldw	r19,264(sp)
    17d4:	dc804117 	ldw	r18,260(sp)
    17d8:	dc404017 	ldw	r17,256(sp)
    17dc:	dc003f17 	ldw	r16,252(sp)
    17e0:	dec04904 	addi	sp,sp,292
    17e4:	f800283a 	ret
    17e8:	d9002e17 	ldw	r4,184(sp)
    17ec:	d9402e17 	ldw	r5,184(sp)
    17f0:	21000017 	ldw	r4,0(r4)
    17f4:	28800104 	addi	r2,r5,4
    17f8:	d9003115 	stw	r4,196(sp)
    17fc:	203fb916 	blt	r4,zero,16e4 <__alt_mem_Onchip_SRAM+0xf80016e4>
    1800:	d8802e15 	stw	r2,184(sp)
    1804:	bc400007 	ldb	r17,0(r23)
    1808:	003f5406 	br	155c <__alt_mem_Onchip_SRAM+0xf800155c>
    180c:	bc400007 	ldb	r17,0(r23)
    1810:	01000a84 	movi	r4,42
    1814:	b8c00044 	addi	r3,r23,1
    1818:	89076926 	beq	r17,r4,35c0 <___svfprintf_internal_r+0x21b8>
    181c:	8cbff404 	addi	r18,r17,-48
    1820:	b486b936 	bltu	r22,r18,3308 <___svfprintf_internal_r+0x1f00>
    1824:	0009883a 	mov	r4,zero
    1828:	1823883a 	mov	r17,r3
    182c:	01400284 	movi	r5,10
    1830:	0000eb00 	call	eb0 <__mulsi3>
    1834:	88c00007 	ldb	r3,0(r17)
    1838:	1489883a 	add	r4,r2,r18
    183c:	8dc00044 	addi	r23,r17,1
    1840:	1cbff404 	addi	r18,r3,-48
    1844:	b823883a 	mov	r17,r23
    1848:	b4bff82e 	bgeu	r22,r18,182c <__alt_mem_Onchip_SRAM+0xf800182c>
    184c:	1823883a 	mov	r17,r3
    1850:	20060416 	blt	r4,zero,3064 <___svfprintf_internal_r+0x1c5c>
    1854:	d9002a15 	stw	r4,168(sp)
    1858:	003f4106 	br	1560 <__alt_mem_Onchip_SRAM+0xf8001560>
    185c:	8cbff404 	addi	r18,r17,-48
    1860:	d8003115 	stw	zero,196(sp)
    1864:	0009883a 	mov	r4,zero
    1868:	b823883a 	mov	r17,r23
    186c:	01400284 	movi	r5,10
    1870:	0000eb00 	call	eb0 <__mulsi3>
    1874:	88c00007 	ldb	r3,0(r17)
    1878:	9089883a 	add	r4,r18,r2
    187c:	bdc00044 	addi	r23,r23,1
    1880:	1cbff404 	addi	r18,r3,-48
    1884:	b823883a 	mov	r17,r23
    1888:	b4bff82e 	bgeu	r22,r18,186c <__alt_mem_Onchip_SRAM+0xf800186c>
    188c:	1823883a 	mov	r17,r3
    1890:	d9003115 	stw	r4,196(sp)
    1894:	003f3206 	br	1560 <__alt_mem_Onchip_SRAM+0xf8001560>
    1898:	84002014 	ori	r16,r16,128
    189c:	bc400007 	ldb	r17,0(r23)
    18a0:	003f2e06 	br	155c <__alt_mem_Onchip_SRAM+0xf800155c>
    18a4:	8025883a 	mov	r18,r16
    18a8:	dc002903 	ldbu	r16,164(sp)
    18ac:	e011883a 	mov	r8,fp
    18b0:	84003fcc 	andi	r16,r16,255
    18b4:	8007721e 	bne	r16,zero,3680 <___svfprintf_internal_r+0x2278>
    18b8:	9080020c 	andi	r2,r18,8
    18bc:	1004a526 	beq	r2,zero,2b54 <___svfprintf_internal_r+0x174c>
    18c0:	d9002e17 	ldw	r4,184(sp)
    18c4:	d9402e17 	ldw	r5,184(sp)
    18c8:	d8802e17 	ldw	r2,184(sp)
    18cc:	21000017 	ldw	r4,0(r4)
    18d0:	29400117 	ldw	r5,4(r5)
    18d4:	10800204 	addi	r2,r2,8
    18d8:	d9003615 	stw	r4,216(sp)
    18dc:	d9403715 	stw	r5,220(sp)
    18e0:	d8802e15 	stw	r2,184(sp)
    18e4:	d9003617 	ldw	r4,216(sp)
    18e8:	d9403717 	ldw	r5,220(sp)
    18ec:	da003e15 	stw	r8,248(sp)
    18f0:	04000044 	movi	r16,1
    18f4:	000acdc0 	call	acdc <__fpclassifyd>
    18f8:	da003e17 	ldw	r8,248(sp)
    18fc:	1404731e 	bne	r2,r16,2acc <___svfprintf_internal_r+0x16c4>
    1900:	d9003617 	ldw	r4,216(sp)
    1904:	d9403717 	ldw	r5,220(sp)
    1908:	000d883a 	mov	r6,zero
    190c:	000f883a 	mov	r7,zero
    1910:	001061c0 	call	1061c <__ledf2>
    1914:	da003e17 	ldw	r8,248(sp)
    1918:	10061b16 	blt	r2,zero,3188 <___svfprintf_internal_r+0x1d80>
    191c:	df002783 	ldbu	fp,158(sp)
    1920:	008011c4 	movi	r2,71
    1924:	1445810e 	bge	r2,r17,2f2c <___svfprintf_internal_r+0x1b24>
    1928:	04000074 	movhi	r16,1
    192c:	841ab204 	addi	r16,r16,27336
    1930:	00c000c4 	movi	r3,3
    1934:	00bfdfc4 	movi	r2,-129
    1938:	d8c02915 	stw	r3,164(sp)
    193c:	90a4703a 	and	r18,r18,r2
    1940:	d8c02b15 	stw	r3,172(sp)
    1944:	d8002a15 	stw	zero,168(sp)
    1948:	d8003215 	stw	zero,200(sp)
    194c:	00006c06 	br	1b00 <___svfprintf_internal_r+0x6f8>
    1950:	84000214 	ori	r16,r16,8
    1954:	bc400007 	ldb	r17,0(r23)
    1958:	003f0006 	br	155c <__alt_mem_Onchip_SRAM+0xf800155c>
    195c:	8025883a 	mov	r18,r16
    1960:	dc002903 	ldbu	r16,164(sp)
    1964:	e011883a 	mov	r8,fp
    1968:	84003fcc 	andi	r16,r16,255
    196c:	80073f1e 	bne	r16,zero,366c <___svfprintf_internal_r+0x2264>
    1970:	94800414 	ori	r18,r18,16
    1974:	9080080c 	andi	r2,r18,32
    1978:	1003bb26 	beq	r2,zero,2868 <___svfprintf_internal_r+0x1460>
    197c:	d9002e17 	ldw	r4,184(sp)
    1980:	20800117 	ldw	r2,4(r4)
    1984:	25000017 	ldw	r20,0(r4)
    1988:	21000204 	addi	r4,r4,8
    198c:	d9002e15 	stw	r4,184(sp)
    1990:	102d883a 	mov	r22,r2
    1994:	1003bd16 	blt	r2,zero,288c <___svfprintf_internal_r+0x1484>
    1998:	d9002a17 	ldw	r4,168(sp)
    199c:	df002783 	ldbu	fp,158(sp)
    19a0:	2003d016 	blt	r4,zero,28e4 <___svfprintf_internal_r+0x14dc>
    19a4:	00ffdfc4 	movi	r3,-129
    19a8:	a584b03a 	or	r2,r20,r22
    19ac:	90e4703a 	and	r18,r18,r3
    19b0:	10015026 	beq	r2,zero,1ef4 <___svfprintf_internal_r+0xaec>
    19b4:	b0037026 	beq	r22,zero,2778 <___svfprintf_internal_r+0x1370>
    19b8:	dc402915 	stw	r17,164(sp)
    19bc:	dc001e04 	addi	r16,sp,120
    19c0:	b023883a 	mov	r17,r22
    19c4:	402d883a 	mov	r22,r8
    19c8:	a009883a 	mov	r4,r20
    19cc:	880b883a 	mov	r5,r17
    19d0:	01800284 	movi	r6,10
    19d4:	000f883a 	mov	r7,zero
    19d8:	000ec780 	call	ec78 <__umoddi3>
    19dc:	10800c04 	addi	r2,r2,48
    19e0:	843fffc4 	addi	r16,r16,-1
    19e4:	a009883a 	mov	r4,r20
    19e8:	880b883a 	mov	r5,r17
    19ec:	80800005 	stb	r2,0(r16)
    19f0:	01800284 	movi	r6,10
    19f4:	000f883a 	mov	r7,zero
    19f8:	000e67c0 	call	e67c <__udivdi3>
    19fc:	1029883a 	mov	r20,r2
    1a00:	10c4b03a 	or	r2,r2,r3
    1a04:	1823883a 	mov	r17,r3
    1a08:	103fef1e 	bne	r2,zero,19c8 <__alt_mem_Onchip_SRAM+0xf80019c8>
    1a0c:	d8c02817 	ldw	r3,160(sp)
    1a10:	dc402917 	ldw	r17,164(sp)
    1a14:	b011883a 	mov	r8,r22
    1a18:	1c07c83a 	sub	r3,r3,r16
    1a1c:	d8c02b15 	stw	r3,172(sp)
    1a20:	00003106 	br	1ae8 <___svfprintf_internal_r+0x6e0>
    1a24:	8025883a 	mov	r18,r16
    1a28:	dc002903 	ldbu	r16,164(sp)
    1a2c:	e011883a 	mov	r8,fp
    1a30:	84003fcc 	andi	r16,r16,255
    1a34:	80070a1e 	bne	r16,zero,3660 <___svfprintf_internal_r+0x2258>
    1a38:	94800414 	ori	r18,r18,16
    1a3c:	9080080c 	andi	r2,r18,32
    1a40:	1002f626 	beq	r2,zero,261c <___svfprintf_internal_r+0x1214>
    1a44:	d9002e17 	ldw	r4,184(sp)
    1a48:	d9402a17 	ldw	r5,168(sp)
    1a4c:	d8002785 	stb	zero,158(sp)
    1a50:	20800204 	addi	r2,r4,8
    1a54:	25000017 	ldw	r20,0(r4)
    1a58:	25800117 	ldw	r22,4(r4)
    1a5c:	28043716 	blt	r5,zero,2b3c <___svfprintf_internal_r+0x1734>
    1a60:	013fdfc4 	movi	r4,-129
    1a64:	a586b03a 	or	r3,r20,r22
    1a68:	d8802e15 	stw	r2,184(sp)
    1a6c:	9124703a 	and	r18,r18,r4
    1a70:	1802f71e 	bne	r3,zero,2650 <___svfprintf_internal_r+0x1248>
    1a74:	d9402a17 	ldw	r5,168(sp)
    1a78:	0039883a 	mov	fp,zero
    1a7c:	2806df26 	beq	r5,zero,35fc <___svfprintf_internal_r+0x21f4>
    1a80:	0029883a 	mov	r20,zero
    1a84:	002d883a 	mov	r22,zero
    1a88:	dc001e04 	addi	r16,sp,120
    1a8c:	a006d0fa 	srli	r3,r20,3
    1a90:	b008977a 	slli	r4,r22,29
    1a94:	b02cd0fa 	srli	r22,r22,3
    1a98:	a50001cc 	andi	r20,r20,7
    1a9c:	a0800c04 	addi	r2,r20,48
    1aa0:	843fffc4 	addi	r16,r16,-1
    1aa4:	20e8b03a 	or	r20,r4,r3
    1aa8:	80800005 	stb	r2,0(r16)
    1aac:	a586b03a 	or	r3,r20,r22
    1ab0:	183ff61e 	bne	r3,zero,1a8c <__alt_mem_Onchip_SRAM+0xf8001a8c>
    1ab4:	90c0004c 	andi	r3,r18,1
    1ab8:	18013f26 	beq	r3,zero,1fb8 <___svfprintf_internal_r+0xbb0>
    1abc:	10803fcc 	andi	r2,r2,255
    1ac0:	1080201c 	xori	r2,r2,128
    1ac4:	10bfe004 	addi	r2,r2,-128
    1ac8:	00c00c04 	movi	r3,48
    1acc:	10c13a26 	beq	r2,r3,1fb8 <___svfprintf_internal_r+0xbb0>
    1ad0:	80ffffc5 	stb	r3,-1(r16)
    1ad4:	d8c02817 	ldw	r3,160(sp)
    1ad8:	80bfffc4 	addi	r2,r16,-1
    1adc:	1021883a 	mov	r16,r2
    1ae0:	1887c83a 	sub	r3,r3,r2
    1ae4:	d8c02b15 	stw	r3,172(sp)
    1ae8:	d8802b17 	ldw	r2,172(sp)
    1aec:	d9002a17 	ldw	r4,168(sp)
    1af0:	1100010e 	bge	r2,r4,1af8 <___svfprintf_internal_r+0x6f0>
    1af4:	2005883a 	mov	r2,r4
    1af8:	d8802915 	stw	r2,164(sp)
    1afc:	d8003215 	stw	zero,200(sp)
    1b00:	e7003fcc 	andi	fp,fp,255
    1b04:	e700201c 	xori	fp,fp,128
    1b08:	e73fe004 	addi	fp,fp,-128
    1b0c:	e0000326 	beq	fp,zero,1b1c <___svfprintf_internal_r+0x714>
    1b10:	d8c02917 	ldw	r3,164(sp)
    1b14:	18c00044 	addi	r3,r3,1
    1b18:	d8c02915 	stw	r3,164(sp)
    1b1c:	90c0008c 	andi	r3,r18,2
    1b20:	d8c02c15 	stw	r3,176(sp)
    1b24:	18000326 	beq	r3,zero,1b34 <___svfprintf_internal_r+0x72c>
    1b28:	d8c02917 	ldw	r3,164(sp)
    1b2c:	18c00084 	addi	r3,r3,2
    1b30:	d8c02915 	stw	r3,164(sp)
    1b34:	90c0210c 	andi	r3,r18,132
    1b38:	d8c03015 	stw	r3,192(sp)
    1b3c:	1801c31e 	bne	r3,zero,224c <___svfprintf_internal_r+0xe44>
    1b40:	d9003117 	ldw	r4,196(sp)
    1b44:	d8c02917 	ldw	r3,164(sp)
    1b48:	20e9c83a 	sub	r20,r4,r3
    1b4c:	0501bf0e 	bge	zero,r20,224c <___svfprintf_internal_r+0xe44>
    1b50:	02400404 	movi	r9,16
    1b54:	d8c02017 	ldw	r3,128(sp)
    1b58:	d8801f17 	ldw	r2,124(sp)
    1b5c:	4d053d0e 	bge	r9,r20,3054 <___svfprintf_internal_r+0x1c4c>
    1b60:	01400074 	movhi	r5,1
    1b64:	295ac584 	addi	r5,r5,27414
    1b68:	dc403c15 	stw	r17,240(sp)
    1b6c:	d9403515 	stw	r5,212(sp)
    1b70:	a023883a 	mov	r17,r20
    1b74:	482d883a 	mov	r22,r9
    1b78:	9029883a 	mov	r20,r18
    1b7c:	070001c4 	movi	fp,7
    1b80:	8025883a 	mov	r18,r16
    1b84:	dc002d17 	ldw	r16,180(sp)
    1b88:	00000306 	br	1b98 <___svfprintf_internal_r+0x790>
    1b8c:	8c7ffc04 	addi	r17,r17,-16
    1b90:	42000204 	addi	r8,r8,8
    1b94:	b440130e 	bge	r22,r17,1be4 <___svfprintf_internal_r+0x7dc>
    1b98:	01000074 	movhi	r4,1
    1b9c:	18c00404 	addi	r3,r3,16
    1ba0:	10800044 	addi	r2,r2,1
    1ba4:	211ac584 	addi	r4,r4,27414
    1ba8:	41000015 	stw	r4,0(r8)
    1bac:	45800115 	stw	r22,4(r8)
    1bb0:	d8c02015 	stw	r3,128(sp)
    1bb4:	d8801f15 	stw	r2,124(sp)
    1bb8:	e0bff40e 	bge	fp,r2,1b8c <__alt_mem_Onchip_SRAM+0xf8001b8c>
    1bbc:	d9801e04 	addi	r6,sp,120
    1bc0:	800b883a 	mov	r5,r16
    1bc4:	9809883a 	mov	r4,r19
    1bc8:	000afbc0 	call	afbc <__ssprint_r>
    1bcc:	103ef51e 	bne	r2,zero,17a4 <__alt_mem_Onchip_SRAM+0xf80017a4>
    1bd0:	8c7ffc04 	addi	r17,r17,-16
    1bd4:	d8c02017 	ldw	r3,128(sp)
    1bd8:	d8801f17 	ldw	r2,124(sp)
    1bdc:	da000404 	addi	r8,sp,16
    1be0:	b47fed16 	blt	r22,r17,1b98 <__alt_mem_Onchip_SRAM+0xf8001b98>
    1be4:	9021883a 	mov	r16,r18
    1be8:	a025883a 	mov	r18,r20
    1bec:	8829883a 	mov	r20,r17
    1bf0:	dc403c17 	ldw	r17,240(sp)
    1bf4:	d9403517 	ldw	r5,212(sp)
    1bf8:	a0c7883a 	add	r3,r20,r3
    1bfc:	10800044 	addi	r2,r2,1
    1c00:	41400015 	stw	r5,0(r8)
    1c04:	45000115 	stw	r20,4(r8)
    1c08:	d8c02015 	stw	r3,128(sp)
    1c0c:	d8801f15 	stw	r2,124(sp)
    1c10:	010001c4 	movi	r4,7
    1c14:	2082c116 	blt	r4,r2,271c <___svfprintf_internal_r+0x1314>
    1c18:	df002787 	ldb	fp,158(sp)
    1c1c:	42000204 	addi	r8,r8,8
    1c20:	e0000c26 	beq	fp,zero,1c54 <___svfprintf_internal_r+0x84c>
    1c24:	d8801f17 	ldw	r2,124(sp)
    1c28:	d9002784 	addi	r4,sp,158
    1c2c:	18c00044 	addi	r3,r3,1
    1c30:	10800044 	addi	r2,r2,1
    1c34:	41000015 	stw	r4,0(r8)
    1c38:	01000044 	movi	r4,1
    1c3c:	41000115 	stw	r4,4(r8)
    1c40:	d8c02015 	stw	r3,128(sp)
    1c44:	d8801f15 	stw	r2,124(sp)
    1c48:	010001c4 	movi	r4,7
    1c4c:	20825a16 	blt	r4,r2,25b8 <___svfprintf_internal_r+0x11b0>
    1c50:	42000204 	addi	r8,r8,8
    1c54:	d8802c17 	ldw	r2,176(sp)
    1c58:	10000c26 	beq	r2,zero,1c8c <___svfprintf_internal_r+0x884>
    1c5c:	d8801f17 	ldw	r2,124(sp)
    1c60:	d9002704 	addi	r4,sp,156
    1c64:	18c00084 	addi	r3,r3,2
    1c68:	10800044 	addi	r2,r2,1
    1c6c:	41000015 	stw	r4,0(r8)
    1c70:	01000084 	movi	r4,2
    1c74:	41000115 	stw	r4,4(r8)
    1c78:	d8c02015 	stw	r3,128(sp)
    1c7c:	d8801f15 	stw	r2,124(sp)
    1c80:	010001c4 	movi	r4,7
    1c84:	20825416 	blt	r4,r2,25d8 <___svfprintf_internal_r+0x11d0>
    1c88:	42000204 	addi	r8,r8,8
    1c8c:	d9003017 	ldw	r4,192(sp)
    1c90:	00802004 	movi	r2,128
    1c94:	2081b926 	beq	r4,r2,237c <___svfprintf_internal_r+0xf74>
    1c98:	d9402a17 	ldw	r5,168(sp)
    1c9c:	d8802b17 	ldw	r2,172(sp)
    1ca0:	28adc83a 	sub	r22,r5,r2
    1ca4:	05802f0e 	bge	zero,r22,1d64 <___svfprintf_internal_r+0x95c>
    1ca8:	07000404 	movi	fp,16
    1cac:	d8801f17 	ldw	r2,124(sp)
    1cb0:	e583e20e 	bge	fp,r22,2c3c <___svfprintf_internal_r+0x1834>
    1cb4:	01400074 	movhi	r5,1
    1cb8:	295ac184 	addi	r5,r5,27398
    1cbc:	dc402a15 	stw	r17,168(sp)
    1cc0:	d9402c15 	stw	r5,176(sp)
    1cc4:	b023883a 	mov	r17,r22
    1cc8:	050001c4 	movi	r20,7
    1ccc:	902d883a 	mov	r22,r18
    1cd0:	8025883a 	mov	r18,r16
    1cd4:	dc002d17 	ldw	r16,180(sp)
    1cd8:	00000306 	br	1ce8 <___svfprintf_internal_r+0x8e0>
    1cdc:	8c7ffc04 	addi	r17,r17,-16
    1ce0:	42000204 	addi	r8,r8,8
    1ce4:	e440110e 	bge	fp,r17,1d2c <___svfprintf_internal_r+0x924>
    1ce8:	18c00404 	addi	r3,r3,16
    1cec:	10800044 	addi	r2,r2,1
    1cf0:	45400015 	stw	r21,0(r8)
    1cf4:	47000115 	stw	fp,4(r8)
    1cf8:	d8c02015 	stw	r3,128(sp)
    1cfc:	d8801f15 	stw	r2,124(sp)
    1d00:	a0bff60e 	bge	r20,r2,1cdc <__alt_mem_Onchip_SRAM+0xf8001cdc>
    1d04:	d9801e04 	addi	r6,sp,120
    1d08:	800b883a 	mov	r5,r16
    1d0c:	9809883a 	mov	r4,r19
    1d10:	000afbc0 	call	afbc <__ssprint_r>
    1d14:	103ea31e 	bne	r2,zero,17a4 <__alt_mem_Onchip_SRAM+0xf80017a4>
    1d18:	8c7ffc04 	addi	r17,r17,-16
    1d1c:	d8c02017 	ldw	r3,128(sp)
    1d20:	d8801f17 	ldw	r2,124(sp)
    1d24:	da000404 	addi	r8,sp,16
    1d28:	e47fef16 	blt	fp,r17,1ce8 <__alt_mem_Onchip_SRAM+0xf8001ce8>
    1d2c:	9021883a 	mov	r16,r18
    1d30:	b025883a 	mov	r18,r22
    1d34:	882d883a 	mov	r22,r17
    1d38:	dc402a17 	ldw	r17,168(sp)
    1d3c:	d9002c17 	ldw	r4,176(sp)
    1d40:	1d87883a 	add	r3,r3,r22
    1d44:	10800044 	addi	r2,r2,1
    1d48:	41000015 	stw	r4,0(r8)
    1d4c:	45800115 	stw	r22,4(r8)
    1d50:	d8c02015 	stw	r3,128(sp)
    1d54:	d8801f15 	stw	r2,124(sp)
    1d58:	010001c4 	movi	r4,7
    1d5c:	20820e16 	blt	r4,r2,2598 <___svfprintf_internal_r+0x1190>
    1d60:	42000204 	addi	r8,r8,8
    1d64:	9080400c 	andi	r2,r18,256
    1d68:	10013a1e 	bne	r2,zero,2254 <___svfprintf_internal_r+0xe4c>
    1d6c:	d9402b17 	ldw	r5,172(sp)
    1d70:	d8801f17 	ldw	r2,124(sp)
    1d74:	44000015 	stw	r16,0(r8)
    1d78:	1947883a 	add	r3,r3,r5
    1d7c:	10800044 	addi	r2,r2,1
    1d80:	41400115 	stw	r5,4(r8)
    1d84:	d8c02015 	stw	r3,128(sp)
    1d88:	d8801f15 	stw	r2,124(sp)
    1d8c:	010001c4 	movi	r4,7
    1d90:	2081f316 	blt	r4,r2,2560 <___svfprintf_internal_r+0x1158>
    1d94:	42000204 	addi	r8,r8,8
    1d98:	9480010c 	andi	r18,r18,4
    1d9c:	90003226 	beq	r18,zero,1e68 <___svfprintf_internal_r+0xa60>
    1da0:	d9403117 	ldw	r5,196(sp)
    1da4:	d8802917 	ldw	r2,164(sp)
    1da8:	28a1c83a 	sub	r16,r5,r2
    1dac:	04002e0e 	bge	zero,r16,1e68 <___svfprintf_internal_r+0xa60>
    1db0:	04400404 	movi	r17,16
    1db4:	d8801f17 	ldw	r2,124(sp)
    1db8:	8c04db0e 	bge	r17,r16,3128 <___svfprintf_internal_r+0x1d20>
    1dbc:	01400074 	movhi	r5,1
    1dc0:	295ac584 	addi	r5,r5,27414
    1dc4:	d9403515 	stw	r5,212(sp)
    1dc8:	048001c4 	movi	r18,7
    1dcc:	dd002d17 	ldw	r20,180(sp)
    1dd0:	00000306 	br	1de0 <___svfprintf_internal_r+0x9d8>
    1dd4:	843ffc04 	addi	r16,r16,-16
    1dd8:	42000204 	addi	r8,r8,8
    1ddc:	8c00130e 	bge	r17,r16,1e2c <___svfprintf_internal_r+0xa24>
    1de0:	01000074 	movhi	r4,1
    1de4:	18c00404 	addi	r3,r3,16
    1de8:	10800044 	addi	r2,r2,1
    1dec:	211ac584 	addi	r4,r4,27414
    1df0:	41000015 	stw	r4,0(r8)
    1df4:	44400115 	stw	r17,4(r8)
    1df8:	d8c02015 	stw	r3,128(sp)
    1dfc:	d8801f15 	stw	r2,124(sp)
    1e00:	90bff40e 	bge	r18,r2,1dd4 <__alt_mem_Onchip_SRAM+0xf8001dd4>
    1e04:	d9801e04 	addi	r6,sp,120
    1e08:	a00b883a 	mov	r5,r20
    1e0c:	9809883a 	mov	r4,r19
    1e10:	000afbc0 	call	afbc <__ssprint_r>
    1e14:	103e631e 	bne	r2,zero,17a4 <__alt_mem_Onchip_SRAM+0xf80017a4>
    1e18:	843ffc04 	addi	r16,r16,-16
    1e1c:	d8c02017 	ldw	r3,128(sp)
    1e20:	d8801f17 	ldw	r2,124(sp)
    1e24:	da000404 	addi	r8,sp,16
    1e28:	8c3fed16 	blt	r17,r16,1de0 <__alt_mem_Onchip_SRAM+0xf8001de0>
    1e2c:	d9403517 	ldw	r5,212(sp)
    1e30:	1c07883a 	add	r3,r3,r16
    1e34:	10800044 	addi	r2,r2,1
    1e38:	41400015 	stw	r5,0(r8)
    1e3c:	44000115 	stw	r16,4(r8)
    1e40:	d8c02015 	stw	r3,128(sp)
    1e44:	d8801f15 	stw	r2,124(sp)
    1e48:	010001c4 	movi	r4,7
    1e4c:	2080060e 	bge	r4,r2,1e68 <___svfprintf_internal_r+0xa60>
    1e50:	d9402d17 	ldw	r5,180(sp)
    1e54:	d9801e04 	addi	r6,sp,120
    1e58:	9809883a 	mov	r4,r19
    1e5c:	000afbc0 	call	afbc <__ssprint_r>
    1e60:	103e501e 	bne	r2,zero,17a4 <__alt_mem_Onchip_SRAM+0xf80017a4>
    1e64:	d8c02017 	ldw	r3,128(sp)
    1e68:	d8803117 	ldw	r2,196(sp)
    1e6c:	d9002917 	ldw	r4,164(sp)
    1e70:	1100010e 	bge	r2,r4,1e78 <___svfprintf_internal_r+0xa70>
    1e74:	2005883a 	mov	r2,r4
    1e78:	d9402f17 	ldw	r5,188(sp)
    1e7c:	288b883a 	add	r5,r5,r2
    1e80:	d9402f15 	stw	r5,188(sp)
    1e84:	1801be1e 	bne	r3,zero,2580 <___svfprintf_internal_r+0x1178>
    1e88:	b8800007 	ldb	r2,0(r23)
    1e8c:	d8001f15 	stw	zero,124(sp)
    1e90:	da000404 	addi	r8,sp,16
    1e94:	103d891e 	bne	r2,zero,14bc <__alt_mem_Onchip_SRAM+0xf80014bc>
    1e98:	b823883a 	mov	r17,r23
    1e9c:	003d9f06 	br	151c <__alt_mem_Onchip_SRAM+0xf800151c>
    1ea0:	8025883a 	mov	r18,r16
    1ea4:	dc002903 	ldbu	r16,164(sp)
    1ea8:	e011883a 	mov	r8,fp
    1eac:	84003fcc 	andi	r16,r16,255
    1eb0:	8005e61e 	bne	r16,zero,364c <___svfprintf_internal_r+0x2244>
    1eb4:	94800414 	ori	r18,r18,16
    1eb8:	9080080c 	andi	r2,r18,32
    1ebc:	10022026 	beq	r2,zero,2740 <___svfprintf_internal_r+0x1338>
    1ec0:	d9002e17 	ldw	r4,184(sp)
    1ec4:	d9402a17 	ldw	r5,168(sp)
    1ec8:	d8002785 	stb	zero,158(sp)
    1ecc:	20c00204 	addi	r3,r4,8
    1ed0:	25000017 	ldw	r20,0(r4)
    1ed4:	25800117 	ldw	r22,4(r4)
    1ed8:	2803ad16 	blt	r5,zero,2d90 <___svfprintf_internal_r+0x1988>
    1edc:	013fdfc4 	movi	r4,-129
    1ee0:	a584b03a 	or	r2,r20,r22
    1ee4:	d8c02e15 	stw	r3,184(sp)
    1ee8:	9124703a 	and	r18,r18,r4
    1eec:	0039883a 	mov	fp,zero
    1ef0:	103eb01e 	bne	r2,zero,19b4 <__alt_mem_Onchip_SRAM+0xf80019b4>
    1ef4:	d8802a17 	ldw	r2,168(sp)
    1ef8:	1002e71e 	bne	r2,zero,2a98 <___svfprintf_internal_r+0x1690>
    1efc:	d8002a15 	stw	zero,168(sp)
    1f00:	d8002b15 	stw	zero,172(sp)
    1f04:	dc001e04 	addi	r16,sp,120
    1f08:	003ef706 	br	1ae8 <__alt_mem_Onchip_SRAM+0xf8001ae8>
    1f0c:	8025883a 	mov	r18,r16
    1f10:	dc002903 	ldbu	r16,164(sp)
    1f14:	e011883a 	mov	r8,fp
    1f18:	84003fcc 	andi	r16,r16,255
    1f1c:	8005c81e 	bne	r16,zero,3640 <___svfprintf_internal_r+0x2238>
    1f20:	01000074 	movhi	r4,1
    1f24:	211ab504 	addi	r4,r4,27348
    1f28:	d9003a15 	stw	r4,232(sp)
    1f2c:	9080080c 	andi	r2,r18,32
    1f30:	10007226 	beq	r2,zero,20fc <___svfprintf_internal_r+0xcf4>
    1f34:	d9402e17 	ldw	r5,184(sp)
    1f38:	2d000017 	ldw	r20,0(r5)
    1f3c:	2d800117 	ldw	r22,4(r5)
    1f40:	29400204 	addi	r5,r5,8
    1f44:	d9402e15 	stw	r5,184(sp)
    1f48:	9080004c 	andi	r2,r18,1
    1f4c:	1001aa26 	beq	r2,zero,25f8 <___svfprintf_internal_r+0x11f0>
    1f50:	a584b03a 	or	r2,r20,r22
    1f54:	10032526 	beq	r2,zero,2bec <___svfprintf_internal_r+0x17e4>
    1f58:	d8c02a17 	ldw	r3,168(sp)
    1f5c:	00800c04 	movi	r2,48
    1f60:	d8802705 	stb	r2,156(sp)
    1f64:	dc402745 	stb	r17,157(sp)
    1f68:	d8002785 	stb	zero,158(sp)
    1f6c:	90800094 	ori	r2,r18,2
    1f70:	1804a316 	blt	r3,zero,3200 <___svfprintf_internal_r+0x1df8>
    1f74:	00bfdfc4 	movi	r2,-129
    1f78:	90a4703a 	and	r18,r18,r2
    1f7c:	94800094 	ori	r18,r18,2
    1f80:	0039883a 	mov	fp,zero
    1f84:	d9003a17 	ldw	r4,232(sp)
    1f88:	dc001e04 	addi	r16,sp,120
    1f8c:	a08003cc 	andi	r2,r20,15
    1f90:	b006973a 	slli	r3,r22,28
    1f94:	2085883a 	add	r2,r4,r2
    1f98:	a028d13a 	srli	r20,r20,4
    1f9c:	10800003 	ldbu	r2,0(r2)
    1fa0:	b02cd13a 	srli	r22,r22,4
    1fa4:	843fffc4 	addi	r16,r16,-1
    1fa8:	1d28b03a 	or	r20,r3,r20
    1fac:	80800005 	stb	r2,0(r16)
    1fb0:	a584b03a 	or	r2,r20,r22
    1fb4:	103ff51e 	bne	r2,zero,1f8c <__alt_mem_Onchip_SRAM+0xf8001f8c>
    1fb8:	d8c02817 	ldw	r3,160(sp)
    1fbc:	1c07c83a 	sub	r3,r3,r16
    1fc0:	d8c02b15 	stw	r3,172(sp)
    1fc4:	003ec806 	br	1ae8 <__alt_mem_Onchip_SRAM+0xf8001ae8>
    1fc8:	d8c02e17 	ldw	r3,184(sp)
    1fcc:	d9002e17 	ldw	r4,184(sp)
    1fd0:	8025883a 	mov	r18,r16
    1fd4:	18800017 	ldw	r2,0(r3)
    1fd8:	21000104 	addi	r4,r4,4
    1fdc:	00c00044 	movi	r3,1
    1fe0:	e011883a 	mov	r8,fp
    1fe4:	d8c02915 	stw	r3,164(sp)
    1fe8:	d8002785 	stb	zero,158(sp)
    1fec:	d8801405 	stb	r2,80(sp)
    1ff0:	d9002e15 	stw	r4,184(sp)
    1ff4:	d8c02b15 	stw	r3,172(sp)
    1ff8:	d8002a15 	stw	zero,168(sp)
    1ffc:	d8003215 	stw	zero,200(sp)
    2000:	dc001404 	addi	r16,sp,80
    2004:	0039883a 	mov	fp,zero
    2008:	003ec406 	br	1b1c <__alt_mem_Onchip_SRAM+0xf8001b1c>
    200c:	8025883a 	mov	r18,r16
    2010:	dc002903 	ldbu	r16,164(sp)
    2014:	e011883a 	mov	r8,fp
    2018:	84003fcc 	andi	r16,r16,255
    201c:	803e8726 	beq	r16,zero,1a3c <__alt_mem_Onchip_SRAM+0xf8001a3c>
    2020:	d8c02b03 	ldbu	r3,172(sp)
    2024:	d8c02785 	stb	r3,158(sp)
    2028:	003e8406 	br	1a3c <__alt_mem_Onchip_SRAM+0xf8001a3c>
    202c:	00c00044 	movi	r3,1
    2030:	d8c02905 	stb	r3,164(sp)
    2034:	00c00ac4 	movi	r3,43
    2038:	d8c02b05 	stb	r3,172(sp)
    203c:	bc400007 	ldb	r17,0(r23)
    2040:	003d4606 	br	155c <__alt_mem_Onchip_SRAM+0xf800155c>
    2044:	84000814 	ori	r16,r16,32
    2048:	bc400007 	ldb	r17,0(r23)
    204c:	003d4306 	br	155c <__alt_mem_Onchip_SRAM+0xf800155c>
    2050:	d8802e17 	ldw	r2,184(sp)
    2054:	8025883a 	mov	r18,r16
    2058:	d8002785 	stb	zero,158(sp)
    205c:	14000017 	ldw	r16,0(r2)
    2060:	e011883a 	mov	r8,fp
    2064:	15000104 	addi	r20,r2,4
    2068:	80042126 	beq	r16,zero,30f0 <___svfprintf_internal_r+0x1ce8>
    206c:	d8c02a17 	ldw	r3,168(sp)
    2070:	1803ee16 	blt	r3,zero,302c <___svfprintf_internal_r+0x1c24>
    2074:	180d883a 	mov	r6,r3
    2078:	000b883a 	mov	r5,zero
    207c:	8009883a 	mov	r4,r16
    2080:	df003e15 	stw	fp,248(sp)
    2084:	00090a80 	call	90a8 <memchr>
    2088:	da003e17 	ldw	r8,248(sp)
    208c:	10046a26 	beq	r2,zero,3238 <___svfprintf_internal_r+0x1e30>
    2090:	1405c83a 	sub	r2,r2,r16
    2094:	d8802b15 	stw	r2,172(sp)
    2098:	1003ea16 	blt	r2,zero,3044 <___svfprintf_internal_r+0x1c3c>
    209c:	df002783 	ldbu	fp,158(sp)
    20a0:	d8802915 	stw	r2,164(sp)
    20a4:	dd002e15 	stw	r20,184(sp)
    20a8:	d8002a15 	stw	zero,168(sp)
    20ac:	d8003215 	stw	zero,200(sp)
    20b0:	003e9306 	br	1b00 <__alt_mem_Onchip_SRAM+0xf8001b00>
    20b4:	8025883a 	mov	r18,r16
    20b8:	dc002903 	ldbu	r16,164(sp)
    20bc:	e011883a 	mov	r8,fp
    20c0:	84003fcc 	andi	r16,r16,255
    20c4:	803f7c26 	beq	r16,zero,1eb8 <__alt_mem_Onchip_SRAM+0xf8001eb8>
    20c8:	d8c02b03 	ldbu	r3,172(sp)
    20cc:	d8c02785 	stb	r3,158(sp)
    20d0:	003f7906 	br	1eb8 <__alt_mem_Onchip_SRAM+0xf8001eb8>
    20d4:	8025883a 	mov	r18,r16
    20d8:	dc002903 	ldbu	r16,164(sp)
    20dc:	e011883a 	mov	r8,fp
    20e0:	84003fcc 	andi	r16,r16,255
    20e4:	8005741e 	bne	r16,zero,36b8 <___svfprintf_internal_r+0x22b0>
    20e8:	01000074 	movhi	r4,1
    20ec:	211aba04 	addi	r4,r4,27368
    20f0:	d9003a15 	stw	r4,232(sp)
    20f4:	9080080c 	andi	r2,r18,32
    20f8:	103f8e1e 	bne	r2,zero,1f34 <__alt_mem_Onchip_SRAM+0xf8001f34>
    20fc:	9080040c 	andi	r2,r18,16
    2100:	1002a726 	beq	r2,zero,2ba0 <___svfprintf_internal_r+0x1798>
    2104:	d8802e17 	ldw	r2,184(sp)
    2108:	002d883a 	mov	r22,zero
    210c:	15000017 	ldw	r20,0(r2)
    2110:	10800104 	addi	r2,r2,4
    2114:	d8802e15 	stw	r2,184(sp)
    2118:	003f8b06 	br	1f48 <__alt_mem_Onchip_SRAM+0xf8001f48>
    211c:	84000054 	ori	r16,r16,1
    2120:	bc400007 	ldb	r17,0(r23)
    2124:	003d0d06 	br	155c <__alt_mem_Onchip_SRAM+0xf800155c>
    2128:	d8802b07 	ldb	r2,172(sp)
    212c:	1002a41e 	bne	r2,zero,2bc0 <___svfprintf_internal_r+0x17b8>
    2130:	00c00044 	movi	r3,1
    2134:	d8c02905 	stb	r3,164(sp)
    2138:	00c00804 	movi	r3,32
    213c:	d8c02b05 	stb	r3,172(sp)
    2140:	bc400007 	ldb	r17,0(r23)
    2144:	003d0506 	br	155c <__alt_mem_Onchip_SRAM+0xf800155c>
    2148:	8025883a 	mov	r18,r16
    214c:	dc002903 	ldbu	r16,164(sp)
    2150:	e011883a 	mov	r8,fp
    2154:	84003fcc 	andi	r16,r16,255
    2158:	803e0626 	beq	r16,zero,1974 <__alt_mem_Onchip_SRAM+0xf8001974>
    215c:	d8c02b03 	ldbu	r3,172(sp)
    2160:	d8c02785 	stb	r3,158(sp)
    2164:	003e0306 	br	1974 <__alt_mem_Onchip_SRAM+0xf8001974>
    2168:	bc400007 	ldb	r17,0(r23)
    216c:	00801b04 	movi	r2,108
    2170:	88830a26 	beq	r17,r2,2d9c <___svfprintf_internal_r+0x1994>
    2174:	84000414 	ori	r16,r16,16
    2178:	003cf806 	br	155c <__alt_mem_Onchip_SRAM+0xf800155c>
    217c:	8025883a 	mov	r18,r16
    2180:	dc002903 	ldbu	r16,164(sp)
    2184:	e011883a 	mov	r8,fp
    2188:	84003fcc 	andi	r16,r16,255
    218c:	8005471e 	bne	r16,zero,36ac <___svfprintf_internal_r+0x22a4>
    2190:	9080080c 	andi	r2,r18,32
    2194:	10028c26 	beq	r2,zero,2bc8 <___svfprintf_internal_r+0x17c0>
    2198:	d9002e17 	ldw	r4,184(sp)
    219c:	d9402f17 	ldw	r5,188(sp)
    21a0:	20800017 	ldw	r2,0(r4)
    21a4:	2807d7fa 	srai	r3,r5,31
    21a8:	21000104 	addi	r4,r4,4
    21ac:	d9002e15 	stw	r4,184(sp)
    21b0:	11400015 	stw	r5,0(r2)
    21b4:	10c00115 	stw	r3,4(r2)
    21b8:	003cbe06 	br	14b4 <__alt_mem_Onchip_SRAM+0xf80014b4>
    21bc:	84001014 	ori	r16,r16,64
    21c0:	bc400007 	ldb	r17,0(r23)
    21c4:	003ce506 	br	155c <__alt_mem_Onchip_SRAM+0xf800155c>
    21c8:	01000074 	movhi	r4,1
    21cc:	211aba04 	addi	r4,r4,27368
    21d0:	0039883a 	mov	fp,zero
    21d4:	d9003a15 	stw	r4,232(sp)
    21d8:	04401e04 	movi	r17,120
    21dc:	003f6906 	br	1f84 <__alt_mem_Onchip_SRAM+0xf8001f84>
    21e0:	8025883a 	mov	r18,r16
    21e4:	dc002903 	ldbu	r16,164(sp)
    21e8:	e011883a 	mov	r8,fp
    21ec:	84003fcc 	andi	r16,r16,255
    21f0:	8005261e 	bne	r16,zero,368c <___svfprintf_internal_r+0x2284>
    21f4:	883d6526 	beq	r17,zero,178c <__alt_mem_Onchip_SRAM+0xf800178c>
    21f8:	00c00044 	movi	r3,1
    21fc:	d8c02915 	stw	r3,164(sp)
    2200:	dc401405 	stb	r17,80(sp)
    2204:	d8002785 	stb	zero,158(sp)
    2208:	003f7a06 	br	1ff4 <__alt_mem_Onchip_SRAM+0xf8001ff4>
    220c:	01000074 	movhi	r4,1
    2210:	211aba04 	addi	r4,r4,27368
    2214:	d9003a15 	stw	r4,232(sp)
    2218:	d8c02e15 	stw	r3,184(sp)
    221c:	1025883a 	mov	r18,r2
    2220:	04401e04 	movi	r17,120
    2224:	a584b03a 	or	r2,r20,r22
    2228:	1000fa1e 	bne	r2,zero,2614 <___svfprintf_internal_r+0x120c>
    222c:	0039883a 	mov	fp,zero
    2230:	00800084 	movi	r2,2
    2234:	10803fcc 	andi	r2,r2,255
    2238:	00c00044 	movi	r3,1
    223c:	10c21626 	beq	r2,r3,2a98 <___svfprintf_internal_r+0x1690>
    2240:	00c00084 	movi	r3,2
    2244:	10fe0e1e 	bne	r2,r3,1a80 <__alt_mem_Onchip_SRAM+0xf8001a80>
    2248:	003d4606 	br	1764 <__alt_mem_Onchip_SRAM+0xf8001764>
    224c:	d8c02017 	ldw	r3,128(sp)
    2250:	003e7306 	br	1c20 <__alt_mem_Onchip_SRAM+0xf8001c20>
    2254:	00801944 	movi	r2,101
    2258:	14407c0e 	bge	r2,r17,244c <___svfprintf_internal_r+0x1044>
    225c:	d9003617 	ldw	r4,216(sp)
    2260:	d9403717 	ldw	r5,220(sp)
    2264:	000d883a 	mov	r6,zero
    2268:	000f883a 	mov	r7,zero
    226c:	d8c03d15 	stw	r3,244(sp)
    2270:	da003e15 	stw	r8,248(sp)
    2274:	00104b80 	call	104b8 <__eqdf2>
    2278:	d8c03d17 	ldw	r3,244(sp)
    227c:	da003e17 	ldw	r8,248(sp)
    2280:	1000f51e 	bne	r2,zero,2658 <___svfprintf_internal_r+0x1250>
    2284:	d8801f17 	ldw	r2,124(sp)
    2288:	01000074 	movhi	r4,1
    228c:	211ac104 	addi	r4,r4,27396
    2290:	18c00044 	addi	r3,r3,1
    2294:	10800044 	addi	r2,r2,1
    2298:	41000015 	stw	r4,0(r8)
    229c:	01000044 	movi	r4,1
    22a0:	41000115 	stw	r4,4(r8)
    22a4:	d8c02015 	stw	r3,128(sp)
    22a8:	d8801f15 	stw	r2,124(sp)
    22ac:	010001c4 	movi	r4,7
    22b0:	20826616 	blt	r4,r2,2c4c <___svfprintf_internal_r+0x1844>
    22b4:	42000204 	addi	r8,r8,8
    22b8:	d8802617 	ldw	r2,152(sp)
    22bc:	d9403317 	ldw	r5,204(sp)
    22c0:	11400216 	blt	r2,r5,22cc <___svfprintf_internal_r+0xec4>
    22c4:	9080004c 	andi	r2,r18,1
    22c8:	103eb326 	beq	r2,zero,1d98 <__alt_mem_Onchip_SRAM+0xf8001d98>
    22cc:	d8803817 	ldw	r2,224(sp)
    22d0:	d9003417 	ldw	r4,208(sp)
    22d4:	d9403817 	ldw	r5,224(sp)
    22d8:	1887883a 	add	r3,r3,r2
    22dc:	d8801f17 	ldw	r2,124(sp)
    22e0:	41000015 	stw	r4,0(r8)
    22e4:	41400115 	stw	r5,4(r8)
    22e8:	10800044 	addi	r2,r2,1
    22ec:	d8c02015 	stw	r3,128(sp)
    22f0:	d8801f15 	stw	r2,124(sp)
    22f4:	010001c4 	movi	r4,7
    22f8:	2082af16 	blt	r4,r2,2db8 <___svfprintf_internal_r+0x19b0>
    22fc:	42000204 	addi	r8,r8,8
    2300:	d8803317 	ldw	r2,204(sp)
    2304:	143fffc4 	addi	r16,r2,-1
    2308:	043ea30e 	bge	zero,r16,1d98 <__alt_mem_Onchip_SRAM+0xf8001d98>
    230c:	04400404 	movi	r17,16
    2310:	d8801f17 	ldw	r2,124(sp)
    2314:	8c00860e 	bge	r17,r16,2530 <___svfprintf_internal_r+0x1128>
    2318:	01400074 	movhi	r5,1
    231c:	295ac184 	addi	r5,r5,27398
    2320:	d9402c15 	stw	r5,176(sp)
    2324:	058001c4 	movi	r22,7
    2328:	dd002d17 	ldw	r20,180(sp)
    232c:	00000306 	br	233c <___svfprintf_internal_r+0xf34>
    2330:	42000204 	addi	r8,r8,8
    2334:	843ffc04 	addi	r16,r16,-16
    2338:	8c00800e 	bge	r17,r16,253c <___svfprintf_internal_r+0x1134>
    233c:	18c00404 	addi	r3,r3,16
    2340:	10800044 	addi	r2,r2,1
    2344:	45400015 	stw	r21,0(r8)
    2348:	44400115 	stw	r17,4(r8)
    234c:	d8c02015 	stw	r3,128(sp)
    2350:	d8801f15 	stw	r2,124(sp)
    2354:	b0bff60e 	bge	r22,r2,2330 <__alt_mem_Onchip_SRAM+0xf8002330>
    2358:	d9801e04 	addi	r6,sp,120
    235c:	a00b883a 	mov	r5,r20
    2360:	9809883a 	mov	r4,r19
    2364:	000afbc0 	call	afbc <__ssprint_r>
    2368:	103d0e1e 	bne	r2,zero,17a4 <__alt_mem_Onchip_SRAM+0xf80017a4>
    236c:	d8c02017 	ldw	r3,128(sp)
    2370:	d8801f17 	ldw	r2,124(sp)
    2374:	da000404 	addi	r8,sp,16
    2378:	003fee06 	br	2334 <__alt_mem_Onchip_SRAM+0xf8002334>
    237c:	d9403117 	ldw	r5,196(sp)
    2380:	d8802917 	ldw	r2,164(sp)
    2384:	28adc83a 	sub	r22,r5,r2
    2388:	05be430e 	bge	zero,r22,1c98 <__alt_mem_Onchip_SRAM+0xf8001c98>
    238c:	07000404 	movi	fp,16
    2390:	d8801f17 	ldw	r2,124(sp)
    2394:	e583a20e 	bge	fp,r22,3220 <___svfprintf_internal_r+0x1e18>
    2398:	01400074 	movhi	r5,1
    239c:	295ac184 	addi	r5,r5,27398
    23a0:	dc403015 	stw	r17,192(sp)
    23a4:	d9402c15 	stw	r5,176(sp)
    23a8:	b023883a 	mov	r17,r22
    23ac:	050001c4 	movi	r20,7
    23b0:	902d883a 	mov	r22,r18
    23b4:	8025883a 	mov	r18,r16
    23b8:	dc002d17 	ldw	r16,180(sp)
    23bc:	00000306 	br	23cc <___svfprintf_internal_r+0xfc4>
    23c0:	8c7ffc04 	addi	r17,r17,-16
    23c4:	42000204 	addi	r8,r8,8
    23c8:	e440110e 	bge	fp,r17,2410 <___svfprintf_internal_r+0x1008>
    23cc:	18c00404 	addi	r3,r3,16
    23d0:	10800044 	addi	r2,r2,1
    23d4:	45400015 	stw	r21,0(r8)
    23d8:	47000115 	stw	fp,4(r8)
    23dc:	d8c02015 	stw	r3,128(sp)
    23e0:	d8801f15 	stw	r2,124(sp)
    23e4:	a0bff60e 	bge	r20,r2,23c0 <__alt_mem_Onchip_SRAM+0xf80023c0>
    23e8:	d9801e04 	addi	r6,sp,120
    23ec:	800b883a 	mov	r5,r16
    23f0:	9809883a 	mov	r4,r19
    23f4:	000afbc0 	call	afbc <__ssprint_r>
    23f8:	103cea1e 	bne	r2,zero,17a4 <__alt_mem_Onchip_SRAM+0xf80017a4>
    23fc:	8c7ffc04 	addi	r17,r17,-16
    2400:	d8c02017 	ldw	r3,128(sp)
    2404:	d8801f17 	ldw	r2,124(sp)
    2408:	da000404 	addi	r8,sp,16
    240c:	e47fef16 	blt	fp,r17,23cc <__alt_mem_Onchip_SRAM+0xf80023cc>
    2410:	9021883a 	mov	r16,r18
    2414:	b025883a 	mov	r18,r22
    2418:	882d883a 	mov	r22,r17
    241c:	dc403017 	ldw	r17,192(sp)
    2420:	d9002c17 	ldw	r4,176(sp)
    2424:	1d87883a 	add	r3,r3,r22
    2428:	10800044 	addi	r2,r2,1
    242c:	41000015 	stw	r4,0(r8)
    2430:	45800115 	stw	r22,4(r8)
    2434:	d8c02015 	stw	r3,128(sp)
    2438:	d8801f15 	stw	r2,124(sp)
    243c:	010001c4 	movi	r4,7
    2440:	20819a16 	blt	r4,r2,2aac <___svfprintf_internal_r+0x16a4>
    2444:	42000204 	addi	r8,r8,8
    2448:	003e1306 	br	1c98 <__alt_mem_Onchip_SRAM+0xf8001c98>
    244c:	d9403317 	ldw	r5,204(sp)
    2450:	00800044 	movi	r2,1
    2454:	18c00044 	addi	r3,r3,1
    2458:	1141710e 	bge	r2,r5,2a20 <___svfprintf_internal_r+0x1618>
    245c:	dc401f17 	ldw	r17,124(sp)
    2460:	00800044 	movi	r2,1
    2464:	40800115 	stw	r2,4(r8)
    2468:	8c400044 	addi	r17,r17,1
    246c:	44000015 	stw	r16,0(r8)
    2470:	d8c02015 	stw	r3,128(sp)
    2474:	dc401f15 	stw	r17,124(sp)
    2478:	008001c4 	movi	r2,7
    247c:	14417416 	blt	r2,r17,2a50 <___svfprintf_internal_r+0x1648>
    2480:	42000204 	addi	r8,r8,8
    2484:	d8803817 	ldw	r2,224(sp)
    2488:	d9003417 	ldw	r4,208(sp)
    248c:	8c400044 	addi	r17,r17,1
    2490:	10c7883a 	add	r3,r2,r3
    2494:	40800115 	stw	r2,4(r8)
    2498:	41000015 	stw	r4,0(r8)
    249c:	d8c02015 	stw	r3,128(sp)
    24a0:	dc401f15 	stw	r17,124(sp)
    24a4:	008001c4 	movi	r2,7
    24a8:	14417216 	blt	r2,r17,2a74 <___svfprintf_internal_r+0x166c>
    24ac:	45800204 	addi	r22,r8,8
    24b0:	d9003617 	ldw	r4,216(sp)
    24b4:	d9403717 	ldw	r5,220(sp)
    24b8:	000d883a 	mov	r6,zero
    24bc:	000f883a 	mov	r7,zero
    24c0:	d8c03d15 	stw	r3,244(sp)
    24c4:	00104b80 	call	104b8 <__eqdf2>
    24c8:	d8c03d17 	ldw	r3,244(sp)
    24cc:	1000b326 	beq	r2,zero,279c <___svfprintf_internal_r+0x1394>
    24d0:	d9403317 	ldw	r5,204(sp)
    24d4:	84000044 	addi	r16,r16,1
    24d8:	8c400044 	addi	r17,r17,1
    24dc:	28bfffc4 	addi	r2,r5,-1
    24e0:	1887883a 	add	r3,r3,r2
    24e4:	b0800115 	stw	r2,4(r22)
    24e8:	b4000015 	stw	r16,0(r22)
    24ec:	d8c02015 	stw	r3,128(sp)
    24f0:	dc401f15 	stw	r17,124(sp)
    24f4:	008001c4 	movi	r2,7
    24f8:	1440d216 	blt	r2,r17,2844 <___svfprintf_internal_r+0x143c>
    24fc:	b5800204 	addi	r22,r22,8
    2500:	d9003b17 	ldw	r4,236(sp)
    2504:	df0022c4 	addi	fp,sp,139
    2508:	8c400044 	addi	r17,r17,1
    250c:	20c7883a 	add	r3,r4,r3
    2510:	b7000015 	stw	fp,0(r22)
    2514:	b1000115 	stw	r4,4(r22)
    2518:	d8c02015 	stw	r3,128(sp)
    251c:	dc401f15 	stw	r17,124(sp)
    2520:	008001c4 	movi	r2,7
    2524:	14400e16 	blt	r2,r17,2560 <___svfprintf_internal_r+0x1158>
    2528:	b2000204 	addi	r8,r22,8
    252c:	003e1a06 	br	1d98 <__alt_mem_Onchip_SRAM+0xf8001d98>
    2530:	01000074 	movhi	r4,1
    2534:	211ac184 	addi	r4,r4,27398
    2538:	d9002c15 	stw	r4,176(sp)
    253c:	d9002c17 	ldw	r4,176(sp)
    2540:	1c07883a 	add	r3,r3,r16
    2544:	44000115 	stw	r16,4(r8)
    2548:	41000015 	stw	r4,0(r8)
    254c:	10800044 	addi	r2,r2,1
    2550:	d8c02015 	stw	r3,128(sp)
    2554:	d8801f15 	stw	r2,124(sp)
    2558:	010001c4 	movi	r4,7
    255c:	20be0d0e 	bge	r4,r2,1d94 <__alt_mem_Onchip_SRAM+0xf8001d94>
    2560:	d9402d17 	ldw	r5,180(sp)
    2564:	d9801e04 	addi	r6,sp,120
    2568:	9809883a 	mov	r4,r19
    256c:	000afbc0 	call	afbc <__ssprint_r>
    2570:	103c8c1e 	bne	r2,zero,17a4 <__alt_mem_Onchip_SRAM+0xf80017a4>
    2574:	d8c02017 	ldw	r3,128(sp)
    2578:	da000404 	addi	r8,sp,16
    257c:	003e0606 	br	1d98 <__alt_mem_Onchip_SRAM+0xf8001d98>
    2580:	d9402d17 	ldw	r5,180(sp)
    2584:	d9801e04 	addi	r6,sp,120
    2588:	9809883a 	mov	r4,r19
    258c:	000afbc0 	call	afbc <__ssprint_r>
    2590:	103e3d26 	beq	r2,zero,1e88 <__alt_mem_Onchip_SRAM+0xf8001e88>
    2594:	003c8306 	br	17a4 <__alt_mem_Onchip_SRAM+0xf80017a4>
    2598:	d9402d17 	ldw	r5,180(sp)
    259c:	d9801e04 	addi	r6,sp,120
    25a0:	9809883a 	mov	r4,r19
    25a4:	000afbc0 	call	afbc <__ssprint_r>
    25a8:	103c7e1e 	bne	r2,zero,17a4 <__alt_mem_Onchip_SRAM+0xf80017a4>
    25ac:	d8c02017 	ldw	r3,128(sp)
    25b0:	da000404 	addi	r8,sp,16
    25b4:	003deb06 	br	1d64 <__alt_mem_Onchip_SRAM+0xf8001d64>
    25b8:	d9402d17 	ldw	r5,180(sp)
    25bc:	d9801e04 	addi	r6,sp,120
    25c0:	9809883a 	mov	r4,r19
    25c4:	000afbc0 	call	afbc <__ssprint_r>
    25c8:	103c761e 	bne	r2,zero,17a4 <__alt_mem_Onchip_SRAM+0xf80017a4>
    25cc:	d8c02017 	ldw	r3,128(sp)
    25d0:	da000404 	addi	r8,sp,16
    25d4:	003d9f06 	br	1c54 <__alt_mem_Onchip_SRAM+0xf8001c54>
    25d8:	d9402d17 	ldw	r5,180(sp)
    25dc:	d9801e04 	addi	r6,sp,120
    25e0:	9809883a 	mov	r4,r19
    25e4:	000afbc0 	call	afbc <__ssprint_r>
    25e8:	103c6e1e 	bne	r2,zero,17a4 <__alt_mem_Onchip_SRAM+0xf80017a4>
    25ec:	d8c02017 	ldw	r3,128(sp)
    25f0:	da000404 	addi	r8,sp,16
    25f4:	003da506 	br	1c8c <__alt_mem_Onchip_SRAM+0xf8001c8c>
    25f8:	d9402a17 	ldw	r5,168(sp)
    25fc:	d8002785 	stb	zero,158(sp)
    2600:	283f0816 	blt	r5,zero,2224 <__alt_mem_Onchip_SRAM+0xf8002224>
    2604:	00ffdfc4 	movi	r3,-129
    2608:	a584b03a 	or	r2,r20,r22
    260c:	90e4703a 	and	r18,r18,r3
    2610:	103c5126 	beq	r2,zero,1758 <__alt_mem_Onchip_SRAM+0xf8001758>
    2614:	0039883a 	mov	fp,zero
    2618:	003e5a06 	br	1f84 <__alt_mem_Onchip_SRAM+0xf8001f84>
    261c:	9080040c 	andi	r2,r18,16
    2620:	10013d26 	beq	r2,zero,2b18 <___svfprintf_internal_r+0x1710>
    2624:	d8c02e17 	ldw	r3,184(sp)
    2628:	d9002a17 	ldw	r4,168(sp)
    262c:	d8002785 	stb	zero,158(sp)
    2630:	18800104 	addi	r2,r3,4
    2634:	1d000017 	ldw	r20,0(r3)
    2638:	002d883a 	mov	r22,zero
    263c:	20013f16 	blt	r4,zero,2b3c <___svfprintf_internal_r+0x1734>
    2640:	00ffdfc4 	movi	r3,-129
    2644:	d8802e15 	stw	r2,184(sp)
    2648:	90e4703a 	and	r18,r18,r3
    264c:	a03d0926 	beq	r20,zero,1a74 <__alt_mem_Onchip_SRAM+0xf8001a74>
    2650:	0039883a 	mov	fp,zero
    2654:	003d0c06 	br	1a88 <__alt_mem_Onchip_SRAM+0xf8001a88>
    2658:	dc402617 	ldw	r17,152(sp)
    265c:	0441830e 	bge	zero,r17,2c6c <___svfprintf_internal_r+0x1864>
    2660:	dc403217 	ldw	r17,200(sp)
    2664:	d8803317 	ldw	r2,204(sp)
    2668:	1440010e 	bge	r2,r17,2670 <___svfprintf_internal_r+0x1268>
    266c:	1023883a 	mov	r17,r2
    2670:	04400a0e 	bge	zero,r17,269c <___svfprintf_internal_r+0x1294>
    2674:	d8801f17 	ldw	r2,124(sp)
    2678:	1c47883a 	add	r3,r3,r17
    267c:	44000015 	stw	r16,0(r8)
    2680:	10800044 	addi	r2,r2,1
    2684:	44400115 	stw	r17,4(r8)
    2688:	d8c02015 	stw	r3,128(sp)
    268c:	d8801f15 	stw	r2,124(sp)
    2690:	010001c4 	movi	r4,7
    2694:	20827516 	blt	r4,r2,306c <___svfprintf_internal_r+0x1c64>
    2698:	42000204 	addi	r8,r8,8
    269c:	88027b16 	blt	r17,zero,308c <___svfprintf_internal_r+0x1c84>
    26a0:	d9003217 	ldw	r4,200(sp)
    26a4:	2463c83a 	sub	r17,r4,r17
    26a8:	0440990e 	bge	zero,r17,2910 <___svfprintf_internal_r+0x1508>
    26ac:	05800404 	movi	r22,16
    26b0:	d8801f17 	ldw	r2,124(sp)
    26b4:	b441530e 	bge	r22,r17,2c04 <___svfprintf_internal_r+0x17fc>
    26b8:	01000074 	movhi	r4,1
    26bc:	211ac184 	addi	r4,r4,27398
    26c0:	d9002c15 	stw	r4,176(sp)
    26c4:	070001c4 	movi	fp,7
    26c8:	dd002d17 	ldw	r20,180(sp)
    26cc:	00000306 	br	26dc <___svfprintf_internal_r+0x12d4>
    26d0:	42000204 	addi	r8,r8,8
    26d4:	8c7ffc04 	addi	r17,r17,-16
    26d8:	b4414d0e 	bge	r22,r17,2c10 <___svfprintf_internal_r+0x1808>
    26dc:	18c00404 	addi	r3,r3,16
    26e0:	10800044 	addi	r2,r2,1
    26e4:	45400015 	stw	r21,0(r8)
    26e8:	45800115 	stw	r22,4(r8)
    26ec:	d8c02015 	stw	r3,128(sp)
    26f0:	d8801f15 	stw	r2,124(sp)
    26f4:	e0bff60e 	bge	fp,r2,26d0 <__alt_mem_Onchip_SRAM+0xf80026d0>
    26f8:	d9801e04 	addi	r6,sp,120
    26fc:	a00b883a 	mov	r5,r20
    2700:	9809883a 	mov	r4,r19
    2704:	000afbc0 	call	afbc <__ssprint_r>
    2708:	103c261e 	bne	r2,zero,17a4 <__alt_mem_Onchip_SRAM+0xf80017a4>
    270c:	d8c02017 	ldw	r3,128(sp)
    2710:	d8801f17 	ldw	r2,124(sp)
    2714:	da000404 	addi	r8,sp,16
    2718:	003fee06 	br	26d4 <__alt_mem_Onchip_SRAM+0xf80026d4>
    271c:	d9402d17 	ldw	r5,180(sp)
    2720:	d9801e04 	addi	r6,sp,120
    2724:	9809883a 	mov	r4,r19
    2728:	000afbc0 	call	afbc <__ssprint_r>
    272c:	103c1d1e 	bne	r2,zero,17a4 <__alt_mem_Onchip_SRAM+0xf80017a4>
    2730:	d8c02017 	ldw	r3,128(sp)
    2734:	df002787 	ldb	fp,158(sp)
    2738:	da000404 	addi	r8,sp,16
    273c:	003d3806 	br	1c20 <__alt_mem_Onchip_SRAM+0xf8001c20>
    2740:	9080040c 	andi	r2,r18,16
    2744:	10005c26 	beq	r2,zero,28b8 <___svfprintf_internal_r+0x14b0>
    2748:	d8c02e17 	ldw	r3,184(sp)
    274c:	d9002a17 	ldw	r4,168(sp)
    2750:	d8002785 	stb	zero,158(sp)
    2754:	18800104 	addi	r2,r3,4
    2758:	1d000017 	ldw	r20,0(r3)
    275c:	002d883a 	mov	r22,zero
    2760:	20005e16 	blt	r4,zero,28dc <___svfprintf_internal_r+0x14d4>
    2764:	00ffdfc4 	movi	r3,-129
    2768:	d8802e15 	stw	r2,184(sp)
    276c:	90e4703a 	and	r18,r18,r3
    2770:	0039883a 	mov	fp,zero
    2774:	a03ddf26 	beq	r20,zero,1ef4 <__alt_mem_Onchip_SRAM+0xf8001ef4>
    2778:	00800244 	movi	r2,9
    277c:	153c8e36 	bltu	r2,r20,19b8 <__alt_mem_Onchip_SRAM+0xf80019b8>
    2780:	a5000c04 	addi	r20,r20,48
    2784:	dc001dc4 	addi	r16,sp,119
    2788:	dd001dc5 	stb	r20,119(sp)
    278c:	d8c02817 	ldw	r3,160(sp)
    2790:	1c07c83a 	sub	r3,r3,r16
    2794:	d8c02b15 	stw	r3,172(sp)
    2798:	003cd306 	br	1ae8 <__alt_mem_Onchip_SRAM+0xf8001ae8>
    279c:	d8803317 	ldw	r2,204(sp)
    27a0:	143fffc4 	addi	r16,r2,-1
    27a4:	043f560e 	bge	zero,r16,2500 <__alt_mem_Onchip_SRAM+0xf8002500>
    27a8:	07000404 	movi	fp,16
    27ac:	e403530e 	bge	fp,r16,34fc <___svfprintf_internal_r+0x20f4>
    27b0:	01400074 	movhi	r5,1
    27b4:	295ac184 	addi	r5,r5,27398
    27b8:	d9402c15 	stw	r5,176(sp)
    27bc:	01c001c4 	movi	r7,7
    27c0:	dd002d17 	ldw	r20,180(sp)
    27c4:	00000306 	br	27d4 <___svfprintf_internal_r+0x13cc>
    27c8:	843ffc04 	addi	r16,r16,-16
    27cc:	b5800204 	addi	r22,r22,8
    27d0:	e400130e 	bge	fp,r16,2820 <___svfprintf_internal_r+0x1418>
    27d4:	18c00404 	addi	r3,r3,16
    27d8:	8c400044 	addi	r17,r17,1
    27dc:	b5400015 	stw	r21,0(r22)
    27e0:	b7000115 	stw	fp,4(r22)
    27e4:	d8c02015 	stw	r3,128(sp)
    27e8:	dc401f15 	stw	r17,124(sp)
    27ec:	3c7ff60e 	bge	r7,r17,27c8 <__alt_mem_Onchip_SRAM+0xf80027c8>
    27f0:	d9801e04 	addi	r6,sp,120
    27f4:	a00b883a 	mov	r5,r20
    27f8:	9809883a 	mov	r4,r19
    27fc:	d9c03d15 	stw	r7,244(sp)
    2800:	000afbc0 	call	afbc <__ssprint_r>
    2804:	d9c03d17 	ldw	r7,244(sp)
    2808:	103be61e 	bne	r2,zero,17a4 <__alt_mem_Onchip_SRAM+0xf80017a4>
    280c:	843ffc04 	addi	r16,r16,-16
    2810:	d8c02017 	ldw	r3,128(sp)
    2814:	dc401f17 	ldw	r17,124(sp)
    2818:	dd800404 	addi	r22,sp,16
    281c:	e43fed16 	blt	fp,r16,27d4 <__alt_mem_Onchip_SRAM+0xf80027d4>
    2820:	d8802c17 	ldw	r2,176(sp)
    2824:	1c07883a 	add	r3,r3,r16
    2828:	8c400044 	addi	r17,r17,1
    282c:	b0800015 	stw	r2,0(r22)
    2830:	b4000115 	stw	r16,4(r22)
    2834:	d8c02015 	stw	r3,128(sp)
    2838:	dc401f15 	stw	r17,124(sp)
    283c:	008001c4 	movi	r2,7
    2840:	147f2e0e 	bge	r2,r17,24fc <__alt_mem_Onchip_SRAM+0xf80024fc>
    2844:	d9402d17 	ldw	r5,180(sp)
    2848:	d9801e04 	addi	r6,sp,120
    284c:	9809883a 	mov	r4,r19
    2850:	000afbc0 	call	afbc <__ssprint_r>
    2854:	103bd31e 	bne	r2,zero,17a4 <__alt_mem_Onchip_SRAM+0xf80017a4>
    2858:	d8c02017 	ldw	r3,128(sp)
    285c:	dc401f17 	ldw	r17,124(sp)
    2860:	dd800404 	addi	r22,sp,16
    2864:	003f2606 	br	2500 <__alt_mem_Onchip_SRAM+0xf8002500>
    2868:	9080040c 	andi	r2,r18,16
    286c:	1000c326 	beq	r2,zero,2b7c <___svfprintf_internal_r+0x1774>
    2870:	d9402e17 	ldw	r5,184(sp)
    2874:	2d000017 	ldw	r20,0(r5)
    2878:	29400104 	addi	r5,r5,4
    287c:	d9402e15 	stw	r5,184(sp)
    2880:	a02dd7fa 	srai	r22,r20,31
    2884:	b005883a 	mov	r2,r22
    2888:	103c430e 	bge	r2,zero,1998 <__alt_mem_Onchip_SRAM+0xf8001998>
    288c:	d9402a17 	ldw	r5,168(sp)
    2890:	0529c83a 	sub	r20,zero,r20
    2894:	07000b44 	movi	fp,45
    2898:	a004c03a 	cmpne	r2,r20,zero
    289c:	05adc83a 	sub	r22,zero,r22
    28a0:	df002785 	stb	fp,158(sp)
    28a4:	b0adc83a 	sub	r22,r22,r2
    28a8:	28022e16 	blt	r5,zero,3164 <___svfprintf_internal_r+0x1d5c>
    28ac:	00bfdfc4 	movi	r2,-129
    28b0:	90a4703a 	and	r18,r18,r2
    28b4:	003c3f06 	br	19b4 <__alt_mem_Onchip_SRAM+0xf80019b4>
    28b8:	9080100c 	andi	r2,r18,64
    28bc:	d8002785 	stb	zero,158(sp)
    28c0:	10012526 	beq	r2,zero,2d58 <___svfprintf_internal_r+0x1950>
    28c4:	d9402e17 	ldw	r5,184(sp)
    28c8:	d8c02a17 	ldw	r3,168(sp)
    28cc:	002d883a 	mov	r22,zero
    28d0:	28800104 	addi	r2,r5,4
    28d4:	2d00000b 	ldhu	r20,0(r5)
    28d8:	183fa20e 	bge	r3,zero,2764 <__alt_mem_Onchip_SRAM+0xf8002764>
    28dc:	d8802e15 	stw	r2,184(sp)
    28e0:	0039883a 	mov	fp,zero
    28e4:	a584b03a 	or	r2,r20,r22
    28e8:	103c321e 	bne	r2,zero,19b4 <__alt_mem_Onchip_SRAM+0xf80019b4>
    28ec:	00800044 	movi	r2,1
    28f0:	003e5006 	br	2234 <__alt_mem_Onchip_SRAM+0xf8002234>
    28f4:	d9402d17 	ldw	r5,180(sp)
    28f8:	d9801e04 	addi	r6,sp,120
    28fc:	9809883a 	mov	r4,r19
    2900:	000afbc0 	call	afbc <__ssprint_r>
    2904:	103ba71e 	bne	r2,zero,17a4 <__alt_mem_Onchip_SRAM+0xf80017a4>
    2908:	d8c02017 	ldw	r3,128(sp)
    290c:	da000404 	addi	r8,sp,16
    2910:	d9003217 	ldw	r4,200(sp)
    2914:	d8802617 	ldw	r2,152(sp)
    2918:	d9403317 	ldw	r5,204(sp)
    291c:	8123883a 	add	r17,r16,r4
    2920:	11400216 	blt	r2,r5,292c <___svfprintf_internal_r+0x1524>
    2924:	9100004c 	andi	r4,r18,1
    2928:	20000d26 	beq	r4,zero,2960 <___svfprintf_internal_r+0x1558>
    292c:	d9003817 	ldw	r4,224(sp)
    2930:	d9403417 	ldw	r5,208(sp)
    2934:	1907883a 	add	r3,r3,r4
    2938:	d9001f17 	ldw	r4,124(sp)
    293c:	41400015 	stw	r5,0(r8)
    2940:	d9403817 	ldw	r5,224(sp)
    2944:	21000044 	addi	r4,r4,1
    2948:	d8c02015 	stw	r3,128(sp)
    294c:	41400115 	stw	r5,4(r8)
    2950:	d9001f15 	stw	r4,124(sp)
    2954:	014001c4 	movi	r5,7
    2958:	2901dc16 	blt	r5,r4,30cc <___svfprintf_internal_r+0x1cc4>
    295c:	42000204 	addi	r8,r8,8
    2960:	d9003317 	ldw	r4,204(sp)
    2964:	8121883a 	add	r16,r16,r4
    2968:	2085c83a 	sub	r2,r4,r2
    296c:	8461c83a 	sub	r16,r16,r17
    2970:	1400010e 	bge	r2,r16,2978 <___svfprintf_internal_r+0x1570>
    2974:	1021883a 	mov	r16,r2
    2978:	04000a0e 	bge	zero,r16,29a4 <___svfprintf_internal_r+0x159c>
    297c:	d9001f17 	ldw	r4,124(sp)
    2980:	1c07883a 	add	r3,r3,r16
    2984:	44400015 	stw	r17,0(r8)
    2988:	21000044 	addi	r4,r4,1
    298c:	44000115 	stw	r16,4(r8)
    2990:	d8c02015 	stw	r3,128(sp)
    2994:	d9001f15 	stw	r4,124(sp)
    2998:	014001c4 	movi	r5,7
    299c:	2901e616 	blt	r5,r4,3138 <___svfprintf_internal_r+0x1d30>
    29a0:	42000204 	addi	r8,r8,8
    29a4:	8001f616 	blt	r16,zero,3180 <___svfprintf_internal_r+0x1d78>
    29a8:	1421c83a 	sub	r16,r2,r16
    29ac:	043cfa0e 	bge	zero,r16,1d98 <__alt_mem_Onchip_SRAM+0xf8001d98>
    29b0:	04400404 	movi	r17,16
    29b4:	d8801f17 	ldw	r2,124(sp)
    29b8:	8c3edd0e 	bge	r17,r16,2530 <__alt_mem_Onchip_SRAM+0xf8002530>
    29bc:	01400074 	movhi	r5,1
    29c0:	295ac184 	addi	r5,r5,27398
    29c4:	d9402c15 	stw	r5,176(sp)
    29c8:	058001c4 	movi	r22,7
    29cc:	dd002d17 	ldw	r20,180(sp)
    29d0:	00000306 	br	29e0 <___svfprintf_internal_r+0x15d8>
    29d4:	42000204 	addi	r8,r8,8
    29d8:	843ffc04 	addi	r16,r16,-16
    29dc:	8c3ed70e 	bge	r17,r16,253c <__alt_mem_Onchip_SRAM+0xf800253c>
    29e0:	18c00404 	addi	r3,r3,16
    29e4:	10800044 	addi	r2,r2,1
    29e8:	45400015 	stw	r21,0(r8)
    29ec:	44400115 	stw	r17,4(r8)
    29f0:	d8c02015 	stw	r3,128(sp)
    29f4:	d8801f15 	stw	r2,124(sp)
    29f8:	b0bff60e 	bge	r22,r2,29d4 <__alt_mem_Onchip_SRAM+0xf80029d4>
    29fc:	d9801e04 	addi	r6,sp,120
    2a00:	a00b883a 	mov	r5,r20
    2a04:	9809883a 	mov	r4,r19
    2a08:	000afbc0 	call	afbc <__ssprint_r>
    2a0c:	103b651e 	bne	r2,zero,17a4 <__alt_mem_Onchip_SRAM+0xf80017a4>
    2a10:	d8c02017 	ldw	r3,128(sp)
    2a14:	d8801f17 	ldw	r2,124(sp)
    2a18:	da000404 	addi	r8,sp,16
    2a1c:	003fee06 	br	29d8 <__alt_mem_Onchip_SRAM+0xf80029d8>
    2a20:	9088703a 	and	r4,r18,r2
    2a24:	203e8d1e 	bne	r4,zero,245c <__alt_mem_Onchip_SRAM+0xf800245c>
    2a28:	dc401f17 	ldw	r17,124(sp)
    2a2c:	40800115 	stw	r2,4(r8)
    2a30:	44000015 	stw	r16,0(r8)
    2a34:	8c400044 	addi	r17,r17,1
    2a38:	d8c02015 	stw	r3,128(sp)
    2a3c:	dc401f15 	stw	r17,124(sp)
    2a40:	008001c4 	movi	r2,7
    2a44:	147f7f16 	blt	r2,r17,2844 <__alt_mem_Onchip_SRAM+0xf8002844>
    2a48:	45800204 	addi	r22,r8,8
    2a4c:	003eac06 	br	2500 <__alt_mem_Onchip_SRAM+0xf8002500>
    2a50:	d9402d17 	ldw	r5,180(sp)
    2a54:	d9801e04 	addi	r6,sp,120
    2a58:	9809883a 	mov	r4,r19
    2a5c:	000afbc0 	call	afbc <__ssprint_r>
    2a60:	103b501e 	bne	r2,zero,17a4 <__alt_mem_Onchip_SRAM+0xf80017a4>
    2a64:	d8c02017 	ldw	r3,128(sp)
    2a68:	dc401f17 	ldw	r17,124(sp)
    2a6c:	da000404 	addi	r8,sp,16
    2a70:	003e8406 	br	2484 <__alt_mem_Onchip_SRAM+0xf8002484>
    2a74:	d9402d17 	ldw	r5,180(sp)
    2a78:	d9801e04 	addi	r6,sp,120
    2a7c:	9809883a 	mov	r4,r19
    2a80:	000afbc0 	call	afbc <__ssprint_r>
    2a84:	103b471e 	bne	r2,zero,17a4 <__alt_mem_Onchip_SRAM+0xf80017a4>
    2a88:	d8c02017 	ldw	r3,128(sp)
    2a8c:	dc401f17 	ldw	r17,124(sp)
    2a90:	dd800404 	addi	r22,sp,16
    2a94:	003e8606 	br	24b0 <__alt_mem_Onchip_SRAM+0xf80024b0>
    2a98:	0029883a 	mov	r20,zero
    2a9c:	a5000c04 	addi	r20,r20,48
    2aa0:	dc001dc4 	addi	r16,sp,119
    2aa4:	dd001dc5 	stb	r20,119(sp)
    2aa8:	003f3806 	br	278c <__alt_mem_Onchip_SRAM+0xf800278c>
    2aac:	d9402d17 	ldw	r5,180(sp)
    2ab0:	d9801e04 	addi	r6,sp,120
    2ab4:	9809883a 	mov	r4,r19
    2ab8:	000afbc0 	call	afbc <__ssprint_r>
    2abc:	103b391e 	bne	r2,zero,17a4 <__alt_mem_Onchip_SRAM+0xf80017a4>
    2ac0:	d8c02017 	ldw	r3,128(sp)
    2ac4:	da000404 	addi	r8,sp,16
    2ac8:	003c7306 	br	1c98 <__alt_mem_Onchip_SRAM+0xf8001c98>
    2acc:	d9003617 	ldw	r4,216(sp)
    2ad0:	d9403717 	ldw	r5,220(sp)
    2ad4:	da003e15 	stw	r8,248(sp)
    2ad8:	000acdc0 	call	acdc <__fpclassifyd>
    2adc:	da003e17 	ldw	r8,248(sp)
    2ae0:	1000bd1e 	bne	r2,zero,2dd8 <___svfprintf_internal_r+0x19d0>
    2ae4:	008011c4 	movi	r2,71
    2ae8:	14411e0e 	bge	r2,r17,2f64 <___svfprintf_internal_r+0x1b5c>
    2aec:	04000074 	movhi	r16,1
    2af0:	841ab404 	addi	r16,r16,27344
    2af4:	00c000c4 	movi	r3,3
    2af8:	00bfdfc4 	movi	r2,-129
    2afc:	d8c02915 	stw	r3,164(sp)
    2b00:	90a4703a 	and	r18,r18,r2
    2b04:	df002783 	ldbu	fp,158(sp)
    2b08:	d8c02b15 	stw	r3,172(sp)
    2b0c:	d8002a15 	stw	zero,168(sp)
    2b10:	d8003215 	stw	zero,200(sp)
    2b14:	003bfa06 	br	1b00 <__alt_mem_Onchip_SRAM+0xf8001b00>
    2b18:	9080100c 	andi	r2,r18,64
    2b1c:	d8002785 	stb	zero,158(sp)
    2b20:	10009426 	beq	r2,zero,2d74 <___svfprintf_internal_r+0x196c>
    2b24:	d9402e17 	ldw	r5,184(sp)
    2b28:	d8c02a17 	ldw	r3,168(sp)
    2b2c:	002d883a 	mov	r22,zero
    2b30:	28800104 	addi	r2,r5,4
    2b34:	2d00000b 	ldhu	r20,0(r5)
    2b38:	183ec10e 	bge	r3,zero,2640 <__alt_mem_Onchip_SRAM+0xf8002640>
    2b3c:	a586b03a 	or	r3,r20,r22
    2b40:	d8802e15 	stw	r2,184(sp)
    2b44:	183ec21e 	bne	r3,zero,2650 <__alt_mem_Onchip_SRAM+0xf8002650>
    2b48:	0039883a 	mov	fp,zero
    2b4c:	0005883a 	mov	r2,zero
    2b50:	003db806 	br	2234 <__alt_mem_Onchip_SRAM+0xf8002234>
    2b54:	d8c02e17 	ldw	r3,184(sp)
    2b58:	d9002e17 	ldw	r4,184(sp)
    2b5c:	d9402e17 	ldw	r5,184(sp)
    2b60:	18c00017 	ldw	r3,0(r3)
    2b64:	21000117 	ldw	r4,4(r4)
    2b68:	29400204 	addi	r5,r5,8
    2b6c:	d8c03615 	stw	r3,216(sp)
    2b70:	d9003715 	stw	r4,220(sp)
    2b74:	d9402e15 	stw	r5,184(sp)
    2b78:	003b5a06 	br	18e4 <__alt_mem_Onchip_SRAM+0xf80018e4>
    2b7c:	9080100c 	andi	r2,r18,64
    2b80:	10010726 	beq	r2,zero,2fa0 <___svfprintf_internal_r+0x1b98>
    2b84:	d8802e17 	ldw	r2,184(sp)
    2b88:	1500000f 	ldh	r20,0(r2)
    2b8c:	10800104 	addi	r2,r2,4
    2b90:	d8802e15 	stw	r2,184(sp)
    2b94:	a02dd7fa 	srai	r22,r20,31
    2b98:	b005883a 	mov	r2,r22
    2b9c:	003b7d06 	br	1994 <__alt_mem_Onchip_SRAM+0xf8001994>
    2ba0:	9080100c 	andi	r2,r18,64
    2ba4:	10010526 	beq	r2,zero,2fbc <___svfprintf_internal_r+0x1bb4>
    2ba8:	d8c02e17 	ldw	r3,184(sp)
    2bac:	002d883a 	mov	r22,zero
    2bb0:	1d00000b 	ldhu	r20,0(r3)
    2bb4:	18c00104 	addi	r3,r3,4
    2bb8:	d8c02e15 	stw	r3,184(sp)
    2bbc:	003ce206 	br	1f48 <__alt_mem_Onchip_SRAM+0xf8001f48>
    2bc0:	bc400007 	ldb	r17,0(r23)
    2bc4:	003a6506 	br	155c <__alt_mem_Onchip_SRAM+0xf800155c>
    2bc8:	9080040c 	andi	r2,r18,16
    2bcc:	10010126 	beq	r2,zero,2fd4 <___svfprintf_internal_r+0x1bcc>
    2bd0:	d8c02e17 	ldw	r3,184(sp)
    2bd4:	d9002f17 	ldw	r4,188(sp)
    2bd8:	18800017 	ldw	r2,0(r3)
    2bdc:	18c00104 	addi	r3,r3,4
    2be0:	d8c02e15 	stw	r3,184(sp)
    2be4:	11000015 	stw	r4,0(r2)
    2be8:	003a3206 	br	14b4 <__alt_mem_Onchip_SRAM+0xf80014b4>
    2bec:	d9002a17 	ldw	r4,168(sp)
    2bf0:	d8002785 	stb	zero,158(sp)
    2bf4:	203d8d16 	blt	r4,zero,222c <__alt_mem_Onchip_SRAM+0xf800222c>
    2bf8:	00bfdfc4 	movi	r2,-129
    2bfc:	90a4703a 	and	r18,r18,r2
    2c00:	003ad506 	br	1758 <__alt_mem_Onchip_SRAM+0xf8001758>
    2c04:	01400074 	movhi	r5,1
    2c08:	295ac184 	addi	r5,r5,27398
    2c0c:	d9402c15 	stw	r5,176(sp)
    2c10:	d9402c17 	ldw	r5,176(sp)
    2c14:	1c47883a 	add	r3,r3,r17
    2c18:	10800044 	addi	r2,r2,1
    2c1c:	41400015 	stw	r5,0(r8)
    2c20:	44400115 	stw	r17,4(r8)
    2c24:	d8c02015 	stw	r3,128(sp)
    2c28:	d8801f15 	stw	r2,124(sp)
    2c2c:	010001c4 	movi	r4,7
    2c30:	20bf3016 	blt	r4,r2,28f4 <__alt_mem_Onchip_SRAM+0xf80028f4>
    2c34:	42000204 	addi	r8,r8,8
    2c38:	003f3506 	br	2910 <__alt_mem_Onchip_SRAM+0xf8002910>
    2c3c:	01000074 	movhi	r4,1
    2c40:	211ac184 	addi	r4,r4,27398
    2c44:	d9002c15 	stw	r4,176(sp)
    2c48:	003c3c06 	br	1d3c <__alt_mem_Onchip_SRAM+0xf8001d3c>
    2c4c:	d9402d17 	ldw	r5,180(sp)
    2c50:	d9801e04 	addi	r6,sp,120
    2c54:	9809883a 	mov	r4,r19
    2c58:	000afbc0 	call	afbc <__ssprint_r>
    2c5c:	103ad11e 	bne	r2,zero,17a4 <__alt_mem_Onchip_SRAM+0xf80017a4>
    2c60:	d8c02017 	ldw	r3,128(sp)
    2c64:	da000404 	addi	r8,sp,16
    2c68:	003d9306 	br	22b8 <__alt_mem_Onchip_SRAM+0xf80022b8>
    2c6c:	d8801f17 	ldw	r2,124(sp)
    2c70:	01400074 	movhi	r5,1
    2c74:	01000044 	movi	r4,1
    2c78:	18c00044 	addi	r3,r3,1
    2c7c:	10800044 	addi	r2,r2,1
    2c80:	295ac104 	addi	r5,r5,27396
    2c84:	41000115 	stw	r4,4(r8)
    2c88:	41400015 	stw	r5,0(r8)
    2c8c:	d8c02015 	stw	r3,128(sp)
    2c90:	d8801f15 	stw	r2,124(sp)
    2c94:	010001c4 	movi	r4,7
    2c98:	2080b516 	blt	r4,r2,2f70 <___svfprintf_internal_r+0x1b68>
    2c9c:	42000204 	addi	r8,r8,8
    2ca0:	8800041e 	bne	r17,zero,2cb4 <___svfprintf_internal_r+0x18ac>
    2ca4:	d8803317 	ldw	r2,204(sp)
    2ca8:	1000021e 	bne	r2,zero,2cb4 <___svfprintf_internal_r+0x18ac>
    2cac:	9080004c 	andi	r2,r18,1
    2cb0:	103c3926 	beq	r2,zero,1d98 <__alt_mem_Onchip_SRAM+0xf8001d98>
    2cb4:	d9003817 	ldw	r4,224(sp)
    2cb8:	d8801f17 	ldw	r2,124(sp)
    2cbc:	d9403417 	ldw	r5,208(sp)
    2cc0:	20c7883a 	add	r3,r4,r3
    2cc4:	10800044 	addi	r2,r2,1
    2cc8:	41000115 	stw	r4,4(r8)
    2ccc:	41400015 	stw	r5,0(r8)
    2cd0:	d8c02015 	stw	r3,128(sp)
    2cd4:	d8801f15 	stw	r2,124(sp)
    2cd8:	010001c4 	movi	r4,7
    2cdc:	20818016 	blt	r4,r2,32e0 <___svfprintf_internal_r+0x1ed8>
    2ce0:	42000204 	addi	r8,r8,8
    2ce4:	0463c83a 	sub	r17,zero,r17
    2ce8:	0440cb0e 	bge	zero,r17,3018 <___svfprintf_internal_r+0x1c10>
    2cec:	05800404 	movi	r22,16
    2cf0:	b440e80e 	bge	r22,r17,3094 <___svfprintf_internal_r+0x1c8c>
    2cf4:	01400074 	movhi	r5,1
    2cf8:	295ac184 	addi	r5,r5,27398
    2cfc:	d9402c15 	stw	r5,176(sp)
    2d00:	070001c4 	movi	fp,7
    2d04:	dd002d17 	ldw	r20,180(sp)
    2d08:	00000306 	br	2d18 <___svfprintf_internal_r+0x1910>
    2d0c:	42000204 	addi	r8,r8,8
    2d10:	8c7ffc04 	addi	r17,r17,-16
    2d14:	b440e20e 	bge	r22,r17,30a0 <___svfprintf_internal_r+0x1c98>
    2d18:	18c00404 	addi	r3,r3,16
    2d1c:	10800044 	addi	r2,r2,1
    2d20:	45400015 	stw	r21,0(r8)
    2d24:	45800115 	stw	r22,4(r8)
    2d28:	d8c02015 	stw	r3,128(sp)
    2d2c:	d8801f15 	stw	r2,124(sp)
    2d30:	e0bff60e 	bge	fp,r2,2d0c <__alt_mem_Onchip_SRAM+0xf8002d0c>
    2d34:	d9801e04 	addi	r6,sp,120
    2d38:	a00b883a 	mov	r5,r20
    2d3c:	9809883a 	mov	r4,r19
    2d40:	000afbc0 	call	afbc <__ssprint_r>
    2d44:	103a971e 	bne	r2,zero,17a4 <__alt_mem_Onchip_SRAM+0xf80017a4>
    2d48:	d8c02017 	ldw	r3,128(sp)
    2d4c:	d8801f17 	ldw	r2,124(sp)
    2d50:	da000404 	addi	r8,sp,16
    2d54:	003fee06 	br	2d10 <__alt_mem_Onchip_SRAM+0xf8002d10>
    2d58:	d9002e17 	ldw	r4,184(sp)
    2d5c:	d9402a17 	ldw	r5,168(sp)
    2d60:	002d883a 	mov	r22,zero
    2d64:	20800104 	addi	r2,r4,4
    2d68:	25000017 	ldw	r20,0(r4)
    2d6c:	283e7d0e 	bge	r5,zero,2764 <__alt_mem_Onchip_SRAM+0xf8002764>
    2d70:	003eda06 	br	28dc <__alt_mem_Onchip_SRAM+0xf80028dc>
    2d74:	d9002e17 	ldw	r4,184(sp)
    2d78:	d9402a17 	ldw	r5,168(sp)
    2d7c:	002d883a 	mov	r22,zero
    2d80:	20800104 	addi	r2,r4,4
    2d84:	25000017 	ldw	r20,0(r4)
    2d88:	283e2d0e 	bge	r5,zero,2640 <__alt_mem_Onchip_SRAM+0xf8002640>
    2d8c:	003f6b06 	br	2b3c <__alt_mem_Onchip_SRAM+0xf8002b3c>
    2d90:	d8c02e15 	stw	r3,184(sp)
    2d94:	0039883a 	mov	fp,zero
    2d98:	003ed206 	br	28e4 <__alt_mem_Onchip_SRAM+0xf80028e4>
    2d9c:	bc400043 	ldbu	r17,1(r23)
    2da0:	84000814 	ori	r16,r16,32
    2da4:	bdc00044 	addi	r23,r23,1
    2da8:	8c403fcc 	andi	r17,r17,255
    2dac:	8c40201c 	xori	r17,r17,128
    2db0:	8c7fe004 	addi	r17,r17,-128
    2db4:	0039e906 	br	155c <__alt_mem_Onchip_SRAM+0xf800155c>
    2db8:	d9402d17 	ldw	r5,180(sp)
    2dbc:	d9801e04 	addi	r6,sp,120
    2dc0:	9809883a 	mov	r4,r19
    2dc4:	000afbc0 	call	afbc <__ssprint_r>
    2dc8:	103a761e 	bne	r2,zero,17a4 <__alt_mem_Onchip_SRAM+0xf80017a4>
    2dcc:	d8c02017 	ldw	r3,128(sp)
    2dd0:	da000404 	addi	r8,sp,16
    2dd4:	003d4a06 	br	2300 <__alt_mem_Onchip_SRAM+0xf8002300>
    2dd8:	d9002a17 	ldw	r4,168(sp)
    2ddc:	05bff7c4 	movi	r22,-33
    2de0:	00bfffc4 	movi	r2,-1
    2de4:	8dac703a 	and	r22,r17,r22
    2de8:	20806a26 	beq	r4,r2,2f94 <___svfprintf_internal_r+0x1b8c>
    2dec:	008011c4 	movi	r2,71
    2df0:	b0813726 	beq	r22,r2,32d0 <___svfprintf_internal_r+0x1ec8>
    2df4:	d9003717 	ldw	r4,220(sp)
    2df8:	90c04014 	ori	r3,r18,256
    2dfc:	d8c02c15 	stw	r3,176(sp)
    2e00:	20015d16 	blt	r4,zero,3378 <___svfprintf_internal_r+0x1f70>
    2e04:	dd003717 	ldw	r20,220(sp)
    2e08:	d8002905 	stb	zero,164(sp)
    2e0c:	00801984 	movi	r2,102
    2e10:	88814026 	beq	r17,r2,3314 <___svfprintf_internal_r+0x1f0c>
    2e14:	00801184 	movi	r2,70
    2e18:	88817126 	beq	r17,r2,33e0 <___svfprintf_internal_r+0x1fd8>
    2e1c:	00801144 	movi	r2,69
    2e20:	b0816226 	beq	r22,r2,33ac <___svfprintf_internal_r+0x1fa4>
    2e24:	d8c02a17 	ldw	r3,168(sp)
    2e28:	d8802104 	addi	r2,sp,132
    2e2c:	d8800315 	stw	r2,12(sp)
    2e30:	d9403617 	ldw	r5,216(sp)
    2e34:	d8802504 	addi	r2,sp,148
    2e38:	d8800215 	stw	r2,8(sp)
    2e3c:	d8802604 	addi	r2,sp,152
    2e40:	d8c00015 	stw	r3,0(sp)
    2e44:	d8800115 	stw	r2,4(sp)
    2e48:	01c00084 	movi	r7,2
    2e4c:	a00d883a 	mov	r6,r20
    2e50:	9809883a 	mov	r4,r19
    2e54:	d8c03d15 	stw	r3,244(sp)
    2e58:	da003e15 	stw	r8,248(sp)
    2e5c:	0005e440 	call	5e44 <_dtoa_r>
    2e60:	1021883a 	mov	r16,r2
    2e64:	008019c4 	movi	r2,103
    2e68:	d8c03d17 	ldw	r3,244(sp)
    2e6c:	da003e17 	ldw	r8,248(sp)
    2e70:	8880e726 	beq	r17,r2,3210 <___svfprintf_internal_r+0x1e08>
    2e74:	008011c4 	movi	r2,71
    2e78:	8880d426 	beq	r17,r2,31cc <___svfprintf_internal_r+0x1dc4>
    2e7c:	80f9883a 	add	fp,r16,r3
    2e80:	d9003617 	ldw	r4,216(sp)
    2e84:	000d883a 	mov	r6,zero
    2e88:	000f883a 	mov	r7,zero
    2e8c:	a00b883a 	mov	r5,r20
    2e90:	da003e15 	stw	r8,248(sp)
    2e94:	00104b80 	call	104b8 <__eqdf2>
    2e98:	da003e17 	ldw	r8,248(sp)
    2e9c:	1000e426 	beq	r2,zero,3230 <___svfprintf_internal_r+0x1e28>
    2ea0:	d8802117 	ldw	r2,132(sp)
    2ea4:	1700062e 	bgeu	r2,fp,2ec0 <___svfprintf_internal_r+0x1ab8>
    2ea8:	01000c04 	movi	r4,48
    2eac:	10c00044 	addi	r3,r2,1
    2eb0:	d8c02115 	stw	r3,132(sp)
    2eb4:	11000005 	stb	r4,0(r2)
    2eb8:	d8802117 	ldw	r2,132(sp)
    2ebc:	173ffb36 	bltu	r2,fp,2eac <__alt_mem_Onchip_SRAM+0xf8002eac>
    2ec0:	1405c83a 	sub	r2,r2,r16
    2ec4:	d8803315 	stw	r2,204(sp)
    2ec8:	008011c4 	movi	r2,71
    2ecc:	b080c526 	beq	r22,r2,31e4 <___svfprintf_internal_r+0x1ddc>
    2ed0:	00801944 	movi	r2,101
    2ed4:	1441d80e 	bge	r2,r17,3638 <___svfprintf_internal_r+0x2230>
    2ed8:	d8c02617 	ldw	r3,152(sp)
    2edc:	00801984 	movi	r2,102
    2ee0:	d8c03215 	stw	r3,200(sp)
    2ee4:	88813426 	beq	r17,r2,33b8 <___svfprintf_internal_r+0x1fb0>
    2ee8:	d8c03217 	ldw	r3,200(sp)
    2eec:	d9003317 	ldw	r4,204(sp)
    2ef0:	19012516 	blt	r3,r4,3388 <___svfprintf_internal_r+0x1f80>
    2ef4:	9480004c 	andi	r18,r18,1
    2ef8:	9001841e 	bne	r18,zero,350c <___svfprintf_internal_r+0x2104>
    2efc:	1805883a 	mov	r2,r3
    2f00:	1801cb16 	blt	r3,zero,3630 <___svfprintf_internal_r+0x2228>
    2f04:	d8c03217 	ldw	r3,200(sp)
    2f08:	044019c4 	movi	r17,103
    2f0c:	d8c02b15 	stw	r3,172(sp)
    2f10:	df002907 	ldb	fp,164(sp)
    2f14:	e000a61e 	bne	fp,zero,31b0 <___svfprintf_internal_r+0x1da8>
    2f18:	df002783 	ldbu	fp,158(sp)
    2f1c:	d8802915 	stw	r2,164(sp)
    2f20:	dc802c17 	ldw	r18,176(sp)
    2f24:	d8002a15 	stw	zero,168(sp)
    2f28:	003af506 	br	1b00 <__alt_mem_Onchip_SRAM+0xf8001b00>
    2f2c:	04000074 	movhi	r16,1
    2f30:	841ab104 	addi	r16,r16,27332
    2f34:	003a7e06 	br	1930 <__alt_mem_Onchip_SRAM+0xf8001930>
    2f38:	d9003917 	ldw	r4,228(sp)
    2f3c:	04001004 	movi	r16,64
    2f40:	800b883a 	mov	r5,r16
    2f44:	000889c0 	call	889c <_malloc_r>
    2f48:	d9002d17 	ldw	r4,180(sp)
    2f4c:	20800015 	stw	r2,0(r4)
    2f50:	20800415 	stw	r2,16(r4)
    2f54:	1001d026 	beq	r2,zero,3698 <___svfprintf_internal_r+0x2290>
    2f58:	d8802d17 	ldw	r2,180(sp)
    2f5c:	14000515 	stw	r16,20(r2)
    2f60:	00394406 	br	1474 <__alt_mem_Onchip_SRAM+0xf8001474>
    2f64:	04000074 	movhi	r16,1
    2f68:	841ab304 	addi	r16,r16,27340
    2f6c:	003ee106 	br	2af4 <__alt_mem_Onchip_SRAM+0xf8002af4>
    2f70:	d9402d17 	ldw	r5,180(sp)
    2f74:	d9801e04 	addi	r6,sp,120
    2f78:	9809883a 	mov	r4,r19
    2f7c:	000afbc0 	call	afbc <__ssprint_r>
    2f80:	103a081e 	bne	r2,zero,17a4 <__alt_mem_Onchip_SRAM+0xf80017a4>
    2f84:	dc402617 	ldw	r17,152(sp)
    2f88:	d8c02017 	ldw	r3,128(sp)
    2f8c:	da000404 	addi	r8,sp,16
    2f90:	003f4306 	br	2ca0 <__alt_mem_Onchip_SRAM+0xf8002ca0>
    2f94:	01400184 	movi	r5,6
    2f98:	d9402a15 	stw	r5,168(sp)
    2f9c:	003f9506 	br	2df4 <__alt_mem_Onchip_SRAM+0xf8002df4>
    2fa0:	d8c02e17 	ldw	r3,184(sp)
    2fa4:	1d000017 	ldw	r20,0(r3)
    2fa8:	18c00104 	addi	r3,r3,4
    2fac:	d8c02e15 	stw	r3,184(sp)
    2fb0:	a02dd7fa 	srai	r22,r20,31
    2fb4:	b005883a 	mov	r2,r22
    2fb8:	003a7606 	br	1994 <__alt_mem_Onchip_SRAM+0xf8001994>
    2fbc:	d9002e17 	ldw	r4,184(sp)
    2fc0:	002d883a 	mov	r22,zero
    2fc4:	25000017 	ldw	r20,0(r4)
    2fc8:	21000104 	addi	r4,r4,4
    2fcc:	d9002e15 	stw	r4,184(sp)
    2fd0:	003bdd06 	br	1f48 <__alt_mem_Onchip_SRAM+0xf8001f48>
    2fd4:	9480100c 	andi	r18,r18,64
    2fd8:	90006e26 	beq	r18,zero,3194 <___svfprintf_internal_r+0x1d8c>
    2fdc:	d9402e17 	ldw	r5,184(sp)
    2fe0:	d8c02f17 	ldw	r3,188(sp)
    2fe4:	28800017 	ldw	r2,0(r5)
    2fe8:	29400104 	addi	r5,r5,4
    2fec:	d9402e15 	stw	r5,184(sp)
    2ff0:	10c0000d 	sth	r3,0(r2)
    2ff4:	00392f06 	br	14b4 <__alt_mem_Onchip_SRAM+0xf80014b4>
    2ff8:	d9402d17 	ldw	r5,180(sp)
    2ffc:	d9801e04 	addi	r6,sp,120
    3000:	9809883a 	mov	r4,r19
    3004:	000afbc0 	call	afbc <__ssprint_r>
    3008:	1039e61e 	bne	r2,zero,17a4 <__alt_mem_Onchip_SRAM+0xf80017a4>
    300c:	d8c02017 	ldw	r3,128(sp)
    3010:	d8801f17 	ldw	r2,124(sp)
    3014:	da000404 	addi	r8,sp,16
    3018:	d9403317 	ldw	r5,204(sp)
    301c:	10800044 	addi	r2,r2,1
    3020:	44000015 	stw	r16,0(r8)
    3024:	28c7883a 	add	r3,r5,r3
    3028:	003b5506 	br	1d80 <__alt_mem_Onchip_SRAM+0xf8001d80>
    302c:	8009883a 	mov	r4,r16
    3030:	df003e15 	stw	fp,248(sp)
    3034:	00013700 	call	1370 <strlen>
    3038:	d8802b15 	stw	r2,172(sp)
    303c:	da003e17 	ldw	r8,248(sp)
    3040:	103c160e 	bge	r2,zero,209c <__alt_mem_Onchip_SRAM+0xf800209c>
    3044:	0005883a 	mov	r2,zero
    3048:	003c1406 	br	209c <__alt_mem_Onchip_SRAM+0xf800209c>
    304c:	00bfffc4 	movi	r2,-1
    3050:	0039d906 	br	17b8 <__alt_mem_Onchip_SRAM+0xf80017b8>
    3054:	01000074 	movhi	r4,1
    3058:	211ac584 	addi	r4,r4,27414
    305c:	d9003515 	stw	r4,212(sp)
    3060:	003ae406 	br	1bf4 <__alt_mem_Onchip_SRAM+0xf8001bf4>
    3064:	013fffc4 	movi	r4,-1
    3068:	0039fa06 	br	1854 <__alt_mem_Onchip_SRAM+0xf8001854>
    306c:	d9402d17 	ldw	r5,180(sp)
    3070:	d9801e04 	addi	r6,sp,120
    3074:	9809883a 	mov	r4,r19
    3078:	000afbc0 	call	afbc <__ssprint_r>
    307c:	1039c91e 	bne	r2,zero,17a4 <__alt_mem_Onchip_SRAM+0xf80017a4>
    3080:	d8c02017 	ldw	r3,128(sp)
    3084:	da000404 	addi	r8,sp,16
    3088:	003d8406 	br	269c <__alt_mem_Onchip_SRAM+0xf800269c>
    308c:	0023883a 	mov	r17,zero
    3090:	003d8306 	br	26a0 <__alt_mem_Onchip_SRAM+0xf80026a0>
    3094:	01000074 	movhi	r4,1
    3098:	211ac184 	addi	r4,r4,27398
    309c:	d9002c15 	stw	r4,176(sp)
    30a0:	d9002c17 	ldw	r4,176(sp)
    30a4:	1c47883a 	add	r3,r3,r17
    30a8:	10800044 	addi	r2,r2,1
    30ac:	41000015 	stw	r4,0(r8)
    30b0:	44400115 	stw	r17,4(r8)
    30b4:	d8c02015 	stw	r3,128(sp)
    30b8:	d8801f15 	stw	r2,124(sp)
    30bc:	010001c4 	movi	r4,7
    30c0:	20bfcd16 	blt	r4,r2,2ff8 <__alt_mem_Onchip_SRAM+0xf8002ff8>
    30c4:	42000204 	addi	r8,r8,8
    30c8:	003fd306 	br	3018 <__alt_mem_Onchip_SRAM+0xf8003018>
    30cc:	d9402d17 	ldw	r5,180(sp)
    30d0:	d9801e04 	addi	r6,sp,120
    30d4:	9809883a 	mov	r4,r19
    30d8:	000afbc0 	call	afbc <__ssprint_r>
    30dc:	1039b11e 	bne	r2,zero,17a4 <__alt_mem_Onchip_SRAM+0xf80017a4>
    30e0:	d8802617 	ldw	r2,152(sp)
    30e4:	d8c02017 	ldw	r3,128(sp)
    30e8:	da000404 	addi	r8,sp,16
    30ec:	003e1c06 	br	2960 <__alt_mem_Onchip_SRAM+0xf8002960>
    30f0:	d8802a17 	ldw	r2,168(sp)
    30f4:	00c00184 	movi	r3,6
    30f8:	1880012e 	bgeu	r3,r2,3100 <___svfprintf_internal_r+0x1cf8>
    30fc:	1805883a 	mov	r2,r3
    3100:	d8802b15 	stw	r2,172(sp)
    3104:	1000f316 	blt	r2,zero,34d4 <___svfprintf_internal_r+0x20cc>
    3108:	04000074 	movhi	r16,1
    310c:	d8802915 	stw	r2,164(sp)
    3110:	dd002e15 	stw	r20,184(sp)
    3114:	d8002a15 	stw	zero,168(sp)
    3118:	d8003215 	stw	zero,200(sp)
    311c:	841abf04 	addi	r16,r16,27388
    3120:	0039883a 	mov	fp,zero
    3124:	003a7d06 	br	1b1c <__alt_mem_Onchip_SRAM+0xf8001b1c>
    3128:	01000074 	movhi	r4,1
    312c:	211ac584 	addi	r4,r4,27414
    3130:	d9003515 	stw	r4,212(sp)
    3134:	003b3d06 	br	1e2c <__alt_mem_Onchip_SRAM+0xf8001e2c>
    3138:	d9402d17 	ldw	r5,180(sp)
    313c:	d9801e04 	addi	r6,sp,120
    3140:	9809883a 	mov	r4,r19
    3144:	000afbc0 	call	afbc <__ssprint_r>
    3148:	1039961e 	bne	r2,zero,17a4 <__alt_mem_Onchip_SRAM+0xf80017a4>
    314c:	d8802617 	ldw	r2,152(sp)
    3150:	d9403317 	ldw	r5,204(sp)
    3154:	d8c02017 	ldw	r3,128(sp)
    3158:	da000404 	addi	r8,sp,16
    315c:	2885c83a 	sub	r2,r5,r2
    3160:	003e1006 	br	29a4 <__alt_mem_Onchip_SRAM+0xf80029a4>
    3164:	00800044 	movi	r2,1
    3168:	10803fcc 	andi	r2,r2,255
    316c:	00c00044 	movi	r3,1
    3170:	10fa1026 	beq	r2,r3,19b4 <__alt_mem_Onchip_SRAM+0xf80019b4>
    3174:	00c00084 	movi	r3,2
    3178:	10fb8226 	beq	r2,r3,1f84 <__alt_mem_Onchip_SRAM+0xf8001f84>
    317c:	003a4206 	br	1a88 <__alt_mem_Onchip_SRAM+0xf8001a88>
    3180:	0021883a 	mov	r16,zero
    3184:	003e0806 	br	29a8 <__alt_mem_Onchip_SRAM+0xf80029a8>
    3188:	07000b44 	movi	fp,45
    318c:	df002785 	stb	fp,158(sp)
    3190:	0039e306 	br	1920 <__alt_mem_Onchip_SRAM+0xf8001920>
    3194:	d9002e17 	ldw	r4,184(sp)
    3198:	d9402f17 	ldw	r5,188(sp)
    319c:	20800017 	ldw	r2,0(r4)
    31a0:	21000104 	addi	r4,r4,4
    31a4:	d9002e15 	stw	r4,184(sp)
    31a8:	11400015 	stw	r5,0(r2)
    31ac:	0038c106 	br	14b4 <__alt_mem_Onchip_SRAM+0xf80014b4>
    31b0:	00c00b44 	movi	r3,45
    31b4:	d8c02785 	stb	r3,158(sp)
    31b8:	d8802915 	stw	r2,164(sp)
    31bc:	dc802c17 	ldw	r18,176(sp)
    31c0:	d8002a15 	stw	zero,168(sp)
    31c4:	07000b44 	movi	fp,45
    31c8:	003a5106 	br	1b10 <__alt_mem_Onchip_SRAM+0xf8001b10>
    31cc:	9080004c 	andi	r2,r18,1
    31d0:	1000941e 	bne	r2,zero,3424 <___svfprintf_internal_r+0x201c>
    31d4:	d8802117 	ldw	r2,132(sp)
    31d8:	1405c83a 	sub	r2,r2,r16
    31dc:	d8803315 	stw	r2,204(sp)
    31e0:	b441151e 	bne	r22,r17,3638 <___svfprintf_internal_r+0x2230>
    31e4:	dd802617 	ldw	r22,152(sp)
    31e8:	00bfff44 	movi	r2,-3
    31ec:	b0801a16 	blt	r22,r2,3258 <___svfprintf_internal_r+0x1e50>
    31f0:	d9402a17 	ldw	r5,168(sp)
    31f4:	2d801816 	blt	r5,r22,3258 <___svfprintf_internal_r+0x1e50>
    31f8:	dd803215 	stw	r22,200(sp)
    31fc:	003f3a06 	br	2ee8 <__alt_mem_Onchip_SRAM+0xf8002ee8>
    3200:	1025883a 	mov	r18,r2
    3204:	0039883a 	mov	fp,zero
    3208:	00800084 	movi	r2,2
    320c:	003fd606 	br	3168 <__alt_mem_Onchip_SRAM+0xf8003168>
    3210:	9080004c 	andi	r2,r18,1
    3214:	103f191e 	bne	r2,zero,2e7c <__alt_mem_Onchip_SRAM+0xf8002e7c>
    3218:	d8802117 	ldw	r2,132(sp)
    321c:	003f2806 	br	2ec0 <__alt_mem_Onchip_SRAM+0xf8002ec0>
    3220:	01000074 	movhi	r4,1
    3224:	211ac184 	addi	r4,r4,27398
    3228:	d9002c15 	stw	r4,176(sp)
    322c:	003c7c06 	br	2420 <__alt_mem_Onchip_SRAM+0xf8002420>
    3230:	e005883a 	mov	r2,fp
    3234:	003f2206 	br	2ec0 <__alt_mem_Onchip_SRAM+0xf8002ec0>
    3238:	d9002a17 	ldw	r4,168(sp)
    323c:	df002783 	ldbu	fp,158(sp)
    3240:	dd002e15 	stw	r20,184(sp)
    3244:	d9002915 	stw	r4,164(sp)
    3248:	d9002b15 	stw	r4,172(sp)
    324c:	d8002a15 	stw	zero,168(sp)
    3250:	d8003215 	stw	zero,200(sp)
    3254:	003a2a06 	br	1b00 <__alt_mem_Onchip_SRAM+0xf8001b00>
    3258:	8c7fff84 	addi	r17,r17,-2
    325c:	b5bfffc4 	addi	r22,r22,-1
    3260:	dd802615 	stw	r22,152(sp)
    3264:	dc4022c5 	stb	r17,139(sp)
    3268:	b000c316 	blt	r22,zero,3578 <___svfprintf_internal_r+0x2170>
    326c:	00800ac4 	movi	r2,43
    3270:	d8802305 	stb	r2,140(sp)
    3274:	00800244 	movi	r2,9
    3278:	15806e16 	blt	r2,r22,3434 <___svfprintf_internal_r+0x202c>
    327c:	00800c04 	movi	r2,48
    3280:	b5800c04 	addi	r22,r22,48
    3284:	d8802345 	stb	r2,141(sp)
    3288:	dd802385 	stb	r22,142(sp)
    328c:	d88023c4 	addi	r2,sp,143
    3290:	df0022c4 	addi	fp,sp,139
    3294:	d8c03317 	ldw	r3,204(sp)
    3298:	1739c83a 	sub	fp,r2,fp
    329c:	d9003317 	ldw	r4,204(sp)
    32a0:	e0c7883a 	add	r3,fp,r3
    32a4:	df003b15 	stw	fp,236(sp)
    32a8:	d8c02b15 	stw	r3,172(sp)
    32ac:	00800044 	movi	r2,1
    32b0:	1100b70e 	bge	r2,r4,3590 <___svfprintf_internal_r+0x2188>
    32b4:	d8c02b17 	ldw	r3,172(sp)
    32b8:	18c00044 	addi	r3,r3,1
    32bc:	d8c02b15 	stw	r3,172(sp)
    32c0:	1805883a 	mov	r2,r3
    32c4:	1800b016 	blt	r3,zero,3588 <___svfprintf_internal_r+0x2180>
    32c8:	d8003215 	stw	zero,200(sp)
    32cc:	003f1006 	br	2f10 <__alt_mem_Onchip_SRAM+0xf8002f10>
    32d0:	d8802a17 	ldw	r2,168(sp)
    32d4:	103ec71e 	bne	r2,zero,2df4 <__alt_mem_Onchip_SRAM+0xf8002df4>
    32d8:	dc002a15 	stw	r16,168(sp)
    32dc:	003ec506 	br	2df4 <__alt_mem_Onchip_SRAM+0xf8002df4>
    32e0:	d9402d17 	ldw	r5,180(sp)
    32e4:	d9801e04 	addi	r6,sp,120
    32e8:	9809883a 	mov	r4,r19
    32ec:	000afbc0 	call	afbc <__ssprint_r>
    32f0:	10392c1e 	bne	r2,zero,17a4 <__alt_mem_Onchip_SRAM+0xf80017a4>
    32f4:	dc402617 	ldw	r17,152(sp)
    32f8:	d8c02017 	ldw	r3,128(sp)
    32fc:	d8801f17 	ldw	r2,124(sp)
    3300:	da000404 	addi	r8,sp,16
    3304:	003e7706 	br	2ce4 <__alt_mem_Onchip_SRAM+0xf8002ce4>
    3308:	182f883a 	mov	r23,r3
    330c:	d8002a15 	stw	zero,168(sp)
    3310:	00389306 	br	1560 <__alt_mem_Onchip_SRAM+0xf8001560>
    3314:	d8c02a17 	ldw	r3,168(sp)
    3318:	d8802104 	addi	r2,sp,132
    331c:	d8800315 	stw	r2,12(sp)
    3320:	d9403617 	ldw	r5,216(sp)
    3324:	d8802504 	addi	r2,sp,148
    3328:	d8800215 	stw	r2,8(sp)
    332c:	d8802604 	addi	r2,sp,152
    3330:	d8c00015 	stw	r3,0(sp)
    3334:	9809883a 	mov	r4,r19
    3338:	d8800115 	stw	r2,4(sp)
    333c:	01c000c4 	movi	r7,3
    3340:	a00d883a 	mov	r6,r20
    3344:	da003e15 	stw	r8,248(sp)
    3348:	0005e440 	call	5e44 <_dtoa_r>
    334c:	d9002a17 	ldw	r4,168(sp)
    3350:	da003e17 	ldw	r8,248(sp)
    3354:	1021883a 	mov	r16,r2
    3358:	1139883a 	add	fp,r2,r4
    335c:	2007883a 	mov	r3,r4
    3360:	81000007 	ldb	r4,0(r16)
    3364:	00800c04 	movi	r2,48
    3368:	20806f26 	beq	r4,r2,3528 <___svfprintf_internal_r+0x2120>
    336c:	d8c02617 	ldw	r3,152(sp)
    3370:	e0f9883a 	add	fp,fp,r3
    3374:	003ec206 	br	2e80 <__alt_mem_Onchip_SRAM+0xf8002e80>
    3378:	00c00b44 	movi	r3,45
    337c:	2520003c 	xorhi	r20,r4,32768
    3380:	d8c02905 	stb	r3,164(sp)
    3384:	003ea106 	br	2e0c <__alt_mem_Onchip_SRAM+0xf8002e0c>
    3388:	d8c03217 	ldw	r3,200(sp)
    338c:	00c0890e 	bge	zero,r3,35b4 <___svfprintf_internal_r+0x21ac>
    3390:	00800044 	movi	r2,1
    3394:	d9003317 	ldw	r4,204(sp)
    3398:	1105883a 	add	r2,r2,r4
    339c:	d8802b15 	stw	r2,172(sp)
    33a0:	10005f16 	blt	r2,zero,3520 <___svfprintf_internal_r+0x2118>
    33a4:	044019c4 	movi	r17,103
    33a8:	003ed906 	br	2f10 <__alt_mem_Onchip_SRAM+0xf8002f10>
    33ac:	d9002a17 	ldw	r4,168(sp)
    33b0:	20c00044 	addi	r3,r4,1
    33b4:	003e9c06 	br	2e28 <__alt_mem_Onchip_SRAM+0xf8002e28>
    33b8:	d9002a17 	ldw	r4,168(sp)
    33bc:	00c0680e 	bge	zero,r3,3560 <___svfprintf_internal_r+0x2158>
    33c0:	2000461e 	bne	r4,zero,34dc <___svfprintf_internal_r+0x20d4>
    33c4:	9480004c 	andi	r18,r18,1
    33c8:	9000441e 	bne	r18,zero,34dc <___svfprintf_internal_r+0x20d4>
    33cc:	1805883a 	mov	r2,r3
    33d0:	1800a116 	blt	r3,zero,3658 <___svfprintf_internal_r+0x2250>
    33d4:	d8c03217 	ldw	r3,200(sp)
    33d8:	d8c02b15 	stw	r3,172(sp)
    33dc:	003ecc06 	br	2f10 <__alt_mem_Onchip_SRAM+0xf8002f10>
    33e0:	d9402a17 	ldw	r5,168(sp)
    33e4:	d8802104 	addi	r2,sp,132
    33e8:	d8800315 	stw	r2,12(sp)
    33ec:	d9400015 	stw	r5,0(sp)
    33f0:	d8802504 	addi	r2,sp,148
    33f4:	d9403617 	ldw	r5,216(sp)
    33f8:	d8800215 	stw	r2,8(sp)
    33fc:	d8802604 	addi	r2,sp,152
    3400:	d8800115 	stw	r2,4(sp)
    3404:	01c000c4 	movi	r7,3
    3408:	a00d883a 	mov	r6,r20
    340c:	9809883a 	mov	r4,r19
    3410:	da003e15 	stw	r8,248(sp)
    3414:	0005e440 	call	5e44 <_dtoa_r>
    3418:	d8c02a17 	ldw	r3,168(sp)
    341c:	da003e17 	ldw	r8,248(sp)
    3420:	1021883a 	mov	r16,r2
    3424:	00801184 	movi	r2,70
    3428:	80f9883a 	add	fp,r16,r3
    342c:	88bfcc26 	beq	r17,r2,3360 <__alt_mem_Onchip_SRAM+0xf8003360>
    3430:	003e9306 	br	2e80 <__alt_mem_Onchip_SRAM+0xf8002e80>
    3434:	df0022c4 	addi	fp,sp,139
    3438:	dc002a15 	stw	r16,168(sp)
    343c:	9829883a 	mov	r20,r19
    3440:	e021883a 	mov	r16,fp
    3444:	4027883a 	mov	r19,r8
    3448:	b009883a 	mov	r4,r22
    344c:	01400284 	movi	r5,10
    3450:	0000d800 	call	d80 <__modsi3>
    3454:	10800c04 	addi	r2,r2,48
    3458:	843fffc4 	addi	r16,r16,-1
    345c:	b009883a 	mov	r4,r22
    3460:	01400284 	movi	r5,10
    3464:	80800005 	stb	r2,0(r16)
    3468:	0000cfc0 	call	cfc <__divsi3>
    346c:	102d883a 	mov	r22,r2
    3470:	00800244 	movi	r2,9
    3474:	15bff416 	blt	r2,r22,3448 <__alt_mem_Onchip_SRAM+0xf8003448>
    3478:	9811883a 	mov	r8,r19
    347c:	b0800c04 	addi	r2,r22,48
    3480:	a027883a 	mov	r19,r20
    3484:	8029883a 	mov	r20,r16
    3488:	a17fffc4 	addi	r5,r20,-1
    348c:	a0bfffc5 	stb	r2,-1(r20)
    3490:	dc002a17 	ldw	r16,168(sp)
    3494:	2f00782e 	bgeu	r5,fp,3678 <___svfprintf_internal_r+0x2270>
    3498:	d9c02384 	addi	r7,sp,142
    349c:	3d0fc83a 	sub	r7,r7,r20
    34a0:	d9002344 	addi	r4,sp,141
    34a4:	e1cf883a 	add	r7,fp,r7
    34a8:	00000106 	br	34b0 <___svfprintf_internal_r+0x20a8>
    34ac:	28800003 	ldbu	r2,0(r5)
    34b0:	20800005 	stb	r2,0(r4)
    34b4:	21000044 	addi	r4,r4,1
    34b8:	29400044 	addi	r5,r5,1
    34bc:	21fffb1e 	bne	r4,r7,34ac <__alt_mem_Onchip_SRAM+0xf80034ac>
    34c0:	d8802304 	addi	r2,sp,140
    34c4:	1505c83a 	sub	r2,r2,r20
    34c8:	d8c02344 	addi	r3,sp,141
    34cc:	1885883a 	add	r2,r3,r2
    34d0:	003f7006 	br	3294 <__alt_mem_Onchip_SRAM+0xf8003294>
    34d4:	0005883a 	mov	r2,zero
    34d8:	003f0b06 	br	3108 <__alt_mem_Onchip_SRAM+0xf8003108>
    34dc:	d9002a17 	ldw	r4,168(sp)
    34e0:	d8c03217 	ldw	r3,200(sp)
    34e4:	20800044 	addi	r2,r4,1
    34e8:	1885883a 	add	r2,r3,r2
    34ec:	d8802b15 	stw	r2,172(sp)
    34f0:	103e870e 	bge	r2,zero,2f10 <__alt_mem_Onchip_SRAM+0xf8002f10>
    34f4:	0005883a 	mov	r2,zero
    34f8:	003e8506 	br	2f10 <__alt_mem_Onchip_SRAM+0xf8002f10>
    34fc:	01000074 	movhi	r4,1
    3500:	211ac184 	addi	r4,r4,27398
    3504:	d9002c15 	stw	r4,176(sp)
    3508:	003cc506 	br	2820 <__alt_mem_Onchip_SRAM+0xf8002820>
    350c:	d8c03217 	ldw	r3,200(sp)
    3510:	18c00044 	addi	r3,r3,1
    3514:	d8c02b15 	stw	r3,172(sp)
    3518:	1805883a 	mov	r2,r3
    351c:	183fa10e 	bge	r3,zero,33a4 <__alt_mem_Onchip_SRAM+0xf80033a4>
    3520:	0005883a 	mov	r2,zero
    3524:	003f9f06 	br	33a4 <__alt_mem_Onchip_SRAM+0xf80033a4>
    3528:	d9003617 	ldw	r4,216(sp)
    352c:	000d883a 	mov	r6,zero
    3530:	000f883a 	mov	r7,zero
    3534:	a00b883a 	mov	r5,r20
    3538:	d8c03d15 	stw	r3,244(sp)
    353c:	da003e15 	stw	r8,248(sp)
    3540:	00104b80 	call	104b8 <__eqdf2>
    3544:	d8c03d17 	ldw	r3,244(sp)
    3548:	da003e17 	ldw	r8,248(sp)
    354c:	103f8726 	beq	r2,zero,336c <__alt_mem_Onchip_SRAM+0xf800336c>
    3550:	00800044 	movi	r2,1
    3554:	10c7c83a 	sub	r3,r2,r3
    3558:	d8c02615 	stw	r3,152(sp)
    355c:	003f8406 	br	3370 <__alt_mem_Onchip_SRAM+0xf8003370>
    3560:	20000e1e 	bne	r4,zero,359c <___svfprintf_internal_r+0x2194>
    3564:	9480004c 	andi	r18,r18,1
    3568:	90000c1e 	bne	r18,zero,359c <___svfprintf_internal_r+0x2194>
    356c:	00800044 	movi	r2,1
    3570:	d8802b15 	stw	r2,172(sp)
    3574:	003e6606 	br	2f10 <__alt_mem_Onchip_SRAM+0xf8002f10>
    3578:	00800b44 	movi	r2,45
    357c:	05adc83a 	sub	r22,zero,r22
    3580:	d8802305 	stb	r2,140(sp)
    3584:	003f3b06 	br	3274 <__alt_mem_Onchip_SRAM+0xf8003274>
    3588:	0005883a 	mov	r2,zero
    358c:	003f4e06 	br	32c8 <__alt_mem_Onchip_SRAM+0xf80032c8>
    3590:	90a4703a 	and	r18,r18,r2
    3594:	903f4a26 	beq	r18,zero,32c0 <__alt_mem_Onchip_SRAM+0xf80032c0>
    3598:	003f4606 	br	32b4 <__alt_mem_Onchip_SRAM+0xf80032b4>
    359c:	d8c02a17 	ldw	r3,168(sp)
    35a0:	18c00084 	addi	r3,r3,2
    35a4:	d8c02b15 	stw	r3,172(sp)
    35a8:	1805883a 	mov	r2,r3
    35ac:	183e580e 	bge	r3,zero,2f10 <__alt_mem_Onchip_SRAM+0xf8002f10>
    35b0:	003fd006 	br	34f4 <__alt_mem_Onchip_SRAM+0xf80034f4>
    35b4:	00800084 	movi	r2,2
    35b8:	10c5c83a 	sub	r2,r2,r3
    35bc:	003f7506 	br	3394 <__alt_mem_Onchip_SRAM+0xf8003394>
    35c0:	d9402e17 	ldw	r5,184(sp)
    35c4:	d9002e17 	ldw	r4,184(sp)
    35c8:	bc400043 	ldbu	r17,1(r23)
    35cc:	29400017 	ldw	r5,0(r5)
    35d0:	20800104 	addi	r2,r4,4
    35d4:	d8802e15 	stw	r2,184(sp)
    35d8:	d9402a15 	stw	r5,168(sp)
    35dc:	182f883a 	mov	r23,r3
    35e0:	283df10e 	bge	r5,zero,2da8 <__alt_mem_Onchip_SRAM+0xf8002da8>
    35e4:	8c403fcc 	andi	r17,r17,255
    35e8:	017fffc4 	movi	r5,-1
    35ec:	8c40201c 	xori	r17,r17,128
    35f0:	d9402a15 	stw	r5,168(sp)
    35f4:	8c7fe004 	addi	r17,r17,-128
    35f8:	0037d806 	br	155c <__alt_mem_Onchip_SRAM+0xf800155c>
    35fc:	9080004c 	andi	r2,r18,1
    3600:	0039883a 	mov	fp,zero
    3604:	10000726 	beq	r2,zero,3624 <___svfprintf_internal_r+0x221c>
    3608:	d8c02817 	ldw	r3,160(sp)
    360c:	dc001dc4 	addi	r16,sp,119
    3610:	00800c04 	movi	r2,48
    3614:	1c07c83a 	sub	r3,r3,r16
    3618:	d8801dc5 	stb	r2,119(sp)
    361c:	d8c02b15 	stw	r3,172(sp)
    3620:	00393106 	br	1ae8 <__alt_mem_Onchip_SRAM+0xf8001ae8>
    3624:	d8002b15 	stw	zero,172(sp)
    3628:	dc001e04 	addi	r16,sp,120
    362c:	00392e06 	br	1ae8 <__alt_mem_Onchip_SRAM+0xf8001ae8>
    3630:	0005883a 	mov	r2,zero
    3634:	003e3306 	br	2f04 <__alt_mem_Onchip_SRAM+0xf8002f04>
    3638:	dd802617 	ldw	r22,152(sp)
    363c:	003f0706 	br	325c <__alt_mem_Onchip_SRAM+0xf800325c>
    3640:	d8c02b03 	ldbu	r3,172(sp)
    3644:	d8c02785 	stb	r3,158(sp)
    3648:	003a3506 	br	1f20 <__alt_mem_Onchip_SRAM+0xf8001f20>
    364c:	d8c02b03 	ldbu	r3,172(sp)
    3650:	d8c02785 	stb	r3,158(sp)
    3654:	003a1706 	br	1eb4 <__alt_mem_Onchip_SRAM+0xf8001eb4>
    3658:	0005883a 	mov	r2,zero
    365c:	003f5d06 	br	33d4 <__alt_mem_Onchip_SRAM+0xf80033d4>
    3660:	d8c02b03 	ldbu	r3,172(sp)
    3664:	d8c02785 	stb	r3,158(sp)
    3668:	0038f306 	br	1a38 <__alt_mem_Onchip_SRAM+0xf8001a38>
    366c:	d8c02b03 	ldbu	r3,172(sp)
    3670:	d8c02785 	stb	r3,158(sp)
    3674:	0038be06 	br	1970 <__alt_mem_Onchip_SRAM+0xf8001970>
    3678:	d8802344 	addi	r2,sp,141
    367c:	003f0506 	br	3294 <__alt_mem_Onchip_SRAM+0xf8003294>
    3680:	d8c02b03 	ldbu	r3,172(sp)
    3684:	d8c02785 	stb	r3,158(sp)
    3688:	00388b06 	br	18b8 <__alt_mem_Onchip_SRAM+0xf80018b8>
    368c:	d8c02b03 	ldbu	r3,172(sp)
    3690:	d8c02785 	stb	r3,158(sp)
    3694:	003ad706 	br	21f4 <__alt_mem_Onchip_SRAM+0xf80021f4>
    3698:	d9403917 	ldw	r5,228(sp)
    369c:	00800304 	movi	r2,12
    36a0:	28800015 	stw	r2,0(r5)
    36a4:	00bfffc4 	movi	r2,-1
    36a8:	00384306 	br	17b8 <__alt_mem_Onchip_SRAM+0xf80017b8>
    36ac:	d8c02b03 	ldbu	r3,172(sp)
    36b0:	d8c02785 	stb	r3,158(sp)
    36b4:	003ab606 	br	2190 <__alt_mem_Onchip_SRAM+0xf8002190>
    36b8:	d8c02b03 	ldbu	r3,172(sp)
    36bc:	d8c02785 	stb	r3,158(sp)
    36c0:	003a8906 	br	20e8 <__alt_mem_Onchip_SRAM+0xf80020e8>

000036c4 <time>:
    36c4:	008000b4 	movhi	r2,2
    36c8:	defffc04 	addi	sp,sp,-16
    36cc:	10a23704 	addi	r2,r2,-30500
    36d0:	dc000215 	stw	r16,8(sp)
    36d4:	2021883a 	mov	r16,r4
    36d8:	11000017 	ldw	r4,0(r2)
    36dc:	000d883a 	mov	r6,zero
    36e0:	d80b883a 	mov	r5,sp
    36e4:	dfc00315 	stw	ra,12(sp)
    36e8:	00085a80 	call	85a8 <_gettimeofday_r>
    36ec:	10000716 	blt	r2,zero,370c <time+0x48>
    36f0:	d8800017 	ldw	r2,0(sp)
    36f4:	80000126 	beq	r16,zero,36fc <time+0x38>
    36f8:	80800015 	stw	r2,0(r16)
    36fc:	dfc00317 	ldw	ra,12(sp)
    3700:	dc000217 	ldw	r16,8(sp)
    3704:	dec00404 	addi	sp,sp,16
    3708:	f800283a 	ret
    370c:	00bfffc4 	movi	r2,-1
    3710:	003ffa06 	br	36fc <__alt_mem_Onchip_SRAM+0xf80036fc>

00003714 <___vfprintf_internal_r>:
    3714:	deffb804 	addi	sp,sp,-288
    3718:	dfc04715 	stw	ra,284(sp)
    371c:	ddc04515 	stw	r23,276(sp)
    3720:	dd404315 	stw	r21,268(sp)
    3724:	d9002d15 	stw	r4,180(sp)
    3728:	282f883a 	mov	r23,r5
    372c:	302b883a 	mov	r21,r6
    3730:	d9c02e15 	stw	r7,184(sp)
    3734:	df004615 	stw	fp,280(sp)
    3738:	dd804415 	stw	r22,272(sp)
    373c:	dd004215 	stw	r20,264(sp)
    3740:	dcc04115 	stw	r19,260(sp)
    3744:	dc804015 	stw	r18,256(sp)
    3748:	dc403f15 	stw	r17,252(sp)
    374c:	dc003e15 	stw	r16,248(sp)
    3750:	00086b00 	call	86b0 <_localeconv_r>
    3754:	10800017 	ldw	r2,0(r2)
    3758:	1009883a 	mov	r4,r2
    375c:	d8803415 	stw	r2,208(sp)
    3760:	00013700 	call	1370 <strlen>
    3764:	d8803715 	stw	r2,220(sp)
    3768:	d8802d17 	ldw	r2,180(sp)
    376c:	10000226 	beq	r2,zero,3778 <___vfprintf_internal_r+0x64>
    3770:	10800e17 	ldw	r2,56(r2)
    3774:	1000fb26 	beq	r2,zero,3b64 <___vfprintf_internal_r+0x450>
    3778:	b880030b 	ldhu	r2,12(r23)
    377c:	10c8000c 	andi	r3,r2,8192
    3780:	1800061e 	bne	r3,zero,379c <___vfprintf_internal_r+0x88>
    3784:	b9001917 	ldw	r4,100(r23)
    3788:	00f7ffc4 	movi	r3,-8193
    378c:	10880014 	ori	r2,r2,8192
    3790:	20c6703a 	and	r3,r4,r3
    3794:	b880030d 	sth	r2,12(r23)
    3798:	b8c01915 	stw	r3,100(r23)
    379c:	10c0020c 	andi	r3,r2,8
    37a0:	1800c326 	beq	r3,zero,3ab0 <___vfprintf_internal_r+0x39c>
    37a4:	b8c00417 	ldw	r3,16(r23)
    37a8:	1800c126 	beq	r3,zero,3ab0 <___vfprintf_internal_r+0x39c>
    37ac:	1080068c 	andi	r2,r2,26
    37b0:	00c00284 	movi	r3,10
    37b4:	10c0c626 	beq	r2,r3,3ad0 <___vfprintf_internal_r+0x3bc>
    37b8:	d8c00404 	addi	r3,sp,16
    37bc:	05000074 	movhi	r20,1
    37c0:	d9001e04 	addi	r4,sp,120
    37c4:	a51ac984 	addi	r20,r20,27430
    37c8:	d8c01e15 	stw	r3,120(sp)
    37cc:	d8002015 	stw	zero,128(sp)
    37d0:	d8001f15 	stw	zero,124(sp)
    37d4:	d8003315 	stw	zero,204(sp)
    37d8:	d8003615 	stw	zero,216(sp)
    37dc:	d8003815 	stw	zero,224(sp)
    37e0:	1811883a 	mov	r8,r3
    37e4:	d8003915 	stw	zero,228(sp)
    37e8:	d8003a15 	stw	zero,232(sp)
    37ec:	d8002f15 	stw	zero,188(sp)
    37f0:	d9002815 	stw	r4,160(sp)
    37f4:	a8800007 	ldb	r2,0(r21)
    37f8:	10028b26 	beq	r2,zero,4228 <___vfprintf_internal_r+0xb14>
    37fc:	00c00944 	movi	r3,37
    3800:	a823883a 	mov	r17,r21
    3804:	10c0021e 	bne	r2,r3,3810 <___vfprintf_internal_r+0xfc>
    3808:	00001406 	br	385c <___vfprintf_internal_r+0x148>
    380c:	10c00326 	beq	r2,r3,381c <___vfprintf_internal_r+0x108>
    3810:	8c400044 	addi	r17,r17,1
    3814:	88800007 	ldb	r2,0(r17)
    3818:	103ffc1e 	bne	r2,zero,380c <__alt_mem_Onchip_SRAM+0xf800380c>
    381c:	8d61c83a 	sub	r16,r17,r21
    3820:	80000e26 	beq	r16,zero,385c <___vfprintf_internal_r+0x148>
    3824:	d8c02017 	ldw	r3,128(sp)
    3828:	d8801f17 	ldw	r2,124(sp)
    382c:	45400015 	stw	r21,0(r8)
    3830:	1c07883a 	add	r3,r3,r16
    3834:	10800044 	addi	r2,r2,1
    3838:	d8c02015 	stw	r3,128(sp)
    383c:	44000115 	stw	r16,4(r8)
    3840:	d8801f15 	stw	r2,124(sp)
    3844:	00c001c4 	movi	r3,7
    3848:	1880a916 	blt	r3,r2,3af0 <___vfprintf_internal_r+0x3dc>
    384c:	42000204 	addi	r8,r8,8
    3850:	d9402f17 	ldw	r5,188(sp)
    3854:	2c0b883a 	add	r5,r5,r16
    3858:	d9402f15 	stw	r5,188(sp)
    385c:	88800007 	ldb	r2,0(r17)
    3860:	1000aa26 	beq	r2,zero,3b0c <___vfprintf_internal_r+0x3f8>
    3864:	8d400044 	addi	r21,r17,1
    3868:	8c400047 	ldb	r17,1(r17)
    386c:	0021883a 	mov	r16,zero
    3870:	00bfffc4 	movi	r2,-1
    3874:	0025883a 	mov	r18,zero
    3878:	dc002905 	stb	r16,164(sp)
    387c:	d8002785 	stb	zero,158(sp)
    3880:	d8002b05 	stb	zero,172(sp)
    3884:	d8802a15 	stw	r2,168(sp)
    3888:	d8003115 	stw	zero,196(sp)
    388c:	04c01604 	movi	r19,88
    3890:	05800244 	movi	r22,9
    3894:	9021883a 	mov	r16,r18
    3898:	4039883a 	mov	fp,r8
    389c:	ad400044 	addi	r21,r21,1
    38a0:	88bff804 	addi	r2,r17,-32
    38a4:	98833236 	bltu	r19,r2,4570 <___vfprintf_internal_r+0xe5c>
    38a8:	100490ba 	slli	r2,r2,2
    38ac:	00c00034 	movhi	r3,0
    38b0:	18ce3004 	addi	r3,r3,14528
    38b4:	10c5883a 	add	r2,r2,r3
    38b8:	10800017 	ldw	r2,0(r2)
    38bc:	1000683a 	jmp	r2
    38c0:	00004468 	cmpgeui	zero,zero,273
    38c4:	00004570 	cmpltui	zero,zero,277
    38c8:	00004570 	cmpltui	zero,zero,277
    38cc:	00004488 	cmpgei	zero,zero,274
    38d0:	00004570 	cmpltui	zero,zero,277
    38d4:	00004570 	cmpltui	zero,zero,277
    38d8:	00004570 	cmpltui	zero,zero,277
    38dc:	00004570 	cmpltui	zero,zero,277
    38e0:	00004570 	cmpltui	zero,zero,277
    38e4:	00004570 	cmpltui	zero,zero,277
    38e8:	00003b70 	cmpltui	zero,zero,237
    38ec:	00004378 	rdprs	zero,zero,269
    38f0:	00004570 	cmpltui	zero,zero,277
    38f4:	00003a34 	movhi	zero,232
    38f8:	00003b94 	movui	zero,238
    38fc:	00004570 	cmpltui	zero,zero,277
    3900:	00003be4 	muli	zero,zero,239
    3904:	00003bf0 	cmpltui	zero,zero,239
    3908:	00003bf0 	cmpltui	zero,zero,239
    390c:	00003bf0 	cmpltui	zero,zero,239
    3910:	00003bf0 	cmpltui	zero,zero,239
    3914:	00003bf0 	cmpltui	zero,zero,239
    3918:	00003bf0 	cmpltui	zero,zero,239
    391c:	00003bf0 	cmpltui	zero,zero,239
    3920:	00003bf0 	cmpltui	zero,zero,239
    3924:	00003bf0 	cmpltui	zero,zero,239
    3928:	00004570 	cmpltui	zero,zero,277
    392c:	00004570 	cmpltui	zero,zero,277
    3930:	00004570 	cmpltui	zero,zero,277
    3934:	00004570 	cmpltui	zero,zero,277
    3938:	00004570 	cmpltui	zero,zero,277
    393c:	00004570 	cmpltui	zero,zero,277
    3940:	00004570 	cmpltui	zero,zero,277
    3944:	00004570 	cmpltui	zero,zero,277
    3948:	00004570 	cmpltui	zero,zero,277
    394c:	00004570 	cmpltui	zero,zero,277
    3950:	00003c2c 	andhi	zero,zero,240
    3954:	00003cf4 	movhi	zero,243
    3958:	00004570 	cmpltui	zero,zero,277
    395c:	00003cf4 	movhi	zero,243
    3960:	00004570 	cmpltui	zero,zero,277
    3964:	00004570 	cmpltui	zero,zero,277
    3968:	00004570 	cmpltui	zero,zero,277
    396c:	00004570 	cmpltui	zero,zero,277
    3970:	00003da0 	cmpeqi	zero,zero,246
    3974:	00004570 	cmpltui	zero,zero,277
    3978:	00004570 	cmpltui	zero,zero,277
    397c:	00003dac 	andhi	zero,zero,246
    3980:	00004570 	cmpltui	zero,zero,277
    3984:	00004570 	cmpltui	zero,zero,277
    3988:	00004570 	cmpltui	zero,zero,277
    398c:	00004570 	cmpltui	zero,zero,277
    3990:	00004570 	cmpltui	zero,zero,277
    3994:	00004230 	cmpltui	zero,zero,264
    3998:	00004570 	cmpltui	zero,zero,277
    399c:	00004570 	cmpltui	zero,zero,277
    39a0:	0000429c 	xori	zero,zero,266
    39a4:	00004570 	cmpltui	zero,zero,277
    39a8:	00004570 	cmpltui	zero,zero,277
    39ac:	00004570 	cmpltui	zero,zero,277
    39b0:	00004570 	cmpltui	zero,zero,277
    39b4:	00004570 	cmpltui	zero,zero,277
    39b8:	00004570 	cmpltui	zero,zero,277
    39bc:	00004570 	cmpltui	zero,zero,277
    39c0:	00004570 	cmpltui	zero,zero,277
    39c4:	00004570 	cmpltui	zero,zero,277
    39c8:	00004570 	cmpltui	zero,zero,277
    39cc:	00004514 	movui	zero,276
    39d0:	00004494 	movui	zero,274
    39d4:	00003cf4 	movhi	zero,243
    39d8:	00003cf4 	movhi	zero,243
    39dc:	00003cf4 	movhi	zero,243
    39e0:	000044b4 	movhi	zero,274
    39e4:	00004494 	movui	zero,274
    39e8:	00004570 	cmpltui	zero,zero,277
    39ec:	00004570 	cmpltui	zero,zero,277
    39f0:	000044c0 	call	44c <ASCII_to_7Seg+0x78>
    39f4:	00004570 	cmpltui	zero,zero,277
    39f8:	000044d4 	movui	zero,275
    39fc:	00004358 	cmpnei	zero,zero,269
    3a00:	00003a40 	call	3a4 <clearSevenSegs>
    3a04:	00004390 	cmplti	zero,zero,270
    3a08:	00004570 	cmpltui	zero,zero,277
    3a0c:	0000439c 	xori	zero,zero,270
    3a10:	00004570 	cmpltui	zero,zero,277
    3a14:	00004400 	call	440 <ASCII_to_7Seg+0x6c>
    3a18:	00004570 	cmpltui	zero,zero,277
    3a1c:	00004570 	cmpltui	zero,zero,277
    3a20:	00004420 	cmpeqi	zero,zero,272
    3a24:	d8c03117 	ldw	r3,196(sp)
    3a28:	d8802e15 	stw	r2,184(sp)
    3a2c:	00c7c83a 	sub	r3,zero,r3
    3a30:	d8c03115 	stw	r3,196(sp)
    3a34:	84000114 	ori	r16,r16,4
    3a38:	ac400007 	ldb	r17,0(r21)
    3a3c:	003f9706 	br	389c <__alt_mem_Onchip_SRAM+0xf800389c>
    3a40:	00800c04 	movi	r2,48
    3a44:	d8802705 	stb	r2,156(sp)
    3a48:	00801e04 	movi	r2,120
    3a4c:	d8802745 	stb	r2,157(sp)
    3a50:	d9002a17 	ldw	r4,168(sp)
    3a54:	d8802e17 	ldw	r2,184(sp)
    3a58:	d8002785 	stb	zero,158(sp)
    3a5c:	e011883a 	mov	r8,fp
    3a60:	10c00104 	addi	r3,r2,4
    3a64:	14c00017 	ldw	r19,0(r2)
    3a68:	002d883a 	mov	r22,zero
    3a6c:	80800094 	ori	r2,r16,2
    3a70:	2002ca16 	blt	r4,zero,459c <___vfprintf_internal_r+0xe88>
    3a74:	00bfdfc4 	movi	r2,-129
    3a78:	80a4703a 	and	r18,r16,r2
    3a7c:	d8c02e15 	stw	r3,184(sp)
    3a80:	94800094 	ori	r18,r18,2
    3a84:	9802b41e 	bne	r19,zero,4558 <___vfprintf_internal_r+0xe44>
    3a88:	01400074 	movhi	r5,1
    3a8c:	295aba04 	addi	r5,r5,27368
    3a90:	d9403915 	stw	r5,228(sp)
    3a94:	04401e04 	movi	r17,120
    3a98:	d8802a17 	ldw	r2,168(sp)
    3a9c:	0039883a 	mov	fp,zero
    3aa0:	1001fa26 	beq	r2,zero,428c <___vfprintf_internal_r+0xb78>
    3aa4:	0027883a 	mov	r19,zero
    3aa8:	002d883a 	mov	r22,zero
    3aac:	00021906 	br	4314 <___vfprintf_internal_r+0xc00>
    3ab0:	d9002d17 	ldw	r4,180(sp)
    3ab4:	b80b883a 	mov	r5,r23
    3ab8:	0005ac80 	call	5ac8 <__swsetup_r>
    3abc:	1005dc1e 	bne	r2,zero,5230 <___vfprintf_internal_r+0x1b1c>
    3ac0:	b880030b 	ldhu	r2,12(r23)
    3ac4:	00c00284 	movi	r3,10
    3ac8:	1080068c 	andi	r2,r2,26
    3acc:	10ff3a1e 	bne	r2,r3,37b8 <__alt_mem_Onchip_SRAM+0xf80037b8>
    3ad0:	b880038f 	ldh	r2,14(r23)
    3ad4:	103f3816 	blt	r2,zero,37b8 <__alt_mem_Onchip_SRAM+0xf80037b8>
    3ad8:	d9c02e17 	ldw	r7,184(sp)
    3adc:	d9002d17 	ldw	r4,180(sp)
    3ae0:	a80d883a 	mov	r6,r21
    3ae4:	b80b883a 	mov	r5,r23
    3ae8:	0005a0c0 	call	5a0c <__sbprintf>
    3aec:	00001106 	br	3b34 <___vfprintf_internal_r+0x420>
    3af0:	d9002d17 	ldw	r4,180(sp)
    3af4:	d9801e04 	addi	r6,sp,120
    3af8:	b80b883a 	mov	r5,r23
    3afc:	000c6280 	call	c628 <__sprint_r>
    3b00:	1000081e 	bne	r2,zero,3b24 <___vfprintf_internal_r+0x410>
    3b04:	da000404 	addi	r8,sp,16
    3b08:	003f5106 	br	3850 <__alt_mem_Onchip_SRAM+0xf8003850>
    3b0c:	d8802017 	ldw	r2,128(sp)
    3b10:	10000426 	beq	r2,zero,3b24 <___vfprintf_internal_r+0x410>
    3b14:	d9002d17 	ldw	r4,180(sp)
    3b18:	d9801e04 	addi	r6,sp,120
    3b1c:	b80b883a 	mov	r5,r23
    3b20:	000c6280 	call	c628 <__sprint_r>
    3b24:	b880030b 	ldhu	r2,12(r23)
    3b28:	1080100c 	andi	r2,r2,64
    3b2c:	1005c01e 	bne	r2,zero,5230 <___vfprintf_internal_r+0x1b1c>
    3b30:	d8802f17 	ldw	r2,188(sp)
    3b34:	dfc04717 	ldw	ra,284(sp)
    3b38:	df004617 	ldw	fp,280(sp)
    3b3c:	ddc04517 	ldw	r23,276(sp)
    3b40:	dd804417 	ldw	r22,272(sp)
    3b44:	dd404317 	ldw	r21,268(sp)
    3b48:	dd004217 	ldw	r20,264(sp)
    3b4c:	dcc04117 	ldw	r19,260(sp)
    3b50:	dc804017 	ldw	r18,256(sp)
    3b54:	dc403f17 	ldw	r17,252(sp)
    3b58:	dc003e17 	ldw	r16,248(sp)
    3b5c:	dec04804 	addi	sp,sp,288
    3b60:	f800283a 	ret
    3b64:	d9002d17 	ldw	r4,180(sp)
    3b68:	0007ad40 	call	7ad4 <__sinit>
    3b6c:	003f0206 	br	3778 <__alt_mem_Onchip_SRAM+0xf8003778>
    3b70:	d9002e17 	ldw	r4,184(sp)
    3b74:	d9402e17 	ldw	r5,184(sp)
    3b78:	21000017 	ldw	r4,0(r4)
    3b7c:	28800104 	addi	r2,r5,4
    3b80:	d9003115 	stw	r4,196(sp)
    3b84:	203fa716 	blt	r4,zero,3a24 <__alt_mem_Onchip_SRAM+0xf8003a24>
    3b88:	d8802e15 	stw	r2,184(sp)
    3b8c:	ac400007 	ldb	r17,0(r21)
    3b90:	003f4206 	br	389c <__alt_mem_Onchip_SRAM+0xf800389c>
    3b94:	ac400007 	ldb	r17,0(r21)
    3b98:	01000a84 	movi	r4,42
    3b9c:	a8c00044 	addi	r3,r21,1
    3ba0:	89075826 	beq	r17,r4,5904 <___vfprintf_internal_r+0x21f0>
    3ba4:	8cbff404 	addi	r18,r17,-48
    3ba8:	b486ae36 	bltu	r22,r18,5664 <___vfprintf_internal_r+0x1f50>
    3bac:	0009883a 	mov	r4,zero
    3bb0:	1823883a 	mov	r17,r3
    3bb4:	01400284 	movi	r5,10
    3bb8:	0000eb00 	call	eb0 <__mulsi3>
    3bbc:	88c00007 	ldb	r3,0(r17)
    3bc0:	1489883a 	add	r4,r2,r18
    3bc4:	8d400044 	addi	r21,r17,1
    3bc8:	1cbff404 	addi	r18,r3,-48
    3bcc:	a823883a 	mov	r17,r21
    3bd0:	b4bff82e 	bgeu	r22,r18,3bb4 <__alt_mem_Onchip_SRAM+0xf8003bb4>
    3bd4:	1823883a 	mov	r17,r3
    3bd8:	2005f616 	blt	r4,zero,53b4 <___vfprintf_internal_r+0x1ca0>
    3bdc:	d9002a15 	stw	r4,168(sp)
    3be0:	003f2f06 	br	38a0 <__alt_mem_Onchip_SRAM+0xf80038a0>
    3be4:	84002014 	ori	r16,r16,128
    3be8:	ac400007 	ldb	r17,0(r21)
    3bec:	003f2b06 	br	389c <__alt_mem_Onchip_SRAM+0xf800389c>
    3bf0:	8cbff404 	addi	r18,r17,-48
    3bf4:	d8003115 	stw	zero,196(sp)
    3bf8:	0009883a 	mov	r4,zero
    3bfc:	a823883a 	mov	r17,r21
    3c00:	01400284 	movi	r5,10
    3c04:	0000eb00 	call	eb0 <__mulsi3>
    3c08:	88c00007 	ldb	r3,0(r17)
    3c0c:	9089883a 	add	r4,r18,r2
    3c10:	ad400044 	addi	r21,r21,1
    3c14:	1cbff404 	addi	r18,r3,-48
    3c18:	a823883a 	mov	r17,r21
    3c1c:	b4bff82e 	bgeu	r22,r18,3c00 <__alt_mem_Onchip_SRAM+0xf8003c00>
    3c20:	1823883a 	mov	r17,r3
    3c24:	d9003115 	stw	r4,196(sp)
    3c28:	003f1d06 	br	38a0 <__alt_mem_Onchip_SRAM+0xf80038a0>
    3c2c:	8025883a 	mov	r18,r16
    3c30:	dc002903 	ldbu	r16,164(sp)
    3c34:	e011883a 	mov	r8,fp
    3c38:	84003fcc 	andi	r16,r16,255
    3c3c:	8007531e 	bne	r16,zero,598c <___vfprintf_internal_r+0x2278>
    3c40:	94800414 	ori	r18,r18,16
    3c44:	9080080c 	andi	r2,r18,32
    3c48:	1003a326 	beq	r2,zero,4ad8 <___vfprintf_internal_r+0x13c4>
    3c4c:	d9002e17 	ldw	r4,184(sp)
    3c50:	20800117 	ldw	r2,4(r4)
    3c54:	24c00017 	ldw	r19,0(r4)
    3c58:	21000204 	addi	r4,r4,8
    3c5c:	d9002e15 	stw	r4,184(sp)
    3c60:	102d883a 	mov	r22,r2
    3c64:	10047316 	blt	r2,zero,4e34 <___vfprintf_internal_r+0x1720>
    3c68:	d9002a17 	ldw	r4,168(sp)
    3c6c:	df002783 	ldbu	fp,158(sp)
    3c70:	2003e416 	blt	r4,zero,4c04 <___vfprintf_internal_r+0x14f0>
    3c74:	00ffdfc4 	movi	r3,-129
    3c78:	9d84b03a 	or	r2,r19,r22
    3c7c:	90e4703a 	and	r18,r18,r3
    3c80:	10018026 	beq	r2,zero,4284 <___vfprintf_internal_r+0xb70>
    3c84:	b003ab26 	beq	r22,zero,4b34 <___vfprintf_internal_r+0x1420>
    3c88:	dc402915 	stw	r17,164(sp)
    3c8c:	dc001e04 	addi	r16,sp,120
    3c90:	b023883a 	mov	r17,r22
    3c94:	402d883a 	mov	r22,r8
    3c98:	9809883a 	mov	r4,r19
    3c9c:	880b883a 	mov	r5,r17
    3ca0:	01800284 	movi	r6,10
    3ca4:	000f883a 	mov	r7,zero
    3ca8:	000ec780 	call	ec78 <__umoddi3>
    3cac:	10800c04 	addi	r2,r2,48
    3cb0:	843fffc4 	addi	r16,r16,-1
    3cb4:	9809883a 	mov	r4,r19
    3cb8:	880b883a 	mov	r5,r17
    3cbc:	80800005 	stb	r2,0(r16)
    3cc0:	01800284 	movi	r6,10
    3cc4:	000f883a 	mov	r7,zero
    3cc8:	000e67c0 	call	e67c <__udivdi3>
    3ccc:	1027883a 	mov	r19,r2
    3cd0:	10c4b03a 	or	r2,r2,r3
    3cd4:	1823883a 	mov	r17,r3
    3cd8:	103fef1e 	bne	r2,zero,3c98 <__alt_mem_Onchip_SRAM+0xf8003c98>
    3cdc:	d8c02817 	ldw	r3,160(sp)
    3ce0:	dc402917 	ldw	r17,164(sp)
    3ce4:	b011883a 	mov	r8,r22
    3ce8:	1c07c83a 	sub	r3,r3,r16
    3cec:	d8c02b15 	stw	r3,172(sp)
    3cf0:	00005f06 	br	3e70 <___vfprintf_internal_r+0x75c>
    3cf4:	8025883a 	mov	r18,r16
    3cf8:	dc002903 	ldbu	r16,164(sp)
    3cfc:	e011883a 	mov	r8,fp
    3d00:	84003fcc 	andi	r16,r16,255
    3d04:	80071e1e 	bne	r16,zero,5980 <___vfprintf_internal_r+0x226c>
    3d08:	9080020c 	andi	r2,r18,8
    3d0c:	1004af26 	beq	r2,zero,4fcc <___vfprintf_internal_r+0x18b8>
    3d10:	d9002e17 	ldw	r4,184(sp)
    3d14:	d9402e17 	ldw	r5,184(sp)
    3d18:	d8802e17 	ldw	r2,184(sp)
    3d1c:	21000017 	ldw	r4,0(r4)
    3d20:	29400117 	ldw	r5,4(r5)
    3d24:	10800204 	addi	r2,r2,8
    3d28:	d9003615 	stw	r4,216(sp)
    3d2c:	d9403815 	stw	r5,224(sp)
    3d30:	d8802e15 	stw	r2,184(sp)
    3d34:	d9003617 	ldw	r4,216(sp)
    3d38:	d9403817 	ldw	r5,224(sp)
    3d3c:	da003d15 	stw	r8,244(sp)
    3d40:	04000044 	movi	r16,1
    3d44:	000acdc0 	call	acdc <__fpclassifyd>
    3d48:	da003d17 	ldw	r8,244(sp)
    3d4c:	1404441e 	bne	r2,r16,4e60 <___vfprintf_internal_r+0x174c>
    3d50:	d9003617 	ldw	r4,216(sp)
    3d54:	d9403817 	ldw	r5,224(sp)
    3d58:	000d883a 	mov	r6,zero
    3d5c:	000f883a 	mov	r7,zero
    3d60:	001061c0 	call	1061c <__ledf2>
    3d64:	da003d17 	ldw	r8,244(sp)
    3d68:	1005e316 	blt	r2,zero,54f8 <___vfprintf_internal_r+0x1de4>
    3d6c:	df002783 	ldbu	fp,158(sp)
    3d70:	008011c4 	movi	r2,71
    3d74:	1445580e 	bge	r2,r17,52d8 <___vfprintf_internal_r+0x1bc4>
    3d78:	04000074 	movhi	r16,1
    3d7c:	841ab204 	addi	r16,r16,27336
    3d80:	00c000c4 	movi	r3,3
    3d84:	00bfdfc4 	movi	r2,-129
    3d88:	d8c02915 	stw	r3,164(sp)
    3d8c:	90a4703a 	and	r18,r18,r2
    3d90:	d8c02b15 	stw	r3,172(sp)
    3d94:	d8002a15 	stw	zero,168(sp)
    3d98:	d8003215 	stw	zero,200(sp)
    3d9c:	00003a06 	br	3e88 <___vfprintf_internal_r+0x774>
    3da0:	84000214 	ori	r16,r16,8
    3da4:	ac400007 	ldb	r17,0(r21)
    3da8:	003ebc06 	br	389c <__alt_mem_Onchip_SRAM+0xf800389c>
    3dac:	8025883a 	mov	r18,r16
    3db0:	dc002903 	ldbu	r16,164(sp)
    3db4:	e011883a 	mov	r8,fp
    3db8:	84003fcc 	andi	r16,r16,255
    3dbc:	8007001e 	bne	r16,zero,59c0 <___vfprintf_internal_r+0x22ac>
    3dc0:	94800414 	ori	r18,r18,16
    3dc4:	9080080c 	andi	r2,r18,32
    3dc8:	1002fa26 	beq	r2,zero,49b4 <___vfprintf_internal_r+0x12a0>
    3dcc:	d9002e17 	ldw	r4,184(sp)
    3dd0:	d9402a17 	ldw	r5,168(sp)
    3dd4:	d8002785 	stb	zero,158(sp)
    3dd8:	20800204 	addi	r2,r4,8
    3ddc:	24c00017 	ldw	r19,0(r4)
    3de0:	25800117 	ldw	r22,4(r4)
    3de4:	2804b116 	blt	r5,zero,50ac <___vfprintf_internal_r+0x1998>
    3de8:	013fdfc4 	movi	r4,-129
    3dec:	9d86b03a 	or	r3,r19,r22
    3df0:	d8802e15 	stw	r2,184(sp)
    3df4:	9124703a 	and	r18,r18,r4
    3df8:	1802fb1e 	bne	r3,zero,49e8 <___vfprintf_internal_r+0x12d4>
    3dfc:	d8c02a17 	ldw	r3,168(sp)
    3e00:	0039883a 	mov	fp,zero
    3e04:	1805e526 	beq	r3,zero,559c <___vfprintf_internal_r+0x1e88>
    3e08:	0027883a 	mov	r19,zero
    3e0c:	002d883a 	mov	r22,zero
    3e10:	dc001e04 	addi	r16,sp,120
    3e14:	9806d0fa 	srli	r3,r19,3
    3e18:	b008977a 	slli	r4,r22,29
    3e1c:	b02cd0fa 	srli	r22,r22,3
    3e20:	9cc001cc 	andi	r19,r19,7
    3e24:	98800c04 	addi	r2,r19,48
    3e28:	843fffc4 	addi	r16,r16,-1
    3e2c:	20e6b03a 	or	r19,r4,r3
    3e30:	80800005 	stb	r2,0(r16)
    3e34:	9d86b03a 	or	r3,r19,r22
    3e38:	183ff61e 	bne	r3,zero,3e14 <__alt_mem_Onchip_SRAM+0xf8003e14>
    3e3c:	90c0004c 	andi	r3,r18,1
    3e40:	18014126 	beq	r3,zero,4348 <___vfprintf_internal_r+0xc34>
    3e44:	10803fcc 	andi	r2,r2,255
    3e48:	1080201c 	xori	r2,r2,128
    3e4c:	10bfe004 	addi	r2,r2,-128
    3e50:	00c00c04 	movi	r3,48
    3e54:	10c13c26 	beq	r2,r3,4348 <___vfprintf_internal_r+0xc34>
    3e58:	80ffffc5 	stb	r3,-1(r16)
    3e5c:	d8c02817 	ldw	r3,160(sp)
    3e60:	80bfffc4 	addi	r2,r16,-1
    3e64:	1021883a 	mov	r16,r2
    3e68:	1887c83a 	sub	r3,r3,r2
    3e6c:	d8c02b15 	stw	r3,172(sp)
    3e70:	d8802b17 	ldw	r2,172(sp)
    3e74:	d9002a17 	ldw	r4,168(sp)
    3e78:	1100010e 	bge	r2,r4,3e80 <___vfprintf_internal_r+0x76c>
    3e7c:	2005883a 	mov	r2,r4
    3e80:	d8802915 	stw	r2,164(sp)
    3e84:	d8003215 	stw	zero,200(sp)
    3e88:	e7003fcc 	andi	fp,fp,255
    3e8c:	e700201c 	xori	fp,fp,128
    3e90:	e73fe004 	addi	fp,fp,-128
    3e94:	e0000326 	beq	fp,zero,3ea4 <___vfprintf_internal_r+0x790>
    3e98:	d8c02917 	ldw	r3,164(sp)
    3e9c:	18c00044 	addi	r3,r3,1
    3ea0:	d8c02915 	stw	r3,164(sp)
    3ea4:	90c0008c 	andi	r3,r18,2
    3ea8:	d8c02c15 	stw	r3,176(sp)
    3eac:	18000326 	beq	r3,zero,3ebc <___vfprintf_internal_r+0x7a8>
    3eb0:	d8c02917 	ldw	r3,164(sp)
    3eb4:	18c00084 	addi	r3,r3,2
    3eb8:	d8c02915 	stw	r3,164(sp)
    3ebc:	90c0210c 	andi	r3,r18,132
    3ec0:	d8c03015 	stw	r3,192(sp)
    3ec4:	1801c51e 	bne	r3,zero,45dc <___vfprintf_internal_r+0xec8>
    3ec8:	d9003117 	ldw	r4,196(sp)
    3ecc:	d8c02917 	ldw	r3,164(sp)
    3ed0:	20e7c83a 	sub	r19,r4,r3
    3ed4:	04c1c10e 	bge	zero,r19,45dc <___vfprintf_internal_r+0xec8>
    3ed8:	02400404 	movi	r9,16
    3edc:	d8c02017 	ldw	r3,128(sp)
    3ee0:	d8801f17 	ldw	r2,124(sp)
    3ee4:	4cc52f0e 	bge	r9,r19,53a4 <___vfprintf_internal_r+0x1c90>
    3ee8:	01400074 	movhi	r5,1
    3eec:	295acd84 	addi	r5,r5,27446
    3ef0:	dc403b15 	stw	r17,236(sp)
    3ef4:	d9403515 	stw	r5,212(sp)
    3ef8:	9823883a 	mov	r17,r19
    3efc:	482d883a 	mov	r22,r9
    3f00:	9027883a 	mov	r19,r18
    3f04:	070001c4 	movi	fp,7
    3f08:	8025883a 	mov	r18,r16
    3f0c:	dc002d17 	ldw	r16,180(sp)
    3f10:	00000306 	br	3f20 <___vfprintf_internal_r+0x80c>
    3f14:	8c7ffc04 	addi	r17,r17,-16
    3f18:	42000204 	addi	r8,r8,8
    3f1c:	b440130e 	bge	r22,r17,3f6c <___vfprintf_internal_r+0x858>
    3f20:	01000074 	movhi	r4,1
    3f24:	18c00404 	addi	r3,r3,16
    3f28:	10800044 	addi	r2,r2,1
    3f2c:	211acd84 	addi	r4,r4,27446
    3f30:	41000015 	stw	r4,0(r8)
    3f34:	45800115 	stw	r22,4(r8)
    3f38:	d8c02015 	stw	r3,128(sp)
    3f3c:	d8801f15 	stw	r2,124(sp)
    3f40:	e0bff40e 	bge	fp,r2,3f14 <__alt_mem_Onchip_SRAM+0xf8003f14>
    3f44:	d9801e04 	addi	r6,sp,120
    3f48:	b80b883a 	mov	r5,r23
    3f4c:	8009883a 	mov	r4,r16
    3f50:	000c6280 	call	c628 <__sprint_r>
    3f54:	103ef31e 	bne	r2,zero,3b24 <__alt_mem_Onchip_SRAM+0xf8003b24>
    3f58:	8c7ffc04 	addi	r17,r17,-16
    3f5c:	d8c02017 	ldw	r3,128(sp)
    3f60:	d8801f17 	ldw	r2,124(sp)
    3f64:	da000404 	addi	r8,sp,16
    3f68:	b47fed16 	blt	r22,r17,3f20 <__alt_mem_Onchip_SRAM+0xf8003f20>
    3f6c:	9021883a 	mov	r16,r18
    3f70:	9825883a 	mov	r18,r19
    3f74:	8827883a 	mov	r19,r17
    3f78:	dc403b17 	ldw	r17,236(sp)
    3f7c:	d9403517 	ldw	r5,212(sp)
    3f80:	98c7883a 	add	r3,r19,r3
    3f84:	10800044 	addi	r2,r2,1
    3f88:	41400015 	stw	r5,0(r8)
    3f8c:	44c00115 	stw	r19,4(r8)
    3f90:	d8c02015 	stw	r3,128(sp)
    3f94:	d8801f15 	stw	r2,124(sp)
    3f98:	010001c4 	movi	r4,7
    3f9c:	2082c516 	blt	r4,r2,4ab4 <___vfprintf_internal_r+0x13a0>
    3fa0:	df002787 	ldb	fp,158(sp)
    3fa4:	42000204 	addi	r8,r8,8
    3fa8:	e0000c26 	beq	fp,zero,3fdc <___vfprintf_internal_r+0x8c8>
    3fac:	d8801f17 	ldw	r2,124(sp)
    3fb0:	d9002784 	addi	r4,sp,158
    3fb4:	18c00044 	addi	r3,r3,1
    3fb8:	10800044 	addi	r2,r2,1
    3fbc:	41000015 	stw	r4,0(r8)
    3fc0:	01000044 	movi	r4,1
    3fc4:	41000115 	stw	r4,4(r8)
    3fc8:	d8c02015 	stw	r3,128(sp)
    3fcc:	d8801f15 	stw	r2,124(sp)
    3fd0:	010001c4 	movi	r4,7
    3fd4:	20825e16 	blt	r4,r2,4950 <___vfprintf_internal_r+0x123c>
    3fd8:	42000204 	addi	r8,r8,8
    3fdc:	d8802c17 	ldw	r2,176(sp)
    3fe0:	10000c26 	beq	r2,zero,4014 <___vfprintf_internal_r+0x900>
    3fe4:	d8801f17 	ldw	r2,124(sp)
    3fe8:	d9002704 	addi	r4,sp,156
    3fec:	18c00084 	addi	r3,r3,2
    3ff0:	10800044 	addi	r2,r2,1
    3ff4:	41000015 	stw	r4,0(r8)
    3ff8:	01000084 	movi	r4,2
    3ffc:	41000115 	stw	r4,4(r8)
    4000:	d8c02015 	stw	r3,128(sp)
    4004:	d8801f15 	stw	r2,124(sp)
    4008:	010001c4 	movi	r4,7
    400c:	20825816 	blt	r4,r2,4970 <___vfprintf_internal_r+0x125c>
    4010:	42000204 	addi	r8,r8,8
    4014:	d9003017 	ldw	r4,192(sp)
    4018:	00802004 	movi	r2,128
    401c:	2081bb26 	beq	r4,r2,470c <___vfprintf_internal_r+0xff8>
    4020:	d9402a17 	ldw	r5,168(sp)
    4024:	d8802b17 	ldw	r2,172(sp)
    4028:	28adc83a 	sub	r22,r5,r2
    402c:	0580310e 	bge	zero,r22,40f4 <___vfprintf_internal_r+0x9e0>
    4030:	07000404 	movi	fp,16
    4034:	d8801f17 	ldw	r2,124(sp)
    4038:	e584360e 	bge	fp,r22,5114 <___vfprintf_internal_r+0x1a00>
    403c:	01400074 	movhi	r5,1
    4040:	295ac984 	addi	r5,r5,27430
    4044:	dc402a15 	stw	r17,168(sp)
    4048:	d9402c15 	stw	r5,176(sp)
    404c:	b023883a 	mov	r17,r22
    4050:	04c001c4 	movi	r19,7
    4054:	a82d883a 	mov	r22,r21
    4058:	902b883a 	mov	r21,r18
    405c:	8025883a 	mov	r18,r16
    4060:	dc002d17 	ldw	r16,180(sp)
    4064:	00000306 	br	4074 <___vfprintf_internal_r+0x960>
    4068:	8c7ffc04 	addi	r17,r17,-16
    406c:	42000204 	addi	r8,r8,8
    4070:	e440110e 	bge	fp,r17,40b8 <___vfprintf_internal_r+0x9a4>
    4074:	18c00404 	addi	r3,r3,16
    4078:	10800044 	addi	r2,r2,1
    407c:	45000015 	stw	r20,0(r8)
    4080:	47000115 	stw	fp,4(r8)
    4084:	d8c02015 	stw	r3,128(sp)
    4088:	d8801f15 	stw	r2,124(sp)
    408c:	98bff60e 	bge	r19,r2,4068 <__alt_mem_Onchip_SRAM+0xf8004068>
    4090:	d9801e04 	addi	r6,sp,120
    4094:	b80b883a 	mov	r5,r23
    4098:	8009883a 	mov	r4,r16
    409c:	000c6280 	call	c628 <__sprint_r>
    40a0:	103ea01e 	bne	r2,zero,3b24 <__alt_mem_Onchip_SRAM+0xf8003b24>
    40a4:	8c7ffc04 	addi	r17,r17,-16
    40a8:	d8c02017 	ldw	r3,128(sp)
    40ac:	d8801f17 	ldw	r2,124(sp)
    40b0:	da000404 	addi	r8,sp,16
    40b4:	e47fef16 	blt	fp,r17,4074 <__alt_mem_Onchip_SRAM+0xf8004074>
    40b8:	9021883a 	mov	r16,r18
    40bc:	a825883a 	mov	r18,r21
    40c0:	b02b883a 	mov	r21,r22
    40c4:	882d883a 	mov	r22,r17
    40c8:	dc402a17 	ldw	r17,168(sp)
    40cc:	d9002c17 	ldw	r4,176(sp)
    40d0:	1d87883a 	add	r3,r3,r22
    40d4:	10800044 	addi	r2,r2,1
    40d8:	41000015 	stw	r4,0(r8)
    40dc:	45800115 	stw	r22,4(r8)
    40e0:	d8c02015 	stw	r3,128(sp)
    40e4:	d8801f15 	stw	r2,124(sp)
    40e8:	010001c4 	movi	r4,7
    40ec:	20821016 	blt	r4,r2,4930 <___vfprintf_internal_r+0x121c>
    40f0:	42000204 	addi	r8,r8,8
    40f4:	9080400c 	andi	r2,r18,256
    40f8:	10013a1e 	bne	r2,zero,45e4 <___vfprintf_internal_r+0xed0>
    40fc:	d9402b17 	ldw	r5,172(sp)
    4100:	d8801f17 	ldw	r2,124(sp)
    4104:	44000015 	stw	r16,0(r8)
    4108:	1947883a 	add	r3,r3,r5
    410c:	10800044 	addi	r2,r2,1
    4110:	41400115 	stw	r5,4(r8)
    4114:	d8c02015 	stw	r3,128(sp)
    4118:	d8801f15 	stw	r2,124(sp)
    411c:	010001c4 	movi	r4,7
    4120:	2081f516 	blt	r4,r2,48f8 <___vfprintf_internal_r+0x11e4>
    4124:	42000204 	addi	r8,r8,8
    4128:	9480010c 	andi	r18,r18,4
    412c:	90003226 	beq	r18,zero,41f8 <___vfprintf_internal_r+0xae4>
    4130:	d9403117 	ldw	r5,196(sp)
    4134:	d8802917 	ldw	r2,164(sp)
    4138:	28a1c83a 	sub	r16,r5,r2
    413c:	04002e0e 	bge	zero,r16,41f8 <___vfprintf_internal_r+0xae4>
    4140:	04400404 	movi	r17,16
    4144:	d8801f17 	ldw	r2,124(sp)
    4148:	8c04c40e 	bge	r17,r16,545c <___vfprintf_internal_r+0x1d48>
    414c:	01400074 	movhi	r5,1
    4150:	295acd84 	addi	r5,r5,27446
    4154:	d9403515 	stw	r5,212(sp)
    4158:	048001c4 	movi	r18,7
    415c:	dcc02d17 	ldw	r19,180(sp)
    4160:	00000306 	br	4170 <___vfprintf_internal_r+0xa5c>
    4164:	843ffc04 	addi	r16,r16,-16
    4168:	42000204 	addi	r8,r8,8
    416c:	8c00130e 	bge	r17,r16,41bc <___vfprintf_internal_r+0xaa8>
    4170:	01000074 	movhi	r4,1
    4174:	18c00404 	addi	r3,r3,16
    4178:	10800044 	addi	r2,r2,1
    417c:	211acd84 	addi	r4,r4,27446
    4180:	41000015 	stw	r4,0(r8)
    4184:	44400115 	stw	r17,4(r8)
    4188:	d8c02015 	stw	r3,128(sp)
    418c:	d8801f15 	stw	r2,124(sp)
    4190:	90bff40e 	bge	r18,r2,4164 <__alt_mem_Onchip_SRAM+0xf8004164>
    4194:	d9801e04 	addi	r6,sp,120
    4198:	b80b883a 	mov	r5,r23
    419c:	9809883a 	mov	r4,r19
    41a0:	000c6280 	call	c628 <__sprint_r>
    41a4:	103e5f1e 	bne	r2,zero,3b24 <__alt_mem_Onchip_SRAM+0xf8003b24>
    41a8:	843ffc04 	addi	r16,r16,-16
    41ac:	d8c02017 	ldw	r3,128(sp)
    41b0:	d8801f17 	ldw	r2,124(sp)
    41b4:	da000404 	addi	r8,sp,16
    41b8:	8c3fed16 	blt	r17,r16,4170 <__alt_mem_Onchip_SRAM+0xf8004170>
    41bc:	d9403517 	ldw	r5,212(sp)
    41c0:	1c07883a 	add	r3,r3,r16
    41c4:	10800044 	addi	r2,r2,1
    41c8:	41400015 	stw	r5,0(r8)
    41cc:	44000115 	stw	r16,4(r8)
    41d0:	d8c02015 	stw	r3,128(sp)
    41d4:	d8801f15 	stw	r2,124(sp)
    41d8:	010001c4 	movi	r4,7
    41dc:	2080060e 	bge	r4,r2,41f8 <___vfprintf_internal_r+0xae4>
    41e0:	d9002d17 	ldw	r4,180(sp)
    41e4:	d9801e04 	addi	r6,sp,120
    41e8:	b80b883a 	mov	r5,r23
    41ec:	000c6280 	call	c628 <__sprint_r>
    41f0:	103e4c1e 	bne	r2,zero,3b24 <__alt_mem_Onchip_SRAM+0xf8003b24>
    41f4:	d8c02017 	ldw	r3,128(sp)
    41f8:	d8803117 	ldw	r2,196(sp)
    41fc:	d9002917 	ldw	r4,164(sp)
    4200:	1100010e 	bge	r2,r4,4208 <___vfprintf_internal_r+0xaf4>
    4204:	2005883a 	mov	r2,r4
    4208:	d9402f17 	ldw	r5,188(sp)
    420c:	288b883a 	add	r5,r5,r2
    4210:	d9402f15 	stw	r5,188(sp)
    4214:	1801c01e 	bne	r3,zero,4918 <___vfprintf_internal_r+0x1204>
    4218:	a8800007 	ldb	r2,0(r21)
    421c:	d8001f15 	stw	zero,124(sp)
    4220:	da000404 	addi	r8,sp,16
    4224:	103d751e 	bne	r2,zero,37fc <__alt_mem_Onchip_SRAM+0xf80037fc>
    4228:	a823883a 	mov	r17,r21
    422c:	003d8b06 	br	385c <__alt_mem_Onchip_SRAM+0xf800385c>
    4230:	8025883a 	mov	r18,r16
    4234:	dc002903 	ldbu	r16,164(sp)
    4238:	e011883a 	mov	r8,fp
    423c:	84003fcc 	andi	r16,r16,255
    4240:	8005e51e 	bne	r16,zero,59d8 <___vfprintf_internal_r+0x22c4>
    4244:	94800414 	ori	r18,r18,16
    4248:	9080080c 	andi	r2,r18,32
    424c:	10022b26 	beq	r2,zero,4afc <___vfprintf_internal_r+0x13e8>
    4250:	d9002e17 	ldw	r4,184(sp)
    4254:	d9402a17 	ldw	r5,168(sp)
    4258:	d8002785 	stb	zero,158(sp)
    425c:	20c00204 	addi	r3,r4,8
    4260:	24c00017 	ldw	r19,0(r4)
    4264:	25800117 	ldw	r22,4(r4)
    4268:	28042e16 	blt	r5,zero,5324 <___vfprintf_internal_r+0x1c10>
    426c:	013fdfc4 	movi	r4,-129
    4270:	9d84b03a 	or	r2,r19,r22
    4274:	d8c02e15 	stw	r3,184(sp)
    4278:	9124703a 	and	r18,r18,r4
    427c:	0039883a 	mov	fp,zero
    4280:	103e801e 	bne	r2,zero,3c84 <__alt_mem_Onchip_SRAM+0xf8003c84>
    4284:	d9002a17 	ldw	r4,168(sp)
    4288:	2002e01e 	bne	r4,zero,4e0c <___vfprintf_internal_r+0x16f8>
    428c:	d8002a15 	stw	zero,168(sp)
    4290:	d8002b15 	stw	zero,172(sp)
    4294:	dc001e04 	addi	r16,sp,120
    4298:	003ef506 	br	3e70 <__alt_mem_Onchip_SRAM+0xf8003e70>
    429c:	8025883a 	mov	r18,r16
    42a0:	dc002903 	ldbu	r16,164(sp)
    42a4:	e011883a 	mov	r8,fp
    42a8:	84003fcc 	andi	r16,r16,255
    42ac:	8005ba1e 	bne	r16,zero,5998 <___vfprintf_internal_r+0x2284>
    42b0:	01000074 	movhi	r4,1
    42b4:	211ab504 	addi	r4,r4,27348
    42b8:	d9003915 	stw	r4,228(sp)
    42bc:	9080080c 	andi	r2,r18,32
    42c0:	10006126 	beq	r2,zero,4448 <___vfprintf_internal_r+0xd34>
    42c4:	d9402e17 	ldw	r5,184(sp)
    42c8:	2cc00017 	ldw	r19,0(r5)
    42cc:	2d800117 	ldw	r22,4(r5)
    42d0:	29400204 	addi	r5,r5,8
    42d4:	d9402e15 	stw	r5,184(sp)
    42d8:	9080004c 	andi	r2,r18,1
    42dc:	1001ac26 	beq	r2,zero,4990 <___vfprintf_internal_r+0x127c>
    42e0:	9d84b03a 	or	r2,r19,r22
    42e4:	10038526 	beq	r2,zero,50fc <___vfprintf_internal_r+0x19e8>
    42e8:	d8c02a17 	ldw	r3,168(sp)
    42ec:	00800c04 	movi	r2,48
    42f0:	d8802705 	stb	r2,156(sp)
    42f4:	dc402745 	stb	r17,157(sp)
    42f8:	d8002785 	stb	zero,158(sp)
    42fc:	90800094 	ori	r2,r18,2
    4300:	18047916 	blt	r3,zero,54e8 <___vfprintf_internal_r+0x1dd4>
    4304:	00bfdfc4 	movi	r2,-129
    4308:	90a4703a 	and	r18,r18,r2
    430c:	94800094 	ori	r18,r18,2
    4310:	0039883a 	mov	fp,zero
    4314:	d9003917 	ldw	r4,228(sp)
    4318:	dc001e04 	addi	r16,sp,120
    431c:	988003cc 	andi	r2,r19,15
    4320:	b006973a 	slli	r3,r22,28
    4324:	2085883a 	add	r2,r4,r2
    4328:	9826d13a 	srli	r19,r19,4
    432c:	10800003 	ldbu	r2,0(r2)
    4330:	b02cd13a 	srli	r22,r22,4
    4334:	843fffc4 	addi	r16,r16,-1
    4338:	1ce6b03a 	or	r19,r3,r19
    433c:	80800005 	stb	r2,0(r16)
    4340:	9d84b03a 	or	r2,r19,r22
    4344:	103ff51e 	bne	r2,zero,431c <__alt_mem_Onchip_SRAM+0xf800431c>
    4348:	d8c02817 	ldw	r3,160(sp)
    434c:	1c07c83a 	sub	r3,r3,r16
    4350:	d8c02b15 	stw	r3,172(sp)
    4354:	003ec606 	br	3e70 <__alt_mem_Onchip_SRAM+0xf8003e70>
    4358:	8025883a 	mov	r18,r16
    435c:	dc002903 	ldbu	r16,164(sp)
    4360:	e011883a 	mov	r8,fp
    4364:	84003fcc 	andi	r16,r16,255
    4368:	803e9626 	beq	r16,zero,3dc4 <__alt_mem_Onchip_SRAM+0xf8003dc4>
    436c:	d8c02b03 	ldbu	r3,172(sp)
    4370:	d8c02785 	stb	r3,158(sp)
    4374:	003e9306 	br	3dc4 <__alt_mem_Onchip_SRAM+0xf8003dc4>
    4378:	00c00044 	movi	r3,1
    437c:	d8c02905 	stb	r3,164(sp)
    4380:	00c00ac4 	movi	r3,43
    4384:	d8c02b05 	stb	r3,172(sp)
    4388:	ac400007 	ldb	r17,0(r21)
    438c:	003d4306 	br	389c <__alt_mem_Onchip_SRAM+0xf800389c>
    4390:	84000814 	ori	r16,r16,32
    4394:	ac400007 	ldb	r17,0(r21)
    4398:	003d4006 	br	389c <__alt_mem_Onchip_SRAM+0xf800389c>
    439c:	d8802e17 	ldw	r2,184(sp)
    43a0:	8025883a 	mov	r18,r16
    43a4:	d8002785 	stb	zero,158(sp)
    43a8:	14000017 	ldw	r16,0(r2)
    43ac:	e011883a 	mov	r8,fp
    43b0:	14c00104 	addi	r19,r2,4
    43b4:	80042d26 	beq	r16,zero,546c <___vfprintf_internal_r+0x1d58>
    43b8:	d8c02a17 	ldw	r3,168(sp)
    43bc:	1803e416 	blt	r3,zero,5350 <___vfprintf_internal_r+0x1c3c>
    43c0:	180d883a 	mov	r6,r3
    43c4:	000b883a 	mov	r5,zero
    43c8:	8009883a 	mov	r4,r16
    43cc:	df003d15 	stw	fp,244(sp)
    43d0:	00090a80 	call	90a8 <memchr>
    43d4:	da003d17 	ldw	r8,244(sp)
    43d8:	10046826 	beq	r2,zero,557c <___vfprintf_internal_r+0x1e68>
    43dc:	1405c83a 	sub	r2,r2,r16
    43e0:	d8802b15 	stw	r2,172(sp)
    43e4:	1003e016 	blt	r2,zero,5368 <___vfprintf_internal_r+0x1c54>
    43e8:	df002783 	ldbu	fp,158(sp)
    43ec:	d8802915 	stw	r2,164(sp)
    43f0:	dcc02e15 	stw	r19,184(sp)
    43f4:	d8002a15 	stw	zero,168(sp)
    43f8:	d8003215 	stw	zero,200(sp)
    43fc:	003ea206 	br	3e88 <__alt_mem_Onchip_SRAM+0xf8003e88>
    4400:	8025883a 	mov	r18,r16
    4404:	dc002903 	ldbu	r16,164(sp)
    4408:	e011883a 	mov	r8,fp
    440c:	84003fcc 	andi	r16,r16,255
    4410:	803f8d26 	beq	r16,zero,4248 <__alt_mem_Onchip_SRAM+0xf8004248>
    4414:	d8c02b03 	ldbu	r3,172(sp)
    4418:	d8c02785 	stb	r3,158(sp)
    441c:	003f8a06 	br	4248 <__alt_mem_Onchip_SRAM+0xf8004248>
    4420:	8025883a 	mov	r18,r16
    4424:	dc002903 	ldbu	r16,164(sp)
    4428:	e011883a 	mov	r8,fp
    442c:	84003fcc 	andi	r16,r16,255
    4430:	8005661e 	bne	r16,zero,59cc <___vfprintf_internal_r+0x22b8>
    4434:	01000074 	movhi	r4,1
    4438:	211aba04 	addi	r4,r4,27368
    443c:	d9003915 	stw	r4,228(sp)
    4440:	9080080c 	andi	r2,r18,32
    4444:	103f9f1e 	bne	r2,zero,42c4 <__alt_mem_Onchip_SRAM+0xf80042c4>
    4448:	9080040c 	andi	r2,r18,16
    444c:	1002eb26 	beq	r2,zero,4ffc <___vfprintf_internal_r+0x18e8>
    4450:	d8802e17 	ldw	r2,184(sp)
    4454:	002d883a 	mov	r22,zero
    4458:	14c00017 	ldw	r19,0(r2)
    445c:	10800104 	addi	r2,r2,4
    4460:	d8802e15 	stw	r2,184(sp)
    4464:	003f9c06 	br	42d8 <__alt_mem_Onchip_SRAM+0xf80042d8>
    4468:	d8802b07 	ldb	r2,172(sp)
    446c:	1002e11e 	bne	r2,zero,4ff4 <___vfprintf_internal_r+0x18e0>
    4470:	00c00044 	movi	r3,1
    4474:	d8c02905 	stb	r3,164(sp)
    4478:	00c00804 	movi	r3,32
    447c:	d8c02b05 	stb	r3,172(sp)
    4480:	ac400007 	ldb	r17,0(r21)
    4484:	003d0506 	br	389c <__alt_mem_Onchip_SRAM+0xf800389c>
    4488:	84000054 	ori	r16,r16,1
    448c:	ac400007 	ldb	r17,0(r21)
    4490:	003d0206 	br	389c <__alt_mem_Onchip_SRAM+0xf800389c>
    4494:	8025883a 	mov	r18,r16
    4498:	dc002903 	ldbu	r16,164(sp)
    449c:	e011883a 	mov	r8,fp
    44a0:	84003fcc 	andi	r16,r16,255
    44a4:	803de726 	beq	r16,zero,3c44 <__alt_mem_Onchip_SRAM+0xf8003c44>
    44a8:	d8c02b03 	ldbu	r3,172(sp)
    44ac:	d8c02785 	stb	r3,158(sp)
    44b0:	003de406 	br	3c44 <__alt_mem_Onchip_SRAM+0xf8003c44>
    44b4:	84001014 	ori	r16,r16,64
    44b8:	ac400007 	ldb	r17,0(r21)
    44bc:	003cf706 	br	389c <__alt_mem_Onchip_SRAM+0xf800389c>
    44c0:	ac400007 	ldb	r17,0(r21)
    44c4:	00801b04 	movi	r2,108
    44c8:	88838f26 	beq	r17,r2,5308 <___vfprintf_internal_r+0x1bf4>
    44cc:	84000414 	ori	r16,r16,16
    44d0:	003cf206 	br	389c <__alt_mem_Onchip_SRAM+0xf800389c>
    44d4:	8025883a 	mov	r18,r16
    44d8:	dc002903 	ldbu	r16,164(sp)
    44dc:	e011883a 	mov	r8,fp
    44e0:	84003fcc 	andi	r16,r16,255
    44e4:	80053f1e 	bne	r16,zero,59e4 <___vfprintf_internal_r+0x22d0>
    44e8:	9080080c 	andi	r2,r18,32
    44ec:	1002d226 	beq	r2,zero,5038 <___vfprintf_internal_r+0x1924>
    44f0:	d9002e17 	ldw	r4,184(sp)
    44f4:	d9402f17 	ldw	r5,188(sp)
    44f8:	20800017 	ldw	r2,0(r4)
    44fc:	2807d7fa 	srai	r3,r5,31
    4500:	21000104 	addi	r4,r4,4
    4504:	d9002e15 	stw	r4,184(sp)
    4508:	11400015 	stw	r5,0(r2)
    450c:	10c00115 	stw	r3,4(r2)
    4510:	003cb806 	br	37f4 <__alt_mem_Onchip_SRAM+0xf80037f4>
    4514:	d8c02e17 	ldw	r3,184(sp)
    4518:	d9002e17 	ldw	r4,184(sp)
    451c:	8025883a 	mov	r18,r16
    4520:	18800017 	ldw	r2,0(r3)
    4524:	21000104 	addi	r4,r4,4
    4528:	00c00044 	movi	r3,1
    452c:	e011883a 	mov	r8,fp
    4530:	d8c02915 	stw	r3,164(sp)
    4534:	d8002785 	stb	zero,158(sp)
    4538:	d8801405 	stb	r2,80(sp)
    453c:	d9002e15 	stw	r4,184(sp)
    4540:	d8c02b15 	stw	r3,172(sp)
    4544:	d8002a15 	stw	zero,168(sp)
    4548:	d8003215 	stw	zero,200(sp)
    454c:	dc001404 	addi	r16,sp,80
    4550:	0039883a 	mov	fp,zero
    4554:	003e5306 	br	3ea4 <__alt_mem_Onchip_SRAM+0xf8003ea4>
    4558:	01000074 	movhi	r4,1
    455c:	211aba04 	addi	r4,r4,27368
    4560:	0039883a 	mov	fp,zero
    4564:	d9003915 	stw	r4,228(sp)
    4568:	04401e04 	movi	r17,120
    456c:	003f6906 	br	4314 <__alt_mem_Onchip_SRAM+0xf8004314>
    4570:	8025883a 	mov	r18,r16
    4574:	dc002903 	ldbu	r16,164(sp)
    4578:	e011883a 	mov	r8,fp
    457c:	84003fcc 	andi	r16,r16,255
    4580:	8005081e 	bne	r16,zero,59a4 <___vfprintf_internal_r+0x2290>
    4584:	883d6126 	beq	r17,zero,3b0c <__alt_mem_Onchip_SRAM+0xf8003b0c>
    4588:	00c00044 	movi	r3,1
    458c:	d8c02915 	stw	r3,164(sp)
    4590:	dc401405 	stb	r17,80(sp)
    4594:	d8002785 	stb	zero,158(sp)
    4598:	003fe906 	br	4540 <__alt_mem_Onchip_SRAM+0xf8004540>
    459c:	01400074 	movhi	r5,1
    45a0:	295aba04 	addi	r5,r5,27368
    45a4:	d9403915 	stw	r5,228(sp)
    45a8:	d8c02e15 	stw	r3,184(sp)
    45ac:	1025883a 	mov	r18,r2
    45b0:	04401e04 	movi	r17,120
    45b4:	9d84b03a 	or	r2,r19,r22
    45b8:	1000fc1e 	bne	r2,zero,49ac <___vfprintf_internal_r+0x1298>
    45bc:	0039883a 	mov	fp,zero
    45c0:	00800084 	movi	r2,2
    45c4:	10803fcc 	andi	r2,r2,255
    45c8:	00c00044 	movi	r3,1
    45cc:	10c20f26 	beq	r2,r3,4e0c <___vfprintf_internal_r+0x16f8>
    45d0:	00c00084 	movi	r3,2
    45d4:	10fd3326 	beq	r2,r3,3aa4 <__alt_mem_Onchip_SRAM+0xf8003aa4>
    45d8:	003e0b06 	br	3e08 <__alt_mem_Onchip_SRAM+0xf8003e08>
    45dc:	d8c02017 	ldw	r3,128(sp)
    45e0:	003e7106 	br	3fa8 <__alt_mem_Onchip_SRAM+0xf8003fa8>
    45e4:	00801944 	movi	r2,101
    45e8:	14407e0e 	bge	r2,r17,47e4 <___vfprintf_internal_r+0x10d0>
    45ec:	d9003617 	ldw	r4,216(sp)
    45f0:	d9403817 	ldw	r5,224(sp)
    45f4:	000d883a 	mov	r6,zero
    45f8:	000f883a 	mov	r7,zero
    45fc:	d8c03c15 	stw	r3,240(sp)
    4600:	da003d15 	stw	r8,244(sp)
    4604:	00104b80 	call	104b8 <__eqdf2>
    4608:	d8c03c17 	ldw	r3,240(sp)
    460c:	da003d17 	ldw	r8,244(sp)
    4610:	1000f71e 	bne	r2,zero,49f0 <___vfprintf_internal_r+0x12dc>
    4614:	d8801f17 	ldw	r2,124(sp)
    4618:	01000074 	movhi	r4,1
    461c:	211ac104 	addi	r4,r4,27396
    4620:	18c00044 	addi	r3,r3,1
    4624:	10800044 	addi	r2,r2,1
    4628:	41000015 	stw	r4,0(r8)
    462c:	01000044 	movi	r4,1
    4630:	41000115 	stw	r4,4(r8)
    4634:	d8c02015 	stw	r3,128(sp)
    4638:	d8801f15 	stw	r2,124(sp)
    463c:	010001c4 	movi	r4,7
    4640:	2082b816 	blt	r4,r2,5124 <___vfprintf_internal_r+0x1a10>
    4644:	42000204 	addi	r8,r8,8
    4648:	d8802617 	ldw	r2,152(sp)
    464c:	d9403317 	ldw	r5,204(sp)
    4650:	11400216 	blt	r2,r5,465c <___vfprintf_internal_r+0xf48>
    4654:	9080004c 	andi	r2,r18,1
    4658:	103eb326 	beq	r2,zero,4128 <__alt_mem_Onchip_SRAM+0xf8004128>
    465c:	d8803717 	ldw	r2,220(sp)
    4660:	d9003417 	ldw	r4,208(sp)
    4664:	d9403717 	ldw	r5,220(sp)
    4668:	1887883a 	add	r3,r3,r2
    466c:	d8801f17 	ldw	r2,124(sp)
    4670:	41000015 	stw	r4,0(r8)
    4674:	41400115 	stw	r5,4(r8)
    4678:	10800044 	addi	r2,r2,1
    467c:	d8c02015 	stw	r3,128(sp)
    4680:	d8801f15 	stw	r2,124(sp)
    4684:	010001c4 	movi	r4,7
    4688:	20832916 	blt	r4,r2,5330 <___vfprintf_internal_r+0x1c1c>
    468c:	42000204 	addi	r8,r8,8
    4690:	d8803317 	ldw	r2,204(sp)
    4694:	143fffc4 	addi	r16,r2,-1
    4698:	043ea30e 	bge	zero,r16,4128 <__alt_mem_Onchip_SRAM+0xf8004128>
    469c:	04400404 	movi	r17,16
    46a0:	d8801f17 	ldw	r2,124(sp)
    46a4:	8c00880e 	bge	r17,r16,48c8 <___vfprintf_internal_r+0x11b4>
    46a8:	01400074 	movhi	r5,1
    46ac:	295ac984 	addi	r5,r5,27430
    46b0:	d9402c15 	stw	r5,176(sp)
    46b4:	058001c4 	movi	r22,7
    46b8:	dcc02d17 	ldw	r19,180(sp)
    46bc:	00000306 	br	46cc <___vfprintf_internal_r+0xfb8>
    46c0:	42000204 	addi	r8,r8,8
    46c4:	843ffc04 	addi	r16,r16,-16
    46c8:	8c00820e 	bge	r17,r16,48d4 <___vfprintf_internal_r+0x11c0>
    46cc:	18c00404 	addi	r3,r3,16
    46d0:	10800044 	addi	r2,r2,1
    46d4:	45000015 	stw	r20,0(r8)
    46d8:	44400115 	stw	r17,4(r8)
    46dc:	d8c02015 	stw	r3,128(sp)
    46e0:	d8801f15 	stw	r2,124(sp)
    46e4:	b0bff60e 	bge	r22,r2,46c0 <__alt_mem_Onchip_SRAM+0xf80046c0>
    46e8:	d9801e04 	addi	r6,sp,120
    46ec:	b80b883a 	mov	r5,r23
    46f0:	9809883a 	mov	r4,r19
    46f4:	000c6280 	call	c628 <__sprint_r>
    46f8:	103d0a1e 	bne	r2,zero,3b24 <__alt_mem_Onchip_SRAM+0xf8003b24>
    46fc:	d8c02017 	ldw	r3,128(sp)
    4700:	d8801f17 	ldw	r2,124(sp)
    4704:	da000404 	addi	r8,sp,16
    4708:	003fee06 	br	46c4 <__alt_mem_Onchip_SRAM+0xf80046c4>
    470c:	d9403117 	ldw	r5,196(sp)
    4710:	d8802917 	ldw	r2,164(sp)
    4714:	28adc83a 	sub	r22,r5,r2
    4718:	05be410e 	bge	zero,r22,4020 <__alt_mem_Onchip_SRAM+0xf8004020>
    471c:	07000404 	movi	fp,16
    4720:	d8801f17 	ldw	r2,124(sp)
    4724:	e5838f0e 	bge	fp,r22,5564 <___vfprintf_internal_r+0x1e50>
    4728:	01400074 	movhi	r5,1
    472c:	295ac984 	addi	r5,r5,27430
    4730:	dc403015 	stw	r17,192(sp)
    4734:	d9402c15 	stw	r5,176(sp)
    4738:	b023883a 	mov	r17,r22
    473c:	04c001c4 	movi	r19,7
    4740:	a82d883a 	mov	r22,r21
    4744:	902b883a 	mov	r21,r18
    4748:	8025883a 	mov	r18,r16
    474c:	dc002d17 	ldw	r16,180(sp)
    4750:	00000306 	br	4760 <___vfprintf_internal_r+0x104c>
    4754:	8c7ffc04 	addi	r17,r17,-16
    4758:	42000204 	addi	r8,r8,8
    475c:	e440110e 	bge	fp,r17,47a4 <___vfprintf_internal_r+0x1090>
    4760:	18c00404 	addi	r3,r3,16
    4764:	10800044 	addi	r2,r2,1
    4768:	45000015 	stw	r20,0(r8)
    476c:	47000115 	stw	fp,4(r8)
    4770:	d8c02015 	stw	r3,128(sp)
    4774:	d8801f15 	stw	r2,124(sp)
    4778:	98bff60e 	bge	r19,r2,4754 <__alt_mem_Onchip_SRAM+0xf8004754>
    477c:	d9801e04 	addi	r6,sp,120
    4780:	b80b883a 	mov	r5,r23
    4784:	8009883a 	mov	r4,r16
    4788:	000c6280 	call	c628 <__sprint_r>
    478c:	103ce51e 	bne	r2,zero,3b24 <__alt_mem_Onchip_SRAM+0xf8003b24>
    4790:	8c7ffc04 	addi	r17,r17,-16
    4794:	d8c02017 	ldw	r3,128(sp)
    4798:	d8801f17 	ldw	r2,124(sp)
    479c:	da000404 	addi	r8,sp,16
    47a0:	e47fef16 	blt	fp,r17,4760 <__alt_mem_Onchip_SRAM+0xf8004760>
    47a4:	9021883a 	mov	r16,r18
    47a8:	a825883a 	mov	r18,r21
    47ac:	b02b883a 	mov	r21,r22
    47b0:	882d883a 	mov	r22,r17
    47b4:	dc403017 	ldw	r17,192(sp)
    47b8:	d9002c17 	ldw	r4,176(sp)
    47bc:	1d87883a 	add	r3,r3,r22
    47c0:	10800044 	addi	r2,r2,1
    47c4:	41000015 	stw	r4,0(r8)
    47c8:	45800115 	stw	r22,4(r8)
    47cc:	d8c02015 	stw	r3,128(sp)
    47d0:	d8801f15 	stw	r2,124(sp)
    47d4:	010001c4 	movi	r4,7
    47d8:	20818e16 	blt	r4,r2,4e14 <___vfprintf_internal_r+0x1700>
    47dc:	42000204 	addi	r8,r8,8
    47e0:	003e0f06 	br	4020 <__alt_mem_Onchip_SRAM+0xf8004020>
    47e4:	d9403317 	ldw	r5,204(sp)
    47e8:	00800044 	movi	r2,1
    47ec:	18c00044 	addi	r3,r3,1
    47f0:	1141530e 	bge	r2,r5,4d40 <___vfprintf_internal_r+0x162c>
    47f4:	dc401f17 	ldw	r17,124(sp)
    47f8:	00800044 	movi	r2,1
    47fc:	40800115 	stw	r2,4(r8)
    4800:	8c400044 	addi	r17,r17,1
    4804:	44000015 	stw	r16,0(r8)
    4808:	d8c02015 	stw	r3,128(sp)
    480c:	dc401f15 	stw	r17,124(sp)
    4810:	008001c4 	movi	r2,7
    4814:	14416b16 	blt	r2,r17,4dc4 <___vfprintf_internal_r+0x16b0>
    4818:	42000204 	addi	r8,r8,8
    481c:	d8803717 	ldw	r2,220(sp)
    4820:	d9003417 	ldw	r4,208(sp)
    4824:	8c400044 	addi	r17,r17,1
    4828:	10c7883a 	add	r3,r2,r3
    482c:	40800115 	stw	r2,4(r8)
    4830:	41000015 	stw	r4,0(r8)
    4834:	d8c02015 	stw	r3,128(sp)
    4838:	dc401f15 	stw	r17,124(sp)
    483c:	008001c4 	movi	r2,7
    4840:	14416916 	blt	r2,r17,4de8 <___vfprintf_internal_r+0x16d4>
    4844:	45800204 	addi	r22,r8,8
    4848:	d9003617 	ldw	r4,216(sp)
    484c:	d9403817 	ldw	r5,224(sp)
    4850:	000d883a 	mov	r6,zero
    4854:	000f883a 	mov	r7,zero
    4858:	d8c03c15 	stw	r3,240(sp)
    485c:	00104b80 	call	104b8 <__eqdf2>
    4860:	d8c03c17 	ldw	r3,240(sp)
    4864:	1000bc26 	beq	r2,zero,4b58 <___vfprintf_internal_r+0x1444>
    4868:	d9403317 	ldw	r5,204(sp)
    486c:	84000044 	addi	r16,r16,1
    4870:	8c400044 	addi	r17,r17,1
    4874:	28bfffc4 	addi	r2,r5,-1
    4878:	1887883a 	add	r3,r3,r2
    487c:	b0800115 	stw	r2,4(r22)
    4880:	b4000015 	stw	r16,0(r22)
    4884:	d8c02015 	stw	r3,128(sp)
    4888:	dc401f15 	stw	r17,124(sp)
    488c:	008001c4 	movi	r2,7
    4890:	14414316 	blt	r2,r17,4da0 <___vfprintf_internal_r+0x168c>
    4894:	b5800204 	addi	r22,r22,8
    4898:	d9003a17 	ldw	r4,232(sp)
    489c:	df0022c4 	addi	fp,sp,139
    48a0:	8c400044 	addi	r17,r17,1
    48a4:	20c7883a 	add	r3,r4,r3
    48a8:	b7000015 	stw	fp,0(r22)
    48ac:	b1000115 	stw	r4,4(r22)
    48b0:	d8c02015 	stw	r3,128(sp)
    48b4:	dc401f15 	stw	r17,124(sp)
    48b8:	008001c4 	movi	r2,7
    48bc:	14400e16 	blt	r2,r17,48f8 <___vfprintf_internal_r+0x11e4>
    48c0:	b2000204 	addi	r8,r22,8
    48c4:	003e1806 	br	4128 <__alt_mem_Onchip_SRAM+0xf8004128>
    48c8:	01000074 	movhi	r4,1
    48cc:	211ac984 	addi	r4,r4,27430
    48d0:	d9002c15 	stw	r4,176(sp)
    48d4:	d9002c17 	ldw	r4,176(sp)
    48d8:	1c07883a 	add	r3,r3,r16
    48dc:	44000115 	stw	r16,4(r8)
    48e0:	41000015 	stw	r4,0(r8)
    48e4:	10800044 	addi	r2,r2,1
    48e8:	d8c02015 	stw	r3,128(sp)
    48ec:	d8801f15 	stw	r2,124(sp)
    48f0:	010001c4 	movi	r4,7
    48f4:	20be0b0e 	bge	r4,r2,4124 <__alt_mem_Onchip_SRAM+0xf8004124>
    48f8:	d9002d17 	ldw	r4,180(sp)
    48fc:	d9801e04 	addi	r6,sp,120
    4900:	b80b883a 	mov	r5,r23
    4904:	000c6280 	call	c628 <__sprint_r>
    4908:	103c861e 	bne	r2,zero,3b24 <__alt_mem_Onchip_SRAM+0xf8003b24>
    490c:	d8c02017 	ldw	r3,128(sp)
    4910:	da000404 	addi	r8,sp,16
    4914:	003e0406 	br	4128 <__alt_mem_Onchip_SRAM+0xf8004128>
    4918:	d9002d17 	ldw	r4,180(sp)
    491c:	d9801e04 	addi	r6,sp,120
    4920:	b80b883a 	mov	r5,r23
    4924:	000c6280 	call	c628 <__sprint_r>
    4928:	103e3b26 	beq	r2,zero,4218 <__alt_mem_Onchip_SRAM+0xf8004218>
    492c:	003c7d06 	br	3b24 <__alt_mem_Onchip_SRAM+0xf8003b24>
    4930:	d9002d17 	ldw	r4,180(sp)
    4934:	d9801e04 	addi	r6,sp,120
    4938:	b80b883a 	mov	r5,r23
    493c:	000c6280 	call	c628 <__sprint_r>
    4940:	103c781e 	bne	r2,zero,3b24 <__alt_mem_Onchip_SRAM+0xf8003b24>
    4944:	d8c02017 	ldw	r3,128(sp)
    4948:	da000404 	addi	r8,sp,16
    494c:	003de906 	br	40f4 <__alt_mem_Onchip_SRAM+0xf80040f4>
    4950:	d9002d17 	ldw	r4,180(sp)
    4954:	d9801e04 	addi	r6,sp,120
    4958:	b80b883a 	mov	r5,r23
    495c:	000c6280 	call	c628 <__sprint_r>
    4960:	103c701e 	bne	r2,zero,3b24 <__alt_mem_Onchip_SRAM+0xf8003b24>
    4964:	d8c02017 	ldw	r3,128(sp)
    4968:	da000404 	addi	r8,sp,16
    496c:	003d9b06 	br	3fdc <__alt_mem_Onchip_SRAM+0xf8003fdc>
    4970:	d9002d17 	ldw	r4,180(sp)
    4974:	d9801e04 	addi	r6,sp,120
    4978:	b80b883a 	mov	r5,r23
    497c:	000c6280 	call	c628 <__sprint_r>
    4980:	103c681e 	bne	r2,zero,3b24 <__alt_mem_Onchip_SRAM+0xf8003b24>
    4984:	d8c02017 	ldw	r3,128(sp)
    4988:	da000404 	addi	r8,sp,16
    498c:	003da106 	br	4014 <__alt_mem_Onchip_SRAM+0xf8004014>
    4990:	d9402a17 	ldw	r5,168(sp)
    4994:	d8002785 	stb	zero,158(sp)
    4998:	283f0616 	blt	r5,zero,45b4 <__alt_mem_Onchip_SRAM+0xf80045b4>
    499c:	00ffdfc4 	movi	r3,-129
    49a0:	9d84b03a 	or	r2,r19,r22
    49a4:	90e4703a 	and	r18,r18,r3
    49a8:	103c3b26 	beq	r2,zero,3a98 <__alt_mem_Onchip_SRAM+0xf8003a98>
    49ac:	0039883a 	mov	fp,zero
    49b0:	003e5806 	br	4314 <__alt_mem_Onchip_SRAM+0xf8004314>
    49b4:	9080040c 	andi	r2,r18,16
    49b8:	1001b326 	beq	r2,zero,5088 <___vfprintf_internal_r+0x1974>
    49bc:	d8c02e17 	ldw	r3,184(sp)
    49c0:	d9002a17 	ldw	r4,168(sp)
    49c4:	d8002785 	stb	zero,158(sp)
    49c8:	18800104 	addi	r2,r3,4
    49cc:	1cc00017 	ldw	r19,0(r3)
    49d0:	002d883a 	mov	r22,zero
    49d4:	2001b516 	blt	r4,zero,50ac <___vfprintf_internal_r+0x1998>
    49d8:	00ffdfc4 	movi	r3,-129
    49dc:	d8802e15 	stw	r2,184(sp)
    49e0:	90e4703a 	and	r18,r18,r3
    49e4:	983d0526 	beq	r19,zero,3dfc <__alt_mem_Onchip_SRAM+0xf8003dfc>
    49e8:	0039883a 	mov	fp,zero
    49ec:	003d0806 	br	3e10 <__alt_mem_Onchip_SRAM+0xf8003e10>
    49f0:	dc402617 	ldw	r17,152(sp)
    49f4:	0441d30e 	bge	zero,r17,5144 <___vfprintf_internal_r+0x1a30>
    49f8:	dc403217 	ldw	r17,200(sp)
    49fc:	d8803317 	ldw	r2,204(sp)
    4a00:	1440010e 	bge	r2,r17,4a08 <___vfprintf_internal_r+0x12f4>
    4a04:	1023883a 	mov	r17,r2
    4a08:	04400a0e 	bge	zero,r17,4a34 <___vfprintf_internal_r+0x1320>
    4a0c:	d8801f17 	ldw	r2,124(sp)
    4a10:	1c47883a 	add	r3,r3,r17
    4a14:	44000015 	stw	r16,0(r8)
    4a18:	10800044 	addi	r2,r2,1
    4a1c:	44400115 	stw	r17,4(r8)
    4a20:	d8c02015 	stw	r3,128(sp)
    4a24:	d8801f15 	stw	r2,124(sp)
    4a28:	010001c4 	movi	r4,7
    4a2c:	20826516 	blt	r4,r2,53c4 <___vfprintf_internal_r+0x1cb0>
    4a30:	42000204 	addi	r8,r8,8
    4a34:	88026116 	blt	r17,zero,53bc <___vfprintf_internal_r+0x1ca8>
    4a38:	d9003217 	ldw	r4,200(sp)
    4a3c:	2463c83a 	sub	r17,r4,r17
    4a40:	04407b0e 	bge	zero,r17,4c30 <___vfprintf_internal_r+0x151c>
    4a44:	05800404 	movi	r22,16
    4a48:	d8801f17 	ldw	r2,124(sp)
    4a4c:	b4419d0e 	bge	r22,r17,50c4 <___vfprintf_internal_r+0x19b0>
    4a50:	01000074 	movhi	r4,1
    4a54:	211ac984 	addi	r4,r4,27430
    4a58:	d9002c15 	stw	r4,176(sp)
    4a5c:	070001c4 	movi	fp,7
    4a60:	dcc02d17 	ldw	r19,180(sp)
    4a64:	00000306 	br	4a74 <___vfprintf_internal_r+0x1360>
    4a68:	42000204 	addi	r8,r8,8
    4a6c:	8c7ffc04 	addi	r17,r17,-16
    4a70:	b441970e 	bge	r22,r17,50d0 <___vfprintf_internal_r+0x19bc>
    4a74:	18c00404 	addi	r3,r3,16
    4a78:	10800044 	addi	r2,r2,1
    4a7c:	45000015 	stw	r20,0(r8)
    4a80:	45800115 	stw	r22,4(r8)
    4a84:	d8c02015 	stw	r3,128(sp)
    4a88:	d8801f15 	stw	r2,124(sp)
    4a8c:	e0bff60e 	bge	fp,r2,4a68 <__alt_mem_Onchip_SRAM+0xf8004a68>
    4a90:	d9801e04 	addi	r6,sp,120
    4a94:	b80b883a 	mov	r5,r23
    4a98:	9809883a 	mov	r4,r19
    4a9c:	000c6280 	call	c628 <__sprint_r>
    4aa0:	103c201e 	bne	r2,zero,3b24 <__alt_mem_Onchip_SRAM+0xf8003b24>
    4aa4:	d8c02017 	ldw	r3,128(sp)
    4aa8:	d8801f17 	ldw	r2,124(sp)
    4aac:	da000404 	addi	r8,sp,16
    4ab0:	003fee06 	br	4a6c <__alt_mem_Onchip_SRAM+0xf8004a6c>
    4ab4:	d9002d17 	ldw	r4,180(sp)
    4ab8:	d9801e04 	addi	r6,sp,120
    4abc:	b80b883a 	mov	r5,r23
    4ac0:	000c6280 	call	c628 <__sprint_r>
    4ac4:	103c171e 	bne	r2,zero,3b24 <__alt_mem_Onchip_SRAM+0xf8003b24>
    4ac8:	d8c02017 	ldw	r3,128(sp)
    4acc:	df002787 	ldb	fp,158(sp)
    4ad0:	da000404 	addi	r8,sp,16
    4ad4:	003d3406 	br	3fa8 <__alt_mem_Onchip_SRAM+0xf8003fa8>
    4ad8:	9080040c 	andi	r2,r18,16
    4adc:	10016126 	beq	r2,zero,5064 <___vfprintf_internal_r+0x1950>
    4ae0:	d9402e17 	ldw	r5,184(sp)
    4ae4:	2cc00017 	ldw	r19,0(r5)
    4ae8:	29400104 	addi	r5,r5,4
    4aec:	d9402e15 	stw	r5,184(sp)
    4af0:	982dd7fa 	srai	r22,r19,31
    4af4:	b005883a 	mov	r2,r22
    4af8:	003c5a06 	br	3c64 <__alt_mem_Onchip_SRAM+0xf8003c64>
    4afc:	9080040c 	andi	r2,r18,16
    4b00:	10003526 	beq	r2,zero,4bd8 <___vfprintf_internal_r+0x14c4>
    4b04:	d8c02e17 	ldw	r3,184(sp)
    4b08:	d9002a17 	ldw	r4,168(sp)
    4b0c:	d8002785 	stb	zero,158(sp)
    4b10:	18800104 	addi	r2,r3,4
    4b14:	1cc00017 	ldw	r19,0(r3)
    4b18:	002d883a 	mov	r22,zero
    4b1c:	20003716 	blt	r4,zero,4bfc <___vfprintf_internal_r+0x14e8>
    4b20:	00ffdfc4 	movi	r3,-129
    4b24:	d8802e15 	stw	r2,184(sp)
    4b28:	90e4703a 	and	r18,r18,r3
    4b2c:	0039883a 	mov	fp,zero
    4b30:	983dd426 	beq	r19,zero,4284 <__alt_mem_Onchip_SRAM+0xf8004284>
    4b34:	00800244 	movi	r2,9
    4b38:	14fc5336 	bltu	r2,r19,3c88 <__alt_mem_Onchip_SRAM+0xf8003c88>
    4b3c:	d8c02817 	ldw	r3,160(sp)
    4b40:	dc001dc4 	addi	r16,sp,119
    4b44:	9cc00c04 	addi	r19,r19,48
    4b48:	1c07c83a 	sub	r3,r3,r16
    4b4c:	dcc01dc5 	stb	r19,119(sp)
    4b50:	d8c02b15 	stw	r3,172(sp)
    4b54:	003cc606 	br	3e70 <__alt_mem_Onchip_SRAM+0xf8003e70>
    4b58:	d8803317 	ldw	r2,204(sp)
    4b5c:	143fffc4 	addi	r16,r2,-1
    4b60:	043f4d0e 	bge	zero,r16,4898 <__alt_mem_Onchip_SRAM+0xf8004898>
    4b64:	07000404 	movi	fp,16
    4b68:	e400810e 	bge	fp,r16,4d70 <___vfprintf_internal_r+0x165c>
    4b6c:	01400074 	movhi	r5,1
    4b70:	295ac984 	addi	r5,r5,27430
    4b74:	d9402c15 	stw	r5,176(sp)
    4b78:	01c001c4 	movi	r7,7
    4b7c:	dcc02d17 	ldw	r19,180(sp)
    4b80:	00000306 	br	4b90 <___vfprintf_internal_r+0x147c>
    4b84:	b5800204 	addi	r22,r22,8
    4b88:	843ffc04 	addi	r16,r16,-16
    4b8c:	e4007b0e 	bge	fp,r16,4d7c <___vfprintf_internal_r+0x1668>
    4b90:	18c00404 	addi	r3,r3,16
    4b94:	8c400044 	addi	r17,r17,1
    4b98:	b5000015 	stw	r20,0(r22)
    4b9c:	b7000115 	stw	fp,4(r22)
    4ba0:	d8c02015 	stw	r3,128(sp)
    4ba4:	dc401f15 	stw	r17,124(sp)
    4ba8:	3c7ff60e 	bge	r7,r17,4b84 <__alt_mem_Onchip_SRAM+0xf8004b84>
    4bac:	d9801e04 	addi	r6,sp,120
    4bb0:	b80b883a 	mov	r5,r23
    4bb4:	9809883a 	mov	r4,r19
    4bb8:	d9c03c15 	stw	r7,240(sp)
    4bbc:	000c6280 	call	c628 <__sprint_r>
    4bc0:	d9c03c17 	ldw	r7,240(sp)
    4bc4:	103bd71e 	bne	r2,zero,3b24 <__alt_mem_Onchip_SRAM+0xf8003b24>
    4bc8:	d8c02017 	ldw	r3,128(sp)
    4bcc:	dc401f17 	ldw	r17,124(sp)
    4bd0:	dd800404 	addi	r22,sp,16
    4bd4:	003fec06 	br	4b88 <__alt_mem_Onchip_SRAM+0xf8004b88>
    4bd8:	9080100c 	andi	r2,r18,64
    4bdc:	d8002785 	stb	zero,158(sp)
    4be0:	10010e26 	beq	r2,zero,501c <___vfprintf_internal_r+0x1908>
    4be4:	d9402e17 	ldw	r5,184(sp)
    4be8:	d8c02a17 	ldw	r3,168(sp)
    4bec:	002d883a 	mov	r22,zero
    4bf0:	28800104 	addi	r2,r5,4
    4bf4:	2cc0000b 	ldhu	r19,0(r5)
    4bf8:	183fc90e 	bge	r3,zero,4b20 <__alt_mem_Onchip_SRAM+0xf8004b20>
    4bfc:	d8802e15 	stw	r2,184(sp)
    4c00:	0039883a 	mov	fp,zero
    4c04:	9d84b03a 	or	r2,r19,r22
    4c08:	103c1e1e 	bne	r2,zero,3c84 <__alt_mem_Onchip_SRAM+0xf8003c84>
    4c0c:	00800044 	movi	r2,1
    4c10:	003e6c06 	br	45c4 <__alt_mem_Onchip_SRAM+0xf80045c4>
    4c14:	d9002d17 	ldw	r4,180(sp)
    4c18:	d9801e04 	addi	r6,sp,120
    4c1c:	b80b883a 	mov	r5,r23
    4c20:	000c6280 	call	c628 <__sprint_r>
    4c24:	103bbf1e 	bne	r2,zero,3b24 <__alt_mem_Onchip_SRAM+0xf8003b24>
    4c28:	d8c02017 	ldw	r3,128(sp)
    4c2c:	da000404 	addi	r8,sp,16
    4c30:	d9003217 	ldw	r4,200(sp)
    4c34:	d8802617 	ldw	r2,152(sp)
    4c38:	d9403317 	ldw	r5,204(sp)
    4c3c:	8123883a 	add	r17,r16,r4
    4c40:	11400216 	blt	r2,r5,4c4c <___vfprintf_internal_r+0x1538>
    4c44:	9100004c 	andi	r4,r18,1
    4c48:	20000d26 	beq	r4,zero,4c80 <___vfprintf_internal_r+0x156c>
    4c4c:	d9003717 	ldw	r4,220(sp)
    4c50:	d9403417 	ldw	r5,208(sp)
    4c54:	1907883a 	add	r3,r3,r4
    4c58:	d9001f17 	ldw	r4,124(sp)
    4c5c:	41400015 	stw	r5,0(r8)
    4c60:	d9403717 	ldw	r5,220(sp)
    4c64:	21000044 	addi	r4,r4,1
    4c68:	d8c02015 	stw	r3,128(sp)
    4c6c:	41400115 	stw	r5,4(r8)
    4c70:	d9001f15 	stw	r4,124(sp)
    4c74:	014001c4 	movi	r5,7
    4c78:	2901e816 	blt	r5,r4,541c <___vfprintf_internal_r+0x1d08>
    4c7c:	42000204 	addi	r8,r8,8
    4c80:	d9003317 	ldw	r4,204(sp)
    4c84:	8121883a 	add	r16,r16,r4
    4c88:	2085c83a 	sub	r2,r4,r2
    4c8c:	8461c83a 	sub	r16,r16,r17
    4c90:	1400010e 	bge	r2,r16,4c98 <___vfprintf_internal_r+0x1584>
    4c94:	1021883a 	mov	r16,r2
    4c98:	04000a0e 	bge	zero,r16,4cc4 <___vfprintf_internal_r+0x15b0>
    4c9c:	d9001f17 	ldw	r4,124(sp)
    4ca0:	1c07883a 	add	r3,r3,r16
    4ca4:	44400015 	stw	r17,0(r8)
    4ca8:	21000044 	addi	r4,r4,1
    4cac:	44000115 	stw	r16,4(r8)
    4cb0:	d8c02015 	stw	r3,128(sp)
    4cb4:	d9001f15 	stw	r4,124(sp)
    4cb8:	014001c4 	movi	r5,7
    4cbc:	2901fb16 	blt	r5,r4,54ac <___vfprintf_internal_r+0x1d98>
    4cc0:	42000204 	addi	r8,r8,8
    4cc4:	8001f716 	blt	r16,zero,54a4 <___vfprintf_internal_r+0x1d90>
    4cc8:	1421c83a 	sub	r16,r2,r16
    4ccc:	043d160e 	bge	zero,r16,4128 <__alt_mem_Onchip_SRAM+0xf8004128>
    4cd0:	04400404 	movi	r17,16
    4cd4:	d8801f17 	ldw	r2,124(sp)
    4cd8:	8c3efb0e 	bge	r17,r16,48c8 <__alt_mem_Onchip_SRAM+0xf80048c8>
    4cdc:	01400074 	movhi	r5,1
    4ce0:	295ac984 	addi	r5,r5,27430
    4ce4:	d9402c15 	stw	r5,176(sp)
    4ce8:	058001c4 	movi	r22,7
    4cec:	dcc02d17 	ldw	r19,180(sp)
    4cf0:	00000306 	br	4d00 <___vfprintf_internal_r+0x15ec>
    4cf4:	42000204 	addi	r8,r8,8
    4cf8:	843ffc04 	addi	r16,r16,-16
    4cfc:	8c3ef50e 	bge	r17,r16,48d4 <__alt_mem_Onchip_SRAM+0xf80048d4>
    4d00:	18c00404 	addi	r3,r3,16
    4d04:	10800044 	addi	r2,r2,1
    4d08:	45000015 	stw	r20,0(r8)
    4d0c:	44400115 	stw	r17,4(r8)
    4d10:	d8c02015 	stw	r3,128(sp)
    4d14:	d8801f15 	stw	r2,124(sp)
    4d18:	b0bff60e 	bge	r22,r2,4cf4 <__alt_mem_Onchip_SRAM+0xf8004cf4>
    4d1c:	d9801e04 	addi	r6,sp,120
    4d20:	b80b883a 	mov	r5,r23
    4d24:	9809883a 	mov	r4,r19
    4d28:	000c6280 	call	c628 <__sprint_r>
    4d2c:	103b7d1e 	bne	r2,zero,3b24 <__alt_mem_Onchip_SRAM+0xf8003b24>
    4d30:	d8c02017 	ldw	r3,128(sp)
    4d34:	d8801f17 	ldw	r2,124(sp)
    4d38:	da000404 	addi	r8,sp,16
    4d3c:	003fee06 	br	4cf8 <__alt_mem_Onchip_SRAM+0xf8004cf8>
    4d40:	9088703a 	and	r4,r18,r2
    4d44:	203eab1e 	bne	r4,zero,47f4 <__alt_mem_Onchip_SRAM+0xf80047f4>
    4d48:	dc401f17 	ldw	r17,124(sp)
    4d4c:	40800115 	stw	r2,4(r8)
    4d50:	44000015 	stw	r16,0(r8)
    4d54:	8c400044 	addi	r17,r17,1
    4d58:	d8c02015 	stw	r3,128(sp)
    4d5c:	dc401f15 	stw	r17,124(sp)
    4d60:	008001c4 	movi	r2,7
    4d64:	14400e16 	blt	r2,r17,4da0 <___vfprintf_internal_r+0x168c>
    4d68:	45800204 	addi	r22,r8,8
    4d6c:	003eca06 	br	4898 <__alt_mem_Onchip_SRAM+0xf8004898>
    4d70:	01000074 	movhi	r4,1
    4d74:	211ac984 	addi	r4,r4,27430
    4d78:	d9002c15 	stw	r4,176(sp)
    4d7c:	d8802c17 	ldw	r2,176(sp)
    4d80:	1c07883a 	add	r3,r3,r16
    4d84:	8c400044 	addi	r17,r17,1
    4d88:	b0800015 	stw	r2,0(r22)
    4d8c:	b4000115 	stw	r16,4(r22)
    4d90:	d8c02015 	stw	r3,128(sp)
    4d94:	dc401f15 	stw	r17,124(sp)
    4d98:	008001c4 	movi	r2,7
    4d9c:	147ebd0e 	bge	r2,r17,4894 <__alt_mem_Onchip_SRAM+0xf8004894>
    4da0:	d9002d17 	ldw	r4,180(sp)
    4da4:	d9801e04 	addi	r6,sp,120
    4da8:	b80b883a 	mov	r5,r23
    4dac:	000c6280 	call	c628 <__sprint_r>
    4db0:	103b5c1e 	bne	r2,zero,3b24 <__alt_mem_Onchip_SRAM+0xf8003b24>
    4db4:	d8c02017 	ldw	r3,128(sp)
    4db8:	dc401f17 	ldw	r17,124(sp)
    4dbc:	dd800404 	addi	r22,sp,16
    4dc0:	003eb506 	br	4898 <__alt_mem_Onchip_SRAM+0xf8004898>
    4dc4:	d9002d17 	ldw	r4,180(sp)
    4dc8:	d9801e04 	addi	r6,sp,120
    4dcc:	b80b883a 	mov	r5,r23
    4dd0:	000c6280 	call	c628 <__sprint_r>
    4dd4:	103b531e 	bne	r2,zero,3b24 <__alt_mem_Onchip_SRAM+0xf8003b24>
    4dd8:	d8c02017 	ldw	r3,128(sp)
    4ddc:	dc401f17 	ldw	r17,124(sp)
    4de0:	da000404 	addi	r8,sp,16
    4de4:	003e8d06 	br	481c <__alt_mem_Onchip_SRAM+0xf800481c>
    4de8:	d9002d17 	ldw	r4,180(sp)
    4dec:	d9801e04 	addi	r6,sp,120
    4df0:	b80b883a 	mov	r5,r23
    4df4:	000c6280 	call	c628 <__sprint_r>
    4df8:	103b4a1e 	bne	r2,zero,3b24 <__alt_mem_Onchip_SRAM+0xf8003b24>
    4dfc:	d8c02017 	ldw	r3,128(sp)
    4e00:	dc401f17 	ldw	r17,124(sp)
    4e04:	dd800404 	addi	r22,sp,16
    4e08:	003e8f06 	br	4848 <__alt_mem_Onchip_SRAM+0xf8004848>
    4e0c:	0027883a 	mov	r19,zero
    4e10:	003f4a06 	br	4b3c <__alt_mem_Onchip_SRAM+0xf8004b3c>
    4e14:	d9002d17 	ldw	r4,180(sp)
    4e18:	d9801e04 	addi	r6,sp,120
    4e1c:	b80b883a 	mov	r5,r23
    4e20:	000c6280 	call	c628 <__sprint_r>
    4e24:	103b3f1e 	bne	r2,zero,3b24 <__alt_mem_Onchip_SRAM+0xf8003b24>
    4e28:	d8c02017 	ldw	r3,128(sp)
    4e2c:	da000404 	addi	r8,sp,16
    4e30:	003c7b06 	br	4020 <__alt_mem_Onchip_SRAM+0xf8004020>
    4e34:	d9402a17 	ldw	r5,168(sp)
    4e38:	04e7c83a 	sub	r19,zero,r19
    4e3c:	07000b44 	movi	fp,45
    4e40:	9804c03a 	cmpne	r2,r19,zero
    4e44:	05adc83a 	sub	r22,zero,r22
    4e48:	df002785 	stb	fp,158(sp)
    4e4c:	b0adc83a 	sub	r22,r22,r2
    4e50:	28017b16 	blt	r5,zero,5440 <___vfprintf_internal_r+0x1d2c>
    4e54:	00bfdfc4 	movi	r2,-129
    4e58:	90a4703a 	and	r18,r18,r2
    4e5c:	003b8906 	br	3c84 <__alt_mem_Onchip_SRAM+0xf8003c84>
    4e60:	d9003617 	ldw	r4,216(sp)
    4e64:	d9403817 	ldw	r5,224(sp)
    4e68:	da003d15 	stw	r8,244(sp)
    4e6c:	000acdc0 	call	acdc <__fpclassifyd>
    4e70:	da003d17 	ldw	r8,244(sp)
    4e74:	1000f026 	beq	r2,zero,5238 <___vfprintf_internal_r+0x1b24>
    4e78:	d9002a17 	ldw	r4,168(sp)
    4e7c:	05bff7c4 	movi	r22,-33
    4e80:	00bfffc4 	movi	r2,-1
    4e84:	8dac703a 	and	r22,r17,r22
    4e88:	20820026 	beq	r4,r2,568c <___vfprintf_internal_r+0x1f78>
    4e8c:	008011c4 	movi	r2,71
    4e90:	b081f726 	beq	r22,r2,5670 <___vfprintf_internal_r+0x1f5c>
    4e94:	d9003817 	ldw	r4,224(sp)
    4e98:	90c04014 	ori	r3,r18,256
    4e9c:	d8c02c15 	stw	r3,176(sp)
    4ea0:	20021516 	blt	r4,zero,56f8 <___vfprintf_internal_r+0x1fe4>
    4ea4:	dcc03817 	ldw	r19,224(sp)
    4ea8:	d8002905 	stb	zero,164(sp)
    4eac:	00801984 	movi	r2,102
    4eb0:	8881f926 	beq	r17,r2,5698 <___vfprintf_internal_r+0x1f84>
    4eb4:	00801184 	movi	r2,70
    4eb8:	88821c26 	beq	r17,r2,572c <___vfprintf_internal_r+0x2018>
    4ebc:	00801144 	movi	r2,69
    4ec0:	b081ef26 	beq	r22,r2,5680 <___vfprintf_internal_r+0x1f6c>
    4ec4:	d8c02a17 	ldw	r3,168(sp)
    4ec8:	d8802104 	addi	r2,sp,132
    4ecc:	d8800315 	stw	r2,12(sp)
    4ed0:	d9403617 	ldw	r5,216(sp)
    4ed4:	d8802504 	addi	r2,sp,148
    4ed8:	d9002d17 	ldw	r4,180(sp)
    4edc:	d8800215 	stw	r2,8(sp)
    4ee0:	d8802604 	addi	r2,sp,152
    4ee4:	d8c00015 	stw	r3,0(sp)
    4ee8:	d8800115 	stw	r2,4(sp)
    4eec:	01c00084 	movi	r7,2
    4ef0:	980d883a 	mov	r6,r19
    4ef4:	d8c03c15 	stw	r3,240(sp)
    4ef8:	da003d15 	stw	r8,244(sp)
    4efc:	0005e440 	call	5e44 <_dtoa_r>
    4f00:	1021883a 	mov	r16,r2
    4f04:	008019c4 	movi	r2,103
    4f08:	d8c03c17 	ldw	r3,240(sp)
    4f0c:	da003d17 	ldw	r8,244(sp)
    4f10:	88817126 	beq	r17,r2,54d8 <___vfprintf_internal_r+0x1dc4>
    4f14:	008011c4 	movi	r2,71
    4f18:	88829126 	beq	r17,r2,5960 <___vfprintf_internal_r+0x224c>
    4f1c:	80f9883a 	add	fp,r16,r3
    4f20:	d9003617 	ldw	r4,216(sp)
    4f24:	000d883a 	mov	r6,zero
    4f28:	000f883a 	mov	r7,zero
    4f2c:	980b883a 	mov	r5,r19
    4f30:	da003d15 	stw	r8,244(sp)
    4f34:	00104b80 	call	104b8 <__eqdf2>
    4f38:	da003d17 	ldw	r8,244(sp)
    4f3c:	10018d26 	beq	r2,zero,5574 <___vfprintf_internal_r+0x1e60>
    4f40:	d8802117 	ldw	r2,132(sp)
    4f44:	1700062e 	bgeu	r2,fp,4f60 <___vfprintf_internal_r+0x184c>
    4f48:	01000c04 	movi	r4,48
    4f4c:	10c00044 	addi	r3,r2,1
    4f50:	d8c02115 	stw	r3,132(sp)
    4f54:	11000005 	stb	r4,0(r2)
    4f58:	d8802117 	ldw	r2,132(sp)
    4f5c:	173ffb36 	bltu	r2,fp,4f4c <__alt_mem_Onchip_SRAM+0xf8004f4c>
    4f60:	1405c83a 	sub	r2,r2,r16
    4f64:	d8803315 	stw	r2,204(sp)
    4f68:	008011c4 	movi	r2,71
    4f6c:	b0817626 	beq	r22,r2,5548 <___vfprintf_internal_r+0x1e34>
    4f70:	00801944 	movi	r2,101
    4f74:	1442800e 	bge	r2,r17,5978 <___vfprintf_internal_r+0x2264>
    4f78:	d8c02617 	ldw	r3,152(sp)
    4f7c:	00801984 	movi	r2,102
    4f80:	d8c03215 	stw	r3,200(sp)
    4f84:	8881fe26 	beq	r17,r2,5780 <___vfprintf_internal_r+0x206c>
    4f88:	d8c03217 	ldw	r3,200(sp)
    4f8c:	d9003317 	ldw	r4,204(sp)
    4f90:	1901dd16 	blt	r3,r4,5708 <___vfprintf_internal_r+0x1ff4>
    4f94:	9480004c 	andi	r18,r18,1
    4f98:	90022b1e 	bne	r18,zero,5848 <___vfprintf_internal_r+0x2134>
    4f9c:	1805883a 	mov	r2,r3
    4fa0:	18028316 	blt	r3,zero,59b0 <___vfprintf_internal_r+0x229c>
    4fa4:	d8c03217 	ldw	r3,200(sp)
    4fa8:	044019c4 	movi	r17,103
    4fac:	d8c02b15 	stw	r3,172(sp)
    4fb0:	df002907 	ldb	fp,164(sp)
    4fb4:	e001531e 	bne	fp,zero,5504 <___vfprintf_internal_r+0x1df0>
    4fb8:	df002783 	ldbu	fp,158(sp)
    4fbc:	d8802915 	stw	r2,164(sp)
    4fc0:	dc802c17 	ldw	r18,176(sp)
    4fc4:	d8002a15 	stw	zero,168(sp)
    4fc8:	003baf06 	br	3e88 <__alt_mem_Onchip_SRAM+0xf8003e88>
    4fcc:	d8c02e17 	ldw	r3,184(sp)
    4fd0:	d9002e17 	ldw	r4,184(sp)
    4fd4:	d9402e17 	ldw	r5,184(sp)
    4fd8:	18c00017 	ldw	r3,0(r3)
    4fdc:	21000117 	ldw	r4,4(r4)
    4fe0:	29400204 	addi	r5,r5,8
    4fe4:	d8c03615 	stw	r3,216(sp)
    4fe8:	d9003815 	stw	r4,224(sp)
    4fec:	d9402e15 	stw	r5,184(sp)
    4ff0:	003b5006 	br	3d34 <__alt_mem_Onchip_SRAM+0xf8003d34>
    4ff4:	ac400007 	ldb	r17,0(r21)
    4ff8:	003a2806 	br	389c <__alt_mem_Onchip_SRAM+0xf800389c>
    4ffc:	9080100c 	andi	r2,r18,64
    5000:	1000a826 	beq	r2,zero,52a4 <___vfprintf_internal_r+0x1b90>
    5004:	d8c02e17 	ldw	r3,184(sp)
    5008:	002d883a 	mov	r22,zero
    500c:	1cc0000b 	ldhu	r19,0(r3)
    5010:	18c00104 	addi	r3,r3,4
    5014:	d8c02e15 	stw	r3,184(sp)
    5018:	003caf06 	br	42d8 <__alt_mem_Onchip_SRAM+0xf80042d8>
    501c:	d9002e17 	ldw	r4,184(sp)
    5020:	d9402a17 	ldw	r5,168(sp)
    5024:	002d883a 	mov	r22,zero
    5028:	20800104 	addi	r2,r4,4
    502c:	24c00017 	ldw	r19,0(r4)
    5030:	283ebb0e 	bge	r5,zero,4b20 <__alt_mem_Onchip_SRAM+0xf8004b20>
    5034:	003ef106 	br	4bfc <__alt_mem_Onchip_SRAM+0xf8004bfc>
    5038:	9080040c 	andi	r2,r18,16
    503c:	1000921e 	bne	r2,zero,5288 <___vfprintf_internal_r+0x1b74>
    5040:	9480100c 	andi	r18,r18,64
    5044:	90013926 	beq	r18,zero,552c <___vfprintf_internal_r+0x1e18>
    5048:	d9402e17 	ldw	r5,184(sp)
    504c:	d8c02f17 	ldw	r3,188(sp)
    5050:	28800017 	ldw	r2,0(r5)
    5054:	29400104 	addi	r5,r5,4
    5058:	d9402e15 	stw	r5,184(sp)
    505c:	10c0000d 	sth	r3,0(r2)
    5060:	0039e406 	br	37f4 <__alt_mem_Onchip_SRAM+0xf80037f4>
    5064:	9080100c 	andi	r2,r18,64
    5068:	10008026 	beq	r2,zero,526c <___vfprintf_internal_r+0x1b58>
    506c:	d8802e17 	ldw	r2,184(sp)
    5070:	14c0000f 	ldh	r19,0(r2)
    5074:	10800104 	addi	r2,r2,4
    5078:	d8802e15 	stw	r2,184(sp)
    507c:	982dd7fa 	srai	r22,r19,31
    5080:	b005883a 	mov	r2,r22
    5084:	003af706 	br	3c64 <__alt_mem_Onchip_SRAM+0xf8003c64>
    5088:	9080100c 	andi	r2,r18,64
    508c:	d8002785 	stb	zero,158(sp)
    5090:	10008a1e 	bne	r2,zero,52bc <___vfprintf_internal_r+0x1ba8>
    5094:	d9002e17 	ldw	r4,184(sp)
    5098:	d9402a17 	ldw	r5,168(sp)
    509c:	002d883a 	mov	r22,zero
    50a0:	20800104 	addi	r2,r4,4
    50a4:	24c00017 	ldw	r19,0(r4)
    50a8:	283e4b0e 	bge	r5,zero,49d8 <__alt_mem_Onchip_SRAM+0xf80049d8>
    50ac:	9d86b03a 	or	r3,r19,r22
    50b0:	d8802e15 	stw	r2,184(sp)
    50b4:	183e4c1e 	bne	r3,zero,49e8 <__alt_mem_Onchip_SRAM+0xf80049e8>
    50b8:	0039883a 	mov	fp,zero
    50bc:	0005883a 	mov	r2,zero
    50c0:	003d4006 	br	45c4 <__alt_mem_Onchip_SRAM+0xf80045c4>
    50c4:	01400074 	movhi	r5,1
    50c8:	295ac984 	addi	r5,r5,27430
    50cc:	d9402c15 	stw	r5,176(sp)
    50d0:	d9402c17 	ldw	r5,176(sp)
    50d4:	1c47883a 	add	r3,r3,r17
    50d8:	10800044 	addi	r2,r2,1
    50dc:	41400015 	stw	r5,0(r8)
    50e0:	44400115 	stw	r17,4(r8)
    50e4:	d8c02015 	stw	r3,128(sp)
    50e8:	d8801f15 	stw	r2,124(sp)
    50ec:	010001c4 	movi	r4,7
    50f0:	20bec816 	blt	r4,r2,4c14 <__alt_mem_Onchip_SRAM+0xf8004c14>
    50f4:	42000204 	addi	r8,r8,8
    50f8:	003ecd06 	br	4c30 <__alt_mem_Onchip_SRAM+0xf8004c30>
    50fc:	d9002a17 	ldw	r4,168(sp)
    5100:	d8002785 	stb	zero,158(sp)
    5104:	203d2d16 	blt	r4,zero,45bc <__alt_mem_Onchip_SRAM+0xf80045bc>
    5108:	00bfdfc4 	movi	r2,-129
    510c:	90a4703a 	and	r18,r18,r2
    5110:	003a6106 	br	3a98 <__alt_mem_Onchip_SRAM+0xf8003a98>
    5114:	01000074 	movhi	r4,1
    5118:	211ac984 	addi	r4,r4,27430
    511c:	d9002c15 	stw	r4,176(sp)
    5120:	003bea06 	br	40cc <__alt_mem_Onchip_SRAM+0xf80040cc>
    5124:	d9002d17 	ldw	r4,180(sp)
    5128:	d9801e04 	addi	r6,sp,120
    512c:	b80b883a 	mov	r5,r23
    5130:	000c6280 	call	c628 <__sprint_r>
    5134:	103a7b1e 	bne	r2,zero,3b24 <__alt_mem_Onchip_SRAM+0xf8003b24>
    5138:	d8c02017 	ldw	r3,128(sp)
    513c:	da000404 	addi	r8,sp,16
    5140:	003d4106 	br	4648 <__alt_mem_Onchip_SRAM+0xf8004648>
    5144:	d8801f17 	ldw	r2,124(sp)
    5148:	01400074 	movhi	r5,1
    514c:	01000044 	movi	r4,1
    5150:	18c00044 	addi	r3,r3,1
    5154:	10800044 	addi	r2,r2,1
    5158:	295ac104 	addi	r5,r5,27396
    515c:	41000115 	stw	r4,4(r8)
    5160:	41400015 	stw	r5,0(r8)
    5164:	d8c02015 	stw	r3,128(sp)
    5168:	d8801f15 	stw	r2,124(sp)
    516c:	010001c4 	movi	r4,7
    5170:	20805c16 	blt	r4,r2,52e4 <___vfprintf_internal_r+0x1bd0>
    5174:	42000204 	addi	r8,r8,8
    5178:	8800041e 	bne	r17,zero,518c <___vfprintf_internal_r+0x1a78>
    517c:	d8803317 	ldw	r2,204(sp)
    5180:	1000021e 	bne	r2,zero,518c <___vfprintf_internal_r+0x1a78>
    5184:	9080004c 	andi	r2,r18,1
    5188:	103be726 	beq	r2,zero,4128 <__alt_mem_Onchip_SRAM+0xf8004128>
    518c:	d9003717 	ldw	r4,220(sp)
    5190:	d8801f17 	ldw	r2,124(sp)
    5194:	d9403417 	ldw	r5,208(sp)
    5198:	20c7883a 	add	r3,r4,r3
    519c:	10800044 	addi	r2,r2,1
    51a0:	41000115 	stw	r4,4(r8)
    51a4:	41400015 	stw	r5,0(r8)
    51a8:	d8c02015 	stw	r3,128(sp)
    51ac:	d8801f15 	stw	r2,124(sp)
    51b0:	010001c4 	movi	r4,7
    51b4:	20812116 	blt	r4,r2,563c <___vfprintf_internal_r+0x1f28>
    51b8:	42000204 	addi	r8,r8,8
    51bc:	0463c83a 	sub	r17,zero,r17
    51c0:	0440730e 	bge	zero,r17,5390 <___vfprintf_internal_r+0x1c7c>
    51c4:	05800404 	movi	r22,16
    51c8:	b440860e 	bge	r22,r17,53e4 <___vfprintf_internal_r+0x1cd0>
    51cc:	01400074 	movhi	r5,1
    51d0:	295ac984 	addi	r5,r5,27430
    51d4:	d9402c15 	stw	r5,176(sp)
    51d8:	070001c4 	movi	fp,7
    51dc:	dcc02d17 	ldw	r19,180(sp)
    51e0:	00000306 	br	51f0 <___vfprintf_internal_r+0x1adc>
    51e4:	42000204 	addi	r8,r8,8
    51e8:	8c7ffc04 	addi	r17,r17,-16
    51ec:	b440800e 	bge	r22,r17,53f0 <___vfprintf_internal_r+0x1cdc>
    51f0:	18c00404 	addi	r3,r3,16
    51f4:	10800044 	addi	r2,r2,1
    51f8:	45000015 	stw	r20,0(r8)
    51fc:	45800115 	stw	r22,4(r8)
    5200:	d8c02015 	stw	r3,128(sp)
    5204:	d8801f15 	stw	r2,124(sp)
    5208:	e0bff60e 	bge	fp,r2,51e4 <__alt_mem_Onchip_SRAM+0xf80051e4>
    520c:	d9801e04 	addi	r6,sp,120
    5210:	b80b883a 	mov	r5,r23
    5214:	9809883a 	mov	r4,r19
    5218:	000c6280 	call	c628 <__sprint_r>
    521c:	103a411e 	bne	r2,zero,3b24 <__alt_mem_Onchip_SRAM+0xf8003b24>
    5220:	d8c02017 	ldw	r3,128(sp)
    5224:	d8801f17 	ldw	r2,124(sp)
    5228:	da000404 	addi	r8,sp,16
    522c:	003fee06 	br	51e8 <__alt_mem_Onchip_SRAM+0xf80051e8>
    5230:	00bfffc4 	movi	r2,-1
    5234:	003a3f06 	br	3b34 <__alt_mem_Onchip_SRAM+0xf8003b34>
    5238:	008011c4 	movi	r2,71
    523c:	1440b816 	blt	r2,r17,5520 <___vfprintf_internal_r+0x1e0c>
    5240:	04000074 	movhi	r16,1
    5244:	841ab304 	addi	r16,r16,27340
    5248:	00c000c4 	movi	r3,3
    524c:	00bfdfc4 	movi	r2,-129
    5250:	d8c02915 	stw	r3,164(sp)
    5254:	90a4703a 	and	r18,r18,r2
    5258:	df002783 	ldbu	fp,158(sp)
    525c:	d8c02b15 	stw	r3,172(sp)
    5260:	d8002a15 	stw	zero,168(sp)
    5264:	d8003215 	stw	zero,200(sp)
    5268:	003b0706 	br	3e88 <__alt_mem_Onchip_SRAM+0xf8003e88>
    526c:	d8c02e17 	ldw	r3,184(sp)
    5270:	1cc00017 	ldw	r19,0(r3)
    5274:	18c00104 	addi	r3,r3,4
    5278:	d8c02e15 	stw	r3,184(sp)
    527c:	982dd7fa 	srai	r22,r19,31
    5280:	b005883a 	mov	r2,r22
    5284:	003a7706 	br	3c64 <__alt_mem_Onchip_SRAM+0xf8003c64>
    5288:	d8c02e17 	ldw	r3,184(sp)
    528c:	d9002f17 	ldw	r4,188(sp)
    5290:	18800017 	ldw	r2,0(r3)
    5294:	18c00104 	addi	r3,r3,4
    5298:	d8c02e15 	stw	r3,184(sp)
    529c:	11000015 	stw	r4,0(r2)
    52a0:	00395406 	br	37f4 <__alt_mem_Onchip_SRAM+0xf80037f4>
    52a4:	d9002e17 	ldw	r4,184(sp)
    52a8:	002d883a 	mov	r22,zero
    52ac:	24c00017 	ldw	r19,0(r4)
    52b0:	21000104 	addi	r4,r4,4
    52b4:	d9002e15 	stw	r4,184(sp)
    52b8:	003c0706 	br	42d8 <__alt_mem_Onchip_SRAM+0xf80042d8>
    52bc:	d9402e17 	ldw	r5,184(sp)
    52c0:	d8c02a17 	ldw	r3,168(sp)
    52c4:	002d883a 	mov	r22,zero
    52c8:	28800104 	addi	r2,r5,4
    52cc:	2cc0000b 	ldhu	r19,0(r5)
    52d0:	183dc10e 	bge	r3,zero,49d8 <__alt_mem_Onchip_SRAM+0xf80049d8>
    52d4:	003f7506 	br	50ac <__alt_mem_Onchip_SRAM+0xf80050ac>
    52d8:	04000074 	movhi	r16,1
    52dc:	841ab104 	addi	r16,r16,27332
    52e0:	003aa706 	br	3d80 <__alt_mem_Onchip_SRAM+0xf8003d80>
    52e4:	d9002d17 	ldw	r4,180(sp)
    52e8:	d9801e04 	addi	r6,sp,120
    52ec:	b80b883a 	mov	r5,r23
    52f0:	000c6280 	call	c628 <__sprint_r>
    52f4:	103a0b1e 	bne	r2,zero,3b24 <__alt_mem_Onchip_SRAM+0xf8003b24>
    52f8:	dc402617 	ldw	r17,152(sp)
    52fc:	d8c02017 	ldw	r3,128(sp)
    5300:	da000404 	addi	r8,sp,16
    5304:	003f9c06 	br	5178 <__alt_mem_Onchip_SRAM+0xf8005178>
    5308:	ac400043 	ldbu	r17,1(r21)
    530c:	84000814 	ori	r16,r16,32
    5310:	ad400044 	addi	r21,r21,1
    5314:	8c403fcc 	andi	r17,r17,255
    5318:	8c40201c 	xori	r17,r17,128
    531c:	8c7fe004 	addi	r17,r17,-128
    5320:	00395e06 	br	389c <__alt_mem_Onchip_SRAM+0xf800389c>
    5324:	d8c02e15 	stw	r3,184(sp)
    5328:	0039883a 	mov	fp,zero
    532c:	003e3506 	br	4c04 <__alt_mem_Onchip_SRAM+0xf8004c04>
    5330:	d9002d17 	ldw	r4,180(sp)
    5334:	d9801e04 	addi	r6,sp,120
    5338:	b80b883a 	mov	r5,r23
    533c:	000c6280 	call	c628 <__sprint_r>
    5340:	1039f81e 	bne	r2,zero,3b24 <__alt_mem_Onchip_SRAM+0xf8003b24>
    5344:	d8c02017 	ldw	r3,128(sp)
    5348:	da000404 	addi	r8,sp,16
    534c:	003cd006 	br	4690 <__alt_mem_Onchip_SRAM+0xf8004690>
    5350:	8009883a 	mov	r4,r16
    5354:	df003d15 	stw	fp,244(sp)
    5358:	00013700 	call	1370 <strlen>
    535c:	d8802b15 	stw	r2,172(sp)
    5360:	da003d17 	ldw	r8,244(sp)
    5364:	103c200e 	bge	r2,zero,43e8 <__alt_mem_Onchip_SRAM+0xf80043e8>
    5368:	0005883a 	mov	r2,zero
    536c:	003c1e06 	br	43e8 <__alt_mem_Onchip_SRAM+0xf80043e8>
    5370:	d9002d17 	ldw	r4,180(sp)
    5374:	d9801e04 	addi	r6,sp,120
    5378:	b80b883a 	mov	r5,r23
    537c:	000c6280 	call	c628 <__sprint_r>
    5380:	1039e81e 	bne	r2,zero,3b24 <__alt_mem_Onchip_SRAM+0xf8003b24>
    5384:	d8c02017 	ldw	r3,128(sp)
    5388:	d8801f17 	ldw	r2,124(sp)
    538c:	da000404 	addi	r8,sp,16
    5390:	d9403317 	ldw	r5,204(sp)
    5394:	10800044 	addi	r2,r2,1
    5398:	44000015 	stw	r16,0(r8)
    539c:	28c7883a 	add	r3,r5,r3
    53a0:	003b5b06 	br	4110 <__alt_mem_Onchip_SRAM+0xf8004110>
    53a4:	01000074 	movhi	r4,1
    53a8:	211acd84 	addi	r4,r4,27446
    53ac:	d9003515 	stw	r4,212(sp)
    53b0:	003af206 	br	3f7c <__alt_mem_Onchip_SRAM+0xf8003f7c>
    53b4:	013fffc4 	movi	r4,-1
    53b8:	003a0806 	br	3bdc <__alt_mem_Onchip_SRAM+0xf8003bdc>
    53bc:	0023883a 	mov	r17,zero
    53c0:	003d9d06 	br	4a38 <__alt_mem_Onchip_SRAM+0xf8004a38>
    53c4:	d9002d17 	ldw	r4,180(sp)
    53c8:	d9801e04 	addi	r6,sp,120
    53cc:	b80b883a 	mov	r5,r23
    53d0:	000c6280 	call	c628 <__sprint_r>
    53d4:	1039d31e 	bne	r2,zero,3b24 <__alt_mem_Onchip_SRAM+0xf8003b24>
    53d8:	d8c02017 	ldw	r3,128(sp)
    53dc:	da000404 	addi	r8,sp,16
    53e0:	003d9406 	br	4a34 <__alt_mem_Onchip_SRAM+0xf8004a34>
    53e4:	01000074 	movhi	r4,1
    53e8:	211ac984 	addi	r4,r4,27430
    53ec:	d9002c15 	stw	r4,176(sp)
    53f0:	d9002c17 	ldw	r4,176(sp)
    53f4:	1c47883a 	add	r3,r3,r17
    53f8:	10800044 	addi	r2,r2,1
    53fc:	41000015 	stw	r4,0(r8)
    5400:	44400115 	stw	r17,4(r8)
    5404:	d8c02015 	stw	r3,128(sp)
    5408:	d8801f15 	stw	r2,124(sp)
    540c:	010001c4 	movi	r4,7
    5410:	20bfd716 	blt	r4,r2,5370 <__alt_mem_Onchip_SRAM+0xf8005370>
    5414:	42000204 	addi	r8,r8,8
    5418:	003fdd06 	br	5390 <__alt_mem_Onchip_SRAM+0xf8005390>
    541c:	d9002d17 	ldw	r4,180(sp)
    5420:	d9801e04 	addi	r6,sp,120
    5424:	b80b883a 	mov	r5,r23
    5428:	000c6280 	call	c628 <__sprint_r>
    542c:	1039bd1e 	bne	r2,zero,3b24 <__alt_mem_Onchip_SRAM+0xf8003b24>
    5430:	d8802617 	ldw	r2,152(sp)
    5434:	d8c02017 	ldw	r3,128(sp)
    5438:	da000404 	addi	r8,sp,16
    543c:	003e1006 	br	4c80 <__alt_mem_Onchip_SRAM+0xf8004c80>
    5440:	00800044 	movi	r2,1
    5444:	10803fcc 	andi	r2,r2,255
    5448:	00c00044 	movi	r3,1
    544c:	10fa0d26 	beq	r2,r3,3c84 <__alt_mem_Onchip_SRAM+0xf8003c84>
    5450:	00c00084 	movi	r3,2
    5454:	10fbaf26 	beq	r2,r3,4314 <__alt_mem_Onchip_SRAM+0xf8004314>
    5458:	003a6d06 	br	3e10 <__alt_mem_Onchip_SRAM+0xf8003e10>
    545c:	01000074 	movhi	r4,1
    5460:	211acd84 	addi	r4,r4,27446
    5464:	d9003515 	stw	r4,212(sp)
    5468:	003b5406 	br	41bc <__alt_mem_Onchip_SRAM+0xf80041bc>
    546c:	d8802a17 	ldw	r2,168(sp)
    5470:	00c00184 	movi	r3,6
    5474:	1880012e 	bgeu	r3,r2,547c <___vfprintf_internal_r+0x1d68>
    5478:	1805883a 	mov	r2,r3
    547c:	d8802b15 	stw	r2,172(sp)
    5480:	1000ef16 	blt	r2,zero,5840 <___vfprintf_internal_r+0x212c>
    5484:	04000074 	movhi	r16,1
    5488:	d8802915 	stw	r2,164(sp)
    548c:	dcc02e15 	stw	r19,184(sp)
    5490:	d8002a15 	stw	zero,168(sp)
    5494:	d8003215 	stw	zero,200(sp)
    5498:	841abf04 	addi	r16,r16,27388
    549c:	0039883a 	mov	fp,zero
    54a0:	003a8006 	br	3ea4 <__alt_mem_Onchip_SRAM+0xf8003ea4>
    54a4:	0021883a 	mov	r16,zero
    54a8:	003e0706 	br	4cc8 <__alt_mem_Onchip_SRAM+0xf8004cc8>
    54ac:	d9002d17 	ldw	r4,180(sp)
    54b0:	d9801e04 	addi	r6,sp,120
    54b4:	b80b883a 	mov	r5,r23
    54b8:	000c6280 	call	c628 <__sprint_r>
    54bc:	1039991e 	bne	r2,zero,3b24 <__alt_mem_Onchip_SRAM+0xf8003b24>
    54c0:	d8802617 	ldw	r2,152(sp)
    54c4:	d9403317 	ldw	r5,204(sp)
    54c8:	d8c02017 	ldw	r3,128(sp)
    54cc:	da000404 	addi	r8,sp,16
    54d0:	2885c83a 	sub	r2,r5,r2
    54d4:	003dfb06 	br	4cc4 <__alt_mem_Onchip_SRAM+0xf8004cc4>
    54d8:	9080004c 	andi	r2,r18,1
    54dc:	103e8f1e 	bne	r2,zero,4f1c <__alt_mem_Onchip_SRAM+0xf8004f1c>
    54e0:	d8802117 	ldw	r2,132(sp)
    54e4:	003e9e06 	br	4f60 <__alt_mem_Onchip_SRAM+0xf8004f60>
    54e8:	1025883a 	mov	r18,r2
    54ec:	0039883a 	mov	fp,zero
    54f0:	00800084 	movi	r2,2
    54f4:	003fd306 	br	5444 <__alt_mem_Onchip_SRAM+0xf8005444>
    54f8:	07000b44 	movi	fp,45
    54fc:	df002785 	stb	fp,158(sp)
    5500:	003a1b06 	br	3d70 <__alt_mem_Onchip_SRAM+0xf8003d70>
    5504:	00c00b44 	movi	r3,45
    5508:	d8c02785 	stb	r3,158(sp)
    550c:	d8802915 	stw	r2,164(sp)
    5510:	dc802c17 	ldw	r18,176(sp)
    5514:	d8002a15 	stw	zero,168(sp)
    5518:	07000b44 	movi	fp,45
    551c:	003a5e06 	br	3e98 <__alt_mem_Onchip_SRAM+0xf8003e98>
    5520:	04000074 	movhi	r16,1
    5524:	841ab404 	addi	r16,r16,27344
    5528:	003f4706 	br	5248 <__alt_mem_Onchip_SRAM+0xf8005248>
    552c:	d9002e17 	ldw	r4,184(sp)
    5530:	d9402f17 	ldw	r5,188(sp)
    5534:	20800017 	ldw	r2,0(r4)
    5538:	21000104 	addi	r4,r4,4
    553c:	d9002e15 	stw	r4,184(sp)
    5540:	11400015 	stw	r5,0(r2)
    5544:	0038ab06 	br	37f4 <__alt_mem_Onchip_SRAM+0xf80037f4>
    5548:	dd802617 	ldw	r22,152(sp)
    554c:	00bfff44 	movi	r2,-3
    5550:	b0801c16 	blt	r22,r2,55c4 <___vfprintf_internal_r+0x1eb0>
    5554:	d9402a17 	ldw	r5,168(sp)
    5558:	2d801a16 	blt	r5,r22,55c4 <___vfprintf_internal_r+0x1eb0>
    555c:	dd803215 	stw	r22,200(sp)
    5560:	003e8906 	br	4f88 <__alt_mem_Onchip_SRAM+0xf8004f88>
    5564:	01000074 	movhi	r4,1
    5568:	211ac984 	addi	r4,r4,27430
    556c:	d9002c15 	stw	r4,176(sp)
    5570:	003c9106 	br	47b8 <__alt_mem_Onchip_SRAM+0xf80047b8>
    5574:	e005883a 	mov	r2,fp
    5578:	003e7906 	br	4f60 <__alt_mem_Onchip_SRAM+0xf8004f60>
    557c:	d9002a17 	ldw	r4,168(sp)
    5580:	df002783 	ldbu	fp,158(sp)
    5584:	dcc02e15 	stw	r19,184(sp)
    5588:	d9002915 	stw	r4,164(sp)
    558c:	d9002b15 	stw	r4,172(sp)
    5590:	d8002a15 	stw	zero,168(sp)
    5594:	d8003215 	stw	zero,200(sp)
    5598:	003a3b06 	br	3e88 <__alt_mem_Onchip_SRAM+0xf8003e88>
    559c:	9080004c 	andi	r2,r18,1
    55a0:	0039883a 	mov	fp,zero
    55a4:	10000426 	beq	r2,zero,55b8 <___vfprintf_internal_r+0x1ea4>
    55a8:	00800c04 	movi	r2,48
    55ac:	dc001dc4 	addi	r16,sp,119
    55b0:	d8801dc5 	stb	r2,119(sp)
    55b4:	003b6406 	br	4348 <__alt_mem_Onchip_SRAM+0xf8004348>
    55b8:	d8002b15 	stw	zero,172(sp)
    55bc:	dc001e04 	addi	r16,sp,120
    55c0:	003a2b06 	br	3e70 <__alt_mem_Onchip_SRAM+0xf8003e70>
    55c4:	8c7fff84 	addi	r17,r17,-2
    55c8:	b5bfffc4 	addi	r22,r22,-1
    55cc:	dd802615 	stw	r22,152(sp)
    55d0:	dc4022c5 	stb	r17,139(sp)
    55d4:	b000bf16 	blt	r22,zero,58d4 <___vfprintf_internal_r+0x21c0>
    55d8:	00800ac4 	movi	r2,43
    55dc:	d8802305 	stb	r2,140(sp)
    55e0:	00800244 	movi	r2,9
    55e4:	15807016 	blt	r2,r22,57a8 <___vfprintf_internal_r+0x2094>
    55e8:	00800c04 	movi	r2,48
    55ec:	b5800c04 	addi	r22,r22,48
    55f0:	d8802345 	stb	r2,141(sp)
    55f4:	dd802385 	stb	r22,142(sp)
    55f8:	d88023c4 	addi	r2,sp,143
    55fc:	df0022c4 	addi	fp,sp,139
    5600:	d8c03317 	ldw	r3,204(sp)
    5604:	1739c83a 	sub	fp,r2,fp
    5608:	d9003317 	ldw	r4,204(sp)
    560c:	e0c7883a 	add	r3,fp,r3
    5610:	df003a15 	stw	fp,232(sp)
    5614:	d8c02b15 	stw	r3,172(sp)
    5618:	00800044 	movi	r2,1
    561c:	1100b30e 	bge	r2,r4,58ec <___vfprintf_internal_r+0x21d8>
    5620:	d8c02b17 	ldw	r3,172(sp)
    5624:	18c00044 	addi	r3,r3,1
    5628:	d8c02b15 	stw	r3,172(sp)
    562c:	1805883a 	mov	r2,r3
    5630:	1800ac16 	blt	r3,zero,58e4 <___vfprintf_internal_r+0x21d0>
    5634:	d8003215 	stw	zero,200(sp)
    5638:	003e5d06 	br	4fb0 <__alt_mem_Onchip_SRAM+0xf8004fb0>
    563c:	d9002d17 	ldw	r4,180(sp)
    5640:	d9801e04 	addi	r6,sp,120
    5644:	b80b883a 	mov	r5,r23
    5648:	000c6280 	call	c628 <__sprint_r>
    564c:	1039351e 	bne	r2,zero,3b24 <__alt_mem_Onchip_SRAM+0xf8003b24>
    5650:	dc402617 	ldw	r17,152(sp)
    5654:	d8c02017 	ldw	r3,128(sp)
    5658:	d8801f17 	ldw	r2,124(sp)
    565c:	da000404 	addi	r8,sp,16
    5660:	003ed606 	br	51bc <__alt_mem_Onchip_SRAM+0xf80051bc>
    5664:	182b883a 	mov	r21,r3
    5668:	d8002a15 	stw	zero,168(sp)
    566c:	00388c06 	br	38a0 <__alt_mem_Onchip_SRAM+0xf80038a0>
    5670:	d8802a17 	ldw	r2,168(sp)
    5674:	103e071e 	bne	r2,zero,4e94 <__alt_mem_Onchip_SRAM+0xf8004e94>
    5678:	dc002a15 	stw	r16,168(sp)
    567c:	003e0506 	br	4e94 <__alt_mem_Onchip_SRAM+0xf8004e94>
    5680:	d9002a17 	ldw	r4,168(sp)
    5684:	20c00044 	addi	r3,r4,1
    5688:	003e0f06 	br	4ec8 <__alt_mem_Onchip_SRAM+0xf8004ec8>
    568c:	01400184 	movi	r5,6
    5690:	d9402a15 	stw	r5,168(sp)
    5694:	003dff06 	br	4e94 <__alt_mem_Onchip_SRAM+0xf8004e94>
    5698:	d8802104 	addi	r2,sp,132
    569c:	d8800315 	stw	r2,12(sp)
    56a0:	d8802504 	addi	r2,sp,148
    56a4:	d8800215 	stw	r2,8(sp)
    56a8:	d8802604 	addi	r2,sp,152
    56ac:	d8800115 	stw	r2,4(sp)
    56b0:	d8802a17 	ldw	r2,168(sp)
    56b4:	d9403617 	ldw	r5,216(sp)
    56b8:	d9002d17 	ldw	r4,180(sp)
    56bc:	d8800015 	stw	r2,0(sp)
    56c0:	01c000c4 	movi	r7,3
    56c4:	980d883a 	mov	r6,r19
    56c8:	da003d15 	stw	r8,244(sp)
    56cc:	0005e440 	call	5e44 <_dtoa_r>
    56d0:	d8c02a17 	ldw	r3,168(sp)
    56d4:	da003d17 	ldw	r8,244(sp)
    56d8:	1021883a 	mov	r16,r2
    56dc:	10f9883a 	add	fp,r2,r3
    56e0:	81000007 	ldb	r4,0(r16)
    56e4:	00800c04 	movi	r2,48
    56e8:	20805e26 	beq	r4,r2,5864 <___vfprintf_internal_r+0x2150>
    56ec:	d8c02617 	ldw	r3,152(sp)
    56f0:	e0f9883a 	add	fp,fp,r3
    56f4:	003e0a06 	br	4f20 <__alt_mem_Onchip_SRAM+0xf8004f20>
    56f8:	00c00b44 	movi	r3,45
    56fc:	24e0003c 	xorhi	r19,r4,32768
    5700:	d8c02905 	stb	r3,164(sp)
    5704:	003de906 	br	4eac <__alt_mem_Onchip_SRAM+0xf8004eac>
    5708:	d8c03217 	ldw	r3,200(sp)
    570c:	00c07a0e 	bge	zero,r3,58f8 <___vfprintf_internal_r+0x21e4>
    5710:	00800044 	movi	r2,1
    5714:	d9003317 	ldw	r4,204(sp)
    5718:	1105883a 	add	r2,r2,r4
    571c:	d8802b15 	stw	r2,172(sp)
    5720:	10004e16 	blt	r2,zero,585c <___vfprintf_internal_r+0x2148>
    5724:	044019c4 	movi	r17,103
    5728:	003e2106 	br	4fb0 <__alt_mem_Onchip_SRAM+0xf8004fb0>
    572c:	d9002a17 	ldw	r4,168(sp)
    5730:	d8802104 	addi	r2,sp,132
    5734:	d8800315 	stw	r2,12(sp)
    5738:	d9000015 	stw	r4,0(sp)
    573c:	d8802504 	addi	r2,sp,148
    5740:	d9403617 	ldw	r5,216(sp)
    5744:	d9002d17 	ldw	r4,180(sp)
    5748:	d8800215 	stw	r2,8(sp)
    574c:	d8802604 	addi	r2,sp,152
    5750:	d8800115 	stw	r2,4(sp)
    5754:	01c000c4 	movi	r7,3
    5758:	980d883a 	mov	r6,r19
    575c:	da003d15 	stw	r8,244(sp)
    5760:	0005e440 	call	5e44 <_dtoa_r>
    5764:	d8c02a17 	ldw	r3,168(sp)
    5768:	da003d17 	ldw	r8,244(sp)
    576c:	1021883a 	mov	r16,r2
    5770:	00801184 	movi	r2,70
    5774:	80f9883a 	add	fp,r16,r3
    5778:	88bfd926 	beq	r17,r2,56e0 <__alt_mem_Onchip_SRAM+0xf80056e0>
    577c:	003de806 	br	4f20 <__alt_mem_Onchip_SRAM+0xf8004f20>
    5780:	d9002a17 	ldw	r4,168(sp)
    5784:	00c04d0e 	bge	zero,r3,58bc <___vfprintf_internal_r+0x21a8>
    5788:	2000441e 	bne	r4,zero,589c <___vfprintf_internal_r+0x2188>
    578c:	9480004c 	andi	r18,r18,1
    5790:	9000421e 	bne	r18,zero,589c <___vfprintf_internal_r+0x2188>
    5794:	1805883a 	mov	r2,r3
    5798:	18006f16 	blt	r3,zero,5958 <___vfprintf_internal_r+0x2244>
    579c:	d8c03217 	ldw	r3,200(sp)
    57a0:	d8c02b15 	stw	r3,172(sp)
    57a4:	003e0206 	br	4fb0 <__alt_mem_Onchip_SRAM+0xf8004fb0>
    57a8:	df0022c4 	addi	fp,sp,139
    57ac:	dc002a15 	stw	r16,168(sp)
    57b0:	4027883a 	mov	r19,r8
    57b4:	e021883a 	mov	r16,fp
    57b8:	b009883a 	mov	r4,r22
    57bc:	01400284 	movi	r5,10
    57c0:	0000d800 	call	d80 <__modsi3>
    57c4:	10800c04 	addi	r2,r2,48
    57c8:	843fffc4 	addi	r16,r16,-1
    57cc:	b009883a 	mov	r4,r22
    57d0:	01400284 	movi	r5,10
    57d4:	80800005 	stb	r2,0(r16)
    57d8:	0000cfc0 	call	cfc <__divsi3>
    57dc:	102d883a 	mov	r22,r2
    57e0:	00800244 	movi	r2,9
    57e4:	15bff416 	blt	r2,r22,57b8 <__alt_mem_Onchip_SRAM+0xf80057b8>
    57e8:	9811883a 	mov	r8,r19
    57ec:	b0800c04 	addi	r2,r22,48
    57f0:	8027883a 	mov	r19,r16
    57f4:	997fffc4 	addi	r5,r19,-1
    57f8:	98bfffc5 	stb	r2,-1(r19)
    57fc:	dc002a17 	ldw	r16,168(sp)
    5800:	2f006d2e 	bgeu	r5,fp,59b8 <___vfprintf_internal_r+0x22a4>
    5804:	d9c02384 	addi	r7,sp,142
    5808:	3ccfc83a 	sub	r7,r7,r19
    580c:	d9002344 	addi	r4,sp,141
    5810:	e1cf883a 	add	r7,fp,r7
    5814:	00000106 	br	581c <___vfprintf_internal_r+0x2108>
    5818:	28800003 	ldbu	r2,0(r5)
    581c:	20800005 	stb	r2,0(r4)
    5820:	21000044 	addi	r4,r4,1
    5824:	29400044 	addi	r5,r5,1
    5828:	393ffb1e 	bne	r7,r4,5818 <__alt_mem_Onchip_SRAM+0xf8005818>
    582c:	d8802304 	addi	r2,sp,140
    5830:	14c5c83a 	sub	r2,r2,r19
    5834:	d8c02344 	addi	r3,sp,141
    5838:	1885883a 	add	r2,r3,r2
    583c:	003f7006 	br	5600 <__alt_mem_Onchip_SRAM+0xf8005600>
    5840:	0005883a 	mov	r2,zero
    5844:	003f0f06 	br	5484 <__alt_mem_Onchip_SRAM+0xf8005484>
    5848:	d8c03217 	ldw	r3,200(sp)
    584c:	18c00044 	addi	r3,r3,1
    5850:	d8c02b15 	stw	r3,172(sp)
    5854:	1805883a 	mov	r2,r3
    5858:	183fb20e 	bge	r3,zero,5724 <__alt_mem_Onchip_SRAM+0xf8005724>
    585c:	0005883a 	mov	r2,zero
    5860:	003fb006 	br	5724 <__alt_mem_Onchip_SRAM+0xf8005724>
    5864:	d9003617 	ldw	r4,216(sp)
    5868:	000d883a 	mov	r6,zero
    586c:	000f883a 	mov	r7,zero
    5870:	980b883a 	mov	r5,r19
    5874:	d8c03c15 	stw	r3,240(sp)
    5878:	da003d15 	stw	r8,244(sp)
    587c:	00104b80 	call	104b8 <__eqdf2>
    5880:	d8c03c17 	ldw	r3,240(sp)
    5884:	da003d17 	ldw	r8,244(sp)
    5888:	103f9826 	beq	r2,zero,56ec <__alt_mem_Onchip_SRAM+0xf80056ec>
    588c:	00800044 	movi	r2,1
    5890:	10c7c83a 	sub	r3,r2,r3
    5894:	d8c02615 	stw	r3,152(sp)
    5898:	003f9506 	br	56f0 <__alt_mem_Onchip_SRAM+0xf80056f0>
    589c:	d9002a17 	ldw	r4,168(sp)
    58a0:	d8c03217 	ldw	r3,200(sp)
    58a4:	20800044 	addi	r2,r4,1
    58a8:	1885883a 	add	r2,r3,r2
    58ac:	d8802b15 	stw	r2,172(sp)
    58b0:	103dbf0e 	bge	r2,zero,4fb0 <__alt_mem_Onchip_SRAM+0xf8004fb0>
    58b4:	0005883a 	mov	r2,zero
    58b8:	003dbd06 	br	4fb0 <__alt_mem_Onchip_SRAM+0xf8004fb0>
    58bc:	2000201e 	bne	r4,zero,5940 <___vfprintf_internal_r+0x222c>
    58c0:	9480004c 	andi	r18,r18,1
    58c4:	90001e1e 	bne	r18,zero,5940 <___vfprintf_internal_r+0x222c>
    58c8:	00800044 	movi	r2,1
    58cc:	d8802b15 	stw	r2,172(sp)
    58d0:	003db706 	br	4fb0 <__alt_mem_Onchip_SRAM+0xf8004fb0>
    58d4:	00800b44 	movi	r2,45
    58d8:	05adc83a 	sub	r22,zero,r22
    58dc:	d8802305 	stb	r2,140(sp)
    58e0:	003f3f06 	br	55e0 <__alt_mem_Onchip_SRAM+0xf80055e0>
    58e4:	0005883a 	mov	r2,zero
    58e8:	003f5206 	br	5634 <__alt_mem_Onchip_SRAM+0xf8005634>
    58ec:	90a4703a 	and	r18,r18,r2
    58f0:	903f4e26 	beq	r18,zero,562c <__alt_mem_Onchip_SRAM+0xf800562c>
    58f4:	003f4a06 	br	5620 <__alt_mem_Onchip_SRAM+0xf8005620>
    58f8:	00800084 	movi	r2,2
    58fc:	10c5c83a 	sub	r2,r2,r3
    5900:	003f8406 	br	5714 <__alt_mem_Onchip_SRAM+0xf8005714>
    5904:	d9402e17 	ldw	r5,184(sp)
    5908:	d9002e17 	ldw	r4,184(sp)
    590c:	ac400043 	ldbu	r17,1(r21)
    5910:	29400017 	ldw	r5,0(r5)
    5914:	20800104 	addi	r2,r4,4
    5918:	d8802e15 	stw	r2,184(sp)
    591c:	d9402a15 	stw	r5,168(sp)
    5920:	182b883a 	mov	r21,r3
    5924:	283e7b0e 	bge	r5,zero,5314 <__alt_mem_Onchip_SRAM+0xf8005314>
    5928:	8c403fcc 	andi	r17,r17,255
    592c:	017fffc4 	movi	r5,-1
    5930:	8c40201c 	xori	r17,r17,128
    5934:	d9402a15 	stw	r5,168(sp)
    5938:	8c7fe004 	addi	r17,r17,-128
    593c:	0037d706 	br	389c <__alt_mem_Onchip_SRAM+0xf800389c>
    5940:	d8c02a17 	ldw	r3,168(sp)
    5944:	18c00084 	addi	r3,r3,2
    5948:	d8c02b15 	stw	r3,172(sp)
    594c:	1805883a 	mov	r2,r3
    5950:	183d970e 	bge	r3,zero,4fb0 <__alt_mem_Onchip_SRAM+0xf8004fb0>
    5954:	003fd706 	br	58b4 <__alt_mem_Onchip_SRAM+0xf80058b4>
    5958:	0005883a 	mov	r2,zero
    595c:	003f8f06 	br	579c <__alt_mem_Onchip_SRAM+0xf800579c>
    5960:	9080004c 	andi	r2,r18,1
    5964:	103f821e 	bne	r2,zero,5770 <__alt_mem_Onchip_SRAM+0xf8005770>
    5968:	d8802117 	ldw	r2,132(sp)
    596c:	1405c83a 	sub	r2,r2,r16
    5970:	d8803315 	stw	r2,204(sp)
    5974:	b47ef426 	beq	r22,r17,5548 <__alt_mem_Onchip_SRAM+0xf8005548>
    5978:	dd802617 	ldw	r22,152(sp)
    597c:	003f1206 	br	55c8 <__alt_mem_Onchip_SRAM+0xf80055c8>
    5980:	d8c02b03 	ldbu	r3,172(sp)
    5984:	d8c02785 	stb	r3,158(sp)
    5988:	0038df06 	br	3d08 <__alt_mem_Onchip_SRAM+0xf8003d08>
    598c:	d8c02b03 	ldbu	r3,172(sp)
    5990:	d8c02785 	stb	r3,158(sp)
    5994:	0038aa06 	br	3c40 <__alt_mem_Onchip_SRAM+0xf8003c40>
    5998:	d8c02b03 	ldbu	r3,172(sp)
    599c:	d8c02785 	stb	r3,158(sp)
    59a0:	003a4306 	br	42b0 <__alt_mem_Onchip_SRAM+0xf80042b0>
    59a4:	d8c02b03 	ldbu	r3,172(sp)
    59a8:	d8c02785 	stb	r3,158(sp)
    59ac:	003af506 	br	4584 <__alt_mem_Onchip_SRAM+0xf8004584>
    59b0:	0005883a 	mov	r2,zero
    59b4:	003d7b06 	br	4fa4 <__alt_mem_Onchip_SRAM+0xf8004fa4>
    59b8:	d8802344 	addi	r2,sp,141
    59bc:	003f1006 	br	5600 <__alt_mem_Onchip_SRAM+0xf8005600>
    59c0:	d8c02b03 	ldbu	r3,172(sp)
    59c4:	d8c02785 	stb	r3,158(sp)
    59c8:	0038fd06 	br	3dc0 <__alt_mem_Onchip_SRAM+0xf8003dc0>
    59cc:	d8c02b03 	ldbu	r3,172(sp)
    59d0:	d8c02785 	stb	r3,158(sp)
    59d4:	003a9706 	br	4434 <__alt_mem_Onchip_SRAM+0xf8004434>
    59d8:	d8c02b03 	ldbu	r3,172(sp)
    59dc:	d8c02785 	stb	r3,158(sp)
    59e0:	003a1806 	br	4244 <__alt_mem_Onchip_SRAM+0xf8004244>
    59e4:	d8c02b03 	ldbu	r3,172(sp)
    59e8:	d8c02785 	stb	r3,158(sp)
    59ec:	003abe06 	br	44e8 <__alt_mem_Onchip_SRAM+0xf80044e8>

000059f0 <__vfprintf_internal>:
    59f0:	008000b4 	movhi	r2,2
    59f4:	10a23704 	addi	r2,r2,-30500
    59f8:	300f883a 	mov	r7,r6
    59fc:	280d883a 	mov	r6,r5
    5a00:	200b883a 	mov	r5,r4
    5a04:	11000017 	ldw	r4,0(r2)
    5a08:	00037141 	jmpi	3714 <___vfprintf_internal_r>

00005a0c <__sbprintf>:
    5a0c:	2880030b 	ldhu	r2,12(r5)
    5a10:	2ac01917 	ldw	r11,100(r5)
    5a14:	2a80038b 	ldhu	r10,14(r5)
    5a18:	2a400717 	ldw	r9,28(r5)
    5a1c:	2a000917 	ldw	r8,36(r5)
    5a20:	defee204 	addi	sp,sp,-1144
    5a24:	00c10004 	movi	r3,1024
    5a28:	dc011a15 	stw	r16,1128(sp)
    5a2c:	10bfff4c 	andi	r2,r2,65533
    5a30:	2821883a 	mov	r16,r5
    5a34:	d8cb883a 	add	r5,sp,r3
    5a38:	dc811c15 	stw	r18,1136(sp)
    5a3c:	dc411b15 	stw	r17,1132(sp)
    5a40:	dfc11d15 	stw	ra,1140(sp)
    5a44:	2025883a 	mov	r18,r4
    5a48:	d881030d 	sth	r2,1036(sp)
    5a4c:	dac11915 	stw	r11,1124(sp)
    5a50:	da81038d 	sth	r10,1038(sp)
    5a54:	da410715 	stw	r9,1052(sp)
    5a58:	da010915 	stw	r8,1060(sp)
    5a5c:	dec10015 	stw	sp,1024(sp)
    5a60:	dec10415 	stw	sp,1040(sp)
    5a64:	d8c10215 	stw	r3,1032(sp)
    5a68:	d8c10515 	stw	r3,1044(sp)
    5a6c:	d8010615 	stw	zero,1048(sp)
    5a70:	00037140 	call	3714 <___vfprintf_internal_r>
    5a74:	1023883a 	mov	r17,r2
    5a78:	10000416 	blt	r2,zero,5a8c <__sbprintf+0x80>
    5a7c:	d9410004 	addi	r5,sp,1024
    5a80:	9009883a 	mov	r4,r18
    5a84:	00076e80 	call	76e8 <_fflush_r>
    5a88:	10000d1e 	bne	r2,zero,5ac0 <__sbprintf+0xb4>
    5a8c:	d881030b 	ldhu	r2,1036(sp)
    5a90:	1080100c 	andi	r2,r2,64
    5a94:	10000326 	beq	r2,zero,5aa4 <__sbprintf+0x98>
    5a98:	8080030b 	ldhu	r2,12(r16)
    5a9c:	10801014 	ori	r2,r2,64
    5aa0:	8080030d 	sth	r2,12(r16)
    5aa4:	8805883a 	mov	r2,r17
    5aa8:	dfc11d17 	ldw	ra,1140(sp)
    5aac:	dc811c17 	ldw	r18,1136(sp)
    5ab0:	dc411b17 	ldw	r17,1132(sp)
    5ab4:	dc011a17 	ldw	r16,1128(sp)
    5ab8:	dec11e04 	addi	sp,sp,1144
    5abc:	f800283a 	ret
    5ac0:	047fffc4 	movi	r17,-1
    5ac4:	003ff106 	br	5a8c <__alt_mem_Onchip_SRAM+0xf8005a8c>

00005ac8 <__swsetup_r>:
    5ac8:	008000b4 	movhi	r2,2
    5acc:	defffd04 	addi	sp,sp,-12
    5ad0:	10a23704 	addi	r2,r2,-30500
    5ad4:	dc400115 	stw	r17,4(sp)
    5ad8:	2023883a 	mov	r17,r4
    5adc:	11000017 	ldw	r4,0(r2)
    5ae0:	dc000015 	stw	r16,0(sp)
    5ae4:	dfc00215 	stw	ra,8(sp)
    5ae8:	2821883a 	mov	r16,r5
    5aec:	20000226 	beq	r4,zero,5af8 <__swsetup_r+0x30>
    5af0:	20800e17 	ldw	r2,56(r4)
    5af4:	10003126 	beq	r2,zero,5bbc <__swsetup_r+0xf4>
    5af8:	8080030b 	ldhu	r2,12(r16)
    5afc:	10c0020c 	andi	r3,r2,8
    5b00:	1009883a 	mov	r4,r2
    5b04:	18000f26 	beq	r3,zero,5b44 <__swsetup_r+0x7c>
    5b08:	80c00417 	ldw	r3,16(r16)
    5b0c:	18001526 	beq	r3,zero,5b64 <__swsetup_r+0x9c>
    5b10:	1100004c 	andi	r4,r2,1
    5b14:	20001c1e 	bne	r4,zero,5b88 <__swsetup_r+0xc0>
    5b18:	1080008c 	andi	r2,r2,2
    5b1c:	1000291e 	bne	r2,zero,5bc4 <__swsetup_r+0xfc>
    5b20:	80800517 	ldw	r2,20(r16)
    5b24:	80800215 	stw	r2,8(r16)
    5b28:	18001c26 	beq	r3,zero,5b9c <__swsetup_r+0xd4>
    5b2c:	0005883a 	mov	r2,zero
    5b30:	dfc00217 	ldw	ra,8(sp)
    5b34:	dc400117 	ldw	r17,4(sp)
    5b38:	dc000017 	ldw	r16,0(sp)
    5b3c:	dec00304 	addi	sp,sp,12
    5b40:	f800283a 	ret
    5b44:	2080040c 	andi	r2,r4,16
    5b48:	10002e26 	beq	r2,zero,5c04 <__swsetup_r+0x13c>
    5b4c:	2080010c 	andi	r2,r4,4
    5b50:	10001e1e 	bne	r2,zero,5bcc <__swsetup_r+0x104>
    5b54:	80c00417 	ldw	r3,16(r16)
    5b58:	20800214 	ori	r2,r4,8
    5b5c:	8080030d 	sth	r2,12(r16)
    5b60:	183feb1e 	bne	r3,zero,5b10 <__alt_mem_Onchip_SRAM+0xf8005b10>
    5b64:	1100a00c 	andi	r4,r2,640
    5b68:	01408004 	movi	r5,512
    5b6c:	217fe826 	beq	r4,r5,5b10 <__alt_mem_Onchip_SRAM+0xf8005b10>
    5b70:	800b883a 	mov	r5,r16
    5b74:	8809883a 	mov	r4,r17
    5b78:	00086e00 	call	86e0 <__smakebuf_r>
    5b7c:	8080030b 	ldhu	r2,12(r16)
    5b80:	80c00417 	ldw	r3,16(r16)
    5b84:	003fe206 	br	5b10 <__alt_mem_Onchip_SRAM+0xf8005b10>
    5b88:	80800517 	ldw	r2,20(r16)
    5b8c:	80000215 	stw	zero,8(r16)
    5b90:	0085c83a 	sub	r2,zero,r2
    5b94:	80800615 	stw	r2,24(r16)
    5b98:	183fe41e 	bne	r3,zero,5b2c <__alt_mem_Onchip_SRAM+0xf8005b2c>
    5b9c:	80c0030b 	ldhu	r3,12(r16)
    5ba0:	0005883a 	mov	r2,zero
    5ba4:	1900200c 	andi	r4,r3,128
    5ba8:	203fe126 	beq	r4,zero,5b30 <__alt_mem_Onchip_SRAM+0xf8005b30>
    5bac:	18c01014 	ori	r3,r3,64
    5bb0:	80c0030d 	sth	r3,12(r16)
    5bb4:	00bfffc4 	movi	r2,-1
    5bb8:	003fdd06 	br	5b30 <__alt_mem_Onchip_SRAM+0xf8005b30>
    5bbc:	0007ad40 	call	7ad4 <__sinit>
    5bc0:	003fcd06 	br	5af8 <__alt_mem_Onchip_SRAM+0xf8005af8>
    5bc4:	0005883a 	mov	r2,zero
    5bc8:	003fd606 	br	5b24 <__alt_mem_Onchip_SRAM+0xf8005b24>
    5bcc:	81400c17 	ldw	r5,48(r16)
    5bd0:	28000626 	beq	r5,zero,5bec <__swsetup_r+0x124>
    5bd4:	80801004 	addi	r2,r16,64
    5bd8:	28800326 	beq	r5,r2,5be8 <__swsetup_r+0x120>
    5bdc:	8809883a 	mov	r4,r17
    5be0:	0007c480 	call	7c48 <_free_r>
    5be4:	8100030b 	ldhu	r4,12(r16)
    5be8:	80000c15 	stw	zero,48(r16)
    5bec:	80c00417 	ldw	r3,16(r16)
    5bf0:	00bff6c4 	movi	r2,-37
    5bf4:	1108703a 	and	r4,r2,r4
    5bf8:	80000115 	stw	zero,4(r16)
    5bfc:	80c00015 	stw	r3,0(r16)
    5c00:	003fd506 	br	5b58 <__alt_mem_Onchip_SRAM+0xf8005b58>
    5c04:	00800244 	movi	r2,9
    5c08:	88800015 	stw	r2,0(r17)
    5c0c:	20801014 	ori	r2,r4,64
    5c10:	8080030d 	sth	r2,12(r16)
    5c14:	00bfffc4 	movi	r2,-1
    5c18:	003fc506 	br	5b30 <__alt_mem_Onchip_SRAM+0xf8005b30>

00005c1c <quorem>:
    5c1c:	defff204 	addi	sp,sp,-56
    5c20:	ddc00b15 	stw	r23,44(sp)
    5c24:	20800417 	ldw	r2,16(r4)
    5c28:	2dc00417 	ldw	r23,16(r5)
    5c2c:	dfc00d15 	stw	ra,52(sp)
    5c30:	df000c15 	stw	fp,48(sp)
    5c34:	dd800a15 	stw	r22,40(sp)
    5c38:	dd400915 	stw	r21,36(sp)
    5c3c:	dd000815 	stw	r20,32(sp)
    5c40:	dcc00715 	stw	r19,28(sp)
    5c44:	dc800615 	stw	r18,24(sp)
    5c48:	dc400515 	stw	r17,20(sp)
    5c4c:	dc000415 	stw	r16,16(sp)
    5c50:	15c07a16 	blt	r2,r23,5e3c <quorem+0x220>
    5c54:	bdffffc4 	addi	r23,r23,-1
    5c58:	bde9883a 	add	r20,r23,r23
    5c5c:	28c00504 	addi	r3,r5,20
    5c60:	a529883a 	add	r20,r20,r20
    5c64:	1d39883a 	add	fp,r3,r20
    5c68:	24c00504 	addi	r19,r4,20
    5c6c:	d9400215 	stw	r5,8(sp)
    5c70:	9d29883a 	add	r20,r19,r20
    5c74:	e1400017 	ldw	r5,0(fp)
    5c78:	d9000015 	stw	r4,0(sp)
    5c7c:	a1000017 	ldw	r4,0(r20)
    5c80:	29400044 	addi	r5,r5,1
    5c84:	d8c00115 	stw	r3,4(sp)
    5c88:	dd000315 	stw	r20,12(sp)
    5c8c:	0000df40 	call	df4 <__udivsi3>
    5c90:	1025883a 	mov	r18,r2
    5c94:	10003026 	beq	r2,zero,5d58 <quorem+0x13c>
    5c98:	dc400117 	ldw	r17,4(sp)
    5c9c:	9829883a 	mov	r20,r19
    5ca0:	002d883a 	mov	r22,zero
    5ca4:	0021883a 	mov	r16,zero
    5ca8:	8d400017 	ldw	r21,0(r17)
    5cac:	900b883a 	mov	r5,r18
    5cb0:	8c400104 	addi	r17,r17,4
    5cb4:	a93fffcc 	andi	r4,r21,65535
    5cb8:	0000eb00 	call	eb0 <__mulsi3>
    5cbc:	a808d43a 	srli	r4,r21,16
    5cc0:	900b883a 	mov	r5,r18
    5cc4:	15ad883a 	add	r22,r2,r22
    5cc8:	0000eb00 	call	eb0 <__mulsi3>
    5ccc:	a1000017 	ldw	r4,0(r20)
    5cd0:	b00cd43a 	srli	r6,r22,16
    5cd4:	b0ffffcc 	andi	r3,r22,65535
    5cd8:	217fffcc 	andi	r5,r4,65535
    5cdc:	2c21883a 	add	r16,r5,r16
    5ce0:	80c7c83a 	sub	r3,r16,r3
    5ce4:	2008d43a 	srli	r4,r4,16
    5ce8:	1185883a 	add	r2,r2,r6
    5cec:	1821d43a 	srai	r16,r3,16
    5cf0:	117fffcc 	andi	r5,r2,65535
    5cf4:	2149c83a 	sub	r4,r4,r5
    5cf8:	2421883a 	add	r16,r4,r16
    5cfc:	8008943a 	slli	r4,r16,16
    5d00:	18ffffcc 	andi	r3,r3,65535
    5d04:	102cd43a 	srli	r22,r2,16
    5d08:	20c8b03a 	or	r4,r4,r3
    5d0c:	a1000015 	stw	r4,0(r20)
    5d10:	8021d43a 	srai	r16,r16,16
    5d14:	a5000104 	addi	r20,r20,4
    5d18:	e47fe32e 	bgeu	fp,r17,5ca8 <__alt_mem_Onchip_SRAM+0xf8005ca8>
    5d1c:	d8c00317 	ldw	r3,12(sp)
    5d20:	18800017 	ldw	r2,0(r3)
    5d24:	10000c1e 	bne	r2,zero,5d58 <quorem+0x13c>
    5d28:	18bfff04 	addi	r2,r3,-4
    5d2c:	9880082e 	bgeu	r19,r2,5d50 <quorem+0x134>
    5d30:	18ffff17 	ldw	r3,-4(r3)
    5d34:	18000326 	beq	r3,zero,5d44 <quorem+0x128>
    5d38:	00000506 	br	5d50 <quorem+0x134>
    5d3c:	10c00017 	ldw	r3,0(r2)
    5d40:	1800031e 	bne	r3,zero,5d50 <quorem+0x134>
    5d44:	10bfff04 	addi	r2,r2,-4
    5d48:	bdffffc4 	addi	r23,r23,-1
    5d4c:	98bffb36 	bltu	r19,r2,5d3c <__alt_mem_Onchip_SRAM+0xf8005d3c>
    5d50:	d8c00017 	ldw	r3,0(sp)
    5d54:	1dc00415 	stw	r23,16(r3)
    5d58:	d9400217 	ldw	r5,8(sp)
    5d5c:	d9000017 	ldw	r4,0(sp)
    5d60:	0009edc0 	call	9edc <__mcmp>
    5d64:	10002816 	blt	r2,zero,5e08 <quorem+0x1ec>
    5d68:	dc400117 	ldw	r17,4(sp)
    5d6c:	94800044 	addi	r18,r18,1
    5d70:	980d883a 	mov	r6,r19
    5d74:	0007883a 	mov	r3,zero
    5d78:	31000017 	ldw	r4,0(r6)
    5d7c:	89400017 	ldw	r5,0(r17)
    5d80:	31800104 	addi	r6,r6,4
    5d84:	20bfffcc 	andi	r2,r4,65535
    5d88:	10c7883a 	add	r3,r2,r3
    5d8c:	28bfffcc 	andi	r2,r5,65535
    5d90:	1885c83a 	sub	r2,r3,r2
    5d94:	280ad43a 	srli	r5,r5,16
    5d98:	2008d43a 	srli	r4,r4,16
    5d9c:	1007d43a 	srai	r3,r2,16
    5da0:	10bfffcc 	andi	r2,r2,65535
    5da4:	2149c83a 	sub	r4,r4,r5
    5da8:	20c9883a 	add	r4,r4,r3
    5dac:	200a943a 	slli	r5,r4,16
    5db0:	8c400104 	addi	r17,r17,4
    5db4:	2007d43a 	srai	r3,r4,16
    5db8:	2884b03a 	or	r2,r5,r2
    5dbc:	30bfff15 	stw	r2,-4(r6)
    5dc0:	e47fed2e 	bgeu	fp,r17,5d78 <__alt_mem_Onchip_SRAM+0xf8005d78>
    5dc4:	bdc5883a 	add	r2,r23,r23
    5dc8:	1085883a 	add	r2,r2,r2
    5dcc:	9887883a 	add	r3,r19,r2
    5dd0:	18800017 	ldw	r2,0(r3)
    5dd4:	10000c1e 	bne	r2,zero,5e08 <quorem+0x1ec>
    5dd8:	18bfff04 	addi	r2,r3,-4
    5ddc:	9880082e 	bgeu	r19,r2,5e00 <quorem+0x1e4>
    5de0:	18ffff17 	ldw	r3,-4(r3)
    5de4:	18000326 	beq	r3,zero,5df4 <quorem+0x1d8>
    5de8:	00000506 	br	5e00 <quorem+0x1e4>
    5dec:	10c00017 	ldw	r3,0(r2)
    5df0:	1800031e 	bne	r3,zero,5e00 <quorem+0x1e4>
    5df4:	10bfff04 	addi	r2,r2,-4
    5df8:	bdffffc4 	addi	r23,r23,-1
    5dfc:	98bffb36 	bltu	r19,r2,5dec <__alt_mem_Onchip_SRAM+0xf8005dec>
    5e00:	d8c00017 	ldw	r3,0(sp)
    5e04:	1dc00415 	stw	r23,16(r3)
    5e08:	9005883a 	mov	r2,r18
    5e0c:	dfc00d17 	ldw	ra,52(sp)
    5e10:	df000c17 	ldw	fp,48(sp)
    5e14:	ddc00b17 	ldw	r23,44(sp)
    5e18:	dd800a17 	ldw	r22,40(sp)
    5e1c:	dd400917 	ldw	r21,36(sp)
    5e20:	dd000817 	ldw	r20,32(sp)
    5e24:	dcc00717 	ldw	r19,28(sp)
    5e28:	dc800617 	ldw	r18,24(sp)
    5e2c:	dc400517 	ldw	r17,20(sp)
    5e30:	dc000417 	ldw	r16,16(sp)
    5e34:	dec00e04 	addi	sp,sp,56
    5e38:	f800283a 	ret
    5e3c:	0005883a 	mov	r2,zero
    5e40:	003ff206 	br	5e0c <__alt_mem_Onchip_SRAM+0xf8005e0c>

00005e44 <_dtoa_r>:
    5e44:	20801017 	ldw	r2,64(r4)
    5e48:	deffde04 	addi	sp,sp,-136
    5e4c:	df002015 	stw	fp,128(sp)
    5e50:	dcc01b15 	stw	r19,108(sp)
    5e54:	dc801a15 	stw	r18,104(sp)
    5e58:	dc401915 	stw	r17,100(sp)
    5e5c:	dc001815 	stw	r16,96(sp)
    5e60:	dfc02115 	stw	ra,132(sp)
    5e64:	ddc01f15 	stw	r23,124(sp)
    5e68:	dd801e15 	stw	r22,120(sp)
    5e6c:	dd401d15 	stw	r21,116(sp)
    5e70:	dd001c15 	stw	r20,112(sp)
    5e74:	d9c00315 	stw	r7,12(sp)
    5e78:	2039883a 	mov	fp,r4
    5e7c:	3023883a 	mov	r17,r6
    5e80:	2825883a 	mov	r18,r5
    5e84:	dc002417 	ldw	r16,144(sp)
    5e88:	3027883a 	mov	r19,r6
    5e8c:	10000826 	beq	r2,zero,5eb0 <_dtoa_r+0x6c>
    5e90:	21801117 	ldw	r6,68(r4)
    5e94:	00c00044 	movi	r3,1
    5e98:	100b883a 	mov	r5,r2
    5e9c:	1986983a 	sll	r3,r3,r6
    5ea0:	11800115 	stw	r6,4(r2)
    5ea4:	10c00215 	stw	r3,8(r2)
    5ea8:	00096000 	call	9600 <_Bfree>
    5eac:	e0001015 	stw	zero,64(fp)
    5eb0:	88002e16 	blt	r17,zero,5f6c <_dtoa_r+0x128>
    5eb4:	80000015 	stw	zero,0(r16)
    5eb8:	889ffc2c 	andhi	r2,r17,32752
    5ebc:	00dffc34 	movhi	r3,32752
    5ec0:	10c01c26 	beq	r2,r3,5f34 <_dtoa_r+0xf0>
    5ec4:	000d883a 	mov	r6,zero
    5ec8:	000f883a 	mov	r7,zero
    5ecc:	9009883a 	mov	r4,r18
    5ed0:	980b883a 	mov	r5,r19
    5ed4:	00104b80 	call	104b8 <__eqdf2>
    5ed8:	10002b1e 	bne	r2,zero,5f88 <_dtoa_r+0x144>
    5edc:	d9c02317 	ldw	r7,140(sp)
    5ee0:	00800044 	movi	r2,1
    5ee4:	38800015 	stw	r2,0(r7)
    5ee8:	d8802517 	ldw	r2,148(sp)
    5eec:	10019e26 	beq	r2,zero,6568 <_dtoa_r+0x724>
    5ef0:	d8c02517 	ldw	r3,148(sp)
    5ef4:	00800074 	movhi	r2,1
    5ef8:	109ac144 	addi	r2,r2,27397
    5efc:	18800015 	stw	r2,0(r3)
    5f00:	10bfffc4 	addi	r2,r2,-1
    5f04:	dfc02117 	ldw	ra,132(sp)
    5f08:	df002017 	ldw	fp,128(sp)
    5f0c:	ddc01f17 	ldw	r23,124(sp)
    5f10:	dd801e17 	ldw	r22,120(sp)
    5f14:	dd401d17 	ldw	r21,116(sp)
    5f18:	dd001c17 	ldw	r20,112(sp)
    5f1c:	dcc01b17 	ldw	r19,108(sp)
    5f20:	dc801a17 	ldw	r18,104(sp)
    5f24:	dc401917 	ldw	r17,100(sp)
    5f28:	dc001817 	ldw	r16,96(sp)
    5f2c:	dec02204 	addi	sp,sp,136
    5f30:	f800283a 	ret
    5f34:	d8c02317 	ldw	r3,140(sp)
    5f38:	0089c3c4 	movi	r2,9999
    5f3c:	18800015 	stw	r2,0(r3)
    5f40:	90017726 	beq	r18,zero,6520 <_dtoa_r+0x6dc>
    5f44:	00800074 	movhi	r2,1
    5f48:	109ad504 	addi	r2,r2,27476
    5f4c:	d9002517 	ldw	r4,148(sp)
    5f50:	203fec26 	beq	r4,zero,5f04 <__alt_mem_Onchip_SRAM+0xf8005f04>
    5f54:	10c000c7 	ldb	r3,3(r2)
    5f58:	1801781e 	bne	r3,zero,653c <_dtoa_r+0x6f8>
    5f5c:	10c000c4 	addi	r3,r2,3
    5f60:	d9802517 	ldw	r6,148(sp)
    5f64:	30c00015 	stw	r3,0(r6)
    5f68:	003fe606 	br	5f04 <__alt_mem_Onchip_SRAM+0xf8005f04>
    5f6c:	04e00034 	movhi	r19,32768
    5f70:	9cffffc4 	addi	r19,r19,-1
    5f74:	00800044 	movi	r2,1
    5f78:	8ce6703a 	and	r19,r17,r19
    5f7c:	80800015 	stw	r2,0(r16)
    5f80:	9823883a 	mov	r17,r19
    5f84:	003fcc06 	br	5eb8 <__alt_mem_Onchip_SRAM+0xf8005eb8>
    5f88:	d8800204 	addi	r2,sp,8
    5f8c:	d8800015 	stw	r2,0(sp)
    5f90:	d9c00104 	addi	r7,sp,4
    5f94:	900b883a 	mov	r5,r18
    5f98:	980d883a 	mov	r6,r19
    5f9c:	e009883a 	mov	r4,fp
    5fa0:	8820d53a 	srli	r16,r17,20
    5fa4:	000a2a80 	call	a2a8 <__d2b>
    5fa8:	d8800915 	stw	r2,36(sp)
    5fac:	8001651e 	bne	r16,zero,6544 <_dtoa_r+0x700>
    5fb0:	dd800217 	ldw	r22,8(sp)
    5fb4:	dc000117 	ldw	r16,4(sp)
    5fb8:	00800804 	movi	r2,32
    5fbc:	b421883a 	add	r16,r22,r16
    5fc0:	80c10c84 	addi	r3,r16,1074
    5fc4:	10c2d10e 	bge	r2,r3,6b0c <_dtoa_r+0xcc8>
    5fc8:	00801004 	movi	r2,64
    5fcc:	81010484 	addi	r4,r16,1042
    5fd0:	10c7c83a 	sub	r3,r2,r3
    5fd4:	9108d83a 	srl	r4,r18,r4
    5fd8:	88e2983a 	sll	r17,r17,r3
    5fdc:	2448b03a 	or	r4,r4,r17
    5fe0:	00119d40 	call	119d4 <__floatunsidf>
    5fe4:	017f8434 	movhi	r5,65040
    5fe8:	01800044 	movi	r6,1
    5fec:	1009883a 	mov	r4,r2
    5ff0:	194b883a 	add	r5,r3,r5
    5ff4:	843fffc4 	addi	r16,r16,-1
    5ff8:	d9801115 	stw	r6,68(sp)
    5ffc:	000d883a 	mov	r6,zero
    6000:	01cffe34 	movhi	r7,16376
    6004:	0010f7c0 	call	10f7c <__subdf3>
    6008:	0198dbf4 	movhi	r6,25455
    600c:	01cff4f4 	movhi	r7,16339
    6010:	3190d844 	addi	r6,r6,17249
    6014:	39e1e9c4 	addi	r7,r7,-30809
    6018:	1009883a 	mov	r4,r2
    601c:	180b883a 	mov	r5,r3
    6020:	00107100 	call	10710 <__muldf3>
    6024:	01a2d874 	movhi	r6,35681
    6028:	01cff1f4 	movhi	r7,16327
    602c:	31b22cc4 	addi	r6,r6,-14157
    6030:	39e28a04 	addi	r7,r7,-30168
    6034:	180b883a 	mov	r5,r3
    6038:	1009883a 	mov	r4,r2
    603c:	000f23c0 	call	f23c <__adddf3>
    6040:	8009883a 	mov	r4,r16
    6044:	1029883a 	mov	r20,r2
    6048:	1823883a 	mov	r17,r3
    604c:	00118f80 	call	118f8 <__floatsidf>
    6050:	019427f4 	movhi	r6,20639
    6054:	01cff4f4 	movhi	r7,16339
    6058:	319e7ec4 	addi	r6,r6,31227
    605c:	39d104c4 	addi	r7,r7,17427
    6060:	1009883a 	mov	r4,r2
    6064:	180b883a 	mov	r5,r3
    6068:	00107100 	call	10710 <__muldf3>
    606c:	100d883a 	mov	r6,r2
    6070:	180f883a 	mov	r7,r3
    6074:	a009883a 	mov	r4,r20
    6078:	880b883a 	mov	r5,r17
    607c:	000f23c0 	call	f23c <__adddf3>
    6080:	1009883a 	mov	r4,r2
    6084:	180b883a 	mov	r5,r3
    6088:	1029883a 	mov	r20,r2
    608c:	1823883a 	mov	r17,r3
    6090:	00118780 	call	11878 <__fixdfsi>
    6094:	000d883a 	mov	r6,zero
    6098:	000f883a 	mov	r7,zero
    609c:	a009883a 	mov	r4,r20
    60a0:	880b883a 	mov	r5,r17
    60a4:	d8800515 	stw	r2,20(sp)
    60a8:	001061c0 	call	1061c <__ledf2>
    60ac:	10028716 	blt	r2,zero,6acc <_dtoa_r+0xc88>
    60b0:	d8c00517 	ldw	r3,20(sp)
    60b4:	00800584 	movi	r2,22
    60b8:	10c27536 	bltu	r2,r3,6a90 <_dtoa_r+0xc4c>
    60bc:	180490fa 	slli	r2,r3,3
    60c0:	00c00074 	movhi	r3,1
    60c4:	18daf104 	addi	r3,r3,27588
    60c8:	1885883a 	add	r2,r3,r2
    60cc:	11000017 	ldw	r4,0(r2)
    60d0:	11400117 	ldw	r5,4(r2)
    60d4:	900d883a 	mov	r6,r18
    60d8:	980f883a 	mov	r7,r19
    60dc:	00105400 	call	10540 <__gedf2>
    60e0:	00828d0e 	bge	zero,r2,6b18 <_dtoa_r+0xcd4>
    60e4:	d9000517 	ldw	r4,20(sp)
    60e8:	d8000e15 	stw	zero,56(sp)
    60ec:	213fffc4 	addi	r4,r4,-1
    60f0:	d9000515 	stw	r4,20(sp)
    60f4:	b42dc83a 	sub	r22,r22,r16
    60f8:	b5bfffc4 	addi	r22,r22,-1
    60fc:	b0026f16 	blt	r22,zero,6abc <_dtoa_r+0xc78>
    6100:	d8000815 	stw	zero,32(sp)
    6104:	d9c00517 	ldw	r7,20(sp)
    6108:	38026416 	blt	r7,zero,6a9c <_dtoa_r+0xc58>
    610c:	b1ed883a 	add	r22,r22,r7
    6110:	d9c00d15 	stw	r7,52(sp)
    6114:	d8000a15 	stw	zero,40(sp)
    6118:	d9800317 	ldw	r6,12(sp)
    611c:	00800244 	movi	r2,9
    6120:	11811436 	bltu	r2,r6,6574 <_dtoa_r+0x730>
    6124:	00800144 	movi	r2,5
    6128:	1184e10e 	bge	r2,r6,74b0 <_dtoa_r+0x166c>
    612c:	31bfff04 	addi	r6,r6,-4
    6130:	d9800315 	stw	r6,12(sp)
    6134:	0023883a 	mov	r17,zero
    6138:	d9800317 	ldw	r6,12(sp)
    613c:	008000c4 	movi	r2,3
    6140:	30836726 	beq	r6,r2,6ee0 <_dtoa_r+0x109c>
    6144:	1183410e 	bge	r2,r6,6e4c <_dtoa_r+0x1008>
    6148:	d9c00317 	ldw	r7,12(sp)
    614c:	00800104 	movi	r2,4
    6150:	38827c26 	beq	r7,r2,6b44 <_dtoa_r+0xd00>
    6154:	00800144 	movi	r2,5
    6158:	3884c41e 	bne	r7,r2,746c <_dtoa_r+0x1628>
    615c:	00800044 	movi	r2,1
    6160:	d8800b15 	stw	r2,44(sp)
    6164:	d8c00517 	ldw	r3,20(sp)
    6168:	d9002217 	ldw	r4,136(sp)
    616c:	1907883a 	add	r3,r3,r4
    6170:	19800044 	addi	r6,r3,1
    6174:	d8c00c15 	stw	r3,48(sp)
    6178:	d9800615 	stw	r6,24(sp)
    617c:	0183a40e 	bge	zero,r6,7010 <_dtoa_r+0x11cc>
    6180:	d9800617 	ldw	r6,24(sp)
    6184:	3021883a 	mov	r16,r6
    6188:	e0001115 	stw	zero,68(fp)
    618c:	008005c4 	movi	r2,23
    6190:	1184c92e 	bgeu	r2,r6,74b8 <_dtoa_r+0x1674>
    6194:	00c00044 	movi	r3,1
    6198:	00800104 	movi	r2,4
    619c:	1085883a 	add	r2,r2,r2
    61a0:	11000504 	addi	r4,r2,20
    61a4:	180b883a 	mov	r5,r3
    61a8:	18c00044 	addi	r3,r3,1
    61ac:	313ffb2e 	bgeu	r6,r4,619c <__alt_mem_Onchip_SRAM+0xf800619c>
    61b0:	e1401115 	stw	r5,68(fp)
    61b4:	e009883a 	mov	r4,fp
    61b8:	00095580 	call	9558 <_Balloc>
    61bc:	d8800715 	stw	r2,28(sp)
    61c0:	e0801015 	stw	r2,64(fp)
    61c4:	00800384 	movi	r2,14
    61c8:	1400f736 	bltu	r2,r16,65a8 <_dtoa_r+0x764>
    61cc:	8800f626 	beq	r17,zero,65a8 <_dtoa_r+0x764>
    61d0:	d9c00517 	ldw	r7,20(sp)
    61d4:	01c39a0e 	bge	zero,r7,7040 <_dtoa_r+0x11fc>
    61d8:	388003cc 	andi	r2,r7,15
    61dc:	100490fa 	slli	r2,r2,3
    61e0:	382bd13a 	srai	r21,r7,4
    61e4:	00c00074 	movhi	r3,1
    61e8:	18daf104 	addi	r3,r3,27588
    61ec:	1885883a 	add	r2,r3,r2
    61f0:	a8c0040c 	andi	r3,r21,16
    61f4:	12400017 	ldw	r9,0(r2)
    61f8:	12000117 	ldw	r8,4(r2)
    61fc:	18037926 	beq	r3,zero,6fe4 <_dtoa_r+0x11a0>
    6200:	00800074 	movhi	r2,1
    6204:	109ae704 	addi	r2,r2,27548
    6208:	11800817 	ldw	r6,32(r2)
    620c:	11c00917 	ldw	r7,36(r2)
    6210:	9009883a 	mov	r4,r18
    6214:	980b883a 	mov	r5,r19
    6218:	da001715 	stw	r8,92(sp)
    621c:	da401615 	stw	r9,88(sp)
    6220:	000fae80 	call	fae8 <__divdf3>
    6224:	da001717 	ldw	r8,92(sp)
    6228:	da401617 	ldw	r9,88(sp)
    622c:	ad4003cc 	andi	r21,r21,15
    6230:	040000c4 	movi	r16,3
    6234:	1023883a 	mov	r17,r2
    6238:	1829883a 	mov	r20,r3
    623c:	a8001126 	beq	r21,zero,6284 <_dtoa_r+0x440>
    6240:	05c00074 	movhi	r23,1
    6244:	bddae704 	addi	r23,r23,27548
    6248:	4805883a 	mov	r2,r9
    624c:	4007883a 	mov	r3,r8
    6250:	a980004c 	andi	r6,r21,1
    6254:	1009883a 	mov	r4,r2
    6258:	a82bd07a 	srai	r21,r21,1
    625c:	180b883a 	mov	r5,r3
    6260:	30000426 	beq	r6,zero,6274 <_dtoa_r+0x430>
    6264:	b9800017 	ldw	r6,0(r23)
    6268:	b9c00117 	ldw	r7,4(r23)
    626c:	84000044 	addi	r16,r16,1
    6270:	00107100 	call	10710 <__muldf3>
    6274:	bdc00204 	addi	r23,r23,8
    6278:	a83ff51e 	bne	r21,zero,6250 <__alt_mem_Onchip_SRAM+0xf8006250>
    627c:	1013883a 	mov	r9,r2
    6280:	1811883a 	mov	r8,r3
    6284:	480d883a 	mov	r6,r9
    6288:	400f883a 	mov	r7,r8
    628c:	8809883a 	mov	r4,r17
    6290:	a00b883a 	mov	r5,r20
    6294:	000fae80 	call	fae8 <__divdf3>
    6298:	d8800f15 	stw	r2,60(sp)
    629c:	d8c01015 	stw	r3,64(sp)
    62a0:	d8c00e17 	ldw	r3,56(sp)
    62a4:	18000626 	beq	r3,zero,62c0 <_dtoa_r+0x47c>
    62a8:	d9000f17 	ldw	r4,60(sp)
    62ac:	d9401017 	ldw	r5,64(sp)
    62b0:	000d883a 	mov	r6,zero
    62b4:	01cffc34 	movhi	r7,16368
    62b8:	001061c0 	call	1061c <__ledf2>
    62bc:	10040b16 	blt	r2,zero,72ec <_dtoa_r+0x14a8>
    62c0:	8009883a 	mov	r4,r16
    62c4:	00118f80 	call	118f8 <__floatsidf>
    62c8:	d9800f17 	ldw	r6,60(sp)
    62cc:	d9c01017 	ldw	r7,64(sp)
    62d0:	1009883a 	mov	r4,r2
    62d4:	180b883a 	mov	r5,r3
    62d8:	00107100 	call	10710 <__muldf3>
    62dc:	000d883a 	mov	r6,zero
    62e0:	01d00734 	movhi	r7,16412
    62e4:	1009883a 	mov	r4,r2
    62e8:	180b883a 	mov	r5,r3
    62ec:	000f23c0 	call	f23c <__adddf3>
    62f0:	1021883a 	mov	r16,r2
    62f4:	d8800617 	ldw	r2,24(sp)
    62f8:	047f3034 	movhi	r17,64704
    62fc:	1c63883a 	add	r17,r3,r17
    6300:	10031826 	beq	r2,zero,6f64 <_dtoa_r+0x1120>
    6304:	d8c00517 	ldw	r3,20(sp)
    6308:	db000617 	ldw	r12,24(sp)
    630c:	d8c01315 	stw	r3,76(sp)
    6310:	d9000b17 	ldw	r4,44(sp)
    6314:	20038f26 	beq	r4,zero,7154 <_dtoa_r+0x1310>
    6318:	60bfffc4 	addi	r2,r12,-1
    631c:	100490fa 	slli	r2,r2,3
    6320:	00c00074 	movhi	r3,1
    6324:	18daf104 	addi	r3,r3,27588
    6328:	1885883a 	add	r2,r3,r2
    632c:	11800017 	ldw	r6,0(r2)
    6330:	11c00117 	ldw	r7,4(r2)
    6334:	d8800717 	ldw	r2,28(sp)
    6338:	0009883a 	mov	r4,zero
    633c:	014ff834 	movhi	r5,16352
    6340:	db001615 	stw	r12,88(sp)
    6344:	15c00044 	addi	r23,r2,1
    6348:	000fae80 	call	fae8 <__divdf3>
    634c:	800d883a 	mov	r6,r16
    6350:	880f883a 	mov	r7,r17
    6354:	1009883a 	mov	r4,r2
    6358:	180b883a 	mov	r5,r3
    635c:	0010f7c0 	call	10f7c <__subdf3>
    6360:	d9401017 	ldw	r5,64(sp)
    6364:	d9000f17 	ldw	r4,60(sp)
    6368:	102b883a 	mov	r21,r2
    636c:	d8c01215 	stw	r3,72(sp)
    6370:	00118780 	call	11878 <__fixdfsi>
    6374:	1009883a 	mov	r4,r2
    6378:	1029883a 	mov	r20,r2
    637c:	00118f80 	call	118f8 <__floatsidf>
    6380:	d9000f17 	ldw	r4,60(sp)
    6384:	d9401017 	ldw	r5,64(sp)
    6388:	100d883a 	mov	r6,r2
    638c:	180f883a 	mov	r7,r3
    6390:	0010f7c0 	call	10f7c <__subdf3>
    6394:	1823883a 	mov	r17,r3
    6398:	d8c00717 	ldw	r3,28(sp)
    639c:	d9401217 	ldw	r5,72(sp)
    63a0:	a2000c04 	addi	r8,r20,48
    63a4:	1021883a 	mov	r16,r2
    63a8:	1a000005 	stb	r8,0(r3)
    63ac:	800d883a 	mov	r6,r16
    63b0:	880f883a 	mov	r7,r17
    63b4:	a809883a 	mov	r4,r21
    63b8:	4029883a 	mov	r20,r8
    63bc:	00105400 	call	10540 <__gedf2>
    63c0:	00841d16 	blt	zero,r2,7438 <_dtoa_r+0x15f4>
    63c4:	800d883a 	mov	r6,r16
    63c8:	880f883a 	mov	r7,r17
    63cc:	0009883a 	mov	r4,zero
    63d0:	014ffc34 	movhi	r5,16368
    63d4:	0010f7c0 	call	10f7c <__subdf3>
    63d8:	d9401217 	ldw	r5,72(sp)
    63dc:	100d883a 	mov	r6,r2
    63e0:	180f883a 	mov	r7,r3
    63e4:	a809883a 	mov	r4,r21
    63e8:	00105400 	call	10540 <__gedf2>
    63ec:	db001617 	ldw	r12,88(sp)
    63f0:	00840e16 	blt	zero,r2,742c <_dtoa_r+0x15e8>
    63f4:	00800044 	movi	r2,1
    63f8:	13006b0e 	bge	r2,r12,65a8 <_dtoa_r+0x764>
    63fc:	d9000717 	ldw	r4,28(sp)
    6400:	dd800f15 	stw	r22,60(sp)
    6404:	dcc01015 	stw	r19,64(sp)
    6408:	2319883a 	add	r12,r4,r12
    640c:	dcc01217 	ldw	r19,72(sp)
    6410:	602d883a 	mov	r22,r12
    6414:	dc801215 	stw	r18,72(sp)
    6418:	b825883a 	mov	r18,r23
    641c:	00000906 	br	6444 <_dtoa_r+0x600>
    6420:	0010f7c0 	call	10f7c <__subdf3>
    6424:	a80d883a 	mov	r6,r21
    6428:	980f883a 	mov	r7,r19
    642c:	1009883a 	mov	r4,r2
    6430:	180b883a 	mov	r5,r3
    6434:	001061c0 	call	1061c <__ledf2>
    6438:	1003e816 	blt	r2,zero,73dc <_dtoa_r+0x1598>
    643c:	b825883a 	mov	r18,r23
    6440:	bd83e926 	beq	r23,r22,73e8 <_dtoa_r+0x15a4>
    6444:	a809883a 	mov	r4,r21
    6448:	980b883a 	mov	r5,r19
    644c:	000d883a 	mov	r6,zero
    6450:	01d00934 	movhi	r7,16420
    6454:	00107100 	call	10710 <__muldf3>
    6458:	000d883a 	mov	r6,zero
    645c:	01d00934 	movhi	r7,16420
    6460:	8009883a 	mov	r4,r16
    6464:	880b883a 	mov	r5,r17
    6468:	102b883a 	mov	r21,r2
    646c:	1827883a 	mov	r19,r3
    6470:	00107100 	call	10710 <__muldf3>
    6474:	180b883a 	mov	r5,r3
    6478:	1009883a 	mov	r4,r2
    647c:	1821883a 	mov	r16,r3
    6480:	1023883a 	mov	r17,r2
    6484:	00118780 	call	11878 <__fixdfsi>
    6488:	1009883a 	mov	r4,r2
    648c:	1029883a 	mov	r20,r2
    6490:	00118f80 	call	118f8 <__floatsidf>
    6494:	8809883a 	mov	r4,r17
    6498:	800b883a 	mov	r5,r16
    649c:	100d883a 	mov	r6,r2
    64a0:	180f883a 	mov	r7,r3
    64a4:	0010f7c0 	call	10f7c <__subdf3>
    64a8:	a5000c04 	addi	r20,r20,48
    64ac:	a80d883a 	mov	r6,r21
    64b0:	980f883a 	mov	r7,r19
    64b4:	1009883a 	mov	r4,r2
    64b8:	180b883a 	mov	r5,r3
    64bc:	95000005 	stb	r20,0(r18)
    64c0:	1021883a 	mov	r16,r2
    64c4:	1823883a 	mov	r17,r3
    64c8:	001061c0 	call	1061c <__ledf2>
    64cc:	bdc00044 	addi	r23,r23,1
    64d0:	800d883a 	mov	r6,r16
    64d4:	880f883a 	mov	r7,r17
    64d8:	0009883a 	mov	r4,zero
    64dc:	014ffc34 	movhi	r5,16368
    64e0:	103fcf0e 	bge	r2,zero,6420 <__alt_mem_Onchip_SRAM+0xf8006420>
    64e4:	d8c01317 	ldw	r3,76(sp)
    64e8:	d8c00515 	stw	r3,20(sp)
    64ec:	d9400917 	ldw	r5,36(sp)
    64f0:	e009883a 	mov	r4,fp
    64f4:	00096000 	call	9600 <_Bfree>
    64f8:	d9000517 	ldw	r4,20(sp)
    64fc:	d9802317 	ldw	r6,140(sp)
    6500:	d9c02517 	ldw	r7,148(sp)
    6504:	b8000005 	stb	zero,0(r23)
    6508:	20800044 	addi	r2,r4,1
    650c:	30800015 	stw	r2,0(r6)
    6510:	3802aa26 	beq	r7,zero,6fbc <_dtoa_r+0x1178>
    6514:	3dc00015 	stw	r23,0(r7)
    6518:	d8800717 	ldw	r2,28(sp)
    651c:	003e7906 	br	5f04 <__alt_mem_Onchip_SRAM+0xf8005f04>
    6520:	00800434 	movhi	r2,16
    6524:	10bfffc4 	addi	r2,r2,-1
    6528:	88a2703a 	and	r17,r17,r2
    652c:	883e851e 	bne	r17,zero,5f44 <__alt_mem_Onchip_SRAM+0xf8005f44>
    6530:	00800074 	movhi	r2,1
    6534:	109ad204 	addi	r2,r2,27464
    6538:	003e8406 	br	5f4c <__alt_mem_Onchip_SRAM+0xf8005f4c>
    653c:	10c00204 	addi	r3,r2,8
    6540:	003e8706 	br	5f60 <__alt_mem_Onchip_SRAM+0xf8005f60>
    6544:	01400434 	movhi	r5,16
    6548:	297fffc4 	addi	r5,r5,-1
    654c:	994a703a 	and	r5,r19,r5
    6550:	9009883a 	mov	r4,r18
    6554:	843f0044 	addi	r16,r16,-1023
    6558:	294ffc34 	orhi	r5,r5,16368
    655c:	dd800217 	ldw	r22,8(sp)
    6560:	d8001115 	stw	zero,68(sp)
    6564:	003ea506 	br	5ffc <__alt_mem_Onchip_SRAM+0xf8005ffc>
    6568:	00800074 	movhi	r2,1
    656c:	109ac104 	addi	r2,r2,27396
    6570:	003e6406 	br	5f04 <__alt_mem_Onchip_SRAM+0xf8005f04>
    6574:	e0001115 	stw	zero,68(fp)
    6578:	000b883a 	mov	r5,zero
    657c:	e009883a 	mov	r4,fp
    6580:	00095580 	call	9558 <_Balloc>
    6584:	01bfffc4 	movi	r6,-1
    6588:	01c00044 	movi	r7,1
    658c:	d8800715 	stw	r2,28(sp)
    6590:	d9800c15 	stw	r6,48(sp)
    6594:	e0801015 	stw	r2,64(fp)
    6598:	d8000315 	stw	zero,12(sp)
    659c:	d9c00b15 	stw	r7,44(sp)
    65a0:	d9800615 	stw	r6,24(sp)
    65a4:	d8002215 	stw	zero,136(sp)
    65a8:	d8800117 	ldw	r2,4(sp)
    65ac:	10008916 	blt	r2,zero,67d4 <_dtoa_r+0x990>
    65b0:	d9000517 	ldw	r4,20(sp)
    65b4:	00c00384 	movi	r3,14
    65b8:	19008616 	blt	r3,r4,67d4 <_dtoa_r+0x990>
    65bc:	200490fa 	slli	r2,r4,3
    65c0:	00c00074 	movhi	r3,1
    65c4:	d9802217 	ldw	r6,136(sp)
    65c8:	18daf104 	addi	r3,r3,27588
    65cc:	1885883a 	add	r2,r3,r2
    65d0:	14000017 	ldw	r16,0(r2)
    65d4:	14400117 	ldw	r17,4(r2)
    65d8:	30016316 	blt	r6,zero,6b68 <_dtoa_r+0xd24>
    65dc:	800d883a 	mov	r6,r16
    65e0:	880f883a 	mov	r7,r17
    65e4:	9009883a 	mov	r4,r18
    65e8:	980b883a 	mov	r5,r19
    65ec:	000fae80 	call	fae8 <__divdf3>
    65f0:	180b883a 	mov	r5,r3
    65f4:	1009883a 	mov	r4,r2
    65f8:	00118780 	call	11878 <__fixdfsi>
    65fc:	1009883a 	mov	r4,r2
    6600:	102b883a 	mov	r21,r2
    6604:	00118f80 	call	118f8 <__floatsidf>
    6608:	800d883a 	mov	r6,r16
    660c:	880f883a 	mov	r7,r17
    6610:	1009883a 	mov	r4,r2
    6614:	180b883a 	mov	r5,r3
    6618:	00107100 	call	10710 <__muldf3>
    661c:	100d883a 	mov	r6,r2
    6620:	180f883a 	mov	r7,r3
    6624:	9009883a 	mov	r4,r18
    6628:	980b883a 	mov	r5,r19
    662c:	0010f7c0 	call	10f7c <__subdf3>
    6630:	d9c00717 	ldw	r7,28(sp)
    6634:	1009883a 	mov	r4,r2
    6638:	a8800c04 	addi	r2,r21,48
    663c:	38800005 	stb	r2,0(r7)
    6640:	3dc00044 	addi	r23,r7,1
    6644:	d9c00617 	ldw	r7,24(sp)
    6648:	01800044 	movi	r6,1
    664c:	180b883a 	mov	r5,r3
    6650:	2005883a 	mov	r2,r4
    6654:	39803826 	beq	r7,r6,6738 <_dtoa_r+0x8f4>
    6658:	000d883a 	mov	r6,zero
    665c:	01d00934 	movhi	r7,16420
    6660:	00107100 	call	10710 <__muldf3>
    6664:	000d883a 	mov	r6,zero
    6668:	000f883a 	mov	r7,zero
    666c:	1009883a 	mov	r4,r2
    6670:	180b883a 	mov	r5,r3
    6674:	1025883a 	mov	r18,r2
    6678:	1827883a 	mov	r19,r3
    667c:	00104b80 	call	104b8 <__eqdf2>
    6680:	103f9a26 	beq	r2,zero,64ec <__alt_mem_Onchip_SRAM+0xf80064ec>
    6684:	d9c00617 	ldw	r7,24(sp)
    6688:	d8c00717 	ldw	r3,28(sp)
    668c:	b829883a 	mov	r20,r23
    6690:	38bfffc4 	addi	r2,r7,-1
    6694:	18ad883a 	add	r22,r3,r2
    6698:	00000a06 	br	66c4 <_dtoa_r+0x880>
    669c:	00107100 	call	10710 <__muldf3>
    66a0:	000d883a 	mov	r6,zero
    66a4:	000f883a 	mov	r7,zero
    66a8:	1009883a 	mov	r4,r2
    66ac:	180b883a 	mov	r5,r3
    66b0:	1025883a 	mov	r18,r2
    66b4:	1827883a 	mov	r19,r3
    66b8:	b829883a 	mov	r20,r23
    66bc:	00104b80 	call	104b8 <__eqdf2>
    66c0:	103f8a26 	beq	r2,zero,64ec <__alt_mem_Onchip_SRAM+0xf80064ec>
    66c4:	800d883a 	mov	r6,r16
    66c8:	880f883a 	mov	r7,r17
    66cc:	9009883a 	mov	r4,r18
    66d0:	980b883a 	mov	r5,r19
    66d4:	000fae80 	call	fae8 <__divdf3>
    66d8:	180b883a 	mov	r5,r3
    66dc:	1009883a 	mov	r4,r2
    66e0:	00118780 	call	11878 <__fixdfsi>
    66e4:	1009883a 	mov	r4,r2
    66e8:	102b883a 	mov	r21,r2
    66ec:	00118f80 	call	118f8 <__floatsidf>
    66f0:	800d883a 	mov	r6,r16
    66f4:	880f883a 	mov	r7,r17
    66f8:	1009883a 	mov	r4,r2
    66fc:	180b883a 	mov	r5,r3
    6700:	00107100 	call	10710 <__muldf3>
    6704:	100d883a 	mov	r6,r2
    6708:	180f883a 	mov	r7,r3
    670c:	9009883a 	mov	r4,r18
    6710:	980b883a 	mov	r5,r19
    6714:	0010f7c0 	call	10f7c <__subdf3>
    6718:	aa000c04 	addi	r8,r21,48
    671c:	a2000005 	stb	r8,0(r20)
    6720:	000d883a 	mov	r6,zero
    6724:	01d00934 	movhi	r7,16420
    6728:	1009883a 	mov	r4,r2
    672c:	180b883a 	mov	r5,r3
    6730:	a5c00044 	addi	r23,r20,1
    6734:	b53fd91e 	bne	r22,r20,669c <__alt_mem_Onchip_SRAM+0xf800669c>
    6738:	100d883a 	mov	r6,r2
    673c:	180f883a 	mov	r7,r3
    6740:	1009883a 	mov	r4,r2
    6744:	180b883a 	mov	r5,r3
    6748:	000f23c0 	call	f23c <__adddf3>
    674c:	100d883a 	mov	r6,r2
    6750:	180f883a 	mov	r7,r3
    6754:	8009883a 	mov	r4,r16
    6758:	880b883a 	mov	r5,r17
    675c:	1027883a 	mov	r19,r2
    6760:	1825883a 	mov	r18,r3
    6764:	001061c0 	call	1061c <__ledf2>
    6768:	10000816 	blt	r2,zero,678c <_dtoa_r+0x948>
    676c:	980d883a 	mov	r6,r19
    6770:	900f883a 	mov	r7,r18
    6774:	8009883a 	mov	r4,r16
    6778:	880b883a 	mov	r5,r17
    677c:	00104b80 	call	104b8 <__eqdf2>
    6780:	103f5a1e 	bne	r2,zero,64ec <__alt_mem_Onchip_SRAM+0xf80064ec>
    6784:	ad40004c 	andi	r21,r21,1
    6788:	a83f5826 	beq	r21,zero,64ec <__alt_mem_Onchip_SRAM+0xf80064ec>
    678c:	bd3fffc3 	ldbu	r20,-1(r23)
    6790:	b8bfffc4 	addi	r2,r23,-1
    6794:	1007883a 	mov	r3,r2
    6798:	01400e44 	movi	r5,57
    679c:	d9800717 	ldw	r6,28(sp)
    67a0:	00000506 	br	67b8 <_dtoa_r+0x974>
    67a4:	18ffffc4 	addi	r3,r3,-1
    67a8:	11824726 	beq	r2,r6,70c8 <_dtoa_r+0x1284>
    67ac:	1d000003 	ldbu	r20,0(r3)
    67b0:	102f883a 	mov	r23,r2
    67b4:	10bfffc4 	addi	r2,r2,-1
    67b8:	a1003fcc 	andi	r4,r20,255
    67bc:	2100201c 	xori	r4,r4,128
    67c0:	213fe004 	addi	r4,r4,-128
    67c4:	217ff726 	beq	r4,r5,67a4 <__alt_mem_Onchip_SRAM+0xf80067a4>
    67c8:	a2000044 	addi	r8,r20,1
    67cc:	12000005 	stb	r8,0(r2)
    67d0:	003f4606 	br	64ec <__alt_mem_Onchip_SRAM+0xf80064ec>
    67d4:	d9000b17 	ldw	r4,44(sp)
    67d8:	2000c826 	beq	r4,zero,6afc <_dtoa_r+0xcb8>
    67dc:	d9800317 	ldw	r6,12(sp)
    67e0:	00c00044 	movi	r3,1
    67e4:	1980f90e 	bge	r3,r6,6bcc <_dtoa_r+0xd88>
    67e8:	d8800617 	ldw	r2,24(sp)
    67ec:	d8c00a17 	ldw	r3,40(sp)
    67f0:	157fffc4 	addi	r21,r2,-1
    67f4:	1d41f316 	blt	r3,r21,6fc4 <_dtoa_r+0x1180>
    67f8:	1d6bc83a 	sub	r21,r3,r21
    67fc:	d9c00617 	ldw	r7,24(sp)
    6800:	3802aa16 	blt	r7,zero,72ac <_dtoa_r+0x1468>
    6804:	dd000817 	ldw	r20,32(sp)
    6808:	d8800617 	ldw	r2,24(sp)
    680c:	d8c00817 	ldw	r3,32(sp)
    6810:	01400044 	movi	r5,1
    6814:	e009883a 	mov	r4,fp
    6818:	1887883a 	add	r3,r3,r2
    681c:	d8c00815 	stw	r3,32(sp)
    6820:	b0ad883a 	add	r22,r22,r2
    6824:	000998c0 	call	998c <__i2b>
    6828:	1023883a 	mov	r17,r2
    682c:	a0000826 	beq	r20,zero,6850 <_dtoa_r+0xa0c>
    6830:	0580070e 	bge	zero,r22,6850 <_dtoa_r+0xa0c>
    6834:	a005883a 	mov	r2,r20
    6838:	b500b916 	blt	r22,r20,6b20 <_dtoa_r+0xcdc>
    683c:	d9000817 	ldw	r4,32(sp)
    6840:	a0a9c83a 	sub	r20,r20,r2
    6844:	b0adc83a 	sub	r22,r22,r2
    6848:	2089c83a 	sub	r4,r4,r2
    684c:	d9000815 	stw	r4,32(sp)
    6850:	d9800a17 	ldw	r6,40(sp)
    6854:	0181810e 	bge	zero,r6,6e5c <_dtoa_r+0x1018>
    6858:	d9c00b17 	ldw	r7,44(sp)
    685c:	3800b326 	beq	r7,zero,6b2c <_dtoa_r+0xce8>
    6860:	a800b226 	beq	r21,zero,6b2c <_dtoa_r+0xce8>
    6864:	880b883a 	mov	r5,r17
    6868:	a80d883a 	mov	r6,r21
    686c:	e009883a 	mov	r4,fp
    6870:	0009c540 	call	9c54 <__pow5mult>
    6874:	d9800917 	ldw	r6,36(sp)
    6878:	100b883a 	mov	r5,r2
    687c:	e009883a 	mov	r4,fp
    6880:	1023883a 	mov	r17,r2
    6884:	00099c80 	call	99c8 <__multiply>
    6888:	1021883a 	mov	r16,r2
    688c:	d8800a17 	ldw	r2,40(sp)
    6890:	d9400917 	ldw	r5,36(sp)
    6894:	e009883a 	mov	r4,fp
    6898:	1545c83a 	sub	r2,r2,r21
    689c:	d8800a15 	stw	r2,40(sp)
    68a0:	00096000 	call	9600 <_Bfree>
    68a4:	d8c00a17 	ldw	r3,40(sp)
    68a8:	18009f1e 	bne	r3,zero,6b28 <_dtoa_r+0xce4>
    68ac:	05c00044 	movi	r23,1
    68b0:	e009883a 	mov	r4,fp
    68b4:	b80b883a 	mov	r5,r23
    68b8:	000998c0 	call	998c <__i2b>
    68bc:	d9000d17 	ldw	r4,52(sp)
    68c0:	102b883a 	mov	r21,r2
    68c4:	2000ce26 	beq	r4,zero,6c00 <_dtoa_r+0xdbc>
    68c8:	200d883a 	mov	r6,r4
    68cc:	100b883a 	mov	r5,r2
    68d0:	e009883a 	mov	r4,fp
    68d4:	0009c540 	call	9c54 <__pow5mult>
    68d8:	d9800317 	ldw	r6,12(sp)
    68dc:	102b883a 	mov	r21,r2
    68e0:	b981810e 	bge	r23,r6,6ee8 <_dtoa_r+0x10a4>
    68e4:	0027883a 	mov	r19,zero
    68e8:	a8800417 	ldw	r2,16(r21)
    68ec:	05c00804 	movi	r23,32
    68f0:	10800104 	addi	r2,r2,4
    68f4:	1085883a 	add	r2,r2,r2
    68f8:	1085883a 	add	r2,r2,r2
    68fc:	a885883a 	add	r2,r21,r2
    6900:	11000017 	ldw	r4,0(r2)
    6904:	00098740 	call	9874 <__hi0bits>
    6908:	b885c83a 	sub	r2,r23,r2
    690c:	1585883a 	add	r2,r2,r22
    6910:	108007cc 	andi	r2,r2,31
    6914:	1000b326 	beq	r2,zero,6be4 <_dtoa_r+0xda0>
    6918:	00c00804 	movi	r3,32
    691c:	1887c83a 	sub	r3,r3,r2
    6920:	01000104 	movi	r4,4
    6924:	20c2cd0e 	bge	r4,r3,745c <_dtoa_r+0x1618>
    6928:	00c00704 	movi	r3,28
    692c:	1885c83a 	sub	r2,r3,r2
    6930:	d8c00817 	ldw	r3,32(sp)
    6934:	a0a9883a 	add	r20,r20,r2
    6938:	b0ad883a 	add	r22,r22,r2
    693c:	1887883a 	add	r3,r3,r2
    6940:	d8c00815 	stw	r3,32(sp)
    6944:	d9800817 	ldw	r6,32(sp)
    6948:	0180040e 	bge	zero,r6,695c <_dtoa_r+0xb18>
    694c:	800b883a 	mov	r5,r16
    6950:	e009883a 	mov	r4,fp
    6954:	0009d940 	call	9d94 <__lshift>
    6958:	1021883a 	mov	r16,r2
    695c:	0580050e 	bge	zero,r22,6974 <_dtoa_r+0xb30>
    6960:	a80b883a 	mov	r5,r21
    6964:	b00d883a 	mov	r6,r22
    6968:	e009883a 	mov	r4,fp
    696c:	0009d940 	call	9d94 <__lshift>
    6970:	102b883a 	mov	r21,r2
    6974:	d9c00e17 	ldw	r7,56(sp)
    6978:	3801211e 	bne	r7,zero,6e00 <_dtoa_r+0xfbc>
    697c:	d9800617 	ldw	r6,24(sp)
    6980:	0181380e 	bge	zero,r6,6e64 <_dtoa_r+0x1020>
    6984:	d8c00b17 	ldw	r3,44(sp)
    6988:	1800ab1e 	bne	r3,zero,6c38 <_dtoa_r+0xdf4>
    698c:	dc800717 	ldw	r18,28(sp)
    6990:	dcc00617 	ldw	r19,24(sp)
    6994:	9029883a 	mov	r20,r18
    6998:	00000206 	br	69a4 <_dtoa_r+0xb60>
    699c:	00096280 	call	9628 <__multadd>
    69a0:	1021883a 	mov	r16,r2
    69a4:	a80b883a 	mov	r5,r21
    69a8:	8009883a 	mov	r4,r16
    69ac:	0005c1c0 	call	5c1c <quorem>
    69b0:	10800c04 	addi	r2,r2,48
    69b4:	90800005 	stb	r2,0(r18)
    69b8:	94800044 	addi	r18,r18,1
    69bc:	9507c83a 	sub	r3,r18,r20
    69c0:	000f883a 	mov	r7,zero
    69c4:	01800284 	movi	r6,10
    69c8:	800b883a 	mov	r5,r16
    69cc:	e009883a 	mov	r4,fp
    69d0:	1cfff216 	blt	r3,r19,699c <__alt_mem_Onchip_SRAM+0xf800699c>
    69d4:	1011883a 	mov	r8,r2
    69d8:	d8800617 	ldw	r2,24(sp)
    69dc:	0082370e 	bge	zero,r2,72bc <_dtoa_r+0x1478>
    69e0:	d9000717 	ldw	r4,28(sp)
    69e4:	0025883a 	mov	r18,zero
    69e8:	20af883a 	add	r23,r4,r2
    69ec:	01800044 	movi	r6,1
    69f0:	800b883a 	mov	r5,r16
    69f4:	e009883a 	mov	r4,fp
    69f8:	da001715 	stw	r8,92(sp)
    69fc:	0009d940 	call	9d94 <__lshift>
    6a00:	a80b883a 	mov	r5,r21
    6a04:	1009883a 	mov	r4,r2
    6a08:	d8800915 	stw	r2,36(sp)
    6a0c:	0009edc0 	call	9edc <__mcmp>
    6a10:	da001717 	ldw	r8,92(sp)
    6a14:	0081800e 	bge	zero,r2,7018 <_dtoa_r+0x11d4>
    6a18:	b93fffc3 	ldbu	r4,-1(r23)
    6a1c:	b8bfffc4 	addi	r2,r23,-1
    6a20:	1007883a 	mov	r3,r2
    6a24:	01800e44 	movi	r6,57
    6a28:	d9c00717 	ldw	r7,28(sp)
    6a2c:	00000506 	br	6a44 <_dtoa_r+0xc00>
    6a30:	18ffffc4 	addi	r3,r3,-1
    6a34:	11c12326 	beq	r2,r7,6ec4 <_dtoa_r+0x1080>
    6a38:	19000003 	ldbu	r4,0(r3)
    6a3c:	102f883a 	mov	r23,r2
    6a40:	10bfffc4 	addi	r2,r2,-1
    6a44:	21403fcc 	andi	r5,r4,255
    6a48:	2940201c 	xori	r5,r5,128
    6a4c:	297fe004 	addi	r5,r5,-128
    6a50:	29bff726 	beq	r5,r6,6a30 <__alt_mem_Onchip_SRAM+0xf8006a30>
    6a54:	21000044 	addi	r4,r4,1
    6a58:	11000005 	stb	r4,0(r2)
    6a5c:	a80b883a 	mov	r5,r21
    6a60:	e009883a 	mov	r4,fp
    6a64:	00096000 	call	9600 <_Bfree>
    6a68:	883ea026 	beq	r17,zero,64ec <__alt_mem_Onchip_SRAM+0xf80064ec>
    6a6c:	90000426 	beq	r18,zero,6a80 <_dtoa_r+0xc3c>
    6a70:	94400326 	beq	r18,r17,6a80 <_dtoa_r+0xc3c>
    6a74:	900b883a 	mov	r5,r18
    6a78:	e009883a 	mov	r4,fp
    6a7c:	00096000 	call	9600 <_Bfree>
    6a80:	880b883a 	mov	r5,r17
    6a84:	e009883a 	mov	r4,fp
    6a88:	00096000 	call	9600 <_Bfree>
    6a8c:	003e9706 	br	64ec <__alt_mem_Onchip_SRAM+0xf80064ec>
    6a90:	01800044 	movi	r6,1
    6a94:	d9800e15 	stw	r6,56(sp)
    6a98:	003d9606 	br	60f4 <__alt_mem_Onchip_SRAM+0xf80060f4>
    6a9c:	d8800817 	ldw	r2,32(sp)
    6aa0:	d8c00517 	ldw	r3,20(sp)
    6aa4:	d8000d15 	stw	zero,52(sp)
    6aa8:	10c5c83a 	sub	r2,r2,r3
    6aac:	00c9c83a 	sub	r4,zero,r3
    6ab0:	d8800815 	stw	r2,32(sp)
    6ab4:	d9000a15 	stw	r4,40(sp)
    6ab8:	003d9706 	br	6118 <__alt_mem_Onchip_SRAM+0xf8006118>
    6abc:	05adc83a 	sub	r22,zero,r22
    6ac0:	dd800815 	stw	r22,32(sp)
    6ac4:	002d883a 	mov	r22,zero
    6ac8:	003d8e06 	br	6104 <__alt_mem_Onchip_SRAM+0xf8006104>
    6acc:	d9000517 	ldw	r4,20(sp)
    6ad0:	00118f80 	call	118f8 <__floatsidf>
    6ad4:	100d883a 	mov	r6,r2
    6ad8:	180f883a 	mov	r7,r3
    6adc:	a009883a 	mov	r4,r20
    6ae0:	880b883a 	mov	r5,r17
    6ae4:	00104b80 	call	104b8 <__eqdf2>
    6ae8:	103d7126 	beq	r2,zero,60b0 <__alt_mem_Onchip_SRAM+0xf80060b0>
    6aec:	d9c00517 	ldw	r7,20(sp)
    6af0:	39ffffc4 	addi	r7,r7,-1
    6af4:	d9c00515 	stw	r7,20(sp)
    6af8:	003d6d06 	br	60b0 <__alt_mem_Onchip_SRAM+0xf80060b0>
    6afc:	dd400a17 	ldw	r21,40(sp)
    6b00:	dd000817 	ldw	r20,32(sp)
    6b04:	0023883a 	mov	r17,zero
    6b08:	003f4806 	br	682c <__alt_mem_Onchip_SRAM+0xf800682c>
    6b0c:	10e3c83a 	sub	r17,r2,r3
    6b10:	9448983a 	sll	r4,r18,r17
    6b14:	003d3206 	br	5fe0 <__alt_mem_Onchip_SRAM+0xf8005fe0>
    6b18:	d8000e15 	stw	zero,56(sp)
    6b1c:	003d7506 	br	60f4 <__alt_mem_Onchip_SRAM+0xf80060f4>
    6b20:	b005883a 	mov	r2,r22
    6b24:	003f4506 	br	683c <__alt_mem_Onchip_SRAM+0xf800683c>
    6b28:	dc000915 	stw	r16,36(sp)
    6b2c:	d9800a17 	ldw	r6,40(sp)
    6b30:	d9400917 	ldw	r5,36(sp)
    6b34:	e009883a 	mov	r4,fp
    6b38:	0009c540 	call	9c54 <__pow5mult>
    6b3c:	1021883a 	mov	r16,r2
    6b40:	003f5a06 	br	68ac <__alt_mem_Onchip_SRAM+0xf80068ac>
    6b44:	01c00044 	movi	r7,1
    6b48:	d9c00b15 	stw	r7,44(sp)
    6b4c:	d8802217 	ldw	r2,136(sp)
    6b50:	0081280e 	bge	zero,r2,6ff4 <_dtoa_r+0x11b0>
    6b54:	100d883a 	mov	r6,r2
    6b58:	1021883a 	mov	r16,r2
    6b5c:	d8800c15 	stw	r2,48(sp)
    6b60:	d8800615 	stw	r2,24(sp)
    6b64:	003d8806 	br	6188 <__alt_mem_Onchip_SRAM+0xf8006188>
    6b68:	d8800617 	ldw	r2,24(sp)
    6b6c:	00be9b16 	blt	zero,r2,65dc <__alt_mem_Onchip_SRAM+0xf80065dc>
    6b70:	10010f1e 	bne	r2,zero,6fb0 <_dtoa_r+0x116c>
    6b74:	880b883a 	mov	r5,r17
    6b78:	000d883a 	mov	r6,zero
    6b7c:	01d00534 	movhi	r7,16404
    6b80:	8009883a 	mov	r4,r16
    6b84:	00107100 	call	10710 <__muldf3>
    6b88:	900d883a 	mov	r6,r18
    6b8c:	980f883a 	mov	r7,r19
    6b90:	1009883a 	mov	r4,r2
    6b94:	180b883a 	mov	r5,r3
    6b98:	00105400 	call	10540 <__gedf2>
    6b9c:	002b883a 	mov	r21,zero
    6ba0:	0023883a 	mov	r17,zero
    6ba4:	1000bf16 	blt	r2,zero,6ea4 <_dtoa_r+0x1060>
    6ba8:	d9802217 	ldw	r6,136(sp)
    6bac:	ddc00717 	ldw	r23,28(sp)
    6bb0:	018c303a 	nor	r6,zero,r6
    6bb4:	d9800515 	stw	r6,20(sp)
    6bb8:	a80b883a 	mov	r5,r21
    6bbc:	e009883a 	mov	r4,fp
    6bc0:	00096000 	call	9600 <_Bfree>
    6bc4:	883e4926 	beq	r17,zero,64ec <__alt_mem_Onchip_SRAM+0xf80064ec>
    6bc8:	003fad06 	br	6a80 <__alt_mem_Onchip_SRAM+0xf8006a80>
    6bcc:	d9c01117 	ldw	r7,68(sp)
    6bd0:	3801bc26 	beq	r7,zero,72c4 <_dtoa_r+0x1480>
    6bd4:	10810cc4 	addi	r2,r2,1075
    6bd8:	dd400a17 	ldw	r21,40(sp)
    6bdc:	dd000817 	ldw	r20,32(sp)
    6be0:	003f0a06 	br	680c <__alt_mem_Onchip_SRAM+0xf800680c>
    6be4:	00800704 	movi	r2,28
    6be8:	d9000817 	ldw	r4,32(sp)
    6bec:	a0a9883a 	add	r20,r20,r2
    6bf0:	b0ad883a 	add	r22,r22,r2
    6bf4:	2089883a 	add	r4,r4,r2
    6bf8:	d9000815 	stw	r4,32(sp)
    6bfc:	003f5106 	br	6944 <__alt_mem_Onchip_SRAM+0xf8006944>
    6c00:	d8c00317 	ldw	r3,12(sp)
    6c04:	b8c1fc0e 	bge	r23,r3,73f8 <_dtoa_r+0x15b4>
    6c08:	0027883a 	mov	r19,zero
    6c0c:	b805883a 	mov	r2,r23
    6c10:	003f3e06 	br	690c <__alt_mem_Onchip_SRAM+0xf800690c>
    6c14:	880b883a 	mov	r5,r17
    6c18:	e009883a 	mov	r4,fp
    6c1c:	000f883a 	mov	r7,zero
    6c20:	01800284 	movi	r6,10
    6c24:	00096280 	call	9628 <__multadd>
    6c28:	d9000c17 	ldw	r4,48(sp)
    6c2c:	1023883a 	mov	r17,r2
    6c30:	0102040e 	bge	zero,r4,7444 <_dtoa_r+0x1600>
    6c34:	d9000615 	stw	r4,24(sp)
    6c38:	0500050e 	bge	zero,r20,6c50 <_dtoa_r+0xe0c>
    6c3c:	880b883a 	mov	r5,r17
    6c40:	a00d883a 	mov	r6,r20
    6c44:	e009883a 	mov	r4,fp
    6c48:	0009d940 	call	9d94 <__lshift>
    6c4c:	1023883a 	mov	r17,r2
    6c50:	9801241e 	bne	r19,zero,70e4 <_dtoa_r+0x12a0>
    6c54:	8829883a 	mov	r20,r17
    6c58:	d9000617 	ldw	r4,24(sp)
    6c5c:	dcc00717 	ldw	r19,28(sp)
    6c60:	9480004c 	andi	r18,r18,1
    6c64:	20bfffc4 	addi	r2,r4,-1
    6c68:	9885883a 	add	r2,r19,r2
    6c6c:	d8800415 	stw	r2,16(sp)
    6c70:	dc800615 	stw	r18,24(sp)
    6c74:	a80b883a 	mov	r5,r21
    6c78:	8009883a 	mov	r4,r16
    6c7c:	0005c1c0 	call	5c1c <quorem>
    6c80:	880b883a 	mov	r5,r17
    6c84:	8009883a 	mov	r4,r16
    6c88:	102f883a 	mov	r23,r2
    6c8c:	0009edc0 	call	9edc <__mcmp>
    6c90:	a80b883a 	mov	r5,r21
    6c94:	a00d883a 	mov	r6,r20
    6c98:	e009883a 	mov	r4,fp
    6c9c:	102d883a 	mov	r22,r2
    6ca0:	0009f3c0 	call	9f3c <__mdiff>
    6ca4:	1007883a 	mov	r3,r2
    6ca8:	10800317 	ldw	r2,12(r2)
    6cac:	bc800c04 	addi	r18,r23,48
    6cb0:	180b883a 	mov	r5,r3
    6cb4:	10004e1e 	bne	r2,zero,6df0 <_dtoa_r+0xfac>
    6cb8:	8009883a 	mov	r4,r16
    6cbc:	d8c01615 	stw	r3,88(sp)
    6cc0:	0009edc0 	call	9edc <__mcmp>
    6cc4:	d8c01617 	ldw	r3,88(sp)
    6cc8:	e009883a 	mov	r4,fp
    6ccc:	d8801615 	stw	r2,88(sp)
    6cd0:	180b883a 	mov	r5,r3
    6cd4:	00096000 	call	9600 <_Bfree>
    6cd8:	d8801617 	ldw	r2,88(sp)
    6cdc:	1000041e 	bne	r2,zero,6cf0 <_dtoa_r+0xeac>
    6ce0:	d9800317 	ldw	r6,12(sp)
    6ce4:	3000021e 	bne	r6,zero,6cf0 <_dtoa_r+0xeac>
    6ce8:	d8c00617 	ldw	r3,24(sp)
    6cec:	18003726 	beq	r3,zero,6dcc <_dtoa_r+0xf88>
    6cf0:	b0002016 	blt	r22,zero,6d74 <_dtoa_r+0xf30>
    6cf4:	b000041e 	bne	r22,zero,6d08 <_dtoa_r+0xec4>
    6cf8:	d9000317 	ldw	r4,12(sp)
    6cfc:	2000021e 	bne	r4,zero,6d08 <_dtoa_r+0xec4>
    6d00:	d8c00617 	ldw	r3,24(sp)
    6d04:	18001b26 	beq	r3,zero,6d74 <_dtoa_r+0xf30>
    6d08:	00810716 	blt	zero,r2,7128 <_dtoa_r+0x12e4>
    6d0c:	d8c00417 	ldw	r3,16(sp)
    6d10:	9d800044 	addi	r22,r19,1
    6d14:	9c800005 	stb	r18,0(r19)
    6d18:	b02f883a 	mov	r23,r22
    6d1c:	98c10626 	beq	r19,r3,7138 <_dtoa_r+0x12f4>
    6d20:	800b883a 	mov	r5,r16
    6d24:	000f883a 	mov	r7,zero
    6d28:	01800284 	movi	r6,10
    6d2c:	e009883a 	mov	r4,fp
    6d30:	00096280 	call	9628 <__multadd>
    6d34:	1021883a 	mov	r16,r2
    6d38:	000f883a 	mov	r7,zero
    6d3c:	01800284 	movi	r6,10
    6d40:	880b883a 	mov	r5,r17
    6d44:	e009883a 	mov	r4,fp
    6d48:	8d002526 	beq	r17,r20,6de0 <_dtoa_r+0xf9c>
    6d4c:	00096280 	call	9628 <__multadd>
    6d50:	a00b883a 	mov	r5,r20
    6d54:	000f883a 	mov	r7,zero
    6d58:	01800284 	movi	r6,10
    6d5c:	e009883a 	mov	r4,fp
    6d60:	1023883a 	mov	r17,r2
    6d64:	00096280 	call	9628 <__multadd>
    6d68:	1029883a 	mov	r20,r2
    6d6c:	b027883a 	mov	r19,r22
    6d70:	003fc006 	br	6c74 <__alt_mem_Onchip_SRAM+0xf8006c74>
    6d74:	9011883a 	mov	r8,r18
    6d78:	00800e0e 	bge	zero,r2,6db4 <_dtoa_r+0xf70>
    6d7c:	800b883a 	mov	r5,r16
    6d80:	01800044 	movi	r6,1
    6d84:	e009883a 	mov	r4,fp
    6d88:	da001715 	stw	r8,92(sp)
    6d8c:	0009d940 	call	9d94 <__lshift>
    6d90:	a80b883a 	mov	r5,r21
    6d94:	1009883a 	mov	r4,r2
    6d98:	1021883a 	mov	r16,r2
    6d9c:	0009edc0 	call	9edc <__mcmp>
    6da0:	da001717 	ldw	r8,92(sp)
    6da4:	0081960e 	bge	zero,r2,7400 <_dtoa_r+0x15bc>
    6da8:	00800e44 	movi	r2,57
    6dac:	40817026 	beq	r8,r2,7370 <_dtoa_r+0x152c>
    6db0:	ba000c44 	addi	r8,r23,49
    6db4:	8825883a 	mov	r18,r17
    6db8:	9dc00044 	addi	r23,r19,1
    6dbc:	9a000005 	stb	r8,0(r19)
    6dc0:	a023883a 	mov	r17,r20
    6dc4:	dc000915 	stw	r16,36(sp)
    6dc8:	003f2406 	br	6a5c <__alt_mem_Onchip_SRAM+0xf8006a5c>
    6dcc:	00800e44 	movi	r2,57
    6dd0:	9011883a 	mov	r8,r18
    6dd4:	90816626 	beq	r18,r2,7370 <_dtoa_r+0x152c>
    6dd8:	05bff516 	blt	zero,r22,6db0 <__alt_mem_Onchip_SRAM+0xf8006db0>
    6ddc:	003ff506 	br	6db4 <__alt_mem_Onchip_SRAM+0xf8006db4>
    6de0:	00096280 	call	9628 <__multadd>
    6de4:	1023883a 	mov	r17,r2
    6de8:	1029883a 	mov	r20,r2
    6dec:	003fdf06 	br	6d6c <__alt_mem_Onchip_SRAM+0xf8006d6c>
    6df0:	e009883a 	mov	r4,fp
    6df4:	00096000 	call	9600 <_Bfree>
    6df8:	00800044 	movi	r2,1
    6dfc:	003fbc06 	br	6cf0 <__alt_mem_Onchip_SRAM+0xf8006cf0>
    6e00:	a80b883a 	mov	r5,r21
    6e04:	8009883a 	mov	r4,r16
    6e08:	0009edc0 	call	9edc <__mcmp>
    6e0c:	103edb0e 	bge	r2,zero,697c <__alt_mem_Onchip_SRAM+0xf800697c>
    6e10:	800b883a 	mov	r5,r16
    6e14:	000f883a 	mov	r7,zero
    6e18:	01800284 	movi	r6,10
    6e1c:	e009883a 	mov	r4,fp
    6e20:	00096280 	call	9628 <__multadd>
    6e24:	1021883a 	mov	r16,r2
    6e28:	d8800517 	ldw	r2,20(sp)
    6e2c:	d8c00b17 	ldw	r3,44(sp)
    6e30:	10bfffc4 	addi	r2,r2,-1
    6e34:	d8800515 	stw	r2,20(sp)
    6e38:	183f761e 	bne	r3,zero,6c14 <__alt_mem_Onchip_SRAM+0xf8006c14>
    6e3c:	d9000c17 	ldw	r4,48(sp)
    6e40:	0101730e 	bge	zero,r4,7410 <_dtoa_r+0x15cc>
    6e44:	d9000615 	stw	r4,24(sp)
    6e48:	003ed006 	br	698c <__alt_mem_Onchip_SRAM+0xf800698c>
    6e4c:	00800084 	movi	r2,2
    6e50:	3081861e 	bne	r6,r2,746c <_dtoa_r+0x1628>
    6e54:	d8000b15 	stw	zero,44(sp)
    6e58:	003f3c06 	br	6b4c <__alt_mem_Onchip_SRAM+0xf8006b4c>
    6e5c:	dc000917 	ldw	r16,36(sp)
    6e60:	003e9206 	br	68ac <__alt_mem_Onchip_SRAM+0xf80068ac>
    6e64:	d9c00317 	ldw	r7,12(sp)
    6e68:	00800084 	movi	r2,2
    6e6c:	11fec50e 	bge	r2,r7,6984 <__alt_mem_Onchip_SRAM+0xf8006984>
    6e70:	d9000617 	ldw	r4,24(sp)
    6e74:	20013c1e 	bne	r4,zero,7368 <_dtoa_r+0x1524>
    6e78:	a80b883a 	mov	r5,r21
    6e7c:	000f883a 	mov	r7,zero
    6e80:	01800144 	movi	r6,5
    6e84:	e009883a 	mov	r4,fp
    6e88:	00096280 	call	9628 <__multadd>
    6e8c:	100b883a 	mov	r5,r2
    6e90:	8009883a 	mov	r4,r16
    6e94:	102b883a 	mov	r21,r2
    6e98:	0009edc0 	call	9edc <__mcmp>
    6e9c:	dc000915 	stw	r16,36(sp)
    6ea0:	00bf410e 	bge	zero,r2,6ba8 <__alt_mem_Onchip_SRAM+0xf8006ba8>
    6ea4:	d9c00717 	ldw	r7,28(sp)
    6ea8:	00800c44 	movi	r2,49
    6eac:	38800005 	stb	r2,0(r7)
    6eb0:	d8800517 	ldw	r2,20(sp)
    6eb4:	3dc00044 	addi	r23,r7,1
    6eb8:	10800044 	addi	r2,r2,1
    6ebc:	d8800515 	stw	r2,20(sp)
    6ec0:	003f3d06 	br	6bb8 <__alt_mem_Onchip_SRAM+0xf8006bb8>
    6ec4:	d9800517 	ldw	r6,20(sp)
    6ec8:	d9c00717 	ldw	r7,28(sp)
    6ecc:	00800c44 	movi	r2,49
    6ed0:	31800044 	addi	r6,r6,1
    6ed4:	d9800515 	stw	r6,20(sp)
    6ed8:	38800005 	stb	r2,0(r7)
    6edc:	003edf06 	br	6a5c <__alt_mem_Onchip_SRAM+0xf8006a5c>
    6ee0:	d8000b15 	stw	zero,44(sp)
    6ee4:	003c9f06 	br	6164 <__alt_mem_Onchip_SRAM+0xf8006164>
    6ee8:	903e7e1e 	bne	r18,zero,68e4 <__alt_mem_Onchip_SRAM+0xf80068e4>
    6eec:	00800434 	movhi	r2,16
    6ef0:	10bfffc4 	addi	r2,r2,-1
    6ef4:	9884703a 	and	r2,r19,r2
    6ef8:	1000ea1e 	bne	r2,zero,72a4 <_dtoa_r+0x1460>
    6efc:	9cdffc2c 	andhi	r19,r19,32752
    6f00:	9800e826 	beq	r19,zero,72a4 <_dtoa_r+0x1460>
    6f04:	d9c00817 	ldw	r7,32(sp)
    6f08:	b5800044 	addi	r22,r22,1
    6f0c:	04c00044 	movi	r19,1
    6f10:	39c00044 	addi	r7,r7,1
    6f14:	d9c00815 	stw	r7,32(sp)
    6f18:	d8800d17 	ldw	r2,52(sp)
    6f1c:	103e721e 	bne	r2,zero,68e8 <__alt_mem_Onchip_SRAM+0xf80068e8>
    6f20:	00800044 	movi	r2,1
    6f24:	003e7906 	br	690c <__alt_mem_Onchip_SRAM+0xf800690c>
    6f28:	8009883a 	mov	r4,r16
    6f2c:	00118f80 	call	118f8 <__floatsidf>
    6f30:	d9800f17 	ldw	r6,60(sp)
    6f34:	d9c01017 	ldw	r7,64(sp)
    6f38:	1009883a 	mov	r4,r2
    6f3c:	180b883a 	mov	r5,r3
    6f40:	00107100 	call	10710 <__muldf3>
    6f44:	000d883a 	mov	r6,zero
    6f48:	01d00734 	movhi	r7,16412
    6f4c:	1009883a 	mov	r4,r2
    6f50:	180b883a 	mov	r5,r3
    6f54:	000f23c0 	call	f23c <__adddf3>
    6f58:	047f3034 	movhi	r17,64704
    6f5c:	1021883a 	mov	r16,r2
    6f60:	1c63883a 	add	r17,r3,r17
    6f64:	d9000f17 	ldw	r4,60(sp)
    6f68:	d9401017 	ldw	r5,64(sp)
    6f6c:	000d883a 	mov	r6,zero
    6f70:	01d00534 	movhi	r7,16404
    6f74:	0010f7c0 	call	10f7c <__subdf3>
    6f78:	800d883a 	mov	r6,r16
    6f7c:	880f883a 	mov	r7,r17
    6f80:	1009883a 	mov	r4,r2
    6f84:	180b883a 	mov	r5,r3
    6f88:	102b883a 	mov	r21,r2
    6f8c:	1829883a 	mov	r20,r3
    6f90:	00105400 	call	10540 <__gedf2>
    6f94:	00806c16 	blt	zero,r2,7148 <_dtoa_r+0x1304>
    6f98:	89e0003c 	xorhi	r7,r17,32768
    6f9c:	800d883a 	mov	r6,r16
    6fa0:	a809883a 	mov	r4,r21
    6fa4:	a00b883a 	mov	r5,r20
    6fa8:	001061c0 	call	1061c <__ledf2>
    6fac:	103d7e0e 	bge	r2,zero,65a8 <__alt_mem_Onchip_SRAM+0xf80065a8>
    6fb0:	002b883a 	mov	r21,zero
    6fb4:	0023883a 	mov	r17,zero
    6fb8:	003efb06 	br	6ba8 <__alt_mem_Onchip_SRAM+0xf8006ba8>
    6fbc:	d8800717 	ldw	r2,28(sp)
    6fc0:	003bd006 	br	5f04 <__alt_mem_Onchip_SRAM+0xf8005f04>
    6fc4:	d9000a17 	ldw	r4,40(sp)
    6fc8:	d9800d17 	ldw	r6,52(sp)
    6fcc:	dd400a15 	stw	r21,40(sp)
    6fd0:	a905c83a 	sub	r2,r21,r4
    6fd4:	308d883a 	add	r6,r6,r2
    6fd8:	d9800d15 	stw	r6,52(sp)
    6fdc:	002b883a 	mov	r21,zero
    6fe0:	003e0606 	br	67fc <__alt_mem_Onchip_SRAM+0xf80067fc>
    6fe4:	9023883a 	mov	r17,r18
    6fe8:	9829883a 	mov	r20,r19
    6fec:	04000084 	movi	r16,2
    6ff0:	003c9206 	br	623c <__alt_mem_Onchip_SRAM+0xf800623c>
    6ff4:	04000044 	movi	r16,1
    6ff8:	dc000c15 	stw	r16,48(sp)
    6ffc:	dc000615 	stw	r16,24(sp)
    7000:	dc002215 	stw	r16,136(sp)
    7004:	e0001115 	stw	zero,68(fp)
    7008:	000b883a 	mov	r5,zero
    700c:	003c6906 	br	61b4 <__alt_mem_Onchip_SRAM+0xf80061b4>
    7010:	3021883a 	mov	r16,r6
    7014:	003ffb06 	br	7004 <__alt_mem_Onchip_SRAM+0xf8007004>
    7018:	1000021e 	bne	r2,zero,7024 <_dtoa_r+0x11e0>
    701c:	4200004c 	andi	r8,r8,1
    7020:	403e7d1e 	bne	r8,zero,6a18 <__alt_mem_Onchip_SRAM+0xf8006a18>
    7024:	01000c04 	movi	r4,48
    7028:	00000106 	br	7030 <_dtoa_r+0x11ec>
    702c:	102f883a 	mov	r23,r2
    7030:	b8bfffc4 	addi	r2,r23,-1
    7034:	10c00007 	ldb	r3,0(r2)
    7038:	193ffc26 	beq	r3,r4,702c <__alt_mem_Onchip_SRAM+0xf800702c>
    703c:	003e8706 	br	6a5c <__alt_mem_Onchip_SRAM+0xf8006a5c>
    7040:	d8800517 	ldw	r2,20(sp)
    7044:	00a3c83a 	sub	r17,zero,r2
    7048:	8800a426 	beq	r17,zero,72dc <_dtoa_r+0x1498>
    704c:	888003cc 	andi	r2,r17,15
    7050:	100490fa 	slli	r2,r2,3
    7054:	00c00074 	movhi	r3,1
    7058:	18daf104 	addi	r3,r3,27588
    705c:	1885883a 	add	r2,r3,r2
    7060:	11800017 	ldw	r6,0(r2)
    7064:	11c00117 	ldw	r7,4(r2)
    7068:	9009883a 	mov	r4,r18
    706c:	980b883a 	mov	r5,r19
    7070:	8823d13a 	srai	r17,r17,4
    7074:	00107100 	call	10710 <__muldf3>
    7078:	d8800f15 	stw	r2,60(sp)
    707c:	d8c01015 	stw	r3,64(sp)
    7080:	8800e826 	beq	r17,zero,7424 <_dtoa_r+0x15e0>
    7084:	05000074 	movhi	r20,1
    7088:	a51ae704 	addi	r20,r20,27548
    708c:	04000084 	movi	r16,2
    7090:	8980004c 	andi	r6,r17,1
    7094:	1009883a 	mov	r4,r2
    7098:	8823d07a 	srai	r17,r17,1
    709c:	180b883a 	mov	r5,r3
    70a0:	30000426 	beq	r6,zero,70b4 <_dtoa_r+0x1270>
    70a4:	a1800017 	ldw	r6,0(r20)
    70a8:	a1c00117 	ldw	r7,4(r20)
    70ac:	84000044 	addi	r16,r16,1
    70b0:	00107100 	call	10710 <__muldf3>
    70b4:	a5000204 	addi	r20,r20,8
    70b8:	883ff51e 	bne	r17,zero,7090 <__alt_mem_Onchip_SRAM+0xf8007090>
    70bc:	d8800f15 	stw	r2,60(sp)
    70c0:	d8c01015 	stw	r3,64(sp)
    70c4:	003c7606 	br	62a0 <__alt_mem_Onchip_SRAM+0xf80062a0>
    70c8:	00c00c04 	movi	r3,48
    70cc:	10c00005 	stb	r3,0(r2)
    70d0:	d8c00517 	ldw	r3,20(sp)
    70d4:	bd3fffc3 	ldbu	r20,-1(r23)
    70d8:	18c00044 	addi	r3,r3,1
    70dc:	d8c00515 	stw	r3,20(sp)
    70e0:	003db906 	br	67c8 <__alt_mem_Onchip_SRAM+0xf80067c8>
    70e4:	89400117 	ldw	r5,4(r17)
    70e8:	e009883a 	mov	r4,fp
    70ec:	00095580 	call	9558 <_Balloc>
    70f0:	89800417 	ldw	r6,16(r17)
    70f4:	89400304 	addi	r5,r17,12
    70f8:	11000304 	addi	r4,r2,12
    70fc:	31800084 	addi	r6,r6,2
    7100:	318d883a 	add	r6,r6,r6
    7104:	318d883a 	add	r6,r6,r6
    7108:	1027883a 	mov	r19,r2
    710c:	000918c0 	call	918c <memcpy>
    7110:	01800044 	movi	r6,1
    7114:	980b883a 	mov	r5,r19
    7118:	e009883a 	mov	r4,fp
    711c:	0009d940 	call	9d94 <__lshift>
    7120:	1029883a 	mov	r20,r2
    7124:	003ecc06 	br	6c58 <__alt_mem_Onchip_SRAM+0xf8006c58>
    7128:	00800e44 	movi	r2,57
    712c:	90809026 	beq	r18,r2,7370 <_dtoa_r+0x152c>
    7130:	92000044 	addi	r8,r18,1
    7134:	003f1f06 	br	6db4 <__alt_mem_Onchip_SRAM+0xf8006db4>
    7138:	9011883a 	mov	r8,r18
    713c:	8825883a 	mov	r18,r17
    7140:	a023883a 	mov	r17,r20
    7144:	003e2906 	br	69ec <__alt_mem_Onchip_SRAM+0xf80069ec>
    7148:	002b883a 	mov	r21,zero
    714c:	0023883a 	mov	r17,zero
    7150:	003f5406 	br	6ea4 <__alt_mem_Onchip_SRAM+0xf8006ea4>
    7154:	61bfffc4 	addi	r6,r12,-1
    7158:	300490fa 	slli	r2,r6,3
    715c:	00c00074 	movhi	r3,1
    7160:	18daf104 	addi	r3,r3,27588
    7164:	1885883a 	add	r2,r3,r2
    7168:	11000017 	ldw	r4,0(r2)
    716c:	11400117 	ldw	r5,4(r2)
    7170:	d8800717 	ldw	r2,28(sp)
    7174:	880f883a 	mov	r7,r17
    7178:	d9801215 	stw	r6,72(sp)
    717c:	800d883a 	mov	r6,r16
    7180:	db001615 	stw	r12,88(sp)
    7184:	15c00044 	addi	r23,r2,1
    7188:	00107100 	call	10710 <__muldf3>
    718c:	d9401017 	ldw	r5,64(sp)
    7190:	d9000f17 	ldw	r4,60(sp)
    7194:	d8c01515 	stw	r3,84(sp)
    7198:	d8801415 	stw	r2,80(sp)
    719c:	00118780 	call	11878 <__fixdfsi>
    71a0:	1009883a 	mov	r4,r2
    71a4:	1021883a 	mov	r16,r2
    71a8:	00118f80 	call	118f8 <__floatsidf>
    71ac:	d9000f17 	ldw	r4,60(sp)
    71b0:	d9401017 	ldw	r5,64(sp)
    71b4:	100d883a 	mov	r6,r2
    71b8:	180f883a 	mov	r7,r3
    71bc:	0010f7c0 	call	10f7c <__subdf3>
    71c0:	1829883a 	mov	r20,r3
    71c4:	d8c00717 	ldw	r3,28(sp)
    71c8:	84000c04 	addi	r16,r16,48
    71cc:	1023883a 	mov	r17,r2
    71d0:	1c000005 	stb	r16,0(r3)
    71d4:	db001617 	ldw	r12,88(sp)
    71d8:	00800044 	movi	r2,1
    71dc:	60802226 	beq	r12,r2,7268 <_dtoa_r+0x1424>
    71e0:	d9c00717 	ldw	r7,28(sp)
    71e4:	8805883a 	mov	r2,r17
    71e8:	b82b883a 	mov	r21,r23
    71ec:	3b19883a 	add	r12,r7,r12
    71f0:	6023883a 	mov	r17,r12
    71f4:	a007883a 	mov	r3,r20
    71f8:	dc800f15 	stw	r18,60(sp)
    71fc:	000d883a 	mov	r6,zero
    7200:	01d00934 	movhi	r7,16420
    7204:	1009883a 	mov	r4,r2
    7208:	180b883a 	mov	r5,r3
    720c:	00107100 	call	10710 <__muldf3>
    7210:	180b883a 	mov	r5,r3
    7214:	1009883a 	mov	r4,r2
    7218:	1829883a 	mov	r20,r3
    721c:	1025883a 	mov	r18,r2
    7220:	00118780 	call	11878 <__fixdfsi>
    7224:	1009883a 	mov	r4,r2
    7228:	1021883a 	mov	r16,r2
    722c:	00118f80 	call	118f8 <__floatsidf>
    7230:	100d883a 	mov	r6,r2
    7234:	180f883a 	mov	r7,r3
    7238:	9009883a 	mov	r4,r18
    723c:	a00b883a 	mov	r5,r20
    7240:	84000c04 	addi	r16,r16,48
    7244:	0010f7c0 	call	10f7c <__subdf3>
    7248:	ad400044 	addi	r21,r21,1
    724c:	ac3fffc5 	stb	r16,-1(r21)
    7250:	ac7fea1e 	bne	r21,r17,71fc <__alt_mem_Onchip_SRAM+0xf80071fc>
    7254:	1023883a 	mov	r17,r2
    7258:	d8801217 	ldw	r2,72(sp)
    725c:	dc800f17 	ldw	r18,60(sp)
    7260:	1829883a 	mov	r20,r3
    7264:	b8af883a 	add	r23,r23,r2
    7268:	d9001417 	ldw	r4,80(sp)
    726c:	d9401517 	ldw	r5,84(sp)
    7270:	000d883a 	mov	r6,zero
    7274:	01cff834 	movhi	r7,16352
    7278:	000f23c0 	call	f23c <__adddf3>
    727c:	880d883a 	mov	r6,r17
    7280:	a00f883a 	mov	r7,r20
    7284:	1009883a 	mov	r4,r2
    7288:	180b883a 	mov	r5,r3
    728c:	001061c0 	call	1061c <__ledf2>
    7290:	10003e0e 	bge	r2,zero,738c <_dtoa_r+0x1548>
    7294:	d9001317 	ldw	r4,76(sp)
    7298:	bd3fffc3 	ldbu	r20,-1(r23)
    729c:	d9000515 	stw	r4,20(sp)
    72a0:	003d3b06 	br	6790 <__alt_mem_Onchip_SRAM+0xf8006790>
    72a4:	0027883a 	mov	r19,zero
    72a8:	003f1b06 	br	6f18 <__alt_mem_Onchip_SRAM+0xf8006f18>
    72ac:	d8800817 	ldw	r2,32(sp)
    72b0:	11e9c83a 	sub	r20,r2,r7
    72b4:	0005883a 	mov	r2,zero
    72b8:	003d5406 	br	680c <__alt_mem_Onchip_SRAM+0xf800680c>
    72bc:	00800044 	movi	r2,1
    72c0:	003dc706 	br	69e0 <__alt_mem_Onchip_SRAM+0xf80069e0>
    72c4:	d8c00217 	ldw	r3,8(sp)
    72c8:	00800d84 	movi	r2,54
    72cc:	dd400a17 	ldw	r21,40(sp)
    72d0:	10c5c83a 	sub	r2,r2,r3
    72d4:	dd000817 	ldw	r20,32(sp)
    72d8:	003d4c06 	br	680c <__alt_mem_Onchip_SRAM+0xf800680c>
    72dc:	dc800f15 	stw	r18,60(sp)
    72e0:	dcc01015 	stw	r19,64(sp)
    72e4:	04000084 	movi	r16,2
    72e8:	003bed06 	br	62a0 <__alt_mem_Onchip_SRAM+0xf80062a0>
    72ec:	d9000617 	ldw	r4,24(sp)
    72f0:	203f0d26 	beq	r4,zero,6f28 <__alt_mem_Onchip_SRAM+0xf8006f28>
    72f4:	d9800c17 	ldw	r6,48(sp)
    72f8:	01bcab0e 	bge	zero,r6,65a8 <__alt_mem_Onchip_SRAM+0xf80065a8>
    72fc:	d9401017 	ldw	r5,64(sp)
    7300:	d9000f17 	ldw	r4,60(sp)
    7304:	000d883a 	mov	r6,zero
    7308:	01d00934 	movhi	r7,16420
    730c:	00107100 	call	10710 <__muldf3>
    7310:	81000044 	addi	r4,r16,1
    7314:	d8800f15 	stw	r2,60(sp)
    7318:	d8c01015 	stw	r3,64(sp)
    731c:	00118f80 	call	118f8 <__floatsidf>
    7320:	d9800f17 	ldw	r6,60(sp)
    7324:	d9c01017 	ldw	r7,64(sp)
    7328:	1009883a 	mov	r4,r2
    732c:	180b883a 	mov	r5,r3
    7330:	00107100 	call	10710 <__muldf3>
    7334:	01d00734 	movhi	r7,16412
    7338:	000d883a 	mov	r6,zero
    733c:	1009883a 	mov	r4,r2
    7340:	180b883a 	mov	r5,r3
    7344:	000f23c0 	call	f23c <__adddf3>
    7348:	d9c00517 	ldw	r7,20(sp)
    734c:	047f3034 	movhi	r17,64704
    7350:	1021883a 	mov	r16,r2
    7354:	39ffffc4 	addi	r7,r7,-1
    7358:	d9c01315 	stw	r7,76(sp)
    735c:	1c63883a 	add	r17,r3,r17
    7360:	db000c17 	ldw	r12,48(sp)
    7364:	003bea06 	br	6310 <__alt_mem_Onchip_SRAM+0xf8006310>
    7368:	dc000915 	stw	r16,36(sp)
    736c:	003e0e06 	br	6ba8 <__alt_mem_Onchip_SRAM+0xf8006ba8>
    7370:	01000e44 	movi	r4,57
    7374:	8825883a 	mov	r18,r17
    7378:	9dc00044 	addi	r23,r19,1
    737c:	99000005 	stb	r4,0(r19)
    7380:	a023883a 	mov	r17,r20
    7384:	dc000915 	stw	r16,36(sp)
    7388:	003da406 	br	6a1c <__alt_mem_Onchip_SRAM+0xf8006a1c>
    738c:	d9801417 	ldw	r6,80(sp)
    7390:	d9c01517 	ldw	r7,84(sp)
    7394:	0009883a 	mov	r4,zero
    7398:	014ff834 	movhi	r5,16352
    739c:	0010f7c0 	call	10f7c <__subdf3>
    73a0:	880d883a 	mov	r6,r17
    73a4:	a00f883a 	mov	r7,r20
    73a8:	1009883a 	mov	r4,r2
    73ac:	180b883a 	mov	r5,r3
    73b0:	00105400 	call	10540 <__gedf2>
    73b4:	00bc7c0e 	bge	zero,r2,65a8 <__alt_mem_Onchip_SRAM+0xf80065a8>
    73b8:	01000c04 	movi	r4,48
    73bc:	00000106 	br	73c4 <_dtoa_r+0x1580>
    73c0:	102f883a 	mov	r23,r2
    73c4:	b8bfffc4 	addi	r2,r23,-1
    73c8:	10c00007 	ldb	r3,0(r2)
    73cc:	193ffc26 	beq	r3,r4,73c0 <__alt_mem_Onchip_SRAM+0xf80073c0>
    73d0:	d9801317 	ldw	r6,76(sp)
    73d4:	d9800515 	stw	r6,20(sp)
    73d8:	003c4406 	br	64ec <__alt_mem_Onchip_SRAM+0xf80064ec>
    73dc:	d9801317 	ldw	r6,76(sp)
    73e0:	d9800515 	stw	r6,20(sp)
    73e4:	003cea06 	br	6790 <__alt_mem_Onchip_SRAM+0xf8006790>
    73e8:	dd800f17 	ldw	r22,60(sp)
    73ec:	dcc01017 	ldw	r19,64(sp)
    73f0:	dc801217 	ldw	r18,72(sp)
    73f4:	003c6c06 	br	65a8 <__alt_mem_Onchip_SRAM+0xf80065a8>
    73f8:	903e031e 	bne	r18,zero,6c08 <__alt_mem_Onchip_SRAM+0xf8006c08>
    73fc:	003ebb06 	br	6eec <__alt_mem_Onchip_SRAM+0xf8006eec>
    7400:	103e6c1e 	bne	r2,zero,6db4 <__alt_mem_Onchip_SRAM+0xf8006db4>
    7404:	4080004c 	andi	r2,r8,1
    7408:	103e6a26 	beq	r2,zero,6db4 <__alt_mem_Onchip_SRAM+0xf8006db4>
    740c:	003e6606 	br	6da8 <__alt_mem_Onchip_SRAM+0xf8006da8>
    7410:	d8c00317 	ldw	r3,12(sp)
    7414:	00800084 	movi	r2,2
    7418:	10c02916 	blt	r2,r3,74c0 <_dtoa_r+0x167c>
    741c:	d9000c17 	ldw	r4,48(sp)
    7420:	003e8806 	br	6e44 <__alt_mem_Onchip_SRAM+0xf8006e44>
    7424:	04000084 	movi	r16,2
    7428:	003b9d06 	br	62a0 <__alt_mem_Onchip_SRAM+0xf80062a0>
    742c:	d9001317 	ldw	r4,76(sp)
    7430:	d9000515 	stw	r4,20(sp)
    7434:	003cd606 	br	6790 <__alt_mem_Onchip_SRAM+0xf8006790>
    7438:	d8801317 	ldw	r2,76(sp)
    743c:	d8800515 	stw	r2,20(sp)
    7440:	003c2a06 	br	64ec <__alt_mem_Onchip_SRAM+0xf80064ec>
    7444:	d9800317 	ldw	r6,12(sp)
    7448:	00800084 	movi	r2,2
    744c:	11801516 	blt	r2,r6,74a4 <_dtoa_r+0x1660>
    7450:	d9c00c17 	ldw	r7,48(sp)
    7454:	d9c00615 	stw	r7,24(sp)
    7458:	003df706 	br	6c38 <__alt_mem_Onchip_SRAM+0xf8006c38>
    745c:	193d3926 	beq	r3,r4,6944 <__alt_mem_Onchip_SRAM+0xf8006944>
    7460:	00c00f04 	movi	r3,60
    7464:	1885c83a 	sub	r2,r3,r2
    7468:	003ddf06 	br	6be8 <__alt_mem_Onchip_SRAM+0xf8006be8>
    746c:	e009883a 	mov	r4,fp
    7470:	e0001115 	stw	zero,68(fp)
    7474:	000b883a 	mov	r5,zero
    7478:	00095580 	call	9558 <_Balloc>
    747c:	d8800715 	stw	r2,28(sp)
    7480:	d8c00717 	ldw	r3,28(sp)
    7484:	00bfffc4 	movi	r2,-1
    7488:	01000044 	movi	r4,1
    748c:	d8800c15 	stw	r2,48(sp)
    7490:	e0c01015 	stw	r3,64(fp)
    7494:	d9000b15 	stw	r4,44(sp)
    7498:	d8800615 	stw	r2,24(sp)
    749c:	d8002215 	stw	zero,136(sp)
    74a0:	003c4106 	br	65a8 <__alt_mem_Onchip_SRAM+0xf80065a8>
    74a4:	d8c00c17 	ldw	r3,48(sp)
    74a8:	d8c00615 	stw	r3,24(sp)
    74ac:	003e7006 	br	6e70 <__alt_mem_Onchip_SRAM+0xf8006e70>
    74b0:	04400044 	movi	r17,1
    74b4:	003b2006 	br	6138 <__alt_mem_Onchip_SRAM+0xf8006138>
    74b8:	000b883a 	mov	r5,zero
    74bc:	003b3d06 	br	61b4 <__alt_mem_Onchip_SRAM+0xf80061b4>
    74c0:	d8800c17 	ldw	r2,48(sp)
    74c4:	d8800615 	stw	r2,24(sp)
    74c8:	003e6906 	br	6e70 <__alt_mem_Onchip_SRAM+0xf8006e70>

000074cc <__sflush_r>:
    74cc:	2880030b 	ldhu	r2,12(r5)
    74d0:	defffb04 	addi	sp,sp,-20
    74d4:	dcc00315 	stw	r19,12(sp)
    74d8:	dc400115 	stw	r17,4(sp)
    74dc:	dfc00415 	stw	ra,16(sp)
    74e0:	dc800215 	stw	r18,8(sp)
    74e4:	dc000015 	stw	r16,0(sp)
    74e8:	10c0020c 	andi	r3,r2,8
    74ec:	2823883a 	mov	r17,r5
    74f0:	2027883a 	mov	r19,r4
    74f4:	1800311e 	bne	r3,zero,75bc <__sflush_r+0xf0>
    74f8:	28c00117 	ldw	r3,4(r5)
    74fc:	10820014 	ori	r2,r2,2048
    7500:	2880030d 	sth	r2,12(r5)
    7504:	00c04b0e 	bge	zero,r3,7634 <__sflush_r+0x168>
    7508:	8a000a17 	ldw	r8,40(r17)
    750c:	40002326 	beq	r8,zero,759c <__sflush_r+0xd0>
    7510:	9c000017 	ldw	r16,0(r19)
    7514:	10c4000c 	andi	r3,r2,4096
    7518:	98000015 	stw	zero,0(r19)
    751c:	18004826 	beq	r3,zero,7640 <__sflush_r+0x174>
    7520:	89801417 	ldw	r6,80(r17)
    7524:	10c0010c 	andi	r3,r2,4
    7528:	18000626 	beq	r3,zero,7544 <__sflush_r+0x78>
    752c:	88c00117 	ldw	r3,4(r17)
    7530:	88800c17 	ldw	r2,48(r17)
    7534:	30cdc83a 	sub	r6,r6,r3
    7538:	10000226 	beq	r2,zero,7544 <__sflush_r+0x78>
    753c:	88800f17 	ldw	r2,60(r17)
    7540:	308dc83a 	sub	r6,r6,r2
    7544:	89400717 	ldw	r5,28(r17)
    7548:	000f883a 	mov	r7,zero
    754c:	9809883a 	mov	r4,r19
    7550:	403ee83a 	callr	r8
    7554:	00ffffc4 	movi	r3,-1
    7558:	10c04426 	beq	r2,r3,766c <__sflush_r+0x1a0>
    755c:	88c0030b 	ldhu	r3,12(r17)
    7560:	89000417 	ldw	r4,16(r17)
    7564:	88000115 	stw	zero,4(r17)
    7568:	197dffcc 	andi	r5,r3,63487
    756c:	8940030d 	sth	r5,12(r17)
    7570:	89000015 	stw	r4,0(r17)
    7574:	18c4000c 	andi	r3,r3,4096
    7578:	18002c1e 	bne	r3,zero,762c <__sflush_r+0x160>
    757c:	89400c17 	ldw	r5,48(r17)
    7580:	9c000015 	stw	r16,0(r19)
    7584:	28000526 	beq	r5,zero,759c <__sflush_r+0xd0>
    7588:	88801004 	addi	r2,r17,64
    758c:	28800226 	beq	r5,r2,7598 <__sflush_r+0xcc>
    7590:	9809883a 	mov	r4,r19
    7594:	0007c480 	call	7c48 <_free_r>
    7598:	88000c15 	stw	zero,48(r17)
    759c:	0005883a 	mov	r2,zero
    75a0:	dfc00417 	ldw	ra,16(sp)
    75a4:	dcc00317 	ldw	r19,12(sp)
    75a8:	dc800217 	ldw	r18,8(sp)
    75ac:	dc400117 	ldw	r17,4(sp)
    75b0:	dc000017 	ldw	r16,0(sp)
    75b4:	dec00504 	addi	sp,sp,20
    75b8:	f800283a 	ret
    75bc:	2c800417 	ldw	r18,16(r5)
    75c0:	903ff626 	beq	r18,zero,759c <__alt_mem_Onchip_SRAM+0xf800759c>
    75c4:	2c000017 	ldw	r16,0(r5)
    75c8:	108000cc 	andi	r2,r2,3
    75cc:	2c800015 	stw	r18,0(r5)
    75d0:	84a1c83a 	sub	r16,r16,r18
    75d4:	1000131e 	bne	r2,zero,7624 <__sflush_r+0x158>
    75d8:	28800517 	ldw	r2,20(r5)
    75dc:	88800215 	stw	r2,8(r17)
    75e0:	04000316 	blt	zero,r16,75f0 <__sflush_r+0x124>
    75e4:	003fed06 	br	759c <__alt_mem_Onchip_SRAM+0xf800759c>
    75e8:	90a5883a 	add	r18,r18,r2
    75ec:	043feb0e 	bge	zero,r16,759c <__alt_mem_Onchip_SRAM+0xf800759c>
    75f0:	88800917 	ldw	r2,36(r17)
    75f4:	89400717 	ldw	r5,28(r17)
    75f8:	800f883a 	mov	r7,r16
    75fc:	900d883a 	mov	r6,r18
    7600:	9809883a 	mov	r4,r19
    7604:	103ee83a 	callr	r2
    7608:	80a1c83a 	sub	r16,r16,r2
    760c:	00bff616 	blt	zero,r2,75e8 <__alt_mem_Onchip_SRAM+0xf80075e8>
    7610:	88c0030b 	ldhu	r3,12(r17)
    7614:	00bfffc4 	movi	r2,-1
    7618:	18c01014 	ori	r3,r3,64
    761c:	88c0030d 	sth	r3,12(r17)
    7620:	003fdf06 	br	75a0 <__alt_mem_Onchip_SRAM+0xf80075a0>
    7624:	0005883a 	mov	r2,zero
    7628:	003fec06 	br	75dc <__alt_mem_Onchip_SRAM+0xf80075dc>
    762c:	88801415 	stw	r2,80(r17)
    7630:	003fd206 	br	757c <__alt_mem_Onchip_SRAM+0xf800757c>
    7634:	28c00f17 	ldw	r3,60(r5)
    7638:	00ffb316 	blt	zero,r3,7508 <__alt_mem_Onchip_SRAM+0xf8007508>
    763c:	003fd706 	br	759c <__alt_mem_Onchip_SRAM+0xf800759c>
    7640:	89400717 	ldw	r5,28(r17)
    7644:	000d883a 	mov	r6,zero
    7648:	01c00044 	movi	r7,1
    764c:	9809883a 	mov	r4,r19
    7650:	403ee83a 	callr	r8
    7654:	100d883a 	mov	r6,r2
    7658:	00bfffc4 	movi	r2,-1
    765c:	30801426 	beq	r6,r2,76b0 <__sflush_r+0x1e4>
    7660:	8880030b 	ldhu	r2,12(r17)
    7664:	8a000a17 	ldw	r8,40(r17)
    7668:	003fae06 	br	7524 <__alt_mem_Onchip_SRAM+0xf8007524>
    766c:	98c00017 	ldw	r3,0(r19)
    7670:	183fba26 	beq	r3,zero,755c <__alt_mem_Onchip_SRAM+0xf800755c>
    7674:	01000744 	movi	r4,29
    7678:	19000626 	beq	r3,r4,7694 <__sflush_r+0x1c8>
    767c:	01000584 	movi	r4,22
    7680:	19000426 	beq	r3,r4,7694 <__sflush_r+0x1c8>
    7684:	88c0030b 	ldhu	r3,12(r17)
    7688:	18c01014 	ori	r3,r3,64
    768c:	88c0030d 	sth	r3,12(r17)
    7690:	003fc306 	br	75a0 <__alt_mem_Onchip_SRAM+0xf80075a0>
    7694:	8880030b 	ldhu	r2,12(r17)
    7698:	88c00417 	ldw	r3,16(r17)
    769c:	88000115 	stw	zero,4(r17)
    76a0:	10bdffcc 	andi	r2,r2,63487
    76a4:	8880030d 	sth	r2,12(r17)
    76a8:	88c00015 	stw	r3,0(r17)
    76ac:	003fb306 	br	757c <__alt_mem_Onchip_SRAM+0xf800757c>
    76b0:	98800017 	ldw	r2,0(r19)
    76b4:	103fea26 	beq	r2,zero,7660 <__alt_mem_Onchip_SRAM+0xf8007660>
    76b8:	00c00744 	movi	r3,29
    76bc:	10c00226 	beq	r2,r3,76c8 <__sflush_r+0x1fc>
    76c0:	00c00584 	movi	r3,22
    76c4:	10c0031e 	bne	r2,r3,76d4 <__sflush_r+0x208>
    76c8:	9c000015 	stw	r16,0(r19)
    76cc:	0005883a 	mov	r2,zero
    76d0:	003fb306 	br	75a0 <__alt_mem_Onchip_SRAM+0xf80075a0>
    76d4:	88c0030b 	ldhu	r3,12(r17)
    76d8:	3005883a 	mov	r2,r6
    76dc:	18c01014 	ori	r3,r3,64
    76e0:	88c0030d 	sth	r3,12(r17)
    76e4:	003fae06 	br	75a0 <__alt_mem_Onchip_SRAM+0xf80075a0>

000076e8 <_fflush_r>:
    76e8:	defffd04 	addi	sp,sp,-12
    76ec:	dc000115 	stw	r16,4(sp)
    76f0:	dfc00215 	stw	ra,8(sp)
    76f4:	2021883a 	mov	r16,r4
    76f8:	20000226 	beq	r4,zero,7704 <_fflush_r+0x1c>
    76fc:	20800e17 	ldw	r2,56(r4)
    7700:	10000c26 	beq	r2,zero,7734 <_fflush_r+0x4c>
    7704:	2880030f 	ldh	r2,12(r5)
    7708:	1000051e 	bne	r2,zero,7720 <_fflush_r+0x38>
    770c:	0005883a 	mov	r2,zero
    7710:	dfc00217 	ldw	ra,8(sp)
    7714:	dc000117 	ldw	r16,4(sp)
    7718:	dec00304 	addi	sp,sp,12
    771c:	f800283a 	ret
    7720:	8009883a 	mov	r4,r16
    7724:	dfc00217 	ldw	ra,8(sp)
    7728:	dc000117 	ldw	r16,4(sp)
    772c:	dec00304 	addi	sp,sp,12
    7730:	00074cc1 	jmpi	74cc <__sflush_r>
    7734:	d9400015 	stw	r5,0(sp)
    7738:	0007ad40 	call	7ad4 <__sinit>
    773c:	d9400017 	ldw	r5,0(sp)
    7740:	003ff006 	br	7704 <__alt_mem_Onchip_SRAM+0xf8007704>

00007744 <fflush>:
    7744:	20000526 	beq	r4,zero,775c <fflush+0x18>
    7748:	008000b4 	movhi	r2,2
    774c:	10a23704 	addi	r2,r2,-30500
    7750:	200b883a 	mov	r5,r4
    7754:	11000017 	ldw	r4,0(r2)
    7758:	00076e81 	jmpi	76e8 <_fflush_r>
    775c:	008000b4 	movhi	r2,2
    7760:	10a23604 	addi	r2,r2,-30504
    7764:	11000017 	ldw	r4,0(r2)
    7768:	01400034 	movhi	r5,0
    776c:	295dba04 	addi	r5,r5,30440
    7770:	00084e41 	jmpi	84e4 <_fwalk_reent>

00007774 <__fp_unlock>:
    7774:	0005883a 	mov	r2,zero
    7778:	f800283a 	ret

0000777c <_cleanup_r>:
    777c:	01400074 	movhi	r5,1
    7780:	2977c304 	addi	r5,r5,-8436
    7784:	00084e41 	jmpi	84e4 <_fwalk_reent>

00007788 <__sinit.part.1>:
    7788:	defff704 	addi	sp,sp,-36
    778c:	00c00034 	movhi	r3,0
    7790:	dfc00815 	stw	ra,32(sp)
    7794:	ddc00715 	stw	r23,28(sp)
    7798:	dd800615 	stw	r22,24(sp)
    779c:	dd400515 	stw	r21,20(sp)
    77a0:	dd000415 	stw	r20,16(sp)
    77a4:	dcc00315 	stw	r19,12(sp)
    77a8:	dc800215 	stw	r18,8(sp)
    77ac:	dc400115 	stw	r17,4(sp)
    77b0:	dc000015 	stw	r16,0(sp)
    77b4:	18dddf04 	addi	r3,r3,30588
    77b8:	24000117 	ldw	r16,4(r4)
    77bc:	20c00f15 	stw	r3,60(r4)
    77c0:	2080bb04 	addi	r2,r4,748
    77c4:	00c000c4 	movi	r3,3
    77c8:	20c0b915 	stw	r3,740(r4)
    77cc:	2080ba15 	stw	r2,744(r4)
    77d0:	2000b815 	stw	zero,736(r4)
    77d4:	05c00204 	movi	r23,8
    77d8:	00800104 	movi	r2,4
    77dc:	2025883a 	mov	r18,r4
    77e0:	b80d883a 	mov	r6,r23
    77e4:	81001704 	addi	r4,r16,92
    77e8:	000b883a 	mov	r5,zero
    77ec:	80000015 	stw	zero,0(r16)
    77f0:	80000115 	stw	zero,4(r16)
    77f4:	80000215 	stw	zero,8(r16)
    77f8:	8080030d 	sth	r2,12(r16)
    77fc:	80001915 	stw	zero,100(r16)
    7800:	8000038d 	sth	zero,14(r16)
    7804:	80000415 	stw	zero,16(r16)
    7808:	80000515 	stw	zero,20(r16)
    780c:	80000615 	stw	zero,24(r16)
    7810:	00094300 	call	9430 <memset>
    7814:	05800074 	movhi	r22,1
    7818:	94400217 	ldw	r17,8(r18)
    781c:	05400074 	movhi	r21,1
    7820:	05000074 	movhi	r20,1
    7824:	04c00074 	movhi	r19,1
    7828:	b5ab6904 	addi	r22,r22,-21084
    782c:	ad6b8004 	addi	r21,r21,-20992
    7830:	a52b9f04 	addi	r20,r20,-20868
    7834:	9cebb604 	addi	r19,r19,-20776
    7838:	85800815 	stw	r22,32(r16)
    783c:	85400915 	stw	r21,36(r16)
    7840:	85000a15 	stw	r20,40(r16)
    7844:	84c00b15 	stw	r19,44(r16)
    7848:	84000715 	stw	r16,28(r16)
    784c:	00800284 	movi	r2,10
    7850:	8880030d 	sth	r2,12(r17)
    7854:	00800044 	movi	r2,1
    7858:	b80d883a 	mov	r6,r23
    785c:	89001704 	addi	r4,r17,92
    7860:	000b883a 	mov	r5,zero
    7864:	88000015 	stw	zero,0(r17)
    7868:	88000115 	stw	zero,4(r17)
    786c:	88000215 	stw	zero,8(r17)
    7870:	88001915 	stw	zero,100(r17)
    7874:	8880038d 	sth	r2,14(r17)
    7878:	88000415 	stw	zero,16(r17)
    787c:	88000515 	stw	zero,20(r17)
    7880:	88000615 	stw	zero,24(r17)
    7884:	00094300 	call	9430 <memset>
    7888:	94000317 	ldw	r16,12(r18)
    788c:	00800484 	movi	r2,18
    7890:	8c400715 	stw	r17,28(r17)
    7894:	8d800815 	stw	r22,32(r17)
    7898:	8d400915 	stw	r21,36(r17)
    789c:	8d000a15 	stw	r20,40(r17)
    78a0:	8cc00b15 	stw	r19,44(r17)
    78a4:	8080030d 	sth	r2,12(r16)
    78a8:	00800084 	movi	r2,2
    78ac:	80000015 	stw	zero,0(r16)
    78b0:	80000115 	stw	zero,4(r16)
    78b4:	80000215 	stw	zero,8(r16)
    78b8:	80001915 	stw	zero,100(r16)
    78bc:	8080038d 	sth	r2,14(r16)
    78c0:	80000415 	stw	zero,16(r16)
    78c4:	80000515 	stw	zero,20(r16)
    78c8:	80000615 	stw	zero,24(r16)
    78cc:	b80d883a 	mov	r6,r23
    78d0:	000b883a 	mov	r5,zero
    78d4:	81001704 	addi	r4,r16,92
    78d8:	00094300 	call	9430 <memset>
    78dc:	00800044 	movi	r2,1
    78e0:	84000715 	stw	r16,28(r16)
    78e4:	85800815 	stw	r22,32(r16)
    78e8:	85400915 	stw	r21,36(r16)
    78ec:	85000a15 	stw	r20,40(r16)
    78f0:	84c00b15 	stw	r19,44(r16)
    78f4:	90800e15 	stw	r2,56(r18)
    78f8:	dfc00817 	ldw	ra,32(sp)
    78fc:	ddc00717 	ldw	r23,28(sp)
    7900:	dd800617 	ldw	r22,24(sp)
    7904:	dd400517 	ldw	r21,20(sp)
    7908:	dd000417 	ldw	r20,16(sp)
    790c:	dcc00317 	ldw	r19,12(sp)
    7910:	dc800217 	ldw	r18,8(sp)
    7914:	dc400117 	ldw	r17,4(sp)
    7918:	dc000017 	ldw	r16,0(sp)
    791c:	dec00904 	addi	sp,sp,36
    7920:	f800283a 	ret

00007924 <__fp_lock>:
    7924:	0005883a 	mov	r2,zero
    7928:	f800283a 	ret

0000792c <__sfmoreglue>:
    792c:	defffc04 	addi	sp,sp,-16
    7930:	dc800215 	stw	r18,8(sp)
    7934:	2825883a 	mov	r18,r5
    7938:	dc000015 	stw	r16,0(sp)
    793c:	01401a04 	movi	r5,104
    7940:	2021883a 	mov	r16,r4
    7944:	913fffc4 	addi	r4,r18,-1
    7948:	dfc00315 	stw	ra,12(sp)
    794c:	dc400115 	stw	r17,4(sp)
    7950:	0000eb00 	call	eb0 <__mulsi3>
    7954:	8009883a 	mov	r4,r16
    7958:	11401d04 	addi	r5,r2,116
    795c:	1023883a 	mov	r17,r2
    7960:	000889c0 	call	889c <_malloc_r>
    7964:	1021883a 	mov	r16,r2
    7968:	10000726 	beq	r2,zero,7988 <__sfmoreglue+0x5c>
    796c:	11000304 	addi	r4,r2,12
    7970:	10000015 	stw	zero,0(r2)
    7974:	14800115 	stw	r18,4(r2)
    7978:	11000215 	stw	r4,8(r2)
    797c:	89801a04 	addi	r6,r17,104
    7980:	000b883a 	mov	r5,zero
    7984:	00094300 	call	9430 <memset>
    7988:	8005883a 	mov	r2,r16
    798c:	dfc00317 	ldw	ra,12(sp)
    7990:	dc800217 	ldw	r18,8(sp)
    7994:	dc400117 	ldw	r17,4(sp)
    7998:	dc000017 	ldw	r16,0(sp)
    799c:	dec00404 	addi	sp,sp,16
    79a0:	f800283a 	ret

000079a4 <__sfp>:
    79a4:	defffb04 	addi	sp,sp,-20
    79a8:	dc000015 	stw	r16,0(sp)
    79ac:	040000b4 	movhi	r16,2
    79b0:	84223604 	addi	r16,r16,-30504
    79b4:	dcc00315 	stw	r19,12(sp)
    79b8:	2027883a 	mov	r19,r4
    79bc:	81000017 	ldw	r4,0(r16)
    79c0:	dfc00415 	stw	ra,16(sp)
    79c4:	dc800215 	stw	r18,8(sp)
    79c8:	20800e17 	ldw	r2,56(r4)
    79cc:	dc400115 	stw	r17,4(sp)
    79d0:	1000021e 	bne	r2,zero,79dc <__sfp+0x38>
    79d4:	00077880 	call	7788 <__sinit.part.1>
    79d8:	81000017 	ldw	r4,0(r16)
    79dc:	2480b804 	addi	r18,r4,736
    79e0:	047fffc4 	movi	r17,-1
    79e4:	91000117 	ldw	r4,4(r18)
    79e8:	94000217 	ldw	r16,8(r18)
    79ec:	213fffc4 	addi	r4,r4,-1
    79f0:	20000a16 	blt	r4,zero,7a1c <__sfp+0x78>
    79f4:	8080030f 	ldh	r2,12(r16)
    79f8:	10000c26 	beq	r2,zero,7a2c <__sfp+0x88>
    79fc:	80c01d04 	addi	r3,r16,116
    7a00:	00000206 	br	7a0c <__sfp+0x68>
    7a04:	18bfe60f 	ldh	r2,-104(r3)
    7a08:	10000826 	beq	r2,zero,7a2c <__sfp+0x88>
    7a0c:	213fffc4 	addi	r4,r4,-1
    7a10:	1c3ffd04 	addi	r16,r3,-12
    7a14:	18c01a04 	addi	r3,r3,104
    7a18:	247ffa1e 	bne	r4,r17,7a04 <__alt_mem_Onchip_SRAM+0xf8007a04>
    7a1c:	90800017 	ldw	r2,0(r18)
    7a20:	10001d26 	beq	r2,zero,7a98 <__sfp+0xf4>
    7a24:	1025883a 	mov	r18,r2
    7a28:	003fee06 	br	79e4 <__alt_mem_Onchip_SRAM+0xf80079e4>
    7a2c:	00bfffc4 	movi	r2,-1
    7a30:	8080038d 	sth	r2,14(r16)
    7a34:	00800044 	movi	r2,1
    7a38:	8080030d 	sth	r2,12(r16)
    7a3c:	80001915 	stw	zero,100(r16)
    7a40:	80000015 	stw	zero,0(r16)
    7a44:	80000215 	stw	zero,8(r16)
    7a48:	80000115 	stw	zero,4(r16)
    7a4c:	80000415 	stw	zero,16(r16)
    7a50:	80000515 	stw	zero,20(r16)
    7a54:	80000615 	stw	zero,24(r16)
    7a58:	01800204 	movi	r6,8
    7a5c:	000b883a 	mov	r5,zero
    7a60:	81001704 	addi	r4,r16,92
    7a64:	00094300 	call	9430 <memset>
    7a68:	8005883a 	mov	r2,r16
    7a6c:	80000c15 	stw	zero,48(r16)
    7a70:	80000d15 	stw	zero,52(r16)
    7a74:	80001115 	stw	zero,68(r16)
    7a78:	80001215 	stw	zero,72(r16)
    7a7c:	dfc00417 	ldw	ra,16(sp)
    7a80:	dcc00317 	ldw	r19,12(sp)
    7a84:	dc800217 	ldw	r18,8(sp)
    7a88:	dc400117 	ldw	r17,4(sp)
    7a8c:	dc000017 	ldw	r16,0(sp)
    7a90:	dec00504 	addi	sp,sp,20
    7a94:	f800283a 	ret
    7a98:	01400104 	movi	r5,4
    7a9c:	9809883a 	mov	r4,r19
    7aa0:	000792c0 	call	792c <__sfmoreglue>
    7aa4:	90800015 	stw	r2,0(r18)
    7aa8:	103fde1e 	bne	r2,zero,7a24 <__alt_mem_Onchip_SRAM+0xf8007a24>
    7aac:	00800304 	movi	r2,12
    7ab0:	98800015 	stw	r2,0(r19)
    7ab4:	0005883a 	mov	r2,zero
    7ab8:	003ff006 	br	7a7c <__alt_mem_Onchip_SRAM+0xf8007a7c>

00007abc <_cleanup>:
    7abc:	008000b4 	movhi	r2,2
    7ac0:	10a23604 	addi	r2,r2,-30504
    7ac4:	11000017 	ldw	r4,0(r2)
    7ac8:	01400074 	movhi	r5,1
    7acc:	2977c304 	addi	r5,r5,-8436
    7ad0:	00084e41 	jmpi	84e4 <_fwalk_reent>

00007ad4 <__sinit>:
    7ad4:	20800e17 	ldw	r2,56(r4)
    7ad8:	10000126 	beq	r2,zero,7ae0 <__sinit+0xc>
    7adc:	f800283a 	ret
    7ae0:	00077881 	jmpi	7788 <__sinit.part.1>

00007ae4 <__sfp_lock_acquire>:
    7ae4:	f800283a 	ret

00007ae8 <__sfp_lock_release>:
    7ae8:	f800283a 	ret

00007aec <__sinit_lock_acquire>:
    7aec:	f800283a 	ret

00007af0 <__sinit_lock_release>:
    7af0:	f800283a 	ret

00007af4 <__fp_lock_all>:
    7af4:	008000b4 	movhi	r2,2
    7af8:	10a23704 	addi	r2,r2,-30500
    7afc:	11000017 	ldw	r4,0(r2)
    7b00:	01400034 	movhi	r5,0
    7b04:	295e4904 	addi	r5,r5,31012
    7b08:	00084201 	jmpi	8420 <_fwalk>

00007b0c <__fp_unlock_all>:
    7b0c:	008000b4 	movhi	r2,2
    7b10:	10a23704 	addi	r2,r2,-30500
    7b14:	11000017 	ldw	r4,0(r2)
    7b18:	01400034 	movhi	r5,0
    7b1c:	295ddd04 	addi	r5,r5,30580
    7b20:	00084201 	jmpi	8420 <_fwalk>

00007b24 <_malloc_trim_r>:
    7b24:	defffb04 	addi	sp,sp,-20
    7b28:	dcc00315 	stw	r19,12(sp)
    7b2c:	04c00074 	movhi	r19,1
    7b30:	dc800215 	stw	r18,8(sp)
    7b34:	dc400115 	stw	r17,4(sp)
    7b38:	dc000015 	stw	r16,0(sp)
    7b3c:	dfc00415 	stw	ra,16(sp)
    7b40:	2821883a 	mov	r16,r5
    7b44:	9cdc7f04 	addi	r19,r19,29180
    7b48:	2025883a 	mov	r18,r4
    7b4c:	001220c0 	call	1220c <__malloc_lock>
    7b50:	98800217 	ldw	r2,8(r19)
    7b54:	14400117 	ldw	r17,4(r2)
    7b58:	00bfff04 	movi	r2,-4
    7b5c:	88a2703a 	and	r17,r17,r2
    7b60:	8c21c83a 	sub	r16,r17,r16
    7b64:	8403fbc4 	addi	r16,r16,4079
    7b68:	8020d33a 	srli	r16,r16,12
    7b6c:	0083ffc4 	movi	r2,4095
    7b70:	843fffc4 	addi	r16,r16,-1
    7b74:	8020933a 	slli	r16,r16,12
    7b78:	1400060e 	bge	r2,r16,7b94 <_malloc_trim_r+0x70>
    7b7c:	000b883a 	mov	r5,zero
    7b80:	9009883a 	mov	r4,r18
    7b84:	000ad500 	call	ad50 <_sbrk_r>
    7b88:	98c00217 	ldw	r3,8(r19)
    7b8c:	1c47883a 	add	r3,r3,r17
    7b90:	10c00a26 	beq	r2,r3,7bbc <_malloc_trim_r+0x98>
    7b94:	9009883a 	mov	r4,r18
    7b98:	00122300 	call	12230 <__malloc_unlock>
    7b9c:	0005883a 	mov	r2,zero
    7ba0:	dfc00417 	ldw	ra,16(sp)
    7ba4:	dcc00317 	ldw	r19,12(sp)
    7ba8:	dc800217 	ldw	r18,8(sp)
    7bac:	dc400117 	ldw	r17,4(sp)
    7bb0:	dc000017 	ldw	r16,0(sp)
    7bb4:	dec00504 	addi	sp,sp,20
    7bb8:	f800283a 	ret
    7bbc:	040bc83a 	sub	r5,zero,r16
    7bc0:	9009883a 	mov	r4,r18
    7bc4:	000ad500 	call	ad50 <_sbrk_r>
    7bc8:	00ffffc4 	movi	r3,-1
    7bcc:	10c00d26 	beq	r2,r3,7c04 <_malloc_trim_r+0xe0>
    7bd0:	00c000b4 	movhi	r3,2
    7bd4:	18e94e04 	addi	r3,r3,-23240
    7bd8:	18800017 	ldw	r2,0(r3)
    7bdc:	99000217 	ldw	r4,8(r19)
    7be0:	8c23c83a 	sub	r17,r17,r16
    7be4:	8c400054 	ori	r17,r17,1
    7be8:	1421c83a 	sub	r16,r2,r16
    7bec:	24400115 	stw	r17,4(r4)
    7bf0:	9009883a 	mov	r4,r18
    7bf4:	1c000015 	stw	r16,0(r3)
    7bf8:	00122300 	call	12230 <__malloc_unlock>
    7bfc:	00800044 	movi	r2,1
    7c00:	003fe706 	br	7ba0 <__alt_mem_Onchip_SRAM+0xf8007ba0>
    7c04:	000b883a 	mov	r5,zero
    7c08:	9009883a 	mov	r4,r18
    7c0c:	000ad500 	call	ad50 <_sbrk_r>
    7c10:	99000217 	ldw	r4,8(r19)
    7c14:	014003c4 	movi	r5,15
    7c18:	1107c83a 	sub	r3,r2,r4
    7c1c:	28ffdd0e 	bge	r5,r3,7b94 <__alt_mem_Onchip_SRAM+0xf8007b94>
    7c20:	014000b4 	movhi	r5,2
    7c24:	29623904 	addi	r5,r5,-30492
    7c28:	29400017 	ldw	r5,0(r5)
    7c2c:	18c00054 	ori	r3,r3,1
    7c30:	20c00115 	stw	r3,4(r4)
    7c34:	00c000b4 	movhi	r3,2
    7c38:	1145c83a 	sub	r2,r2,r5
    7c3c:	18e94e04 	addi	r3,r3,-23240
    7c40:	18800015 	stw	r2,0(r3)
    7c44:	003fd306 	br	7b94 <__alt_mem_Onchip_SRAM+0xf8007b94>

00007c48 <_free_r>:
    7c48:	28004126 	beq	r5,zero,7d50 <_free_r+0x108>
    7c4c:	defffd04 	addi	sp,sp,-12
    7c50:	dc400115 	stw	r17,4(sp)
    7c54:	dc000015 	stw	r16,0(sp)
    7c58:	2023883a 	mov	r17,r4
    7c5c:	2821883a 	mov	r16,r5
    7c60:	dfc00215 	stw	ra,8(sp)
    7c64:	001220c0 	call	1220c <__malloc_lock>
    7c68:	81ffff17 	ldw	r7,-4(r16)
    7c6c:	00bfff84 	movi	r2,-2
    7c70:	01000074 	movhi	r4,1
    7c74:	81bffe04 	addi	r6,r16,-8
    7c78:	3884703a 	and	r2,r7,r2
    7c7c:	211c7f04 	addi	r4,r4,29180
    7c80:	308b883a 	add	r5,r6,r2
    7c84:	2a400117 	ldw	r9,4(r5)
    7c88:	22000217 	ldw	r8,8(r4)
    7c8c:	00ffff04 	movi	r3,-4
    7c90:	48c6703a 	and	r3,r9,r3
    7c94:	2a005726 	beq	r5,r8,7df4 <_free_r+0x1ac>
    7c98:	28c00115 	stw	r3,4(r5)
    7c9c:	39c0004c 	andi	r7,r7,1
    7ca0:	3800091e 	bne	r7,zero,7cc8 <_free_r+0x80>
    7ca4:	823ffe17 	ldw	r8,-8(r16)
    7ca8:	22400204 	addi	r9,r4,8
    7cac:	320dc83a 	sub	r6,r6,r8
    7cb0:	31c00217 	ldw	r7,8(r6)
    7cb4:	1205883a 	add	r2,r2,r8
    7cb8:	3a406526 	beq	r7,r9,7e50 <_free_r+0x208>
    7cbc:	32000317 	ldw	r8,12(r6)
    7cc0:	3a000315 	stw	r8,12(r7)
    7cc4:	41c00215 	stw	r7,8(r8)
    7cc8:	28cf883a 	add	r7,r5,r3
    7ccc:	39c00117 	ldw	r7,4(r7)
    7cd0:	39c0004c 	andi	r7,r7,1
    7cd4:	38003a26 	beq	r7,zero,7dc0 <_free_r+0x178>
    7cd8:	10c00054 	ori	r3,r2,1
    7cdc:	30c00115 	stw	r3,4(r6)
    7ce0:	3087883a 	add	r3,r6,r2
    7ce4:	18800015 	stw	r2,0(r3)
    7ce8:	00c07fc4 	movi	r3,511
    7cec:	18801936 	bltu	r3,r2,7d54 <_free_r+0x10c>
    7cf0:	1004d0fa 	srli	r2,r2,3
    7cf4:	01c00044 	movi	r7,1
    7cf8:	21400117 	ldw	r5,4(r4)
    7cfc:	10c00044 	addi	r3,r2,1
    7d00:	18c7883a 	add	r3,r3,r3
    7d04:	1005d0ba 	srai	r2,r2,2
    7d08:	18c7883a 	add	r3,r3,r3
    7d0c:	18c7883a 	add	r3,r3,r3
    7d10:	1907883a 	add	r3,r3,r4
    7d14:	3884983a 	sll	r2,r7,r2
    7d18:	19c00017 	ldw	r7,0(r3)
    7d1c:	1a3ffe04 	addi	r8,r3,-8
    7d20:	1144b03a 	or	r2,r2,r5
    7d24:	32000315 	stw	r8,12(r6)
    7d28:	31c00215 	stw	r7,8(r6)
    7d2c:	20800115 	stw	r2,4(r4)
    7d30:	19800015 	stw	r6,0(r3)
    7d34:	39800315 	stw	r6,12(r7)
    7d38:	8809883a 	mov	r4,r17
    7d3c:	dfc00217 	ldw	ra,8(sp)
    7d40:	dc400117 	ldw	r17,4(sp)
    7d44:	dc000017 	ldw	r16,0(sp)
    7d48:	dec00304 	addi	sp,sp,12
    7d4c:	00122301 	jmpi	12230 <__malloc_unlock>
    7d50:	f800283a 	ret
    7d54:	100ad27a 	srli	r5,r2,9
    7d58:	00c00104 	movi	r3,4
    7d5c:	19404a36 	bltu	r3,r5,7e88 <_free_r+0x240>
    7d60:	100ad1ba 	srli	r5,r2,6
    7d64:	28c00e44 	addi	r3,r5,57
    7d68:	18c7883a 	add	r3,r3,r3
    7d6c:	29400e04 	addi	r5,r5,56
    7d70:	18c7883a 	add	r3,r3,r3
    7d74:	18c7883a 	add	r3,r3,r3
    7d78:	1909883a 	add	r4,r3,r4
    7d7c:	20c00017 	ldw	r3,0(r4)
    7d80:	01c00074 	movhi	r7,1
    7d84:	213ffe04 	addi	r4,r4,-8
    7d88:	39dc7f04 	addi	r7,r7,29180
    7d8c:	20c04426 	beq	r4,r3,7ea0 <_free_r+0x258>
    7d90:	01ffff04 	movi	r7,-4
    7d94:	19400117 	ldw	r5,4(r3)
    7d98:	29ca703a 	and	r5,r5,r7
    7d9c:	1140022e 	bgeu	r2,r5,7da8 <_free_r+0x160>
    7da0:	18c00217 	ldw	r3,8(r3)
    7da4:	20fffb1e 	bne	r4,r3,7d94 <__alt_mem_Onchip_SRAM+0xf8007d94>
    7da8:	19000317 	ldw	r4,12(r3)
    7dac:	31000315 	stw	r4,12(r6)
    7db0:	30c00215 	stw	r3,8(r6)
    7db4:	21800215 	stw	r6,8(r4)
    7db8:	19800315 	stw	r6,12(r3)
    7dbc:	003fde06 	br	7d38 <__alt_mem_Onchip_SRAM+0xf8007d38>
    7dc0:	29c00217 	ldw	r7,8(r5)
    7dc4:	10c5883a 	add	r2,r2,r3
    7dc8:	00c00074 	movhi	r3,1
    7dcc:	18dc8104 	addi	r3,r3,29188
    7dd0:	38c03b26 	beq	r7,r3,7ec0 <_free_r+0x278>
    7dd4:	2a000317 	ldw	r8,12(r5)
    7dd8:	11400054 	ori	r5,r2,1
    7ddc:	3087883a 	add	r3,r6,r2
    7de0:	3a000315 	stw	r8,12(r7)
    7de4:	41c00215 	stw	r7,8(r8)
    7de8:	31400115 	stw	r5,4(r6)
    7dec:	18800015 	stw	r2,0(r3)
    7df0:	003fbd06 	br	7ce8 <__alt_mem_Onchip_SRAM+0xf8007ce8>
    7df4:	39c0004c 	andi	r7,r7,1
    7df8:	10c5883a 	add	r2,r2,r3
    7dfc:	3800071e 	bne	r7,zero,7e1c <_free_r+0x1d4>
    7e00:	81fffe17 	ldw	r7,-8(r16)
    7e04:	31cdc83a 	sub	r6,r6,r7
    7e08:	30c00317 	ldw	r3,12(r6)
    7e0c:	31400217 	ldw	r5,8(r6)
    7e10:	11c5883a 	add	r2,r2,r7
    7e14:	28c00315 	stw	r3,12(r5)
    7e18:	19400215 	stw	r5,8(r3)
    7e1c:	10c00054 	ori	r3,r2,1
    7e20:	30c00115 	stw	r3,4(r6)
    7e24:	00c000b4 	movhi	r3,2
    7e28:	18e23a04 	addi	r3,r3,-30488
    7e2c:	18c00017 	ldw	r3,0(r3)
    7e30:	21800215 	stw	r6,8(r4)
    7e34:	10ffc036 	bltu	r2,r3,7d38 <__alt_mem_Onchip_SRAM+0xf8007d38>
    7e38:	008000b4 	movhi	r2,2
    7e3c:	10a94204 	addi	r2,r2,-23288
    7e40:	11400017 	ldw	r5,0(r2)
    7e44:	8809883a 	mov	r4,r17
    7e48:	0007b240 	call	7b24 <_malloc_trim_r>
    7e4c:	003fba06 	br	7d38 <__alt_mem_Onchip_SRAM+0xf8007d38>
    7e50:	28c9883a 	add	r4,r5,r3
    7e54:	21000117 	ldw	r4,4(r4)
    7e58:	2100004c 	andi	r4,r4,1
    7e5c:	2000391e 	bne	r4,zero,7f44 <_free_r+0x2fc>
    7e60:	29c00217 	ldw	r7,8(r5)
    7e64:	29000317 	ldw	r4,12(r5)
    7e68:	1885883a 	add	r2,r3,r2
    7e6c:	10c00054 	ori	r3,r2,1
    7e70:	39000315 	stw	r4,12(r7)
    7e74:	21c00215 	stw	r7,8(r4)
    7e78:	30c00115 	stw	r3,4(r6)
    7e7c:	308d883a 	add	r6,r6,r2
    7e80:	30800015 	stw	r2,0(r6)
    7e84:	003fac06 	br	7d38 <__alt_mem_Onchip_SRAM+0xf8007d38>
    7e88:	00c00504 	movi	r3,20
    7e8c:	19401536 	bltu	r3,r5,7ee4 <_free_r+0x29c>
    7e90:	28c01704 	addi	r3,r5,92
    7e94:	18c7883a 	add	r3,r3,r3
    7e98:	294016c4 	addi	r5,r5,91
    7e9c:	003fb406 	br	7d70 <__alt_mem_Onchip_SRAM+0xf8007d70>
    7ea0:	280bd0ba 	srai	r5,r5,2
    7ea4:	00c00044 	movi	r3,1
    7ea8:	38800117 	ldw	r2,4(r7)
    7eac:	194a983a 	sll	r5,r3,r5
    7eb0:	2007883a 	mov	r3,r4
    7eb4:	2884b03a 	or	r2,r5,r2
    7eb8:	38800115 	stw	r2,4(r7)
    7ebc:	003fbb06 	br	7dac <__alt_mem_Onchip_SRAM+0xf8007dac>
    7ec0:	21800515 	stw	r6,20(r4)
    7ec4:	21800415 	stw	r6,16(r4)
    7ec8:	10c00054 	ori	r3,r2,1
    7ecc:	31c00315 	stw	r7,12(r6)
    7ed0:	31c00215 	stw	r7,8(r6)
    7ed4:	30c00115 	stw	r3,4(r6)
    7ed8:	308d883a 	add	r6,r6,r2
    7edc:	30800015 	stw	r2,0(r6)
    7ee0:	003f9506 	br	7d38 <__alt_mem_Onchip_SRAM+0xf8007d38>
    7ee4:	00c01504 	movi	r3,84
    7ee8:	19400536 	bltu	r3,r5,7f00 <_free_r+0x2b8>
    7eec:	100ad33a 	srli	r5,r2,12
    7ef0:	28c01bc4 	addi	r3,r5,111
    7ef4:	18c7883a 	add	r3,r3,r3
    7ef8:	29401b84 	addi	r5,r5,110
    7efc:	003f9c06 	br	7d70 <__alt_mem_Onchip_SRAM+0xf8007d70>
    7f00:	00c05504 	movi	r3,340
    7f04:	19400536 	bltu	r3,r5,7f1c <_free_r+0x2d4>
    7f08:	100ad3fa 	srli	r5,r2,15
    7f0c:	28c01e04 	addi	r3,r5,120
    7f10:	18c7883a 	add	r3,r3,r3
    7f14:	29401dc4 	addi	r5,r5,119
    7f18:	003f9506 	br	7d70 <__alt_mem_Onchip_SRAM+0xf8007d70>
    7f1c:	00c15504 	movi	r3,1364
    7f20:	19400536 	bltu	r3,r5,7f38 <_free_r+0x2f0>
    7f24:	100ad4ba 	srli	r5,r2,18
    7f28:	28c01f44 	addi	r3,r5,125
    7f2c:	18c7883a 	add	r3,r3,r3
    7f30:	29401f04 	addi	r5,r5,124
    7f34:	003f8e06 	br	7d70 <__alt_mem_Onchip_SRAM+0xf8007d70>
    7f38:	00c03f84 	movi	r3,254
    7f3c:	01401f84 	movi	r5,126
    7f40:	003f8b06 	br	7d70 <__alt_mem_Onchip_SRAM+0xf8007d70>
    7f44:	10c00054 	ori	r3,r2,1
    7f48:	30c00115 	stw	r3,4(r6)
    7f4c:	308d883a 	add	r6,r6,r2
    7f50:	30800015 	stw	r2,0(r6)
    7f54:	003f7806 	br	7d38 <__alt_mem_Onchip_SRAM+0xf8007d38>

00007f58 <__sfvwrite_r>:
    7f58:	30800217 	ldw	r2,8(r6)
    7f5c:	10006726 	beq	r2,zero,80fc <__sfvwrite_r+0x1a4>
    7f60:	28c0030b 	ldhu	r3,12(r5)
    7f64:	defff404 	addi	sp,sp,-48
    7f68:	dd400715 	stw	r21,28(sp)
    7f6c:	dd000615 	stw	r20,24(sp)
    7f70:	dc000215 	stw	r16,8(sp)
    7f74:	dfc00b15 	stw	ra,44(sp)
    7f78:	df000a15 	stw	fp,40(sp)
    7f7c:	ddc00915 	stw	r23,36(sp)
    7f80:	dd800815 	stw	r22,32(sp)
    7f84:	dcc00515 	stw	r19,20(sp)
    7f88:	dc800415 	stw	r18,16(sp)
    7f8c:	dc400315 	stw	r17,12(sp)
    7f90:	1880020c 	andi	r2,r3,8
    7f94:	2821883a 	mov	r16,r5
    7f98:	202b883a 	mov	r21,r4
    7f9c:	3029883a 	mov	r20,r6
    7fa0:	10002726 	beq	r2,zero,8040 <__sfvwrite_r+0xe8>
    7fa4:	28800417 	ldw	r2,16(r5)
    7fa8:	10002526 	beq	r2,zero,8040 <__sfvwrite_r+0xe8>
    7fac:	1880008c 	andi	r2,r3,2
    7fb0:	a4400017 	ldw	r17,0(r20)
    7fb4:	10002a26 	beq	r2,zero,8060 <__sfvwrite_r+0x108>
    7fb8:	05a00034 	movhi	r22,32768
    7fbc:	0027883a 	mov	r19,zero
    7fc0:	0025883a 	mov	r18,zero
    7fc4:	b5bf0004 	addi	r22,r22,-1024
    7fc8:	980d883a 	mov	r6,r19
    7fcc:	a809883a 	mov	r4,r21
    7fd0:	90004626 	beq	r18,zero,80ec <__sfvwrite_r+0x194>
    7fd4:	900f883a 	mov	r7,r18
    7fd8:	b480022e 	bgeu	r22,r18,7fe4 <__sfvwrite_r+0x8c>
    7fdc:	01e00034 	movhi	r7,32768
    7fe0:	39ff0004 	addi	r7,r7,-1024
    7fe4:	80800917 	ldw	r2,36(r16)
    7fe8:	81400717 	ldw	r5,28(r16)
    7fec:	103ee83a 	callr	r2
    7ff0:	00805a0e 	bge	zero,r2,815c <__sfvwrite_r+0x204>
    7ff4:	a0c00217 	ldw	r3,8(r20)
    7ff8:	98a7883a 	add	r19,r19,r2
    7ffc:	90a5c83a 	sub	r18,r18,r2
    8000:	1885c83a 	sub	r2,r3,r2
    8004:	a0800215 	stw	r2,8(r20)
    8008:	103fef1e 	bne	r2,zero,7fc8 <__alt_mem_Onchip_SRAM+0xf8007fc8>
    800c:	0005883a 	mov	r2,zero
    8010:	dfc00b17 	ldw	ra,44(sp)
    8014:	df000a17 	ldw	fp,40(sp)
    8018:	ddc00917 	ldw	r23,36(sp)
    801c:	dd800817 	ldw	r22,32(sp)
    8020:	dd400717 	ldw	r21,28(sp)
    8024:	dd000617 	ldw	r20,24(sp)
    8028:	dcc00517 	ldw	r19,20(sp)
    802c:	dc800417 	ldw	r18,16(sp)
    8030:	dc400317 	ldw	r17,12(sp)
    8034:	dc000217 	ldw	r16,8(sp)
    8038:	dec00c04 	addi	sp,sp,48
    803c:	f800283a 	ret
    8040:	800b883a 	mov	r5,r16
    8044:	a809883a 	mov	r4,r21
    8048:	0005ac80 	call	5ac8 <__swsetup_r>
    804c:	1000ee1e 	bne	r2,zero,8408 <__sfvwrite_r+0x4b0>
    8050:	80c0030b 	ldhu	r3,12(r16)
    8054:	a4400017 	ldw	r17,0(r20)
    8058:	1880008c 	andi	r2,r3,2
    805c:	103fd61e 	bne	r2,zero,7fb8 <__alt_mem_Onchip_SRAM+0xf8007fb8>
    8060:	1880004c 	andi	r2,r3,1
    8064:	1000421e 	bne	r2,zero,8170 <__sfvwrite_r+0x218>
    8068:	0039883a 	mov	fp,zero
    806c:	0025883a 	mov	r18,zero
    8070:	90001a26 	beq	r18,zero,80dc <__sfvwrite_r+0x184>
    8074:	1880800c 	andi	r2,r3,512
    8078:	84c00217 	ldw	r19,8(r16)
    807c:	10002126 	beq	r2,zero,8104 <__sfvwrite_r+0x1ac>
    8080:	982f883a 	mov	r23,r19
    8084:	94c09636 	bltu	r18,r19,82e0 <__sfvwrite_r+0x388>
    8088:	1881200c 	andi	r2,r3,1152
    808c:	1000a11e 	bne	r2,zero,8314 <__sfvwrite_r+0x3bc>
    8090:	81000017 	ldw	r4,0(r16)
    8094:	b80d883a 	mov	r6,r23
    8098:	e00b883a 	mov	r5,fp
    809c:	00092d40 	call	92d4 <memmove>
    80a0:	80c00217 	ldw	r3,8(r16)
    80a4:	81000017 	ldw	r4,0(r16)
    80a8:	9005883a 	mov	r2,r18
    80ac:	1ce7c83a 	sub	r19,r3,r19
    80b0:	25cf883a 	add	r7,r4,r23
    80b4:	84c00215 	stw	r19,8(r16)
    80b8:	81c00015 	stw	r7,0(r16)
    80bc:	a0c00217 	ldw	r3,8(r20)
    80c0:	e0b9883a 	add	fp,fp,r2
    80c4:	90a5c83a 	sub	r18,r18,r2
    80c8:	18a7c83a 	sub	r19,r3,r2
    80cc:	a4c00215 	stw	r19,8(r20)
    80d0:	983fce26 	beq	r19,zero,800c <__alt_mem_Onchip_SRAM+0xf800800c>
    80d4:	80c0030b 	ldhu	r3,12(r16)
    80d8:	903fe61e 	bne	r18,zero,8074 <__alt_mem_Onchip_SRAM+0xf8008074>
    80dc:	8f000017 	ldw	fp,0(r17)
    80e0:	8c800117 	ldw	r18,4(r17)
    80e4:	8c400204 	addi	r17,r17,8
    80e8:	003fe106 	br	8070 <__alt_mem_Onchip_SRAM+0xf8008070>
    80ec:	8cc00017 	ldw	r19,0(r17)
    80f0:	8c800117 	ldw	r18,4(r17)
    80f4:	8c400204 	addi	r17,r17,8
    80f8:	003fb306 	br	7fc8 <__alt_mem_Onchip_SRAM+0xf8007fc8>
    80fc:	0005883a 	mov	r2,zero
    8100:	f800283a 	ret
    8104:	81000017 	ldw	r4,0(r16)
    8108:	80800417 	ldw	r2,16(r16)
    810c:	11005a36 	bltu	r2,r4,8278 <__sfvwrite_r+0x320>
    8110:	85c00517 	ldw	r23,20(r16)
    8114:	95c05836 	bltu	r18,r23,8278 <__sfvwrite_r+0x320>
    8118:	00a00034 	movhi	r2,32768
    811c:	10bfffc4 	addi	r2,r2,-1
    8120:	9009883a 	mov	r4,r18
    8124:	1480012e 	bgeu	r2,r18,812c <__sfvwrite_r+0x1d4>
    8128:	1009883a 	mov	r4,r2
    812c:	b80b883a 	mov	r5,r23
    8130:	0000cfc0 	call	cfc <__divsi3>
    8134:	b80b883a 	mov	r5,r23
    8138:	1009883a 	mov	r4,r2
    813c:	0000eb00 	call	eb0 <__mulsi3>
    8140:	81400717 	ldw	r5,28(r16)
    8144:	80c00917 	ldw	r3,36(r16)
    8148:	100f883a 	mov	r7,r2
    814c:	e00d883a 	mov	r6,fp
    8150:	a809883a 	mov	r4,r21
    8154:	183ee83a 	callr	r3
    8158:	00bfd816 	blt	zero,r2,80bc <__alt_mem_Onchip_SRAM+0xf80080bc>
    815c:	8080030b 	ldhu	r2,12(r16)
    8160:	10801014 	ori	r2,r2,64
    8164:	8080030d 	sth	r2,12(r16)
    8168:	00bfffc4 	movi	r2,-1
    816c:	003fa806 	br	8010 <__alt_mem_Onchip_SRAM+0xf8008010>
    8170:	0027883a 	mov	r19,zero
    8174:	0011883a 	mov	r8,zero
    8178:	0039883a 	mov	fp,zero
    817c:	0025883a 	mov	r18,zero
    8180:	90001f26 	beq	r18,zero,8200 <__sfvwrite_r+0x2a8>
    8184:	40005a26 	beq	r8,zero,82f0 <__sfvwrite_r+0x398>
    8188:	982d883a 	mov	r22,r19
    818c:	94c0012e 	bgeu	r18,r19,8194 <__sfvwrite_r+0x23c>
    8190:	902d883a 	mov	r22,r18
    8194:	81000017 	ldw	r4,0(r16)
    8198:	80800417 	ldw	r2,16(r16)
    819c:	b02f883a 	mov	r23,r22
    81a0:	81c00517 	ldw	r7,20(r16)
    81a4:	1100032e 	bgeu	r2,r4,81b4 <__sfvwrite_r+0x25c>
    81a8:	80c00217 	ldw	r3,8(r16)
    81ac:	38c7883a 	add	r3,r7,r3
    81b0:	1d801816 	blt	r3,r22,8214 <__sfvwrite_r+0x2bc>
    81b4:	b1c03e16 	blt	r22,r7,82b0 <__sfvwrite_r+0x358>
    81b8:	80800917 	ldw	r2,36(r16)
    81bc:	81400717 	ldw	r5,28(r16)
    81c0:	e00d883a 	mov	r6,fp
    81c4:	da000115 	stw	r8,4(sp)
    81c8:	a809883a 	mov	r4,r21
    81cc:	103ee83a 	callr	r2
    81d0:	102f883a 	mov	r23,r2
    81d4:	da000117 	ldw	r8,4(sp)
    81d8:	00bfe00e 	bge	zero,r2,815c <__alt_mem_Onchip_SRAM+0xf800815c>
    81dc:	9de7c83a 	sub	r19,r19,r23
    81e0:	98001f26 	beq	r19,zero,8260 <__sfvwrite_r+0x308>
    81e4:	a0800217 	ldw	r2,8(r20)
    81e8:	e5f9883a 	add	fp,fp,r23
    81ec:	95e5c83a 	sub	r18,r18,r23
    81f0:	15efc83a 	sub	r23,r2,r23
    81f4:	a5c00215 	stw	r23,8(r20)
    81f8:	b83f8426 	beq	r23,zero,800c <__alt_mem_Onchip_SRAM+0xf800800c>
    81fc:	903fe11e 	bne	r18,zero,8184 <__alt_mem_Onchip_SRAM+0xf8008184>
    8200:	8f000017 	ldw	fp,0(r17)
    8204:	8c800117 	ldw	r18,4(r17)
    8208:	0011883a 	mov	r8,zero
    820c:	8c400204 	addi	r17,r17,8
    8210:	003fdb06 	br	8180 <__alt_mem_Onchip_SRAM+0xf8008180>
    8214:	180d883a 	mov	r6,r3
    8218:	e00b883a 	mov	r5,fp
    821c:	da000115 	stw	r8,4(sp)
    8220:	d8c00015 	stw	r3,0(sp)
    8224:	00092d40 	call	92d4 <memmove>
    8228:	d8c00017 	ldw	r3,0(sp)
    822c:	80800017 	ldw	r2,0(r16)
    8230:	800b883a 	mov	r5,r16
    8234:	a809883a 	mov	r4,r21
    8238:	10c5883a 	add	r2,r2,r3
    823c:	80800015 	stw	r2,0(r16)
    8240:	d8c00015 	stw	r3,0(sp)
    8244:	00076e80 	call	76e8 <_fflush_r>
    8248:	d8c00017 	ldw	r3,0(sp)
    824c:	da000117 	ldw	r8,4(sp)
    8250:	103fc21e 	bne	r2,zero,815c <__alt_mem_Onchip_SRAM+0xf800815c>
    8254:	182f883a 	mov	r23,r3
    8258:	9de7c83a 	sub	r19,r19,r23
    825c:	983fe11e 	bne	r19,zero,81e4 <__alt_mem_Onchip_SRAM+0xf80081e4>
    8260:	800b883a 	mov	r5,r16
    8264:	a809883a 	mov	r4,r21
    8268:	00076e80 	call	76e8 <_fflush_r>
    826c:	103fbb1e 	bne	r2,zero,815c <__alt_mem_Onchip_SRAM+0xf800815c>
    8270:	0011883a 	mov	r8,zero
    8274:	003fdb06 	br	81e4 <__alt_mem_Onchip_SRAM+0xf80081e4>
    8278:	94c0012e 	bgeu	r18,r19,8280 <__sfvwrite_r+0x328>
    827c:	9027883a 	mov	r19,r18
    8280:	980d883a 	mov	r6,r19
    8284:	e00b883a 	mov	r5,fp
    8288:	00092d40 	call	92d4 <memmove>
    828c:	80800217 	ldw	r2,8(r16)
    8290:	80c00017 	ldw	r3,0(r16)
    8294:	14c5c83a 	sub	r2,r2,r19
    8298:	1cc7883a 	add	r3,r3,r19
    829c:	80800215 	stw	r2,8(r16)
    82a0:	80c00015 	stw	r3,0(r16)
    82a4:	10004326 	beq	r2,zero,83b4 <__sfvwrite_r+0x45c>
    82a8:	9805883a 	mov	r2,r19
    82ac:	003f8306 	br	80bc <__alt_mem_Onchip_SRAM+0xf80080bc>
    82b0:	b00d883a 	mov	r6,r22
    82b4:	e00b883a 	mov	r5,fp
    82b8:	da000115 	stw	r8,4(sp)
    82bc:	00092d40 	call	92d4 <memmove>
    82c0:	80800217 	ldw	r2,8(r16)
    82c4:	80c00017 	ldw	r3,0(r16)
    82c8:	da000117 	ldw	r8,4(sp)
    82cc:	1585c83a 	sub	r2,r2,r22
    82d0:	1dad883a 	add	r22,r3,r22
    82d4:	80800215 	stw	r2,8(r16)
    82d8:	85800015 	stw	r22,0(r16)
    82dc:	003fbf06 	br	81dc <__alt_mem_Onchip_SRAM+0xf80081dc>
    82e0:	81000017 	ldw	r4,0(r16)
    82e4:	9027883a 	mov	r19,r18
    82e8:	902f883a 	mov	r23,r18
    82ec:	003f6906 	br	8094 <__alt_mem_Onchip_SRAM+0xf8008094>
    82f0:	900d883a 	mov	r6,r18
    82f4:	01400284 	movi	r5,10
    82f8:	e009883a 	mov	r4,fp
    82fc:	00090a80 	call	90a8 <memchr>
    8300:	10003e26 	beq	r2,zero,83fc <__sfvwrite_r+0x4a4>
    8304:	10800044 	addi	r2,r2,1
    8308:	1727c83a 	sub	r19,r2,fp
    830c:	02000044 	movi	r8,1
    8310:	003f9d06 	br	8188 <__alt_mem_Onchip_SRAM+0xf8008188>
    8314:	80800517 	ldw	r2,20(r16)
    8318:	81400417 	ldw	r5,16(r16)
    831c:	81c00017 	ldw	r7,0(r16)
    8320:	10a7883a 	add	r19,r2,r2
    8324:	9885883a 	add	r2,r19,r2
    8328:	1026d7fa 	srli	r19,r2,31
    832c:	396dc83a 	sub	r22,r7,r5
    8330:	b1000044 	addi	r4,r22,1
    8334:	9885883a 	add	r2,r19,r2
    8338:	1027d07a 	srai	r19,r2,1
    833c:	2485883a 	add	r2,r4,r18
    8340:	980d883a 	mov	r6,r19
    8344:	9880022e 	bgeu	r19,r2,8350 <__sfvwrite_r+0x3f8>
    8348:	1027883a 	mov	r19,r2
    834c:	100d883a 	mov	r6,r2
    8350:	18c1000c 	andi	r3,r3,1024
    8354:	18001c26 	beq	r3,zero,83c8 <__sfvwrite_r+0x470>
    8358:	300b883a 	mov	r5,r6
    835c:	a809883a 	mov	r4,r21
    8360:	000889c0 	call	889c <_malloc_r>
    8364:	102f883a 	mov	r23,r2
    8368:	10002926 	beq	r2,zero,8410 <__sfvwrite_r+0x4b8>
    836c:	81400417 	ldw	r5,16(r16)
    8370:	b00d883a 	mov	r6,r22
    8374:	1009883a 	mov	r4,r2
    8378:	000918c0 	call	918c <memcpy>
    837c:	8080030b 	ldhu	r2,12(r16)
    8380:	00fedfc4 	movi	r3,-1153
    8384:	10c4703a 	and	r2,r2,r3
    8388:	10802014 	ori	r2,r2,128
    838c:	8080030d 	sth	r2,12(r16)
    8390:	bd89883a 	add	r4,r23,r22
    8394:	9d8fc83a 	sub	r7,r19,r22
    8398:	85c00415 	stw	r23,16(r16)
    839c:	84c00515 	stw	r19,20(r16)
    83a0:	81000015 	stw	r4,0(r16)
    83a4:	9027883a 	mov	r19,r18
    83a8:	81c00215 	stw	r7,8(r16)
    83ac:	902f883a 	mov	r23,r18
    83b0:	003f3806 	br	8094 <__alt_mem_Onchip_SRAM+0xf8008094>
    83b4:	800b883a 	mov	r5,r16
    83b8:	a809883a 	mov	r4,r21
    83bc:	00076e80 	call	76e8 <_fflush_r>
    83c0:	103fb926 	beq	r2,zero,82a8 <__alt_mem_Onchip_SRAM+0xf80082a8>
    83c4:	003f6506 	br	815c <__alt_mem_Onchip_SRAM+0xf800815c>
    83c8:	a809883a 	mov	r4,r21
    83cc:	000a7780 	call	a778 <_realloc_r>
    83d0:	102f883a 	mov	r23,r2
    83d4:	103fee1e 	bne	r2,zero,8390 <__alt_mem_Onchip_SRAM+0xf8008390>
    83d8:	81400417 	ldw	r5,16(r16)
    83dc:	a809883a 	mov	r4,r21
    83e0:	0007c480 	call	7c48 <_free_r>
    83e4:	8080030b 	ldhu	r2,12(r16)
    83e8:	00ffdfc4 	movi	r3,-129
    83ec:	1884703a 	and	r2,r3,r2
    83f0:	00c00304 	movi	r3,12
    83f4:	a8c00015 	stw	r3,0(r21)
    83f8:	003f5906 	br	8160 <__alt_mem_Onchip_SRAM+0xf8008160>
    83fc:	94c00044 	addi	r19,r18,1
    8400:	02000044 	movi	r8,1
    8404:	003f6006 	br	8188 <__alt_mem_Onchip_SRAM+0xf8008188>
    8408:	00bfffc4 	movi	r2,-1
    840c:	003f0006 	br	8010 <__alt_mem_Onchip_SRAM+0xf8008010>
    8410:	00800304 	movi	r2,12
    8414:	a8800015 	stw	r2,0(r21)
    8418:	8080030b 	ldhu	r2,12(r16)
    841c:	003f5006 	br	8160 <__alt_mem_Onchip_SRAM+0xf8008160>

00008420 <_fwalk>:
    8420:	defff704 	addi	sp,sp,-36
    8424:	dd000415 	stw	r20,16(sp)
    8428:	dfc00815 	stw	ra,32(sp)
    842c:	ddc00715 	stw	r23,28(sp)
    8430:	dd800615 	stw	r22,24(sp)
    8434:	dd400515 	stw	r21,20(sp)
    8438:	dcc00315 	stw	r19,12(sp)
    843c:	dc800215 	stw	r18,8(sp)
    8440:	dc400115 	stw	r17,4(sp)
    8444:	dc000015 	stw	r16,0(sp)
    8448:	2500b804 	addi	r20,r4,736
    844c:	a0002326 	beq	r20,zero,84dc <_fwalk+0xbc>
    8450:	282b883a 	mov	r21,r5
    8454:	002f883a 	mov	r23,zero
    8458:	05800044 	movi	r22,1
    845c:	04ffffc4 	movi	r19,-1
    8460:	a4400117 	ldw	r17,4(r20)
    8464:	a4800217 	ldw	r18,8(r20)
    8468:	8c7fffc4 	addi	r17,r17,-1
    846c:	88000d16 	blt	r17,zero,84a4 <_fwalk+0x84>
    8470:	94000304 	addi	r16,r18,12
    8474:	94800384 	addi	r18,r18,14
    8478:	8080000b 	ldhu	r2,0(r16)
    847c:	8c7fffc4 	addi	r17,r17,-1
    8480:	813ffd04 	addi	r4,r16,-12
    8484:	b080042e 	bgeu	r22,r2,8498 <_fwalk+0x78>
    8488:	9080000f 	ldh	r2,0(r18)
    848c:	14c00226 	beq	r2,r19,8498 <_fwalk+0x78>
    8490:	a83ee83a 	callr	r21
    8494:	b8aeb03a 	or	r23,r23,r2
    8498:	84001a04 	addi	r16,r16,104
    849c:	94801a04 	addi	r18,r18,104
    84a0:	8cfff51e 	bne	r17,r19,8478 <__alt_mem_Onchip_SRAM+0xf8008478>
    84a4:	a5000017 	ldw	r20,0(r20)
    84a8:	a03fed1e 	bne	r20,zero,8460 <__alt_mem_Onchip_SRAM+0xf8008460>
    84ac:	b805883a 	mov	r2,r23
    84b0:	dfc00817 	ldw	ra,32(sp)
    84b4:	ddc00717 	ldw	r23,28(sp)
    84b8:	dd800617 	ldw	r22,24(sp)
    84bc:	dd400517 	ldw	r21,20(sp)
    84c0:	dd000417 	ldw	r20,16(sp)
    84c4:	dcc00317 	ldw	r19,12(sp)
    84c8:	dc800217 	ldw	r18,8(sp)
    84cc:	dc400117 	ldw	r17,4(sp)
    84d0:	dc000017 	ldw	r16,0(sp)
    84d4:	dec00904 	addi	sp,sp,36
    84d8:	f800283a 	ret
    84dc:	002f883a 	mov	r23,zero
    84e0:	003ff206 	br	84ac <__alt_mem_Onchip_SRAM+0xf80084ac>

000084e4 <_fwalk_reent>:
    84e4:	defff704 	addi	sp,sp,-36
    84e8:	dd000415 	stw	r20,16(sp)
    84ec:	dfc00815 	stw	ra,32(sp)
    84f0:	ddc00715 	stw	r23,28(sp)
    84f4:	dd800615 	stw	r22,24(sp)
    84f8:	dd400515 	stw	r21,20(sp)
    84fc:	dcc00315 	stw	r19,12(sp)
    8500:	dc800215 	stw	r18,8(sp)
    8504:	dc400115 	stw	r17,4(sp)
    8508:	dc000015 	stw	r16,0(sp)
    850c:	2500b804 	addi	r20,r4,736
    8510:	a0002326 	beq	r20,zero,85a0 <_fwalk_reent+0xbc>
    8514:	282b883a 	mov	r21,r5
    8518:	2027883a 	mov	r19,r4
    851c:	002f883a 	mov	r23,zero
    8520:	05800044 	movi	r22,1
    8524:	04bfffc4 	movi	r18,-1
    8528:	a4400117 	ldw	r17,4(r20)
    852c:	a4000217 	ldw	r16,8(r20)
    8530:	8c7fffc4 	addi	r17,r17,-1
    8534:	88000c16 	blt	r17,zero,8568 <_fwalk_reent+0x84>
    8538:	84000304 	addi	r16,r16,12
    853c:	8080000b 	ldhu	r2,0(r16)
    8540:	8c7fffc4 	addi	r17,r17,-1
    8544:	817ffd04 	addi	r5,r16,-12
    8548:	b080052e 	bgeu	r22,r2,8560 <_fwalk_reent+0x7c>
    854c:	8080008f 	ldh	r2,2(r16)
    8550:	9809883a 	mov	r4,r19
    8554:	14800226 	beq	r2,r18,8560 <_fwalk_reent+0x7c>
    8558:	a83ee83a 	callr	r21
    855c:	b8aeb03a 	or	r23,r23,r2
    8560:	84001a04 	addi	r16,r16,104
    8564:	8cbff51e 	bne	r17,r18,853c <__alt_mem_Onchip_SRAM+0xf800853c>
    8568:	a5000017 	ldw	r20,0(r20)
    856c:	a03fee1e 	bne	r20,zero,8528 <__alt_mem_Onchip_SRAM+0xf8008528>
    8570:	b805883a 	mov	r2,r23
    8574:	dfc00817 	ldw	ra,32(sp)
    8578:	ddc00717 	ldw	r23,28(sp)
    857c:	dd800617 	ldw	r22,24(sp)
    8580:	dd400517 	ldw	r21,20(sp)
    8584:	dd000417 	ldw	r20,16(sp)
    8588:	dcc00317 	ldw	r19,12(sp)
    858c:	dc800217 	ldw	r18,8(sp)
    8590:	dc400117 	ldw	r17,4(sp)
    8594:	dc000017 	ldw	r16,0(sp)
    8598:	dec00904 	addi	sp,sp,36
    859c:	f800283a 	ret
    85a0:	002f883a 	mov	r23,zero
    85a4:	003ff206 	br	8570 <__alt_mem_Onchip_SRAM+0xf8008570>

000085a8 <_gettimeofday_r>:
    85a8:	defffd04 	addi	sp,sp,-12
    85ac:	2805883a 	mov	r2,r5
    85b0:	dc000015 	stw	r16,0(sp)
    85b4:	040000b4 	movhi	r16,2
    85b8:	dc400115 	stw	r17,4(sp)
    85bc:	84293c04 	addi	r16,r16,-23312
    85c0:	2023883a 	mov	r17,r4
    85c4:	300b883a 	mov	r5,r6
    85c8:	1009883a 	mov	r4,r2
    85cc:	dfc00215 	stw	ra,8(sp)
    85d0:	80000015 	stw	zero,0(r16)
    85d4:	0011cb00 	call	11cb0 <gettimeofday>
    85d8:	00ffffc4 	movi	r3,-1
    85dc:	10c00526 	beq	r2,r3,85f4 <_gettimeofday_r+0x4c>
    85e0:	dfc00217 	ldw	ra,8(sp)
    85e4:	dc400117 	ldw	r17,4(sp)
    85e8:	dc000017 	ldw	r16,0(sp)
    85ec:	dec00304 	addi	sp,sp,12
    85f0:	f800283a 	ret
    85f4:	80c00017 	ldw	r3,0(r16)
    85f8:	183ff926 	beq	r3,zero,85e0 <__alt_mem_Onchip_SRAM+0xf80085e0>
    85fc:	88c00015 	stw	r3,0(r17)
    8600:	003ff706 	br	85e0 <__alt_mem_Onchip_SRAM+0xf80085e0>

00008604 <_setlocale_r>:
    8604:	30001b26 	beq	r6,zero,8674 <_setlocale_r+0x70>
    8608:	01400074 	movhi	r5,1
    860c:	defffe04 	addi	sp,sp,-8
    8610:	295ad704 	addi	r5,r5,27484
    8614:	3009883a 	mov	r4,r6
    8618:	dc000015 	stw	r16,0(sp)
    861c:	dfc00115 	stw	ra,4(sp)
    8620:	3021883a 	mov	r16,r6
    8624:	000aee00 	call	aee0 <strcmp>
    8628:	1000061e 	bne	r2,zero,8644 <_setlocale_r+0x40>
    862c:	00800074 	movhi	r2,1
    8630:	109ad604 	addi	r2,r2,27480
    8634:	dfc00117 	ldw	ra,4(sp)
    8638:	dc000017 	ldw	r16,0(sp)
    863c:	dec00204 	addi	sp,sp,8
    8640:	f800283a 	ret
    8644:	01400074 	movhi	r5,1
    8648:	295ad604 	addi	r5,r5,27480
    864c:	8009883a 	mov	r4,r16
    8650:	000aee00 	call	aee0 <strcmp>
    8654:	103ff526 	beq	r2,zero,862c <__alt_mem_Onchip_SRAM+0xf800862c>
    8658:	01400074 	movhi	r5,1
    865c:	295ab904 	addi	r5,r5,27364
    8660:	8009883a 	mov	r4,r16
    8664:	000aee00 	call	aee0 <strcmp>
    8668:	103ff026 	beq	r2,zero,862c <__alt_mem_Onchip_SRAM+0xf800862c>
    866c:	0005883a 	mov	r2,zero
    8670:	003ff006 	br	8634 <__alt_mem_Onchip_SRAM+0xf8008634>
    8674:	00800074 	movhi	r2,1
    8678:	109ad604 	addi	r2,r2,27480
    867c:	f800283a 	ret

00008680 <__locale_charset>:
    8680:	00800074 	movhi	r2,1
    8684:	109c6904 	addi	r2,r2,29092
    8688:	f800283a 	ret

0000868c <__locale_mb_cur_max>:
    868c:	008000b4 	movhi	r2,2
    8690:	10a23804 	addi	r2,r2,-30496
    8694:	10800017 	ldw	r2,0(r2)
    8698:	f800283a 	ret

0000869c <__locale_msgcharset>:
    869c:	00800074 	movhi	r2,1
    86a0:	109c6104 	addi	r2,r2,29060
    86a4:	f800283a 	ret

000086a8 <__locale_cjk_lang>:
    86a8:	0005883a 	mov	r2,zero
    86ac:	f800283a 	ret

000086b0 <_localeconv_r>:
    86b0:	00800074 	movhi	r2,1
    86b4:	109c7104 	addi	r2,r2,29124
    86b8:	f800283a 	ret

000086bc <setlocale>:
    86bc:	008000b4 	movhi	r2,2
    86c0:	10a23704 	addi	r2,r2,-30500
    86c4:	280d883a 	mov	r6,r5
    86c8:	200b883a 	mov	r5,r4
    86cc:	11000017 	ldw	r4,0(r2)
    86d0:	00086041 	jmpi	8604 <_setlocale_r>

000086d4 <localeconv>:
    86d4:	00800074 	movhi	r2,1
    86d8:	109c7104 	addi	r2,r2,29124
    86dc:	f800283a 	ret

000086e0 <__smakebuf_r>:
    86e0:	2880030b 	ldhu	r2,12(r5)
    86e4:	10c0008c 	andi	r3,r2,2
    86e8:	1800411e 	bne	r3,zero,87f0 <__smakebuf_r+0x110>
    86ec:	deffec04 	addi	sp,sp,-80
    86f0:	dc000f15 	stw	r16,60(sp)
    86f4:	2821883a 	mov	r16,r5
    86f8:	2940038f 	ldh	r5,14(r5)
    86fc:	dc401015 	stw	r17,64(sp)
    8700:	dfc01315 	stw	ra,76(sp)
    8704:	dcc01215 	stw	r19,72(sp)
    8708:	dc801115 	stw	r18,68(sp)
    870c:	2023883a 	mov	r17,r4
    8710:	28001c16 	blt	r5,zero,8784 <__smakebuf_r+0xa4>
    8714:	d80d883a 	mov	r6,sp
    8718:	000e2180 	call	e218 <_fstat_r>
    871c:	10001816 	blt	r2,zero,8780 <__smakebuf_r+0xa0>
    8720:	d8800117 	ldw	r2,4(sp)
    8724:	00e00014 	movui	r3,32768
    8728:	10bc000c 	andi	r2,r2,61440
    872c:	14c80020 	cmpeqi	r19,r2,8192
    8730:	10c03726 	beq	r2,r3,8810 <__smakebuf_r+0x130>
    8734:	80c0030b 	ldhu	r3,12(r16)
    8738:	18c20014 	ori	r3,r3,2048
    873c:	80c0030d 	sth	r3,12(r16)
    8740:	00c80004 	movi	r3,8192
    8744:	10c0521e 	bne	r2,r3,8890 <__smakebuf_r+0x1b0>
    8748:	8140038f 	ldh	r5,14(r16)
    874c:	8809883a 	mov	r4,r17
    8750:	000e2740 	call	e274 <_isatty_r>
    8754:	10004c26 	beq	r2,zero,8888 <__smakebuf_r+0x1a8>
    8758:	8080030b 	ldhu	r2,12(r16)
    875c:	80c010c4 	addi	r3,r16,67
    8760:	80c00015 	stw	r3,0(r16)
    8764:	10800054 	ori	r2,r2,1
    8768:	8080030d 	sth	r2,12(r16)
    876c:	00800044 	movi	r2,1
    8770:	80c00415 	stw	r3,16(r16)
    8774:	80800515 	stw	r2,20(r16)
    8778:	04810004 	movi	r18,1024
    877c:	00000706 	br	879c <__smakebuf_r+0xbc>
    8780:	8080030b 	ldhu	r2,12(r16)
    8784:	10c0200c 	andi	r3,r2,128
    8788:	18001f1e 	bne	r3,zero,8808 <__smakebuf_r+0x128>
    878c:	04810004 	movi	r18,1024
    8790:	10820014 	ori	r2,r2,2048
    8794:	8080030d 	sth	r2,12(r16)
    8798:	0027883a 	mov	r19,zero
    879c:	900b883a 	mov	r5,r18
    87a0:	8809883a 	mov	r4,r17
    87a4:	000889c0 	call	889c <_malloc_r>
    87a8:	10002c26 	beq	r2,zero,885c <__smakebuf_r+0x17c>
    87ac:	80c0030b 	ldhu	r3,12(r16)
    87b0:	01000034 	movhi	r4,0
    87b4:	211ddf04 	addi	r4,r4,30588
    87b8:	89000f15 	stw	r4,60(r17)
    87bc:	18c02014 	ori	r3,r3,128
    87c0:	80c0030d 	sth	r3,12(r16)
    87c4:	80800015 	stw	r2,0(r16)
    87c8:	80800415 	stw	r2,16(r16)
    87cc:	84800515 	stw	r18,20(r16)
    87d0:	98001a1e 	bne	r19,zero,883c <__smakebuf_r+0x15c>
    87d4:	dfc01317 	ldw	ra,76(sp)
    87d8:	dcc01217 	ldw	r19,72(sp)
    87dc:	dc801117 	ldw	r18,68(sp)
    87e0:	dc401017 	ldw	r17,64(sp)
    87e4:	dc000f17 	ldw	r16,60(sp)
    87e8:	dec01404 	addi	sp,sp,80
    87ec:	f800283a 	ret
    87f0:	288010c4 	addi	r2,r5,67
    87f4:	28800015 	stw	r2,0(r5)
    87f8:	28800415 	stw	r2,16(r5)
    87fc:	00800044 	movi	r2,1
    8800:	28800515 	stw	r2,20(r5)
    8804:	f800283a 	ret
    8808:	04801004 	movi	r18,64
    880c:	003fe006 	br	8790 <__alt_mem_Onchip_SRAM+0xf8008790>
    8810:	81000a17 	ldw	r4,40(r16)
    8814:	00c00074 	movhi	r3,1
    8818:	18eb9f04 	addi	r3,r3,-20868
    881c:	20ffc51e 	bne	r4,r3,8734 <__alt_mem_Onchip_SRAM+0xf8008734>
    8820:	8080030b 	ldhu	r2,12(r16)
    8824:	04810004 	movi	r18,1024
    8828:	84801315 	stw	r18,76(r16)
    882c:	1484b03a 	or	r2,r2,r18
    8830:	8080030d 	sth	r2,12(r16)
    8834:	0027883a 	mov	r19,zero
    8838:	003fd806 	br	879c <__alt_mem_Onchip_SRAM+0xf800879c>
    883c:	8140038f 	ldh	r5,14(r16)
    8840:	8809883a 	mov	r4,r17
    8844:	000e2740 	call	e274 <_isatty_r>
    8848:	103fe226 	beq	r2,zero,87d4 <__alt_mem_Onchip_SRAM+0xf80087d4>
    884c:	8080030b 	ldhu	r2,12(r16)
    8850:	10800054 	ori	r2,r2,1
    8854:	8080030d 	sth	r2,12(r16)
    8858:	003fde06 	br	87d4 <__alt_mem_Onchip_SRAM+0xf80087d4>
    885c:	8080030b 	ldhu	r2,12(r16)
    8860:	10c0800c 	andi	r3,r2,512
    8864:	183fdb1e 	bne	r3,zero,87d4 <__alt_mem_Onchip_SRAM+0xf80087d4>
    8868:	10800094 	ori	r2,r2,2
    886c:	80c010c4 	addi	r3,r16,67
    8870:	8080030d 	sth	r2,12(r16)
    8874:	00800044 	movi	r2,1
    8878:	80c00015 	stw	r3,0(r16)
    887c:	80c00415 	stw	r3,16(r16)
    8880:	80800515 	stw	r2,20(r16)
    8884:	003fd306 	br	87d4 <__alt_mem_Onchip_SRAM+0xf80087d4>
    8888:	04810004 	movi	r18,1024
    888c:	003fc306 	br	879c <__alt_mem_Onchip_SRAM+0xf800879c>
    8890:	0027883a 	mov	r19,zero
    8894:	04810004 	movi	r18,1024
    8898:	003fc006 	br	879c <__alt_mem_Onchip_SRAM+0xf800879c>

0000889c <_malloc_r>:
    889c:	defff504 	addi	sp,sp,-44
    88a0:	dc800315 	stw	r18,12(sp)
    88a4:	dfc00a15 	stw	ra,40(sp)
    88a8:	df000915 	stw	fp,36(sp)
    88ac:	ddc00815 	stw	r23,32(sp)
    88b0:	dd800715 	stw	r22,28(sp)
    88b4:	dd400615 	stw	r21,24(sp)
    88b8:	dd000515 	stw	r20,20(sp)
    88bc:	dcc00415 	stw	r19,16(sp)
    88c0:	dc400215 	stw	r17,8(sp)
    88c4:	dc000115 	stw	r16,4(sp)
    88c8:	288002c4 	addi	r2,r5,11
    88cc:	00c00584 	movi	r3,22
    88d0:	2025883a 	mov	r18,r4
    88d4:	18807f2e 	bgeu	r3,r2,8ad4 <_malloc_r+0x238>
    88d8:	047ffe04 	movi	r17,-8
    88dc:	1462703a 	and	r17,r2,r17
    88e0:	8800a316 	blt	r17,zero,8b70 <_malloc_r+0x2d4>
    88e4:	8940a236 	bltu	r17,r5,8b70 <_malloc_r+0x2d4>
    88e8:	001220c0 	call	1220c <__malloc_lock>
    88ec:	00807dc4 	movi	r2,503
    88f0:	1441e92e 	bgeu	r2,r17,9098 <_malloc_r+0x7fc>
    88f4:	8804d27a 	srli	r2,r17,9
    88f8:	1000a126 	beq	r2,zero,8b80 <_malloc_r+0x2e4>
    88fc:	00c00104 	movi	r3,4
    8900:	18811e36 	bltu	r3,r2,8d7c <_malloc_r+0x4e0>
    8904:	8804d1ba 	srli	r2,r17,6
    8908:	12000e44 	addi	r8,r2,57
    890c:	11c00e04 	addi	r7,r2,56
    8910:	4209883a 	add	r4,r8,r8
    8914:	04c00074 	movhi	r19,1
    8918:	2109883a 	add	r4,r4,r4
    891c:	9cdc7f04 	addi	r19,r19,29180
    8920:	2109883a 	add	r4,r4,r4
    8924:	9909883a 	add	r4,r19,r4
    8928:	24000117 	ldw	r16,4(r4)
    892c:	213ffe04 	addi	r4,r4,-8
    8930:	24009726 	beq	r4,r16,8b90 <_malloc_r+0x2f4>
    8934:	80800117 	ldw	r2,4(r16)
    8938:	01bfff04 	movi	r6,-4
    893c:	014003c4 	movi	r5,15
    8940:	1184703a 	and	r2,r2,r6
    8944:	1447c83a 	sub	r3,r2,r17
    8948:	28c00716 	blt	r5,r3,8968 <_malloc_r+0xcc>
    894c:	1800920e 	bge	r3,zero,8b98 <_malloc_r+0x2fc>
    8950:	84000317 	ldw	r16,12(r16)
    8954:	24008e26 	beq	r4,r16,8b90 <_malloc_r+0x2f4>
    8958:	80800117 	ldw	r2,4(r16)
    895c:	1184703a 	and	r2,r2,r6
    8960:	1447c83a 	sub	r3,r2,r17
    8964:	28fff90e 	bge	r5,r3,894c <__alt_mem_Onchip_SRAM+0xf800894c>
    8968:	3809883a 	mov	r4,r7
    896c:	01800074 	movhi	r6,1
    8970:	9c000417 	ldw	r16,16(r19)
    8974:	319c7f04 	addi	r6,r6,29180
    8978:	32000204 	addi	r8,r6,8
    897c:	82013426 	beq	r16,r8,8e50 <_malloc_r+0x5b4>
    8980:	80c00117 	ldw	r3,4(r16)
    8984:	00bfff04 	movi	r2,-4
    8988:	188e703a 	and	r7,r3,r2
    898c:	3c45c83a 	sub	r2,r7,r17
    8990:	00c003c4 	movi	r3,15
    8994:	18811f16 	blt	r3,r2,8e14 <_malloc_r+0x578>
    8998:	32000515 	stw	r8,20(r6)
    899c:	32000415 	stw	r8,16(r6)
    89a0:	10007f0e 	bge	r2,zero,8ba0 <_malloc_r+0x304>
    89a4:	00807fc4 	movi	r2,511
    89a8:	11c0fd36 	bltu	r2,r7,8da0 <_malloc_r+0x504>
    89ac:	3806d0fa 	srli	r3,r7,3
    89b0:	01c00044 	movi	r7,1
    89b4:	30800117 	ldw	r2,4(r6)
    89b8:	19400044 	addi	r5,r3,1
    89bc:	294b883a 	add	r5,r5,r5
    89c0:	1807d0ba 	srai	r3,r3,2
    89c4:	294b883a 	add	r5,r5,r5
    89c8:	294b883a 	add	r5,r5,r5
    89cc:	298b883a 	add	r5,r5,r6
    89d0:	38c6983a 	sll	r3,r7,r3
    89d4:	29c00017 	ldw	r7,0(r5)
    89d8:	2a7ffe04 	addi	r9,r5,-8
    89dc:	1886b03a 	or	r3,r3,r2
    89e0:	82400315 	stw	r9,12(r16)
    89e4:	81c00215 	stw	r7,8(r16)
    89e8:	30c00115 	stw	r3,4(r6)
    89ec:	2c000015 	stw	r16,0(r5)
    89f0:	3c000315 	stw	r16,12(r7)
    89f4:	2005d0ba 	srai	r2,r4,2
    89f8:	01400044 	movi	r5,1
    89fc:	288a983a 	sll	r5,r5,r2
    8a00:	19406f36 	bltu	r3,r5,8bc0 <_malloc_r+0x324>
    8a04:	28c4703a 	and	r2,r5,r3
    8a08:	10000a1e 	bne	r2,zero,8a34 <_malloc_r+0x198>
    8a0c:	00bfff04 	movi	r2,-4
    8a10:	294b883a 	add	r5,r5,r5
    8a14:	2088703a 	and	r4,r4,r2
    8a18:	28c4703a 	and	r2,r5,r3
    8a1c:	21000104 	addi	r4,r4,4
    8a20:	1000041e 	bne	r2,zero,8a34 <_malloc_r+0x198>
    8a24:	294b883a 	add	r5,r5,r5
    8a28:	28c4703a 	and	r2,r5,r3
    8a2c:	21000104 	addi	r4,r4,4
    8a30:	103ffc26 	beq	r2,zero,8a24 <__alt_mem_Onchip_SRAM+0xf8008a24>
    8a34:	02bfff04 	movi	r10,-4
    8a38:	024003c4 	movi	r9,15
    8a3c:	21800044 	addi	r6,r4,1
    8a40:	318d883a 	add	r6,r6,r6
    8a44:	318d883a 	add	r6,r6,r6
    8a48:	318d883a 	add	r6,r6,r6
    8a4c:	998d883a 	add	r6,r19,r6
    8a50:	333ffe04 	addi	r12,r6,-8
    8a54:	2017883a 	mov	r11,r4
    8a58:	31800104 	addi	r6,r6,4
    8a5c:	34000017 	ldw	r16,0(r6)
    8a60:	31fffd04 	addi	r7,r6,-12
    8a64:	81c0041e 	bne	r16,r7,8a78 <_malloc_r+0x1dc>
    8a68:	0000fb06 	br	8e58 <_malloc_r+0x5bc>
    8a6c:	1801030e 	bge	r3,zero,8e7c <_malloc_r+0x5e0>
    8a70:	84000317 	ldw	r16,12(r16)
    8a74:	81c0f826 	beq	r16,r7,8e58 <_malloc_r+0x5bc>
    8a78:	80800117 	ldw	r2,4(r16)
    8a7c:	1284703a 	and	r2,r2,r10
    8a80:	1447c83a 	sub	r3,r2,r17
    8a84:	48fff90e 	bge	r9,r3,8a6c <__alt_mem_Onchip_SRAM+0xf8008a6c>
    8a88:	80800317 	ldw	r2,12(r16)
    8a8c:	81000217 	ldw	r4,8(r16)
    8a90:	89400054 	ori	r5,r17,1
    8a94:	81400115 	stw	r5,4(r16)
    8a98:	20800315 	stw	r2,12(r4)
    8a9c:	11000215 	stw	r4,8(r2)
    8aa0:	8463883a 	add	r17,r16,r17
    8aa4:	9c400515 	stw	r17,20(r19)
    8aa8:	9c400415 	stw	r17,16(r19)
    8aac:	18800054 	ori	r2,r3,1
    8ab0:	88800115 	stw	r2,4(r17)
    8ab4:	8a000315 	stw	r8,12(r17)
    8ab8:	8a000215 	stw	r8,8(r17)
    8abc:	88e3883a 	add	r17,r17,r3
    8ac0:	88c00015 	stw	r3,0(r17)
    8ac4:	9009883a 	mov	r4,r18
    8ac8:	00122300 	call	12230 <__malloc_unlock>
    8acc:	80800204 	addi	r2,r16,8
    8ad0:	00001b06 	br	8b40 <_malloc_r+0x2a4>
    8ad4:	04400404 	movi	r17,16
    8ad8:	89402536 	bltu	r17,r5,8b70 <_malloc_r+0x2d4>
    8adc:	001220c0 	call	1220c <__malloc_lock>
    8ae0:	00800184 	movi	r2,6
    8ae4:	01000084 	movi	r4,2
    8ae8:	04c00074 	movhi	r19,1
    8aec:	1085883a 	add	r2,r2,r2
    8af0:	9cdc7f04 	addi	r19,r19,29180
    8af4:	1085883a 	add	r2,r2,r2
    8af8:	9885883a 	add	r2,r19,r2
    8afc:	14000117 	ldw	r16,4(r2)
    8b00:	10fffe04 	addi	r3,r2,-8
    8b04:	80c0d926 	beq	r16,r3,8e6c <_malloc_r+0x5d0>
    8b08:	80c00117 	ldw	r3,4(r16)
    8b0c:	81000317 	ldw	r4,12(r16)
    8b10:	00bfff04 	movi	r2,-4
    8b14:	1884703a 	and	r2,r3,r2
    8b18:	81400217 	ldw	r5,8(r16)
    8b1c:	8085883a 	add	r2,r16,r2
    8b20:	10c00117 	ldw	r3,4(r2)
    8b24:	29000315 	stw	r4,12(r5)
    8b28:	21400215 	stw	r5,8(r4)
    8b2c:	18c00054 	ori	r3,r3,1
    8b30:	10c00115 	stw	r3,4(r2)
    8b34:	9009883a 	mov	r4,r18
    8b38:	00122300 	call	12230 <__malloc_unlock>
    8b3c:	80800204 	addi	r2,r16,8
    8b40:	dfc00a17 	ldw	ra,40(sp)
    8b44:	df000917 	ldw	fp,36(sp)
    8b48:	ddc00817 	ldw	r23,32(sp)
    8b4c:	dd800717 	ldw	r22,28(sp)
    8b50:	dd400617 	ldw	r21,24(sp)
    8b54:	dd000517 	ldw	r20,20(sp)
    8b58:	dcc00417 	ldw	r19,16(sp)
    8b5c:	dc800317 	ldw	r18,12(sp)
    8b60:	dc400217 	ldw	r17,8(sp)
    8b64:	dc000117 	ldw	r16,4(sp)
    8b68:	dec00b04 	addi	sp,sp,44
    8b6c:	f800283a 	ret
    8b70:	00800304 	movi	r2,12
    8b74:	90800015 	stw	r2,0(r18)
    8b78:	0005883a 	mov	r2,zero
    8b7c:	003ff006 	br	8b40 <__alt_mem_Onchip_SRAM+0xf8008b40>
    8b80:	01002004 	movi	r4,128
    8b84:	02001004 	movi	r8,64
    8b88:	01c00fc4 	movi	r7,63
    8b8c:	003f6106 	br	8914 <__alt_mem_Onchip_SRAM+0xf8008914>
    8b90:	4009883a 	mov	r4,r8
    8b94:	003f7506 	br	896c <__alt_mem_Onchip_SRAM+0xf800896c>
    8b98:	81000317 	ldw	r4,12(r16)
    8b9c:	003fde06 	br	8b18 <__alt_mem_Onchip_SRAM+0xf8008b18>
    8ba0:	81c5883a 	add	r2,r16,r7
    8ba4:	11400117 	ldw	r5,4(r2)
    8ba8:	9009883a 	mov	r4,r18
    8bac:	29400054 	ori	r5,r5,1
    8bb0:	11400115 	stw	r5,4(r2)
    8bb4:	00122300 	call	12230 <__malloc_unlock>
    8bb8:	80800204 	addi	r2,r16,8
    8bbc:	003fe006 	br	8b40 <__alt_mem_Onchip_SRAM+0xf8008b40>
    8bc0:	9c000217 	ldw	r16,8(r19)
    8bc4:	00bfff04 	movi	r2,-4
    8bc8:	85800117 	ldw	r22,4(r16)
    8bcc:	b0ac703a 	and	r22,r22,r2
    8bd0:	b4400336 	bltu	r22,r17,8be0 <_malloc_r+0x344>
    8bd4:	b445c83a 	sub	r2,r22,r17
    8bd8:	00c003c4 	movi	r3,15
    8bdc:	18805d16 	blt	r3,r2,8d54 <_malloc_r+0x4b8>
    8be0:	05c000b4 	movhi	r23,2
    8be4:	008000b4 	movhi	r2,2
    8be8:	10a94204 	addi	r2,r2,-23288
    8bec:	bde23904 	addi	r23,r23,-30492
    8bf0:	15400017 	ldw	r21,0(r2)
    8bf4:	b8c00017 	ldw	r3,0(r23)
    8bf8:	00bfffc4 	movi	r2,-1
    8bfc:	858d883a 	add	r6,r16,r22
    8c00:	8d6b883a 	add	r21,r17,r21
    8c04:	1880ea26 	beq	r3,r2,8fb0 <_malloc_r+0x714>
    8c08:	ad4403c4 	addi	r21,r21,4111
    8c0c:	00bc0004 	movi	r2,-4096
    8c10:	a8aa703a 	and	r21,r21,r2
    8c14:	a80b883a 	mov	r5,r21
    8c18:	9009883a 	mov	r4,r18
    8c1c:	d9800015 	stw	r6,0(sp)
    8c20:	000ad500 	call	ad50 <_sbrk_r>
    8c24:	1029883a 	mov	r20,r2
    8c28:	00bfffc4 	movi	r2,-1
    8c2c:	d9800017 	ldw	r6,0(sp)
    8c30:	a080e826 	beq	r20,r2,8fd4 <_malloc_r+0x738>
    8c34:	a180a636 	bltu	r20,r6,8ed0 <_malloc_r+0x634>
    8c38:	070000b4 	movhi	fp,2
    8c3c:	e7294e04 	addi	fp,fp,-23240
    8c40:	e0800017 	ldw	r2,0(fp)
    8c44:	a887883a 	add	r3,r21,r2
    8c48:	e0c00015 	stw	r3,0(fp)
    8c4c:	3500e626 	beq	r6,r20,8fe8 <_malloc_r+0x74c>
    8c50:	b9000017 	ldw	r4,0(r23)
    8c54:	00bfffc4 	movi	r2,-1
    8c58:	2080ee26 	beq	r4,r2,9014 <_malloc_r+0x778>
    8c5c:	a185c83a 	sub	r2,r20,r6
    8c60:	10c5883a 	add	r2,r2,r3
    8c64:	e0800015 	stw	r2,0(fp)
    8c68:	a0c001cc 	andi	r3,r20,7
    8c6c:	1800bc26 	beq	r3,zero,8f60 <_malloc_r+0x6c4>
    8c70:	a0e9c83a 	sub	r20,r20,r3
    8c74:	00840204 	movi	r2,4104
    8c78:	a5000204 	addi	r20,r20,8
    8c7c:	10c7c83a 	sub	r3,r2,r3
    8c80:	a545883a 	add	r2,r20,r21
    8c84:	1083ffcc 	andi	r2,r2,4095
    8c88:	18abc83a 	sub	r21,r3,r2
    8c8c:	a80b883a 	mov	r5,r21
    8c90:	9009883a 	mov	r4,r18
    8c94:	000ad500 	call	ad50 <_sbrk_r>
    8c98:	00ffffc4 	movi	r3,-1
    8c9c:	10c0e126 	beq	r2,r3,9024 <_malloc_r+0x788>
    8ca0:	1505c83a 	sub	r2,r2,r20
    8ca4:	1545883a 	add	r2,r2,r21
    8ca8:	10800054 	ori	r2,r2,1
    8cac:	e0c00017 	ldw	r3,0(fp)
    8cb0:	9d000215 	stw	r20,8(r19)
    8cb4:	a0800115 	stw	r2,4(r20)
    8cb8:	a8c7883a 	add	r3,r21,r3
    8cbc:	e0c00015 	stw	r3,0(fp)
    8cc0:	84c00e26 	beq	r16,r19,8cfc <_malloc_r+0x460>
    8cc4:	018003c4 	movi	r6,15
    8cc8:	3580a72e 	bgeu	r6,r22,8f68 <_malloc_r+0x6cc>
    8ccc:	81400117 	ldw	r5,4(r16)
    8cd0:	013ffe04 	movi	r4,-8
    8cd4:	b0bffd04 	addi	r2,r22,-12
    8cd8:	1104703a 	and	r2,r2,r4
    8cdc:	2900004c 	andi	r4,r5,1
    8ce0:	2088b03a 	or	r4,r4,r2
    8ce4:	81000115 	stw	r4,4(r16)
    8ce8:	01400144 	movi	r5,5
    8cec:	8089883a 	add	r4,r16,r2
    8cf0:	21400115 	stw	r5,4(r4)
    8cf4:	21400215 	stw	r5,8(r4)
    8cf8:	3080cd36 	bltu	r6,r2,9030 <_malloc_r+0x794>
    8cfc:	008000b4 	movhi	r2,2
    8d00:	10a94104 	addi	r2,r2,-23292
    8d04:	11000017 	ldw	r4,0(r2)
    8d08:	20c0012e 	bgeu	r4,r3,8d10 <_malloc_r+0x474>
    8d0c:	10c00015 	stw	r3,0(r2)
    8d10:	008000b4 	movhi	r2,2
    8d14:	10a94004 	addi	r2,r2,-23296
    8d18:	11000017 	ldw	r4,0(r2)
    8d1c:	9c000217 	ldw	r16,8(r19)
    8d20:	20c0012e 	bgeu	r4,r3,8d28 <_malloc_r+0x48c>
    8d24:	10c00015 	stw	r3,0(r2)
    8d28:	80c00117 	ldw	r3,4(r16)
    8d2c:	00bfff04 	movi	r2,-4
    8d30:	1886703a 	and	r3,r3,r2
    8d34:	1c45c83a 	sub	r2,r3,r17
    8d38:	1c400236 	bltu	r3,r17,8d44 <_malloc_r+0x4a8>
    8d3c:	00c003c4 	movi	r3,15
    8d40:	18800416 	blt	r3,r2,8d54 <_malloc_r+0x4b8>
    8d44:	9009883a 	mov	r4,r18
    8d48:	00122300 	call	12230 <__malloc_unlock>
    8d4c:	0005883a 	mov	r2,zero
    8d50:	003f7b06 	br	8b40 <__alt_mem_Onchip_SRAM+0xf8008b40>
    8d54:	88c00054 	ori	r3,r17,1
    8d58:	80c00115 	stw	r3,4(r16)
    8d5c:	8463883a 	add	r17,r16,r17
    8d60:	10800054 	ori	r2,r2,1
    8d64:	9c400215 	stw	r17,8(r19)
    8d68:	88800115 	stw	r2,4(r17)
    8d6c:	9009883a 	mov	r4,r18
    8d70:	00122300 	call	12230 <__malloc_unlock>
    8d74:	80800204 	addi	r2,r16,8
    8d78:	003f7106 	br	8b40 <__alt_mem_Onchip_SRAM+0xf8008b40>
    8d7c:	00c00504 	movi	r3,20
    8d80:	18804a2e 	bgeu	r3,r2,8eac <_malloc_r+0x610>
    8d84:	00c01504 	movi	r3,84
    8d88:	18806e36 	bltu	r3,r2,8f44 <_malloc_r+0x6a8>
    8d8c:	8804d33a 	srli	r2,r17,12
    8d90:	12001bc4 	addi	r8,r2,111
    8d94:	11c01b84 	addi	r7,r2,110
    8d98:	4209883a 	add	r4,r8,r8
    8d9c:	003edd06 	br	8914 <__alt_mem_Onchip_SRAM+0xf8008914>
    8da0:	3804d27a 	srli	r2,r7,9
    8da4:	00c00104 	movi	r3,4
    8da8:	1880442e 	bgeu	r3,r2,8ebc <_malloc_r+0x620>
    8dac:	00c00504 	movi	r3,20
    8db0:	18808136 	bltu	r3,r2,8fb8 <_malloc_r+0x71c>
    8db4:	11401704 	addi	r5,r2,92
    8db8:	10c016c4 	addi	r3,r2,91
    8dbc:	294b883a 	add	r5,r5,r5
    8dc0:	294b883a 	add	r5,r5,r5
    8dc4:	294b883a 	add	r5,r5,r5
    8dc8:	994b883a 	add	r5,r19,r5
    8dcc:	28800017 	ldw	r2,0(r5)
    8dd0:	01800074 	movhi	r6,1
    8dd4:	297ffe04 	addi	r5,r5,-8
    8dd8:	319c7f04 	addi	r6,r6,29180
    8ddc:	28806526 	beq	r5,r2,8f74 <_malloc_r+0x6d8>
    8de0:	01bfff04 	movi	r6,-4
    8de4:	10c00117 	ldw	r3,4(r2)
    8de8:	1986703a 	and	r3,r3,r6
    8dec:	38c0022e 	bgeu	r7,r3,8df8 <_malloc_r+0x55c>
    8df0:	10800217 	ldw	r2,8(r2)
    8df4:	28bffb1e 	bne	r5,r2,8de4 <__alt_mem_Onchip_SRAM+0xf8008de4>
    8df8:	11400317 	ldw	r5,12(r2)
    8dfc:	98c00117 	ldw	r3,4(r19)
    8e00:	81400315 	stw	r5,12(r16)
    8e04:	80800215 	stw	r2,8(r16)
    8e08:	2c000215 	stw	r16,8(r5)
    8e0c:	14000315 	stw	r16,12(r2)
    8e10:	003ef806 	br	89f4 <__alt_mem_Onchip_SRAM+0xf80089f4>
    8e14:	88c00054 	ori	r3,r17,1
    8e18:	80c00115 	stw	r3,4(r16)
    8e1c:	8463883a 	add	r17,r16,r17
    8e20:	34400515 	stw	r17,20(r6)
    8e24:	34400415 	stw	r17,16(r6)
    8e28:	10c00054 	ori	r3,r2,1
    8e2c:	8a000315 	stw	r8,12(r17)
    8e30:	8a000215 	stw	r8,8(r17)
    8e34:	88c00115 	stw	r3,4(r17)
    8e38:	88a3883a 	add	r17,r17,r2
    8e3c:	88800015 	stw	r2,0(r17)
    8e40:	9009883a 	mov	r4,r18
    8e44:	00122300 	call	12230 <__malloc_unlock>
    8e48:	80800204 	addi	r2,r16,8
    8e4c:	003f3c06 	br	8b40 <__alt_mem_Onchip_SRAM+0xf8008b40>
    8e50:	30c00117 	ldw	r3,4(r6)
    8e54:	003ee706 	br	89f4 <__alt_mem_Onchip_SRAM+0xf80089f4>
    8e58:	5ac00044 	addi	r11,r11,1
    8e5c:	588000cc 	andi	r2,r11,3
    8e60:	31800204 	addi	r6,r6,8
    8e64:	103efd1e 	bne	r2,zero,8a5c <__alt_mem_Onchip_SRAM+0xf8008a5c>
    8e68:	00002406 	br	8efc <_malloc_r+0x660>
    8e6c:	14000317 	ldw	r16,12(r2)
    8e70:	143f251e 	bne	r2,r16,8b08 <__alt_mem_Onchip_SRAM+0xf8008b08>
    8e74:	21000084 	addi	r4,r4,2
    8e78:	003ebc06 	br	896c <__alt_mem_Onchip_SRAM+0xf800896c>
    8e7c:	8085883a 	add	r2,r16,r2
    8e80:	10c00117 	ldw	r3,4(r2)
    8e84:	81000317 	ldw	r4,12(r16)
    8e88:	81400217 	ldw	r5,8(r16)
    8e8c:	18c00054 	ori	r3,r3,1
    8e90:	10c00115 	stw	r3,4(r2)
    8e94:	29000315 	stw	r4,12(r5)
    8e98:	21400215 	stw	r5,8(r4)
    8e9c:	9009883a 	mov	r4,r18
    8ea0:	00122300 	call	12230 <__malloc_unlock>
    8ea4:	80800204 	addi	r2,r16,8
    8ea8:	003f2506 	br	8b40 <__alt_mem_Onchip_SRAM+0xf8008b40>
    8eac:	12001704 	addi	r8,r2,92
    8eb0:	11c016c4 	addi	r7,r2,91
    8eb4:	4209883a 	add	r4,r8,r8
    8eb8:	003e9606 	br	8914 <__alt_mem_Onchip_SRAM+0xf8008914>
    8ebc:	3804d1ba 	srli	r2,r7,6
    8ec0:	11400e44 	addi	r5,r2,57
    8ec4:	10c00e04 	addi	r3,r2,56
    8ec8:	294b883a 	add	r5,r5,r5
    8ecc:	003fbc06 	br	8dc0 <__alt_mem_Onchip_SRAM+0xf8008dc0>
    8ed0:	84ff5926 	beq	r16,r19,8c38 <__alt_mem_Onchip_SRAM+0xf8008c38>
    8ed4:	00800074 	movhi	r2,1
    8ed8:	109c7f04 	addi	r2,r2,29180
    8edc:	14000217 	ldw	r16,8(r2)
    8ee0:	00bfff04 	movi	r2,-4
    8ee4:	80c00117 	ldw	r3,4(r16)
    8ee8:	1886703a 	and	r3,r3,r2
    8eec:	003f9106 	br	8d34 <__alt_mem_Onchip_SRAM+0xf8008d34>
    8ef0:	60800217 	ldw	r2,8(r12)
    8ef4:	213fffc4 	addi	r4,r4,-1
    8ef8:	1300651e 	bne	r2,r12,9090 <_malloc_r+0x7f4>
    8efc:	208000cc 	andi	r2,r4,3
    8f00:	633ffe04 	addi	r12,r12,-8
    8f04:	103ffa1e 	bne	r2,zero,8ef0 <__alt_mem_Onchip_SRAM+0xf8008ef0>
    8f08:	98800117 	ldw	r2,4(r19)
    8f0c:	0146303a 	nor	r3,zero,r5
    8f10:	1884703a 	and	r2,r3,r2
    8f14:	98800115 	stw	r2,4(r19)
    8f18:	294b883a 	add	r5,r5,r5
    8f1c:	117f2836 	bltu	r2,r5,8bc0 <__alt_mem_Onchip_SRAM+0xf8008bc0>
    8f20:	283f2726 	beq	r5,zero,8bc0 <__alt_mem_Onchip_SRAM+0xf8008bc0>
    8f24:	2886703a 	and	r3,r5,r2
    8f28:	5809883a 	mov	r4,r11
    8f2c:	183ec31e 	bne	r3,zero,8a3c <__alt_mem_Onchip_SRAM+0xf8008a3c>
    8f30:	294b883a 	add	r5,r5,r5
    8f34:	2886703a 	and	r3,r5,r2
    8f38:	21000104 	addi	r4,r4,4
    8f3c:	183ffc26 	beq	r3,zero,8f30 <__alt_mem_Onchip_SRAM+0xf8008f30>
    8f40:	003ebe06 	br	8a3c <__alt_mem_Onchip_SRAM+0xf8008a3c>
    8f44:	00c05504 	movi	r3,340
    8f48:	18801236 	bltu	r3,r2,8f94 <_malloc_r+0x6f8>
    8f4c:	8804d3fa 	srli	r2,r17,15
    8f50:	12001e04 	addi	r8,r2,120
    8f54:	11c01dc4 	addi	r7,r2,119
    8f58:	4209883a 	add	r4,r8,r8
    8f5c:	003e6d06 	br	8914 <__alt_mem_Onchip_SRAM+0xf8008914>
    8f60:	00c40004 	movi	r3,4096
    8f64:	003f4606 	br	8c80 <__alt_mem_Onchip_SRAM+0xf8008c80>
    8f68:	00800044 	movi	r2,1
    8f6c:	a0800115 	stw	r2,4(r20)
    8f70:	003f7406 	br	8d44 <__alt_mem_Onchip_SRAM+0xf8008d44>
    8f74:	1805d0ba 	srai	r2,r3,2
    8f78:	01c00044 	movi	r7,1
    8f7c:	30c00117 	ldw	r3,4(r6)
    8f80:	388e983a 	sll	r7,r7,r2
    8f84:	2805883a 	mov	r2,r5
    8f88:	38c6b03a 	or	r3,r7,r3
    8f8c:	30c00115 	stw	r3,4(r6)
    8f90:	003f9b06 	br	8e00 <__alt_mem_Onchip_SRAM+0xf8008e00>
    8f94:	00c15504 	movi	r3,1364
    8f98:	18801a36 	bltu	r3,r2,9004 <_malloc_r+0x768>
    8f9c:	8804d4ba 	srli	r2,r17,18
    8fa0:	12001f44 	addi	r8,r2,125
    8fa4:	11c01f04 	addi	r7,r2,124
    8fa8:	4209883a 	add	r4,r8,r8
    8fac:	003e5906 	br	8914 <__alt_mem_Onchip_SRAM+0xf8008914>
    8fb0:	ad400404 	addi	r21,r21,16
    8fb4:	003f1706 	br	8c14 <__alt_mem_Onchip_SRAM+0xf8008c14>
    8fb8:	00c01504 	movi	r3,84
    8fbc:	18802336 	bltu	r3,r2,904c <_malloc_r+0x7b0>
    8fc0:	3804d33a 	srli	r2,r7,12
    8fc4:	11401bc4 	addi	r5,r2,111
    8fc8:	10c01b84 	addi	r3,r2,110
    8fcc:	294b883a 	add	r5,r5,r5
    8fd0:	003f7b06 	br	8dc0 <__alt_mem_Onchip_SRAM+0xf8008dc0>
    8fd4:	9c000217 	ldw	r16,8(r19)
    8fd8:	00bfff04 	movi	r2,-4
    8fdc:	80c00117 	ldw	r3,4(r16)
    8fe0:	1886703a 	and	r3,r3,r2
    8fe4:	003f5306 	br	8d34 <__alt_mem_Onchip_SRAM+0xf8008d34>
    8fe8:	3083ffcc 	andi	r2,r6,4095
    8fec:	103f181e 	bne	r2,zero,8c50 <__alt_mem_Onchip_SRAM+0xf8008c50>
    8ff0:	99000217 	ldw	r4,8(r19)
    8ff4:	b545883a 	add	r2,r22,r21
    8ff8:	10800054 	ori	r2,r2,1
    8ffc:	20800115 	stw	r2,4(r4)
    9000:	003f3e06 	br	8cfc <__alt_mem_Onchip_SRAM+0xf8008cfc>
    9004:	01003f84 	movi	r4,254
    9008:	02001fc4 	movi	r8,127
    900c:	01c01f84 	movi	r7,126
    9010:	003e4006 	br	8914 <__alt_mem_Onchip_SRAM+0xf8008914>
    9014:	008000b4 	movhi	r2,2
    9018:	10a23904 	addi	r2,r2,-30492
    901c:	15000015 	stw	r20,0(r2)
    9020:	003f1106 	br	8c68 <__alt_mem_Onchip_SRAM+0xf8008c68>
    9024:	00800044 	movi	r2,1
    9028:	002b883a 	mov	r21,zero
    902c:	003f1f06 	br	8cac <__alt_mem_Onchip_SRAM+0xf8008cac>
    9030:	81400204 	addi	r5,r16,8
    9034:	9009883a 	mov	r4,r18
    9038:	0007c480 	call	7c48 <_free_r>
    903c:	008000b4 	movhi	r2,2
    9040:	10a94e04 	addi	r2,r2,-23240
    9044:	10c00017 	ldw	r3,0(r2)
    9048:	003f2c06 	br	8cfc <__alt_mem_Onchip_SRAM+0xf8008cfc>
    904c:	00c05504 	movi	r3,340
    9050:	18800536 	bltu	r3,r2,9068 <_malloc_r+0x7cc>
    9054:	3804d3fa 	srli	r2,r7,15
    9058:	11401e04 	addi	r5,r2,120
    905c:	10c01dc4 	addi	r3,r2,119
    9060:	294b883a 	add	r5,r5,r5
    9064:	003f5606 	br	8dc0 <__alt_mem_Onchip_SRAM+0xf8008dc0>
    9068:	00c15504 	movi	r3,1364
    906c:	18800536 	bltu	r3,r2,9084 <_malloc_r+0x7e8>
    9070:	3804d4ba 	srli	r2,r7,18
    9074:	11401f44 	addi	r5,r2,125
    9078:	10c01f04 	addi	r3,r2,124
    907c:	294b883a 	add	r5,r5,r5
    9080:	003f4f06 	br	8dc0 <__alt_mem_Onchip_SRAM+0xf8008dc0>
    9084:	01403f84 	movi	r5,254
    9088:	00c01f84 	movi	r3,126
    908c:	003f4c06 	br	8dc0 <__alt_mem_Onchip_SRAM+0xf8008dc0>
    9090:	98800117 	ldw	r2,4(r19)
    9094:	003fa006 	br	8f18 <__alt_mem_Onchip_SRAM+0xf8008f18>
    9098:	8808d0fa 	srli	r4,r17,3
    909c:	20800044 	addi	r2,r4,1
    90a0:	1085883a 	add	r2,r2,r2
    90a4:	003e9006 	br	8ae8 <__alt_mem_Onchip_SRAM+0xf8008ae8>

000090a8 <memchr>:
    90a8:	208000cc 	andi	r2,r4,3
    90ac:	280f883a 	mov	r7,r5
    90b0:	10003426 	beq	r2,zero,9184 <memchr+0xdc>
    90b4:	30bfffc4 	addi	r2,r6,-1
    90b8:	30001a26 	beq	r6,zero,9124 <memchr+0x7c>
    90bc:	20c00003 	ldbu	r3,0(r4)
    90c0:	29803fcc 	andi	r6,r5,255
    90c4:	30c0051e 	bne	r6,r3,90dc <memchr+0x34>
    90c8:	00001806 	br	912c <memchr+0x84>
    90cc:	10001526 	beq	r2,zero,9124 <memchr+0x7c>
    90d0:	20c00003 	ldbu	r3,0(r4)
    90d4:	10bfffc4 	addi	r2,r2,-1
    90d8:	30c01426 	beq	r6,r3,912c <memchr+0x84>
    90dc:	21000044 	addi	r4,r4,1
    90e0:	20c000cc 	andi	r3,r4,3
    90e4:	183ff91e 	bne	r3,zero,90cc <__alt_mem_Onchip_SRAM+0xf80090cc>
    90e8:	020000c4 	movi	r8,3
    90ec:	40801136 	bltu	r8,r2,9134 <memchr+0x8c>
    90f0:	10000c26 	beq	r2,zero,9124 <memchr+0x7c>
    90f4:	20c00003 	ldbu	r3,0(r4)
    90f8:	29403fcc 	andi	r5,r5,255
    90fc:	28c00b26 	beq	r5,r3,912c <memchr+0x84>
    9100:	20c00044 	addi	r3,r4,1
    9104:	39803fcc 	andi	r6,r7,255
    9108:	2089883a 	add	r4,r4,r2
    910c:	00000306 	br	911c <memchr+0x74>
    9110:	18c00044 	addi	r3,r3,1
    9114:	197fffc3 	ldbu	r5,-1(r3)
    9118:	31400526 	beq	r6,r5,9130 <memchr+0x88>
    911c:	1805883a 	mov	r2,r3
    9120:	20fffb1e 	bne	r4,r3,9110 <__alt_mem_Onchip_SRAM+0xf8009110>
    9124:	0005883a 	mov	r2,zero
    9128:	f800283a 	ret
    912c:	2005883a 	mov	r2,r4
    9130:	f800283a 	ret
    9134:	28c03fcc 	andi	r3,r5,255
    9138:	1812923a 	slli	r9,r3,8
    913c:	02ffbff4 	movhi	r11,65279
    9140:	02a02074 	movhi	r10,32897
    9144:	48d2b03a 	or	r9,r9,r3
    9148:	4806943a 	slli	r3,r9,16
    914c:	5affbfc4 	addi	r11,r11,-257
    9150:	52a02004 	addi	r10,r10,-32640
    9154:	48d2b03a 	or	r9,r9,r3
    9158:	20c00017 	ldw	r3,0(r4)
    915c:	48c6f03a 	xor	r3,r9,r3
    9160:	1acd883a 	add	r6,r3,r11
    9164:	00c6303a 	nor	r3,zero,r3
    9168:	30c6703a 	and	r3,r6,r3
    916c:	1a86703a 	and	r3,r3,r10
    9170:	183fe01e 	bne	r3,zero,90f4 <__alt_mem_Onchip_SRAM+0xf80090f4>
    9174:	10bfff04 	addi	r2,r2,-4
    9178:	21000104 	addi	r4,r4,4
    917c:	40bff636 	bltu	r8,r2,9158 <__alt_mem_Onchip_SRAM+0xf8009158>
    9180:	003fdb06 	br	90f0 <__alt_mem_Onchip_SRAM+0xf80090f0>
    9184:	3005883a 	mov	r2,r6
    9188:	003fd706 	br	90e8 <__alt_mem_Onchip_SRAM+0xf80090e8>

0000918c <memcpy>:
    918c:	defffd04 	addi	sp,sp,-12
    9190:	dfc00215 	stw	ra,8(sp)
    9194:	dc400115 	stw	r17,4(sp)
    9198:	dc000015 	stw	r16,0(sp)
    919c:	00c003c4 	movi	r3,15
    91a0:	2005883a 	mov	r2,r4
    91a4:	1980452e 	bgeu	r3,r6,92bc <memcpy+0x130>
    91a8:	2906b03a 	or	r3,r5,r4
    91ac:	18c000cc 	andi	r3,r3,3
    91b0:	1800441e 	bne	r3,zero,92c4 <memcpy+0x138>
    91b4:	347ffc04 	addi	r17,r6,-16
    91b8:	8822d13a 	srli	r17,r17,4
    91bc:	28c00104 	addi	r3,r5,4
    91c0:	23400104 	addi	r13,r4,4
    91c4:	8820913a 	slli	r16,r17,4
    91c8:	2b000204 	addi	r12,r5,8
    91cc:	22c00204 	addi	r11,r4,8
    91d0:	84000504 	addi	r16,r16,20
    91d4:	2a800304 	addi	r10,r5,12
    91d8:	22400304 	addi	r9,r4,12
    91dc:	2c21883a 	add	r16,r5,r16
    91e0:	2811883a 	mov	r8,r5
    91e4:	200f883a 	mov	r7,r4
    91e8:	41000017 	ldw	r4,0(r8)
    91ec:	1fc00017 	ldw	ra,0(r3)
    91f0:	63c00017 	ldw	r15,0(r12)
    91f4:	39000015 	stw	r4,0(r7)
    91f8:	53800017 	ldw	r14,0(r10)
    91fc:	6fc00015 	stw	ra,0(r13)
    9200:	5bc00015 	stw	r15,0(r11)
    9204:	4b800015 	stw	r14,0(r9)
    9208:	18c00404 	addi	r3,r3,16
    920c:	39c00404 	addi	r7,r7,16
    9210:	42000404 	addi	r8,r8,16
    9214:	6b400404 	addi	r13,r13,16
    9218:	63000404 	addi	r12,r12,16
    921c:	5ac00404 	addi	r11,r11,16
    9220:	52800404 	addi	r10,r10,16
    9224:	4a400404 	addi	r9,r9,16
    9228:	1c3fef1e 	bne	r3,r16,91e8 <__alt_mem_Onchip_SRAM+0xf80091e8>
    922c:	89c00044 	addi	r7,r17,1
    9230:	380e913a 	slli	r7,r7,4
    9234:	310003cc 	andi	r4,r6,15
    9238:	02c000c4 	movi	r11,3
    923c:	11c7883a 	add	r3,r2,r7
    9240:	29cb883a 	add	r5,r5,r7
    9244:	5900212e 	bgeu	r11,r4,92cc <memcpy+0x140>
    9248:	1813883a 	mov	r9,r3
    924c:	2811883a 	mov	r8,r5
    9250:	200f883a 	mov	r7,r4
    9254:	42800017 	ldw	r10,0(r8)
    9258:	4a400104 	addi	r9,r9,4
    925c:	39ffff04 	addi	r7,r7,-4
    9260:	4abfff15 	stw	r10,-4(r9)
    9264:	42000104 	addi	r8,r8,4
    9268:	59fffa36 	bltu	r11,r7,9254 <__alt_mem_Onchip_SRAM+0xf8009254>
    926c:	213fff04 	addi	r4,r4,-4
    9270:	2008d0ba 	srli	r4,r4,2
    9274:	318000cc 	andi	r6,r6,3
    9278:	21000044 	addi	r4,r4,1
    927c:	2109883a 	add	r4,r4,r4
    9280:	2109883a 	add	r4,r4,r4
    9284:	1907883a 	add	r3,r3,r4
    9288:	290b883a 	add	r5,r5,r4
    928c:	30000626 	beq	r6,zero,92a8 <memcpy+0x11c>
    9290:	198d883a 	add	r6,r3,r6
    9294:	29c00003 	ldbu	r7,0(r5)
    9298:	18c00044 	addi	r3,r3,1
    929c:	29400044 	addi	r5,r5,1
    92a0:	19ffffc5 	stb	r7,-1(r3)
    92a4:	19bffb1e 	bne	r3,r6,9294 <__alt_mem_Onchip_SRAM+0xf8009294>
    92a8:	dfc00217 	ldw	ra,8(sp)
    92ac:	dc400117 	ldw	r17,4(sp)
    92b0:	dc000017 	ldw	r16,0(sp)
    92b4:	dec00304 	addi	sp,sp,12
    92b8:	f800283a 	ret
    92bc:	2007883a 	mov	r3,r4
    92c0:	003ff206 	br	928c <__alt_mem_Onchip_SRAM+0xf800928c>
    92c4:	2007883a 	mov	r3,r4
    92c8:	003ff106 	br	9290 <__alt_mem_Onchip_SRAM+0xf8009290>
    92cc:	200d883a 	mov	r6,r4
    92d0:	003fee06 	br	928c <__alt_mem_Onchip_SRAM+0xf800928c>

000092d4 <memmove>:
    92d4:	2005883a 	mov	r2,r4
    92d8:	29000b2e 	bgeu	r5,r4,9308 <memmove+0x34>
    92dc:	298f883a 	add	r7,r5,r6
    92e0:	21c0092e 	bgeu	r4,r7,9308 <memmove+0x34>
    92e4:	2187883a 	add	r3,r4,r6
    92e8:	198bc83a 	sub	r5,r3,r6
    92ec:	30004826 	beq	r6,zero,9410 <memmove+0x13c>
    92f0:	39ffffc4 	addi	r7,r7,-1
    92f4:	39000003 	ldbu	r4,0(r7)
    92f8:	18ffffc4 	addi	r3,r3,-1
    92fc:	19000005 	stb	r4,0(r3)
    9300:	28fffb1e 	bne	r5,r3,92f0 <__alt_mem_Onchip_SRAM+0xf80092f0>
    9304:	f800283a 	ret
    9308:	00c003c4 	movi	r3,15
    930c:	1980412e 	bgeu	r3,r6,9414 <memmove+0x140>
    9310:	2886b03a 	or	r3,r5,r2
    9314:	18c000cc 	andi	r3,r3,3
    9318:	1800401e 	bne	r3,zero,941c <memmove+0x148>
    931c:	33fffc04 	addi	r15,r6,-16
    9320:	781ed13a 	srli	r15,r15,4
    9324:	28c00104 	addi	r3,r5,4
    9328:	13400104 	addi	r13,r2,4
    932c:	781c913a 	slli	r14,r15,4
    9330:	2b000204 	addi	r12,r5,8
    9334:	12c00204 	addi	r11,r2,8
    9338:	73800504 	addi	r14,r14,20
    933c:	2a800304 	addi	r10,r5,12
    9340:	12400304 	addi	r9,r2,12
    9344:	2b9d883a 	add	r14,r5,r14
    9348:	2811883a 	mov	r8,r5
    934c:	100f883a 	mov	r7,r2
    9350:	41000017 	ldw	r4,0(r8)
    9354:	39c00404 	addi	r7,r7,16
    9358:	18c00404 	addi	r3,r3,16
    935c:	393ffc15 	stw	r4,-16(r7)
    9360:	193ffc17 	ldw	r4,-16(r3)
    9364:	6b400404 	addi	r13,r13,16
    9368:	5ac00404 	addi	r11,r11,16
    936c:	693ffc15 	stw	r4,-16(r13)
    9370:	61000017 	ldw	r4,0(r12)
    9374:	4a400404 	addi	r9,r9,16
    9378:	42000404 	addi	r8,r8,16
    937c:	593ffc15 	stw	r4,-16(r11)
    9380:	51000017 	ldw	r4,0(r10)
    9384:	63000404 	addi	r12,r12,16
    9388:	52800404 	addi	r10,r10,16
    938c:	493ffc15 	stw	r4,-16(r9)
    9390:	1bbfef1e 	bne	r3,r14,9350 <__alt_mem_Onchip_SRAM+0xf8009350>
    9394:	79000044 	addi	r4,r15,1
    9398:	2008913a 	slli	r4,r4,4
    939c:	328003cc 	andi	r10,r6,15
    93a0:	02c000c4 	movi	r11,3
    93a4:	1107883a 	add	r3,r2,r4
    93a8:	290b883a 	add	r5,r5,r4
    93ac:	5a801e2e 	bgeu	r11,r10,9428 <memmove+0x154>
    93b0:	1813883a 	mov	r9,r3
    93b4:	2811883a 	mov	r8,r5
    93b8:	500f883a 	mov	r7,r10
    93bc:	41000017 	ldw	r4,0(r8)
    93c0:	4a400104 	addi	r9,r9,4
    93c4:	39ffff04 	addi	r7,r7,-4
    93c8:	493fff15 	stw	r4,-4(r9)
    93cc:	42000104 	addi	r8,r8,4
    93d0:	59fffa36 	bltu	r11,r7,93bc <__alt_mem_Onchip_SRAM+0xf80093bc>
    93d4:	513fff04 	addi	r4,r10,-4
    93d8:	2008d0ba 	srli	r4,r4,2
    93dc:	318000cc 	andi	r6,r6,3
    93e0:	21000044 	addi	r4,r4,1
    93e4:	2109883a 	add	r4,r4,r4
    93e8:	2109883a 	add	r4,r4,r4
    93ec:	1907883a 	add	r3,r3,r4
    93f0:	290b883a 	add	r5,r5,r4
    93f4:	30000b26 	beq	r6,zero,9424 <memmove+0x150>
    93f8:	198d883a 	add	r6,r3,r6
    93fc:	29c00003 	ldbu	r7,0(r5)
    9400:	18c00044 	addi	r3,r3,1
    9404:	29400044 	addi	r5,r5,1
    9408:	19ffffc5 	stb	r7,-1(r3)
    940c:	19bffb1e 	bne	r3,r6,93fc <__alt_mem_Onchip_SRAM+0xf80093fc>
    9410:	f800283a 	ret
    9414:	1007883a 	mov	r3,r2
    9418:	003ff606 	br	93f4 <__alt_mem_Onchip_SRAM+0xf80093f4>
    941c:	1007883a 	mov	r3,r2
    9420:	003ff506 	br	93f8 <__alt_mem_Onchip_SRAM+0xf80093f8>
    9424:	f800283a 	ret
    9428:	500d883a 	mov	r6,r10
    942c:	003ff106 	br	93f4 <__alt_mem_Onchip_SRAM+0xf80093f4>

00009430 <memset>:
    9430:	20c000cc 	andi	r3,r4,3
    9434:	2005883a 	mov	r2,r4
    9438:	18004426 	beq	r3,zero,954c <memset+0x11c>
    943c:	31ffffc4 	addi	r7,r6,-1
    9440:	30004026 	beq	r6,zero,9544 <memset+0x114>
    9444:	2813883a 	mov	r9,r5
    9448:	200d883a 	mov	r6,r4
    944c:	2007883a 	mov	r3,r4
    9450:	00000406 	br	9464 <memset+0x34>
    9454:	3a3fffc4 	addi	r8,r7,-1
    9458:	31800044 	addi	r6,r6,1
    945c:	38003926 	beq	r7,zero,9544 <memset+0x114>
    9460:	400f883a 	mov	r7,r8
    9464:	18c00044 	addi	r3,r3,1
    9468:	32400005 	stb	r9,0(r6)
    946c:	1a0000cc 	andi	r8,r3,3
    9470:	403ff81e 	bne	r8,zero,9454 <__alt_mem_Onchip_SRAM+0xf8009454>
    9474:	010000c4 	movi	r4,3
    9478:	21c02d2e 	bgeu	r4,r7,9530 <memset+0x100>
    947c:	29003fcc 	andi	r4,r5,255
    9480:	200c923a 	slli	r6,r4,8
    9484:	3108b03a 	or	r4,r6,r4
    9488:	200c943a 	slli	r6,r4,16
    948c:	218cb03a 	or	r6,r4,r6
    9490:	010003c4 	movi	r4,15
    9494:	21c0182e 	bgeu	r4,r7,94f8 <memset+0xc8>
    9498:	3b3ffc04 	addi	r12,r7,-16
    949c:	6018d13a 	srli	r12,r12,4
    94a0:	1a000104 	addi	r8,r3,4
    94a4:	1ac00204 	addi	r11,r3,8
    94a8:	6008913a 	slli	r4,r12,4
    94ac:	1a800304 	addi	r10,r3,12
    94b0:	1813883a 	mov	r9,r3
    94b4:	21000504 	addi	r4,r4,20
    94b8:	1909883a 	add	r4,r3,r4
    94bc:	49800015 	stw	r6,0(r9)
    94c0:	41800015 	stw	r6,0(r8)
    94c4:	59800015 	stw	r6,0(r11)
    94c8:	51800015 	stw	r6,0(r10)
    94cc:	42000404 	addi	r8,r8,16
    94d0:	4a400404 	addi	r9,r9,16
    94d4:	5ac00404 	addi	r11,r11,16
    94d8:	52800404 	addi	r10,r10,16
    94dc:	413ff71e 	bne	r8,r4,94bc <__alt_mem_Onchip_SRAM+0xf80094bc>
    94e0:	63000044 	addi	r12,r12,1
    94e4:	6018913a 	slli	r12,r12,4
    94e8:	39c003cc 	andi	r7,r7,15
    94ec:	010000c4 	movi	r4,3
    94f0:	1b07883a 	add	r3,r3,r12
    94f4:	21c00e2e 	bgeu	r4,r7,9530 <memset+0x100>
    94f8:	1813883a 	mov	r9,r3
    94fc:	3811883a 	mov	r8,r7
    9500:	010000c4 	movi	r4,3
    9504:	49800015 	stw	r6,0(r9)
    9508:	423fff04 	addi	r8,r8,-4
    950c:	4a400104 	addi	r9,r9,4
    9510:	223ffc36 	bltu	r4,r8,9504 <__alt_mem_Onchip_SRAM+0xf8009504>
    9514:	393fff04 	addi	r4,r7,-4
    9518:	2008d0ba 	srli	r4,r4,2
    951c:	39c000cc 	andi	r7,r7,3
    9520:	21000044 	addi	r4,r4,1
    9524:	2109883a 	add	r4,r4,r4
    9528:	2109883a 	add	r4,r4,r4
    952c:	1907883a 	add	r3,r3,r4
    9530:	38000526 	beq	r7,zero,9548 <memset+0x118>
    9534:	19cf883a 	add	r7,r3,r7
    9538:	19400005 	stb	r5,0(r3)
    953c:	18c00044 	addi	r3,r3,1
    9540:	38fffd1e 	bne	r7,r3,9538 <__alt_mem_Onchip_SRAM+0xf8009538>
    9544:	f800283a 	ret
    9548:	f800283a 	ret
    954c:	2007883a 	mov	r3,r4
    9550:	300f883a 	mov	r7,r6
    9554:	003fc706 	br	9474 <__alt_mem_Onchip_SRAM+0xf8009474>

00009558 <_Balloc>:
    9558:	20801317 	ldw	r2,76(r4)
    955c:	defffc04 	addi	sp,sp,-16
    9560:	dc400115 	stw	r17,4(sp)
    9564:	dc000015 	stw	r16,0(sp)
    9568:	dfc00315 	stw	ra,12(sp)
    956c:	dc800215 	stw	r18,8(sp)
    9570:	2023883a 	mov	r17,r4
    9574:	2821883a 	mov	r16,r5
    9578:	10000f26 	beq	r2,zero,95b8 <_Balloc+0x60>
    957c:	8407883a 	add	r3,r16,r16
    9580:	18c7883a 	add	r3,r3,r3
    9584:	10c7883a 	add	r3,r2,r3
    9588:	18800017 	ldw	r2,0(r3)
    958c:	10001126 	beq	r2,zero,95d4 <_Balloc+0x7c>
    9590:	11000017 	ldw	r4,0(r2)
    9594:	19000015 	stw	r4,0(r3)
    9598:	10000415 	stw	zero,16(r2)
    959c:	10000315 	stw	zero,12(r2)
    95a0:	dfc00317 	ldw	ra,12(sp)
    95a4:	dc800217 	ldw	r18,8(sp)
    95a8:	dc400117 	ldw	r17,4(sp)
    95ac:	dc000017 	ldw	r16,0(sp)
    95b0:	dec00404 	addi	sp,sp,16
    95b4:	f800283a 	ret
    95b8:	01800844 	movi	r6,33
    95bc:	01400104 	movi	r5,4
    95c0:	000de300 	call	de30 <_calloc_r>
    95c4:	88801315 	stw	r2,76(r17)
    95c8:	103fec1e 	bne	r2,zero,957c <__alt_mem_Onchip_SRAM+0xf800957c>
    95cc:	0005883a 	mov	r2,zero
    95d0:	003ff306 	br	95a0 <__alt_mem_Onchip_SRAM+0xf80095a0>
    95d4:	01400044 	movi	r5,1
    95d8:	2c24983a 	sll	r18,r5,r16
    95dc:	8809883a 	mov	r4,r17
    95e0:	91800144 	addi	r6,r18,5
    95e4:	318d883a 	add	r6,r6,r6
    95e8:	318d883a 	add	r6,r6,r6
    95ec:	000de300 	call	de30 <_calloc_r>
    95f0:	103ff626 	beq	r2,zero,95cc <__alt_mem_Onchip_SRAM+0xf80095cc>
    95f4:	14000115 	stw	r16,4(r2)
    95f8:	14800215 	stw	r18,8(r2)
    95fc:	003fe606 	br	9598 <__alt_mem_Onchip_SRAM+0xf8009598>

00009600 <_Bfree>:
    9600:	28000826 	beq	r5,zero,9624 <_Bfree+0x24>
    9604:	28c00117 	ldw	r3,4(r5)
    9608:	20801317 	ldw	r2,76(r4)
    960c:	18c7883a 	add	r3,r3,r3
    9610:	18c7883a 	add	r3,r3,r3
    9614:	10c5883a 	add	r2,r2,r3
    9618:	10c00017 	ldw	r3,0(r2)
    961c:	28c00015 	stw	r3,0(r5)
    9620:	11400015 	stw	r5,0(r2)
    9624:	f800283a 	ret

00009628 <__multadd>:
    9628:	defff704 	addi	sp,sp,-36
    962c:	dc800215 	stw	r18,8(sp)
    9630:	2c800417 	ldw	r18,16(r5)
    9634:	dd800615 	stw	r22,24(sp)
    9638:	dd400515 	stw	r21,20(sp)
    963c:	dd000415 	stw	r20,16(sp)
    9640:	dcc00315 	stw	r19,12(sp)
    9644:	dc400115 	stw	r17,4(sp)
    9648:	dc000015 	stw	r16,0(sp)
    964c:	dfc00815 	stw	ra,32(sp)
    9650:	ddc00715 	stw	r23,28(sp)
    9654:	2827883a 	mov	r19,r5
    9658:	2029883a 	mov	r20,r4
    965c:	3023883a 	mov	r17,r6
    9660:	3821883a 	mov	r16,r7
    9664:	2d400504 	addi	r21,r5,20
    9668:	002d883a 	mov	r22,zero
    966c:	adc00017 	ldw	r23,0(r21)
    9670:	880b883a 	mov	r5,r17
    9674:	ad400104 	addi	r21,r21,4
    9678:	b93fffcc 	andi	r4,r23,65535
    967c:	0000eb00 	call	eb0 <__mulsi3>
    9680:	b808d43a 	srli	r4,r23,16
    9684:	880b883a 	mov	r5,r17
    9688:	1421883a 	add	r16,r2,r16
    968c:	0000eb00 	call	eb0 <__mulsi3>
    9690:	800ed43a 	srli	r7,r16,16
    9694:	80ffffcc 	andi	r3,r16,65535
    9698:	b5800044 	addi	r22,r22,1
    969c:	11c5883a 	add	r2,r2,r7
    96a0:	100e943a 	slli	r7,r2,16
    96a4:	1020d43a 	srli	r16,r2,16
    96a8:	38c7883a 	add	r3,r7,r3
    96ac:	a8ffff15 	stw	r3,-4(r21)
    96b0:	b4bfee16 	blt	r22,r18,966c <__alt_mem_Onchip_SRAM+0xf800966c>
    96b4:	80000926 	beq	r16,zero,96dc <__multadd+0xb4>
    96b8:	98800217 	ldw	r2,8(r19)
    96bc:	9080130e 	bge	r18,r2,970c <__multadd+0xe4>
    96c0:	90800144 	addi	r2,r18,5
    96c4:	1085883a 	add	r2,r2,r2
    96c8:	1085883a 	add	r2,r2,r2
    96cc:	9885883a 	add	r2,r19,r2
    96d0:	14000015 	stw	r16,0(r2)
    96d4:	94800044 	addi	r18,r18,1
    96d8:	9c800415 	stw	r18,16(r19)
    96dc:	9805883a 	mov	r2,r19
    96e0:	dfc00817 	ldw	ra,32(sp)
    96e4:	ddc00717 	ldw	r23,28(sp)
    96e8:	dd800617 	ldw	r22,24(sp)
    96ec:	dd400517 	ldw	r21,20(sp)
    96f0:	dd000417 	ldw	r20,16(sp)
    96f4:	dcc00317 	ldw	r19,12(sp)
    96f8:	dc800217 	ldw	r18,8(sp)
    96fc:	dc400117 	ldw	r17,4(sp)
    9700:	dc000017 	ldw	r16,0(sp)
    9704:	dec00904 	addi	sp,sp,36
    9708:	f800283a 	ret
    970c:	99400117 	ldw	r5,4(r19)
    9710:	a009883a 	mov	r4,r20
    9714:	29400044 	addi	r5,r5,1
    9718:	00095580 	call	9558 <_Balloc>
    971c:	99800417 	ldw	r6,16(r19)
    9720:	99400304 	addi	r5,r19,12
    9724:	11000304 	addi	r4,r2,12
    9728:	31800084 	addi	r6,r6,2
    972c:	318d883a 	add	r6,r6,r6
    9730:	318d883a 	add	r6,r6,r6
    9734:	1023883a 	mov	r17,r2
    9738:	000918c0 	call	918c <memcpy>
    973c:	98000a26 	beq	r19,zero,9768 <__multadd+0x140>
    9740:	98c00117 	ldw	r3,4(r19)
    9744:	a0801317 	ldw	r2,76(r20)
    9748:	18c7883a 	add	r3,r3,r3
    974c:	18c7883a 	add	r3,r3,r3
    9750:	10c5883a 	add	r2,r2,r3
    9754:	10c00017 	ldw	r3,0(r2)
    9758:	98c00015 	stw	r3,0(r19)
    975c:	14c00015 	stw	r19,0(r2)
    9760:	8827883a 	mov	r19,r17
    9764:	003fd606 	br	96c0 <__alt_mem_Onchip_SRAM+0xf80096c0>
    9768:	8827883a 	mov	r19,r17
    976c:	003fd406 	br	96c0 <__alt_mem_Onchip_SRAM+0xf80096c0>

00009770 <__s2b>:
    9770:	defff904 	addi	sp,sp,-28
    9774:	dc400115 	stw	r17,4(sp)
    9778:	dc000015 	stw	r16,0(sp)
    977c:	2023883a 	mov	r17,r4
    9780:	2821883a 	mov	r16,r5
    9784:	39000204 	addi	r4,r7,8
    9788:	01400244 	movi	r5,9
    978c:	dcc00315 	stw	r19,12(sp)
    9790:	dc800215 	stw	r18,8(sp)
    9794:	dfc00615 	stw	ra,24(sp)
    9798:	dd400515 	stw	r21,20(sp)
    979c:	dd000415 	stw	r20,16(sp)
    97a0:	3825883a 	mov	r18,r7
    97a4:	3027883a 	mov	r19,r6
    97a8:	0000cfc0 	call	cfc <__divsi3>
    97ac:	00c00044 	movi	r3,1
    97b0:	000b883a 	mov	r5,zero
    97b4:	1880030e 	bge	r3,r2,97c4 <__s2b+0x54>
    97b8:	18c7883a 	add	r3,r3,r3
    97bc:	29400044 	addi	r5,r5,1
    97c0:	18bffd16 	blt	r3,r2,97b8 <__alt_mem_Onchip_SRAM+0xf80097b8>
    97c4:	8809883a 	mov	r4,r17
    97c8:	00095580 	call	9558 <_Balloc>
    97cc:	d8c00717 	ldw	r3,28(sp)
    97d0:	10c00515 	stw	r3,20(r2)
    97d4:	00c00044 	movi	r3,1
    97d8:	10c00415 	stw	r3,16(r2)
    97dc:	00c00244 	movi	r3,9
    97e0:	1cc0210e 	bge	r3,r19,9868 <__s2b+0xf8>
    97e4:	80eb883a 	add	r21,r16,r3
    97e8:	a829883a 	mov	r20,r21
    97ec:	84e1883a 	add	r16,r16,r19
    97f0:	a1c00007 	ldb	r7,0(r20)
    97f4:	01800284 	movi	r6,10
    97f8:	a5000044 	addi	r20,r20,1
    97fc:	100b883a 	mov	r5,r2
    9800:	39fff404 	addi	r7,r7,-48
    9804:	8809883a 	mov	r4,r17
    9808:	00096280 	call	9628 <__multadd>
    980c:	a43ff81e 	bne	r20,r16,97f0 <__alt_mem_Onchip_SRAM+0xf80097f0>
    9810:	ace1883a 	add	r16,r21,r19
    9814:	843ffe04 	addi	r16,r16,-8
    9818:	9c800a0e 	bge	r19,r18,9844 <__s2b+0xd4>
    981c:	94e5c83a 	sub	r18,r18,r19
    9820:	84a5883a 	add	r18,r16,r18
    9824:	81c00007 	ldb	r7,0(r16)
    9828:	01800284 	movi	r6,10
    982c:	84000044 	addi	r16,r16,1
    9830:	100b883a 	mov	r5,r2
    9834:	39fff404 	addi	r7,r7,-48
    9838:	8809883a 	mov	r4,r17
    983c:	00096280 	call	9628 <__multadd>
    9840:	84bff81e 	bne	r16,r18,9824 <__alt_mem_Onchip_SRAM+0xf8009824>
    9844:	dfc00617 	ldw	ra,24(sp)
    9848:	dd400517 	ldw	r21,20(sp)
    984c:	dd000417 	ldw	r20,16(sp)
    9850:	dcc00317 	ldw	r19,12(sp)
    9854:	dc800217 	ldw	r18,8(sp)
    9858:	dc400117 	ldw	r17,4(sp)
    985c:	dc000017 	ldw	r16,0(sp)
    9860:	dec00704 	addi	sp,sp,28
    9864:	f800283a 	ret
    9868:	84000284 	addi	r16,r16,10
    986c:	1827883a 	mov	r19,r3
    9870:	003fe906 	br	9818 <__alt_mem_Onchip_SRAM+0xf8009818>

00009874 <__hi0bits>:
    9874:	20bfffec 	andhi	r2,r4,65535
    9878:	1000141e 	bne	r2,zero,98cc <__hi0bits+0x58>
    987c:	2008943a 	slli	r4,r4,16
    9880:	00800404 	movi	r2,16
    9884:	20ffc02c 	andhi	r3,r4,65280
    9888:	1800021e 	bne	r3,zero,9894 <__hi0bits+0x20>
    988c:	2008923a 	slli	r4,r4,8
    9890:	10800204 	addi	r2,r2,8
    9894:	20fc002c 	andhi	r3,r4,61440
    9898:	1800021e 	bne	r3,zero,98a4 <__hi0bits+0x30>
    989c:	2008913a 	slli	r4,r4,4
    98a0:	10800104 	addi	r2,r2,4
    98a4:	20f0002c 	andhi	r3,r4,49152
    98a8:	1800031e 	bne	r3,zero,98b8 <__hi0bits+0x44>
    98ac:	2109883a 	add	r4,r4,r4
    98b0:	10800084 	addi	r2,r2,2
    98b4:	2109883a 	add	r4,r4,r4
    98b8:	20000316 	blt	r4,zero,98c8 <__hi0bits+0x54>
    98bc:	2110002c 	andhi	r4,r4,16384
    98c0:	2000041e 	bne	r4,zero,98d4 <__hi0bits+0x60>
    98c4:	00800804 	movi	r2,32
    98c8:	f800283a 	ret
    98cc:	0005883a 	mov	r2,zero
    98d0:	003fec06 	br	9884 <__alt_mem_Onchip_SRAM+0xf8009884>
    98d4:	10800044 	addi	r2,r2,1
    98d8:	f800283a 	ret

000098dc <__lo0bits>:
    98dc:	20c00017 	ldw	r3,0(r4)
    98e0:	188001cc 	andi	r2,r3,7
    98e4:	10000826 	beq	r2,zero,9908 <__lo0bits+0x2c>
    98e8:	1880004c 	andi	r2,r3,1
    98ec:	1000211e 	bne	r2,zero,9974 <__lo0bits+0x98>
    98f0:	1880008c 	andi	r2,r3,2
    98f4:	1000211e 	bne	r2,zero,997c <__lo0bits+0xa0>
    98f8:	1806d0ba 	srli	r3,r3,2
    98fc:	00800084 	movi	r2,2
    9900:	20c00015 	stw	r3,0(r4)
    9904:	f800283a 	ret
    9908:	18bfffcc 	andi	r2,r3,65535
    990c:	10001326 	beq	r2,zero,995c <__lo0bits+0x80>
    9910:	0005883a 	mov	r2,zero
    9914:	19403fcc 	andi	r5,r3,255
    9918:	2800021e 	bne	r5,zero,9924 <__lo0bits+0x48>
    991c:	1806d23a 	srli	r3,r3,8
    9920:	10800204 	addi	r2,r2,8
    9924:	194003cc 	andi	r5,r3,15
    9928:	2800021e 	bne	r5,zero,9934 <__lo0bits+0x58>
    992c:	1806d13a 	srli	r3,r3,4
    9930:	10800104 	addi	r2,r2,4
    9934:	194000cc 	andi	r5,r3,3
    9938:	2800021e 	bne	r5,zero,9944 <__lo0bits+0x68>
    993c:	1806d0ba 	srli	r3,r3,2
    9940:	10800084 	addi	r2,r2,2
    9944:	1940004c 	andi	r5,r3,1
    9948:	2800081e 	bne	r5,zero,996c <__lo0bits+0x90>
    994c:	1806d07a 	srli	r3,r3,1
    9950:	1800051e 	bne	r3,zero,9968 <__lo0bits+0x8c>
    9954:	00800804 	movi	r2,32
    9958:	f800283a 	ret
    995c:	1806d43a 	srli	r3,r3,16
    9960:	00800404 	movi	r2,16
    9964:	003feb06 	br	9914 <__alt_mem_Onchip_SRAM+0xf8009914>
    9968:	10800044 	addi	r2,r2,1
    996c:	20c00015 	stw	r3,0(r4)
    9970:	f800283a 	ret
    9974:	0005883a 	mov	r2,zero
    9978:	f800283a 	ret
    997c:	1806d07a 	srli	r3,r3,1
    9980:	00800044 	movi	r2,1
    9984:	20c00015 	stw	r3,0(r4)
    9988:	f800283a 	ret

0000998c <__i2b>:
    998c:	defffd04 	addi	sp,sp,-12
    9990:	dc000015 	stw	r16,0(sp)
    9994:	04000044 	movi	r16,1
    9998:	dc400115 	stw	r17,4(sp)
    999c:	2823883a 	mov	r17,r5
    99a0:	800b883a 	mov	r5,r16
    99a4:	dfc00215 	stw	ra,8(sp)
    99a8:	00095580 	call	9558 <_Balloc>
    99ac:	14400515 	stw	r17,20(r2)
    99b0:	14000415 	stw	r16,16(r2)
    99b4:	dfc00217 	ldw	ra,8(sp)
    99b8:	dc400117 	ldw	r17,4(sp)
    99bc:	dc000017 	ldw	r16,0(sp)
    99c0:	dec00304 	addi	sp,sp,12
    99c4:	f800283a 	ret

000099c8 <__multiply>:
    99c8:	deffef04 	addi	sp,sp,-68
    99cc:	dc400815 	stw	r17,32(sp)
    99d0:	dc000715 	stw	r16,28(sp)
    99d4:	34400417 	ldw	r17,16(r6)
    99d8:	2c000417 	ldw	r16,16(r5)
    99dc:	dd800d15 	stw	r22,52(sp)
    99e0:	dc800915 	stw	r18,36(sp)
    99e4:	dfc01015 	stw	ra,64(sp)
    99e8:	df000f15 	stw	fp,60(sp)
    99ec:	ddc00e15 	stw	r23,56(sp)
    99f0:	dd400c15 	stw	r21,48(sp)
    99f4:	dd000b15 	stw	r20,44(sp)
    99f8:	dcc00a15 	stw	r19,40(sp)
    99fc:	2825883a 	mov	r18,r5
    9a00:	302d883a 	mov	r22,r6
    9a04:	8440050e 	bge	r16,r17,9a1c <__multiply+0x54>
    9a08:	8007883a 	mov	r3,r16
    9a0c:	3025883a 	mov	r18,r6
    9a10:	8821883a 	mov	r16,r17
    9a14:	282d883a 	mov	r22,r5
    9a18:	1823883a 	mov	r17,r3
    9a1c:	90800217 	ldw	r2,8(r18)
    9a20:	8447883a 	add	r3,r16,r17
    9a24:	d8c00215 	stw	r3,8(sp)
    9a28:	91400117 	ldw	r5,4(r18)
    9a2c:	10c0010e 	bge	r2,r3,9a34 <__multiply+0x6c>
    9a30:	29400044 	addi	r5,r5,1
    9a34:	00095580 	call	9558 <_Balloc>
    9a38:	d8c00217 	ldw	r3,8(sp)
    9a3c:	d8800615 	stw	r2,24(sp)
    9a40:	18eb883a 	add	r21,r3,r3
    9a44:	ad6b883a 	add	r21,r21,r21
    9a48:	10c00504 	addi	r3,r2,20
    9a4c:	1d6b883a 	add	r21,r3,r21
    9a50:	d8c00115 	stw	r3,4(sp)
    9a54:	dd400315 	stw	r21,12(sp)
    9a58:	1805883a 	mov	r2,r3
    9a5c:	1d40042e 	bgeu	r3,r21,9a70 <__multiply+0xa8>
    9a60:	d8c00317 	ldw	r3,12(sp)
    9a64:	10000015 	stw	zero,0(r2)
    9a68:	10800104 	addi	r2,r2,4
    9a6c:	10fffc36 	bltu	r2,r3,9a60 <__alt_mem_Onchip_SRAM+0xf8009a60>
    9a70:	8c63883a 	add	r17,r17,r17
    9a74:	b5800504 	addi	r22,r22,20
    9a78:	8c63883a 	add	r17,r17,r17
    9a7c:	94800504 	addi	r18,r18,20
    9a80:	8421883a 	add	r16,r16,r16
    9a84:	b463883a 	add	r17,r22,r17
    9a88:	8421883a 	add	r16,r16,r16
    9a8c:	dd800015 	stw	r22,0(sp)
    9a90:	dc800415 	stw	r18,16(sp)
    9a94:	dc400515 	stw	r17,20(sp)
    9a98:	9429883a 	add	r20,r18,r16
    9a9c:	b4404f2e 	bgeu	r22,r17,9bdc <__multiply+0x214>
    9aa0:	d8c00017 	ldw	r3,0(sp)
    9aa4:	1c800017 	ldw	r18,0(r3)
    9aa8:	947fffcc 	andi	r17,r18,65535
    9aac:	88001e26 	beq	r17,zero,9b28 <__multiply+0x160>
    9ab0:	dd800117 	ldw	r22,4(sp)
    9ab4:	dd400417 	ldw	r21,16(sp)
    9ab8:	0027883a 	mov	r19,zero
    9abc:	ac800017 	ldw	r18,0(r21)
    9ac0:	b4000017 	ldw	r16,0(r22)
    9ac4:	880b883a 	mov	r5,r17
    9ac8:	913fffcc 	andi	r4,r18,65535
    9acc:	0000eb00 	call	eb0 <__mulsi3>
    9ad0:	9008d43a 	srli	r4,r18,16
    9ad4:	84bfffcc 	andi	r18,r16,65535
    9ad8:	1485883a 	add	r2,r2,r18
    9adc:	14e5883a 	add	r18,r2,r19
    9ae0:	8020d43a 	srli	r16,r16,16
    9ae4:	9026d43a 	srli	r19,r18,16
    9ae8:	880b883a 	mov	r5,r17
    9aec:	0000eb00 	call	eb0 <__mulsi3>
    9af0:	1405883a 	add	r2,r2,r16
    9af4:	14e1883a 	add	r16,r2,r19
    9af8:	90ffffcc 	andi	r3,r18,65535
    9afc:	8024943a 	slli	r18,r16,16
    9b00:	ad400104 	addi	r21,r21,4
    9b04:	b005883a 	mov	r2,r22
    9b08:	90c6b03a 	or	r3,r18,r3
    9b0c:	b0c00015 	stw	r3,0(r22)
    9b10:	8026d43a 	srli	r19,r16,16
    9b14:	b5800104 	addi	r22,r22,4
    9b18:	ad3fe836 	bltu	r21,r20,9abc <__alt_mem_Onchip_SRAM+0xf8009abc>
    9b1c:	d8c00017 	ldw	r3,0(sp)
    9b20:	14c00115 	stw	r19,4(r2)
    9b24:	1c800017 	ldw	r18,0(r3)
    9b28:	9024d43a 	srli	r18,r18,16
    9b2c:	90002226 	beq	r18,zero,9bb8 <__multiply+0x1f0>
    9b30:	d8c00117 	ldw	r3,4(sp)
    9b34:	dd800417 	ldw	r22,16(sp)
    9b38:	002f883a 	mov	r23,zero
    9b3c:	1f000017 	ldw	fp,0(r3)
    9b40:	1823883a 	mov	r17,r3
    9b44:	182b883a 	mov	r21,r3
    9b48:	e021883a 	mov	r16,fp
    9b4c:	00000106 	br	9b54 <__multiply+0x18c>
    9b50:	982b883a 	mov	r21,r19
    9b54:	b100000b 	ldhu	r4,0(r22)
    9b58:	8020d43a 	srli	r16,r16,16
    9b5c:	900b883a 	mov	r5,r18
    9b60:	0000eb00 	call	eb0 <__mulsi3>
    9b64:	1405883a 	add	r2,r2,r16
    9b68:	15ef883a 	add	r23,r2,r23
    9b6c:	b804943a 	slli	r2,r23,16
    9b70:	e0ffffcc 	andi	r3,fp,65535
    9b74:	8c400104 	addi	r17,r17,4
    9b78:	10c6b03a 	or	r3,r2,r3
    9b7c:	88ffff15 	stw	r3,-4(r17)
    9b80:	b5800104 	addi	r22,r22,4
    9b84:	b13fff17 	ldw	r4,-4(r22)
    9b88:	acc00104 	addi	r19,r21,4
    9b8c:	900b883a 	mov	r5,r18
    9b90:	2008d43a 	srli	r4,r4,16
    9b94:	9c000017 	ldw	r16,0(r19)
    9b98:	0000eb00 	call	eb0 <__mulsi3>
    9b9c:	b806d43a 	srli	r3,r23,16
    9ba0:	813fffcc 	andi	r4,r16,65535
    9ba4:	1105883a 	add	r2,r2,r4
    9ba8:	10f9883a 	add	fp,r2,r3
    9bac:	e02ed43a 	srli	r23,fp,16
    9bb0:	b53fe736 	bltu	r22,r20,9b50 <__alt_mem_Onchip_SRAM+0xf8009b50>
    9bb4:	af000115 	stw	fp,4(r21)
    9bb8:	d8c00017 	ldw	r3,0(sp)
    9bbc:	d9000517 	ldw	r4,20(sp)
    9bc0:	18c00104 	addi	r3,r3,4
    9bc4:	d8c00015 	stw	r3,0(sp)
    9bc8:	d8c00117 	ldw	r3,4(sp)
    9bcc:	18c00104 	addi	r3,r3,4
    9bd0:	d8c00115 	stw	r3,4(sp)
    9bd4:	d8c00017 	ldw	r3,0(sp)
    9bd8:	193fb136 	bltu	r3,r4,9aa0 <__alt_mem_Onchip_SRAM+0xf8009aa0>
    9bdc:	d8c00217 	ldw	r3,8(sp)
    9be0:	00c00c0e 	bge	zero,r3,9c14 <__multiply+0x24c>
    9be4:	d8c00317 	ldw	r3,12(sp)
    9be8:	18bfff17 	ldw	r2,-4(r3)
    9bec:	1d7fff04 	addi	r21,r3,-4
    9bf0:	10000326 	beq	r2,zero,9c00 <__multiply+0x238>
    9bf4:	00000706 	br	9c14 <__multiply+0x24c>
    9bf8:	a8800017 	ldw	r2,0(r21)
    9bfc:	1000051e 	bne	r2,zero,9c14 <__multiply+0x24c>
    9c00:	d8c00217 	ldw	r3,8(sp)
    9c04:	ad7fff04 	addi	r21,r21,-4
    9c08:	18ffffc4 	addi	r3,r3,-1
    9c0c:	d8c00215 	stw	r3,8(sp)
    9c10:	183ff91e 	bne	r3,zero,9bf8 <__alt_mem_Onchip_SRAM+0xf8009bf8>
    9c14:	d8c00617 	ldw	r3,24(sp)
    9c18:	d9000217 	ldw	r4,8(sp)
    9c1c:	1805883a 	mov	r2,r3
    9c20:	19000415 	stw	r4,16(r3)
    9c24:	dfc01017 	ldw	ra,64(sp)
    9c28:	df000f17 	ldw	fp,60(sp)
    9c2c:	ddc00e17 	ldw	r23,56(sp)
    9c30:	dd800d17 	ldw	r22,52(sp)
    9c34:	dd400c17 	ldw	r21,48(sp)
    9c38:	dd000b17 	ldw	r20,44(sp)
    9c3c:	dcc00a17 	ldw	r19,40(sp)
    9c40:	dc800917 	ldw	r18,36(sp)
    9c44:	dc400817 	ldw	r17,32(sp)
    9c48:	dc000717 	ldw	r16,28(sp)
    9c4c:	dec01104 	addi	sp,sp,68
    9c50:	f800283a 	ret

00009c54 <__pow5mult>:
    9c54:	defffa04 	addi	sp,sp,-24
    9c58:	dcc00315 	stw	r19,12(sp)
    9c5c:	dc000015 	stw	r16,0(sp)
    9c60:	dfc00515 	stw	ra,20(sp)
    9c64:	dd000415 	stw	r20,16(sp)
    9c68:	dc800215 	stw	r18,8(sp)
    9c6c:	dc400115 	stw	r17,4(sp)
    9c70:	308000cc 	andi	r2,r6,3
    9c74:	3021883a 	mov	r16,r6
    9c78:	2027883a 	mov	r19,r4
    9c7c:	10002f1e 	bne	r2,zero,9d3c <__pow5mult+0xe8>
    9c80:	2825883a 	mov	r18,r5
    9c84:	8021d0ba 	srai	r16,r16,2
    9c88:	80001a26 	beq	r16,zero,9cf4 <__pow5mult+0xa0>
    9c8c:	9c401217 	ldw	r17,72(r19)
    9c90:	8800061e 	bne	r17,zero,9cac <__pow5mult+0x58>
    9c94:	00003406 	br	9d68 <__pow5mult+0x114>
    9c98:	8021d07a 	srai	r16,r16,1
    9c9c:	80001526 	beq	r16,zero,9cf4 <__pow5mult+0xa0>
    9ca0:	88800017 	ldw	r2,0(r17)
    9ca4:	10001c26 	beq	r2,zero,9d18 <__pow5mult+0xc4>
    9ca8:	1023883a 	mov	r17,r2
    9cac:	8080004c 	andi	r2,r16,1
    9cb0:	103ff926 	beq	r2,zero,9c98 <__alt_mem_Onchip_SRAM+0xf8009c98>
    9cb4:	880d883a 	mov	r6,r17
    9cb8:	900b883a 	mov	r5,r18
    9cbc:	9809883a 	mov	r4,r19
    9cc0:	00099c80 	call	99c8 <__multiply>
    9cc4:	90001b26 	beq	r18,zero,9d34 <__pow5mult+0xe0>
    9cc8:	91000117 	ldw	r4,4(r18)
    9ccc:	98c01317 	ldw	r3,76(r19)
    9cd0:	8021d07a 	srai	r16,r16,1
    9cd4:	2109883a 	add	r4,r4,r4
    9cd8:	2109883a 	add	r4,r4,r4
    9cdc:	1907883a 	add	r3,r3,r4
    9ce0:	19000017 	ldw	r4,0(r3)
    9ce4:	91000015 	stw	r4,0(r18)
    9ce8:	1c800015 	stw	r18,0(r3)
    9cec:	1025883a 	mov	r18,r2
    9cf0:	803feb1e 	bne	r16,zero,9ca0 <__alt_mem_Onchip_SRAM+0xf8009ca0>
    9cf4:	9005883a 	mov	r2,r18
    9cf8:	dfc00517 	ldw	ra,20(sp)
    9cfc:	dd000417 	ldw	r20,16(sp)
    9d00:	dcc00317 	ldw	r19,12(sp)
    9d04:	dc800217 	ldw	r18,8(sp)
    9d08:	dc400117 	ldw	r17,4(sp)
    9d0c:	dc000017 	ldw	r16,0(sp)
    9d10:	dec00604 	addi	sp,sp,24
    9d14:	f800283a 	ret
    9d18:	880d883a 	mov	r6,r17
    9d1c:	880b883a 	mov	r5,r17
    9d20:	9809883a 	mov	r4,r19
    9d24:	00099c80 	call	99c8 <__multiply>
    9d28:	88800015 	stw	r2,0(r17)
    9d2c:	10000015 	stw	zero,0(r2)
    9d30:	003fdd06 	br	9ca8 <__alt_mem_Onchip_SRAM+0xf8009ca8>
    9d34:	1025883a 	mov	r18,r2
    9d38:	003fd706 	br	9c98 <__alt_mem_Onchip_SRAM+0xf8009c98>
    9d3c:	10bfffc4 	addi	r2,r2,-1
    9d40:	1085883a 	add	r2,r2,r2
    9d44:	00c00074 	movhi	r3,1
    9d48:	18dada04 	addi	r3,r3,27496
    9d4c:	1085883a 	add	r2,r2,r2
    9d50:	1885883a 	add	r2,r3,r2
    9d54:	11800017 	ldw	r6,0(r2)
    9d58:	000f883a 	mov	r7,zero
    9d5c:	00096280 	call	9628 <__multadd>
    9d60:	1025883a 	mov	r18,r2
    9d64:	003fc706 	br	9c84 <__alt_mem_Onchip_SRAM+0xf8009c84>
    9d68:	05000044 	movi	r20,1
    9d6c:	a00b883a 	mov	r5,r20
    9d70:	9809883a 	mov	r4,r19
    9d74:	00095580 	call	9558 <_Balloc>
    9d78:	1023883a 	mov	r17,r2
    9d7c:	00809c44 	movi	r2,625
    9d80:	88800515 	stw	r2,20(r17)
    9d84:	8d000415 	stw	r20,16(r17)
    9d88:	9c401215 	stw	r17,72(r19)
    9d8c:	88000015 	stw	zero,0(r17)
    9d90:	003fc606 	br	9cac <__alt_mem_Onchip_SRAM+0xf8009cac>

00009d94 <__lshift>:
    9d94:	defff904 	addi	sp,sp,-28
    9d98:	dd400515 	stw	r21,20(sp)
    9d9c:	dcc00315 	stw	r19,12(sp)
    9da0:	302bd17a 	srai	r21,r6,5
    9da4:	2cc00417 	ldw	r19,16(r5)
    9da8:	28800217 	ldw	r2,8(r5)
    9dac:	dd000415 	stw	r20,16(sp)
    9db0:	ace7883a 	add	r19,r21,r19
    9db4:	dc800215 	stw	r18,8(sp)
    9db8:	dc400115 	stw	r17,4(sp)
    9dbc:	dc000015 	stw	r16,0(sp)
    9dc0:	dfc00615 	stw	ra,24(sp)
    9dc4:	9c000044 	addi	r16,r19,1
    9dc8:	2823883a 	mov	r17,r5
    9dcc:	3029883a 	mov	r20,r6
    9dd0:	2025883a 	mov	r18,r4
    9dd4:	29400117 	ldw	r5,4(r5)
    9dd8:	1400030e 	bge	r2,r16,9de8 <__lshift+0x54>
    9ddc:	1085883a 	add	r2,r2,r2
    9de0:	29400044 	addi	r5,r5,1
    9de4:	143ffd16 	blt	r2,r16,9ddc <__alt_mem_Onchip_SRAM+0xf8009ddc>
    9de8:	9009883a 	mov	r4,r18
    9dec:	00095580 	call	9558 <_Balloc>
    9df0:	10c00504 	addi	r3,r2,20
    9df4:	0540070e 	bge	zero,r21,9e14 <__lshift+0x80>
    9df8:	ad6b883a 	add	r21,r21,r21
    9dfc:	ad6b883a 	add	r21,r21,r21
    9e00:	1809883a 	mov	r4,r3
    9e04:	1d47883a 	add	r3,r3,r21
    9e08:	20000015 	stw	zero,0(r4)
    9e0c:	21000104 	addi	r4,r4,4
    9e10:	193ffd1e 	bne	r3,r4,9e08 <__alt_mem_Onchip_SRAM+0xf8009e08>
    9e14:	8a000417 	ldw	r8,16(r17)
    9e18:	89000504 	addi	r4,r17,20
    9e1c:	a18007cc 	andi	r6,r20,31
    9e20:	4211883a 	add	r8,r8,r8
    9e24:	4211883a 	add	r8,r8,r8
    9e28:	2211883a 	add	r8,r4,r8
    9e2c:	30002326 	beq	r6,zero,9ebc <__lshift+0x128>
    9e30:	02400804 	movi	r9,32
    9e34:	4993c83a 	sub	r9,r9,r6
    9e38:	000b883a 	mov	r5,zero
    9e3c:	21c00017 	ldw	r7,0(r4)
    9e40:	1815883a 	mov	r10,r3
    9e44:	18c00104 	addi	r3,r3,4
    9e48:	398e983a 	sll	r7,r7,r6
    9e4c:	21000104 	addi	r4,r4,4
    9e50:	394ab03a 	or	r5,r7,r5
    9e54:	197fff15 	stw	r5,-4(r3)
    9e58:	217fff17 	ldw	r5,-4(r4)
    9e5c:	2a4ad83a 	srl	r5,r5,r9
    9e60:	223ff636 	bltu	r4,r8,9e3c <__alt_mem_Onchip_SRAM+0xf8009e3c>
    9e64:	51400115 	stw	r5,4(r10)
    9e68:	28001a1e 	bne	r5,zero,9ed4 <__lshift+0x140>
    9e6c:	843fffc4 	addi	r16,r16,-1
    9e70:	14000415 	stw	r16,16(r2)
    9e74:	88000826 	beq	r17,zero,9e98 <__lshift+0x104>
    9e78:	89000117 	ldw	r4,4(r17)
    9e7c:	90c01317 	ldw	r3,76(r18)
    9e80:	2109883a 	add	r4,r4,r4
    9e84:	2109883a 	add	r4,r4,r4
    9e88:	1907883a 	add	r3,r3,r4
    9e8c:	19000017 	ldw	r4,0(r3)
    9e90:	89000015 	stw	r4,0(r17)
    9e94:	1c400015 	stw	r17,0(r3)
    9e98:	dfc00617 	ldw	ra,24(sp)
    9e9c:	dd400517 	ldw	r21,20(sp)
    9ea0:	dd000417 	ldw	r20,16(sp)
    9ea4:	dcc00317 	ldw	r19,12(sp)
    9ea8:	dc800217 	ldw	r18,8(sp)
    9eac:	dc400117 	ldw	r17,4(sp)
    9eb0:	dc000017 	ldw	r16,0(sp)
    9eb4:	dec00704 	addi	sp,sp,28
    9eb8:	f800283a 	ret
    9ebc:	21400017 	ldw	r5,0(r4)
    9ec0:	18c00104 	addi	r3,r3,4
    9ec4:	21000104 	addi	r4,r4,4
    9ec8:	197fff15 	stw	r5,-4(r3)
    9ecc:	223ffb36 	bltu	r4,r8,9ebc <__alt_mem_Onchip_SRAM+0xf8009ebc>
    9ed0:	003fe606 	br	9e6c <__alt_mem_Onchip_SRAM+0xf8009e6c>
    9ed4:	9c000084 	addi	r16,r19,2
    9ed8:	003fe406 	br	9e6c <__alt_mem_Onchip_SRAM+0xf8009e6c>

00009edc <__mcmp>:
    9edc:	20800417 	ldw	r2,16(r4)
    9ee0:	28c00417 	ldw	r3,16(r5)
    9ee4:	10c5c83a 	sub	r2,r2,r3
    9ee8:	1000111e 	bne	r2,zero,9f30 <__mcmp+0x54>
    9eec:	18c7883a 	add	r3,r3,r3
    9ef0:	18c7883a 	add	r3,r3,r3
    9ef4:	21000504 	addi	r4,r4,20
    9ef8:	29400504 	addi	r5,r5,20
    9efc:	20c5883a 	add	r2,r4,r3
    9f00:	28cb883a 	add	r5,r5,r3
    9f04:	00000106 	br	9f0c <__mcmp+0x30>
    9f08:	20800a2e 	bgeu	r4,r2,9f34 <__mcmp+0x58>
    9f0c:	10bfff04 	addi	r2,r2,-4
    9f10:	297fff04 	addi	r5,r5,-4
    9f14:	11800017 	ldw	r6,0(r2)
    9f18:	28c00017 	ldw	r3,0(r5)
    9f1c:	30fffa26 	beq	r6,r3,9f08 <__alt_mem_Onchip_SRAM+0xf8009f08>
    9f20:	30c00236 	bltu	r6,r3,9f2c <__mcmp+0x50>
    9f24:	00800044 	movi	r2,1
    9f28:	f800283a 	ret
    9f2c:	00bfffc4 	movi	r2,-1
    9f30:	f800283a 	ret
    9f34:	0005883a 	mov	r2,zero
    9f38:	f800283a 	ret

00009f3c <__mdiff>:
    9f3c:	28c00417 	ldw	r3,16(r5)
    9f40:	30800417 	ldw	r2,16(r6)
    9f44:	defffa04 	addi	sp,sp,-24
    9f48:	dcc00315 	stw	r19,12(sp)
    9f4c:	dc800215 	stw	r18,8(sp)
    9f50:	dfc00515 	stw	ra,20(sp)
    9f54:	dd000415 	stw	r20,16(sp)
    9f58:	dc400115 	stw	r17,4(sp)
    9f5c:	dc000015 	stw	r16,0(sp)
    9f60:	1887c83a 	sub	r3,r3,r2
    9f64:	2825883a 	mov	r18,r5
    9f68:	3027883a 	mov	r19,r6
    9f6c:	1800141e 	bne	r3,zero,9fc0 <__mdiff+0x84>
    9f70:	1085883a 	add	r2,r2,r2
    9f74:	1085883a 	add	r2,r2,r2
    9f78:	2a000504 	addi	r8,r5,20
    9f7c:	34000504 	addi	r16,r6,20
    9f80:	4087883a 	add	r3,r8,r2
    9f84:	8085883a 	add	r2,r16,r2
    9f88:	00000106 	br	9f90 <__mdiff+0x54>
    9f8c:	40c0592e 	bgeu	r8,r3,a0f4 <__mdiff+0x1b8>
    9f90:	18ffff04 	addi	r3,r3,-4
    9f94:	10bfff04 	addi	r2,r2,-4
    9f98:	19c00017 	ldw	r7,0(r3)
    9f9c:	11400017 	ldw	r5,0(r2)
    9fa0:	397ffa26 	beq	r7,r5,9f8c <__alt_mem_Onchip_SRAM+0xf8009f8c>
    9fa4:	3940592e 	bgeu	r7,r5,a10c <__mdiff+0x1d0>
    9fa8:	9005883a 	mov	r2,r18
    9fac:	4023883a 	mov	r17,r8
    9fb0:	9825883a 	mov	r18,r19
    9fb4:	05000044 	movi	r20,1
    9fb8:	1027883a 	mov	r19,r2
    9fbc:	00000406 	br	9fd0 <__mdiff+0x94>
    9fc0:	18005616 	blt	r3,zero,a11c <__mdiff+0x1e0>
    9fc4:	34400504 	addi	r17,r6,20
    9fc8:	2c000504 	addi	r16,r5,20
    9fcc:	0029883a 	mov	r20,zero
    9fd0:	91400117 	ldw	r5,4(r18)
    9fd4:	00095580 	call	9558 <_Balloc>
    9fd8:	92400417 	ldw	r9,16(r18)
    9fdc:	9b000417 	ldw	r12,16(r19)
    9fe0:	12c00504 	addi	r11,r2,20
    9fe4:	4a51883a 	add	r8,r9,r9
    9fe8:	6319883a 	add	r12,r12,r12
    9fec:	4211883a 	add	r8,r8,r8
    9ff0:	6319883a 	add	r12,r12,r12
    9ff4:	15000315 	stw	r20,12(r2)
    9ff8:	8211883a 	add	r8,r16,r8
    9ffc:	8b19883a 	add	r12,r17,r12
    a000:	0007883a 	mov	r3,zero
    a004:	81400017 	ldw	r5,0(r16)
    a008:	89c00017 	ldw	r7,0(r17)
    a00c:	59800104 	addi	r6,r11,4
    a010:	293fffcc 	andi	r4,r5,65535
    a014:	20c7883a 	add	r3,r4,r3
    a018:	393fffcc 	andi	r4,r7,65535
    a01c:	1909c83a 	sub	r4,r3,r4
    a020:	280ad43a 	srli	r5,r5,16
    a024:	380ed43a 	srli	r7,r7,16
    a028:	2007d43a 	srai	r3,r4,16
    a02c:	213fffcc 	andi	r4,r4,65535
    a030:	29cbc83a 	sub	r5,r5,r7
    a034:	28c7883a 	add	r3,r5,r3
    a038:	180a943a 	slli	r5,r3,16
    a03c:	8c400104 	addi	r17,r17,4
    a040:	84000104 	addi	r16,r16,4
    a044:	2908b03a 	or	r4,r5,r4
    a048:	59000015 	stw	r4,0(r11)
    a04c:	1807d43a 	srai	r3,r3,16
    a050:	3015883a 	mov	r10,r6
    a054:	3017883a 	mov	r11,r6
    a058:	8b3fea36 	bltu	r17,r12,a004 <__alt_mem_Onchip_SRAM+0xf800a004>
    a05c:	8200162e 	bgeu	r16,r8,a0b8 <__mdiff+0x17c>
    a060:	8017883a 	mov	r11,r16
    a064:	59400017 	ldw	r5,0(r11)
    a068:	31800104 	addi	r6,r6,4
    a06c:	5ac00104 	addi	r11,r11,4
    a070:	293fffcc 	andi	r4,r5,65535
    a074:	20c7883a 	add	r3,r4,r3
    a078:	280ed43a 	srli	r7,r5,16
    a07c:	180bd43a 	srai	r5,r3,16
    a080:	193fffcc 	andi	r4,r3,65535
    a084:	3947883a 	add	r3,r7,r5
    a088:	180a943a 	slli	r5,r3,16
    a08c:	1807d43a 	srai	r3,r3,16
    a090:	2908b03a 	or	r4,r5,r4
    a094:	313fff15 	stw	r4,-4(r6)
    a098:	5a3ff236 	bltu	r11,r8,a064 <__alt_mem_Onchip_SRAM+0xf800a064>
    a09c:	0406303a 	nor	r3,zero,r16
    a0a0:	1a07883a 	add	r3,r3,r8
    a0a4:	1806d0ba 	srli	r3,r3,2
    a0a8:	18c00044 	addi	r3,r3,1
    a0ac:	18c7883a 	add	r3,r3,r3
    a0b0:	18c7883a 	add	r3,r3,r3
    a0b4:	50d5883a 	add	r10,r10,r3
    a0b8:	50ffff04 	addi	r3,r10,-4
    a0bc:	2000041e 	bne	r4,zero,a0d0 <__mdiff+0x194>
    a0c0:	18ffff04 	addi	r3,r3,-4
    a0c4:	19000017 	ldw	r4,0(r3)
    a0c8:	4a7fffc4 	addi	r9,r9,-1
    a0cc:	203ffc26 	beq	r4,zero,a0c0 <__alt_mem_Onchip_SRAM+0xf800a0c0>
    a0d0:	12400415 	stw	r9,16(r2)
    a0d4:	dfc00517 	ldw	ra,20(sp)
    a0d8:	dd000417 	ldw	r20,16(sp)
    a0dc:	dcc00317 	ldw	r19,12(sp)
    a0e0:	dc800217 	ldw	r18,8(sp)
    a0e4:	dc400117 	ldw	r17,4(sp)
    a0e8:	dc000017 	ldw	r16,0(sp)
    a0ec:	dec00604 	addi	sp,sp,24
    a0f0:	f800283a 	ret
    a0f4:	000b883a 	mov	r5,zero
    a0f8:	00095580 	call	9558 <_Balloc>
    a0fc:	00c00044 	movi	r3,1
    a100:	10c00415 	stw	r3,16(r2)
    a104:	10000515 	stw	zero,20(r2)
    a108:	003ff206 	br	a0d4 <__alt_mem_Onchip_SRAM+0xf800a0d4>
    a10c:	8023883a 	mov	r17,r16
    a110:	0029883a 	mov	r20,zero
    a114:	4021883a 	mov	r16,r8
    a118:	003fad06 	br	9fd0 <__alt_mem_Onchip_SRAM+0xf8009fd0>
    a11c:	9005883a 	mov	r2,r18
    a120:	94400504 	addi	r17,r18,20
    a124:	9c000504 	addi	r16,r19,20
    a128:	9825883a 	mov	r18,r19
    a12c:	05000044 	movi	r20,1
    a130:	1027883a 	mov	r19,r2
    a134:	003fa606 	br	9fd0 <__alt_mem_Onchip_SRAM+0xf8009fd0>

0000a138 <__ulp>:
    a138:	295ffc2c 	andhi	r5,r5,32752
    a13c:	00bf3034 	movhi	r2,64704
    a140:	2887883a 	add	r3,r5,r2
    a144:	00c0020e 	bge	zero,r3,a150 <__ulp+0x18>
    a148:	0005883a 	mov	r2,zero
    a14c:	f800283a 	ret
    a150:	00c7c83a 	sub	r3,zero,r3
    a154:	1807d53a 	srai	r3,r3,20
    a158:	008004c4 	movi	r2,19
    a15c:	10c00b0e 	bge	r2,r3,a18c <__ulp+0x54>
    a160:	18bffb04 	addi	r2,r3,-20
    a164:	01000784 	movi	r4,30
    a168:	0007883a 	mov	r3,zero
    a16c:	20800516 	blt	r4,r2,a184 <__ulp+0x4c>
    a170:	010007c4 	movi	r4,31
    a174:	2089c83a 	sub	r4,r4,r2
    a178:	00800044 	movi	r2,1
    a17c:	1104983a 	sll	r2,r2,r4
    a180:	f800283a 	ret
    a184:	00800044 	movi	r2,1
    a188:	f800283a 	ret
    a18c:	01400234 	movhi	r5,8
    a190:	28c7d83a 	sra	r3,r5,r3
    a194:	0005883a 	mov	r2,zero
    a198:	f800283a 	ret

0000a19c <__b2d>:
    a19c:	defffa04 	addi	sp,sp,-24
    a1a0:	dc000015 	stw	r16,0(sp)
    a1a4:	24000417 	ldw	r16,16(r4)
    a1a8:	dc400115 	stw	r17,4(sp)
    a1ac:	24400504 	addi	r17,r4,20
    a1b0:	8421883a 	add	r16,r16,r16
    a1b4:	8421883a 	add	r16,r16,r16
    a1b8:	8c21883a 	add	r16,r17,r16
    a1bc:	dc800215 	stw	r18,8(sp)
    a1c0:	84bfff17 	ldw	r18,-4(r16)
    a1c4:	dd000415 	stw	r20,16(sp)
    a1c8:	dcc00315 	stw	r19,12(sp)
    a1cc:	9009883a 	mov	r4,r18
    a1d0:	2829883a 	mov	r20,r5
    a1d4:	dfc00515 	stw	ra,20(sp)
    a1d8:	00098740 	call	9874 <__hi0bits>
    a1dc:	00c00804 	movi	r3,32
    a1e0:	1889c83a 	sub	r4,r3,r2
    a1e4:	a1000015 	stw	r4,0(r20)
    a1e8:	01000284 	movi	r4,10
    a1ec:	84ffff04 	addi	r19,r16,-4
    a1f0:	20801216 	blt	r4,r2,a23c <__b2d+0xa0>
    a1f4:	018002c4 	movi	r6,11
    a1f8:	308dc83a 	sub	r6,r6,r2
    a1fc:	9186d83a 	srl	r3,r18,r6
    a200:	18cffc34 	orhi	r3,r3,16368
    a204:	8cc0212e 	bgeu	r17,r19,a28c <__b2d+0xf0>
    a208:	813ffe17 	ldw	r4,-8(r16)
    a20c:	218cd83a 	srl	r6,r4,r6
    a210:	10800544 	addi	r2,r2,21
    a214:	9084983a 	sll	r2,r18,r2
    a218:	1184b03a 	or	r2,r2,r6
    a21c:	dfc00517 	ldw	ra,20(sp)
    a220:	dd000417 	ldw	r20,16(sp)
    a224:	dcc00317 	ldw	r19,12(sp)
    a228:	dc800217 	ldw	r18,8(sp)
    a22c:	dc400117 	ldw	r17,4(sp)
    a230:	dc000017 	ldw	r16,0(sp)
    a234:	dec00604 	addi	sp,sp,24
    a238:	f800283a 	ret
    a23c:	8cc00f2e 	bgeu	r17,r19,a27c <__b2d+0xe0>
    a240:	117ffd44 	addi	r5,r2,-11
    a244:	80bffe17 	ldw	r2,-8(r16)
    a248:	28000e26 	beq	r5,zero,a284 <__b2d+0xe8>
    a24c:	1949c83a 	sub	r4,r3,r5
    a250:	9164983a 	sll	r18,r18,r5
    a254:	1106d83a 	srl	r3,r2,r4
    a258:	81bffe04 	addi	r6,r16,-8
    a25c:	948ffc34 	orhi	r18,r18,16368
    a260:	90c6b03a 	or	r3,r18,r3
    a264:	89800e2e 	bgeu	r17,r6,a2a0 <__b2d+0x104>
    a268:	81bffd17 	ldw	r6,-12(r16)
    a26c:	1144983a 	sll	r2,r2,r5
    a270:	310ad83a 	srl	r5,r6,r4
    a274:	2884b03a 	or	r2,r5,r2
    a278:	003fe806 	br	a21c <__alt_mem_Onchip_SRAM+0xf800a21c>
    a27c:	10bffd44 	addi	r2,r2,-11
    a280:	1000041e 	bne	r2,zero,a294 <__b2d+0xf8>
    a284:	90cffc34 	orhi	r3,r18,16368
    a288:	003fe406 	br	a21c <__alt_mem_Onchip_SRAM+0xf800a21c>
    a28c:	000d883a 	mov	r6,zero
    a290:	003fdf06 	br	a210 <__alt_mem_Onchip_SRAM+0xf800a210>
    a294:	90a4983a 	sll	r18,r18,r2
    a298:	0005883a 	mov	r2,zero
    a29c:	003ff906 	br	a284 <__alt_mem_Onchip_SRAM+0xf800a284>
    a2a0:	1144983a 	sll	r2,r2,r5
    a2a4:	003fdd06 	br	a21c <__alt_mem_Onchip_SRAM+0xf800a21c>

0000a2a8 <__d2b>:
    a2a8:	defff804 	addi	sp,sp,-32
    a2ac:	dc000215 	stw	r16,8(sp)
    a2b0:	3021883a 	mov	r16,r6
    a2b4:	dc400315 	stw	r17,12(sp)
    a2b8:	8022907a 	slli	r17,r16,1
    a2bc:	dd000615 	stw	r20,24(sp)
    a2c0:	2829883a 	mov	r20,r5
    a2c4:	01400044 	movi	r5,1
    a2c8:	dcc00515 	stw	r19,20(sp)
    a2cc:	dc800415 	stw	r18,16(sp)
    a2d0:	dfc00715 	stw	ra,28(sp)
    a2d4:	3825883a 	mov	r18,r7
    a2d8:	8822d57a 	srli	r17,r17,21
    a2dc:	00095580 	call	9558 <_Balloc>
    a2e0:	1027883a 	mov	r19,r2
    a2e4:	00800434 	movhi	r2,16
    a2e8:	10bfffc4 	addi	r2,r2,-1
    a2ec:	808c703a 	and	r6,r16,r2
    a2f0:	88000126 	beq	r17,zero,a2f8 <__d2b+0x50>
    a2f4:	31800434 	orhi	r6,r6,16
    a2f8:	d9800015 	stw	r6,0(sp)
    a2fc:	a0002426 	beq	r20,zero,a390 <__d2b+0xe8>
    a300:	d9000104 	addi	r4,sp,4
    a304:	dd000115 	stw	r20,4(sp)
    a308:	00098dc0 	call	98dc <__lo0bits>
    a30c:	d8c00017 	ldw	r3,0(sp)
    a310:	10002f1e 	bne	r2,zero,a3d0 <__d2b+0x128>
    a314:	d9000117 	ldw	r4,4(sp)
    a318:	99000515 	stw	r4,20(r19)
    a31c:	1821003a 	cmpeq	r16,r3,zero
    a320:	01000084 	movi	r4,2
    a324:	2421c83a 	sub	r16,r4,r16
    a328:	98c00615 	stw	r3,24(r19)
    a32c:	9c000415 	stw	r16,16(r19)
    a330:	88001f1e 	bne	r17,zero,a3b0 <__d2b+0x108>
    a334:	10bef384 	addi	r2,r2,-1074
    a338:	90800015 	stw	r2,0(r18)
    a33c:	00900034 	movhi	r2,16384
    a340:	10bfffc4 	addi	r2,r2,-1
    a344:	8085883a 	add	r2,r16,r2
    a348:	1085883a 	add	r2,r2,r2
    a34c:	1085883a 	add	r2,r2,r2
    a350:	9885883a 	add	r2,r19,r2
    a354:	11000517 	ldw	r4,20(r2)
    a358:	8020917a 	slli	r16,r16,5
    a35c:	00098740 	call	9874 <__hi0bits>
    a360:	d8c00817 	ldw	r3,32(sp)
    a364:	8085c83a 	sub	r2,r16,r2
    a368:	18800015 	stw	r2,0(r3)
    a36c:	9805883a 	mov	r2,r19
    a370:	dfc00717 	ldw	ra,28(sp)
    a374:	dd000617 	ldw	r20,24(sp)
    a378:	dcc00517 	ldw	r19,20(sp)
    a37c:	dc800417 	ldw	r18,16(sp)
    a380:	dc400317 	ldw	r17,12(sp)
    a384:	dc000217 	ldw	r16,8(sp)
    a388:	dec00804 	addi	sp,sp,32
    a38c:	f800283a 	ret
    a390:	d809883a 	mov	r4,sp
    a394:	00098dc0 	call	98dc <__lo0bits>
    a398:	d8c00017 	ldw	r3,0(sp)
    a39c:	04000044 	movi	r16,1
    a3a0:	9c000415 	stw	r16,16(r19)
    a3a4:	98c00515 	stw	r3,20(r19)
    a3a8:	10800804 	addi	r2,r2,32
    a3ac:	883fe126 	beq	r17,zero,a334 <__alt_mem_Onchip_SRAM+0xf800a334>
    a3b0:	00c00d44 	movi	r3,53
    a3b4:	8c7ef344 	addi	r17,r17,-1075
    a3b8:	88a3883a 	add	r17,r17,r2
    a3bc:	1885c83a 	sub	r2,r3,r2
    a3c0:	d8c00817 	ldw	r3,32(sp)
    a3c4:	94400015 	stw	r17,0(r18)
    a3c8:	18800015 	stw	r2,0(r3)
    a3cc:	003fe706 	br	a36c <__alt_mem_Onchip_SRAM+0xf800a36c>
    a3d0:	01000804 	movi	r4,32
    a3d4:	2089c83a 	sub	r4,r4,r2
    a3d8:	1908983a 	sll	r4,r3,r4
    a3dc:	d9400117 	ldw	r5,4(sp)
    a3e0:	1886d83a 	srl	r3,r3,r2
    a3e4:	2148b03a 	or	r4,r4,r5
    a3e8:	99000515 	stw	r4,20(r19)
    a3ec:	d8c00015 	stw	r3,0(sp)
    a3f0:	003fca06 	br	a31c <__alt_mem_Onchip_SRAM+0xf800a31c>

0000a3f4 <__ratio>:
    a3f4:	defff904 	addi	sp,sp,-28
    a3f8:	dc400315 	stw	r17,12(sp)
    a3fc:	2823883a 	mov	r17,r5
    a400:	d9400104 	addi	r5,sp,4
    a404:	dfc00615 	stw	ra,24(sp)
    a408:	dcc00515 	stw	r19,20(sp)
    a40c:	dc800415 	stw	r18,16(sp)
    a410:	2027883a 	mov	r19,r4
    a414:	dc000215 	stw	r16,8(sp)
    a418:	000a19c0 	call	a19c <__b2d>
    a41c:	d80b883a 	mov	r5,sp
    a420:	8809883a 	mov	r4,r17
    a424:	1025883a 	mov	r18,r2
    a428:	1821883a 	mov	r16,r3
    a42c:	000a19c0 	call	a19c <__b2d>
    a430:	8a000417 	ldw	r8,16(r17)
    a434:	99000417 	ldw	r4,16(r19)
    a438:	d9400117 	ldw	r5,4(sp)
    a43c:	2209c83a 	sub	r4,r4,r8
    a440:	2010917a 	slli	r8,r4,5
    a444:	d9000017 	ldw	r4,0(sp)
    a448:	2909c83a 	sub	r4,r5,r4
    a44c:	4109883a 	add	r4,r8,r4
    a450:	01000e0e 	bge	zero,r4,a48c <__ratio+0x98>
    a454:	2008953a 	slli	r4,r4,20
    a458:	2421883a 	add	r16,r4,r16
    a45c:	100d883a 	mov	r6,r2
    a460:	180f883a 	mov	r7,r3
    a464:	9009883a 	mov	r4,r18
    a468:	800b883a 	mov	r5,r16
    a46c:	000fae80 	call	fae8 <__divdf3>
    a470:	dfc00617 	ldw	ra,24(sp)
    a474:	dcc00517 	ldw	r19,20(sp)
    a478:	dc800417 	ldw	r18,16(sp)
    a47c:	dc400317 	ldw	r17,12(sp)
    a480:	dc000217 	ldw	r16,8(sp)
    a484:	dec00704 	addi	sp,sp,28
    a488:	f800283a 	ret
    a48c:	2008953a 	slli	r4,r4,20
    a490:	1907c83a 	sub	r3,r3,r4
    a494:	003ff106 	br	a45c <__alt_mem_Onchip_SRAM+0xf800a45c>

0000a498 <_mprec_log10>:
    a498:	defffe04 	addi	sp,sp,-8
    a49c:	dc000015 	stw	r16,0(sp)
    a4a0:	dfc00115 	stw	ra,4(sp)
    a4a4:	008005c4 	movi	r2,23
    a4a8:	2021883a 	mov	r16,r4
    a4ac:	11000d0e 	bge	r2,r4,a4e4 <_mprec_log10+0x4c>
    a4b0:	0005883a 	mov	r2,zero
    a4b4:	00cffc34 	movhi	r3,16368
    a4b8:	843fffc4 	addi	r16,r16,-1
    a4bc:	000d883a 	mov	r6,zero
    a4c0:	01d00934 	movhi	r7,16420
    a4c4:	1009883a 	mov	r4,r2
    a4c8:	180b883a 	mov	r5,r3
    a4cc:	00107100 	call	10710 <__muldf3>
    a4d0:	803ff91e 	bne	r16,zero,a4b8 <__alt_mem_Onchip_SRAM+0xf800a4b8>
    a4d4:	dfc00117 	ldw	ra,4(sp)
    a4d8:	dc000017 	ldw	r16,0(sp)
    a4dc:	dec00204 	addi	sp,sp,8
    a4e0:	f800283a 	ret
    a4e4:	202090fa 	slli	r16,r4,3
    a4e8:	00800074 	movhi	r2,1
    a4ec:	109af104 	addi	r2,r2,27588
    a4f0:	1421883a 	add	r16,r2,r16
    a4f4:	80800017 	ldw	r2,0(r16)
    a4f8:	80c00117 	ldw	r3,4(r16)
    a4fc:	dfc00117 	ldw	ra,4(sp)
    a500:	dc000017 	ldw	r16,0(sp)
    a504:	dec00204 	addi	sp,sp,8
    a508:	f800283a 	ret

0000a50c <__copybits>:
    a50c:	297fffc4 	addi	r5,r5,-1
    a510:	280fd17a 	srai	r7,r5,5
    a514:	30c00417 	ldw	r3,16(r6)
    a518:	30800504 	addi	r2,r6,20
    a51c:	39c00044 	addi	r7,r7,1
    a520:	18c7883a 	add	r3,r3,r3
    a524:	39cf883a 	add	r7,r7,r7
    a528:	18c7883a 	add	r3,r3,r3
    a52c:	39cf883a 	add	r7,r7,r7
    a530:	10c7883a 	add	r3,r2,r3
    a534:	21cf883a 	add	r7,r4,r7
    a538:	10c00d2e 	bgeu	r2,r3,a570 <__copybits+0x64>
    a53c:	200b883a 	mov	r5,r4
    a540:	12000017 	ldw	r8,0(r2)
    a544:	29400104 	addi	r5,r5,4
    a548:	10800104 	addi	r2,r2,4
    a54c:	2a3fff15 	stw	r8,-4(r5)
    a550:	10fffb36 	bltu	r2,r3,a540 <__alt_mem_Onchip_SRAM+0xf800a540>
    a554:	1985c83a 	sub	r2,r3,r6
    a558:	10bffac4 	addi	r2,r2,-21
    a55c:	1004d0ba 	srli	r2,r2,2
    a560:	10800044 	addi	r2,r2,1
    a564:	1085883a 	add	r2,r2,r2
    a568:	1085883a 	add	r2,r2,r2
    a56c:	2089883a 	add	r4,r4,r2
    a570:	21c0032e 	bgeu	r4,r7,a580 <__copybits+0x74>
    a574:	20000015 	stw	zero,0(r4)
    a578:	21000104 	addi	r4,r4,4
    a57c:	21fffd36 	bltu	r4,r7,a574 <__alt_mem_Onchip_SRAM+0xf800a574>
    a580:	f800283a 	ret

0000a584 <__any_on>:
    a584:	20c00417 	ldw	r3,16(r4)
    a588:	2805d17a 	srai	r2,r5,5
    a58c:	21000504 	addi	r4,r4,20
    a590:	18800d0e 	bge	r3,r2,a5c8 <__any_on+0x44>
    a594:	18c7883a 	add	r3,r3,r3
    a598:	18c7883a 	add	r3,r3,r3
    a59c:	20c7883a 	add	r3,r4,r3
    a5a0:	20c0192e 	bgeu	r4,r3,a608 <__any_on+0x84>
    a5a4:	18bfff17 	ldw	r2,-4(r3)
    a5a8:	18ffff04 	addi	r3,r3,-4
    a5ac:	1000041e 	bne	r2,zero,a5c0 <__any_on+0x3c>
    a5b0:	20c0142e 	bgeu	r4,r3,a604 <__any_on+0x80>
    a5b4:	18ffff04 	addi	r3,r3,-4
    a5b8:	19400017 	ldw	r5,0(r3)
    a5bc:	283ffc26 	beq	r5,zero,a5b0 <__alt_mem_Onchip_SRAM+0xf800a5b0>
    a5c0:	00800044 	movi	r2,1
    a5c4:	f800283a 	ret
    a5c8:	10c00a0e 	bge	r2,r3,a5f4 <__any_on+0x70>
    a5cc:	1085883a 	add	r2,r2,r2
    a5d0:	1085883a 	add	r2,r2,r2
    a5d4:	294007cc 	andi	r5,r5,31
    a5d8:	2087883a 	add	r3,r4,r2
    a5dc:	283ff026 	beq	r5,zero,a5a0 <__alt_mem_Onchip_SRAM+0xf800a5a0>
    a5e0:	19800017 	ldw	r6,0(r3)
    a5e4:	3144d83a 	srl	r2,r6,r5
    a5e8:	114a983a 	sll	r5,r2,r5
    a5ec:	317ff41e 	bne	r6,r5,a5c0 <__alt_mem_Onchip_SRAM+0xf800a5c0>
    a5f0:	003feb06 	br	a5a0 <__alt_mem_Onchip_SRAM+0xf800a5a0>
    a5f4:	1085883a 	add	r2,r2,r2
    a5f8:	1085883a 	add	r2,r2,r2
    a5fc:	2087883a 	add	r3,r4,r2
    a600:	003fe706 	br	a5a0 <__alt_mem_Onchip_SRAM+0xf800a5a0>
    a604:	f800283a 	ret
    a608:	0005883a 	mov	r2,zero
    a60c:	f800283a 	ret

0000a610 <_putc_r>:
    a610:	defffc04 	addi	sp,sp,-16
    a614:	dc000215 	stw	r16,8(sp)
    a618:	dfc00315 	stw	ra,12(sp)
    a61c:	2021883a 	mov	r16,r4
    a620:	20000226 	beq	r4,zero,a62c <_putc_r+0x1c>
    a624:	20800e17 	ldw	r2,56(r4)
    a628:	10001b26 	beq	r2,zero,a698 <_putc_r+0x88>
    a62c:	30800217 	ldw	r2,8(r6)
    a630:	10bfffc4 	addi	r2,r2,-1
    a634:	30800215 	stw	r2,8(r6)
    a638:	10000a16 	blt	r2,zero,a664 <_putc_r+0x54>
    a63c:	30800017 	ldw	r2,0(r6)
    a640:	11400005 	stb	r5,0(r2)
    a644:	30800017 	ldw	r2,0(r6)
    a648:	10c00044 	addi	r3,r2,1
    a64c:	30c00015 	stw	r3,0(r6)
    a650:	10800003 	ldbu	r2,0(r2)
    a654:	dfc00317 	ldw	ra,12(sp)
    a658:	dc000217 	ldw	r16,8(sp)
    a65c:	dec00404 	addi	sp,sp,16
    a660:	f800283a 	ret
    a664:	30c00617 	ldw	r3,24(r6)
    a668:	10c00616 	blt	r2,r3,a684 <_putc_r+0x74>
    a66c:	30800017 	ldw	r2,0(r6)
    a670:	00c00284 	movi	r3,10
    a674:	11400005 	stb	r5,0(r2)
    a678:	30800017 	ldw	r2,0(r6)
    a67c:	11400003 	ldbu	r5,0(r2)
    a680:	28fff11e 	bne	r5,r3,a648 <__alt_mem_Onchip_SRAM+0xf800a648>
    a684:	8009883a 	mov	r4,r16
    a688:	dfc00317 	ldw	ra,12(sp)
    a68c:	dc000217 	ldw	r16,8(sp)
    a690:	dec00404 	addi	sp,sp,16
    a694:	000dc241 	jmpi	dc24 <__swbuf_r>
    a698:	d9400015 	stw	r5,0(sp)
    a69c:	d9800115 	stw	r6,4(sp)
    a6a0:	0007ad40 	call	7ad4 <__sinit>
    a6a4:	d9800117 	ldw	r6,4(sp)
    a6a8:	d9400017 	ldw	r5,0(sp)
    a6ac:	003fdf06 	br	a62c <__alt_mem_Onchip_SRAM+0xf800a62c>

0000a6b0 <putc>:
    a6b0:	008000b4 	movhi	r2,2
    a6b4:	defffc04 	addi	sp,sp,-16
    a6b8:	10a23704 	addi	r2,r2,-30500
    a6bc:	dc000115 	stw	r16,4(sp)
    a6c0:	14000017 	ldw	r16,0(r2)
    a6c4:	dc400215 	stw	r17,8(sp)
    a6c8:	dfc00315 	stw	ra,12(sp)
    a6cc:	2023883a 	mov	r17,r4
    a6d0:	80000226 	beq	r16,zero,a6dc <putc+0x2c>
    a6d4:	80800e17 	ldw	r2,56(r16)
    a6d8:	10001a26 	beq	r2,zero,a744 <putc+0x94>
    a6dc:	28800217 	ldw	r2,8(r5)
    a6e0:	10bfffc4 	addi	r2,r2,-1
    a6e4:	28800215 	stw	r2,8(r5)
    a6e8:	10000b16 	blt	r2,zero,a718 <putc+0x68>
    a6ec:	28800017 	ldw	r2,0(r5)
    a6f0:	14400005 	stb	r17,0(r2)
    a6f4:	28800017 	ldw	r2,0(r5)
    a6f8:	10c00044 	addi	r3,r2,1
    a6fc:	28c00015 	stw	r3,0(r5)
    a700:	10800003 	ldbu	r2,0(r2)
    a704:	dfc00317 	ldw	ra,12(sp)
    a708:	dc400217 	ldw	r17,8(sp)
    a70c:	dc000117 	ldw	r16,4(sp)
    a710:	dec00404 	addi	sp,sp,16
    a714:	f800283a 	ret
    a718:	28c00617 	ldw	r3,24(r5)
    a71c:	10c00e16 	blt	r2,r3,a758 <putc+0xa8>
    a720:	28800017 	ldw	r2,0(r5)
    a724:	01000284 	movi	r4,10
    a728:	14400005 	stb	r17,0(r2)
    a72c:	28800017 	ldw	r2,0(r5)
    a730:	10c00003 	ldbu	r3,0(r2)
    a734:	193ff01e 	bne	r3,r4,a6f8 <__alt_mem_Onchip_SRAM+0xf800a6f8>
    a738:	280d883a 	mov	r6,r5
    a73c:	180b883a 	mov	r5,r3
    a740:	00000706 	br	a760 <putc+0xb0>
    a744:	8009883a 	mov	r4,r16
    a748:	d9400015 	stw	r5,0(sp)
    a74c:	0007ad40 	call	7ad4 <__sinit>
    a750:	d9400017 	ldw	r5,0(sp)
    a754:	003fe106 	br	a6dc <__alt_mem_Onchip_SRAM+0xf800a6dc>
    a758:	280d883a 	mov	r6,r5
    a75c:	880b883a 	mov	r5,r17
    a760:	8009883a 	mov	r4,r16
    a764:	dfc00317 	ldw	ra,12(sp)
    a768:	dc400217 	ldw	r17,8(sp)
    a76c:	dc000117 	ldw	r16,4(sp)
    a770:	dec00404 	addi	sp,sp,16
    a774:	000dc241 	jmpi	dc24 <__swbuf_r>

0000a778 <_realloc_r>:
    a778:	defff604 	addi	sp,sp,-40
    a77c:	dc800215 	stw	r18,8(sp)
    a780:	dfc00915 	stw	ra,36(sp)
    a784:	df000815 	stw	fp,32(sp)
    a788:	ddc00715 	stw	r23,28(sp)
    a78c:	dd800615 	stw	r22,24(sp)
    a790:	dd400515 	stw	r21,20(sp)
    a794:	dd000415 	stw	r20,16(sp)
    a798:	dcc00315 	stw	r19,12(sp)
    a79c:	dc400115 	stw	r17,4(sp)
    a7a0:	dc000015 	stw	r16,0(sp)
    a7a4:	3025883a 	mov	r18,r6
    a7a8:	2800b726 	beq	r5,zero,aa88 <_realloc_r+0x310>
    a7ac:	282b883a 	mov	r21,r5
    a7b0:	2029883a 	mov	r20,r4
    a7b4:	001220c0 	call	1220c <__malloc_lock>
    a7b8:	a8bfff17 	ldw	r2,-4(r21)
    a7bc:	043fff04 	movi	r16,-4
    a7c0:	90c002c4 	addi	r3,r18,11
    a7c4:	01000584 	movi	r4,22
    a7c8:	acfffe04 	addi	r19,r21,-8
    a7cc:	1420703a 	and	r16,r2,r16
    a7d0:	20c0332e 	bgeu	r4,r3,a8a0 <_realloc_r+0x128>
    a7d4:	047ffe04 	movi	r17,-8
    a7d8:	1c62703a 	and	r17,r3,r17
    a7dc:	8807883a 	mov	r3,r17
    a7e0:	88005816 	blt	r17,zero,a944 <_realloc_r+0x1cc>
    a7e4:	8c805736 	bltu	r17,r18,a944 <_realloc_r+0x1cc>
    a7e8:	80c0300e 	bge	r16,r3,a8ac <_realloc_r+0x134>
    a7ec:	07000074 	movhi	fp,1
    a7f0:	e71c7f04 	addi	fp,fp,29180
    a7f4:	e1c00217 	ldw	r7,8(fp)
    a7f8:	9c09883a 	add	r4,r19,r16
    a7fc:	22000117 	ldw	r8,4(r4)
    a800:	21c06326 	beq	r4,r7,a990 <_realloc_r+0x218>
    a804:	017fff84 	movi	r5,-2
    a808:	414a703a 	and	r5,r8,r5
    a80c:	214b883a 	add	r5,r4,r5
    a810:	29800117 	ldw	r6,4(r5)
    a814:	3180004c 	andi	r6,r6,1
    a818:	30003f26 	beq	r6,zero,a918 <_realloc_r+0x1a0>
    a81c:	1080004c 	andi	r2,r2,1
    a820:	10008326 	beq	r2,zero,aa30 <_realloc_r+0x2b8>
    a824:	900b883a 	mov	r5,r18
    a828:	a009883a 	mov	r4,r20
    a82c:	000889c0 	call	889c <_malloc_r>
    a830:	1025883a 	mov	r18,r2
    a834:	10011e26 	beq	r2,zero,acb0 <_realloc_r+0x538>
    a838:	a93fff17 	ldw	r4,-4(r21)
    a83c:	10fffe04 	addi	r3,r2,-8
    a840:	00bfff84 	movi	r2,-2
    a844:	2084703a 	and	r2,r4,r2
    a848:	9885883a 	add	r2,r19,r2
    a84c:	1880ee26 	beq	r3,r2,ac08 <_realloc_r+0x490>
    a850:	81bfff04 	addi	r6,r16,-4
    a854:	00800904 	movi	r2,36
    a858:	1180b836 	bltu	r2,r6,ab3c <_realloc_r+0x3c4>
    a85c:	00c004c4 	movi	r3,19
    a860:	19809636 	bltu	r3,r6,aabc <_realloc_r+0x344>
    a864:	9005883a 	mov	r2,r18
    a868:	a807883a 	mov	r3,r21
    a86c:	19000017 	ldw	r4,0(r3)
    a870:	11000015 	stw	r4,0(r2)
    a874:	19000117 	ldw	r4,4(r3)
    a878:	11000115 	stw	r4,4(r2)
    a87c:	18c00217 	ldw	r3,8(r3)
    a880:	10c00215 	stw	r3,8(r2)
    a884:	a80b883a 	mov	r5,r21
    a888:	a009883a 	mov	r4,r20
    a88c:	0007c480 	call	7c48 <_free_r>
    a890:	a009883a 	mov	r4,r20
    a894:	00122300 	call	12230 <__malloc_unlock>
    a898:	9005883a 	mov	r2,r18
    a89c:	00001206 	br	a8e8 <_realloc_r+0x170>
    a8a0:	00c00404 	movi	r3,16
    a8a4:	1823883a 	mov	r17,r3
    a8a8:	003fce06 	br	a7e4 <__alt_mem_Onchip_SRAM+0xf800a7e4>
    a8ac:	a825883a 	mov	r18,r21
    a8b0:	8445c83a 	sub	r2,r16,r17
    a8b4:	00c003c4 	movi	r3,15
    a8b8:	18802636 	bltu	r3,r2,a954 <_realloc_r+0x1dc>
    a8bc:	99800117 	ldw	r6,4(r19)
    a8c0:	9c07883a 	add	r3,r19,r16
    a8c4:	3180004c 	andi	r6,r6,1
    a8c8:	3420b03a 	or	r16,r6,r16
    a8cc:	9c000115 	stw	r16,4(r19)
    a8d0:	18800117 	ldw	r2,4(r3)
    a8d4:	10800054 	ori	r2,r2,1
    a8d8:	18800115 	stw	r2,4(r3)
    a8dc:	a009883a 	mov	r4,r20
    a8e0:	00122300 	call	12230 <__malloc_unlock>
    a8e4:	9005883a 	mov	r2,r18
    a8e8:	dfc00917 	ldw	ra,36(sp)
    a8ec:	df000817 	ldw	fp,32(sp)
    a8f0:	ddc00717 	ldw	r23,28(sp)
    a8f4:	dd800617 	ldw	r22,24(sp)
    a8f8:	dd400517 	ldw	r21,20(sp)
    a8fc:	dd000417 	ldw	r20,16(sp)
    a900:	dcc00317 	ldw	r19,12(sp)
    a904:	dc800217 	ldw	r18,8(sp)
    a908:	dc400117 	ldw	r17,4(sp)
    a90c:	dc000017 	ldw	r16,0(sp)
    a910:	dec00a04 	addi	sp,sp,40
    a914:	f800283a 	ret
    a918:	017fff04 	movi	r5,-4
    a91c:	414a703a 	and	r5,r8,r5
    a920:	814d883a 	add	r6,r16,r5
    a924:	30c01f16 	blt	r6,r3,a9a4 <_realloc_r+0x22c>
    a928:	20800317 	ldw	r2,12(r4)
    a92c:	20c00217 	ldw	r3,8(r4)
    a930:	a825883a 	mov	r18,r21
    a934:	3021883a 	mov	r16,r6
    a938:	18800315 	stw	r2,12(r3)
    a93c:	10c00215 	stw	r3,8(r2)
    a940:	003fdb06 	br	a8b0 <__alt_mem_Onchip_SRAM+0xf800a8b0>
    a944:	00800304 	movi	r2,12
    a948:	a0800015 	stw	r2,0(r20)
    a94c:	0005883a 	mov	r2,zero
    a950:	003fe506 	br	a8e8 <__alt_mem_Onchip_SRAM+0xf800a8e8>
    a954:	98c00117 	ldw	r3,4(r19)
    a958:	9c4b883a 	add	r5,r19,r17
    a95c:	11000054 	ori	r4,r2,1
    a960:	18c0004c 	andi	r3,r3,1
    a964:	1c62b03a 	or	r17,r3,r17
    a968:	9c400115 	stw	r17,4(r19)
    a96c:	29000115 	stw	r4,4(r5)
    a970:	2885883a 	add	r2,r5,r2
    a974:	10c00117 	ldw	r3,4(r2)
    a978:	29400204 	addi	r5,r5,8
    a97c:	a009883a 	mov	r4,r20
    a980:	18c00054 	ori	r3,r3,1
    a984:	10c00115 	stw	r3,4(r2)
    a988:	0007c480 	call	7c48 <_free_r>
    a98c:	003fd306 	br	a8dc <__alt_mem_Onchip_SRAM+0xf800a8dc>
    a990:	017fff04 	movi	r5,-4
    a994:	414a703a 	and	r5,r8,r5
    a998:	89800404 	addi	r6,r17,16
    a99c:	8151883a 	add	r8,r16,r5
    a9a0:	4180590e 	bge	r8,r6,ab08 <_realloc_r+0x390>
    a9a4:	1080004c 	andi	r2,r2,1
    a9a8:	103f9e1e 	bne	r2,zero,a824 <__alt_mem_Onchip_SRAM+0xf800a824>
    a9ac:	adbffe17 	ldw	r22,-8(r21)
    a9b0:	00bfff04 	movi	r2,-4
    a9b4:	9dadc83a 	sub	r22,r19,r22
    a9b8:	b1800117 	ldw	r6,4(r22)
    a9bc:	3084703a 	and	r2,r6,r2
    a9c0:	20002026 	beq	r4,zero,aa44 <_realloc_r+0x2cc>
    a9c4:	80af883a 	add	r23,r16,r2
    a9c8:	b96f883a 	add	r23,r23,r5
    a9cc:	21c05f26 	beq	r4,r7,ab4c <_realloc_r+0x3d4>
    a9d0:	b8c01c16 	blt	r23,r3,aa44 <_realloc_r+0x2cc>
    a9d4:	20800317 	ldw	r2,12(r4)
    a9d8:	20c00217 	ldw	r3,8(r4)
    a9dc:	81bfff04 	addi	r6,r16,-4
    a9e0:	01000904 	movi	r4,36
    a9e4:	18800315 	stw	r2,12(r3)
    a9e8:	10c00215 	stw	r3,8(r2)
    a9ec:	b0c00217 	ldw	r3,8(r22)
    a9f0:	b0800317 	ldw	r2,12(r22)
    a9f4:	b4800204 	addi	r18,r22,8
    a9f8:	18800315 	stw	r2,12(r3)
    a9fc:	10c00215 	stw	r3,8(r2)
    aa00:	21801b36 	bltu	r4,r6,aa70 <_realloc_r+0x2f8>
    aa04:	008004c4 	movi	r2,19
    aa08:	1180352e 	bgeu	r2,r6,aae0 <_realloc_r+0x368>
    aa0c:	a8800017 	ldw	r2,0(r21)
    aa10:	b0800215 	stw	r2,8(r22)
    aa14:	a8800117 	ldw	r2,4(r21)
    aa18:	b0800315 	stw	r2,12(r22)
    aa1c:	008006c4 	movi	r2,27
    aa20:	11807f36 	bltu	r2,r6,ac20 <_realloc_r+0x4a8>
    aa24:	b0800404 	addi	r2,r22,16
    aa28:	ad400204 	addi	r21,r21,8
    aa2c:	00002d06 	br	aae4 <_realloc_r+0x36c>
    aa30:	adbffe17 	ldw	r22,-8(r21)
    aa34:	00bfff04 	movi	r2,-4
    aa38:	9dadc83a 	sub	r22,r19,r22
    aa3c:	b1000117 	ldw	r4,4(r22)
    aa40:	2084703a 	and	r2,r4,r2
    aa44:	b03f7726 	beq	r22,zero,a824 <__alt_mem_Onchip_SRAM+0xf800a824>
    aa48:	80af883a 	add	r23,r16,r2
    aa4c:	b8ff7516 	blt	r23,r3,a824 <__alt_mem_Onchip_SRAM+0xf800a824>
    aa50:	b0800317 	ldw	r2,12(r22)
    aa54:	b0c00217 	ldw	r3,8(r22)
    aa58:	81bfff04 	addi	r6,r16,-4
    aa5c:	01000904 	movi	r4,36
    aa60:	18800315 	stw	r2,12(r3)
    aa64:	10c00215 	stw	r3,8(r2)
    aa68:	b4800204 	addi	r18,r22,8
    aa6c:	21bfe52e 	bgeu	r4,r6,aa04 <__alt_mem_Onchip_SRAM+0xf800aa04>
    aa70:	a80b883a 	mov	r5,r21
    aa74:	9009883a 	mov	r4,r18
    aa78:	00092d40 	call	92d4 <memmove>
    aa7c:	b821883a 	mov	r16,r23
    aa80:	b027883a 	mov	r19,r22
    aa84:	003f8a06 	br	a8b0 <__alt_mem_Onchip_SRAM+0xf800a8b0>
    aa88:	300b883a 	mov	r5,r6
    aa8c:	dfc00917 	ldw	ra,36(sp)
    aa90:	df000817 	ldw	fp,32(sp)
    aa94:	ddc00717 	ldw	r23,28(sp)
    aa98:	dd800617 	ldw	r22,24(sp)
    aa9c:	dd400517 	ldw	r21,20(sp)
    aaa0:	dd000417 	ldw	r20,16(sp)
    aaa4:	dcc00317 	ldw	r19,12(sp)
    aaa8:	dc800217 	ldw	r18,8(sp)
    aaac:	dc400117 	ldw	r17,4(sp)
    aab0:	dc000017 	ldw	r16,0(sp)
    aab4:	dec00a04 	addi	sp,sp,40
    aab8:	000889c1 	jmpi	889c <_malloc_r>
    aabc:	a8c00017 	ldw	r3,0(r21)
    aac0:	90c00015 	stw	r3,0(r18)
    aac4:	a8c00117 	ldw	r3,4(r21)
    aac8:	90c00115 	stw	r3,4(r18)
    aacc:	00c006c4 	movi	r3,27
    aad0:	19804536 	bltu	r3,r6,abe8 <_realloc_r+0x470>
    aad4:	90800204 	addi	r2,r18,8
    aad8:	a8c00204 	addi	r3,r21,8
    aadc:	003f6306 	br	a86c <__alt_mem_Onchip_SRAM+0xf800a86c>
    aae0:	9005883a 	mov	r2,r18
    aae4:	a8c00017 	ldw	r3,0(r21)
    aae8:	b821883a 	mov	r16,r23
    aaec:	b027883a 	mov	r19,r22
    aaf0:	10c00015 	stw	r3,0(r2)
    aaf4:	a8c00117 	ldw	r3,4(r21)
    aaf8:	10c00115 	stw	r3,4(r2)
    aafc:	a8c00217 	ldw	r3,8(r21)
    ab00:	10c00215 	stw	r3,8(r2)
    ab04:	003f6a06 	br	a8b0 <__alt_mem_Onchip_SRAM+0xf800a8b0>
    ab08:	9c67883a 	add	r19,r19,r17
    ab0c:	4445c83a 	sub	r2,r8,r17
    ab10:	e4c00215 	stw	r19,8(fp)
    ab14:	10800054 	ori	r2,r2,1
    ab18:	98800115 	stw	r2,4(r19)
    ab1c:	a8bfff17 	ldw	r2,-4(r21)
    ab20:	a009883a 	mov	r4,r20
    ab24:	1080004c 	andi	r2,r2,1
    ab28:	1462b03a 	or	r17,r2,r17
    ab2c:	ac7fff15 	stw	r17,-4(r21)
    ab30:	00122300 	call	12230 <__malloc_unlock>
    ab34:	a805883a 	mov	r2,r21
    ab38:	003f6b06 	br	a8e8 <__alt_mem_Onchip_SRAM+0xf800a8e8>
    ab3c:	a80b883a 	mov	r5,r21
    ab40:	9009883a 	mov	r4,r18
    ab44:	00092d40 	call	92d4 <memmove>
    ab48:	003f4e06 	br	a884 <__alt_mem_Onchip_SRAM+0xf800a884>
    ab4c:	89000404 	addi	r4,r17,16
    ab50:	b93fbc16 	blt	r23,r4,aa44 <__alt_mem_Onchip_SRAM+0xf800aa44>
    ab54:	b0800317 	ldw	r2,12(r22)
    ab58:	b0c00217 	ldw	r3,8(r22)
    ab5c:	81bfff04 	addi	r6,r16,-4
    ab60:	01000904 	movi	r4,36
    ab64:	18800315 	stw	r2,12(r3)
    ab68:	10c00215 	stw	r3,8(r2)
    ab6c:	b4800204 	addi	r18,r22,8
    ab70:	21804336 	bltu	r4,r6,ac80 <_realloc_r+0x508>
    ab74:	008004c4 	movi	r2,19
    ab78:	11803f2e 	bgeu	r2,r6,ac78 <_realloc_r+0x500>
    ab7c:	a8800017 	ldw	r2,0(r21)
    ab80:	b0800215 	stw	r2,8(r22)
    ab84:	a8800117 	ldw	r2,4(r21)
    ab88:	b0800315 	stw	r2,12(r22)
    ab8c:	008006c4 	movi	r2,27
    ab90:	11803f36 	bltu	r2,r6,ac90 <_realloc_r+0x518>
    ab94:	b0800404 	addi	r2,r22,16
    ab98:	ad400204 	addi	r21,r21,8
    ab9c:	a8c00017 	ldw	r3,0(r21)
    aba0:	10c00015 	stw	r3,0(r2)
    aba4:	a8c00117 	ldw	r3,4(r21)
    aba8:	10c00115 	stw	r3,4(r2)
    abac:	a8c00217 	ldw	r3,8(r21)
    abb0:	10c00215 	stw	r3,8(r2)
    abb4:	b447883a 	add	r3,r22,r17
    abb8:	bc45c83a 	sub	r2,r23,r17
    abbc:	e0c00215 	stw	r3,8(fp)
    abc0:	10800054 	ori	r2,r2,1
    abc4:	18800115 	stw	r2,4(r3)
    abc8:	b0800117 	ldw	r2,4(r22)
    abcc:	a009883a 	mov	r4,r20
    abd0:	1080004c 	andi	r2,r2,1
    abd4:	1462b03a 	or	r17,r2,r17
    abd8:	b4400115 	stw	r17,4(r22)
    abdc:	00122300 	call	12230 <__malloc_unlock>
    abe0:	9005883a 	mov	r2,r18
    abe4:	003f4006 	br	a8e8 <__alt_mem_Onchip_SRAM+0xf800a8e8>
    abe8:	a8c00217 	ldw	r3,8(r21)
    abec:	90c00215 	stw	r3,8(r18)
    abf0:	a8c00317 	ldw	r3,12(r21)
    abf4:	90c00315 	stw	r3,12(r18)
    abf8:	30801126 	beq	r6,r2,ac40 <_realloc_r+0x4c8>
    abfc:	90800404 	addi	r2,r18,16
    ac00:	a8c00404 	addi	r3,r21,16
    ac04:	003f1906 	br	a86c <__alt_mem_Onchip_SRAM+0xf800a86c>
    ac08:	90ffff17 	ldw	r3,-4(r18)
    ac0c:	00bfff04 	movi	r2,-4
    ac10:	a825883a 	mov	r18,r21
    ac14:	1884703a 	and	r2,r3,r2
    ac18:	80a1883a 	add	r16,r16,r2
    ac1c:	003f2406 	br	a8b0 <__alt_mem_Onchip_SRAM+0xf800a8b0>
    ac20:	a8800217 	ldw	r2,8(r21)
    ac24:	b0800415 	stw	r2,16(r22)
    ac28:	a8800317 	ldw	r2,12(r21)
    ac2c:	b0800515 	stw	r2,20(r22)
    ac30:	31000a26 	beq	r6,r4,ac5c <_realloc_r+0x4e4>
    ac34:	b0800604 	addi	r2,r22,24
    ac38:	ad400404 	addi	r21,r21,16
    ac3c:	003fa906 	br	aae4 <__alt_mem_Onchip_SRAM+0xf800aae4>
    ac40:	a9000417 	ldw	r4,16(r21)
    ac44:	90800604 	addi	r2,r18,24
    ac48:	a8c00604 	addi	r3,r21,24
    ac4c:	91000415 	stw	r4,16(r18)
    ac50:	a9000517 	ldw	r4,20(r21)
    ac54:	91000515 	stw	r4,20(r18)
    ac58:	003f0406 	br	a86c <__alt_mem_Onchip_SRAM+0xf800a86c>
    ac5c:	a8c00417 	ldw	r3,16(r21)
    ac60:	ad400604 	addi	r21,r21,24
    ac64:	b0800804 	addi	r2,r22,32
    ac68:	b0c00615 	stw	r3,24(r22)
    ac6c:	a8ffff17 	ldw	r3,-4(r21)
    ac70:	b0c00715 	stw	r3,28(r22)
    ac74:	003f9b06 	br	aae4 <__alt_mem_Onchip_SRAM+0xf800aae4>
    ac78:	9005883a 	mov	r2,r18
    ac7c:	003fc706 	br	ab9c <__alt_mem_Onchip_SRAM+0xf800ab9c>
    ac80:	a80b883a 	mov	r5,r21
    ac84:	9009883a 	mov	r4,r18
    ac88:	00092d40 	call	92d4 <memmove>
    ac8c:	003fc906 	br	abb4 <__alt_mem_Onchip_SRAM+0xf800abb4>
    ac90:	a8800217 	ldw	r2,8(r21)
    ac94:	b0800415 	stw	r2,16(r22)
    ac98:	a8800317 	ldw	r2,12(r21)
    ac9c:	b0800515 	stw	r2,20(r22)
    aca0:	31000726 	beq	r6,r4,acc0 <_realloc_r+0x548>
    aca4:	b0800604 	addi	r2,r22,24
    aca8:	ad400404 	addi	r21,r21,16
    acac:	003fbb06 	br	ab9c <__alt_mem_Onchip_SRAM+0xf800ab9c>
    acb0:	a009883a 	mov	r4,r20
    acb4:	00122300 	call	12230 <__malloc_unlock>
    acb8:	0005883a 	mov	r2,zero
    acbc:	003f0a06 	br	a8e8 <__alt_mem_Onchip_SRAM+0xf800a8e8>
    acc0:	a8c00417 	ldw	r3,16(r21)
    acc4:	ad400604 	addi	r21,r21,24
    acc8:	b0800804 	addi	r2,r22,32
    accc:	b0c00615 	stw	r3,24(r22)
    acd0:	a8ffff17 	ldw	r3,-4(r21)
    acd4:	b0c00715 	stw	r3,28(r22)
    acd8:	003fb006 	br	ab9c <__alt_mem_Onchip_SRAM+0xf800ab9c>

0000acdc <__fpclassifyd>:
    acdc:	00a00034 	movhi	r2,32768
    ace0:	10bfffc4 	addi	r2,r2,-1
    ace4:	2884703a 	and	r2,r5,r2
    ace8:	10000726 	beq	r2,zero,ad08 <__fpclassifyd+0x2c>
    acec:	00fffc34 	movhi	r3,65520
    acf0:	019ff834 	movhi	r6,32736
    acf4:	28c7883a 	add	r3,r5,r3
    acf8:	31bfffc4 	addi	r6,r6,-1
    acfc:	30c00536 	bltu	r6,r3,ad14 <__fpclassifyd+0x38>
    ad00:	00800104 	movi	r2,4
    ad04:	f800283a 	ret
    ad08:	2000021e 	bne	r4,zero,ad14 <__fpclassifyd+0x38>
    ad0c:	00800084 	movi	r2,2
    ad10:	f800283a 	ret
    ad14:	00dffc34 	movhi	r3,32752
    ad18:	019ff834 	movhi	r6,32736
    ad1c:	28cb883a 	add	r5,r5,r3
    ad20:	31bfffc4 	addi	r6,r6,-1
    ad24:	317ff62e 	bgeu	r6,r5,ad00 <__alt_mem_Onchip_SRAM+0xf800ad00>
    ad28:	01400434 	movhi	r5,16
    ad2c:	297fffc4 	addi	r5,r5,-1
    ad30:	28800236 	bltu	r5,r2,ad3c <__fpclassifyd+0x60>
    ad34:	008000c4 	movi	r2,3
    ad38:	f800283a 	ret
    ad3c:	10c00226 	beq	r2,r3,ad48 <__fpclassifyd+0x6c>
    ad40:	0005883a 	mov	r2,zero
    ad44:	f800283a 	ret
    ad48:	2005003a 	cmpeq	r2,r4,zero
    ad4c:	f800283a 	ret

0000ad50 <_sbrk_r>:
    ad50:	defffd04 	addi	sp,sp,-12
    ad54:	dc000015 	stw	r16,0(sp)
    ad58:	040000b4 	movhi	r16,2
    ad5c:	dc400115 	stw	r17,4(sp)
    ad60:	84293c04 	addi	r16,r16,-23312
    ad64:	2023883a 	mov	r17,r4
    ad68:	2809883a 	mov	r4,r5
    ad6c:	dfc00215 	stw	ra,8(sp)
    ad70:	80000015 	stw	zero,0(r16)
    ad74:	00124180 	call	12418 <sbrk>
    ad78:	00ffffc4 	movi	r3,-1
    ad7c:	10c00526 	beq	r2,r3,ad94 <_sbrk_r+0x44>
    ad80:	dfc00217 	ldw	ra,8(sp)
    ad84:	dc400117 	ldw	r17,4(sp)
    ad88:	dc000017 	ldw	r16,0(sp)
    ad8c:	dec00304 	addi	sp,sp,12
    ad90:	f800283a 	ret
    ad94:	80c00017 	ldw	r3,0(r16)
    ad98:	183ff926 	beq	r3,zero,ad80 <__alt_mem_Onchip_SRAM+0xf800ad80>
    ad9c:	88c00015 	stw	r3,0(r17)
    ada0:	003ff706 	br	ad80 <__alt_mem_Onchip_SRAM+0xf800ad80>

0000ada4 <__sread>:
    ada4:	defffe04 	addi	sp,sp,-8
    ada8:	dc000015 	stw	r16,0(sp)
    adac:	2821883a 	mov	r16,r5
    adb0:	2940038f 	ldh	r5,14(r5)
    adb4:	dfc00115 	stw	ra,4(sp)
    adb8:	000e3280 	call	e328 <_read_r>
    adbc:	10000716 	blt	r2,zero,addc <__sread+0x38>
    adc0:	80c01417 	ldw	r3,80(r16)
    adc4:	1887883a 	add	r3,r3,r2
    adc8:	80c01415 	stw	r3,80(r16)
    adcc:	dfc00117 	ldw	ra,4(sp)
    add0:	dc000017 	ldw	r16,0(sp)
    add4:	dec00204 	addi	sp,sp,8
    add8:	f800283a 	ret
    addc:	80c0030b 	ldhu	r3,12(r16)
    ade0:	18fbffcc 	andi	r3,r3,61439
    ade4:	80c0030d 	sth	r3,12(r16)
    ade8:	dfc00117 	ldw	ra,4(sp)
    adec:	dc000017 	ldw	r16,0(sp)
    adf0:	dec00204 	addi	sp,sp,8
    adf4:	f800283a 	ret

0000adf8 <__seofread>:
    adf8:	0005883a 	mov	r2,zero
    adfc:	f800283a 	ret

0000ae00 <__swrite>:
    ae00:	2880030b 	ldhu	r2,12(r5)
    ae04:	defffb04 	addi	sp,sp,-20
    ae08:	dcc00315 	stw	r19,12(sp)
    ae0c:	dc800215 	stw	r18,8(sp)
    ae10:	dc400115 	stw	r17,4(sp)
    ae14:	dc000015 	stw	r16,0(sp)
    ae18:	dfc00415 	stw	ra,16(sp)
    ae1c:	10c0400c 	andi	r3,r2,256
    ae20:	2821883a 	mov	r16,r5
    ae24:	2023883a 	mov	r17,r4
    ae28:	3025883a 	mov	r18,r6
    ae2c:	3827883a 	mov	r19,r7
    ae30:	18000526 	beq	r3,zero,ae48 <__swrite+0x48>
    ae34:	2940038f 	ldh	r5,14(r5)
    ae38:	01c00084 	movi	r7,2
    ae3c:	000d883a 	mov	r6,zero
    ae40:	000e2c80 	call	e2c8 <_lseek_r>
    ae44:	8080030b 	ldhu	r2,12(r16)
    ae48:	8140038f 	ldh	r5,14(r16)
    ae4c:	10bbffcc 	andi	r2,r2,61439
    ae50:	980f883a 	mov	r7,r19
    ae54:	900d883a 	mov	r6,r18
    ae58:	8809883a 	mov	r4,r17
    ae5c:	8080030d 	sth	r2,12(r16)
    ae60:	dfc00417 	ldw	ra,16(sp)
    ae64:	dcc00317 	ldw	r19,12(sp)
    ae68:	dc800217 	ldw	r18,8(sp)
    ae6c:	dc400117 	ldw	r17,4(sp)
    ae70:	dc000017 	ldw	r16,0(sp)
    ae74:	dec00504 	addi	sp,sp,20
    ae78:	000dd7c1 	jmpi	dd7c <_write_r>

0000ae7c <__sseek>:
    ae7c:	defffe04 	addi	sp,sp,-8
    ae80:	dc000015 	stw	r16,0(sp)
    ae84:	2821883a 	mov	r16,r5
    ae88:	2940038f 	ldh	r5,14(r5)
    ae8c:	dfc00115 	stw	ra,4(sp)
    ae90:	000e2c80 	call	e2c8 <_lseek_r>
    ae94:	00ffffc4 	movi	r3,-1
    ae98:	10c00826 	beq	r2,r3,aebc <__sseek+0x40>
    ae9c:	80c0030b 	ldhu	r3,12(r16)
    aea0:	80801415 	stw	r2,80(r16)
    aea4:	18c40014 	ori	r3,r3,4096
    aea8:	80c0030d 	sth	r3,12(r16)
    aeac:	dfc00117 	ldw	ra,4(sp)
    aeb0:	dc000017 	ldw	r16,0(sp)
    aeb4:	dec00204 	addi	sp,sp,8
    aeb8:	f800283a 	ret
    aebc:	80c0030b 	ldhu	r3,12(r16)
    aec0:	18fbffcc 	andi	r3,r3,61439
    aec4:	80c0030d 	sth	r3,12(r16)
    aec8:	dfc00117 	ldw	ra,4(sp)
    aecc:	dc000017 	ldw	r16,0(sp)
    aed0:	dec00204 	addi	sp,sp,8
    aed4:	f800283a 	ret

0000aed8 <__sclose>:
    aed8:	2940038f 	ldh	r5,14(r5)
    aedc:	000dddc1 	jmpi	dddc <_close_r>

0000aee0 <strcmp>:
    aee0:	2144b03a 	or	r2,r4,r5
    aee4:	108000cc 	andi	r2,r2,3
    aee8:	1000171e 	bne	r2,zero,af48 <strcmp+0x68>
    aeec:	20800017 	ldw	r2,0(r4)
    aef0:	28c00017 	ldw	r3,0(r5)
    aef4:	10c0141e 	bne	r2,r3,af48 <strcmp+0x68>
    aef8:	027fbff4 	movhi	r9,65279
    aefc:	4a7fbfc4 	addi	r9,r9,-257
    af00:	0086303a 	nor	r3,zero,r2
    af04:	02202074 	movhi	r8,32897
    af08:	1245883a 	add	r2,r2,r9
    af0c:	42202004 	addi	r8,r8,-32640
    af10:	10c4703a 	and	r2,r2,r3
    af14:	1204703a 	and	r2,r2,r8
    af18:	10000226 	beq	r2,zero,af24 <strcmp+0x44>
    af1c:	00002306 	br	afac <strcmp+0xcc>
    af20:	1000221e 	bne	r2,zero,afac <strcmp+0xcc>
    af24:	21000104 	addi	r4,r4,4
    af28:	20c00017 	ldw	r3,0(r4)
    af2c:	29400104 	addi	r5,r5,4
    af30:	29800017 	ldw	r6,0(r5)
    af34:	1a4f883a 	add	r7,r3,r9
    af38:	00c4303a 	nor	r2,zero,r3
    af3c:	3884703a 	and	r2,r7,r2
    af40:	1204703a 	and	r2,r2,r8
    af44:	19bff626 	beq	r3,r6,af20 <__alt_mem_Onchip_SRAM+0xf800af20>
    af48:	20800003 	ldbu	r2,0(r4)
    af4c:	10c03fcc 	andi	r3,r2,255
    af50:	18c0201c 	xori	r3,r3,128
    af54:	18ffe004 	addi	r3,r3,-128
    af58:	18000c26 	beq	r3,zero,af8c <strcmp+0xac>
    af5c:	29800007 	ldb	r6,0(r5)
    af60:	19800326 	beq	r3,r6,af70 <strcmp+0x90>
    af64:	00001306 	br	afb4 <strcmp+0xd4>
    af68:	29800007 	ldb	r6,0(r5)
    af6c:	11800b1e 	bne	r2,r6,af9c <strcmp+0xbc>
    af70:	21000044 	addi	r4,r4,1
    af74:	20c00003 	ldbu	r3,0(r4)
    af78:	29400044 	addi	r5,r5,1
    af7c:	18803fcc 	andi	r2,r3,255
    af80:	1080201c 	xori	r2,r2,128
    af84:	10bfe004 	addi	r2,r2,-128
    af88:	103ff71e 	bne	r2,zero,af68 <__alt_mem_Onchip_SRAM+0xf800af68>
    af8c:	0007883a 	mov	r3,zero
    af90:	28800003 	ldbu	r2,0(r5)
    af94:	1885c83a 	sub	r2,r3,r2
    af98:	f800283a 	ret
    af9c:	28800003 	ldbu	r2,0(r5)
    afa0:	18c03fcc 	andi	r3,r3,255
    afa4:	1885c83a 	sub	r2,r3,r2
    afa8:	f800283a 	ret
    afac:	0005883a 	mov	r2,zero
    afb0:	f800283a 	ret
    afb4:	10c03fcc 	andi	r3,r2,255
    afb8:	003ff506 	br	af90 <__alt_mem_Onchip_SRAM+0xf800af90>

0000afbc <__ssprint_r>:
    afbc:	30800217 	ldw	r2,8(r6)
    afc0:	defff604 	addi	sp,sp,-40
    afc4:	dc800215 	stw	r18,8(sp)
    afc8:	dfc00915 	stw	ra,36(sp)
    afcc:	df000815 	stw	fp,32(sp)
    afd0:	ddc00715 	stw	r23,28(sp)
    afd4:	dd800615 	stw	r22,24(sp)
    afd8:	dd400515 	stw	r21,20(sp)
    afdc:	dd000415 	stw	r20,16(sp)
    afe0:	dcc00315 	stw	r19,12(sp)
    afe4:	dc400115 	stw	r17,4(sp)
    afe8:	dc000015 	stw	r16,0(sp)
    afec:	3025883a 	mov	r18,r6
    aff0:	10005826 	beq	r2,zero,b154 <__ssprint_r+0x198>
    aff4:	2027883a 	mov	r19,r4
    aff8:	35c00017 	ldw	r23,0(r6)
    affc:	29000017 	ldw	r4,0(r5)
    b000:	28800217 	ldw	r2,8(r5)
    b004:	2823883a 	mov	r17,r5
    b008:	0039883a 	mov	fp,zero
    b00c:	0021883a 	mov	r16,zero
    b010:	80003926 	beq	r16,zero,b0f8 <__ssprint_r+0x13c>
    b014:	102b883a 	mov	r21,r2
    b018:	102d883a 	mov	r22,r2
    b01c:	80803a36 	bltu	r16,r2,b108 <__ssprint_r+0x14c>
    b020:	88c0030b 	ldhu	r3,12(r17)
    b024:	1881200c 	andi	r2,r3,1152
    b028:	10002626 	beq	r2,zero,b0c4 <__ssprint_r+0x108>
    b02c:	88800517 	ldw	r2,20(r17)
    b030:	89400417 	ldw	r5,16(r17)
    b034:	81800044 	addi	r6,r16,1
    b038:	108f883a 	add	r7,r2,r2
    b03c:	3885883a 	add	r2,r7,r2
    b040:	100ed7fa 	srli	r7,r2,31
    b044:	216dc83a 	sub	r22,r4,r5
    b048:	3589883a 	add	r4,r6,r22
    b04c:	3885883a 	add	r2,r7,r2
    b050:	102bd07a 	srai	r21,r2,1
    b054:	a80d883a 	mov	r6,r21
    b058:	a900022e 	bgeu	r21,r4,b064 <__ssprint_r+0xa8>
    b05c:	202b883a 	mov	r21,r4
    b060:	200d883a 	mov	r6,r4
    b064:	18c1000c 	andi	r3,r3,1024
    b068:	18002a26 	beq	r3,zero,b114 <__ssprint_r+0x158>
    b06c:	300b883a 	mov	r5,r6
    b070:	9809883a 	mov	r4,r19
    b074:	000889c0 	call	889c <_malloc_r>
    b078:	1029883a 	mov	r20,r2
    b07c:	10002c26 	beq	r2,zero,b130 <__ssprint_r+0x174>
    b080:	89400417 	ldw	r5,16(r17)
    b084:	b00d883a 	mov	r6,r22
    b088:	1009883a 	mov	r4,r2
    b08c:	000918c0 	call	918c <memcpy>
    b090:	8880030b 	ldhu	r2,12(r17)
    b094:	00fedfc4 	movi	r3,-1153
    b098:	10c4703a 	and	r2,r2,r3
    b09c:	10802014 	ori	r2,r2,128
    b0a0:	8880030d 	sth	r2,12(r17)
    b0a4:	a589883a 	add	r4,r20,r22
    b0a8:	adadc83a 	sub	r22,r21,r22
    b0ac:	8d400515 	stw	r21,20(r17)
    b0b0:	8d800215 	stw	r22,8(r17)
    b0b4:	8d000415 	stw	r20,16(r17)
    b0b8:	89000015 	stw	r4,0(r17)
    b0bc:	802b883a 	mov	r21,r16
    b0c0:	802d883a 	mov	r22,r16
    b0c4:	b00d883a 	mov	r6,r22
    b0c8:	e00b883a 	mov	r5,fp
    b0cc:	00092d40 	call	92d4 <memmove>
    b0d0:	88800217 	ldw	r2,8(r17)
    b0d4:	89000017 	ldw	r4,0(r17)
    b0d8:	90c00217 	ldw	r3,8(r18)
    b0dc:	1545c83a 	sub	r2,r2,r21
    b0e0:	2589883a 	add	r4,r4,r22
    b0e4:	88800215 	stw	r2,8(r17)
    b0e8:	89000015 	stw	r4,0(r17)
    b0ec:	1c21c83a 	sub	r16,r3,r16
    b0f0:	94000215 	stw	r16,8(r18)
    b0f4:	80001726 	beq	r16,zero,b154 <__ssprint_r+0x198>
    b0f8:	bf000017 	ldw	fp,0(r23)
    b0fc:	bc000117 	ldw	r16,4(r23)
    b100:	bdc00204 	addi	r23,r23,8
    b104:	003fc206 	br	b010 <__alt_mem_Onchip_SRAM+0xf800b010>
    b108:	802b883a 	mov	r21,r16
    b10c:	802d883a 	mov	r22,r16
    b110:	003fec06 	br	b0c4 <__alt_mem_Onchip_SRAM+0xf800b0c4>
    b114:	9809883a 	mov	r4,r19
    b118:	000a7780 	call	a778 <_realloc_r>
    b11c:	1029883a 	mov	r20,r2
    b120:	103fe01e 	bne	r2,zero,b0a4 <__alt_mem_Onchip_SRAM+0xf800b0a4>
    b124:	89400417 	ldw	r5,16(r17)
    b128:	9809883a 	mov	r4,r19
    b12c:	0007c480 	call	7c48 <_free_r>
    b130:	88c0030b 	ldhu	r3,12(r17)
    b134:	00800304 	movi	r2,12
    b138:	98800015 	stw	r2,0(r19)
    b13c:	18c01014 	ori	r3,r3,64
    b140:	88c0030d 	sth	r3,12(r17)
    b144:	00bfffc4 	movi	r2,-1
    b148:	90000215 	stw	zero,8(r18)
    b14c:	90000115 	stw	zero,4(r18)
    b150:	00000206 	br	b15c <__ssprint_r+0x1a0>
    b154:	90000115 	stw	zero,4(r18)
    b158:	0005883a 	mov	r2,zero
    b15c:	dfc00917 	ldw	ra,36(sp)
    b160:	df000817 	ldw	fp,32(sp)
    b164:	ddc00717 	ldw	r23,28(sp)
    b168:	dd800617 	ldw	r22,24(sp)
    b16c:	dd400517 	ldw	r21,20(sp)
    b170:	dd000417 	ldw	r20,16(sp)
    b174:	dcc00317 	ldw	r19,12(sp)
    b178:	dc800217 	ldw	r18,8(sp)
    b17c:	dc400117 	ldw	r17,4(sp)
    b180:	dc000017 	ldw	r16,0(sp)
    b184:	dec00a04 	addi	sp,sp,40
    b188:	f800283a 	ret

0000b18c <___svfiprintf_internal_r>:
    b18c:	2880030b 	ldhu	r2,12(r5)
    b190:	deffc804 	addi	sp,sp,-224
    b194:	dcc03115 	stw	r19,196(sp)
    b198:	dfc03715 	stw	ra,220(sp)
    b19c:	df003615 	stw	fp,216(sp)
    b1a0:	ddc03515 	stw	r23,212(sp)
    b1a4:	dd803415 	stw	r22,208(sp)
    b1a8:	dd403315 	stw	r21,204(sp)
    b1ac:	dd003215 	stw	r20,200(sp)
    b1b0:	dc803015 	stw	r18,192(sp)
    b1b4:	dc402f15 	stw	r17,188(sp)
    b1b8:	dc002e15 	stw	r16,184(sp)
    b1bc:	d9402315 	stw	r5,140(sp)
    b1c0:	d9002715 	stw	r4,156(sp)
    b1c4:	1080200c 	andi	r2,r2,128
    b1c8:	d9c02415 	stw	r7,144(sp)
    b1cc:	3027883a 	mov	r19,r6
    b1d0:	10000226 	beq	r2,zero,b1dc <___svfiprintf_internal_r+0x50>
    b1d4:	28800417 	ldw	r2,16(r5)
    b1d8:	10046d26 	beq	r2,zero,c390 <___svfiprintf_internal_r+0x1204>
    b1dc:	d8801a04 	addi	r2,sp,104
    b1e0:	d8c019c4 	addi	r3,sp,103
    b1e4:	05800074 	movhi	r22,1
    b1e8:	10c9c83a 	sub	r4,r2,r3
    b1ec:	b59b2304 	addi	r22,r22,27788
    b1f0:	d8801e15 	stw	r2,120(sp)
    b1f4:	d8c01f15 	stw	r3,124(sp)
    b1f8:	dec01a15 	stw	sp,104(sp)
    b1fc:	d8001c15 	stw	zero,112(sp)
    b200:	d8001b15 	stw	zero,108(sp)
    b204:	d811883a 	mov	r8,sp
    b208:	d8002915 	stw	zero,164(sp)
    b20c:	d8002615 	stw	zero,152(sp)
    b210:	d9002c15 	stw	r4,176(sp)
    b214:	98800007 	ldb	r2,0(r19)
    b218:	10031426 	beq	r2,zero,be6c <___svfiprintf_internal_r+0xce0>
    b21c:	00c00944 	movi	r3,37
    b220:	9825883a 	mov	r18,r19
    b224:	10c0021e 	bne	r2,r3,b230 <___svfiprintf_internal_r+0xa4>
    b228:	00001406 	br	b27c <___svfiprintf_internal_r+0xf0>
    b22c:	10c00326 	beq	r2,r3,b23c <___svfiprintf_internal_r+0xb0>
    b230:	94800044 	addi	r18,r18,1
    b234:	90800007 	ldb	r2,0(r18)
    b238:	103ffc1e 	bne	r2,zero,b22c <__alt_mem_Onchip_SRAM+0xf800b22c>
    b23c:	94e1c83a 	sub	r16,r18,r19
    b240:	80000e26 	beq	r16,zero,b27c <___svfiprintf_internal_r+0xf0>
    b244:	d8c01c17 	ldw	r3,112(sp)
    b248:	d8801b17 	ldw	r2,108(sp)
    b24c:	44c00015 	stw	r19,0(r8)
    b250:	1c07883a 	add	r3,r3,r16
    b254:	10800044 	addi	r2,r2,1
    b258:	d8c01c15 	stw	r3,112(sp)
    b25c:	44000115 	stw	r16,4(r8)
    b260:	d8801b15 	stw	r2,108(sp)
    b264:	00c001c4 	movi	r3,7
    b268:	18835c16 	blt	r3,r2,bfdc <___svfiprintf_internal_r+0xe50>
    b26c:	42000204 	addi	r8,r8,8
    b270:	d9402617 	ldw	r5,152(sp)
    b274:	2c0b883a 	add	r5,r5,r16
    b278:	d9402615 	stw	r5,152(sp)
    b27c:	90800007 	ldb	r2,0(r18)
    b280:	1002fc26 	beq	r2,zero,be74 <___svfiprintf_internal_r+0xce8>
    b284:	0023883a 	mov	r17,zero
    b288:	00bfffc4 	movi	r2,-1
    b28c:	0021883a 	mov	r16,zero
    b290:	94c00044 	addi	r19,r18,1
    b294:	90c00047 	ldb	r3,1(r18)
    b298:	dc402105 	stb	r17,132(sp)
    b29c:	d8001d85 	stb	zero,118(sp)
    b2a0:	002b883a 	mov	r21,zero
    b2a4:	d8802015 	stw	r2,128(sp)
    b2a8:	d8002515 	stw	zero,148(sp)
    b2ac:	04801604 	movi	r18,88
    b2b0:	05000244 	movi	r20,9
    b2b4:	402f883a 	mov	r23,r8
    b2b8:	8023883a 	mov	r17,r16
    b2bc:	9cc00044 	addi	r19,r19,1
    b2c0:	18bff804 	addi	r2,r3,-32
    b2c4:	9081fb36 	bltu	r18,r2,bab4 <___svfiprintf_internal_r+0x928>
    b2c8:	100490ba 	slli	r2,r2,2
    b2cc:	01000074 	movhi	r4,1
    b2d0:	212cb804 	addi	r4,r4,-19744
    b2d4:	1105883a 	add	r2,r2,r4
    b2d8:	10800017 	ldw	r2,0(r2)
    b2dc:	1000683a 	jmp	r2
    b2e0:	0000b4e0 	cmpeqi	zero,zero,723
    b2e4:	0000bab4 	movhi	zero,746
    b2e8:	0000bab4 	movhi	zero,746
    b2ec:	0000b4d4 	movui	zero,723
    b2f0:	0000bab4 	movhi	zero,746
    b2f4:	0000bab4 	movhi	zero,746
    b2f8:	0000bab4 	movhi	zero,746
    b2fc:	0000bab4 	movhi	zero,746
    b300:	0000bab4 	movhi	zero,746
    b304:	0000bab4 	movhi	zero,746
    b308:	0000b444 	movi	zero,721
    b30c:	0000b640 	call	b64 <delay_1s+0x8>
    b310:	0000bab4 	movhi	zero,746
    b314:	0000b46c 	andhi	zero,zero,721
    b318:	0000baf0 	cmpltui	zero,zero,747
    b31c:	0000bab4 	movhi	zero,746
    b320:	0000bae4 	muli	zero,zero,747
    b324:	0000ba78 	rdprs	zero,zero,745
    b328:	0000ba78 	rdprs	zero,zero,745
    b32c:	0000ba78 	rdprs	zero,zero,745
    b330:	0000ba78 	rdprs	zero,zero,745
    b334:	0000ba78 	rdprs	zero,zero,745
    b338:	0000ba78 	rdprs	zero,zero,745
    b33c:	0000ba78 	rdprs	zero,zero,745
    b340:	0000ba78 	rdprs	zero,zero,745
    b344:	0000ba78 	rdprs	zero,zero,745
    b348:	0000bab4 	movhi	zero,746
    b34c:	0000bab4 	movhi	zero,746
    b350:	0000bab4 	movhi	zero,746
    b354:	0000bab4 	movhi	zero,746
    b358:	0000bab4 	movhi	zero,746
    b35c:	0000bab4 	movhi	zero,746
    b360:	0000bab4 	movhi	zero,746
    b364:	0000bab4 	movhi	zero,746
    b368:	0000bab4 	movhi	zero,746
    b36c:	0000bab4 	movhi	zero,746
    b370:	0000b9fc 	xorhi	zero,zero,743
    b374:	0000bab4 	movhi	zero,746
    b378:	0000bab4 	movhi	zero,746
    b37c:	0000bab4 	movhi	zero,746
    b380:	0000bab4 	movhi	zero,746
    b384:	0000bab4 	movhi	zero,746
    b388:	0000bab4 	movhi	zero,746
    b38c:	0000bab4 	movhi	zero,746
    b390:	0000bab4 	movhi	zero,746
    b394:	0000bab4 	movhi	zero,746
    b398:	0000bab4 	movhi	zero,746
    b39c:	0000bbac 	andhi	zero,zero,750
    b3a0:	0000bab4 	movhi	zero,746
    b3a4:	0000bab4 	movhi	zero,746
    b3a8:	0000bab4 	movhi	zero,746
    b3ac:	0000bab4 	movhi	zero,746
    b3b0:	0000bab4 	movhi	zero,746
    b3b4:	0000bb38 	rdprs	zero,zero,748
    b3b8:	0000bab4 	movhi	zero,746
    b3bc:	0000bab4 	movhi	zero,746
    b3c0:	0000b838 	rdprs	zero,zero,736
    b3c4:	0000bab4 	movhi	zero,746
    b3c8:	0000bab4 	movhi	zero,746
    b3cc:	0000bab4 	movhi	zero,746
    b3d0:	0000bab4 	movhi	zero,746
    b3d4:	0000bab4 	movhi	zero,746
    b3d8:	0000bab4 	movhi	zero,746
    b3dc:	0000bab4 	movhi	zero,746
    b3e0:	0000bab4 	movhi	zero,746
    b3e4:	0000bab4 	movhi	zero,746
    b3e8:	0000bab4 	movhi	zero,746
    b3ec:	0000b704 	movi	zero,732
    b3f0:	0000b8e8 	cmpgeui	zero,zero,739
    b3f4:	0000bab4 	movhi	zero,746
    b3f8:	0000bab4 	movhi	zero,746
    b3fc:	0000bab4 	movhi	zero,746
    b400:	0000b8dc 	xori	zero,zero,739
    b404:	0000b8e8 	cmpgeui	zero,zero,739
    b408:	0000bab4 	movhi	zero,746
    b40c:	0000bab4 	movhi	zero,746
    b410:	0000b8c8 	cmpgei	zero,zero,739
    b414:	0000bab4 	movhi	zero,746
    b418:	0000b888 	cmpgei	zero,zero,738
    b41c:	0000b654 	movui	zero,729
    b420:	0000b478 	rdprs	zero,zero,721
    b424:	0000b9f0 	cmpltui	zero,zero,743
    b428:	0000bab4 	movhi	zero,746
    b42c:	0000b99c 	xori	zero,zero,742
    b430:	0000bab4 	movhi	zero,746
    b434:	0000b5b8 	rdprs	zero,zero,726
    b438:	0000bab4 	movhi	zero,746
    b43c:	0000bab4 	movhi	zero,746
    b440:	0000b504 	movi	zero,724
    b444:	d9002417 	ldw	r4,144(sp)
    b448:	d9402417 	ldw	r5,144(sp)
    b44c:	21000017 	ldw	r4,0(r4)
    b450:	28800104 	addi	r2,r5,4
    b454:	d9002515 	stw	r4,148(sp)
    b458:	20032b0e 	bge	r4,zero,c108 <___svfiprintf_internal_r+0xf7c>
    b45c:	d8c02517 	ldw	r3,148(sp)
    b460:	d8802415 	stw	r2,144(sp)
    b464:	00c7c83a 	sub	r3,zero,r3
    b468:	d8c02515 	stw	r3,148(sp)
    b46c:	8c400114 	ori	r17,r17,4
    b470:	98c00007 	ldb	r3,0(r19)
    b474:	003f9106 	br	b2bc <__alt_mem_Onchip_SRAM+0xf800b2bc>
    b478:	00800c04 	movi	r2,48
    b47c:	d9402417 	ldw	r5,144(sp)
    b480:	d9002017 	ldw	r4,128(sp)
    b484:	d8801d05 	stb	r2,116(sp)
    b488:	00801e04 	movi	r2,120
    b48c:	d8801d45 	stb	r2,117(sp)
    b490:	d8001d85 	stb	zero,118(sp)
    b494:	b811883a 	mov	r8,r23
    b498:	28c00104 	addi	r3,r5,4
    b49c:	2c800017 	ldw	r18,0(r5)
    b4a0:	0029883a 	mov	r20,zero
    b4a4:	88800094 	ori	r2,r17,2
    b4a8:	20036316 	blt	r4,zero,c238 <___svfiprintf_internal_r+0x10ac>
    b4ac:	00bfdfc4 	movi	r2,-129
    b4b0:	88a0703a 	and	r16,r17,r2
    b4b4:	d8c02415 	stw	r3,144(sp)
    b4b8:	84000094 	ori	r16,r16,2
    b4bc:	90031c26 	beq	r18,zero,c130 <___svfiprintf_internal_r+0xfa4>
    b4c0:	01400074 	movhi	r5,1
    b4c4:	295aba04 	addi	r5,r5,27368
    b4c8:	002b883a 	mov	r21,zero
    b4cc:	d9402915 	stw	r5,164(sp)
    b4d0:	00002906 	br	b578 <___svfiprintf_internal_r+0x3ec>
    b4d4:	8c400054 	ori	r17,r17,1
    b4d8:	98c00007 	ldb	r3,0(r19)
    b4dc:	003f7706 	br	b2bc <__alt_mem_Onchip_SRAM+0xf800b2bc>
    b4e0:	a8803fcc 	andi	r2,r21,255
    b4e4:	1080201c 	xori	r2,r2,128
    b4e8:	10bfe004 	addi	r2,r2,-128
    b4ec:	10032a1e 	bne	r2,zero,c198 <___svfiprintf_internal_r+0x100c>
    b4f0:	00c00044 	movi	r3,1
    b4f4:	d8c02105 	stb	r3,132(sp)
    b4f8:	05400804 	movi	r21,32
    b4fc:	98c00007 	ldb	r3,0(r19)
    b500:	003f6e06 	br	b2bc <__alt_mem_Onchip_SRAM+0xf800b2bc>
    b504:	8821883a 	mov	r16,r17
    b508:	dc402103 	ldbu	r17,132(sp)
    b50c:	b811883a 	mov	r8,r23
    b510:	8c403fcc 	andi	r17,r17,255
    b514:	8803f01e 	bne	r17,zero,c4d8 <___svfiprintf_internal_r+0x134c>
    b518:	00800074 	movhi	r2,1
    b51c:	109aba04 	addi	r2,r2,27368
    b520:	d8802915 	stw	r2,164(sp)
    b524:	8080080c 	andi	r2,r16,32
    b528:	1000cd26 	beq	r2,zero,b860 <___svfiprintf_internal_r+0x6d4>
    b52c:	d9002417 	ldw	r4,144(sp)
    b530:	24800017 	ldw	r18,0(r4)
    b534:	25000117 	ldw	r20,4(r4)
    b538:	21000204 	addi	r4,r4,8
    b53c:	d9002415 	stw	r4,144(sp)
    b540:	8080004c 	andi	r2,r16,1
    b544:	1002c726 	beq	r2,zero,c064 <___svfiprintf_internal_r+0xed8>
    b548:	9504b03a 	or	r2,r18,r20
    b54c:	1003061e 	bne	r2,zero,c168 <___svfiprintf_internal_r+0xfdc>
    b550:	d9002017 	ldw	r4,128(sp)
    b554:	d8001d85 	stb	zero,118(sp)
    b558:	20033e16 	blt	r4,zero,c254 <___svfiprintf_internal_r+0x10c8>
    b55c:	00bfdfc4 	movi	r2,-129
    b560:	80a0703a 	and	r16,r16,r2
    b564:	d9402017 	ldw	r5,128(sp)
    b568:	002b883a 	mov	r21,zero
    b56c:	28002826 	beq	r5,zero,b610 <___svfiprintf_internal_r+0x484>
    b570:	0025883a 	mov	r18,zero
    b574:	0029883a 	mov	r20,zero
    b578:	d9002917 	ldw	r4,164(sp)
    b57c:	dc401a04 	addi	r17,sp,104
    b580:	908003cc 	andi	r2,r18,15
    b584:	a006973a 	slli	r3,r20,28
    b588:	2085883a 	add	r2,r4,r2
    b58c:	9024d13a 	srli	r18,r18,4
    b590:	10800003 	ldbu	r2,0(r2)
    b594:	a028d13a 	srli	r20,r20,4
    b598:	8c7fffc4 	addi	r17,r17,-1
    b59c:	1ca4b03a 	or	r18,r3,r18
    b5a0:	88800005 	stb	r2,0(r17)
    b5a4:	9504b03a 	or	r2,r18,r20
    b5a8:	103ff51e 	bne	r2,zero,b580 <__alt_mem_Onchip_SRAM+0xf800b580>
    b5ac:	d8801e17 	ldw	r2,120(sp)
    b5b0:	1469c83a 	sub	r20,r2,r17
    b5b4:	00001906 	br	b61c <___svfiprintf_internal_r+0x490>
    b5b8:	8821883a 	mov	r16,r17
    b5bc:	dc402103 	ldbu	r17,132(sp)
    b5c0:	b811883a 	mov	r8,r23
    b5c4:	8c403fcc 	andi	r17,r17,255
    b5c8:	8803d01e 	bne	r17,zero,c50c <___svfiprintf_internal_r+0x1380>
    b5cc:	8080080c 	andi	r2,r16,32
    b5d0:	10016126 	beq	r2,zero,bb58 <___svfiprintf_internal_r+0x9cc>
    b5d4:	d9002417 	ldw	r4,144(sp)
    b5d8:	d9402017 	ldw	r5,128(sp)
    b5dc:	d8001d85 	stb	zero,118(sp)
    b5e0:	20c00204 	addi	r3,r4,8
    b5e4:	24800017 	ldw	r18,0(r4)
    b5e8:	25000117 	ldw	r20,4(r4)
    b5ec:	28030f16 	blt	r5,zero,c22c <___svfiprintf_internal_r+0x10a0>
    b5f0:	013fdfc4 	movi	r4,-129
    b5f4:	9504b03a 	or	r2,r18,r20
    b5f8:	d8c02415 	stw	r3,144(sp)
    b5fc:	8120703a 	and	r16,r16,r4
    b600:	002b883a 	mov	r21,zero
    b604:	1000cd1e 	bne	r2,zero,b93c <___svfiprintf_internal_r+0x7b0>
    b608:	d8c02017 	ldw	r3,128(sp)
    b60c:	1803141e 	bne	r3,zero,c260 <___svfiprintf_internal_r+0x10d4>
    b610:	d8002015 	stw	zero,128(sp)
    b614:	0029883a 	mov	r20,zero
    b618:	dc401a04 	addi	r17,sp,104
    b61c:	dc802017 	ldw	r18,128(sp)
    b620:	9500010e 	bge	r18,r20,b628 <___svfiprintf_internal_r+0x49c>
    b624:	a025883a 	mov	r18,r20
    b628:	ad403fcc 	andi	r21,r21,255
    b62c:	ad40201c 	xori	r21,r21,128
    b630:	ad7fe004 	addi	r21,r21,-128
    b634:	a8003f26 	beq	r21,zero,b734 <___svfiprintf_internal_r+0x5a8>
    b638:	94800044 	addi	r18,r18,1
    b63c:	00003d06 	br	b734 <___svfiprintf_internal_r+0x5a8>
    b640:	00c00044 	movi	r3,1
    b644:	d8c02105 	stb	r3,132(sp)
    b648:	05400ac4 	movi	r21,43
    b64c:	98c00007 	ldb	r3,0(r19)
    b650:	003f1a06 	br	b2bc <__alt_mem_Onchip_SRAM+0xf800b2bc>
    b654:	8821883a 	mov	r16,r17
    b658:	dc402103 	ldbu	r17,132(sp)
    b65c:	b811883a 	mov	r8,r23
    b660:	8c403fcc 	andi	r17,r17,255
    b664:	8803a71e 	bne	r17,zero,c504 <___svfiprintf_internal_r+0x1378>
    b668:	8080080c 	andi	r2,r16,32
    b66c:	10015726 	beq	r2,zero,bbcc <___svfiprintf_internal_r+0xa40>
    b670:	d8c02417 	ldw	r3,144(sp)
    b674:	d9002017 	ldw	r4,128(sp)
    b678:	d8001d85 	stb	zero,118(sp)
    b67c:	18800204 	addi	r2,r3,8
    b680:	1c800017 	ldw	r18,0(r3)
    b684:	1d000117 	ldw	r20,4(r3)
    b688:	2002db16 	blt	r4,zero,c1f8 <___svfiprintf_internal_r+0x106c>
    b68c:	013fdfc4 	movi	r4,-129
    b690:	9506b03a 	or	r3,r18,r20
    b694:	d8802415 	stw	r2,144(sp)
    b698:	8120703a 	and	r16,r16,r4
    b69c:	18015826 	beq	r3,zero,bc00 <___svfiprintf_internal_r+0xa74>
    b6a0:	002b883a 	mov	r21,zero
    b6a4:	dc401a04 	addi	r17,sp,104
    b6a8:	9006d0fa 	srli	r3,r18,3
    b6ac:	a008977a 	slli	r4,r20,29
    b6b0:	a028d0fa 	srli	r20,r20,3
    b6b4:	948001cc 	andi	r18,r18,7
    b6b8:	90800c04 	addi	r2,r18,48
    b6bc:	8c7fffc4 	addi	r17,r17,-1
    b6c0:	20e4b03a 	or	r18,r4,r3
    b6c4:	88800005 	stb	r2,0(r17)
    b6c8:	9506b03a 	or	r3,r18,r20
    b6cc:	183ff61e 	bne	r3,zero,b6a8 <__alt_mem_Onchip_SRAM+0xf800b6a8>
    b6d0:	80c0004c 	andi	r3,r16,1
    b6d4:	18028926 	beq	r3,zero,c0fc <___svfiprintf_internal_r+0xf70>
    b6d8:	10803fcc 	andi	r2,r2,255
    b6dc:	1080201c 	xori	r2,r2,128
    b6e0:	10bfe004 	addi	r2,r2,-128
    b6e4:	00c00c04 	movi	r3,48
    b6e8:	10ffb026 	beq	r2,r3,b5ac <__alt_mem_Onchip_SRAM+0xf800b5ac>
    b6ec:	88ffffc5 	stb	r3,-1(r17)
    b6f0:	d8c01e17 	ldw	r3,120(sp)
    b6f4:	88bfffc4 	addi	r2,r17,-1
    b6f8:	1023883a 	mov	r17,r2
    b6fc:	18a9c83a 	sub	r20,r3,r2
    b700:	003fc606 	br	b61c <__alt_mem_Onchip_SRAM+0xf800b61c>
    b704:	d8c02417 	ldw	r3,144(sp)
    b708:	04800044 	movi	r18,1
    b70c:	8821883a 	mov	r16,r17
    b710:	18800017 	ldw	r2,0(r3)
    b714:	18c00104 	addi	r3,r3,4
    b718:	b811883a 	mov	r8,r23
    b71c:	d8001d85 	stb	zero,118(sp)
    b720:	d8801005 	stb	r2,64(sp)
    b724:	d8c02415 	stw	r3,144(sp)
    b728:	9029883a 	mov	r20,r18
    b72c:	dc401004 	addi	r17,sp,64
    b730:	d8002015 	stw	zero,128(sp)
    b734:	80c0008c 	andi	r3,r16,2
    b738:	d8c02115 	stw	r3,132(sp)
    b73c:	18000126 	beq	r3,zero,b744 <___svfiprintf_internal_r+0x5b8>
    b740:	94800084 	addi	r18,r18,2
    b744:	80c0210c 	andi	r3,r16,132
    b748:	d8c02215 	stw	r3,136(sp)
    b74c:	1801321e 	bne	r3,zero,bc18 <___svfiprintf_internal_r+0xa8c>
    b750:	d9002517 	ldw	r4,148(sp)
    b754:	24b9c83a 	sub	fp,r4,r18
    b758:	07012f0e 	bge	zero,fp,bc18 <___svfiprintf_internal_r+0xa8c>
    b75c:	02400404 	movi	r9,16
    b760:	d8c01c17 	ldw	r3,112(sp)
    b764:	d8801b17 	ldw	r2,108(sp)
    b768:	4f03250e 	bge	r9,fp,c400 <___svfiprintf_internal_r+0x1274>
    b76c:	01000074 	movhi	r4,1
    b770:	211b2704 	addi	r4,r4,27804
    b774:	dc002a15 	stw	r16,168(sp)
    b778:	dc402b15 	stw	r17,172(sp)
    b77c:	d9002815 	stw	r4,160(sp)
    b780:	e023883a 	mov	r17,fp
    b784:	482f883a 	mov	r23,r9
    b788:	9839883a 	mov	fp,r19
    b78c:	054001c4 	movi	r21,7
    b790:	9027883a 	mov	r19,r18
    b794:	dc002717 	ldw	r16,156(sp)
    b798:	dc802317 	ldw	r18,140(sp)
    b79c:	00000306 	br	b7ac <___svfiprintf_internal_r+0x620>
    b7a0:	8c7ffc04 	addi	r17,r17,-16
    b7a4:	42000204 	addi	r8,r8,8
    b7a8:	bc40130e 	bge	r23,r17,b7f8 <___svfiprintf_internal_r+0x66c>
    b7ac:	01400074 	movhi	r5,1
    b7b0:	18c00404 	addi	r3,r3,16
    b7b4:	10800044 	addi	r2,r2,1
    b7b8:	295b2704 	addi	r5,r5,27804
    b7bc:	41400015 	stw	r5,0(r8)
    b7c0:	45c00115 	stw	r23,4(r8)
    b7c4:	d8c01c15 	stw	r3,112(sp)
    b7c8:	d8801b15 	stw	r2,108(sp)
    b7cc:	a8bff40e 	bge	r21,r2,b7a0 <__alt_mem_Onchip_SRAM+0xf800b7a0>
    b7d0:	d9801a04 	addi	r6,sp,104
    b7d4:	900b883a 	mov	r5,r18
    b7d8:	8009883a 	mov	r4,r16
    b7dc:	000afbc0 	call	afbc <__ssprint_r>
    b7e0:	1001aa1e 	bne	r2,zero,be8c <___svfiprintf_internal_r+0xd00>
    b7e4:	8c7ffc04 	addi	r17,r17,-16
    b7e8:	d8c01c17 	ldw	r3,112(sp)
    b7ec:	d8801b17 	ldw	r2,108(sp)
    b7f0:	d811883a 	mov	r8,sp
    b7f4:	bc7fed16 	blt	r23,r17,b7ac <__alt_mem_Onchip_SRAM+0xf800b7ac>
    b7f8:	9825883a 	mov	r18,r19
    b7fc:	dc002a17 	ldw	r16,168(sp)
    b800:	e027883a 	mov	r19,fp
    b804:	8839883a 	mov	fp,r17
    b808:	dc402b17 	ldw	r17,172(sp)
    b80c:	d9002817 	ldw	r4,160(sp)
    b810:	e0c7883a 	add	r3,fp,r3
    b814:	10800044 	addi	r2,r2,1
    b818:	41000015 	stw	r4,0(r8)
    b81c:	47000115 	stw	fp,4(r8)
    b820:	d8c01c15 	stw	r3,112(sp)
    b824:	d8801b15 	stw	r2,108(sp)
    b828:	010001c4 	movi	r4,7
    b82c:	20821616 	blt	r4,r2,c088 <___svfiprintf_internal_r+0xefc>
    b830:	42000204 	addi	r8,r8,8
    b834:	0000fa06 	br	bc20 <___svfiprintf_internal_r+0xa94>
    b838:	8821883a 	mov	r16,r17
    b83c:	dc402103 	ldbu	r17,132(sp)
    b840:	b811883a 	mov	r8,r23
    b844:	8c403fcc 	andi	r17,r17,255
    b848:	8803361e 	bne	r17,zero,c524 <___svfiprintf_internal_r+0x1398>
    b84c:	01400074 	movhi	r5,1
    b850:	295ab504 	addi	r5,r5,27348
    b854:	d9402915 	stw	r5,164(sp)
    b858:	8080080c 	andi	r2,r16,32
    b85c:	103f331e 	bne	r2,zero,b52c <__alt_mem_Onchip_SRAM+0xf800b52c>
    b860:	8080040c 	andi	r2,r16,16
    b864:	1002551e 	bne	r2,zero,c1bc <___svfiprintf_internal_r+0x1030>
    b868:	8080100c 	andi	r2,r16,64
    b86c:	1002a626 	beq	r2,zero,c308 <___svfiprintf_internal_r+0x117c>
    b870:	d8802417 	ldw	r2,144(sp)
    b874:	0029883a 	mov	r20,zero
    b878:	1480000b 	ldhu	r18,0(r2)
    b87c:	10800104 	addi	r2,r2,4
    b880:	d8802415 	stw	r2,144(sp)
    b884:	003f2e06 	br	b540 <__alt_mem_Onchip_SRAM+0xf800b540>
    b888:	8821883a 	mov	r16,r17
    b88c:	dc402103 	ldbu	r17,132(sp)
    b890:	b811883a 	mov	r8,r23
    b894:	8c403fcc 	andi	r17,r17,255
    b898:	88030b1e 	bne	r17,zero,c4c8 <___svfiprintf_internal_r+0x133c>
    b89c:	8080080c 	andi	r2,r16,32
    b8a0:	1002271e 	bne	r2,zero,c140 <___svfiprintf_internal_r+0xfb4>
    b8a4:	8080040c 	andi	r2,r16,16
    b8a8:	10028e26 	beq	r2,zero,c2e4 <___svfiprintf_internal_r+0x1158>
    b8ac:	d8c02417 	ldw	r3,144(sp)
    b8b0:	d9002617 	ldw	r4,152(sp)
    b8b4:	18800017 	ldw	r2,0(r3)
    b8b8:	18c00104 	addi	r3,r3,4
    b8bc:	d8c02415 	stw	r3,144(sp)
    b8c0:	11000015 	stw	r4,0(r2)
    b8c4:	003e5306 	br	b214 <__alt_mem_Onchip_SRAM+0xf800b214>
    b8c8:	98c00007 	ldb	r3,0(r19)
    b8cc:	01401b04 	movi	r5,108
    b8d0:	19424f26 	beq	r3,r5,c210 <___svfiprintf_internal_r+0x1084>
    b8d4:	8c400414 	ori	r17,r17,16
    b8d8:	003e7806 	br	b2bc <__alt_mem_Onchip_SRAM+0xf800b2bc>
    b8dc:	8c401014 	ori	r17,r17,64
    b8e0:	98c00007 	ldb	r3,0(r19)
    b8e4:	003e7506 	br	b2bc <__alt_mem_Onchip_SRAM+0xf800b2bc>
    b8e8:	8821883a 	mov	r16,r17
    b8ec:	dc402103 	ldbu	r17,132(sp)
    b8f0:	b811883a 	mov	r8,r23
    b8f4:	8c403fcc 	andi	r17,r17,255
    b8f8:	8802fe1e 	bne	r17,zero,c4f4 <___svfiprintf_internal_r+0x1368>
    b8fc:	8080080c 	andi	r2,r16,32
    b900:	10004626 	beq	r2,zero,ba1c <___svfiprintf_internal_r+0x890>
    b904:	d9002417 	ldw	r4,144(sp)
    b908:	20800117 	ldw	r2,4(r4)
    b90c:	24800017 	ldw	r18,0(r4)
    b910:	21000204 	addi	r4,r4,8
    b914:	d9002415 	stw	r4,144(sp)
    b918:	1029883a 	mov	r20,r2
    b91c:	10004a16 	blt	r2,zero,ba48 <___svfiprintf_internal_r+0x8bc>
    b920:	d9002017 	ldw	r4,128(sp)
    b924:	dd401d83 	ldbu	r21,118(sp)
    b928:	2001eb16 	blt	r4,zero,c0d8 <___svfiprintf_internal_r+0xf4c>
    b92c:	00ffdfc4 	movi	r3,-129
    b930:	9504b03a 	or	r2,r18,r20
    b934:	80e0703a 	and	r16,r16,r3
    b938:	103f3326 	beq	r2,zero,b608 <__alt_mem_Onchip_SRAM+0xf800b608>
    b93c:	a0009426 	beq	r20,zero,bb90 <___svfiprintf_internal_r+0xa04>
    b940:	dc401a04 	addi	r17,sp,104
    b944:	402f883a 	mov	r23,r8
    b948:	9009883a 	mov	r4,r18
    b94c:	a00b883a 	mov	r5,r20
    b950:	01800284 	movi	r6,10
    b954:	000f883a 	mov	r7,zero
    b958:	000ec780 	call	ec78 <__umoddi3>
    b95c:	10800c04 	addi	r2,r2,48
    b960:	8c7fffc4 	addi	r17,r17,-1
    b964:	9009883a 	mov	r4,r18
    b968:	a00b883a 	mov	r5,r20
    b96c:	88800005 	stb	r2,0(r17)
    b970:	01800284 	movi	r6,10
    b974:	000f883a 	mov	r7,zero
    b978:	000e67c0 	call	e67c <__udivdi3>
    b97c:	1025883a 	mov	r18,r2
    b980:	10c4b03a 	or	r2,r2,r3
    b984:	1829883a 	mov	r20,r3
    b988:	103fef1e 	bne	r2,zero,b948 <__alt_mem_Onchip_SRAM+0xf800b948>
    b98c:	d9001e17 	ldw	r4,120(sp)
    b990:	b811883a 	mov	r8,r23
    b994:	2469c83a 	sub	r20,r4,r17
    b998:	003f2006 	br	b61c <__alt_mem_Onchip_SRAM+0xf800b61c>
    b99c:	d8802417 	ldw	r2,144(sp)
    b9a0:	8821883a 	mov	r16,r17
    b9a4:	d8001d85 	stb	zero,118(sp)
    b9a8:	14400017 	ldw	r17,0(r2)
    b9ac:	b811883a 	mov	r8,r23
    b9b0:	15c00104 	addi	r23,r2,4
    b9b4:	88026c26 	beq	r17,zero,c368 <___svfiprintf_internal_r+0x11dc>
    b9b8:	d8c02017 	ldw	r3,128(sp)
    b9bc:	18025f16 	blt	r3,zero,c33c <___svfiprintf_internal_r+0x11b0>
    b9c0:	180d883a 	mov	r6,r3
    b9c4:	000b883a 	mov	r5,zero
    b9c8:	8809883a 	mov	r4,r17
    b9cc:	da002d15 	stw	r8,180(sp)
    b9d0:	00090a80 	call	90a8 <memchr>
    b9d4:	da002d17 	ldw	r8,180(sp)
    b9d8:	1002a526 	beq	r2,zero,c470 <___svfiprintf_internal_r+0x12e4>
    b9dc:	1469c83a 	sub	r20,r2,r17
    b9e0:	dd401d83 	ldbu	r21,118(sp)
    b9e4:	ddc02415 	stw	r23,144(sp)
    b9e8:	d8002015 	stw	zero,128(sp)
    b9ec:	003f0b06 	br	b61c <__alt_mem_Onchip_SRAM+0xf800b61c>
    b9f0:	8c400814 	ori	r17,r17,32
    b9f4:	98c00007 	ldb	r3,0(r19)
    b9f8:	003e3006 	br	b2bc <__alt_mem_Onchip_SRAM+0xf800b2bc>
    b9fc:	8821883a 	mov	r16,r17
    ba00:	dc402103 	ldbu	r17,132(sp)
    ba04:	b811883a 	mov	r8,r23
    ba08:	8c403fcc 	andi	r17,r17,255
    ba0c:	8802b01e 	bne	r17,zero,c4d0 <___svfiprintf_internal_r+0x1344>
    ba10:	84000414 	ori	r16,r16,16
    ba14:	8080080c 	andi	r2,r16,32
    ba18:	103fba1e 	bne	r2,zero,b904 <__alt_mem_Onchip_SRAM+0xf800b904>
    ba1c:	8080040c 	andi	r2,r16,16
    ba20:	1001df1e 	bne	r2,zero,c1a0 <___svfiprintf_internal_r+0x1014>
    ba24:	8080100c 	andi	r2,r16,64
    ba28:	10023d26 	beq	r2,zero,c320 <___svfiprintf_internal_r+0x1194>
    ba2c:	d8802417 	ldw	r2,144(sp)
    ba30:	1480000f 	ldh	r18,0(r2)
    ba34:	10800104 	addi	r2,r2,4
    ba38:	d8802415 	stw	r2,144(sp)
    ba3c:	9029d7fa 	srai	r20,r18,31
    ba40:	a005883a 	mov	r2,r20
    ba44:	103fb60e 	bge	r2,zero,b920 <__alt_mem_Onchip_SRAM+0xf800b920>
    ba48:	d9402017 	ldw	r5,128(sp)
    ba4c:	04a5c83a 	sub	r18,zero,r18
    ba50:	05400b44 	movi	r21,45
    ba54:	9004c03a 	cmpne	r2,r18,zero
    ba58:	0529c83a 	sub	r20,zero,r20
    ba5c:	dd401d85 	stb	r21,118(sp)
    ba60:	a0a9c83a 	sub	r20,r20,r2
    ba64:	28026c16 	blt	r5,zero,c418 <___svfiprintf_internal_r+0x128c>
    ba68:	00bfdfc4 	movi	r2,-129
    ba6c:	80a0703a 	and	r16,r16,r2
    ba70:	a03fb31e 	bne	r20,zero,b940 <__alt_mem_Onchip_SRAM+0xf800b940>
    ba74:	00004606 	br	bb90 <___svfiprintf_internal_r+0xa04>
    ba78:	9839883a 	mov	fp,r19
    ba7c:	d8002515 	stw	zero,148(sp)
    ba80:	1c3ff404 	addi	r16,r3,-48
    ba84:	0009883a 	mov	r4,zero
    ba88:	01400284 	movi	r5,10
    ba8c:	0000eb00 	call	eb0 <__mulsi3>
    ba90:	e0c00007 	ldb	r3,0(fp)
    ba94:	8089883a 	add	r4,r16,r2
    ba98:	9cc00044 	addi	r19,r19,1
    ba9c:	1c3ff404 	addi	r16,r3,-48
    baa0:	9839883a 	mov	fp,r19
    baa4:	a43ff82e 	bgeu	r20,r16,ba88 <__alt_mem_Onchip_SRAM+0xf800ba88>
    baa8:	d9002515 	stw	r4,148(sp)
    baac:	18bff804 	addi	r2,r3,-32
    bab0:	90be052e 	bgeu	r18,r2,b2c8 <__alt_mem_Onchip_SRAM+0xf800b2c8>
    bab4:	8821883a 	mov	r16,r17
    bab8:	dc402103 	ldbu	r17,132(sp)
    babc:	b811883a 	mov	r8,r23
    bac0:	8c403fcc 	andi	r17,r17,255
    bac4:	88028d1e 	bne	r17,zero,c4fc <___svfiprintf_internal_r+0x1370>
    bac8:	1800ea26 	beq	r3,zero,be74 <___svfiprintf_internal_r+0xce8>
    bacc:	04800044 	movi	r18,1
    bad0:	d8c01005 	stb	r3,64(sp)
    bad4:	d8001d85 	stb	zero,118(sp)
    bad8:	9029883a 	mov	r20,r18
    badc:	dc401004 	addi	r17,sp,64
    bae0:	003f1306 	br	b730 <__alt_mem_Onchip_SRAM+0xf800b730>
    bae4:	8c402014 	ori	r17,r17,128
    bae8:	98c00007 	ldb	r3,0(r19)
    baec:	003df306 	br	b2bc <__alt_mem_Onchip_SRAM+0xf800b2bc>
    baf0:	98c00007 	ldb	r3,0(r19)
    baf4:	01000a84 	movi	r4,42
    baf8:	9f000044 	addi	fp,r19,1
    bafc:	19026326 	beq	r3,r4,c48c <___svfiprintf_internal_r+0x1300>
    bb00:	1c3ff404 	addi	r16,r3,-48
    bb04:	0009883a 	mov	r4,zero
    bb08:	a4025636 	bltu	r20,r16,c464 <___svfiprintf_internal_r+0x12d8>
    bb0c:	01400284 	movi	r5,10
    bb10:	0000eb00 	call	eb0 <__mulsi3>
    bb14:	e0c00007 	ldb	r3,0(fp)
    bb18:	1409883a 	add	r4,r2,r16
    bb1c:	e4c00044 	addi	r19,fp,1
    bb20:	1c3ff404 	addi	r16,r3,-48
    bb24:	9839883a 	mov	fp,r19
    bb28:	a43ff82e 	bgeu	r20,r16,bb0c <__alt_mem_Onchip_SRAM+0xf800bb0c>
    bb2c:	20020c16 	blt	r4,zero,c360 <___svfiprintf_internal_r+0x11d4>
    bb30:	d9002015 	stw	r4,128(sp)
    bb34:	003de206 	br	b2c0 <__alt_mem_Onchip_SRAM+0xf800b2c0>
    bb38:	8821883a 	mov	r16,r17
    bb3c:	dc402103 	ldbu	r17,132(sp)
    bb40:	b811883a 	mov	r8,r23
    bb44:	8c403fcc 	andi	r17,r17,255
    bb48:	8802721e 	bne	r17,zero,c514 <___svfiprintf_internal_r+0x1388>
    bb4c:	84000414 	ori	r16,r16,16
    bb50:	8080080c 	andi	r2,r16,32
    bb54:	103e9f1e 	bne	r2,zero,b5d4 <__alt_mem_Onchip_SRAM+0xf800b5d4>
    bb58:	8080040c 	andi	r2,r16,16
    bb5c:	10015326 	beq	r2,zero,c0ac <___svfiprintf_internal_r+0xf20>
    bb60:	d8c02417 	ldw	r3,144(sp)
    bb64:	d9002017 	ldw	r4,128(sp)
    bb68:	d8001d85 	stb	zero,118(sp)
    bb6c:	18800104 	addi	r2,r3,4
    bb70:	1c800017 	ldw	r18,0(r3)
    bb74:	0029883a 	mov	r20,zero
    bb78:	20015516 	blt	r4,zero,c0d0 <___svfiprintf_internal_r+0xf44>
    bb7c:	00ffdfc4 	movi	r3,-129
    bb80:	d8802415 	stw	r2,144(sp)
    bb84:	80e0703a 	and	r16,r16,r3
    bb88:	002b883a 	mov	r21,zero
    bb8c:	903e9e26 	beq	r18,zero,b608 <__alt_mem_Onchip_SRAM+0xf800b608>
    bb90:	00800244 	movi	r2,9
    bb94:	14bf6a36 	bltu	r2,r18,b940 <__alt_mem_Onchip_SRAM+0xf800b940>
    bb98:	94800c04 	addi	r18,r18,48
    bb9c:	dc8019c5 	stb	r18,103(sp)
    bba0:	dd002c17 	ldw	r20,176(sp)
    bba4:	dc4019c4 	addi	r17,sp,103
    bba8:	003e9c06 	br	b61c <__alt_mem_Onchip_SRAM+0xf800b61c>
    bbac:	8821883a 	mov	r16,r17
    bbb0:	dc402103 	ldbu	r17,132(sp)
    bbb4:	b811883a 	mov	r8,r23
    bbb8:	8c403fcc 	andi	r17,r17,255
    bbbc:	8802571e 	bne	r17,zero,c51c <___svfiprintf_internal_r+0x1390>
    bbc0:	84000414 	ori	r16,r16,16
    bbc4:	8080080c 	andi	r2,r16,32
    bbc8:	103ea91e 	bne	r2,zero,b670 <__alt_mem_Onchip_SRAM+0xf800b670>
    bbcc:	8080040c 	andi	r2,r16,16
    bbd0:	10018026 	beq	r2,zero,c1d4 <___svfiprintf_internal_r+0x1048>
    bbd4:	d9402417 	ldw	r5,144(sp)
    bbd8:	d8c02017 	ldw	r3,128(sp)
    bbdc:	d8001d85 	stb	zero,118(sp)
    bbe0:	28800104 	addi	r2,r5,4
    bbe4:	2c800017 	ldw	r18,0(r5)
    bbe8:	0029883a 	mov	r20,zero
    bbec:	18018216 	blt	r3,zero,c1f8 <___svfiprintf_internal_r+0x106c>
    bbf0:	00ffdfc4 	movi	r3,-129
    bbf4:	d8802415 	stw	r2,144(sp)
    bbf8:	80e0703a 	and	r16,r16,r3
    bbfc:	903ea81e 	bne	r18,zero,b6a0 <__alt_mem_Onchip_SRAM+0xf800b6a0>
    bc00:	d8802017 	ldw	r2,128(sp)
    bc04:	002b883a 	mov	r21,zero
    bc08:	1001f226 	beq	r2,zero,c3d4 <___svfiprintf_internal_r+0x1248>
    bc0c:	0025883a 	mov	r18,zero
    bc10:	0029883a 	mov	r20,zero
    bc14:	003ea306 	br	b6a4 <__alt_mem_Onchip_SRAM+0xf800b6a4>
    bc18:	d8c01c17 	ldw	r3,112(sp)
    bc1c:	d8801b17 	ldw	r2,108(sp)
    bc20:	d9001d87 	ldb	r4,118(sp)
    bc24:	20000b26 	beq	r4,zero,bc54 <___svfiprintf_internal_r+0xac8>
    bc28:	d9001d84 	addi	r4,sp,118
    bc2c:	18c00044 	addi	r3,r3,1
    bc30:	10800044 	addi	r2,r2,1
    bc34:	41000015 	stw	r4,0(r8)
    bc38:	01000044 	movi	r4,1
    bc3c:	41000115 	stw	r4,4(r8)
    bc40:	d8c01c15 	stw	r3,112(sp)
    bc44:	d8801b15 	stw	r2,108(sp)
    bc48:	010001c4 	movi	r4,7
    bc4c:	2080f316 	blt	r4,r2,c01c <___svfiprintf_internal_r+0xe90>
    bc50:	42000204 	addi	r8,r8,8
    bc54:	d9402117 	ldw	r5,132(sp)
    bc58:	28000b26 	beq	r5,zero,bc88 <___svfiprintf_internal_r+0xafc>
    bc5c:	d9001d04 	addi	r4,sp,116
    bc60:	18c00084 	addi	r3,r3,2
    bc64:	10800044 	addi	r2,r2,1
    bc68:	41000015 	stw	r4,0(r8)
    bc6c:	01000084 	movi	r4,2
    bc70:	41000115 	stw	r4,4(r8)
    bc74:	d8c01c15 	stw	r3,112(sp)
    bc78:	d8801b15 	stw	r2,108(sp)
    bc7c:	010001c4 	movi	r4,7
    bc80:	2080ef16 	blt	r4,r2,c040 <___svfiprintf_internal_r+0xeb4>
    bc84:	42000204 	addi	r8,r8,8
    bc88:	d9402217 	ldw	r5,136(sp)
    bc8c:	01002004 	movi	r4,128
    bc90:	29008f26 	beq	r5,r4,bed0 <___svfiprintf_internal_r+0xd44>
    bc94:	d9002017 	ldw	r4,128(sp)
    bc98:	252fc83a 	sub	r23,r4,r20
    bc9c:	05c0310e 	bge	zero,r23,bd64 <___svfiprintf_internal_r+0xbd8>
    bca0:	07000404 	movi	fp,16
    bca4:	e5c17d0e 	bge	fp,r23,c29c <___svfiprintf_internal_r+0x1110>
    bca8:	01000074 	movhi	r4,1
    bcac:	211b2304 	addi	r4,r4,27788
    bcb0:	dc002015 	stw	r16,128(sp)
    bcb4:	dc402215 	stw	r17,136(sp)
    bcb8:	d9002115 	stw	r4,132(sp)
    bcbc:	b823883a 	mov	r17,r23
    bcc0:	054001c4 	movi	r21,7
    bcc4:	982f883a 	mov	r23,r19
    bcc8:	dc002717 	ldw	r16,156(sp)
    bccc:	9027883a 	mov	r19,r18
    bcd0:	dc802317 	ldw	r18,140(sp)
    bcd4:	00000306 	br	bce4 <___svfiprintf_internal_r+0xb58>
    bcd8:	8c7ffc04 	addi	r17,r17,-16
    bcdc:	42000204 	addi	r8,r8,8
    bce0:	e440110e 	bge	fp,r17,bd28 <___svfiprintf_internal_r+0xb9c>
    bce4:	18c00404 	addi	r3,r3,16
    bce8:	10800044 	addi	r2,r2,1
    bcec:	45800015 	stw	r22,0(r8)
    bcf0:	47000115 	stw	fp,4(r8)
    bcf4:	d8c01c15 	stw	r3,112(sp)
    bcf8:	d8801b15 	stw	r2,108(sp)
    bcfc:	a8bff60e 	bge	r21,r2,bcd8 <__alt_mem_Onchip_SRAM+0xf800bcd8>
    bd00:	d9801a04 	addi	r6,sp,104
    bd04:	900b883a 	mov	r5,r18
    bd08:	8009883a 	mov	r4,r16
    bd0c:	000afbc0 	call	afbc <__ssprint_r>
    bd10:	10005e1e 	bne	r2,zero,be8c <___svfiprintf_internal_r+0xd00>
    bd14:	8c7ffc04 	addi	r17,r17,-16
    bd18:	d8c01c17 	ldw	r3,112(sp)
    bd1c:	d8801b17 	ldw	r2,108(sp)
    bd20:	d811883a 	mov	r8,sp
    bd24:	e47fef16 	blt	fp,r17,bce4 <__alt_mem_Onchip_SRAM+0xf800bce4>
    bd28:	9825883a 	mov	r18,r19
    bd2c:	dc002017 	ldw	r16,128(sp)
    bd30:	b827883a 	mov	r19,r23
    bd34:	882f883a 	mov	r23,r17
    bd38:	dc402217 	ldw	r17,136(sp)
    bd3c:	d9402117 	ldw	r5,132(sp)
    bd40:	1dc7883a 	add	r3,r3,r23
    bd44:	10800044 	addi	r2,r2,1
    bd48:	41400015 	stw	r5,0(r8)
    bd4c:	45c00115 	stw	r23,4(r8)
    bd50:	d8c01c15 	stw	r3,112(sp)
    bd54:	d8801b15 	stw	r2,108(sp)
    bd58:	010001c4 	movi	r4,7
    bd5c:	2080a616 	blt	r4,r2,bff8 <___svfiprintf_internal_r+0xe6c>
    bd60:	42000204 	addi	r8,r8,8
    bd64:	a0c7883a 	add	r3,r20,r3
    bd68:	10800044 	addi	r2,r2,1
    bd6c:	44400015 	stw	r17,0(r8)
    bd70:	45000115 	stw	r20,4(r8)
    bd74:	d8c01c15 	stw	r3,112(sp)
    bd78:	d8801b15 	stw	r2,108(sp)
    bd7c:	010001c4 	movi	r4,7
    bd80:	20808816 	blt	r4,r2,bfa4 <___svfiprintf_internal_r+0xe18>
    bd84:	42000204 	addi	r8,r8,8
    bd88:	8400010c 	andi	r16,r16,4
    bd8c:	80002c26 	beq	r16,zero,be40 <___svfiprintf_internal_r+0xcb4>
    bd90:	d8802517 	ldw	r2,148(sp)
    bd94:	14a1c83a 	sub	r16,r2,r18
    bd98:	0400290e 	bge	zero,r16,be40 <___svfiprintf_internal_r+0xcb4>
    bd9c:	04400404 	movi	r17,16
    bda0:	d8801b17 	ldw	r2,108(sp)
    bda4:	8c01a70e 	bge	r17,r16,c444 <___svfiprintf_internal_r+0x12b8>
    bda8:	01400074 	movhi	r5,1
    bdac:	295b2704 	addi	r5,r5,27804
    bdb0:	d9402815 	stw	r5,160(sp)
    bdb4:	050001c4 	movi	r20,7
    bdb8:	dd402717 	ldw	r21,156(sp)
    bdbc:	ddc02317 	ldw	r23,140(sp)
    bdc0:	00000306 	br	bdd0 <___svfiprintf_internal_r+0xc44>
    bdc4:	843ffc04 	addi	r16,r16,-16
    bdc8:	42000204 	addi	r8,r8,8
    bdcc:	8c00130e 	bge	r17,r16,be1c <___svfiprintf_internal_r+0xc90>
    bdd0:	01000074 	movhi	r4,1
    bdd4:	18c00404 	addi	r3,r3,16
    bdd8:	10800044 	addi	r2,r2,1
    bddc:	211b2704 	addi	r4,r4,27804
    bde0:	41000015 	stw	r4,0(r8)
    bde4:	44400115 	stw	r17,4(r8)
    bde8:	d8c01c15 	stw	r3,112(sp)
    bdec:	d8801b15 	stw	r2,108(sp)
    bdf0:	a0bff40e 	bge	r20,r2,bdc4 <__alt_mem_Onchip_SRAM+0xf800bdc4>
    bdf4:	d9801a04 	addi	r6,sp,104
    bdf8:	b80b883a 	mov	r5,r23
    bdfc:	a809883a 	mov	r4,r21
    be00:	000afbc0 	call	afbc <__ssprint_r>
    be04:	1000211e 	bne	r2,zero,be8c <___svfiprintf_internal_r+0xd00>
    be08:	843ffc04 	addi	r16,r16,-16
    be0c:	d8c01c17 	ldw	r3,112(sp)
    be10:	d8801b17 	ldw	r2,108(sp)
    be14:	d811883a 	mov	r8,sp
    be18:	8c3fed16 	blt	r17,r16,bdd0 <__alt_mem_Onchip_SRAM+0xf800bdd0>
    be1c:	d9402817 	ldw	r5,160(sp)
    be20:	1c07883a 	add	r3,r3,r16
    be24:	10800044 	addi	r2,r2,1
    be28:	41400015 	stw	r5,0(r8)
    be2c:	44000115 	stw	r16,4(r8)
    be30:	d8c01c15 	stw	r3,112(sp)
    be34:	d8801b15 	stw	r2,108(sp)
    be38:	010001c4 	movi	r4,7
    be3c:	2080b516 	blt	r4,r2,c114 <___svfiprintf_internal_r+0xf88>
    be40:	d8802517 	ldw	r2,148(sp)
    be44:	1480010e 	bge	r2,r18,be4c <___svfiprintf_internal_r+0xcc0>
    be48:	9005883a 	mov	r2,r18
    be4c:	d9002617 	ldw	r4,152(sp)
    be50:	2089883a 	add	r4,r4,r2
    be54:	d9002615 	stw	r4,152(sp)
    be58:	18005a1e 	bne	r3,zero,bfc4 <___svfiprintf_internal_r+0xe38>
    be5c:	98800007 	ldb	r2,0(r19)
    be60:	d8001b15 	stw	zero,108(sp)
    be64:	d811883a 	mov	r8,sp
    be68:	103cec1e 	bne	r2,zero,b21c <__alt_mem_Onchip_SRAM+0xf800b21c>
    be6c:	9825883a 	mov	r18,r19
    be70:	003d0206 	br	b27c <__alt_mem_Onchip_SRAM+0xf800b27c>
    be74:	d8801c17 	ldw	r2,112(sp)
    be78:	10000426 	beq	r2,zero,be8c <___svfiprintf_internal_r+0xd00>
    be7c:	d9402317 	ldw	r5,140(sp)
    be80:	d9002717 	ldw	r4,156(sp)
    be84:	d9801a04 	addi	r6,sp,104
    be88:	000afbc0 	call	afbc <__ssprint_r>
    be8c:	d9402317 	ldw	r5,140(sp)
    be90:	d8802617 	ldw	r2,152(sp)
    be94:	28c0030b 	ldhu	r3,12(r5)
    be98:	18c0100c 	andi	r3,r3,64
    be9c:	18015c1e 	bne	r3,zero,c410 <___svfiprintf_internal_r+0x1284>
    bea0:	dfc03717 	ldw	ra,220(sp)
    bea4:	df003617 	ldw	fp,216(sp)
    bea8:	ddc03517 	ldw	r23,212(sp)
    beac:	dd803417 	ldw	r22,208(sp)
    beb0:	dd403317 	ldw	r21,204(sp)
    beb4:	dd003217 	ldw	r20,200(sp)
    beb8:	dcc03117 	ldw	r19,196(sp)
    bebc:	dc803017 	ldw	r18,192(sp)
    bec0:	dc402f17 	ldw	r17,188(sp)
    bec4:	dc002e17 	ldw	r16,184(sp)
    bec8:	dec03804 	addi	sp,sp,224
    becc:	f800283a 	ret
    bed0:	d9002517 	ldw	r4,148(sp)
    bed4:	24afc83a 	sub	r23,r4,r18
    bed8:	05ff6e0e 	bge	zero,r23,bc94 <__alt_mem_Onchip_SRAM+0xf800bc94>
    bedc:	07000404 	movi	fp,16
    bee0:	e5c15c0e 	bge	fp,r23,c454 <___svfiprintf_internal_r+0x12c8>
    bee4:	01000074 	movhi	r4,1
    bee8:	211b2304 	addi	r4,r4,27788
    beec:	dc002215 	stw	r16,136(sp)
    bef0:	dc402815 	stw	r17,160(sp)
    bef4:	d9002115 	stw	r4,132(sp)
    bef8:	b823883a 	mov	r17,r23
    befc:	054001c4 	movi	r21,7
    bf00:	982f883a 	mov	r23,r19
    bf04:	dc002717 	ldw	r16,156(sp)
    bf08:	9027883a 	mov	r19,r18
    bf0c:	dc802317 	ldw	r18,140(sp)
    bf10:	00000306 	br	bf20 <___svfiprintf_internal_r+0xd94>
    bf14:	8c7ffc04 	addi	r17,r17,-16
    bf18:	42000204 	addi	r8,r8,8
    bf1c:	e440110e 	bge	fp,r17,bf64 <___svfiprintf_internal_r+0xdd8>
    bf20:	18c00404 	addi	r3,r3,16
    bf24:	10800044 	addi	r2,r2,1
    bf28:	45800015 	stw	r22,0(r8)
    bf2c:	47000115 	stw	fp,4(r8)
    bf30:	d8c01c15 	stw	r3,112(sp)
    bf34:	d8801b15 	stw	r2,108(sp)
    bf38:	a8bff60e 	bge	r21,r2,bf14 <__alt_mem_Onchip_SRAM+0xf800bf14>
    bf3c:	d9801a04 	addi	r6,sp,104
    bf40:	900b883a 	mov	r5,r18
    bf44:	8009883a 	mov	r4,r16
    bf48:	000afbc0 	call	afbc <__ssprint_r>
    bf4c:	103fcf1e 	bne	r2,zero,be8c <__alt_mem_Onchip_SRAM+0xf800be8c>
    bf50:	8c7ffc04 	addi	r17,r17,-16
    bf54:	d8c01c17 	ldw	r3,112(sp)
    bf58:	d8801b17 	ldw	r2,108(sp)
    bf5c:	d811883a 	mov	r8,sp
    bf60:	e47fef16 	blt	fp,r17,bf20 <__alt_mem_Onchip_SRAM+0xf800bf20>
    bf64:	9825883a 	mov	r18,r19
    bf68:	dc002217 	ldw	r16,136(sp)
    bf6c:	b827883a 	mov	r19,r23
    bf70:	882f883a 	mov	r23,r17
    bf74:	dc402817 	ldw	r17,160(sp)
    bf78:	d9402117 	ldw	r5,132(sp)
    bf7c:	1dc7883a 	add	r3,r3,r23
    bf80:	10800044 	addi	r2,r2,1
    bf84:	41400015 	stw	r5,0(r8)
    bf88:	45c00115 	stw	r23,4(r8)
    bf8c:	d8c01c15 	stw	r3,112(sp)
    bf90:	d8801b15 	stw	r2,108(sp)
    bf94:	010001c4 	movi	r4,7
    bf98:	2080b716 	blt	r4,r2,c278 <___svfiprintf_internal_r+0x10ec>
    bf9c:	42000204 	addi	r8,r8,8
    bfa0:	003f3c06 	br	bc94 <__alt_mem_Onchip_SRAM+0xf800bc94>
    bfa4:	d9402317 	ldw	r5,140(sp)
    bfa8:	d9002717 	ldw	r4,156(sp)
    bfac:	d9801a04 	addi	r6,sp,104
    bfb0:	000afbc0 	call	afbc <__ssprint_r>
    bfb4:	103fb51e 	bne	r2,zero,be8c <__alt_mem_Onchip_SRAM+0xf800be8c>
    bfb8:	d8c01c17 	ldw	r3,112(sp)
    bfbc:	d811883a 	mov	r8,sp
    bfc0:	003f7106 	br	bd88 <__alt_mem_Onchip_SRAM+0xf800bd88>
    bfc4:	d9402317 	ldw	r5,140(sp)
    bfc8:	d9002717 	ldw	r4,156(sp)
    bfcc:	d9801a04 	addi	r6,sp,104
    bfd0:	000afbc0 	call	afbc <__ssprint_r>
    bfd4:	103fa126 	beq	r2,zero,be5c <__alt_mem_Onchip_SRAM+0xf800be5c>
    bfd8:	003fac06 	br	be8c <__alt_mem_Onchip_SRAM+0xf800be8c>
    bfdc:	d9402317 	ldw	r5,140(sp)
    bfe0:	d9002717 	ldw	r4,156(sp)
    bfe4:	d9801a04 	addi	r6,sp,104
    bfe8:	000afbc0 	call	afbc <__ssprint_r>
    bfec:	103fa71e 	bne	r2,zero,be8c <__alt_mem_Onchip_SRAM+0xf800be8c>
    bff0:	d811883a 	mov	r8,sp
    bff4:	003c9e06 	br	b270 <__alt_mem_Onchip_SRAM+0xf800b270>
    bff8:	d9402317 	ldw	r5,140(sp)
    bffc:	d9002717 	ldw	r4,156(sp)
    c000:	d9801a04 	addi	r6,sp,104
    c004:	000afbc0 	call	afbc <__ssprint_r>
    c008:	103fa01e 	bne	r2,zero,be8c <__alt_mem_Onchip_SRAM+0xf800be8c>
    c00c:	d8c01c17 	ldw	r3,112(sp)
    c010:	d8801b17 	ldw	r2,108(sp)
    c014:	d811883a 	mov	r8,sp
    c018:	003f5206 	br	bd64 <__alt_mem_Onchip_SRAM+0xf800bd64>
    c01c:	d9402317 	ldw	r5,140(sp)
    c020:	d9002717 	ldw	r4,156(sp)
    c024:	d9801a04 	addi	r6,sp,104
    c028:	000afbc0 	call	afbc <__ssprint_r>
    c02c:	103f971e 	bne	r2,zero,be8c <__alt_mem_Onchip_SRAM+0xf800be8c>
    c030:	d8c01c17 	ldw	r3,112(sp)
    c034:	d8801b17 	ldw	r2,108(sp)
    c038:	d811883a 	mov	r8,sp
    c03c:	003f0506 	br	bc54 <__alt_mem_Onchip_SRAM+0xf800bc54>
    c040:	d9402317 	ldw	r5,140(sp)
    c044:	d9002717 	ldw	r4,156(sp)
    c048:	d9801a04 	addi	r6,sp,104
    c04c:	000afbc0 	call	afbc <__ssprint_r>
    c050:	103f8e1e 	bne	r2,zero,be8c <__alt_mem_Onchip_SRAM+0xf800be8c>
    c054:	d8c01c17 	ldw	r3,112(sp)
    c058:	d8801b17 	ldw	r2,108(sp)
    c05c:	d811883a 	mov	r8,sp
    c060:	003f0906 	br	bc88 <__alt_mem_Onchip_SRAM+0xf800bc88>
    c064:	d9402017 	ldw	r5,128(sp)
    c068:	d8001d85 	stb	zero,118(sp)
    c06c:	28007716 	blt	r5,zero,c24c <___svfiprintf_internal_r+0x10c0>
    c070:	00ffdfc4 	movi	r3,-129
    c074:	9504b03a 	or	r2,r18,r20
    c078:	80e0703a 	and	r16,r16,r3
    c07c:	103d3926 	beq	r2,zero,b564 <__alt_mem_Onchip_SRAM+0xf800b564>
    c080:	002b883a 	mov	r21,zero
    c084:	003d3c06 	br	b578 <__alt_mem_Onchip_SRAM+0xf800b578>
    c088:	d9402317 	ldw	r5,140(sp)
    c08c:	d9002717 	ldw	r4,156(sp)
    c090:	d9801a04 	addi	r6,sp,104
    c094:	000afbc0 	call	afbc <__ssprint_r>
    c098:	103f7c1e 	bne	r2,zero,be8c <__alt_mem_Onchip_SRAM+0xf800be8c>
    c09c:	d8c01c17 	ldw	r3,112(sp)
    c0a0:	d8801b17 	ldw	r2,108(sp)
    c0a4:	d811883a 	mov	r8,sp
    c0a8:	003edd06 	br	bc20 <__alt_mem_Onchip_SRAM+0xf800bc20>
    c0ac:	8080100c 	andi	r2,r16,64
    c0b0:	d8001d85 	stb	zero,118(sp)
    c0b4:	10008426 	beq	r2,zero,c2c8 <___svfiprintf_internal_r+0x113c>
    c0b8:	d9402417 	ldw	r5,144(sp)
    c0bc:	d8c02017 	ldw	r3,128(sp)
    c0c0:	0029883a 	mov	r20,zero
    c0c4:	28800104 	addi	r2,r5,4
    c0c8:	2c80000b 	ldhu	r18,0(r5)
    c0cc:	183eab0e 	bge	r3,zero,bb7c <__alt_mem_Onchip_SRAM+0xf800bb7c>
    c0d0:	d8802415 	stw	r2,144(sp)
    c0d4:	002b883a 	mov	r21,zero
    c0d8:	9504b03a 	or	r2,r18,r20
    c0dc:	103e171e 	bne	r2,zero,b93c <__alt_mem_Onchip_SRAM+0xf800b93c>
    c0e0:	00800044 	movi	r2,1
    c0e4:	10803fcc 	andi	r2,r2,255
    c0e8:	00c00044 	movi	r3,1
    c0ec:	10c05c26 	beq	r2,r3,c260 <___svfiprintf_internal_r+0x10d4>
    c0f0:	00c00084 	movi	r3,2
    c0f4:	10fd1e26 	beq	r2,r3,b570 <__alt_mem_Onchip_SRAM+0xf800b570>
    c0f8:	003ec406 	br	bc0c <__alt_mem_Onchip_SRAM+0xf800bc0c>
    c0fc:	d9401e17 	ldw	r5,120(sp)
    c100:	2c69c83a 	sub	r20,r5,r17
    c104:	003d4506 	br	b61c <__alt_mem_Onchip_SRAM+0xf800b61c>
    c108:	d8802415 	stw	r2,144(sp)
    c10c:	98c00007 	ldb	r3,0(r19)
    c110:	003c6a06 	br	b2bc <__alt_mem_Onchip_SRAM+0xf800b2bc>
    c114:	d9402317 	ldw	r5,140(sp)
    c118:	d9002717 	ldw	r4,156(sp)
    c11c:	d9801a04 	addi	r6,sp,104
    c120:	000afbc0 	call	afbc <__ssprint_r>
    c124:	103f591e 	bne	r2,zero,be8c <__alt_mem_Onchip_SRAM+0xf800be8c>
    c128:	d8c01c17 	ldw	r3,112(sp)
    c12c:	003f4406 	br	be40 <__alt_mem_Onchip_SRAM+0xf800be40>
    c130:	01400074 	movhi	r5,1
    c134:	295aba04 	addi	r5,r5,27368
    c138:	d9402915 	stw	r5,164(sp)
    c13c:	003d0906 	br	b564 <__alt_mem_Onchip_SRAM+0xf800b564>
    c140:	d8c02417 	ldw	r3,144(sp)
    c144:	d9002617 	ldw	r4,152(sp)
    c148:	d9402417 	ldw	r5,144(sp)
    c14c:	18800017 	ldw	r2,0(r3)
    c150:	2007d7fa 	srai	r3,r4,31
    c154:	29400104 	addi	r5,r5,4
    c158:	d9402415 	stw	r5,144(sp)
    c15c:	11000015 	stw	r4,0(r2)
    c160:	10c00115 	stw	r3,4(r2)
    c164:	003c2b06 	br	b214 <__alt_mem_Onchip_SRAM+0xf800b214>
    c168:	d8c01d45 	stb	r3,117(sp)
    c16c:	d8c02017 	ldw	r3,128(sp)
    c170:	00800c04 	movi	r2,48
    c174:	d8801d05 	stb	r2,116(sp)
    c178:	d8001d85 	stb	zero,118(sp)
    c17c:	80800094 	ori	r2,r16,2
    c180:	1800ac16 	blt	r3,zero,c434 <___svfiprintf_internal_r+0x12a8>
    c184:	00bfdfc4 	movi	r2,-129
    c188:	80a0703a 	and	r16,r16,r2
    c18c:	84000094 	ori	r16,r16,2
    c190:	002b883a 	mov	r21,zero
    c194:	003cf806 	br	b578 <__alt_mem_Onchip_SRAM+0xf800b578>
    c198:	98c00007 	ldb	r3,0(r19)
    c19c:	003c4706 	br	b2bc <__alt_mem_Onchip_SRAM+0xf800b2bc>
    c1a0:	d9402417 	ldw	r5,144(sp)
    c1a4:	2c800017 	ldw	r18,0(r5)
    c1a8:	29400104 	addi	r5,r5,4
    c1ac:	d9402415 	stw	r5,144(sp)
    c1b0:	9029d7fa 	srai	r20,r18,31
    c1b4:	a005883a 	mov	r2,r20
    c1b8:	003dd806 	br	b91c <__alt_mem_Onchip_SRAM+0xf800b91c>
    c1bc:	d9402417 	ldw	r5,144(sp)
    c1c0:	0029883a 	mov	r20,zero
    c1c4:	2c800017 	ldw	r18,0(r5)
    c1c8:	29400104 	addi	r5,r5,4
    c1cc:	d9402415 	stw	r5,144(sp)
    c1d0:	003cdb06 	br	b540 <__alt_mem_Onchip_SRAM+0xf800b540>
    c1d4:	8080100c 	andi	r2,r16,64
    c1d8:	d8001d85 	stb	zero,118(sp)
    c1dc:	10003326 	beq	r2,zero,c2ac <___svfiprintf_internal_r+0x1120>
    c1e0:	d9002417 	ldw	r4,144(sp)
    c1e4:	d9402017 	ldw	r5,128(sp)
    c1e8:	0029883a 	mov	r20,zero
    c1ec:	20800104 	addi	r2,r4,4
    c1f0:	2480000b 	ldhu	r18,0(r4)
    c1f4:	283e7e0e 	bge	r5,zero,bbf0 <__alt_mem_Onchip_SRAM+0xf800bbf0>
    c1f8:	9506b03a 	or	r3,r18,r20
    c1fc:	d8802415 	stw	r2,144(sp)
    c200:	183d271e 	bne	r3,zero,b6a0 <__alt_mem_Onchip_SRAM+0xf800b6a0>
    c204:	002b883a 	mov	r21,zero
    c208:	0005883a 	mov	r2,zero
    c20c:	003fb506 	br	c0e4 <__alt_mem_Onchip_SRAM+0xf800c0e4>
    c210:	98c00043 	ldbu	r3,1(r19)
    c214:	8c400814 	ori	r17,r17,32
    c218:	9cc00044 	addi	r19,r19,1
    c21c:	18c03fcc 	andi	r3,r3,255
    c220:	18c0201c 	xori	r3,r3,128
    c224:	18ffe004 	addi	r3,r3,-128
    c228:	003c2406 	br	b2bc <__alt_mem_Onchip_SRAM+0xf800b2bc>
    c22c:	d8c02415 	stw	r3,144(sp)
    c230:	002b883a 	mov	r21,zero
    c234:	003fa806 	br	c0d8 <__alt_mem_Onchip_SRAM+0xf800c0d8>
    c238:	01000074 	movhi	r4,1
    c23c:	211aba04 	addi	r4,r4,27368
    c240:	d9002915 	stw	r4,164(sp)
    c244:	d8c02415 	stw	r3,144(sp)
    c248:	1021883a 	mov	r16,r2
    c24c:	9504b03a 	or	r2,r18,r20
    c250:	103f8b1e 	bne	r2,zero,c080 <__alt_mem_Onchip_SRAM+0xf800c080>
    c254:	002b883a 	mov	r21,zero
    c258:	00800084 	movi	r2,2
    c25c:	003fa106 	br	c0e4 <__alt_mem_Onchip_SRAM+0xf800c0e4>
    c260:	0025883a 	mov	r18,zero
    c264:	94800c04 	addi	r18,r18,48
    c268:	dc8019c5 	stb	r18,103(sp)
    c26c:	dd002c17 	ldw	r20,176(sp)
    c270:	dc4019c4 	addi	r17,sp,103
    c274:	003ce906 	br	b61c <__alt_mem_Onchip_SRAM+0xf800b61c>
    c278:	d9402317 	ldw	r5,140(sp)
    c27c:	d9002717 	ldw	r4,156(sp)
    c280:	d9801a04 	addi	r6,sp,104
    c284:	000afbc0 	call	afbc <__ssprint_r>
    c288:	103f001e 	bne	r2,zero,be8c <__alt_mem_Onchip_SRAM+0xf800be8c>
    c28c:	d8c01c17 	ldw	r3,112(sp)
    c290:	d8801b17 	ldw	r2,108(sp)
    c294:	d811883a 	mov	r8,sp
    c298:	003e7e06 	br	bc94 <__alt_mem_Onchip_SRAM+0xf800bc94>
    c29c:	01400074 	movhi	r5,1
    c2a0:	295b2304 	addi	r5,r5,27788
    c2a4:	d9402115 	stw	r5,132(sp)
    c2a8:	003ea406 	br	bd3c <__alt_mem_Onchip_SRAM+0xf800bd3c>
    c2ac:	d8c02417 	ldw	r3,144(sp)
    c2b0:	d9002017 	ldw	r4,128(sp)
    c2b4:	0029883a 	mov	r20,zero
    c2b8:	18800104 	addi	r2,r3,4
    c2bc:	1c800017 	ldw	r18,0(r3)
    c2c0:	203e4b0e 	bge	r4,zero,bbf0 <__alt_mem_Onchip_SRAM+0xf800bbf0>
    c2c4:	003fcc06 	br	c1f8 <__alt_mem_Onchip_SRAM+0xf800c1f8>
    c2c8:	d9002417 	ldw	r4,144(sp)
    c2cc:	d9402017 	ldw	r5,128(sp)
    c2d0:	0029883a 	mov	r20,zero
    c2d4:	20800104 	addi	r2,r4,4
    c2d8:	24800017 	ldw	r18,0(r4)
    c2dc:	283e270e 	bge	r5,zero,bb7c <__alt_mem_Onchip_SRAM+0xf800bb7c>
    c2e0:	003f7b06 	br	c0d0 <__alt_mem_Onchip_SRAM+0xf800c0d0>
    c2e4:	8400100c 	andi	r16,r16,64
    c2e8:	80003326 	beq	r16,zero,c3b8 <___svfiprintf_internal_r+0x122c>
    c2ec:	d9402417 	ldw	r5,144(sp)
    c2f0:	d8c02617 	ldw	r3,152(sp)
    c2f4:	28800017 	ldw	r2,0(r5)
    c2f8:	29400104 	addi	r5,r5,4
    c2fc:	d9402415 	stw	r5,144(sp)
    c300:	10c0000d 	sth	r3,0(r2)
    c304:	003bc306 	br	b214 <__alt_mem_Onchip_SRAM+0xf800b214>
    c308:	d9002417 	ldw	r4,144(sp)
    c30c:	0029883a 	mov	r20,zero
    c310:	24800017 	ldw	r18,0(r4)
    c314:	21000104 	addi	r4,r4,4
    c318:	d9002415 	stw	r4,144(sp)
    c31c:	003c8806 	br	b540 <__alt_mem_Onchip_SRAM+0xf800b540>
    c320:	d8c02417 	ldw	r3,144(sp)
    c324:	1c800017 	ldw	r18,0(r3)
    c328:	18c00104 	addi	r3,r3,4
    c32c:	d8c02415 	stw	r3,144(sp)
    c330:	9029d7fa 	srai	r20,r18,31
    c334:	a005883a 	mov	r2,r20
    c338:	003d7806 	br	b91c <__alt_mem_Onchip_SRAM+0xf800b91c>
    c33c:	8809883a 	mov	r4,r17
    c340:	da002d15 	stw	r8,180(sp)
    c344:	00013700 	call	1370 <strlen>
    c348:	1029883a 	mov	r20,r2
    c34c:	dd401d83 	ldbu	r21,118(sp)
    c350:	ddc02415 	stw	r23,144(sp)
    c354:	d8002015 	stw	zero,128(sp)
    c358:	da002d17 	ldw	r8,180(sp)
    c35c:	003caf06 	br	b61c <__alt_mem_Onchip_SRAM+0xf800b61c>
    c360:	013fffc4 	movi	r4,-1
    c364:	003df206 	br	bb30 <__alt_mem_Onchip_SRAM+0xf800bb30>
    c368:	dd002017 	ldw	r20,128(sp)
    c36c:	00800184 	movi	r2,6
    c370:	1500012e 	bgeu	r2,r20,c378 <___svfiprintf_internal_r+0x11ec>
    c374:	1029883a 	mov	r20,r2
    c378:	a025883a 	mov	r18,r20
    c37c:	a0004116 	blt	r20,zero,c484 <___svfiprintf_internal_r+0x12f8>
    c380:	04400074 	movhi	r17,1
    c384:	ddc02415 	stw	r23,144(sp)
    c388:	8c5abf04 	addi	r17,r17,27388
    c38c:	003ce806 	br	b730 <__alt_mem_Onchip_SRAM+0xf800b730>
    c390:	04001004 	movi	r16,64
    c394:	800b883a 	mov	r5,r16
    c398:	000889c0 	call	889c <_malloc_r>
    c39c:	d8c02317 	ldw	r3,140(sp)
    c3a0:	18800015 	stw	r2,0(r3)
    c3a4:	18800415 	stw	r2,16(r3)
    c3a8:	10004d26 	beq	r2,zero,c4e0 <___svfiprintf_internal_r+0x1354>
    c3ac:	d9402317 	ldw	r5,140(sp)
    c3b0:	2c000515 	stw	r16,20(r5)
    c3b4:	003b8906 	br	b1dc <__alt_mem_Onchip_SRAM+0xf800b1dc>
    c3b8:	d9002417 	ldw	r4,144(sp)
    c3bc:	d9402617 	ldw	r5,152(sp)
    c3c0:	20800017 	ldw	r2,0(r4)
    c3c4:	21000104 	addi	r4,r4,4
    c3c8:	d9002415 	stw	r4,144(sp)
    c3cc:	11400015 	stw	r5,0(r2)
    c3d0:	003b9006 	br	b214 <__alt_mem_Onchip_SRAM+0xf800b214>
    c3d4:	8080004c 	andi	r2,r16,1
    c3d8:	002b883a 	mov	r21,zero
    c3dc:	10000526 	beq	r2,zero,c3f4 <___svfiprintf_internal_r+0x1268>
    c3e0:	00800c04 	movi	r2,48
    c3e4:	d88019c5 	stb	r2,103(sp)
    c3e8:	dd002c17 	ldw	r20,176(sp)
    c3ec:	dc4019c4 	addi	r17,sp,103
    c3f0:	003c8a06 	br	b61c <__alt_mem_Onchip_SRAM+0xf800b61c>
    c3f4:	0029883a 	mov	r20,zero
    c3f8:	dc401a04 	addi	r17,sp,104
    c3fc:	003c8706 	br	b61c <__alt_mem_Onchip_SRAM+0xf800b61c>
    c400:	01400074 	movhi	r5,1
    c404:	295b2704 	addi	r5,r5,27804
    c408:	d9402815 	stw	r5,160(sp)
    c40c:	003cff06 	br	b80c <__alt_mem_Onchip_SRAM+0xf800b80c>
    c410:	00bfffc4 	movi	r2,-1
    c414:	003ea206 	br	bea0 <__alt_mem_Onchip_SRAM+0xf800bea0>
    c418:	00800044 	movi	r2,1
    c41c:	10803fcc 	andi	r2,r2,255
    c420:	00c00044 	movi	r3,1
    c424:	10fd4526 	beq	r2,r3,b93c <__alt_mem_Onchip_SRAM+0xf800b93c>
    c428:	00c00084 	movi	r3,2
    c42c:	10fc5226 	beq	r2,r3,b578 <__alt_mem_Onchip_SRAM+0xf800b578>
    c430:	003c9c06 	br	b6a4 <__alt_mem_Onchip_SRAM+0xf800b6a4>
    c434:	1021883a 	mov	r16,r2
    c438:	002b883a 	mov	r21,zero
    c43c:	00800084 	movi	r2,2
    c440:	003ff606 	br	c41c <__alt_mem_Onchip_SRAM+0xf800c41c>
    c444:	01000074 	movhi	r4,1
    c448:	211b2704 	addi	r4,r4,27804
    c44c:	d9002815 	stw	r4,160(sp)
    c450:	003e7206 	br	be1c <__alt_mem_Onchip_SRAM+0xf800be1c>
    c454:	01400074 	movhi	r5,1
    c458:	295b2304 	addi	r5,r5,27788
    c45c:	d9402115 	stw	r5,132(sp)
    c460:	003ec506 	br	bf78 <__alt_mem_Onchip_SRAM+0xf800bf78>
    c464:	e027883a 	mov	r19,fp
    c468:	d8002015 	stw	zero,128(sp)
    c46c:	003b9406 	br	b2c0 <__alt_mem_Onchip_SRAM+0xf800b2c0>
    c470:	dd002017 	ldw	r20,128(sp)
    c474:	dd401d83 	ldbu	r21,118(sp)
    c478:	ddc02415 	stw	r23,144(sp)
    c47c:	d8002015 	stw	zero,128(sp)
    c480:	003c6606 	br	b61c <__alt_mem_Onchip_SRAM+0xf800b61c>
    c484:	0025883a 	mov	r18,zero
    c488:	003fbd06 	br	c380 <__alt_mem_Onchip_SRAM+0xf800c380>
    c48c:	d9402417 	ldw	r5,144(sp)
    c490:	d8c02417 	ldw	r3,144(sp)
    c494:	29400017 	ldw	r5,0(r5)
    c498:	19000104 	addi	r4,r3,4
    c49c:	d9002415 	stw	r4,144(sp)
    c4a0:	d9402015 	stw	r5,128(sp)
    c4a4:	98c00043 	ldbu	r3,1(r19)
    c4a8:	e027883a 	mov	r19,fp
    c4ac:	283f5b0e 	bge	r5,zero,c21c <__alt_mem_Onchip_SRAM+0xf800c21c>
    c4b0:	18c03fcc 	andi	r3,r3,255
    c4b4:	013fffc4 	movi	r4,-1
    c4b8:	18c0201c 	xori	r3,r3,128
    c4bc:	d9002015 	stw	r4,128(sp)
    c4c0:	18ffe004 	addi	r3,r3,-128
    c4c4:	003b7d06 	br	b2bc <__alt_mem_Onchip_SRAM+0xf800b2bc>
    c4c8:	dd401d85 	stb	r21,118(sp)
    c4cc:	003cf306 	br	b89c <__alt_mem_Onchip_SRAM+0xf800b89c>
    c4d0:	dd401d85 	stb	r21,118(sp)
    c4d4:	003d4e06 	br	ba10 <__alt_mem_Onchip_SRAM+0xf800ba10>
    c4d8:	dd401d85 	stb	r21,118(sp)
    c4dc:	003c0e06 	br	b518 <__alt_mem_Onchip_SRAM+0xf800b518>
    c4e0:	d9002717 	ldw	r4,156(sp)
    c4e4:	00800304 	movi	r2,12
    c4e8:	20800015 	stw	r2,0(r4)
    c4ec:	00bfffc4 	movi	r2,-1
    c4f0:	003e6b06 	br	bea0 <__alt_mem_Onchip_SRAM+0xf800bea0>
    c4f4:	dd401d85 	stb	r21,118(sp)
    c4f8:	003d0006 	br	b8fc <__alt_mem_Onchip_SRAM+0xf800b8fc>
    c4fc:	dd401d85 	stb	r21,118(sp)
    c500:	003d7106 	br	bac8 <__alt_mem_Onchip_SRAM+0xf800bac8>
    c504:	dd401d85 	stb	r21,118(sp)
    c508:	003c5706 	br	b668 <__alt_mem_Onchip_SRAM+0xf800b668>
    c50c:	dd401d85 	stb	r21,118(sp)
    c510:	003c2e06 	br	b5cc <__alt_mem_Onchip_SRAM+0xf800b5cc>
    c514:	dd401d85 	stb	r21,118(sp)
    c518:	003d8c06 	br	bb4c <__alt_mem_Onchip_SRAM+0xf800bb4c>
    c51c:	dd401d85 	stb	r21,118(sp)
    c520:	003da706 	br	bbc0 <__alt_mem_Onchip_SRAM+0xf800bbc0>
    c524:	dd401d85 	stb	r21,118(sp)
    c528:	003cc806 	br	b84c <__alt_mem_Onchip_SRAM+0xf800b84c>

0000c52c <__sprint_r.part.0>:
    c52c:	28801917 	ldw	r2,100(r5)
    c530:	defff604 	addi	sp,sp,-40
    c534:	dd400515 	stw	r21,20(sp)
    c538:	dfc00915 	stw	ra,36(sp)
    c53c:	df000815 	stw	fp,32(sp)
    c540:	ddc00715 	stw	r23,28(sp)
    c544:	dd800615 	stw	r22,24(sp)
    c548:	dd000415 	stw	r20,16(sp)
    c54c:	dcc00315 	stw	r19,12(sp)
    c550:	dc800215 	stw	r18,8(sp)
    c554:	dc400115 	stw	r17,4(sp)
    c558:	dc000015 	stw	r16,0(sp)
    c55c:	1088000c 	andi	r2,r2,8192
    c560:	302b883a 	mov	r21,r6
    c564:	10002e26 	beq	r2,zero,c620 <__sprint_r.part.0+0xf4>
    c568:	30800217 	ldw	r2,8(r6)
    c56c:	35800017 	ldw	r22,0(r6)
    c570:	10002926 	beq	r2,zero,c618 <__sprint_r.part.0+0xec>
    c574:	2827883a 	mov	r19,r5
    c578:	2029883a 	mov	r20,r4
    c57c:	b5c00104 	addi	r23,r22,4
    c580:	04bfffc4 	movi	r18,-1
    c584:	bc400017 	ldw	r17,0(r23)
    c588:	b4000017 	ldw	r16,0(r22)
    c58c:	0039883a 	mov	fp,zero
    c590:	8822d0ba 	srli	r17,r17,2
    c594:	8800031e 	bne	r17,zero,c5a4 <__sprint_r.part.0+0x78>
    c598:	00001806 	br	c5fc <__sprint_r.part.0+0xd0>
    c59c:	84000104 	addi	r16,r16,4
    c5a0:	8f001526 	beq	r17,fp,c5f8 <__sprint_r.part.0+0xcc>
    c5a4:	81400017 	ldw	r5,0(r16)
    c5a8:	980d883a 	mov	r6,r19
    c5ac:	a009883a 	mov	r4,r20
    c5b0:	000e1740 	call	e174 <_fputwc_r>
    c5b4:	e7000044 	addi	fp,fp,1
    c5b8:	14bff81e 	bne	r2,r18,c59c <__alt_mem_Onchip_SRAM+0xf800c59c>
    c5bc:	9005883a 	mov	r2,r18
    c5c0:	a8000215 	stw	zero,8(r21)
    c5c4:	a8000115 	stw	zero,4(r21)
    c5c8:	dfc00917 	ldw	ra,36(sp)
    c5cc:	df000817 	ldw	fp,32(sp)
    c5d0:	ddc00717 	ldw	r23,28(sp)
    c5d4:	dd800617 	ldw	r22,24(sp)
    c5d8:	dd400517 	ldw	r21,20(sp)
    c5dc:	dd000417 	ldw	r20,16(sp)
    c5e0:	dcc00317 	ldw	r19,12(sp)
    c5e4:	dc800217 	ldw	r18,8(sp)
    c5e8:	dc400117 	ldw	r17,4(sp)
    c5ec:	dc000017 	ldw	r16,0(sp)
    c5f0:	dec00a04 	addi	sp,sp,40
    c5f4:	f800283a 	ret
    c5f8:	a8800217 	ldw	r2,8(r21)
    c5fc:	8c63883a 	add	r17,r17,r17
    c600:	8c63883a 	add	r17,r17,r17
    c604:	1445c83a 	sub	r2,r2,r17
    c608:	a8800215 	stw	r2,8(r21)
    c60c:	b5800204 	addi	r22,r22,8
    c610:	bdc00204 	addi	r23,r23,8
    c614:	103fdb1e 	bne	r2,zero,c584 <__alt_mem_Onchip_SRAM+0xf800c584>
    c618:	0005883a 	mov	r2,zero
    c61c:	003fe806 	br	c5c0 <__alt_mem_Onchip_SRAM+0xf800c5c0>
    c620:	0007f580 	call	7f58 <__sfvwrite_r>
    c624:	003fe606 	br	c5c0 <__alt_mem_Onchip_SRAM+0xf800c5c0>

0000c628 <__sprint_r>:
    c628:	30c00217 	ldw	r3,8(r6)
    c62c:	18000126 	beq	r3,zero,c634 <__sprint_r+0xc>
    c630:	000c52c1 	jmpi	c52c <__sprint_r.part.0>
    c634:	30000115 	stw	zero,4(r6)
    c638:	0005883a 	mov	r2,zero
    c63c:	f800283a 	ret

0000c640 <___vfiprintf_internal_r>:
    c640:	deffca04 	addi	sp,sp,-216
    c644:	dd403115 	stw	r21,196(sp)
    c648:	dfc03515 	stw	ra,212(sp)
    c64c:	df003415 	stw	fp,208(sp)
    c650:	ddc03315 	stw	r23,204(sp)
    c654:	dd803215 	stw	r22,200(sp)
    c658:	dd003015 	stw	r20,192(sp)
    c65c:	dcc02f15 	stw	r19,188(sp)
    c660:	dc802e15 	stw	r18,184(sp)
    c664:	dc402d15 	stw	r17,180(sp)
    c668:	dc002c15 	stw	r16,176(sp)
    c66c:	d9002115 	stw	r4,132(sp)
    c670:	d9402015 	stw	r5,128(sp)
    c674:	d9c02215 	stw	r7,136(sp)
    c678:	302b883a 	mov	r21,r6
    c67c:	20000226 	beq	r4,zero,c688 <___vfiprintf_internal_r+0x48>
    c680:	20800e17 	ldw	r2,56(r4)
    c684:	1000cf26 	beq	r2,zero,c9c4 <___vfiprintf_internal_r+0x384>
    c688:	d8c02017 	ldw	r3,128(sp)
    c68c:	1880030b 	ldhu	r2,12(r3)
    c690:	10c8000c 	andi	r3,r2,8192
    c694:	1800071e 	bne	r3,zero,c6b4 <___vfiprintf_internal_r+0x74>
    c698:	d9402017 	ldw	r5,128(sp)
    c69c:	00f7ffc4 	movi	r3,-8193
    c6a0:	10880014 	ori	r2,r2,8192
    c6a4:	29001917 	ldw	r4,100(r5)
    c6a8:	2880030d 	sth	r2,12(r5)
    c6ac:	20c6703a 	and	r3,r4,r3
    c6b0:	28c01915 	stw	r3,100(r5)
    c6b4:	10c0020c 	andi	r3,r2,8
    c6b8:	1800a526 	beq	r3,zero,c950 <___vfiprintf_internal_r+0x310>
    c6bc:	d9002017 	ldw	r4,128(sp)
    c6c0:	20c00417 	ldw	r3,16(r4)
    c6c4:	1800a226 	beq	r3,zero,c950 <___vfiprintf_internal_r+0x310>
    c6c8:	1080068c 	andi	r2,r2,26
    c6cc:	00c00284 	movi	r3,10
    c6d0:	10c0a826 	beq	r2,r3,c974 <___vfiprintf_internal_r+0x334>
    c6d4:	d9001a04 	addi	r4,sp,104
    c6d8:	d94019c4 	addi	r5,sp,103
    c6dc:	04800074 	movhi	r18,1
    c6e0:	2145c83a 	sub	r2,r4,r5
    c6e4:	949b2b04 	addi	r18,r18,27820
    c6e8:	d9001e15 	stw	r4,120(sp)
    c6ec:	d9401f15 	stw	r5,124(sp)
    c6f0:	dec01a15 	stw	sp,104(sp)
    c6f4:	d8001c15 	stw	zero,112(sp)
    c6f8:	d8001b15 	stw	zero,108(sp)
    c6fc:	d811883a 	mov	r8,sp
    c700:	d8002615 	stw	zero,152(sp)
    c704:	d8002415 	stw	zero,144(sp)
    c708:	d8802815 	stw	r2,160(sp)
    c70c:	a82d883a 	mov	r22,r21
    c710:	b0800007 	ldb	r2,0(r22)
    c714:	10040d26 	beq	r2,zero,d74c <___vfiprintf_internal_r+0x110c>
    c718:	00c00944 	movi	r3,37
    c71c:	b029883a 	mov	r20,r22
    c720:	10c0021e 	bne	r2,r3,c72c <___vfiprintf_internal_r+0xec>
    c724:	00001606 	br	c780 <___vfiprintf_internal_r+0x140>
    c728:	10c00326 	beq	r2,r3,c738 <___vfiprintf_internal_r+0xf8>
    c72c:	a5000044 	addi	r20,r20,1
    c730:	a0800007 	ldb	r2,0(r20)
    c734:	103ffc1e 	bne	r2,zero,c728 <__alt_mem_Onchip_SRAM+0xf800c728>
    c738:	a5a1c83a 	sub	r16,r20,r22
    c73c:	80001026 	beq	r16,zero,c780 <___vfiprintf_internal_r+0x140>
    c740:	d8c01c17 	ldw	r3,112(sp)
    c744:	d8801b17 	ldw	r2,108(sp)
    c748:	45800015 	stw	r22,0(r8)
    c74c:	80c7883a 	add	r3,r16,r3
    c750:	10800044 	addi	r2,r2,1
    c754:	44000115 	stw	r16,4(r8)
    c758:	d8c01c15 	stw	r3,112(sp)
    c75c:	d8801b15 	stw	r2,108(sp)
    c760:	010001c4 	movi	r4,7
    c764:	2080750e 	bge	r4,r2,c93c <___vfiprintf_internal_r+0x2fc>
    c768:	1803951e 	bne	r3,zero,d5c0 <___vfiprintf_internal_r+0xf80>
    c76c:	d8c02417 	ldw	r3,144(sp)
    c770:	d8001b15 	stw	zero,108(sp)
    c774:	d811883a 	mov	r8,sp
    c778:	1c07883a 	add	r3,r3,r16
    c77c:	d8c02415 	stw	r3,144(sp)
    c780:	a0800007 	ldb	r2,0(r20)
    c784:	1002e026 	beq	r2,zero,d308 <___vfiprintf_internal_r+0xcc8>
    c788:	a5800044 	addi	r22,r20,1
    c78c:	a0c00047 	ldb	r3,1(r20)
    c790:	d8001d85 	stb	zero,118(sp)
    c794:	0027883a 	mov	r19,zero
    c798:	d8002305 	stb	zero,140(sp)
    c79c:	043fffc4 	movi	r16,-1
    c7a0:	d8002515 	stw	zero,148(sp)
    c7a4:	0023883a 	mov	r17,zero
    c7a8:	05001604 	movi	r20,88
    c7ac:	05400244 	movi	r21,9
    c7b0:	402f883a 	mov	r23,r8
    c7b4:	b5800044 	addi	r22,r22,1
    c7b8:	18bff804 	addi	r2,r3,-32
    c7bc:	a0827736 	bltu	r20,r2,d19c <___vfiprintf_internal_r+0xb5c>
    c7c0:	100490ba 	slli	r2,r2,2
    c7c4:	01000074 	movhi	r4,1
    c7c8:	2131f604 	addi	r4,r4,-14376
    c7cc:	1105883a 	add	r2,r2,r4
    c7d0:	10800017 	ldw	r2,0(r2)
    c7d4:	1000683a 	jmp	r2
    c7d8:	0000ce9c 	xori	zero,zero,826
    c7dc:	0000d19c 	xori	zero,zero,838
    c7e0:	0000d19c 	xori	zero,zero,838
    c7e4:	0000ceb8 	rdprs	zero,zero,826
    c7e8:	0000d19c 	xori	zero,zero,838
    c7ec:	0000d19c 	xori	zero,zero,838
    c7f0:	0000d19c 	xori	zero,zero,838
    c7f4:	0000d19c 	xori	zero,zero,838
    c7f8:	0000d19c 	xori	zero,zero,838
    c7fc:	0000d19c 	xori	zero,zero,838
    c800:	0000d0c0 	call	d0c <__divsi3+0x10>
    c804:	0000d0e4 	muli	zero,zero,835
    c808:	0000d19c 	xori	zero,zero,838
    c80c:	0000c9dc 	xori	zero,zero,807
    c810:	0000d0f8 	rdprs	zero,zero,835
    c814:	0000d19c 	xori	zero,zero,838
    c818:	0000cec4 	movi	zero,827
    c81c:	0000ced0 	cmplti	zero,zero,827
    c820:	0000ced0 	cmplti	zero,zero,827
    c824:	0000ced0 	cmplti	zero,zero,827
    c828:	0000ced0 	cmplti	zero,zero,827
    c82c:	0000ced0 	cmplti	zero,zero,827
    c830:	0000ced0 	cmplti	zero,zero,827
    c834:	0000ced0 	cmplti	zero,zero,827
    c838:	0000ced0 	cmplti	zero,zero,827
    c83c:	0000ced0 	cmplti	zero,zero,827
    c840:	0000d19c 	xori	zero,zero,838
    c844:	0000d19c 	xori	zero,zero,838
    c848:	0000d19c 	xori	zero,zero,838
    c84c:	0000d19c 	xori	zero,zero,838
    c850:	0000d19c 	xori	zero,zero,838
    c854:	0000d19c 	xori	zero,zero,838
    c858:	0000d19c 	xori	zero,zero,838
    c85c:	0000d19c 	xori	zero,zero,838
    c860:	0000d19c 	xori	zero,zero,838
    c864:	0000d19c 	xori	zero,zero,838
    c868:	0000cf10 	cmplti	zero,zero,828
    c86c:	0000d19c 	xori	zero,zero,838
    c870:	0000d19c 	xori	zero,zero,838
    c874:	0000d19c 	xori	zero,zero,838
    c878:	0000d19c 	xori	zero,zero,838
    c87c:	0000d19c 	xori	zero,zero,838
    c880:	0000d19c 	xori	zero,zero,838
    c884:	0000d19c 	xori	zero,zero,838
    c888:	0000d19c 	xori	zero,zero,838
    c88c:	0000d19c 	xori	zero,zero,838
    c890:	0000d19c 	xori	zero,zero,838
    c894:	0000cf4c 	andi	zero,zero,829
    c898:	0000d19c 	xori	zero,zero,838
    c89c:	0000d19c 	xori	zero,zero,838
    c8a0:	0000d19c 	xori	zero,zero,838
    c8a4:	0000d19c 	xori	zero,zero,838
    c8a8:	0000d19c 	xori	zero,zero,838
    c8ac:	0000cfa8 	cmpgeui	zero,zero,830
    c8b0:	0000d19c 	xori	zero,zero,838
    c8b4:	0000d19c 	xori	zero,zero,838
    c8b8:	0000d01c 	xori	zero,zero,832
    c8bc:	0000d19c 	xori	zero,zero,838
    c8c0:	0000d19c 	xori	zero,zero,838
    c8c4:	0000d19c 	xori	zero,zero,838
    c8c8:	0000d19c 	xori	zero,zero,838
    c8cc:	0000d19c 	xori	zero,zero,838
    c8d0:	0000d19c 	xori	zero,zero,838
    c8d4:	0000d19c 	xori	zero,zero,838
    c8d8:	0000d19c 	xori	zero,zero,838
    c8dc:	0000d19c 	xori	zero,zero,838
    c8e0:	0000d19c 	xori	zero,zero,838
    c8e4:	0000cdc4 	movi	zero,823
    c8e8:	0000cdf4 	movhi	zero,823
    c8ec:	0000d19c 	xori	zero,zero,838
    c8f0:	0000d19c 	xori	zero,zero,838
    c8f4:	0000d19c 	xori	zero,zero,838
    c8f8:	0000d144 	movi	zero,837
    c8fc:	0000cdf4 	movhi	zero,823
    c900:	0000d19c 	xori	zero,zero,838
    c904:	0000d19c 	xori	zero,zero,838
    c908:	0000cc9c 	xori	zero,zero,818
    c90c:	0000d19c 	xori	zero,zero,838
    c910:	0000ccb0 	cmpltui	zero,zero,818
    c914:	0000cce8 	cmpgeui	zero,zero,819
    c918:	0000c9e8 	cmpgeui	zero,zero,807
    c91c:	0000cc90 	cmplti	zero,zero,818
    c920:	0000d19c 	xori	zero,zero,838
    c924:	0000d05c 	xori	zero,zero,833
    c928:	0000d19c 	xori	zero,zero,838
    c92c:	0000d0a8 	cmpgeui	zero,zero,834
    c930:	0000d19c 	xori	zero,zero,838
    c934:	0000d19c 	xori	zero,zero,838
    c938:	0000cd6c 	andhi	zero,zero,821
    c93c:	42000204 	addi	r8,r8,8
    c940:	d8c02417 	ldw	r3,144(sp)
    c944:	1c07883a 	add	r3,r3,r16
    c948:	d8c02415 	stw	r3,144(sp)
    c94c:	003f8c06 	br	c780 <__alt_mem_Onchip_SRAM+0xf800c780>
    c950:	d9402017 	ldw	r5,128(sp)
    c954:	d9002117 	ldw	r4,132(sp)
    c958:	0005ac80 	call	5ac8 <__swsetup_r>
    c95c:	1003c11e 	bne	r2,zero,d864 <___vfiprintf_internal_r+0x1224>
    c960:	d9402017 	ldw	r5,128(sp)
    c964:	00c00284 	movi	r3,10
    c968:	2880030b 	ldhu	r2,12(r5)
    c96c:	1080068c 	andi	r2,r2,26
    c970:	10ff581e 	bne	r2,r3,c6d4 <__alt_mem_Onchip_SRAM+0xf800c6d4>
    c974:	d8c02017 	ldw	r3,128(sp)
    c978:	1880038f 	ldh	r2,14(r3)
    c97c:	103f5516 	blt	r2,zero,c6d4 <__alt_mem_Onchip_SRAM+0xf800c6d4>
    c980:	d9c02217 	ldw	r7,136(sp)
    c984:	d9002117 	ldw	r4,132(sp)
    c988:	a80d883a 	mov	r6,r21
    c98c:	180b883a 	mov	r5,r3
    c990:	000db680 	call	db68 <__sbprintf>
    c994:	dfc03517 	ldw	ra,212(sp)
    c998:	df003417 	ldw	fp,208(sp)
    c99c:	ddc03317 	ldw	r23,204(sp)
    c9a0:	dd803217 	ldw	r22,200(sp)
    c9a4:	dd403117 	ldw	r21,196(sp)
    c9a8:	dd003017 	ldw	r20,192(sp)
    c9ac:	dcc02f17 	ldw	r19,188(sp)
    c9b0:	dc802e17 	ldw	r18,184(sp)
    c9b4:	dc402d17 	ldw	r17,180(sp)
    c9b8:	dc002c17 	ldw	r16,176(sp)
    c9bc:	dec03604 	addi	sp,sp,216
    c9c0:	f800283a 	ret
    c9c4:	0007ad40 	call	7ad4 <__sinit>
    c9c8:	003f2f06 	br	c688 <__alt_mem_Onchip_SRAM+0xf800c688>
    c9cc:	d8c02517 	ldw	r3,148(sp)
    c9d0:	d8802215 	stw	r2,136(sp)
    c9d4:	00c7c83a 	sub	r3,zero,r3
    c9d8:	d8c02515 	stw	r3,148(sp)
    c9dc:	8c400114 	ori	r17,r17,4
    c9e0:	b0c00007 	ldb	r3,0(r22)
    c9e4:	003f7306 	br	c7b4 <__alt_mem_Onchip_SRAM+0xf800c7b4>
    c9e8:	00800c04 	movi	r2,48
    c9ec:	d9402217 	ldw	r5,136(sp)
    c9f0:	d8801d05 	stb	r2,116(sp)
    c9f4:	00801e04 	movi	r2,120
    c9f8:	d8801d45 	stb	r2,117(sp)
    c9fc:	d8001d85 	stb	zero,118(sp)
    ca00:	b811883a 	mov	r8,r23
    ca04:	28c00104 	addi	r3,r5,4
    ca08:	2cc00017 	ldw	r19,0(r5)
    ca0c:	0029883a 	mov	r20,zero
    ca10:	88800094 	ori	r2,r17,2
    ca14:	80032516 	blt	r16,zero,d6ac <___vfiprintf_internal_r+0x106c>
    ca18:	00bfdfc4 	movi	r2,-129
    ca1c:	88a2703a 	and	r17,r17,r2
    ca20:	d8c02215 	stw	r3,136(sp)
    ca24:	8c400094 	ori	r17,r17,2
    ca28:	98032a1e 	bne	r19,zero,d6d4 <___vfiprintf_internal_r+0x1094>
    ca2c:	00800074 	movhi	r2,1
    ca30:	109aba04 	addi	r2,r2,27368
    ca34:	d8802615 	stw	r2,152(sp)
    ca38:	002b883a 	mov	r21,zero
    ca3c:	8001741e 	bne	r16,zero,d010 <___vfiprintf_internal_r+0x9d0>
    ca40:	0021883a 	mov	r16,zero
    ca44:	0029883a 	mov	r20,zero
    ca48:	ddc01a04 	addi	r23,sp,104
    ca4c:	8027883a 	mov	r19,r16
    ca50:	8500010e 	bge	r16,r20,ca58 <___vfiprintf_internal_r+0x418>
    ca54:	a027883a 	mov	r19,r20
    ca58:	ad403fcc 	andi	r21,r21,255
    ca5c:	ad40201c 	xori	r21,r21,128
    ca60:	ad7fe004 	addi	r21,r21,-128
    ca64:	a8000126 	beq	r21,zero,ca6c <___vfiprintf_internal_r+0x42c>
    ca68:	9cc00044 	addi	r19,r19,1
    ca6c:	89c0008c 	andi	r7,r17,2
    ca70:	38000126 	beq	r7,zero,ca78 <___vfiprintf_internal_r+0x438>
    ca74:	9cc00084 	addi	r19,r19,2
    ca78:	88c0210c 	andi	r3,r17,132
    ca7c:	1801dd1e 	bne	r3,zero,d1f4 <___vfiprintf_internal_r+0xbb4>
    ca80:	d9402517 	ldw	r5,148(sp)
    ca84:	2cebc83a 	sub	r21,r5,r19
    ca88:	0541da0e 	bge	zero,r21,d1f4 <___vfiprintf_internal_r+0xbb4>
    ca8c:	07000404 	movi	fp,16
    ca90:	d8801c17 	ldw	r2,112(sp)
    ca94:	e543be0e 	bge	fp,r21,d990 <___vfiprintf_internal_r+0x1350>
    ca98:	01400074 	movhi	r5,1
    ca9c:	295b2f04 	addi	r5,r5,27836
    caa0:	dc002715 	stw	r16,156(sp)
    caa4:	d9801b17 	ldw	r6,108(sp)
    caa8:	a821883a 	mov	r16,r21
    caac:	d9402315 	stw	r5,140(sp)
    cab0:	028001c4 	movi	r10,7
    cab4:	d9c02915 	stw	r7,164(sp)
    cab8:	182b883a 	mov	r21,r3
    cabc:	00000506 	br	cad4 <___vfiprintf_internal_r+0x494>
    cac0:	31000084 	addi	r4,r6,2
    cac4:	42000204 	addi	r8,r8,8
    cac8:	180d883a 	mov	r6,r3
    cacc:	843ffc04 	addi	r16,r16,-16
    cad0:	e4000f0e 	bge	fp,r16,cb10 <___vfiprintf_internal_r+0x4d0>
    cad4:	01000074 	movhi	r4,1
    cad8:	10800404 	addi	r2,r2,16
    cadc:	30c00044 	addi	r3,r6,1
    cae0:	211b2f04 	addi	r4,r4,27836
    cae4:	41000015 	stw	r4,0(r8)
    cae8:	47000115 	stw	fp,4(r8)
    caec:	d8801c15 	stw	r2,112(sp)
    caf0:	d8c01b15 	stw	r3,108(sp)
    caf4:	50fff20e 	bge	r10,r3,cac0 <__alt_mem_Onchip_SRAM+0xf800cac0>
    caf8:	1001b21e 	bne	r2,zero,d1c4 <___vfiprintf_internal_r+0xb84>
    cafc:	843ffc04 	addi	r16,r16,-16
    cb00:	000d883a 	mov	r6,zero
    cb04:	01000044 	movi	r4,1
    cb08:	d811883a 	mov	r8,sp
    cb0c:	e43ff116 	blt	fp,r16,cad4 <__alt_mem_Onchip_SRAM+0xf800cad4>
    cb10:	a807883a 	mov	r3,r21
    cb14:	d9c02917 	ldw	r7,164(sp)
    cb18:	802b883a 	mov	r21,r16
    cb1c:	dc002717 	ldw	r16,156(sp)
    cb20:	d9402317 	ldw	r5,140(sp)
    cb24:	a885883a 	add	r2,r21,r2
    cb28:	45400115 	stw	r21,4(r8)
    cb2c:	41400015 	stw	r5,0(r8)
    cb30:	d8801c15 	stw	r2,112(sp)
    cb34:	d9001b15 	stw	r4,108(sp)
    cb38:	014001c4 	movi	r5,7
    cb3c:	29026216 	blt	r5,r4,d4c8 <___vfiprintf_internal_r+0xe88>
    cb40:	d9801d87 	ldb	r6,118(sp)
    cb44:	42000204 	addi	r8,r8,8
    cb48:	21400044 	addi	r5,r4,1
    cb4c:	3001ae1e 	bne	r6,zero,d208 <___vfiprintf_internal_r+0xbc8>
    cb50:	3801bb26 	beq	r7,zero,d240 <___vfiprintf_internal_r+0xc00>
    cb54:	d9001d04 	addi	r4,sp,116
    cb58:	10800084 	addi	r2,r2,2
    cb5c:	41000015 	stw	r4,0(r8)
    cb60:	01000084 	movi	r4,2
    cb64:	41000115 	stw	r4,4(r8)
    cb68:	d8801c15 	stw	r2,112(sp)
    cb6c:	d9401b15 	stw	r5,108(sp)
    cb70:	010001c4 	movi	r4,7
    cb74:	2142680e 	bge	r4,r5,d518 <___vfiprintf_internal_r+0xed8>
    cb78:	1002b11e 	bne	r2,zero,d640 <___vfiprintf_internal_r+0x1000>
    cb7c:	01802004 	movi	r6,128
    cb80:	01400044 	movi	r5,1
    cb84:	0009883a 	mov	r4,zero
    cb88:	d811883a 	mov	r8,sp
    cb8c:	1981ae1e 	bne	r3,r6,d248 <___vfiprintf_internal_r+0xc08>
    cb90:	d8c02517 	ldw	r3,148(sp)
    cb94:	1cf9c83a 	sub	fp,r3,r19
    cb98:	0701ab0e 	bge	zero,fp,d248 <___vfiprintf_internal_r+0xc08>
    cb9c:	05400404 	movi	r21,16
    cba0:	af03a90e 	bge	r21,fp,da48 <___vfiprintf_internal_r+0x1408>
    cba4:	01400074 	movhi	r5,1
    cba8:	295b2b04 	addi	r5,r5,27820
    cbac:	d9402315 	stw	r5,140(sp)
    cbb0:	01c001c4 	movi	r7,7
    cbb4:	00000506 	br	cbcc <___vfiprintf_internal_r+0x58c>
    cbb8:	21800084 	addi	r6,r4,2
    cbbc:	42000204 	addi	r8,r8,8
    cbc0:	1809883a 	mov	r4,r3
    cbc4:	e73ffc04 	addi	fp,fp,-16
    cbc8:	af000d0e 	bge	r21,fp,cc00 <___vfiprintf_internal_r+0x5c0>
    cbcc:	10800404 	addi	r2,r2,16
    cbd0:	20c00044 	addi	r3,r4,1
    cbd4:	44800015 	stw	r18,0(r8)
    cbd8:	45400115 	stw	r21,4(r8)
    cbdc:	d8801c15 	stw	r2,112(sp)
    cbe0:	d8c01b15 	stw	r3,108(sp)
    cbe4:	38fff40e 	bge	r7,r3,cbb8 <__alt_mem_Onchip_SRAM+0xf800cbb8>
    cbe8:	10022b1e 	bne	r2,zero,d498 <___vfiprintf_internal_r+0xe58>
    cbec:	e73ffc04 	addi	fp,fp,-16
    cbf0:	01800044 	movi	r6,1
    cbf4:	0009883a 	mov	r4,zero
    cbf8:	d811883a 	mov	r8,sp
    cbfc:	af3ff316 	blt	r21,fp,cbcc <__alt_mem_Onchip_SRAM+0xf800cbcc>
    cc00:	d8c02317 	ldw	r3,140(sp)
    cc04:	1705883a 	add	r2,r2,fp
    cc08:	47000115 	stw	fp,4(r8)
    cc0c:	40c00015 	stw	r3,0(r8)
    cc10:	d8801c15 	stw	r2,112(sp)
    cc14:	d9801b15 	stw	r6,108(sp)
    cc18:	00c001c4 	movi	r3,7
    cc1c:	19829416 	blt	r3,r6,d670 <___vfiprintf_internal_r+0x1030>
    cc20:	8521c83a 	sub	r16,r16,r20
    cc24:	42000204 	addi	r8,r8,8
    cc28:	31400044 	addi	r5,r6,1
    cc2c:	3009883a 	mov	r4,r6
    cc30:	04018716 	blt	zero,r16,d250 <___vfiprintf_internal_r+0xc10>
    cc34:	a085883a 	add	r2,r20,r2
    cc38:	45c00015 	stw	r23,0(r8)
    cc3c:	45000115 	stw	r20,4(r8)
    cc40:	d8801c15 	stw	r2,112(sp)
    cc44:	d9401b15 	stw	r5,108(sp)
    cc48:	00c001c4 	movi	r3,7
    cc4c:	1941c20e 	bge	r3,r5,d358 <___vfiprintf_internal_r+0xd18>
    cc50:	1002531e 	bne	r2,zero,d5a0 <___vfiprintf_internal_r+0xf60>
    cc54:	d8001b15 	stw	zero,108(sp)
    cc58:	8c40010c 	andi	r17,r17,4
    cc5c:	88023226 	beq	r17,zero,d528 <___vfiprintf_internal_r+0xee8>
    cc60:	d9002517 	ldw	r4,148(sp)
    cc64:	24e3c83a 	sub	r17,r4,r19
    cc68:	04432916 	blt	zero,r17,d910 <___vfiprintf_internal_r+0x12d0>
    cc6c:	d8802517 	ldw	r2,148(sp)
    cc70:	14c0010e 	bge	r2,r19,cc78 <___vfiprintf_internal_r+0x638>
    cc74:	9805883a 	mov	r2,r19
    cc78:	d8c02417 	ldw	r3,144(sp)
    cc7c:	1887883a 	add	r3,r3,r2
    cc80:	d8c02415 	stw	r3,144(sp)
    cc84:	d8001b15 	stw	zero,108(sp)
    cc88:	d811883a 	mov	r8,sp
    cc8c:	003ea006 	br	c710 <__alt_mem_Onchip_SRAM+0xf800c710>
    cc90:	8c400814 	ori	r17,r17,32
    cc94:	b0c00007 	ldb	r3,0(r22)
    cc98:	003ec606 	br	c7b4 <__alt_mem_Onchip_SRAM+0xf800c7b4>
    cc9c:	b0c00007 	ldb	r3,0(r22)
    cca0:	00801b04 	movi	r2,108
    cca4:	18832026 	beq	r3,r2,d928 <___vfiprintf_internal_r+0x12e8>
    cca8:	8c400414 	ori	r17,r17,16
    ccac:	003ec106 	br	c7b4 <__alt_mem_Onchip_SRAM+0xf800c7b4>
    ccb0:	9cc03fcc 	andi	r19,r19,255
    ccb4:	b811883a 	mov	r8,r23
    ccb8:	9803981e 	bne	r19,zero,db1c <___vfiprintf_internal_r+0x14dc>
    ccbc:	8880080c 	andi	r2,r17,32
    ccc0:	1002be26 	beq	r2,zero,d7bc <___vfiprintf_internal_r+0x117c>
    ccc4:	d9002217 	ldw	r4,136(sp)
    ccc8:	d9402417 	ldw	r5,144(sp)
    cccc:	20800017 	ldw	r2,0(r4)
    ccd0:	2807d7fa 	srai	r3,r5,31
    ccd4:	21000104 	addi	r4,r4,4
    ccd8:	d9002215 	stw	r4,136(sp)
    ccdc:	11400015 	stw	r5,0(r2)
    cce0:	10c00115 	stw	r3,4(r2)
    cce4:	003e8a06 	br	c710 <__alt_mem_Onchip_SRAM+0xf800c710>
    cce8:	9cc03fcc 	andi	r19,r19,255
    ccec:	b811883a 	mov	r8,r23
    ccf0:	9803871e 	bne	r19,zero,db10 <___vfiprintf_internal_r+0x14d0>
    ccf4:	8880080c 	andi	r2,r17,32
    ccf8:	10009a26 	beq	r2,zero,cf64 <___vfiprintf_internal_r+0x924>
    ccfc:	d9002217 	ldw	r4,136(sp)
    cd00:	d8001d85 	stb	zero,118(sp)
    cd04:	20800204 	addi	r2,r4,8
    cd08:	24c00017 	ldw	r19,0(r4)
    cd0c:	25000117 	ldw	r20,4(r4)
    cd10:	8002a416 	blt	r16,zero,d7a4 <___vfiprintf_internal_r+0x1164>
    cd14:	013fdfc4 	movi	r4,-129
    cd18:	9d06b03a 	or	r3,r19,r20
    cd1c:	d8802215 	stw	r2,136(sp)
    cd20:	8922703a 	and	r17,r17,r4
    cd24:	18009b26 	beq	r3,zero,cf94 <___vfiprintf_internal_r+0x954>
    cd28:	002b883a 	mov	r21,zero
    cd2c:	ddc01a04 	addi	r23,sp,104
    cd30:	9806d0fa 	srli	r3,r19,3
    cd34:	a008977a 	slli	r4,r20,29
    cd38:	a028d0fa 	srli	r20,r20,3
    cd3c:	9cc001cc 	andi	r19,r19,7
    cd40:	98800c04 	addi	r2,r19,48
    cd44:	bdffffc4 	addi	r23,r23,-1
    cd48:	20e6b03a 	or	r19,r4,r3
    cd4c:	b8800005 	stb	r2,0(r23)
    cd50:	9d06b03a 	or	r3,r19,r20
    cd54:	183ff61e 	bne	r3,zero,cd30 <__alt_mem_Onchip_SRAM+0xf800cd30>
    cd58:	88c0004c 	andi	r3,r17,1
    cd5c:	18021f1e 	bne	r3,zero,d5dc <___vfiprintf_internal_r+0xf9c>
    cd60:	d9401e17 	ldw	r5,120(sp)
    cd64:	2de9c83a 	sub	r20,r5,r23
    cd68:	003f3806 	br	ca4c <__alt_mem_Onchip_SRAM+0xf800ca4c>
    cd6c:	9cc03fcc 	andi	r19,r19,255
    cd70:	b811883a 	mov	r8,r23
    cd74:	98034f1e 	bne	r19,zero,dab4 <___vfiprintf_internal_r+0x1474>
    cd78:	00800074 	movhi	r2,1
    cd7c:	109aba04 	addi	r2,r2,27368
    cd80:	d8802615 	stw	r2,152(sp)
    cd84:	8880080c 	andi	r2,r17,32
    cd88:	1000ac26 	beq	r2,zero,d03c <___vfiprintf_internal_r+0x9fc>
    cd8c:	d9002217 	ldw	r4,136(sp)
    cd90:	24c00017 	ldw	r19,0(r4)
    cd94:	25000117 	ldw	r20,4(r4)
    cd98:	21000204 	addi	r4,r4,8
    cd9c:	d9002215 	stw	r4,136(sp)
    cda0:	8880004c 	andi	r2,r17,1
    cda4:	1001e726 	beq	r2,zero,d544 <___vfiprintf_internal_r+0xf04>
    cda8:	9d04b03a 	or	r2,r19,r20
    cdac:	10025c1e 	bne	r2,zero,d720 <___vfiprintf_internal_r+0x10e0>
    cdb0:	d8001d85 	stb	zero,118(sp)
    cdb4:	80024416 	blt	r16,zero,d6c8 <___vfiprintf_internal_r+0x1088>
    cdb8:	00bfdfc4 	movi	r2,-129
    cdbc:	88a2703a 	and	r17,r17,r2
    cdc0:	003f1d06 	br	ca38 <__alt_mem_Onchip_SRAM+0xf800ca38>
    cdc4:	d8c02217 	ldw	r3,136(sp)
    cdc8:	04c00044 	movi	r19,1
    cdcc:	b811883a 	mov	r8,r23
    cdd0:	18800017 	ldw	r2,0(r3)
    cdd4:	18c00104 	addi	r3,r3,4
    cdd8:	d8001d85 	stb	zero,118(sp)
    cddc:	d8801005 	stb	r2,64(sp)
    cde0:	d8c02215 	stw	r3,136(sp)
    cde4:	9829883a 	mov	r20,r19
    cde8:	ddc01004 	addi	r23,sp,64
    cdec:	0021883a 	mov	r16,zero
    cdf0:	003f1e06 	br	ca6c <__alt_mem_Onchip_SRAM+0xf800ca6c>
    cdf4:	9cc03fcc 	andi	r19,r19,255
    cdf8:	b811883a 	mov	r8,r23
    cdfc:	9803331e 	bne	r19,zero,dacc <___vfiprintf_internal_r+0x148c>
    ce00:	8880080c 	andi	r2,r17,32
    ce04:	10004826 	beq	r2,zero,cf28 <___vfiprintf_internal_r+0x8e8>
    ce08:	d9002217 	ldw	r4,136(sp)
    ce0c:	20800117 	ldw	r2,4(r4)
    ce10:	24c00017 	ldw	r19,0(r4)
    ce14:	21000204 	addi	r4,r4,8
    ce18:	d9002215 	stw	r4,136(sp)
    ce1c:	1029883a 	mov	r20,r2
    ce20:	10024c16 	blt	r2,zero,d754 <___vfiprintf_internal_r+0x1114>
    ce24:	dd401d83 	ldbu	r21,118(sp)
    ce28:	80007116 	blt	r16,zero,cff0 <___vfiprintf_internal_r+0x9b0>
    ce2c:	00ffdfc4 	movi	r3,-129
    ce30:	9d04b03a 	or	r2,r19,r20
    ce34:	88e2703a 	and	r17,r17,r3
    ce38:	1000d126 	beq	r2,zero,d180 <___vfiprintf_internal_r+0xb40>
    ce3c:	a0023526 	beq	r20,zero,d714 <___vfiprintf_internal_r+0x10d4>
    ce40:	ddc01a04 	addi	r23,sp,104
    ce44:	4039883a 	mov	fp,r8
    ce48:	9809883a 	mov	r4,r19
    ce4c:	a00b883a 	mov	r5,r20
    ce50:	01800284 	movi	r6,10
    ce54:	000f883a 	mov	r7,zero
    ce58:	000ec780 	call	ec78 <__umoddi3>
    ce5c:	10800c04 	addi	r2,r2,48
    ce60:	bdffffc4 	addi	r23,r23,-1
    ce64:	9809883a 	mov	r4,r19
    ce68:	a00b883a 	mov	r5,r20
    ce6c:	b8800005 	stb	r2,0(r23)
    ce70:	01800284 	movi	r6,10
    ce74:	000f883a 	mov	r7,zero
    ce78:	000e67c0 	call	e67c <__udivdi3>
    ce7c:	1027883a 	mov	r19,r2
    ce80:	10c4b03a 	or	r2,r2,r3
    ce84:	1829883a 	mov	r20,r3
    ce88:	103fef1e 	bne	r2,zero,ce48 <__alt_mem_Onchip_SRAM+0xf800ce48>
    ce8c:	d9001e17 	ldw	r4,120(sp)
    ce90:	e011883a 	mov	r8,fp
    ce94:	25e9c83a 	sub	r20,r4,r23
    ce98:	003eec06 	br	ca4c <__alt_mem_Onchip_SRAM+0xf800ca4c>
    ce9c:	d8802307 	ldb	r2,140(sp)
    cea0:	1002361e 	bne	r2,zero,d77c <___vfiprintf_internal_r+0x113c>
    cea4:	00c00804 	movi	r3,32
    cea8:	d8c02305 	stb	r3,140(sp)
    ceac:	04c00044 	movi	r19,1
    ceb0:	b0c00007 	ldb	r3,0(r22)
    ceb4:	003e3f06 	br	c7b4 <__alt_mem_Onchip_SRAM+0xf800c7b4>
    ceb8:	8c400054 	ori	r17,r17,1
    cebc:	b0c00007 	ldb	r3,0(r22)
    cec0:	003e3c06 	br	c7b4 <__alt_mem_Onchip_SRAM+0xf800c7b4>
    cec4:	8c402014 	ori	r17,r17,128
    cec8:	b0c00007 	ldb	r3,0(r22)
    cecc:	003e3906 	br	c7b4 <__alt_mem_Onchip_SRAM+0xf800c7b4>
    ced0:	dc002715 	stw	r16,156(sp)
    ced4:	d8002515 	stw	zero,148(sp)
    ced8:	1f3ff404 	addi	fp,r3,-48
    cedc:	0009883a 	mov	r4,zero
    cee0:	b021883a 	mov	r16,r22
    cee4:	01400284 	movi	r5,10
    cee8:	0000eb00 	call	eb0 <__mulsi3>
    ceec:	80c00007 	ldb	r3,0(r16)
    cef0:	e089883a 	add	r4,fp,r2
    cef4:	b5800044 	addi	r22,r22,1
    cef8:	1f3ff404 	addi	fp,r3,-48
    cefc:	b021883a 	mov	r16,r22
    cf00:	af3ff82e 	bgeu	r21,fp,cee4 <__alt_mem_Onchip_SRAM+0xf800cee4>
    cf04:	d9002515 	stw	r4,148(sp)
    cf08:	dc002717 	ldw	r16,156(sp)
    cf0c:	003e2a06 	br	c7b8 <__alt_mem_Onchip_SRAM+0xf800c7b8>
    cf10:	9cc03fcc 	andi	r19,r19,255
    cf14:	b811883a 	mov	r8,r23
    cf18:	9802e91e 	bne	r19,zero,dac0 <___vfiprintf_internal_r+0x1480>
    cf1c:	8c400414 	ori	r17,r17,16
    cf20:	8880080c 	andi	r2,r17,32
    cf24:	103fb81e 	bne	r2,zero,ce08 <__alt_mem_Onchip_SRAM+0xf800ce08>
    cf28:	8880040c 	andi	r2,r17,16
    cf2c:	10022e26 	beq	r2,zero,d7e8 <___vfiprintf_internal_r+0x11a8>
    cf30:	d9402217 	ldw	r5,136(sp)
    cf34:	2cc00017 	ldw	r19,0(r5)
    cf38:	29400104 	addi	r5,r5,4
    cf3c:	d9402215 	stw	r5,136(sp)
    cf40:	9829d7fa 	srai	r20,r19,31
    cf44:	a005883a 	mov	r2,r20
    cf48:	003fb506 	br	ce20 <__alt_mem_Onchip_SRAM+0xf800ce20>
    cf4c:	9cc03fcc 	andi	r19,r19,255
    cf50:	b811883a 	mov	r8,r23
    cf54:	9802fa1e 	bne	r19,zero,db40 <___vfiprintf_internal_r+0x1500>
    cf58:	8c400414 	ori	r17,r17,16
    cf5c:	8880080c 	andi	r2,r17,32
    cf60:	103f661e 	bne	r2,zero,ccfc <__alt_mem_Onchip_SRAM+0xf800ccfc>
    cf64:	8880040c 	andi	r2,r17,16
    cf68:	10020626 	beq	r2,zero,d784 <___vfiprintf_internal_r+0x1144>
    cf6c:	d9402217 	ldw	r5,136(sp)
    cf70:	d8001d85 	stb	zero,118(sp)
    cf74:	0029883a 	mov	r20,zero
    cf78:	28800104 	addi	r2,r5,4
    cf7c:	2cc00017 	ldw	r19,0(r5)
    cf80:	80020816 	blt	r16,zero,d7a4 <___vfiprintf_internal_r+0x1164>
    cf84:	00ffdfc4 	movi	r3,-129
    cf88:	d8802215 	stw	r2,136(sp)
    cf8c:	88e2703a 	and	r17,r17,r3
    cf90:	983f651e 	bne	r19,zero,cd28 <__alt_mem_Onchip_SRAM+0xf800cd28>
    cf94:	002b883a 	mov	r21,zero
    cf98:	8002cf26 	beq	r16,zero,dad8 <___vfiprintf_internal_r+0x1498>
    cf9c:	0027883a 	mov	r19,zero
    cfa0:	0029883a 	mov	r20,zero
    cfa4:	003f6106 	br	cd2c <__alt_mem_Onchip_SRAM+0xf800cd2c>
    cfa8:	9cc03fcc 	andi	r19,r19,255
    cfac:	b811883a 	mov	r8,r23
    cfb0:	9802e01e 	bne	r19,zero,db34 <___vfiprintf_internal_r+0x14f4>
    cfb4:	8c400414 	ori	r17,r17,16
    cfb8:	8880080c 	andi	r2,r17,32
    cfbc:	1000641e 	bne	r2,zero,d150 <___vfiprintf_internal_r+0xb10>
    cfc0:	8880040c 	andi	r2,r17,16
    cfc4:	1001c81e 	bne	r2,zero,d6e8 <___vfiprintf_internal_r+0x10a8>
    cfc8:	8880100c 	andi	r2,r17,64
    cfcc:	d8001d85 	stb	zero,118(sp)
    cfd0:	1002281e 	bne	r2,zero,d874 <___vfiprintf_internal_r+0x1234>
    cfd4:	d9002217 	ldw	r4,136(sp)
    cfd8:	0029883a 	mov	r20,zero
    cfdc:	20800104 	addi	r2,r4,4
    cfe0:	24c00017 	ldw	r19,0(r4)
    cfe4:	8001c60e 	bge	r16,zero,d700 <___vfiprintf_internal_r+0x10c0>
    cfe8:	d8802215 	stw	r2,136(sp)
    cfec:	002b883a 	mov	r21,zero
    cff0:	9d04b03a 	or	r2,r19,r20
    cff4:	103f911e 	bne	r2,zero,ce3c <__alt_mem_Onchip_SRAM+0xf800ce3c>
    cff8:	00800044 	movi	r2,1
    cffc:	10803fcc 	andi	r2,r2,255
    d000:	00c00044 	movi	r3,1
    d004:	10c05f26 	beq	r2,r3,d184 <___vfiprintf_internal_r+0xb44>
    d008:	00c00084 	movi	r3,2
    d00c:	10ffe31e 	bne	r2,r3,cf9c <__alt_mem_Onchip_SRAM+0xf800cf9c>
    d010:	0027883a 	mov	r19,zero
    d014:	0029883a 	mov	r20,zero
    d018:	00015106 	br	d560 <___vfiprintf_internal_r+0xf20>
    d01c:	9cc03fcc 	andi	r19,r19,255
    d020:	b811883a 	mov	r8,r23
    d024:	9802c01e 	bne	r19,zero,db28 <___vfiprintf_internal_r+0x14e8>
    d028:	01400074 	movhi	r5,1
    d02c:	295ab504 	addi	r5,r5,27348
    d030:	d9402615 	stw	r5,152(sp)
    d034:	8880080c 	andi	r2,r17,32
    d038:	103f541e 	bne	r2,zero,cd8c <__alt_mem_Onchip_SRAM+0xf800cd8c>
    d03c:	8880040c 	andi	r2,r17,16
    d040:	1001f226 	beq	r2,zero,d80c <___vfiprintf_internal_r+0x11cc>
    d044:	d9402217 	ldw	r5,136(sp)
    d048:	0029883a 	mov	r20,zero
    d04c:	2cc00017 	ldw	r19,0(r5)
    d050:	29400104 	addi	r5,r5,4
    d054:	d9402215 	stw	r5,136(sp)
    d058:	003f5106 	br	cda0 <__alt_mem_Onchip_SRAM+0xf800cda0>
    d05c:	d8c02217 	ldw	r3,136(sp)
    d060:	b811883a 	mov	r8,r23
    d064:	d8001d85 	stb	zero,118(sp)
    d068:	1dc00017 	ldw	r23,0(r3)
    d06c:	1f000104 	addi	fp,r3,4
    d070:	b8025926 	beq	r23,zero,d9d8 <___vfiprintf_internal_r+0x1398>
    d074:	80023316 	blt	r16,zero,d944 <___vfiprintf_internal_r+0x1304>
    d078:	800d883a 	mov	r6,r16
    d07c:	000b883a 	mov	r5,zero
    d080:	b809883a 	mov	r4,r23
    d084:	da002a15 	stw	r8,168(sp)
    d088:	00090a80 	call	90a8 <memchr>
    d08c:	da002a17 	ldw	r8,168(sp)
    d090:	10026826 	beq	r2,zero,da34 <___vfiprintf_internal_r+0x13f4>
    d094:	15e9c83a 	sub	r20,r2,r23
    d098:	dd401d83 	ldbu	r21,118(sp)
    d09c:	df002215 	stw	fp,136(sp)
    d0a0:	0021883a 	mov	r16,zero
    d0a4:	003e6906 	br	ca4c <__alt_mem_Onchip_SRAM+0xf800ca4c>
    d0a8:	9cc03fcc 	andi	r19,r19,255
    d0ac:	b811883a 	mov	r8,r23
    d0b0:	983fc126 	beq	r19,zero,cfb8 <__alt_mem_Onchip_SRAM+0xf800cfb8>
    d0b4:	d8c02303 	ldbu	r3,140(sp)
    d0b8:	d8c01d85 	stb	r3,118(sp)
    d0bc:	003fbe06 	br	cfb8 <__alt_mem_Onchip_SRAM+0xf800cfb8>
    d0c0:	d9002217 	ldw	r4,136(sp)
    d0c4:	d9402217 	ldw	r5,136(sp)
    d0c8:	21000017 	ldw	r4,0(r4)
    d0cc:	28800104 	addi	r2,r5,4
    d0d0:	d9002515 	stw	r4,148(sp)
    d0d4:	203e3d16 	blt	r4,zero,c9cc <__alt_mem_Onchip_SRAM+0xf800c9cc>
    d0d8:	d8802215 	stw	r2,136(sp)
    d0dc:	b0c00007 	ldb	r3,0(r22)
    d0e0:	003db406 	br	c7b4 <__alt_mem_Onchip_SRAM+0xf800c7b4>
    d0e4:	00c00ac4 	movi	r3,43
    d0e8:	d8c02305 	stb	r3,140(sp)
    d0ec:	04c00044 	movi	r19,1
    d0f0:	b0c00007 	ldb	r3,0(r22)
    d0f4:	003daf06 	br	c7b4 <__alt_mem_Onchip_SRAM+0xf800c7b4>
    d0f8:	b0c00007 	ldb	r3,0(r22)
    d0fc:	01000a84 	movi	r4,42
    d100:	b4000044 	addi	r16,r22,1
    d104:	19025e26 	beq	r3,r4,da80 <___vfiprintf_internal_r+0x1440>
    d108:	1f3ff404 	addi	fp,r3,-48
    d10c:	0009883a 	mov	r4,zero
    d110:	af025236 	bltu	r21,fp,da5c <___vfiprintf_internal_r+0x141c>
    d114:	01400284 	movi	r5,10
    d118:	0000eb00 	call	eb0 <__mulsi3>
    d11c:	80c00007 	ldb	r3,0(r16)
    d120:	1709883a 	add	r4,r2,fp
    d124:	85800044 	addi	r22,r16,1
    d128:	1f3ff404 	addi	fp,r3,-48
    d12c:	b021883a 	mov	r16,r22
    d130:	af3ff82e 	bgeu	r21,fp,d114 <__alt_mem_Onchip_SRAM+0xf800d114>
    d134:	2021883a 	mov	r16,r4
    d138:	203d9f0e 	bge	r4,zero,c7b8 <__alt_mem_Onchip_SRAM+0xf800c7b8>
    d13c:	043fffc4 	movi	r16,-1
    d140:	003d9d06 	br	c7b8 <__alt_mem_Onchip_SRAM+0xf800c7b8>
    d144:	8c401014 	ori	r17,r17,64
    d148:	b0c00007 	ldb	r3,0(r22)
    d14c:	003d9906 	br	c7b4 <__alt_mem_Onchip_SRAM+0xf800c7b4>
    d150:	d9002217 	ldw	r4,136(sp)
    d154:	d8001d85 	stb	zero,118(sp)
    d158:	20c00204 	addi	r3,r4,8
    d15c:	24c00017 	ldw	r19,0(r4)
    d160:	25000117 	ldw	r20,4(r4)
    d164:	8001e716 	blt	r16,zero,d904 <___vfiprintf_internal_r+0x12c4>
    d168:	013fdfc4 	movi	r4,-129
    d16c:	9d04b03a 	or	r2,r19,r20
    d170:	d8c02215 	stw	r3,136(sp)
    d174:	8922703a 	and	r17,r17,r4
    d178:	002b883a 	mov	r21,zero
    d17c:	103f2f1e 	bne	r2,zero,ce3c <__alt_mem_Onchip_SRAM+0xf800ce3c>
    d180:	803e2f26 	beq	r16,zero,ca40 <__alt_mem_Onchip_SRAM+0xf800ca40>
    d184:	0027883a 	mov	r19,zero
    d188:	9cc00c04 	addi	r19,r19,48
    d18c:	dcc019c5 	stb	r19,103(sp)
    d190:	dd002817 	ldw	r20,160(sp)
    d194:	ddc019c4 	addi	r23,sp,103
    d198:	003e2c06 	br	ca4c <__alt_mem_Onchip_SRAM+0xf800ca4c>
    d19c:	9cc03fcc 	andi	r19,r19,255
    d1a0:	b811883a 	mov	r8,r23
    d1a4:	9802571e 	bne	r19,zero,db04 <___vfiprintf_internal_r+0x14c4>
    d1a8:	18005726 	beq	r3,zero,d308 <___vfiprintf_internal_r+0xcc8>
    d1ac:	04c00044 	movi	r19,1
    d1b0:	d8c01005 	stb	r3,64(sp)
    d1b4:	d8001d85 	stb	zero,118(sp)
    d1b8:	9829883a 	mov	r20,r19
    d1bc:	ddc01004 	addi	r23,sp,64
    d1c0:	003f0a06 	br	cdec <__alt_mem_Onchip_SRAM+0xf800cdec>
    d1c4:	d9402017 	ldw	r5,128(sp)
    d1c8:	d9002117 	ldw	r4,132(sp)
    d1cc:	d9801a04 	addi	r6,sp,104
    d1d0:	da802a15 	stw	r10,168(sp)
    d1d4:	000c52c0 	call	c52c <__sprint_r.part.0>
    d1d8:	da802a17 	ldw	r10,168(sp)
    d1dc:	1000501e 	bne	r2,zero,d320 <___vfiprintf_internal_r+0xce0>
    d1e0:	d9801b17 	ldw	r6,108(sp)
    d1e4:	d8801c17 	ldw	r2,112(sp)
    d1e8:	d811883a 	mov	r8,sp
    d1ec:	31000044 	addi	r4,r6,1
    d1f0:	003e3606 	br	cacc <__alt_mem_Onchip_SRAM+0xf800cacc>
    d1f4:	d9001b17 	ldw	r4,108(sp)
    d1f8:	d8801c17 	ldw	r2,112(sp)
    d1fc:	21400044 	addi	r5,r4,1
    d200:	d9801d87 	ldb	r6,118(sp)
    d204:	303e5226 	beq	r6,zero,cb50 <__alt_mem_Onchip_SRAM+0xf800cb50>
    d208:	01800044 	movi	r6,1
    d20c:	d9001d84 	addi	r4,sp,118
    d210:	1185883a 	add	r2,r2,r6
    d214:	41000015 	stw	r4,0(r8)
    d218:	41800115 	stw	r6,4(r8)
    d21c:	d8801c15 	stw	r2,112(sp)
    d220:	d9401b15 	stw	r5,108(sp)
    d224:	010001c4 	movi	r4,7
    d228:	2140b00e 	bge	r4,r5,d4ec <___vfiprintf_internal_r+0xeac>
    d22c:	1000f61e 	bne	r2,zero,d608 <___vfiprintf_internal_r+0xfc8>
    d230:	3800b31e 	bne	r7,zero,d500 <___vfiprintf_internal_r+0xec0>
    d234:	0009883a 	mov	r4,zero
    d238:	300b883a 	mov	r5,r6
    d23c:	d811883a 	mov	r8,sp
    d240:	01802004 	movi	r6,128
    d244:	19be5226 	beq	r3,r6,cb90 <__alt_mem_Onchip_SRAM+0xf800cb90>
    d248:	8521c83a 	sub	r16,r16,r20
    d24c:	043e790e 	bge	zero,r16,cc34 <__alt_mem_Onchip_SRAM+0xf800cc34>
    d250:	05400404 	movi	r21,16
    d254:	ac01b00e 	bge	r21,r16,d918 <___vfiprintf_internal_r+0x12d8>
    d258:	01400074 	movhi	r5,1
    d25c:	295b2b04 	addi	r5,r5,27820
    d260:	d9402315 	stw	r5,140(sp)
    d264:	070001c4 	movi	fp,7
    d268:	00000506 	br	d280 <___vfiprintf_internal_r+0xc40>
    d26c:	21400084 	addi	r5,r4,2
    d270:	42000204 	addi	r8,r8,8
    d274:	1809883a 	mov	r4,r3
    d278:	843ffc04 	addi	r16,r16,-16
    d27c:	ac000d0e 	bge	r21,r16,d2b4 <___vfiprintf_internal_r+0xc74>
    d280:	10800404 	addi	r2,r2,16
    d284:	20c00044 	addi	r3,r4,1
    d288:	44800015 	stw	r18,0(r8)
    d28c:	45400115 	stw	r21,4(r8)
    d290:	d8801c15 	stw	r2,112(sp)
    d294:	d8c01b15 	stw	r3,108(sp)
    d298:	e0fff40e 	bge	fp,r3,d26c <__alt_mem_Onchip_SRAM+0xf800d26c>
    d29c:	1000101e 	bne	r2,zero,d2e0 <___vfiprintf_internal_r+0xca0>
    d2a0:	843ffc04 	addi	r16,r16,-16
    d2a4:	01400044 	movi	r5,1
    d2a8:	0009883a 	mov	r4,zero
    d2ac:	d811883a 	mov	r8,sp
    d2b0:	ac3ff316 	blt	r21,r16,d280 <__alt_mem_Onchip_SRAM+0xf800d280>
    d2b4:	d8c02317 	ldw	r3,140(sp)
    d2b8:	1405883a 	add	r2,r2,r16
    d2bc:	44000115 	stw	r16,4(r8)
    d2c0:	40c00015 	stw	r3,0(r8)
    d2c4:	d8801c15 	stw	r2,112(sp)
    d2c8:	d9401b15 	stw	r5,108(sp)
    d2cc:	00c001c4 	movi	r3,7
    d2d0:	19401916 	blt	r3,r5,d338 <___vfiprintf_internal_r+0xcf8>
    d2d4:	42000204 	addi	r8,r8,8
    d2d8:	29400044 	addi	r5,r5,1
    d2dc:	003e5506 	br	cc34 <__alt_mem_Onchip_SRAM+0xf800cc34>
    d2e0:	d9402017 	ldw	r5,128(sp)
    d2e4:	d9002117 	ldw	r4,132(sp)
    d2e8:	d9801a04 	addi	r6,sp,104
    d2ec:	000c52c0 	call	c52c <__sprint_r.part.0>
    d2f0:	10000b1e 	bne	r2,zero,d320 <___vfiprintf_internal_r+0xce0>
    d2f4:	d9001b17 	ldw	r4,108(sp)
    d2f8:	d8801c17 	ldw	r2,112(sp)
    d2fc:	d811883a 	mov	r8,sp
    d300:	21400044 	addi	r5,r4,1
    d304:	003fdc06 	br	d278 <__alt_mem_Onchip_SRAM+0xf800d278>
    d308:	d8801c17 	ldw	r2,112(sp)
    d30c:	10000426 	beq	r2,zero,d320 <___vfiprintf_internal_r+0xce0>
    d310:	d9402017 	ldw	r5,128(sp)
    d314:	d9002117 	ldw	r4,132(sp)
    d318:	d9801a04 	addi	r6,sp,104
    d31c:	000c52c0 	call	c52c <__sprint_r.part.0>
    d320:	d9402017 	ldw	r5,128(sp)
    d324:	2880030b 	ldhu	r2,12(r5)
    d328:	1080100c 	andi	r2,r2,64
    d32c:	10014d1e 	bne	r2,zero,d864 <___vfiprintf_internal_r+0x1224>
    d330:	d8802417 	ldw	r2,144(sp)
    d334:	003d9706 	br	c994 <__alt_mem_Onchip_SRAM+0xf800c994>
    d338:	1000d21e 	bne	r2,zero,d684 <___vfiprintf_internal_r+0x1044>
    d33c:	00c00044 	movi	r3,1
    d340:	a005883a 	mov	r2,r20
    d344:	ddc00015 	stw	r23,0(sp)
    d348:	dd000115 	stw	r20,4(sp)
    d34c:	dd001c15 	stw	r20,112(sp)
    d350:	d8c01b15 	stw	r3,108(sp)
    d354:	d811883a 	mov	r8,sp
    d358:	42000204 	addi	r8,r8,8
    d35c:	8c40010c 	andi	r17,r17,4
    d360:	88004026 	beq	r17,zero,d464 <___vfiprintf_internal_r+0xe24>
    d364:	d9002517 	ldw	r4,148(sp)
    d368:	24e3c83a 	sub	r17,r4,r19
    d36c:	04403d0e 	bge	zero,r17,d464 <___vfiprintf_internal_r+0xe24>
    d370:	04000404 	movi	r16,16
    d374:	8441a90e 	bge	r16,r17,da1c <___vfiprintf_internal_r+0x13dc>
    d378:	00c00074 	movhi	r3,1
    d37c:	18db2f04 	addi	r3,r3,27836
    d380:	d9001b17 	ldw	r4,108(sp)
    d384:	d8c02315 	stw	r3,140(sp)
    d388:	050001c4 	movi	r20,7
    d38c:	dd402117 	ldw	r21,132(sp)
    d390:	ddc02017 	ldw	r23,128(sp)
    d394:	00000506 	br	d3ac <___vfiprintf_internal_r+0xd6c>
    d398:	21400084 	addi	r5,r4,2
    d39c:	42000204 	addi	r8,r8,8
    d3a0:	1809883a 	mov	r4,r3
    d3a4:	8c7ffc04 	addi	r17,r17,-16
    d3a8:	84400f0e 	bge	r16,r17,d3e8 <___vfiprintf_internal_r+0xda8>
    d3ac:	01400074 	movhi	r5,1
    d3b0:	10800404 	addi	r2,r2,16
    d3b4:	20c00044 	addi	r3,r4,1
    d3b8:	295b2f04 	addi	r5,r5,27836
    d3bc:	41400015 	stw	r5,0(r8)
    d3c0:	44000115 	stw	r16,4(r8)
    d3c4:	d8801c15 	stw	r2,112(sp)
    d3c8:	d8c01b15 	stw	r3,108(sp)
    d3cc:	a0fff20e 	bge	r20,r3,d398 <__alt_mem_Onchip_SRAM+0xf800d398>
    d3d0:	1000141e 	bne	r2,zero,d424 <___vfiprintf_internal_r+0xde4>
    d3d4:	8c7ffc04 	addi	r17,r17,-16
    d3d8:	01400044 	movi	r5,1
    d3dc:	0009883a 	mov	r4,zero
    d3e0:	d811883a 	mov	r8,sp
    d3e4:	847ff116 	blt	r16,r17,d3ac <__alt_mem_Onchip_SRAM+0xf800d3ac>
    d3e8:	d8c02317 	ldw	r3,140(sp)
    d3ec:	1445883a 	add	r2,r2,r17
    d3f0:	44400115 	stw	r17,4(r8)
    d3f4:	40c00015 	stw	r3,0(r8)
    d3f8:	d8801c15 	stw	r2,112(sp)
    d3fc:	d9401b15 	stw	r5,108(sp)
    d400:	00c001c4 	movi	r3,7
    d404:	1940170e 	bge	r3,r5,d464 <___vfiprintf_internal_r+0xe24>
    d408:	1000101e 	bne	r2,zero,d44c <___vfiprintf_internal_r+0xe0c>
    d40c:	d8802517 	ldw	r2,148(sp)
    d410:	14c11616 	blt	r2,r19,d86c <___vfiprintf_internal_r+0x122c>
    d414:	d9002417 	ldw	r4,144(sp)
    d418:	2089883a 	add	r4,r4,r2
    d41c:	d9002415 	stw	r4,144(sp)
    d420:	003e1806 	br	cc84 <__alt_mem_Onchip_SRAM+0xf800cc84>
    d424:	d9801a04 	addi	r6,sp,104
    d428:	b80b883a 	mov	r5,r23
    d42c:	a809883a 	mov	r4,r21
    d430:	000c52c0 	call	c52c <__sprint_r.part.0>
    d434:	103fba1e 	bne	r2,zero,d320 <__alt_mem_Onchip_SRAM+0xf800d320>
    d438:	d9001b17 	ldw	r4,108(sp)
    d43c:	d8801c17 	ldw	r2,112(sp)
    d440:	d811883a 	mov	r8,sp
    d444:	21400044 	addi	r5,r4,1
    d448:	003fd606 	br	d3a4 <__alt_mem_Onchip_SRAM+0xf800d3a4>
    d44c:	d9402017 	ldw	r5,128(sp)
    d450:	d9002117 	ldw	r4,132(sp)
    d454:	d9801a04 	addi	r6,sp,104
    d458:	000c52c0 	call	c52c <__sprint_r.part.0>
    d45c:	103fb01e 	bne	r2,zero,d320 <__alt_mem_Onchip_SRAM+0xf800d320>
    d460:	d8801c17 	ldw	r2,112(sp)
    d464:	d8c02517 	ldw	r3,148(sp)
    d468:	1cc0010e 	bge	r3,r19,d470 <___vfiprintf_internal_r+0xe30>
    d46c:	9807883a 	mov	r3,r19
    d470:	d9002417 	ldw	r4,144(sp)
    d474:	20c9883a 	add	r4,r4,r3
    d478:	d9002415 	stw	r4,144(sp)
    d47c:	103e0126 	beq	r2,zero,cc84 <__alt_mem_Onchip_SRAM+0xf800cc84>
    d480:	d9402017 	ldw	r5,128(sp)
    d484:	d9002117 	ldw	r4,132(sp)
    d488:	d9801a04 	addi	r6,sp,104
    d48c:	000c52c0 	call	c52c <__sprint_r.part.0>
    d490:	103dfc26 	beq	r2,zero,cc84 <__alt_mem_Onchip_SRAM+0xf800cc84>
    d494:	003fa206 	br	d320 <__alt_mem_Onchip_SRAM+0xf800d320>
    d498:	d9402017 	ldw	r5,128(sp)
    d49c:	d9002117 	ldw	r4,132(sp)
    d4a0:	d9801a04 	addi	r6,sp,104
    d4a4:	d9c02b15 	stw	r7,172(sp)
    d4a8:	000c52c0 	call	c52c <__sprint_r.part.0>
    d4ac:	d9c02b17 	ldw	r7,172(sp)
    d4b0:	103f9b1e 	bne	r2,zero,d320 <__alt_mem_Onchip_SRAM+0xf800d320>
    d4b4:	d9001b17 	ldw	r4,108(sp)
    d4b8:	d8801c17 	ldw	r2,112(sp)
    d4bc:	d811883a 	mov	r8,sp
    d4c0:	21800044 	addi	r6,r4,1
    d4c4:	003dbf06 	br	cbc4 <__alt_mem_Onchip_SRAM+0xf800cbc4>
    d4c8:	1000d81e 	bne	r2,zero,d82c <___vfiprintf_internal_r+0x11ec>
    d4cc:	d9001d87 	ldb	r4,118(sp)
    d4d0:	20000a26 	beq	r4,zero,d4fc <___vfiprintf_internal_r+0xebc>
    d4d4:	00800044 	movi	r2,1
    d4d8:	d9001d84 	addi	r4,sp,118
    d4dc:	100b883a 	mov	r5,r2
    d4e0:	d9000015 	stw	r4,0(sp)
    d4e4:	d8800115 	stw	r2,4(sp)
    d4e8:	d811883a 	mov	r8,sp
    d4ec:	2809883a 	mov	r4,r5
    d4f0:	42000204 	addi	r8,r8,8
    d4f4:	29400044 	addi	r5,r5,1
    d4f8:	003d9506 	br	cb50 <__alt_mem_Onchip_SRAM+0xf800cb50>
    d4fc:	3800fd26 	beq	r7,zero,d8f4 <___vfiprintf_internal_r+0x12b4>
    d500:	00800084 	movi	r2,2
    d504:	d9001d04 	addi	r4,sp,116
    d508:	d9000015 	stw	r4,0(sp)
    d50c:	d8800115 	stw	r2,4(sp)
    d510:	01400044 	movi	r5,1
    d514:	d811883a 	mov	r8,sp
    d518:	2809883a 	mov	r4,r5
    d51c:	42000204 	addi	r8,r8,8
    d520:	29400044 	addi	r5,r5,1
    d524:	003f4606 	br	d240 <__alt_mem_Onchip_SRAM+0xf800d240>
    d528:	d8802517 	ldw	r2,148(sp)
    d52c:	14c0010e 	bge	r2,r19,d534 <___vfiprintf_internal_r+0xef4>
    d530:	9805883a 	mov	r2,r19
    d534:	d9402417 	ldw	r5,144(sp)
    d538:	288b883a 	add	r5,r5,r2
    d53c:	d9402415 	stw	r5,144(sp)
    d540:	003dd006 	br	cc84 <__alt_mem_Onchip_SRAM+0xf800cc84>
    d544:	d8001d85 	stb	zero,118(sp)
    d548:	80005d16 	blt	r16,zero,d6c0 <___vfiprintf_internal_r+0x1080>
    d54c:	00ffdfc4 	movi	r3,-129
    d550:	9d04b03a 	or	r2,r19,r20
    d554:	88e2703a 	and	r17,r17,r3
    d558:	103d3726 	beq	r2,zero,ca38 <__alt_mem_Onchip_SRAM+0xf800ca38>
    d55c:	002b883a 	mov	r21,zero
    d560:	d9002617 	ldw	r4,152(sp)
    d564:	ddc01a04 	addi	r23,sp,104
    d568:	988003cc 	andi	r2,r19,15
    d56c:	a006973a 	slli	r3,r20,28
    d570:	2085883a 	add	r2,r4,r2
    d574:	9826d13a 	srli	r19,r19,4
    d578:	10800003 	ldbu	r2,0(r2)
    d57c:	a028d13a 	srli	r20,r20,4
    d580:	bdffffc4 	addi	r23,r23,-1
    d584:	1ce6b03a 	or	r19,r3,r19
    d588:	b8800005 	stb	r2,0(r23)
    d58c:	9d04b03a 	or	r2,r19,r20
    d590:	103ff51e 	bne	r2,zero,d568 <__alt_mem_Onchip_SRAM+0xf800d568>
    d594:	d8801e17 	ldw	r2,120(sp)
    d598:	15e9c83a 	sub	r20,r2,r23
    d59c:	003d2b06 	br	ca4c <__alt_mem_Onchip_SRAM+0xf800ca4c>
    d5a0:	d9402017 	ldw	r5,128(sp)
    d5a4:	d9002117 	ldw	r4,132(sp)
    d5a8:	d9801a04 	addi	r6,sp,104
    d5ac:	000c52c0 	call	c52c <__sprint_r.part.0>
    d5b0:	103f5b1e 	bne	r2,zero,d320 <__alt_mem_Onchip_SRAM+0xf800d320>
    d5b4:	d8801c17 	ldw	r2,112(sp)
    d5b8:	d811883a 	mov	r8,sp
    d5bc:	003f6706 	br	d35c <__alt_mem_Onchip_SRAM+0xf800d35c>
    d5c0:	d9402017 	ldw	r5,128(sp)
    d5c4:	d9002117 	ldw	r4,132(sp)
    d5c8:	d9801a04 	addi	r6,sp,104
    d5cc:	000c52c0 	call	c52c <__sprint_r.part.0>
    d5d0:	103f531e 	bne	r2,zero,d320 <__alt_mem_Onchip_SRAM+0xf800d320>
    d5d4:	d811883a 	mov	r8,sp
    d5d8:	003cd906 	br	c940 <__alt_mem_Onchip_SRAM+0xf800c940>
    d5dc:	10803fcc 	andi	r2,r2,255
    d5e0:	1080201c 	xori	r2,r2,128
    d5e4:	10bfe004 	addi	r2,r2,-128
    d5e8:	00c00c04 	movi	r3,48
    d5ec:	10ffe926 	beq	r2,r3,d594 <__alt_mem_Onchip_SRAM+0xf800d594>
    d5f0:	b8ffffc5 	stb	r3,-1(r23)
    d5f4:	d8c01e17 	ldw	r3,120(sp)
    d5f8:	b8bfffc4 	addi	r2,r23,-1
    d5fc:	102f883a 	mov	r23,r2
    d600:	18a9c83a 	sub	r20,r3,r2
    d604:	003d1106 	br	ca4c <__alt_mem_Onchip_SRAM+0xf800ca4c>
    d608:	d9402017 	ldw	r5,128(sp)
    d60c:	d9002117 	ldw	r4,132(sp)
    d610:	d9801a04 	addi	r6,sp,104
    d614:	d8c02a15 	stw	r3,168(sp)
    d618:	d9c02b15 	stw	r7,172(sp)
    d61c:	000c52c0 	call	c52c <__sprint_r.part.0>
    d620:	d8c02a17 	ldw	r3,168(sp)
    d624:	d9c02b17 	ldw	r7,172(sp)
    d628:	103f3d1e 	bne	r2,zero,d320 <__alt_mem_Onchip_SRAM+0xf800d320>
    d62c:	d9001b17 	ldw	r4,108(sp)
    d630:	d8801c17 	ldw	r2,112(sp)
    d634:	d811883a 	mov	r8,sp
    d638:	21400044 	addi	r5,r4,1
    d63c:	003d4406 	br	cb50 <__alt_mem_Onchip_SRAM+0xf800cb50>
    d640:	d9402017 	ldw	r5,128(sp)
    d644:	d9002117 	ldw	r4,132(sp)
    d648:	d9801a04 	addi	r6,sp,104
    d64c:	d8c02a15 	stw	r3,168(sp)
    d650:	000c52c0 	call	c52c <__sprint_r.part.0>
    d654:	d8c02a17 	ldw	r3,168(sp)
    d658:	103f311e 	bne	r2,zero,d320 <__alt_mem_Onchip_SRAM+0xf800d320>
    d65c:	d9001b17 	ldw	r4,108(sp)
    d660:	d8801c17 	ldw	r2,112(sp)
    d664:	d811883a 	mov	r8,sp
    d668:	21400044 	addi	r5,r4,1
    d66c:	003ef406 	br	d240 <__alt_mem_Onchip_SRAM+0xf800d240>
    d670:	1000bd1e 	bne	r2,zero,d968 <___vfiprintf_internal_r+0x1328>
    d674:	01400044 	movi	r5,1
    d678:	0009883a 	mov	r4,zero
    d67c:	d811883a 	mov	r8,sp
    d680:	003ef106 	br	d248 <__alt_mem_Onchip_SRAM+0xf800d248>
    d684:	d9402017 	ldw	r5,128(sp)
    d688:	d9002117 	ldw	r4,132(sp)
    d68c:	d9801a04 	addi	r6,sp,104
    d690:	000c52c0 	call	c52c <__sprint_r.part.0>
    d694:	103f221e 	bne	r2,zero,d320 <__alt_mem_Onchip_SRAM+0xf800d320>
    d698:	d9401b17 	ldw	r5,108(sp)
    d69c:	d8801c17 	ldw	r2,112(sp)
    d6a0:	d811883a 	mov	r8,sp
    d6a4:	29400044 	addi	r5,r5,1
    d6a8:	003d6206 	br	cc34 <__alt_mem_Onchip_SRAM+0xf800cc34>
    d6ac:	01400074 	movhi	r5,1
    d6b0:	295aba04 	addi	r5,r5,27368
    d6b4:	d9402615 	stw	r5,152(sp)
    d6b8:	d8c02215 	stw	r3,136(sp)
    d6bc:	1023883a 	mov	r17,r2
    d6c0:	9d04b03a 	or	r2,r19,r20
    d6c4:	103fa51e 	bne	r2,zero,d55c <__alt_mem_Onchip_SRAM+0xf800d55c>
    d6c8:	002b883a 	mov	r21,zero
    d6cc:	00800084 	movi	r2,2
    d6d0:	003e4a06 	br	cffc <__alt_mem_Onchip_SRAM+0xf800cffc>
    d6d4:	01400074 	movhi	r5,1
    d6d8:	295aba04 	addi	r5,r5,27368
    d6dc:	002b883a 	mov	r21,zero
    d6e0:	d9402615 	stw	r5,152(sp)
    d6e4:	003f9e06 	br	d560 <__alt_mem_Onchip_SRAM+0xf800d560>
    d6e8:	d9402217 	ldw	r5,136(sp)
    d6ec:	d8001d85 	stb	zero,118(sp)
    d6f0:	0029883a 	mov	r20,zero
    d6f4:	28800104 	addi	r2,r5,4
    d6f8:	2cc00017 	ldw	r19,0(r5)
    d6fc:	803e3a16 	blt	r16,zero,cfe8 <__alt_mem_Onchip_SRAM+0xf800cfe8>
    d700:	00ffdfc4 	movi	r3,-129
    d704:	d8802215 	stw	r2,136(sp)
    d708:	88e2703a 	and	r17,r17,r3
    d70c:	002b883a 	mov	r21,zero
    d710:	983e9b26 	beq	r19,zero,d180 <__alt_mem_Onchip_SRAM+0xf800d180>
    d714:	00800244 	movi	r2,9
    d718:	14fdc936 	bltu	r2,r19,ce40 <__alt_mem_Onchip_SRAM+0xf800ce40>
    d71c:	003e9a06 	br	d188 <__alt_mem_Onchip_SRAM+0xf800d188>
    d720:	00800c04 	movi	r2,48
    d724:	d8c01d45 	stb	r3,117(sp)
    d728:	d8801d05 	stb	r2,116(sp)
    d72c:	d8001d85 	stb	zero,118(sp)
    d730:	88c00094 	ori	r3,r17,2
    d734:	80009c16 	blt	r16,zero,d9a8 <___vfiprintf_internal_r+0x1368>
    d738:	00bfdfc4 	movi	r2,-129
    d73c:	88a2703a 	and	r17,r17,r2
    d740:	8c400094 	ori	r17,r17,2
    d744:	002b883a 	mov	r21,zero
    d748:	003f8506 	br	d560 <__alt_mem_Onchip_SRAM+0xf800d560>
    d74c:	b029883a 	mov	r20,r22
    d750:	003c0b06 	br	c780 <__alt_mem_Onchip_SRAM+0xf800c780>
    d754:	04e7c83a 	sub	r19,zero,r19
    d758:	05400b44 	movi	r21,45
    d75c:	9804c03a 	cmpne	r2,r19,zero
    d760:	0529c83a 	sub	r20,zero,r20
    d764:	dd401d85 	stb	r21,118(sp)
    d768:	a0a9c83a 	sub	r20,r20,r2
    d76c:	80009716 	blt	r16,zero,d9cc <___vfiprintf_internal_r+0x138c>
    d770:	00bfdfc4 	movi	r2,-129
    d774:	88a2703a 	and	r17,r17,r2
    d778:	003db006 	br	ce3c <__alt_mem_Onchip_SRAM+0xf800ce3c>
    d77c:	b0c00007 	ldb	r3,0(r22)
    d780:	003c0c06 	br	c7b4 <__alt_mem_Onchip_SRAM+0xf800c7b4>
    d784:	8880100c 	andi	r2,r17,64
    d788:	d8001d85 	stb	zero,118(sp)
    d78c:	1000461e 	bne	r2,zero,d8a8 <___vfiprintf_internal_r+0x1268>
    d790:	d9002217 	ldw	r4,136(sp)
    d794:	0029883a 	mov	r20,zero
    d798:	20800104 	addi	r2,r4,4
    d79c:	24c00017 	ldw	r19,0(r4)
    d7a0:	803df80e 	bge	r16,zero,cf84 <__alt_mem_Onchip_SRAM+0xf800cf84>
    d7a4:	9d06b03a 	or	r3,r19,r20
    d7a8:	d8802215 	stw	r2,136(sp)
    d7ac:	183d5e1e 	bne	r3,zero,cd28 <__alt_mem_Onchip_SRAM+0xf800cd28>
    d7b0:	002b883a 	mov	r21,zero
    d7b4:	0005883a 	mov	r2,zero
    d7b8:	003e1006 	br	cffc <__alt_mem_Onchip_SRAM+0xf800cffc>
    d7bc:	8880040c 	andi	r2,r17,16
    d7c0:	1000321e 	bne	r2,zero,d88c <___vfiprintf_internal_r+0x124c>
    d7c4:	8c40100c 	andi	r17,r17,64
    d7c8:	88008d26 	beq	r17,zero,da00 <___vfiprintf_internal_r+0x13c0>
    d7cc:	d9402217 	ldw	r5,136(sp)
    d7d0:	d8c02417 	ldw	r3,144(sp)
    d7d4:	28800017 	ldw	r2,0(r5)
    d7d8:	29400104 	addi	r5,r5,4
    d7dc:	d9402215 	stw	r5,136(sp)
    d7e0:	10c0000d 	sth	r3,0(r2)
    d7e4:	003bca06 	br	c710 <__alt_mem_Onchip_SRAM+0xf800c710>
    d7e8:	8880100c 	andi	r2,r17,64
    d7ec:	10003a26 	beq	r2,zero,d8d8 <___vfiprintf_internal_r+0x1298>
    d7f0:	d8802217 	ldw	r2,136(sp)
    d7f4:	14c0000f 	ldh	r19,0(r2)
    d7f8:	10800104 	addi	r2,r2,4
    d7fc:	d8802215 	stw	r2,136(sp)
    d800:	9829d7fa 	srai	r20,r19,31
    d804:	a005883a 	mov	r2,r20
    d808:	003d8506 	br	ce20 <__alt_mem_Onchip_SRAM+0xf800ce20>
    d80c:	8880100c 	andi	r2,r17,64
    d810:	10002b26 	beq	r2,zero,d8c0 <___vfiprintf_internal_r+0x1280>
    d814:	d8802217 	ldw	r2,136(sp)
    d818:	0029883a 	mov	r20,zero
    d81c:	14c0000b 	ldhu	r19,0(r2)
    d820:	10800104 	addi	r2,r2,4
    d824:	d8802215 	stw	r2,136(sp)
    d828:	003d5d06 	br	cda0 <__alt_mem_Onchip_SRAM+0xf800cda0>
    d82c:	d9402017 	ldw	r5,128(sp)
    d830:	d9002117 	ldw	r4,132(sp)
    d834:	d9801a04 	addi	r6,sp,104
    d838:	d8c02a15 	stw	r3,168(sp)
    d83c:	d9c02b15 	stw	r7,172(sp)
    d840:	000c52c0 	call	c52c <__sprint_r.part.0>
    d844:	d8c02a17 	ldw	r3,168(sp)
    d848:	d9c02b17 	ldw	r7,172(sp)
    d84c:	103eb41e 	bne	r2,zero,d320 <__alt_mem_Onchip_SRAM+0xf800d320>
    d850:	d9001b17 	ldw	r4,108(sp)
    d854:	d8801c17 	ldw	r2,112(sp)
    d858:	d811883a 	mov	r8,sp
    d85c:	21400044 	addi	r5,r4,1
    d860:	003e6706 	br	d200 <__alt_mem_Onchip_SRAM+0xf800d200>
    d864:	00bfffc4 	movi	r2,-1
    d868:	003c4a06 	br	c994 <__alt_mem_Onchip_SRAM+0xf800c994>
    d86c:	9805883a 	mov	r2,r19
    d870:	003ee806 	br	d414 <__alt_mem_Onchip_SRAM+0xf800d414>
    d874:	d8c02217 	ldw	r3,136(sp)
    d878:	0029883a 	mov	r20,zero
    d87c:	18800104 	addi	r2,r3,4
    d880:	1cc0000b 	ldhu	r19,0(r3)
    d884:	803f9e0e 	bge	r16,zero,d700 <__alt_mem_Onchip_SRAM+0xf800d700>
    d888:	003dd706 	br	cfe8 <__alt_mem_Onchip_SRAM+0xf800cfe8>
    d88c:	d8c02217 	ldw	r3,136(sp)
    d890:	d9002417 	ldw	r4,144(sp)
    d894:	18800017 	ldw	r2,0(r3)
    d898:	18c00104 	addi	r3,r3,4
    d89c:	d8c02215 	stw	r3,136(sp)
    d8a0:	11000015 	stw	r4,0(r2)
    d8a4:	003b9a06 	br	c710 <__alt_mem_Onchip_SRAM+0xf800c710>
    d8a8:	d8c02217 	ldw	r3,136(sp)
    d8ac:	0029883a 	mov	r20,zero
    d8b0:	18800104 	addi	r2,r3,4
    d8b4:	1cc0000b 	ldhu	r19,0(r3)
    d8b8:	803db20e 	bge	r16,zero,cf84 <__alt_mem_Onchip_SRAM+0xf800cf84>
    d8bc:	003fb906 	br	d7a4 <__alt_mem_Onchip_SRAM+0xf800d7a4>
    d8c0:	d9002217 	ldw	r4,136(sp)
    d8c4:	0029883a 	mov	r20,zero
    d8c8:	24c00017 	ldw	r19,0(r4)
    d8cc:	21000104 	addi	r4,r4,4
    d8d0:	d9002215 	stw	r4,136(sp)
    d8d4:	003d3206 	br	cda0 <__alt_mem_Onchip_SRAM+0xf800cda0>
    d8d8:	d8c02217 	ldw	r3,136(sp)
    d8dc:	1cc00017 	ldw	r19,0(r3)
    d8e0:	18c00104 	addi	r3,r3,4
    d8e4:	d8c02215 	stw	r3,136(sp)
    d8e8:	9829d7fa 	srai	r20,r19,31
    d8ec:	a005883a 	mov	r2,r20
    d8f0:	003d4b06 	br	ce20 <__alt_mem_Onchip_SRAM+0xf800ce20>
    d8f4:	0009883a 	mov	r4,zero
    d8f8:	01400044 	movi	r5,1
    d8fc:	d811883a 	mov	r8,sp
    d900:	003e4f06 	br	d240 <__alt_mem_Onchip_SRAM+0xf800d240>
    d904:	d8c02215 	stw	r3,136(sp)
    d908:	002b883a 	mov	r21,zero
    d90c:	003db806 	br	cff0 <__alt_mem_Onchip_SRAM+0xf800cff0>
    d910:	d811883a 	mov	r8,sp
    d914:	003e9606 	br	d370 <__alt_mem_Onchip_SRAM+0xf800d370>
    d918:	01000074 	movhi	r4,1
    d91c:	211b2b04 	addi	r4,r4,27820
    d920:	d9002315 	stw	r4,140(sp)
    d924:	003e6306 	br	d2b4 <__alt_mem_Onchip_SRAM+0xf800d2b4>
    d928:	b0c00043 	ldbu	r3,1(r22)
    d92c:	8c400814 	ori	r17,r17,32
    d930:	b5800044 	addi	r22,r22,1
    d934:	18c03fcc 	andi	r3,r3,255
    d938:	18c0201c 	xori	r3,r3,128
    d93c:	18ffe004 	addi	r3,r3,-128
    d940:	003b9c06 	br	c7b4 <__alt_mem_Onchip_SRAM+0xf800c7b4>
    d944:	b809883a 	mov	r4,r23
    d948:	da002a15 	stw	r8,168(sp)
    d94c:	00013700 	call	1370 <strlen>
    d950:	1029883a 	mov	r20,r2
    d954:	dd401d83 	ldbu	r21,118(sp)
    d958:	df002215 	stw	fp,136(sp)
    d95c:	0021883a 	mov	r16,zero
    d960:	da002a17 	ldw	r8,168(sp)
    d964:	003c3906 	br	ca4c <__alt_mem_Onchip_SRAM+0xf800ca4c>
    d968:	d9402017 	ldw	r5,128(sp)
    d96c:	d9002117 	ldw	r4,132(sp)
    d970:	d9801a04 	addi	r6,sp,104
    d974:	000c52c0 	call	c52c <__sprint_r.part.0>
    d978:	103e691e 	bne	r2,zero,d320 <__alt_mem_Onchip_SRAM+0xf800d320>
    d97c:	d9001b17 	ldw	r4,108(sp)
    d980:	d8801c17 	ldw	r2,112(sp)
    d984:	d811883a 	mov	r8,sp
    d988:	21400044 	addi	r5,r4,1
    d98c:	003e2e06 	br	d248 <__alt_mem_Onchip_SRAM+0xf800d248>
    d990:	01000074 	movhi	r4,1
    d994:	211b2f04 	addi	r4,r4,27836
    d998:	d9002315 	stw	r4,140(sp)
    d99c:	d9001b17 	ldw	r4,108(sp)
    d9a0:	21000044 	addi	r4,r4,1
    d9a4:	003c5e06 	br	cb20 <__alt_mem_Onchip_SRAM+0xf800cb20>
    d9a8:	002b883a 	mov	r21,zero
    d9ac:	00800084 	movi	r2,2
    d9b0:	10803fcc 	andi	r2,r2,255
    d9b4:	01000044 	movi	r4,1
    d9b8:	11002b26 	beq	r2,r4,da68 <___vfiprintf_internal_r+0x1428>
    d9bc:	01000084 	movi	r4,2
    d9c0:	11002b1e 	bne	r2,r4,da70 <___vfiprintf_internal_r+0x1430>
    d9c4:	1823883a 	mov	r17,r3
    d9c8:	003ee506 	br	d560 <__alt_mem_Onchip_SRAM+0xf800d560>
    d9cc:	8807883a 	mov	r3,r17
    d9d0:	00800044 	movi	r2,1
    d9d4:	003ff606 	br	d9b0 <__alt_mem_Onchip_SRAM+0xf800d9b0>
    d9d8:	00800184 	movi	r2,6
    d9dc:	1400012e 	bgeu	r2,r16,d9e4 <___vfiprintf_internal_r+0x13a4>
    d9e0:	1021883a 	mov	r16,r2
    d9e4:	8029883a 	mov	r20,r16
    d9e8:	8027883a 	mov	r19,r16
    d9ec:	80002216 	blt	r16,zero,da78 <___vfiprintf_internal_r+0x1438>
    d9f0:	05c00074 	movhi	r23,1
    d9f4:	df002215 	stw	fp,136(sp)
    d9f8:	bddabf04 	addi	r23,r23,27388
    d9fc:	003cfb06 	br	cdec <__alt_mem_Onchip_SRAM+0xf800cdec>
    da00:	d9002217 	ldw	r4,136(sp)
    da04:	d9402417 	ldw	r5,144(sp)
    da08:	20800017 	ldw	r2,0(r4)
    da0c:	21000104 	addi	r4,r4,4
    da10:	d9002215 	stw	r4,136(sp)
    da14:	11400015 	stw	r5,0(r2)
    da18:	003b3d06 	br	c710 <__alt_mem_Onchip_SRAM+0xf800c710>
    da1c:	01400074 	movhi	r5,1
    da20:	295b2f04 	addi	r5,r5,27836
    da24:	d9402315 	stw	r5,140(sp)
    da28:	d9401b17 	ldw	r5,108(sp)
    da2c:	29400044 	addi	r5,r5,1
    da30:	003e6d06 	br	d3e8 <__alt_mem_Onchip_SRAM+0xf800d3e8>
    da34:	8029883a 	mov	r20,r16
    da38:	dd401d83 	ldbu	r21,118(sp)
    da3c:	df002215 	stw	fp,136(sp)
    da40:	0021883a 	mov	r16,zero
    da44:	003c0106 	br	ca4c <__alt_mem_Onchip_SRAM+0xf800ca4c>
    da48:	00c00074 	movhi	r3,1
    da4c:	18db2b04 	addi	r3,r3,27820
    da50:	d8c02315 	stw	r3,140(sp)
    da54:	280d883a 	mov	r6,r5
    da58:	003c6906 	br	cc00 <__alt_mem_Onchip_SRAM+0xf800cc00>
    da5c:	802d883a 	mov	r22,r16
    da60:	0021883a 	mov	r16,zero
    da64:	003b5406 	br	c7b8 <__alt_mem_Onchip_SRAM+0xf800c7b8>
    da68:	1823883a 	mov	r17,r3
    da6c:	003cf306 	br	ce3c <__alt_mem_Onchip_SRAM+0xf800ce3c>
    da70:	1823883a 	mov	r17,r3
    da74:	003cad06 	br	cd2c <__alt_mem_Onchip_SRAM+0xf800cd2c>
    da78:	0027883a 	mov	r19,zero
    da7c:	003fdc06 	br	d9f0 <__alt_mem_Onchip_SRAM+0xf800d9f0>
    da80:	d9402217 	ldw	r5,136(sp)
    da84:	8005883a 	mov	r2,r16
    da88:	b0c00043 	ldbu	r3,1(r22)
    da8c:	2c000017 	ldw	r16,0(r5)
    da90:	29000104 	addi	r4,r5,4
    da94:	d9002215 	stw	r4,136(sp)
    da98:	102d883a 	mov	r22,r2
    da9c:	803fa50e 	bge	r16,zero,d934 <__alt_mem_Onchip_SRAM+0xf800d934>
    daa0:	18c03fcc 	andi	r3,r3,255
    daa4:	18c0201c 	xori	r3,r3,128
    daa8:	043fffc4 	movi	r16,-1
    daac:	18ffe004 	addi	r3,r3,-128
    dab0:	003b4006 	br	c7b4 <__alt_mem_Onchip_SRAM+0xf800c7b4>
    dab4:	d9402303 	ldbu	r5,140(sp)
    dab8:	d9401d85 	stb	r5,118(sp)
    dabc:	003cae06 	br	cd78 <__alt_mem_Onchip_SRAM+0xf800cd78>
    dac0:	d8c02303 	ldbu	r3,140(sp)
    dac4:	d8c01d85 	stb	r3,118(sp)
    dac8:	003d1406 	br	cf1c <__alt_mem_Onchip_SRAM+0xf800cf1c>
    dacc:	d8c02303 	ldbu	r3,140(sp)
    dad0:	d8c01d85 	stb	r3,118(sp)
    dad4:	003cca06 	br	ce00 <__alt_mem_Onchip_SRAM+0xf800ce00>
    dad8:	8880004c 	andi	r2,r17,1
    dadc:	002b883a 	mov	r21,zero
    dae0:	10000526 	beq	r2,zero,daf8 <___vfiprintf_internal_r+0x14b8>
    dae4:	00800c04 	movi	r2,48
    dae8:	d88019c5 	stb	r2,103(sp)
    daec:	dd002817 	ldw	r20,160(sp)
    daf0:	ddc019c4 	addi	r23,sp,103
    daf4:	003bd506 	br	ca4c <__alt_mem_Onchip_SRAM+0xf800ca4c>
    daf8:	0029883a 	mov	r20,zero
    dafc:	ddc01a04 	addi	r23,sp,104
    db00:	003bd206 	br	ca4c <__alt_mem_Onchip_SRAM+0xf800ca4c>
    db04:	d9002303 	ldbu	r4,140(sp)
    db08:	d9001d85 	stb	r4,118(sp)
    db0c:	003da606 	br	d1a8 <__alt_mem_Onchip_SRAM+0xf800d1a8>
    db10:	d8c02303 	ldbu	r3,140(sp)
    db14:	d8c01d85 	stb	r3,118(sp)
    db18:	003c7606 	br	ccf4 <__alt_mem_Onchip_SRAM+0xf800ccf4>
    db1c:	d8c02303 	ldbu	r3,140(sp)
    db20:	d8c01d85 	stb	r3,118(sp)
    db24:	003c6506 	br	ccbc <__alt_mem_Onchip_SRAM+0xf800ccbc>
    db28:	d9002303 	ldbu	r4,140(sp)
    db2c:	d9001d85 	stb	r4,118(sp)
    db30:	003d3d06 	br	d028 <__alt_mem_Onchip_SRAM+0xf800d028>
    db34:	d8c02303 	ldbu	r3,140(sp)
    db38:	d8c01d85 	stb	r3,118(sp)
    db3c:	003d1d06 	br	cfb4 <__alt_mem_Onchip_SRAM+0xf800cfb4>
    db40:	d8c02303 	ldbu	r3,140(sp)
    db44:	d8c01d85 	stb	r3,118(sp)
    db48:	003d0306 	br	cf58 <__alt_mem_Onchip_SRAM+0xf800cf58>

0000db4c <__vfiprintf_internal>:
    db4c:	008000b4 	movhi	r2,2
    db50:	10a23704 	addi	r2,r2,-30500
    db54:	300f883a 	mov	r7,r6
    db58:	280d883a 	mov	r6,r5
    db5c:	200b883a 	mov	r5,r4
    db60:	11000017 	ldw	r4,0(r2)
    db64:	000c6401 	jmpi	c640 <___vfiprintf_internal_r>

0000db68 <__sbprintf>:
    db68:	2880030b 	ldhu	r2,12(r5)
    db6c:	2ac01917 	ldw	r11,100(r5)
    db70:	2a80038b 	ldhu	r10,14(r5)
    db74:	2a400717 	ldw	r9,28(r5)
    db78:	2a000917 	ldw	r8,36(r5)
    db7c:	defee204 	addi	sp,sp,-1144
    db80:	00c10004 	movi	r3,1024
    db84:	dc011a15 	stw	r16,1128(sp)
    db88:	10bfff4c 	andi	r2,r2,65533
    db8c:	2821883a 	mov	r16,r5
    db90:	d8cb883a 	add	r5,sp,r3
    db94:	dc811c15 	stw	r18,1136(sp)
    db98:	dc411b15 	stw	r17,1132(sp)
    db9c:	dfc11d15 	stw	ra,1140(sp)
    dba0:	2025883a 	mov	r18,r4
    dba4:	d881030d 	sth	r2,1036(sp)
    dba8:	dac11915 	stw	r11,1124(sp)
    dbac:	da81038d 	sth	r10,1038(sp)
    dbb0:	da410715 	stw	r9,1052(sp)
    dbb4:	da010915 	stw	r8,1060(sp)
    dbb8:	dec10015 	stw	sp,1024(sp)
    dbbc:	dec10415 	stw	sp,1040(sp)
    dbc0:	d8c10215 	stw	r3,1032(sp)
    dbc4:	d8c10515 	stw	r3,1044(sp)
    dbc8:	d8010615 	stw	zero,1048(sp)
    dbcc:	000c6400 	call	c640 <___vfiprintf_internal_r>
    dbd0:	1023883a 	mov	r17,r2
    dbd4:	10000416 	blt	r2,zero,dbe8 <__sbprintf+0x80>
    dbd8:	d9410004 	addi	r5,sp,1024
    dbdc:	9009883a 	mov	r4,r18
    dbe0:	00076e80 	call	76e8 <_fflush_r>
    dbe4:	10000d1e 	bne	r2,zero,dc1c <__sbprintf+0xb4>
    dbe8:	d881030b 	ldhu	r2,1036(sp)
    dbec:	1080100c 	andi	r2,r2,64
    dbf0:	10000326 	beq	r2,zero,dc00 <__sbprintf+0x98>
    dbf4:	8080030b 	ldhu	r2,12(r16)
    dbf8:	10801014 	ori	r2,r2,64
    dbfc:	8080030d 	sth	r2,12(r16)
    dc00:	8805883a 	mov	r2,r17
    dc04:	dfc11d17 	ldw	ra,1140(sp)
    dc08:	dc811c17 	ldw	r18,1136(sp)
    dc0c:	dc411b17 	ldw	r17,1132(sp)
    dc10:	dc011a17 	ldw	r16,1128(sp)
    dc14:	dec11e04 	addi	sp,sp,1144
    dc18:	f800283a 	ret
    dc1c:	047fffc4 	movi	r17,-1
    dc20:	003ff106 	br	dbe8 <__alt_mem_Onchip_SRAM+0xf800dbe8>

0000dc24 <__swbuf_r>:
    dc24:	defffb04 	addi	sp,sp,-20
    dc28:	dcc00315 	stw	r19,12(sp)
    dc2c:	dc800215 	stw	r18,8(sp)
    dc30:	dc000015 	stw	r16,0(sp)
    dc34:	dfc00415 	stw	ra,16(sp)
    dc38:	dc400115 	stw	r17,4(sp)
    dc3c:	2025883a 	mov	r18,r4
    dc40:	2827883a 	mov	r19,r5
    dc44:	3021883a 	mov	r16,r6
    dc48:	20000226 	beq	r4,zero,dc54 <__swbuf_r+0x30>
    dc4c:	20800e17 	ldw	r2,56(r4)
    dc50:	10004226 	beq	r2,zero,dd5c <__swbuf_r+0x138>
    dc54:	80800617 	ldw	r2,24(r16)
    dc58:	8100030b 	ldhu	r4,12(r16)
    dc5c:	80800215 	stw	r2,8(r16)
    dc60:	2080020c 	andi	r2,r4,8
    dc64:	10003626 	beq	r2,zero,dd40 <__swbuf_r+0x11c>
    dc68:	80c00417 	ldw	r3,16(r16)
    dc6c:	18003426 	beq	r3,zero,dd40 <__swbuf_r+0x11c>
    dc70:	2088000c 	andi	r2,r4,8192
    dc74:	9c403fcc 	andi	r17,r19,255
    dc78:	10001a26 	beq	r2,zero,dce4 <__swbuf_r+0xc0>
    dc7c:	80800017 	ldw	r2,0(r16)
    dc80:	81000517 	ldw	r4,20(r16)
    dc84:	10c7c83a 	sub	r3,r2,r3
    dc88:	1900200e 	bge	r3,r4,dd0c <__swbuf_r+0xe8>
    dc8c:	18c00044 	addi	r3,r3,1
    dc90:	81000217 	ldw	r4,8(r16)
    dc94:	11400044 	addi	r5,r2,1
    dc98:	81400015 	stw	r5,0(r16)
    dc9c:	213fffc4 	addi	r4,r4,-1
    dca0:	81000215 	stw	r4,8(r16)
    dca4:	14c00005 	stb	r19,0(r2)
    dca8:	80800517 	ldw	r2,20(r16)
    dcac:	10c01e26 	beq	r2,r3,dd28 <__swbuf_r+0x104>
    dcb0:	8080030b 	ldhu	r2,12(r16)
    dcb4:	1080004c 	andi	r2,r2,1
    dcb8:	10000226 	beq	r2,zero,dcc4 <__swbuf_r+0xa0>
    dcbc:	00800284 	movi	r2,10
    dcc0:	88801926 	beq	r17,r2,dd28 <__swbuf_r+0x104>
    dcc4:	8805883a 	mov	r2,r17
    dcc8:	dfc00417 	ldw	ra,16(sp)
    dccc:	dcc00317 	ldw	r19,12(sp)
    dcd0:	dc800217 	ldw	r18,8(sp)
    dcd4:	dc400117 	ldw	r17,4(sp)
    dcd8:	dc000017 	ldw	r16,0(sp)
    dcdc:	dec00504 	addi	sp,sp,20
    dce0:	f800283a 	ret
    dce4:	81401917 	ldw	r5,100(r16)
    dce8:	00b7ffc4 	movi	r2,-8193
    dcec:	21080014 	ori	r4,r4,8192
    dcf0:	2884703a 	and	r2,r5,r2
    dcf4:	80801915 	stw	r2,100(r16)
    dcf8:	80800017 	ldw	r2,0(r16)
    dcfc:	8100030d 	sth	r4,12(r16)
    dd00:	81000517 	ldw	r4,20(r16)
    dd04:	10c7c83a 	sub	r3,r2,r3
    dd08:	193fe016 	blt	r3,r4,dc8c <__alt_mem_Onchip_SRAM+0xf800dc8c>
    dd0c:	800b883a 	mov	r5,r16
    dd10:	9009883a 	mov	r4,r18
    dd14:	00076e80 	call	76e8 <_fflush_r>
    dd18:	1000071e 	bne	r2,zero,dd38 <__swbuf_r+0x114>
    dd1c:	80800017 	ldw	r2,0(r16)
    dd20:	00c00044 	movi	r3,1
    dd24:	003fda06 	br	dc90 <__alt_mem_Onchip_SRAM+0xf800dc90>
    dd28:	800b883a 	mov	r5,r16
    dd2c:	9009883a 	mov	r4,r18
    dd30:	00076e80 	call	76e8 <_fflush_r>
    dd34:	103fe326 	beq	r2,zero,dcc4 <__alt_mem_Onchip_SRAM+0xf800dcc4>
    dd38:	00bfffc4 	movi	r2,-1
    dd3c:	003fe206 	br	dcc8 <__alt_mem_Onchip_SRAM+0xf800dcc8>
    dd40:	800b883a 	mov	r5,r16
    dd44:	9009883a 	mov	r4,r18
    dd48:	0005ac80 	call	5ac8 <__swsetup_r>
    dd4c:	103ffa1e 	bne	r2,zero,dd38 <__alt_mem_Onchip_SRAM+0xf800dd38>
    dd50:	8100030b 	ldhu	r4,12(r16)
    dd54:	80c00417 	ldw	r3,16(r16)
    dd58:	003fc506 	br	dc70 <__alt_mem_Onchip_SRAM+0xf800dc70>
    dd5c:	0007ad40 	call	7ad4 <__sinit>
    dd60:	003fbc06 	br	dc54 <__alt_mem_Onchip_SRAM+0xf800dc54>

0000dd64 <__swbuf>:
    dd64:	008000b4 	movhi	r2,2
    dd68:	10a23704 	addi	r2,r2,-30500
    dd6c:	280d883a 	mov	r6,r5
    dd70:	200b883a 	mov	r5,r4
    dd74:	11000017 	ldw	r4,0(r2)
    dd78:	000dc241 	jmpi	dc24 <__swbuf_r>

0000dd7c <_write_r>:
    dd7c:	defffd04 	addi	sp,sp,-12
    dd80:	2805883a 	mov	r2,r5
    dd84:	dc000015 	stw	r16,0(sp)
    dd88:	040000b4 	movhi	r16,2
    dd8c:	dc400115 	stw	r17,4(sp)
    dd90:	300b883a 	mov	r5,r6
    dd94:	84293c04 	addi	r16,r16,-23312
    dd98:	2023883a 	mov	r17,r4
    dd9c:	380d883a 	mov	r6,r7
    dda0:	1009883a 	mov	r4,r2
    dda4:	dfc00215 	stw	ra,8(sp)
    dda8:	80000015 	stw	zero,0(r16)
    ddac:	00126a80 	call	126a8 <write>
    ddb0:	00ffffc4 	movi	r3,-1
    ddb4:	10c00526 	beq	r2,r3,ddcc <_write_r+0x50>
    ddb8:	dfc00217 	ldw	ra,8(sp)
    ddbc:	dc400117 	ldw	r17,4(sp)
    ddc0:	dc000017 	ldw	r16,0(sp)
    ddc4:	dec00304 	addi	sp,sp,12
    ddc8:	f800283a 	ret
    ddcc:	80c00017 	ldw	r3,0(r16)
    ddd0:	183ff926 	beq	r3,zero,ddb8 <__alt_mem_Onchip_SRAM+0xf800ddb8>
    ddd4:	88c00015 	stw	r3,0(r17)
    ddd8:	003ff706 	br	ddb8 <__alt_mem_Onchip_SRAM+0xf800ddb8>

0000dddc <_close_r>:
    dddc:	defffd04 	addi	sp,sp,-12
    dde0:	dc000015 	stw	r16,0(sp)
    dde4:	040000b4 	movhi	r16,2
    dde8:	dc400115 	stw	r17,4(sp)
    ddec:	84293c04 	addi	r16,r16,-23312
    ddf0:	2023883a 	mov	r17,r4
    ddf4:	2809883a 	mov	r4,r5
    ddf8:	dfc00215 	stw	ra,8(sp)
    ddfc:	80000015 	stw	zero,0(r16)
    de00:	0011ab80 	call	11ab8 <close>
    de04:	00ffffc4 	movi	r3,-1
    de08:	10c00526 	beq	r2,r3,de20 <_close_r+0x44>
    de0c:	dfc00217 	ldw	ra,8(sp)
    de10:	dc400117 	ldw	r17,4(sp)
    de14:	dc000017 	ldw	r16,0(sp)
    de18:	dec00304 	addi	sp,sp,12
    de1c:	f800283a 	ret
    de20:	80c00017 	ldw	r3,0(r16)
    de24:	183ff926 	beq	r3,zero,de0c <__alt_mem_Onchip_SRAM+0xf800de0c>
    de28:	88c00015 	stw	r3,0(r17)
    de2c:	003ff706 	br	de0c <__alt_mem_Onchip_SRAM+0xf800de0c>

0000de30 <_calloc_r>:
    de30:	defffe04 	addi	sp,sp,-8
    de34:	2805883a 	mov	r2,r5
    de38:	dc000015 	stw	r16,0(sp)
    de3c:	300b883a 	mov	r5,r6
    de40:	2021883a 	mov	r16,r4
    de44:	1009883a 	mov	r4,r2
    de48:	dfc00115 	stw	ra,4(sp)
    de4c:	0000eb00 	call	eb0 <__mulsi3>
    de50:	100b883a 	mov	r5,r2
    de54:	8009883a 	mov	r4,r16
    de58:	000889c0 	call	889c <_malloc_r>
    de5c:	10002926 	beq	r2,zero,df04 <_calloc_r+0xd4>
    de60:	11bfff17 	ldw	r6,-4(r2)
    de64:	1021883a 	mov	r16,r2
    de68:	00bfff04 	movi	r2,-4
    de6c:	308c703a 	and	r6,r6,r2
    de70:	00c00904 	movi	r3,36
    de74:	308d883a 	add	r6,r6,r2
    de78:	19801636 	bltu	r3,r6,ded4 <_calloc_r+0xa4>
    de7c:	008004c4 	movi	r2,19
    de80:	11800b2e 	bgeu	r2,r6,deb0 <_calloc_r+0x80>
    de84:	80000015 	stw	zero,0(r16)
    de88:	80000115 	stw	zero,4(r16)
    de8c:	008006c4 	movi	r2,27
    de90:	11801a2e 	bgeu	r2,r6,defc <_calloc_r+0xcc>
    de94:	80000215 	stw	zero,8(r16)
    de98:	80000315 	stw	zero,12(r16)
    de9c:	30c0151e 	bne	r6,r3,def4 <_calloc_r+0xc4>
    dea0:	80000415 	stw	zero,16(r16)
    dea4:	80800604 	addi	r2,r16,24
    dea8:	80000515 	stw	zero,20(r16)
    deac:	00000106 	br	deb4 <_calloc_r+0x84>
    deb0:	8005883a 	mov	r2,r16
    deb4:	10000015 	stw	zero,0(r2)
    deb8:	10000115 	stw	zero,4(r2)
    debc:	10000215 	stw	zero,8(r2)
    dec0:	8005883a 	mov	r2,r16
    dec4:	dfc00117 	ldw	ra,4(sp)
    dec8:	dc000017 	ldw	r16,0(sp)
    decc:	dec00204 	addi	sp,sp,8
    ded0:	f800283a 	ret
    ded4:	000b883a 	mov	r5,zero
    ded8:	8009883a 	mov	r4,r16
    dedc:	00094300 	call	9430 <memset>
    dee0:	8005883a 	mov	r2,r16
    dee4:	dfc00117 	ldw	ra,4(sp)
    dee8:	dc000017 	ldw	r16,0(sp)
    deec:	dec00204 	addi	sp,sp,8
    def0:	f800283a 	ret
    def4:	80800404 	addi	r2,r16,16
    def8:	003fee06 	br	deb4 <__alt_mem_Onchip_SRAM+0xf800deb4>
    defc:	80800204 	addi	r2,r16,8
    df00:	003fec06 	br	deb4 <__alt_mem_Onchip_SRAM+0xf800deb4>
    df04:	0005883a 	mov	r2,zero
    df08:	003fee06 	br	dec4 <__alt_mem_Onchip_SRAM+0xf800dec4>

0000df0c <_fclose_r>:
    df0c:	28003926 	beq	r5,zero,dff4 <_fclose_r+0xe8>
    df10:	defffc04 	addi	sp,sp,-16
    df14:	dc400115 	stw	r17,4(sp)
    df18:	dc000015 	stw	r16,0(sp)
    df1c:	dfc00315 	stw	ra,12(sp)
    df20:	dc800215 	stw	r18,8(sp)
    df24:	2023883a 	mov	r17,r4
    df28:	2821883a 	mov	r16,r5
    df2c:	20000226 	beq	r4,zero,df38 <_fclose_r+0x2c>
    df30:	20800e17 	ldw	r2,56(r4)
    df34:	10002726 	beq	r2,zero,dfd4 <_fclose_r+0xc8>
    df38:	8080030f 	ldh	r2,12(r16)
    df3c:	1000071e 	bne	r2,zero,df5c <_fclose_r+0x50>
    df40:	0005883a 	mov	r2,zero
    df44:	dfc00317 	ldw	ra,12(sp)
    df48:	dc800217 	ldw	r18,8(sp)
    df4c:	dc400117 	ldw	r17,4(sp)
    df50:	dc000017 	ldw	r16,0(sp)
    df54:	dec00404 	addi	sp,sp,16
    df58:	f800283a 	ret
    df5c:	800b883a 	mov	r5,r16
    df60:	8809883a 	mov	r4,r17
    df64:	00074cc0 	call	74cc <__sflush_r>
    df68:	1025883a 	mov	r18,r2
    df6c:	80800b17 	ldw	r2,44(r16)
    df70:	10000426 	beq	r2,zero,df84 <_fclose_r+0x78>
    df74:	81400717 	ldw	r5,28(r16)
    df78:	8809883a 	mov	r4,r17
    df7c:	103ee83a 	callr	r2
    df80:	10001616 	blt	r2,zero,dfdc <_fclose_r+0xd0>
    df84:	8080030b 	ldhu	r2,12(r16)
    df88:	1080200c 	andi	r2,r2,128
    df8c:	1000151e 	bne	r2,zero,dfe4 <_fclose_r+0xd8>
    df90:	81400c17 	ldw	r5,48(r16)
    df94:	28000526 	beq	r5,zero,dfac <_fclose_r+0xa0>
    df98:	80801004 	addi	r2,r16,64
    df9c:	28800226 	beq	r5,r2,dfa8 <_fclose_r+0x9c>
    dfa0:	8809883a 	mov	r4,r17
    dfa4:	0007c480 	call	7c48 <_free_r>
    dfa8:	80000c15 	stw	zero,48(r16)
    dfac:	81401117 	ldw	r5,68(r16)
    dfb0:	28000326 	beq	r5,zero,dfc0 <_fclose_r+0xb4>
    dfb4:	8809883a 	mov	r4,r17
    dfb8:	0007c480 	call	7c48 <_free_r>
    dfbc:	80001115 	stw	zero,68(r16)
    dfc0:	0007ae40 	call	7ae4 <__sfp_lock_acquire>
    dfc4:	8000030d 	sth	zero,12(r16)
    dfc8:	0007ae80 	call	7ae8 <__sfp_lock_release>
    dfcc:	9005883a 	mov	r2,r18
    dfd0:	003fdc06 	br	df44 <__alt_mem_Onchip_SRAM+0xf800df44>
    dfd4:	0007ad40 	call	7ad4 <__sinit>
    dfd8:	003fd706 	br	df38 <__alt_mem_Onchip_SRAM+0xf800df38>
    dfdc:	04bfffc4 	movi	r18,-1
    dfe0:	003fe806 	br	df84 <__alt_mem_Onchip_SRAM+0xf800df84>
    dfe4:	81400417 	ldw	r5,16(r16)
    dfe8:	8809883a 	mov	r4,r17
    dfec:	0007c480 	call	7c48 <_free_r>
    dff0:	003fe706 	br	df90 <__alt_mem_Onchip_SRAM+0xf800df90>
    dff4:	0005883a 	mov	r2,zero
    dff8:	f800283a 	ret

0000dffc <fclose>:
    dffc:	008000b4 	movhi	r2,2
    e000:	10a23704 	addi	r2,r2,-30500
    e004:	200b883a 	mov	r5,r4
    e008:	11000017 	ldw	r4,0(r2)
    e00c:	000df0c1 	jmpi	df0c <_fclose_r>

0000e010 <__fputwc>:
    e010:	defff804 	addi	sp,sp,-32
    e014:	dcc00415 	stw	r19,16(sp)
    e018:	dc800315 	stw	r18,12(sp)
    e01c:	dc000115 	stw	r16,4(sp)
    e020:	dfc00715 	stw	ra,28(sp)
    e024:	dd400615 	stw	r21,24(sp)
    e028:	dd000515 	stw	r20,20(sp)
    e02c:	dc400215 	stw	r17,8(sp)
    e030:	2027883a 	mov	r19,r4
    e034:	2825883a 	mov	r18,r5
    e038:	3021883a 	mov	r16,r6
    e03c:	000868c0 	call	868c <__locale_mb_cur_max>
    e040:	00c00044 	movi	r3,1
    e044:	10c03e26 	beq	r2,r3,e140 <__fputwc+0x130>
    e048:	81c01704 	addi	r7,r16,92
    e04c:	900d883a 	mov	r6,r18
    e050:	d80b883a 	mov	r5,sp
    e054:	9809883a 	mov	r4,r19
    e058:	000e3880 	call	e388 <_wcrtomb_r>
    e05c:	1029883a 	mov	r20,r2
    e060:	00bfffc4 	movi	r2,-1
    e064:	a0802026 	beq	r20,r2,e0e8 <__fputwc+0xd8>
    e068:	d9400003 	ldbu	r5,0(sp)
    e06c:	a0001c26 	beq	r20,zero,e0e0 <__fputwc+0xd0>
    e070:	0023883a 	mov	r17,zero
    e074:	05400284 	movi	r21,10
    e078:	00000906 	br	e0a0 <__fputwc+0x90>
    e07c:	80800017 	ldw	r2,0(r16)
    e080:	11400005 	stb	r5,0(r2)
    e084:	80c00017 	ldw	r3,0(r16)
    e088:	18c00044 	addi	r3,r3,1
    e08c:	80c00015 	stw	r3,0(r16)
    e090:	8c400044 	addi	r17,r17,1
    e094:	dc45883a 	add	r2,sp,r17
    e098:	8d00112e 	bgeu	r17,r20,e0e0 <__fputwc+0xd0>
    e09c:	11400003 	ldbu	r5,0(r2)
    e0a0:	80c00217 	ldw	r3,8(r16)
    e0a4:	18ffffc4 	addi	r3,r3,-1
    e0a8:	80c00215 	stw	r3,8(r16)
    e0ac:	183ff30e 	bge	r3,zero,e07c <__alt_mem_Onchip_SRAM+0xf800e07c>
    e0b0:	80800617 	ldw	r2,24(r16)
    e0b4:	18801916 	blt	r3,r2,e11c <__fputwc+0x10c>
    e0b8:	80800017 	ldw	r2,0(r16)
    e0bc:	11400005 	stb	r5,0(r2)
    e0c0:	80800017 	ldw	r2,0(r16)
    e0c4:	10c00003 	ldbu	r3,0(r2)
    e0c8:	10800044 	addi	r2,r2,1
    e0cc:	1d402326 	beq	r3,r21,e15c <__fputwc+0x14c>
    e0d0:	80800015 	stw	r2,0(r16)
    e0d4:	8c400044 	addi	r17,r17,1
    e0d8:	dc45883a 	add	r2,sp,r17
    e0dc:	8d3fef36 	bltu	r17,r20,e09c <__alt_mem_Onchip_SRAM+0xf800e09c>
    e0e0:	9005883a 	mov	r2,r18
    e0e4:	00000406 	br	e0f8 <__fputwc+0xe8>
    e0e8:	80c0030b 	ldhu	r3,12(r16)
    e0ec:	a005883a 	mov	r2,r20
    e0f0:	18c01014 	ori	r3,r3,64
    e0f4:	80c0030d 	sth	r3,12(r16)
    e0f8:	dfc00717 	ldw	ra,28(sp)
    e0fc:	dd400617 	ldw	r21,24(sp)
    e100:	dd000517 	ldw	r20,20(sp)
    e104:	dcc00417 	ldw	r19,16(sp)
    e108:	dc800317 	ldw	r18,12(sp)
    e10c:	dc400217 	ldw	r17,8(sp)
    e110:	dc000117 	ldw	r16,4(sp)
    e114:	dec00804 	addi	sp,sp,32
    e118:	f800283a 	ret
    e11c:	800d883a 	mov	r6,r16
    e120:	29403fcc 	andi	r5,r5,255
    e124:	9809883a 	mov	r4,r19
    e128:	000dc240 	call	dc24 <__swbuf_r>
    e12c:	10bfffe0 	cmpeqi	r2,r2,-1
    e130:	10803fcc 	andi	r2,r2,255
    e134:	103fd626 	beq	r2,zero,e090 <__alt_mem_Onchip_SRAM+0xf800e090>
    e138:	00bfffc4 	movi	r2,-1
    e13c:	003fee06 	br	e0f8 <__alt_mem_Onchip_SRAM+0xf800e0f8>
    e140:	90ffffc4 	addi	r3,r18,-1
    e144:	01003f84 	movi	r4,254
    e148:	20ffbf36 	bltu	r4,r3,e048 <__alt_mem_Onchip_SRAM+0xf800e048>
    e14c:	900b883a 	mov	r5,r18
    e150:	dc800005 	stb	r18,0(sp)
    e154:	1029883a 	mov	r20,r2
    e158:	003fc506 	br	e070 <__alt_mem_Onchip_SRAM+0xf800e070>
    e15c:	800d883a 	mov	r6,r16
    e160:	a80b883a 	mov	r5,r21
    e164:	9809883a 	mov	r4,r19
    e168:	000dc240 	call	dc24 <__swbuf_r>
    e16c:	10bfffe0 	cmpeqi	r2,r2,-1
    e170:	003fef06 	br	e130 <__alt_mem_Onchip_SRAM+0xf800e130>

0000e174 <_fputwc_r>:
    e174:	3080030b 	ldhu	r2,12(r6)
    e178:	10c8000c 	andi	r3,r2,8192
    e17c:	1800051e 	bne	r3,zero,e194 <_fputwc_r+0x20>
    e180:	30c01917 	ldw	r3,100(r6)
    e184:	10880014 	ori	r2,r2,8192
    e188:	3080030d 	sth	r2,12(r6)
    e18c:	18880014 	ori	r2,r3,8192
    e190:	30801915 	stw	r2,100(r6)
    e194:	000e0101 	jmpi	e010 <__fputwc>

0000e198 <fputwc>:
    e198:	008000b4 	movhi	r2,2
    e19c:	defffc04 	addi	sp,sp,-16
    e1a0:	10a23704 	addi	r2,r2,-30500
    e1a4:	dc000115 	stw	r16,4(sp)
    e1a8:	14000017 	ldw	r16,0(r2)
    e1ac:	dc400215 	stw	r17,8(sp)
    e1b0:	dfc00315 	stw	ra,12(sp)
    e1b4:	2023883a 	mov	r17,r4
    e1b8:	80000226 	beq	r16,zero,e1c4 <fputwc+0x2c>
    e1bc:	80800e17 	ldw	r2,56(r16)
    e1c0:	10001026 	beq	r2,zero,e204 <fputwc+0x6c>
    e1c4:	2880030b 	ldhu	r2,12(r5)
    e1c8:	10c8000c 	andi	r3,r2,8192
    e1cc:	1800051e 	bne	r3,zero,e1e4 <fputwc+0x4c>
    e1d0:	28c01917 	ldw	r3,100(r5)
    e1d4:	10880014 	ori	r2,r2,8192
    e1d8:	2880030d 	sth	r2,12(r5)
    e1dc:	18880014 	ori	r2,r3,8192
    e1e0:	28801915 	stw	r2,100(r5)
    e1e4:	280d883a 	mov	r6,r5
    e1e8:	8009883a 	mov	r4,r16
    e1ec:	880b883a 	mov	r5,r17
    e1f0:	dfc00317 	ldw	ra,12(sp)
    e1f4:	dc400217 	ldw	r17,8(sp)
    e1f8:	dc000117 	ldw	r16,4(sp)
    e1fc:	dec00404 	addi	sp,sp,16
    e200:	000e0101 	jmpi	e010 <__fputwc>
    e204:	8009883a 	mov	r4,r16
    e208:	d9400015 	stw	r5,0(sp)
    e20c:	0007ad40 	call	7ad4 <__sinit>
    e210:	d9400017 	ldw	r5,0(sp)
    e214:	003feb06 	br	e1c4 <__alt_mem_Onchip_SRAM+0xf800e1c4>

0000e218 <_fstat_r>:
    e218:	defffd04 	addi	sp,sp,-12
    e21c:	2805883a 	mov	r2,r5
    e220:	dc000015 	stw	r16,0(sp)
    e224:	040000b4 	movhi	r16,2
    e228:	dc400115 	stw	r17,4(sp)
    e22c:	84293c04 	addi	r16,r16,-23312
    e230:	2023883a 	mov	r17,r4
    e234:	300b883a 	mov	r5,r6
    e238:	1009883a 	mov	r4,r2
    e23c:	dfc00215 	stw	ra,8(sp)
    e240:	80000015 	stw	zero,0(r16)
    e244:	0011bf80 	call	11bf8 <fstat>
    e248:	00ffffc4 	movi	r3,-1
    e24c:	10c00526 	beq	r2,r3,e264 <_fstat_r+0x4c>
    e250:	dfc00217 	ldw	ra,8(sp)
    e254:	dc400117 	ldw	r17,4(sp)
    e258:	dc000017 	ldw	r16,0(sp)
    e25c:	dec00304 	addi	sp,sp,12
    e260:	f800283a 	ret
    e264:	80c00017 	ldw	r3,0(r16)
    e268:	183ff926 	beq	r3,zero,e250 <__alt_mem_Onchip_SRAM+0xf800e250>
    e26c:	88c00015 	stw	r3,0(r17)
    e270:	003ff706 	br	e250 <__alt_mem_Onchip_SRAM+0xf800e250>

0000e274 <_isatty_r>:
    e274:	defffd04 	addi	sp,sp,-12
    e278:	dc000015 	stw	r16,0(sp)
    e27c:	040000b4 	movhi	r16,2
    e280:	dc400115 	stw	r17,4(sp)
    e284:	84293c04 	addi	r16,r16,-23312
    e288:	2023883a 	mov	r17,r4
    e28c:	2809883a 	mov	r4,r5
    e290:	dfc00215 	stw	ra,8(sp)
    e294:	80000015 	stw	zero,0(r16)
    e298:	0011ee00 	call	11ee0 <isatty>
    e29c:	00ffffc4 	movi	r3,-1
    e2a0:	10c00526 	beq	r2,r3,e2b8 <_isatty_r+0x44>
    e2a4:	dfc00217 	ldw	ra,8(sp)
    e2a8:	dc400117 	ldw	r17,4(sp)
    e2ac:	dc000017 	ldw	r16,0(sp)
    e2b0:	dec00304 	addi	sp,sp,12
    e2b4:	f800283a 	ret
    e2b8:	80c00017 	ldw	r3,0(r16)
    e2bc:	183ff926 	beq	r3,zero,e2a4 <__alt_mem_Onchip_SRAM+0xf800e2a4>
    e2c0:	88c00015 	stw	r3,0(r17)
    e2c4:	003ff706 	br	e2a4 <__alt_mem_Onchip_SRAM+0xf800e2a4>

0000e2c8 <_lseek_r>:
    e2c8:	defffd04 	addi	sp,sp,-12
    e2cc:	2805883a 	mov	r2,r5
    e2d0:	dc000015 	stw	r16,0(sp)
    e2d4:	040000b4 	movhi	r16,2
    e2d8:	dc400115 	stw	r17,4(sp)
    e2dc:	300b883a 	mov	r5,r6
    e2e0:	84293c04 	addi	r16,r16,-23312
    e2e4:	2023883a 	mov	r17,r4
    e2e8:	380d883a 	mov	r6,r7
    e2ec:	1009883a 	mov	r4,r2
    e2f0:	dfc00215 	stw	ra,8(sp)
    e2f4:	80000015 	stw	zero,0(r16)
    e2f8:	00120b40 	call	120b4 <lseek>
    e2fc:	00ffffc4 	movi	r3,-1
    e300:	10c00526 	beq	r2,r3,e318 <_lseek_r+0x50>
    e304:	dfc00217 	ldw	ra,8(sp)
    e308:	dc400117 	ldw	r17,4(sp)
    e30c:	dc000017 	ldw	r16,0(sp)
    e310:	dec00304 	addi	sp,sp,12
    e314:	f800283a 	ret
    e318:	80c00017 	ldw	r3,0(r16)
    e31c:	183ff926 	beq	r3,zero,e304 <__alt_mem_Onchip_SRAM+0xf800e304>
    e320:	88c00015 	stw	r3,0(r17)
    e324:	003ff706 	br	e304 <__alt_mem_Onchip_SRAM+0xf800e304>

0000e328 <_read_r>:
    e328:	defffd04 	addi	sp,sp,-12
    e32c:	2805883a 	mov	r2,r5
    e330:	dc000015 	stw	r16,0(sp)
    e334:	040000b4 	movhi	r16,2
    e338:	dc400115 	stw	r17,4(sp)
    e33c:	300b883a 	mov	r5,r6
    e340:	84293c04 	addi	r16,r16,-23312
    e344:	2023883a 	mov	r17,r4
    e348:	380d883a 	mov	r6,r7
    e34c:	1009883a 	mov	r4,r2
    e350:	dfc00215 	stw	ra,8(sp)
    e354:	80000015 	stw	zero,0(r16)
    e358:	00122900 	call	12290 <read>
    e35c:	00ffffc4 	movi	r3,-1
    e360:	10c00526 	beq	r2,r3,e378 <_read_r+0x50>
    e364:	dfc00217 	ldw	ra,8(sp)
    e368:	dc400117 	ldw	r17,4(sp)
    e36c:	dc000017 	ldw	r16,0(sp)
    e370:	dec00304 	addi	sp,sp,12
    e374:	f800283a 	ret
    e378:	80c00017 	ldw	r3,0(r16)
    e37c:	183ff926 	beq	r3,zero,e364 <__alt_mem_Onchip_SRAM+0xf800e364>
    e380:	88c00015 	stw	r3,0(r17)
    e384:	003ff706 	br	e364 <__alt_mem_Onchip_SRAM+0xf800e364>

0000e388 <_wcrtomb_r>:
    e388:	defff604 	addi	sp,sp,-40
    e38c:	008000b4 	movhi	r2,2
    e390:	dc800815 	stw	r18,32(sp)
    e394:	dc400715 	stw	r17,28(sp)
    e398:	dc000615 	stw	r16,24(sp)
    e39c:	10a23b04 	addi	r2,r2,-30484
    e3a0:	dfc00915 	stw	ra,36(sp)
    e3a4:	2021883a 	mov	r16,r4
    e3a8:	3823883a 	mov	r17,r7
    e3ac:	14800017 	ldw	r18,0(r2)
    e3b0:	28001426 	beq	r5,zero,e404 <_wcrtomb_r+0x7c>
    e3b4:	d9400415 	stw	r5,16(sp)
    e3b8:	d9800515 	stw	r6,20(sp)
    e3bc:	00086800 	call	8680 <__locale_charset>
    e3c0:	d9800517 	ldw	r6,20(sp)
    e3c4:	d9400417 	ldw	r5,16(sp)
    e3c8:	100f883a 	mov	r7,r2
    e3cc:	dc400015 	stw	r17,0(sp)
    e3d0:	8009883a 	mov	r4,r16
    e3d4:	903ee83a 	callr	r18
    e3d8:	00ffffc4 	movi	r3,-1
    e3dc:	10c0031e 	bne	r2,r3,e3ec <_wcrtomb_r+0x64>
    e3e0:	88000015 	stw	zero,0(r17)
    e3e4:	00c02284 	movi	r3,138
    e3e8:	80c00015 	stw	r3,0(r16)
    e3ec:	dfc00917 	ldw	ra,36(sp)
    e3f0:	dc800817 	ldw	r18,32(sp)
    e3f4:	dc400717 	ldw	r17,28(sp)
    e3f8:	dc000617 	ldw	r16,24(sp)
    e3fc:	dec00a04 	addi	sp,sp,40
    e400:	f800283a 	ret
    e404:	00086800 	call	8680 <__locale_charset>
    e408:	100f883a 	mov	r7,r2
    e40c:	dc400015 	stw	r17,0(sp)
    e410:	000d883a 	mov	r6,zero
    e414:	d9400104 	addi	r5,sp,4
    e418:	8009883a 	mov	r4,r16
    e41c:	903ee83a 	callr	r18
    e420:	003fed06 	br	e3d8 <__alt_mem_Onchip_SRAM+0xf800e3d8>

0000e424 <wcrtomb>:
    e424:	defff604 	addi	sp,sp,-40
    e428:	008000b4 	movhi	r2,2
    e42c:	dc800615 	stw	r18,24(sp)
    e430:	dc400515 	stw	r17,20(sp)
    e434:	10a23704 	addi	r2,r2,-30500
    e438:	dfc00915 	stw	ra,36(sp)
    e43c:	dd000815 	stw	r20,32(sp)
    e440:	dcc00715 	stw	r19,28(sp)
    e444:	dc000415 	stw	r16,16(sp)
    e448:	3025883a 	mov	r18,r6
    e44c:	14400017 	ldw	r17,0(r2)
    e450:	20001926 	beq	r4,zero,e4b8 <wcrtomb+0x94>
    e454:	008000b4 	movhi	r2,2
    e458:	10a23b04 	addi	r2,r2,-30484
    e45c:	15000017 	ldw	r20,0(r2)
    e460:	2021883a 	mov	r16,r4
    e464:	2827883a 	mov	r19,r5
    e468:	00086800 	call	8680 <__locale_charset>
    e46c:	100f883a 	mov	r7,r2
    e470:	dc800015 	stw	r18,0(sp)
    e474:	980d883a 	mov	r6,r19
    e478:	800b883a 	mov	r5,r16
    e47c:	8809883a 	mov	r4,r17
    e480:	a03ee83a 	callr	r20
    e484:	00ffffc4 	movi	r3,-1
    e488:	10c0031e 	bne	r2,r3,e498 <wcrtomb+0x74>
    e48c:	90000015 	stw	zero,0(r18)
    e490:	00c02284 	movi	r3,138
    e494:	88c00015 	stw	r3,0(r17)
    e498:	dfc00917 	ldw	ra,36(sp)
    e49c:	dd000817 	ldw	r20,32(sp)
    e4a0:	dcc00717 	ldw	r19,28(sp)
    e4a4:	dc800617 	ldw	r18,24(sp)
    e4a8:	dc400517 	ldw	r17,20(sp)
    e4ac:	dc000417 	ldw	r16,16(sp)
    e4b0:	dec00a04 	addi	sp,sp,40
    e4b4:	f800283a 	ret
    e4b8:	008000b4 	movhi	r2,2
    e4bc:	10a23b04 	addi	r2,r2,-30484
    e4c0:	14000017 	ldw	r16,0(r2)
    e4c4:	00086800 	call	8680 <__locale_charset>
    e4c8:	100f883a 	mov	r7,r2
    e4cc:	dc800015 	stw	r18,0(sp)
    e4d0:	000d883a 	mov	r6,zero
    e4d4:	d9400104 	addi	r5,sp,4
    e4d8:	8809883a 	mov	r4,r17
    e4dc:	803ee83a 	callr	r16
    e4e0:	003fe806 	br	e484 <__alt_mem_Onchip_SRAM+0xf800e484>

0000e4e4 <__ascii_wctomb>:
    e4e4:	28000526 	beq	r5,zero,e4fc <__ascii_wctomb+0x18>
    e4e8:	00803fc4 	movi	r2,255
    e4ec:	11800536 	bltu	r2,r6,e504 <__ascii_wctomb+0x20>
    e4f0:	29800005 	stb	r6,0(r5)
    e4f4:	00800044 	movi	r2,1
    e4f8:	f800283a 	ret
    e4fc:	0005883a 	mov	r2,zero
    e500:	f800283a 	ret
    e504:	00802284 	movi	r2,138
    e508:	20800015 	stw	r2,0(r4)
    e50c:	00bfffc4 	movi	r2,-1
    e510:	f800283a 	ret

0000e514 <_wctomb_r>:
    e514:	008000b4 	movhi	r2,2
    e518:	defff904 	addi	sp,sp,-28
    e51c:	10a23b04 	addi	r2,r2,-30484
    e520:	dfc00615 	stw	ra,24(sp)
    e524:	dc400515 	stw	r17,20(sp)
    e528:	dc000415 	stw	r16,16(sp)
    e52c:	3823883a 	mov	r17,r7
    e530:	14000017 	ldw	r16,0(r2)
    e534:	d9000115 	stw	r4,4(sp)
    e538:	d9400215 	stw	r5,8(sp)
    e53c:	d9800315 	stw	r6,12(sp)
    e540:	00086800 	call	8680 <__locale_charset>
    e544:	d9800317 	ldw	r6,12(sp)
    e548:	d9400217 	ldw	r5,8(sp)
    e54c:	d9000117 	ldw	r4,4(sp)
    e550:	100f883a 	mov	r7,r2
    e554:	dc400015 	stw	r17,0(sp)
    e558:	803ee83a 	callr	r16
    e55c:	dfc00617 	ldw	ra,24(sp)
    e560:	dc400517 	ldw	r17,20(sp)
    e564:	dc000417 	ldw	r16,16(sp)
    e568:	dec00704 	addi	sp,sp,28
    e56c:	f800283a 	ret

0000e570 <__muldi3>:
    e570:	defff604 	addi	sp,sp,-40
    e574:	dd800615 	stw	r22,24(sp)
    e578:	dd400515 	stw	r21,20(sp)
    e57c:	dc400115 	stw	r17,4(sp)
    e580:	357fffcc 	andi	r21,r6,65535
    e584:	2022d43a 	srli	r17,r4,16
    e588:	25bfffcc 	andi	r22,r4,65535
    e58c:	dcc00315 	stw	r19,12(sp)
    e590:	dc800215 	stw	r18,8(sp)
    e594:	2027883a 	mov	r19,r4
    e598:	2825883a 	mov	r18,r5
    e59c:	b009883a 	mov	r4,r22
    e5a0:	a80b883a 	mov	r5,r21
    e5a4:	dfc00915 	stw	ra,36(sp)
    e5a8:	df000815 	stw	fp,32(sp)
    e5ac:	ddc00715 	stw	r23,28(sp)
    e5b0:	3839883a 	mov	fp,r7
    e5b4:	302ed43a 	srli	r23,r6,16
    e5b8:	dd000415 	stw	r20,16(sp)
    e5bc:	dc000015 	stw	r16,0(sp)
    e5c0:	3029883a 	mov	r20,r6
    e5c4:	0000eb00 	call	eb0 <__mulsi3>
    e5c8:	a80b883a 	mov	r5,r21
    e5cc:	8809883a 	mov	r4,r17
    e5d0:	1021883a 	mov	r16,r2
    e5d4:	0000eb00 	call	eb0 <__mulsi3>
    e5d8:	8809883a 	mov	r4,r17
    e5dc:	b80b883a 	mov	r5,r23
    e5e0:	102b883a 	mov	r21,r2
    e5e4:	0000eb00 	call	eb0 <__mulsi3>
    e5e8:	b80b883a 	mov	r5,r23
    e5ec:	b009883a 	mov	r4,r22
    e5f0:	1023883a 	mov	r17,r2
    e5f4:	0000eb00 	call	eb0 <__mulsi3>
    e5f8:	8006d43a 	srli	r3,r16,16
    e5fc:	1545883a 	add	r2,r2,r21
    e600:	1885883a 	add	r2,r3,r2
    e604:	1540022e 	bgeu	r2,r21,e610 <__muldi3+0xa0>
    e608:	00c00074 	movhi	r3,1
    e60c:	88e3883a 	add	r17,r17,r3
    e610:	1006d43a 	srli	r3,r2,16
    e614:	1004943a 	slli	r2,r2,16
    e618:	e00b883a 	mov	r5,fp
    e61c:	9809883a 	mov	r4,r19
    e620:	843fffcc 	andi	r16,r16,65535
    e624:	1c63883a 	add	r17,r3,r17
    e628:	1421883a 	add	r16,r2,r16
    e62c:	0000eb00 	call	eb0 <__mulsi3>
    e630:	900b883a 	mov	r5,r18
    e634:	a009883a 	mov	r4,r20
    e638:	1027883a 	mov	r19,r2
    e63c:	0000eb00 	call	eb0 <__mulsi3>
    e640:	9885883a 	add	r2,r19,r2
    e644:	1447883a 	add	r3,r2,r17
    e648:	8005883a 	mov	r2,r16
    e64c:	dfc00917 	ldw	ra,36(sp)
    e650:	df000817 	ldw	fp,32(sp)
    e654:	ddc00717 	ldw	r23,28(sp)
    e658:	dd800617 	ldw	r22,24(sp)
    e65c:	dd400517 	ldw	r21,20(sp)
    e660:	dd000417 	ldw	r20,16(sp)
    e664:	dcc00317 	ldw	r19,12(sp)
    e668:	dc800217 	ldw	r18,8(sp)
    e66c:	dc400117 	ldw	r17,4(sp)
    e670:	dc000017 	ldw	r16,0(sp)
    e674:	dec00a04 	addi	sp,sp,40
    e678:	f800283a 	ret

0000e67c <__udivdi3>:
    e67c:	defff404 	addi	sp,sp,-48
    e680:	dcc00515 	stw	r19,20(sp)
    e684:	dc000215 	stw	r16,8(sp)
    e688:	dfc00b15 	stw	ra,44(sp)
    e68c:	df000a15 	stw	fp,40(sp)
    e690:	ddc00915 	stw	r23,36(sp)
    e694:	dd800815 	stw	r22,32(sp)
    e698:	dd400715 	stw	r21,28(sp)
    e69c:	dd000615 	stw	r20,24(sp)
    e6a0:	dc800415 	stw	r18,16(sp)
    e6a4:	dc400315 	stw	r17,12(sp)
    e6a8:	2027883a 	mov	r19,r4
    e6ac:	2821883a 	mov	r16,r5
    e6b0:	3800461e 	bne	r7,zero,e7cc <__udivdi3+0x150>
    e6b4:	3023883a 	mov	r17,r6
    e6b8:	2025883a 	mov	r18,r4
    e6bc:	2980572e 	bgeu	r5,r6,e81c <__udivdi3+0x1a0>
    e6c0:	00bfffd4 	movui	r2,65535
    e6c4:	282d883a 	mov	r22,r5
    e6c8:	1180b236 	bltu	r2,r6,e994 <__udivdi3+0x318>
    e6cc:	00803fc4 	movi	r2,255
    e6d0:	1185803a 	cmpltu	r2,r2,r6
    e6d4:	100490fa 	slli	r2,r2,3
    e6d8:	3086d83a 	srl	r3,r6,r2
    e6dc:	01000074 	movhi	r4,1
    e6e0:	211a6f84 	addi	r4,r4,27070
    e6e4:	20c7883a 	add	r3,r4,r3
    e6e8:	18c00003 	ldbu	r3,0(r3)
    e6ec:	1885883a 	add	r2,r3,r2
    e6f0:	00c00804 	movi	r3,32
    e6f4:	1887c83a 	sub	r3,r3,r2
    e6f8:	18000526 	beq	r3,zero,e710 <__udivdi3+0x94>
    e6fc:	80e0983a 	sll	r16,r16,r3
    e700:	9884d83a 	srl	r2,r19,r2
    e704:	30e2983a 	sll	r17,r6,r3
    e708:	98e4983a 	sll	r18,r19,r3
    e70c:	142cb03a 	or	r22,r2,r16
    e710:	882ad43a 	srli	r21,r17,16
    e714:	b009883a 	mov	r4,r22
    e718:	8d3fffcc 	andi	r20,r17,65535
    e71c:	a80b883a 	mov	r5,r21
    e720:	0000e580 	call	e58 <__umodsi3>
    e724:	b009883a 	mov	r4,r22
    e728:	a80b883a 	mov	r5,r21
    e72c:	1027883a 	mov	r19,r2
    e730:	0000df40 	call	df4 <__udivsi3>
    e734:	100b883a 	mov	r5,r2
    e738:	a009883a 	mov	r4,r20
    e73c:	102d883a 	mov	r22,r2
    e740:	0000eb00 	call	eb0 <__mulsi3>
    e744:	9826943a 	slli	r19,r19,16
    e748:	9006d43a 	srli	r3,r18,16
    e74c:	1cc6b03a 	or	r3,r3,r19
    e750:	1880052e 	bgeu	r3,r2,e768 <__udivdi3+0xec>
    e754:	1c47883a 	add	r3,r3,r17
    e758:	b13fffc4 	addi	r4,r22,-1
    e75c:	1c400136 	bltu	r3,r17,e764 <__udivdi3+0xe8>
    e760:	18814236 	bltu	r3,r2,ec6c <__udivdi3+0x5f0>
    e764:	202d883a 	mov	r22,r4
    e768:	18a1c83a 	sub	r16,r3,r2
    e76c:	8009883a 	mov	r4,r16
    e770:	a80b883a 	mov	r5,r21
    e774:	0000e580 	call	e58 <__umodsi3>
    e778:	1027883a 	mov	r19,r2
    e77c:	8009883a 	mov	r4,r16
    e780:	a80b883a 	mov	r5,r21
    e784:	9826943a 	slli	r19,r19,16
    e788:	0000df40 	call	df4 <__udivsi3>
    e78c:	100b883a 	mov	r5,r2
    e790:	a009883a 	mov	r4,r20
    e794:	94bfffcc 	andi	r18,r18,65535
    e798:	1021883a 	mov	r16,r2
    e79c:	94e4b03a 	or	r18,r18,r19
    e7a0:	0000eb00 	call	eb0 <__mulsi3>
    e7a4:	9080052e 	bgeu	r18,r2,e7bc <__udivdi3+0x140>
    e7a8:	8ca5883a 	add	r18,r17,r18
    e7ac:	80ffffc4 	addi	r3,r16,-1
    e7b0:	94410c36 	bltu	r18,r17,ebe4 <__udivdi3+0x568>
    e7b4:	90810b2e 	bgeu	r18,r2,ebe4 <__udivdi3+0x568>
    e7b8:	843fff84 	addi	r16,r16,-2
    e7bc:	b004943a 	slli	r2,r22,16
    e7c0:	0007883a 	mov	r3,zero
    e7c4:	1404b03a 	or	r2,r2,r16
    e7c8:	00005e06 	br	e944 <__udivdi3+0x2c8>
    e7cc:	29c05b36 	bltu	r5,r7,e93c <__udivdi3+0x2c0>
    e7d0:	00bfffd4 	movui	r2,65535
    e7d4:	11c0672e 	bgeu	r2,r7,e974 <__udivdi3+0x2f8>
    e7d8:	00804034 	movhi	r2,256
    e7dc:	10bfffc4 	addi	r2,r2,-1
    e7e0:	11c10a36 	bltu	r2,r7,ec0c <__udivdi3+0x590>
    e7e4:	00800404 	movi	r2,16
    e7e8:	3886d83a 	srl	r3,r7,r2
    e7ec:	01000074 	movhi	r4,1
    e7f0:	211a6f84 	addi	r4,r4,27070
    e7f4:	20c7883a 	add	r3,r4,r3
    e7f8:	18c00003 	ldbu	r3,0(r3)
    e7fc:	05c00804 	movi	r23,32
    e800:	1885883a 	add	r2,r3,r2
    e804:	b8afc83a 	sub	r23,r23,r2
    e808:	b800671e 	bne	r23,zero,e9a8 <__udivdi3+0x32c>
    e80c:	3c010536 	bltu	r7,r16,ec24 <__udivdi3+0x5a8>
    e810:	9985403a 	cmpgeu	r2,r19,r6
    e814:	0007883a 	mov	r3,zero
    e818:	00004a06 	br	e944 <__udivdi3+0x2c8>
    e81c:	3000041e 	bne	r6,zero,e830 <__udivdi3+0x1b4>
    e820:	000b883a 	mov	r5,zero
    e824:	01000044 	movi	r4,1
    e828:	0000df40 	call	df4 <__udivsi3>
    e82c:	1023883a 	mov	r17,r2
    e830:	00bfffd4 	movui	r2,65535
    e834:	1440532e 	bgeu	r2,r17,e984 <__udivdi3+0x308>
    e838:	00804034 	movhi	r2,256
    e83c:	10bfffc4 	addi	r2,r2,-1
    e840:	1440f436 	bltu	r2,r17,ec14 <__udivdi3+0x598>
    e844:	00800404 	movi	r2,16
    e848:	8886d83a 	srl	r3,r17,r2
    e84c:	01000074 	movhi	r4,1
    e850:	211a6f84 	addi	r4,r4,27070
    e854:	20c7883a 	add	r3,r4,r3
    e858:	18c00003 	ldbu	r3,0(r3)
    e85c:	1885883a 	add	r2,r3,r2
    e860:	00c00804 	movi	r3,32
    e864:	1887c83a 	sub	r3,r3,r2
    e868:	1800a51e 	bne	r3,zero,eb00 <__udivdi3+0x484>
    e86c:	882ad43a 	srli	r21,r17,16
    e870:	8461c83a 	sub	r16,r16,r17
    e874:	8d3fffcc 	andi	r20,r17,65535
    e878:	00c00044 	movi	r3,1
    e87c:	a80b883a 	mov	r5,r21
    e880:	8009883a 	mov	r4,r16
    e884:	d8c00115 	stw	r3,4(sp)
    e888:	0000e580 	call	e58 <__umodsi3>
    e88c:	a80b883a 	mov	r5,r21
    e890:	8009883a 	mov	r4,r16
    e894:	1027883a 	mov	r19,r2
    e898:	0000df40 	call	df4 <__udivsi3>
    e89c:	a00b883a 	mov	r5,r20
    e8a0:	1009883a 	mov	r4,r2
    e8a4:	102d883a 	mov	r22,r2
    e8a8:	0000eb00 	call	eb0 <__mulsi3>
    e8ac:	9826943a 	slli	r19,r19,16
    e8b0:	900ed43a 	srli	r7,r18,16
    e8b4:	d8c00117 	ldw	r3,4(sp)
    e8b8:	3cceb03a 	or	r7,r7,r19
    e8bc:	3880052e 	bgeu	r7,r2,e8d4 <__udivdi3+0x258>
    e8c0:	3c4f883a 	add	r7,r7,r17
    e8c4:	b13fffc4 	addi	r4,r22,-1
    e8c8:	3c400136 	bltu	r7,r17,e8d0 <__udivdi3+0x254>
    e8cc:	3880e436 	bltu	r7,r2,ec60 <__udivdi3+0x5e4>
    e8d0:	202d883a 	mov	r22,r4
    e8d4:	38a1c83a 	sub	r16,r7,r2
    e8d8:	8009883a 	mov	r4,r16
    e8dc:	a80b883a 	mov	r5,r21
    e8e0:	d8c00115 	stw	r3,4(sp)
    e8e4:	0000e580 	call	e58 <__umodsi3>
    e8e8:	1027883a 	mov	r19,r2
    e8ec:	8009883a 	mov	r4,r16
    e8f0:	a80b883a 	mov	r5,r21
    e8f4:	9826943a 	slli	r19,r19,16
    e8f8:	0000df40 	call	df4 <__udivsi3>
    e8fc:	a00b883a 	mov	r5,r20
    e900:	1009883a 	mov	r4,r2
    e904:	94bfffcc 	andi	r18,r18,65535
    e908:	1021883a 	mov	r16,r2
    e90c:	94e4b03a 	or	r18,r18,r19
    e910:	0000eb00 	call	eb0 <__mulsi3>
    e914:	d8c00117 	ldw	r3,4(sp)
    e918:	9080052e 	bgeu	r18,r2,e930 <__udivdi3+0x2b4>
    e91c:	8ca5883a 	add	r18,r17,r18
    e920:	813fffc4 	addi	r4,r16,-1
    e924:	9440ad36 	bltu	r18,r17,ebdc <__udivdi3+0x560>
    e928:	9080ac2e 	bgeu	r18,r2,ebdc <__udivdi3+0x560>
    e92c:	843fff84 	addi	r16,r16,-2
    e930:	b004943a 	slli	r2,r22,16
    e934:	1404b03a 	or	r2,r2,r16
    e938:	00000206 	br	e944 <__udivdi3+0x2c8>
    e93c:	0007883a 	mov	r3,zero
    e940:	0005883a 	mov	r2,zero
    e944:	dfc00b17 	ldw	ra,44(sp)
    e948:	df000a17 	ldw	fp,40(sp)
    e94c:	ddc00917 	ldw	r23,36(sp)
    e950:	dd800817 	ldw	r22,32(sp)
    e954:	dd400717 	ldw	r21,28(sp)
    e958:	dd000617 	ldw	r20,24(sp)
    e95c:	dcc00517 	ldw	r19,20(sp)
    e960:	dc800417 	ldw	r18,16(sp)
    e964:	dc400317 	ldw	r17,12(sp)
    e968:	dc000217 	ldw	r16,8(sp)
    e96c:	dec00c04 	addi	sp,sp,48
    e970:	f800283a 	ret
    e974:	00803fc4 	movi	r2,255
    e978:	11c5803a 	cmpltu	r2,r2,r7
    e97c:	100490fa 	slli	r2,r2,3
    e980:	003f9906 	br	e7e8 <__alt_mem_Onchip_SRAM+0xf800e7e8>
    e984:	00803fc4 	movi	r2,255
    e988:	1445803a 	cmpltu	r2,r2,r17
    e98c:	100490fa 	slli	r2,r2,3
    e990:	003fad06 	br	e848 <__alt_mem_Onchip_SRAM+0xf800e848>
    e994:	00804034 	movhi	r2,256
    e998:	10bfffc4 	addi	r2,r2,-1
    e99c:	11809f36 	bltu	r2,r6,ec1c <__udivdi3+0x5a0>
    e9a0:	00800404 	movi	r2,16
    e9a4:	003f4c06 	br	e6d8 <__alt_mem_Onchip_SRAM+0xf800e6d8>
    e9a8:	3dce983a 	sll	r7,r7,r23
    e9ac:	30b8d83a 	srl	fp,r6,r2
    e9b0:	80a2d83a 	srl	r17,r16,r2
    e9b4:	35cc983a 	sll	r6,r6,r23
    e9b8:	3f38b03a 	or	fp,r7,fp
    e9bc:	e024d43a 	srli	r18,fp,16
    e9c0:	9884d83a 	srl	r2,r19,r2
    e9c4:	85e0983a 	sll	r16,r16,r23
    e9c8:	8809883a 	mov	r4,r17
    e9cc:	900b883a 	mov	r5,r18
    e9d0:	d9800015 	stw	r6,0(sp)
    e9d4:	1420b03a 	or	r16,r2,r16
    e9d8:	0000e580 	call	e58 <__umodsi3>
    e9dc:	900b883a 	mov	r5,r18
    e9e0:	8809883a 	mov	r4,r17
    e9e4:	1029883a 	mov	r20,r2
    e9e8:	e5bfffcc 	andi	r22,fp,65535
    e9ec:	0000df40 	call	df4 <__udivsi3>
    e9f0:	100b883a 	mov	r5,r2
    e9f4:	b009883a 	mov	r4,r22
    e9f8:	102b883a 	mov	r21,r2
    e9fc:	0000eb00 	call	eb0 <__mulsi3>
    ea00:	a028943a 	slli	r20,r20,16
    ea04:	8006d43a 	srli	r3,r16,16
    ea08:	1d06b03a 	or	r3,r3,r20
    ea0c:	1880042e 	bgeu	r3,r2,ea20 <__udivdi3+0x3a4>
    ea10:	1f07883a 	add	r3,r3,fp
    ea14:	a93fffc4 	addi	r4,r21,-1
    ea18:	1f00892e 	bgeu	r3,fp,ec40 <__udivdi3+0x5c4>
    ea1c:	202b883a 	mov	r21,r4
    ea20:	18a3c83a 	sub	r17,r3,r2
    ea24:	8809883a 	mov	r4,r17
    ea28:	900b883a 	mov	r5,r18
    ea2c:	0000e580 	call	e58 <__umodsi3>
    ea30:	1029883a 	mov	r20,r2
    ea34:	8809883a 	mov	r4,r17
    ea38:	900b883a 	mov	r5,r18
    ea3c:	a028943a 	slli	r20,r20,16
    ea40:	0000df40 	call	df4 <__udivsi3>
    ea44:	100b883a 	mov	r5,r2
    ea48:	b009883a 	mov	r4,r22
    ea4c:	843fffcc 	andi	r16,r16,65535
    ea50:	1023883a 	mov	r17,r2
    ea54:	8520b03a 	or	r16,r16,r20
    ea58:	0000eb00 	call	eb0 <__mulsi3>
    ea5c:	8080042e 	bgeu	r16,r2,ea70 <__udivdi3+0x3f4>
    ea60:	8721883a 	add	r16,r16,fp
    ea64:	88ffffc4 	addi	r3,r17,-1
    ea68:	8700712e 	bgeu	r16,fp,ec30 <__udivdi3+0x5b4>
    ea6c:	1823883a 	mov	r17,r3
    ea70:	a80e943a 	slli	r7,r21,16
    ea74:	d8c00017 	ldw	r3,0(sp)
    ea78:	80a1c83a 	sub	r16,r16,r2
    ea7c:	3c64b03a 	or	r18,r7,r17
    ea80:	1d3fffcc 	andi	r20,r3,65535
    ea84:	9022d43a 	srli	r17,r18,16
    ea88:	95bfffcc 	andi	r22,r18,65535
    ea8c:	a00b883a 	mov	r5,r20
    ea90:	b009883a 	mov	r4,r22
    ea94:	182ad43a 	srli	r21,r3,16
    ea98:	0000eb00 	call	eb0 <__mulsi3>
    ea9c:	a00b883a 	mov	r5,r20
    eaa0:	8809883a 	mov	r4,r17
    eaa4:	1039883a 	mov	fp,r2
    eaa8:	0000eb00 	call	eb0 <__mulsi3>
    eaac:	8809883a 	mov	r4,r17
    eab0:	a80b883a 	mov	r5,r21
    eab4:	1029883a 	mov	r20,r2
    eab8:	0000eb00 	call	eb0 <__mulsi3>
    eabc:	a80b883a 	mov	r5,r21
    eac0:	b009883a 	mov	r4,r22
    eac4:	1023883a 	mov	r17,r2
    eac8:	0000eb00 	call	eb0 <__mulsi3>
    eacc:	e006d43a 	srli	r3,fp,16
    ead0:	1505883a 	add	r2,r2,r20
    ead4:	1887883a 	add	r3,r3,r2
    ead8:	1d00022e 	bgeu	r3,r20,eae4 <__udivdi3+0x468>
    eadc:	00800074 	movhi	r2,1
    eae0:	88a3883a 	add	r17,r17,r2
    eae4:	1804d43a 	srli	r2,r3,16
    eae8:	1463883a 	add	r17,r2,r17
    eaec:	84404436 	bltu	r16,r17,ec00 <__udivdi3+0x584>
    eaf0:	84403e26 	beq	r16,r17,ebec <__udivdi3+0x570>
    eaf4:	9005883a 	mov	r2,r18
    eaf8:	0007883a 	mov	r3,zero
    eafc:	003f9106 	br	e944 <__alt_mem_Onchip_SRAM+0xf800e944>
    eb00:	88e2983a 	sll	r17,r17,r3
    eb04:	80aed83a 	srl	r23,r16,r2
    eb08:	80e0983a 	sll	r16,r16,r3
    eb0c:	882ad43a 	srli	r21,r17,16
    eb10:	9884d83a 	srl	r2,r19,r2
    eb14:	b809883a 	mov	r4,r23
    eb18:	a80b883a 	mov	r5,r21
    eb1c:	98e4983a 	sll	r18,r19,r3
    eb20:	142cb03a 	or	r22,r2,r16
    eb24:	0000e580 	call	e58 <__umodsi3>
    eb28:	b809883a 	mov	r4,r23
    eb2c:	a80b883a 	mov	r5,r21
    eb30:	1027883a 	mov	r19,r2
    eb34:	8d3fffcc 	andi	r20,r17,65535
    eb38:	0000df40 	call	df4 <__udivsi3>
    eb3c:	a009883a 	mov	r4,r20
    eb40:	100b883a 	mov	r5,r2
    eb44:	102f883a 	mov	r23,r2
    eb48:	0000eb00 	call	eb0 <__mulsi3>
    eb4c:	9826943a 	slli	r19,r19,16
    eb50:	b008d43a 	srli	r4,r22,16
    eb54:	24c8b03a 	or	r4,r4,r19
    eb58:	2080062e 	bgeu	r4,r2,eb74 <__udivdi3+0x4f8>
    eb5c:	2449883a 	add	r4,r4,r17
    eb60:	b8ffffc4 	addi	r3,r23,-1
    eb64:	24403c36 	bltu	r4,r17,ec58 <__udivdi3+0x5dc>
    eb68:	20803b2e 	bgeu	r4,r2,ec58 <__udivdi3+0x5dc>
    eb6c:	bdffff84 	addi	r23,r23,-2
    eb70:	2449883a 	add	r4,r4,r17
    eb74:	20a1c83a 	sub	r16,r4,r2
    eb78:	a80b883a 	mov	r5,r21
    eb7c:	8009883a 	mov	r4,r16
    eb80:	0000e580 	call	e58 <__umodsi3>
    eb84:	a80b883a 	mov	r5,r21
    eb88:	8009883a 	mov	r4,r16
    eb8c:	1027883a 	mov	r19,r2
    eb90:	0000df40 	call	df4 <__udivsi3>
    eb94:	a009883a 	mov	r4,r20
    eb98:	100b883a 	mov	r5,r2
    eb9c:	9826943a 	slli	r19,r19,16
    eba0:	1039883a 	mov	fp,r2
    eba4:	0000eb00 	call	eb0 <__mulsi3>
    eba8:	b13fffcc 	andi	r4,r22,65535
    ebac:	24c8b03a 	or	r4,r4,r19
    ebb0:	2080062e 	bgeu	r4,r2,ebcc <__udivdi3+0x550>
    ebb4:	2449883a 	add	r4,r4,r17
    ebb8:	e0ffffc4 	addi	r3,fp,-1
    ebbc:	24402436 	bltu	r4,r17,ec50 <__udivdi3+0x5d4>
    ebc0:	2080232e 	bgeu	r4,r2,ec50 <__udivdi3+0x5d4>
    ebc4:	e73fff84 	addi	fp,fp,-2
    ebc8:	2449883a 	add	r4,r4,r17
    ebcc:	b82e943a 	slli	r23,r23,16
    ebd0:	20a1c83a 	sub	r16,r4,r2
    ebd4:	bf06b03a 	or	r3,r23,fp
    ebd8:	003f2806 	br	e87c <__alt_mem_Onchip_SRAM+0xf800e87c>
    ebdc:	2021883a 	mov	r16,r4
    ebe0:	003f5306 	br	e930 <__alt_mem_Onchip_SRAM+0xf800e930>
    ebe4:	1821883a 	mov	r16,r3
    ebe8:	003ef406 	br	e7bc <__alt_mem_Onchip_SRAM+0xf800e7bc>
    ebec:	1806943a 	slli	r3,r3,16
    ebf0:	9de6983a 	sll	r19,r19,r23
    ebf4:	e73fffcc 	andi	fp,fp,65535
    ebf8:	1f07883a 	add	r3,r3,fp
    ebfc:	98ffbd2e 	bgeu	r19,r3,eaf4 <__alt_mem_Onchip_SRAM+0xf800eaf4>
    ec00:	90bfffc4 	addi	r2,r18,-1
    ec04:	0007883a 	mov	r3,zero
    ec08:	003f4e06 	br	e944 <__alt_mem_Onchip_SRAM+0xf800e944>
    ec0c:	00800604 	movi	r2,24
    ec10:	003ef506 	br	e7e8 <__alt_mem_Onchip_SRAM+0xf800e7e8>
    ec14:	00800604 	movi	r2,24
    ec18:	003f0b06 	br	e848 <__alt_mem_Onchip_SRAM+0xf800e848>
    ec1c:	00800604 	movi	r2,24
    ec20:	003ead06 	br	e6d8 <__alt_mem_Onchip_SRAM+0xf800e6d8>
    ec24:	0007883a 	mov	r3,zero
    ec28:	00800044 	movi	r2,1
    ec2c:	003f4506 	br	e944 <__alt_mem_Onchip_SRAM+0xf800e944>
    ec30:	80bf8e2e 	bgeu	r16,r2,ea6c <__alt_mem_Onchip_SRAM+0xf800ea6c>
    ec34:	8c7fff84 	addi	r17,r17,-2
    ec38:	8721883a 	add	r16,r16,fp
    ec3c:	003f8c06 	br	ea70 <__alt_mem_Onchip_SRAM+0xf800ea70>
    ec40:	18bf762e 	bgeu	r3,r2,ea1c <__alt_mem_Onchip_SRAM+0xf800ea1c>
    ec44:	ad7fff84 	addi	r21,r21,-2
    ec48:	1f07883a 	add	r3,r3,fp
    ec4c:	003f7406 	br	ea20 <__alt_mem_Onchip_SRAM+0xf800ea20>
    ec50:	1839883a 	mov	fp,r3
    ec54:	003fdd06 	br	ebcc <__alt_mem_Onchip_SRAM+0xf800ebcc>
    ec58:	182f883a 	mov	r23,r3
    ec5c:	003fc506 	br	eb74 <__alt_mem_Onchip_SRAM+0xf800eb74>
    ec60:	b5bfff84 	addi	r22,r22,-2
    ec64:	3c4f883a 	add	r7,r7,r17
    ec68:	003f1a06 	br	e8d4 <__alt_mem_Onchip_SRAM+0xf800e8d4>
    ec6c:	b5bfff84 	addi	r22,r22,-2
    ec70:	1c47883a 	add	r3,r3,r17
    ec74:	003ebc06 	br	e768 <__alt_mem_Onchip_SRAM+0xf800e768>

0000ec78 <__umoddi3>:
    ec78:	defff304 	addi	sp,sp,-52
    ec7c:	df000b15 	stw	fp,44(sp)
    ec80:	dc400415 	stw	r17,16(sp)
    ec84:	dc000315 	stw	r16,12(sp)
    ec88:	dfc00c15 	stw	ra,48(sp)
    ec8c:	ddc00a15 	stw	r23,40(sp)
    ec90:	dd800915 	stw	r22,36(sp)
    ec94:	dd400815 	stw	r21,32(sp)
    ec98:	dd000715 	stw	r20,28(sp)
    ec9c:	dcc00615 	stw	r19,24(sp)
    eca0:	dc800515 	stw	r18,20(sp)
    eca4:	2021883a 	mov	r16,r4
    eca8:	2823883a 	mov	r17,r5
    ecac:	2839883a 	mov	fp,r5
    ecb0:	3800401e 	bne	r7,zero,edb4 <__umoddi3+0x13c>
    ecb4:	3027883a 	mov	r19,r6
    ecb8:	2029883a 	mov	r20,r4
    ecbc:	2980552e 	bgeu	r5,r6,ee14 <__umoddi3+0x19c>
    ecc0:	00bfffd4 	movui	r2,65535
    ecc4:	1180a236 	bltu	r2,r6,ef50 <__umoddi3+0x2d8>
    ecc8:	01003fc4 	movi	r4,255
    eccc:	2189803a 	cmpltu	r4,r4,r6
    ecd0:	200890fa 	slli	r4,r4,3
    ecd4:	3104d83a 	srl	r2,r6,r4
    ecd8:	00c00074 	movhi	r3,1
    ecdc:	18da6f84 	addi	r3,r3,27070
    ece0:	1885883a 	add	r2,r3,r2
    ece4:	10c00003 	ldbu	r3,0(r2)
    ece8:	00800804 	movi	r2,32
    ecec:	1909883a 	add	r4,r3,r4
    ecf0:	1125c83a 	sub	r18,r2,r4
    ecf4:	90000526 	beq	r18,zero,ed0c <__umoddi3+0x94>
    ecf8:	8ca2983a 	sll	r17,r17,r18
    ecfc:	8108d83a 	srl	r4,r16,r4
    ed00:	34a6983a 	sll	r19,r6,r18
    ed04:	84a8983a 	sll	r20,r16,r18
    ed08:	2478b03a 	or	fp,r4,r17
    ed0c:	982cd43a 	srli	r22,r19,16
    ed10:	e009883a 	mov	r4,fp
    ed14:	9dffffcc 	andi	r23,r19,65535
    ed18:	b00b883a 	mov	r5,r22
    ed1c:	0000e580 	call	e58 <__umodsi3>
    ed20:	b00b883a 	mov	r5,r22
    ed24:	e009883a 	mov	r4,fp
    ed28:	102b883a 	mov	r21,r2
    ed2c:	0000df40 	call	df4 <__udivsi3>
    ed30:	100b883a 	mov	r5,r2
    ed34:	b809883a 	mov	r4,r23
    ed38:	0000eb00 	call	eb0 <__mulsi3>
    ed3c:	a82a943a 	slli	r21,r21,16
    ed40:	a006d43a 	srli	r3,r20,16
    ed44:	1d46b03a 	or	r3,r3,r21
    ed48:	1880032e 	bgeu	r3,r2,ed58 <__umoddi3+0xe0>
    ed4c:	1cc7883a 	add	r3,r3,r19
    ed50:	1cc00136 	bltu	r3,r19,ed58 <__umoddi3+0xe0>
    ed54:	18813136 	bltu	r3,r2,f21c <__umoddi3+0x5a4>
    ed58:	18a1c83a 	sub	r16,r3,r2
    ed5c:	b00b883a 	mov	r5,r22
    ed60:	8009883a 	mov	r4,r16
    ed64:	0000e580 	call	e58 <__umodsi3>
    ed68:	b00b883a 	mov	r5,r22
    ed6c:	8009883a 	mov	r4,r16
    ed70:	1023883a 	mov	r17,r2
    ed74:	0000df40 	call	df4 <__udivsi3>
    ed78:	100b883a 	mov	r5,r2
    ed7c:	b809883a 	mov	r4,r23
    ed80:	8822943a 	slli	r17,r17,16
    ed84:	0000eb00 	call	eb0 <__mulsi3>
    ed88:	a0ffffcc 	andi	r3,r20,65535
    ed8c:	1c46b03a 	or	r3,r3,r17
    ed90:	1880042e 	bgeu	r3,r2,eda4 <__umoddi3+0x12c>
    ed94:	1cc7883a 	add	r3,r3,r19
    ed98:	1cc00236 	bltu	r3,r19,eda4 <__umoddi3+0x12c>
    ed9c:	1880012e 	bgeu	r3,r2,eda4 <__umoddi3+0x12c>
    eda0:	1cc7883a 	add	r3,r3,r19
    eda4:	1885c83a 	sub	r2,r3,r2
    eda8:	1484d83a 	srl	r2,r2,r18
    edac:	0007883a 	mov	r3,zero
    edb0:	00005306 	br	ef00 <__umoddi3+0x288>
    edb4:	29c05036 	bltu	r5,r7,eef8 <__umoddi3+0x280>
    edb8:	00bfffd4 	movui	r2,65535
    edbc:	11c05c2e 	bgeu	r2,r7,ef30 <__umoddi3+0x2b8>
    edc0:	00804034 	movhi	r2,256
    edc4:	10bfffc4 	addi	r2,r2,-1
    edc8:	11c10636 	bltu	r2,r7,f1e4 <__umoddi3+0x56c>
    edcc:	01000404 	movi	r4,16
    edd0:	3904d83a 	srl	r2,r7,r4
    edd4:	00c00074 	movhi	r3,1
    edd8:	18da6f84 	addi	r3,r3,27070
    eddc:	1885883a 	add	r2,r3,r2
    ede0:	14c00003 	ldbu	r19,0(r2)
    ede4:	00c00804 	movi	r3,32
    ede8:	9927883a 	add	r19,r19,r4
    edec:	1ce9c83a 	sub	r20,r3,r19
    edf0:	a0005c1e 	bne	r20,zero,ef64 <__umoddi3+0x2ec>
    edf4:	3c400136 	bltu	r7,r17,edfc <__umoddi3+0x184>
    edf8:	81810a36 	bltu	r16,r6,f224 <__umoddi3+0x5ac>
    edfc:	8185c83a 	sub	r2,r16,r6
    ee00:	89e3c83a 	sub	r17,r17,r7
    ee04:	8089803a 	cmpltu	r4,r16,r2
    ee08:	8939c83a 	sub	fp,r17,r4
    ee0c:	e007883a 	mov	r3,fp
    ee10:	00003b06 	br	ef00 <__umoddi3+0x288>
    ee14:	3000041e 	bne	r6,zero,ee28 <__umoddi3+0x1b0>
    ee18:	000b883a 	mov	r5,zero
    ee1c:	01000044 	movi	r4,1
    ee20:	0000df40 	call	df4 <__udivsi3>
    ee24:	1027883a 	mov	r19,r2
    ee28:	00bfffd4 	movui	r2,65535
    ee2c:	14c0442e 	bgeu	r2,r19,ef40 <__umoddi3+0x2c8>
    ee30:	00804034 	movhi	r2,256
    ee34:	10bfffc4 	addi	r2,r2,-1
    ee38:	14c0ec36 	bltu	r2,r19,f1ec <__umoddi3+0x574>
    ee3c:	00800404 	movi	r2,16
    ee40:	9886d83a 	srl	r3,r19,r2
    ee44:	01000074 	movhi	r4,1
    ee48:	211a6f84 	addi	r4,r4,27070
    ee4c:	20c7883a 	add	r3,r4,r3
    ee50:	18c00003 	ldbu	r3,0(r3)
    ee54:	1887883a 	add	r3,r3,r2
    ee58:	00800804 	movi	r2,32
    ee5c:	10e5c83a 	sub	r18,r2,r3
    ee60:	9000ab1e 	bne	r18,zero,f110 <__umoddi3+0x498>
    ee64:	982cd43a 	srli	r22,r19,16
    ee68:	8ce3c83a 	sub	r17,r17,r19
    ee6c:	9dffffcc 	andi	r23,r19,65535
    ee70:	b00b883a 	mov	r5,r22
    ee74:	8809883a 	mov	r4,r17
    ee78:	0000e580 	call	e58 <__umodsi3>
    ee7c:	b00b883a 	mov	r5,r22
    ee80:	8809883a 	mov	r4,r17
    ee84:	102b883a 	mov	r21,r2
    ee88:	0000df40 	call	df4 <__udivsi3>
    ee8c:	b80b883a 	mov	r5,r23
    ee90:	1009883a 	mov	r4,r2
    ee94:	0000eb00 	call	eb0 <__mulsi3>
    ee98:	a82a943a 	slli	r21,r21,16
    ee9c:	a006d43a 	srli	r3,r20,16
    eea0:	1d46b03a 	or	r3,r3,r21
    eea4:	1880042e 	bgeu	r3,r2,eeb8 <__umoddi3+0x240>
    eea8:	1cc7883a 	add	r3,r3,r19
    eeac:	1cc00236 	bltu	r3,r19,eeb8 <__umoddi3+0x240>
    eeb0:	1880012e 	bgeu	r3,r2,eeb8 <__umoddi3+0x240>
    eeb4:	1cc7883a 	add	r3,r3,r19
    eeb8:	18a1c83a 	sub	r16,r3,r2
    eebc:	b00b883a 	mov	r5,r22
    eec0:	8009883a 	mov	r4,r16
    eec4:	0000e580 	call	e58 <__umodsi3>
    eec8:	1023883a 	mov	r17,r2
    eecc:	b00b883a 	mov	r5,r22
    eed0:	8009883a 	mov	r4,r16
    eed4:	0000df40 	call	df4 <__udivsi3>
    eed8:	8822943a 	slli	r17,r17,16
    eedc:	b80b883a 	mov	r5,r23
    eee0:	1009883a 	mov	r4,r2
    eee4:	0000eb00 	call	eb0 <__mulsi3>
    eee8:	a53fffcc 	andi	r20,r20,65535
    eeec:	a446b03a 	or	r3,r20,r17
    eef0:	18bfac2e 	bgeu	r3,r2,eda4 <__alt_mem_Onchip_SRAM+0xf800eda4>
    eef4:	003fa706 	br	ed94 <__alt_mem_Onchip_SRAM+0xf800ed94>
    eef8:	2005883a 	mov	r2,r4
    eefc:	2807883a 	mov	r3,r5
    ef00:	dfc00c17 	ldw	ra,48(sp)
    ef04:	df000b17 	ldw	fp,44(sp)
    ef08:	ddc00a17 	ldw	r23,40(sp)
    ef0c:	dd800917 	ldw	r22,36(sp)
    ef10:	dd400817 	ldw	r21,32(sp)
    ef14:	dd000717 	ldw	r20,28(sp)
    ef18:	dcc00617 	ldw	r19,24(sp)
    ef1c:	dc800517 	ldw	r18,20(sp)
    ef20:	dc400417 	ldw	r17,16(sp)
    ef24:	dc000317 	ldw	r16,12(sp)
    ef28:	dec00d04 	addi	sp,sp,52
    ef2c:	f800283a 	ret
    ef30:	04c03fc4 	movi	r19,255
    ef34:	99c9803a 	cmpltu	r4,r19,r7
    ef38:	200890fa 	slli	r4,r4,3
    ef3c:	003fa406 	br	edd0 <__alt_mem_Onchip_SRAM+0xf800edd0>
    ef40:	00803fc4 	movi	r2,255
    ef44:	14c5803a 	cmpltu	r2,r2,r19
    ef48:	100490fa 	slli	r2,r2,3
    ef4c:	003fbc06 	br	ee40 <__alt_mem_Onchip_SRAM+0xf800ee40>
    ef50:	00804034 	movhi	r2,256
    ef54:	10bfffc4 	addi	r2,r2,-1
    ef58:	1180a636 	bltu	r2,r6,f1f4 <__umoddi3+0x57c>
    ef5c:	01000404 	movi	r4,16
    ef60:	003f5c06 	br	ecd4 <__alt_mem_Onchip_SRAM+0xf800ecd4>
    ef64:	3d0e983a 	sll	r7,r7,r20
    ef68:	34ead83a 	srl	r21,r6,r19
    ef6c:	8cc6d83a 	srl	r3,r17,r19
    ef70:	8d10983a 	sll	r8,r17,r20
    ef74:	3d6ab03a 	or	r21,r7,r21
    ef78:	a82cd43a 	srli	r22,r21,16
    ef7c:	84e2d83a 	srl	r17,r16,r19
    ef80:	1809883a 	mov	r4,r3
    ef84:	b00b883a 	mov	r5,r22
    ef88:	8a22b03a 	or	r17,r17,r8
    ef8c:	3524983a 	sll	r18,r6,r20
    ef90:	dc400015 	stw	r17,0(sp)
    ef94:	d8c00115 	stw	r3,4(sp)
    ef98:	0000e580 	call	e58 <__umodsi3>
    ef9c:	d8c00117 	ldw	r3,4(sp)
    efa0:	b00b883a 	mov	r5,r22
    efa4:	1039883a 	mov	fp,r2
    efa8:	1809883a 	mov	r4,r3
    efac:	0000df40 	call	df4 <__udivsi3>
    efb0:	adffffcc 	andi	r23,r21,65535
    efb4:	100b883a 	mov	r5,r2
    efb8:	b809883a 	mov	r4,r23
    efbc:	1023883a 	mov	r17,r2
    efc0:	0000eb00 	call	eb0 <__mulsi3>
    efc4:	d9400017 	ldw	r5,0(sp)
    efc8:	e008943a 	slli	r4,fp,16
    efcc:	8520983a 	sll	r16,r16,r20
    efd0:	2806d43a 	srli	r3,r5,16
    efd4:	1906b03a 	or	r3,r3,r4
    efd8:	1880042e 	bgeu	r3,r2,efec <__umoddi3+0x374>
    efdc:	1d47883a 	add	r3,r3,r21
    efe0:	893fffc4 	addi	r4,r17,-1
    efe4:	1d40892e 	bgeu	r3,r21,f20c <__umoddi3+0x594>
    efe8:	2023883a 	mov	r17,r4
    efec:	18b9c83a 	sub	fp,r3,r2
    eff0:	b00b883a 	mov	r5,r22
    eff4:	e009883a 	mov	r4,fp
    eff8:	0000e580 	call	e58 <__umodsi3>
    effc:	b00b883a 	mov	r5,r22
    f000:	e009883a 	mov	r4,fp
    f004:	d8800215 	stw	r2,8(sp)
    f008:	0000df40 	call	df4 <__udivsi3>
    f00c:	100b883a 	mov	r5,r2
    f010:	b809883a 	mov	r4,r23
    f014:	102d883a 	mov	r22,r2
    f018:	0000eb00 	call	eb0 <__mulsi3>
    f01c:	d9800217 	ldw	r6,8(sp)
    f020:	d8c00017 	ldw	r3,0(sp)
    f024:	300c943a 	slli	r6,r6,16
    f028:	1a3fffcc 	andi	r8,r3,65535
    f02c:	4190b03a 	or	r8,r8,r6
    f030:	4080042e 	bgeu	r8,r2,f044 <__umoddi3+0x3cc>
    f034:	4551883a 	add	r8,r8,r21
    f038:	b0ffffc4 	addi	r3,r22,-1
    f03c:	45406f2e 	bgeu	r8,r21,f1fc <__umoddi3+0x584>
    f040:	182d883a 	mov	r22,r3
    f044:	880e943a 	slli	r7,r17,16
    f048:	9006d43a 	srli	r3,r18,16
    f04c:	91bfffcc 	andi	r6,r18,65535
    f050:	3dacb03a 	or	r22,r7,r22
    f054:	b02ed43a 	srli	r23,r22,16
    f058:	b5bfffcc 	andi	r22,r22,65535
    f05c:	300b883a 	mov	r5,r6
    f060:	b009883a 	mov	r4,r22
    f064:	40a3c83a 	sub	r17,r8,r2
    f068:	d8c00115 	stw	r3,4(sp)
    f06c:	d9800215 	stw	r6,8(sp)
    f070:	0000eb00 	call	eb0 <__mulsi3>
    f074:	d9800217 	ldw	r6,8(sp)
    f078:	b809883a 	mov	r4,r23
    f07c:	1039883a 	mov	fp,r2
    f080:	300b883a 	mov	r5,r6
    f084:	0000eb00 	call	eb0 <__mulsi3>
    f088:	d8c00117 	ldw	r3,4(sp)
    f08c:	b809883a 	mov	r4,r23
    f090:	d8800215 	stw	r2,8(sp)
    f094:	180b883a 	mov	r5,r3
    f098:	0000eb00 	call	eb0 <__mulsi3>
    f09c:	d8c00117 	ldw	r3,4(sp)
    f0a0:	b009883a 	mov	r4,r22
    f0a4:	102f883a 	mov	r23,r2
    f0a8:	180b883a 	mov	r5,r3
    f0ac:	0000eb00 	call	eb0 <__mulsi3>
    f0b0:	d9800217 	ldw	r6,8(sp)
    f0b4:	e006d43a 	srli	r3,fp,16
    f0b8:	1185883a 	add	r2,r2,r6
    f0bc:	1885883a 	add	r2,r3,r2
    f0c0:	1180022e 	bgeu	r2,r6,f0cc <__umoddi3+0x454>
    f0c4:	00c00074 	movhi	r3,1
    f0c8:	b8ef883a 	add	r23,r23,r3
    f0cc:	1006d43a 	srli	r3,r2,16
    f0d0:	1004943a 	slli	r2,r2,16
    f0d4:	e73fffcc 	andi	fp,fp,65535
    f0d8:	1dc7883a 	add	r3,r3,r23
    f0dc:	1739883a 	add	fp,r2,fp
    f0e0:	88c03a36 	bltu	r17,r3,f1cc <__umoddi3+0x554>
    f0e4:	88c05126 	beq	r17,r3,f22c <__umoddi3+0x5b4>
    f0e8:	88c9c83a 	sub	r4,r17,r3
    f0ec:	e00f883a 	mov	r7,fp
    f0f0:	81cfc83a 	sub	r7,r16,r7
    f0f4:	81c7803a 	cmpltu	r3,r16,r7
    f0f8:	20c7c83a 	sub	r3,r4,r3
    f0fc:	1cc4983a 	sll	r2,r3,r19
    f100:	3d0ed83a 	srl	r7,r7,r20
    f104:	1d06d83a 	srl	r3,r3,r20
    f108:	11c4b03a 	or	r2,r2,r7
    f10c:	003f7c06 	br	ef00 <__alt_mem_Onchip_SRAM+0xf800ef00>
    f110:	9ca6983a 	sll	r19,r19,r18
    f114:	88f8d83a 	srl	fp,r17,r3
    f118:	80c4d83a 	srl	r2,r16,r3
    f11c:	982cd43a 	srli	r22,r19,16
    f120:	8ca2983a 	sll	r17,r17,r18
    f124:	e009883a 	mov	r4,fp
    f128:	b00b883a 	mov	r5,r22
    f12c:	146ab03a 	or	r21,r2,r17
    f130:	0000e580 	call	e58 <__umodsi3>
    f134:	b00b883a 	mov	r5,r22
    f138:	e009883a 	mov	r4,fp
    f13c:	1029883a 	mov	r20,r2
    f140:	9dffffcc 	andi	r23,r19,65535
    f144:	0000df40 	call	df4 <__udivsi3>
    f148:	b809883a 	mov	r4,r23
    f14c:	100b883a 	mov	r5,r2
    f150:	0000eb00 	call	eb0 <__mulsi3>
    f154:	a008943a 	slli	r4,r20,16
    f158:	a806d43a 	srli	r3,r21,16
    f15c:	84a8983a 	sll	r20,r16,r18
    f160:	1906b03a 	or	r3,r3,r4
    f164:	1880042e 	bgeu	r3,r2,f178 <__umoddi3+0x500>
    f168:	1cc7883a 	add	r3,r3,r19
    f16c:	1cc00236 	bltu	r3,r19,f178 <__umoddi3+0x500>
    f170:	1880012e 	bgeu	r3,r2,f178 <__umoddi3+0x500>
    f174:	1cc7883a 	add	r3,r3,r19
    f178:	18a3c83a 	sub	r17,r3,r2
    f17c:	b00b883a 	mov	r5,r22
    f180:	8809883a 	mov	r4,r17
    f184:	0000e580 	call	e58 <__umodsi3>
    f188:	b00b883a 	mov	r5,r22
    f18c:	8809883a 	mov	r4,r17
    f190:	1021883a 	mov	r16,r2
    f194:	0000df40 	call	df4 <__udivsi3>
    f198:	100b883a 	mov	r5,r2
    f19c:	b809883a 	mov	r4,r23
    f1a0:	8020943a 	slli	r16,r16,16
    f1a4:	0000eb00 	call	eb0 <__mulsi3>
    f1a8:	a8ffffcc 	andi	r3,r21,65535
    f1ac:	1c06b03a 	or	r3,r3,r16
    f1b0:	1880042e 	bgeu	r3,r2,f1c4 <__umoddi3+0x54c>
    f1b4:	1cc7883a 	add	r3,r3,r19
    f1b8:	1cc00236 	bltu	r3,r19,f1c4 <__umoddi3+0x54c>
    f1bc:	1880012e 	bgeu	r3,r2,f1c4 <__umoddi3+0x54c>
    f1c0:	1cc7883a 	add	r3,r3,r19
    f1c4:	18a3c83a 	sub	r17,r3,r2
    f1c8:	003f2906 	br	ee70 <__alt_mem_Onchip_SRAM+0xf800ee70>
    f1cc:	e48fc83a 	sub	r7,fp,r18
    f1d0:	1d49c83a 	sub	r4,r3,r21
    f1d4:	e1f9803a 	cmpltu	fp,fp,r7
    f1d8:	2739c83a 	sub	fp,r4,fp
    f1dc:	8f09c83a 	sub	r4,r17,fp
    f1e0:	003fc306 	br	f0f0 <__alt_mem_Onchip_SRAM+0xf800f0f0>
    f1e4:	01000604 	movi	r4,24
    f1e8:	003ef906 	br	edd0 <__alt_mem_Onchip_SRAM+0xf800edd0>
    f1ec:	00800604 	movi	r2,24
    f1f0:	003f1306 	br	ee40 <__alt_mem_Onchip_SRAM+0xf800ee40>
    f1f4:	01000604 	movi	r4,24
    f1f8:	003eb606 	br	ecd4 <__alt_mem_Onchip_SRAM+0xf800ecd4>
    f1fc:	40bf902e 	bgeu	r8,r2,f040 <__alt_mem_Onchip_SRAM+0xf800f040>
    f200:	b5bfff84 	addi	r22,r22,-2
    f204:	4551883a 	add	r8,r8,r21
    f208:	003f8e06 	br	f044 <__alt_mem_Onchip_SRAM+0xf800f044>
    f20c:	18bf762e 	bgeu	r3,r2,efe8 <__alt_mem_Onchip_SRAM+0xf800efe8>
    f210:	8c7fff84 	addi	r17,r17,-2
    f214:	1d47883a 	add	r3,r3,r21
    f218:	003f7406 	br	efec <__alt_mem_Onchip_SRAM+0xf800efec>
    f21c:	1cc7883a 	add	r3,r3,r19
    f220:	003ecd06 	br	ed58 <__alt_mem_Onchip_SRAM+0xf800ed58>
    f224:	8005883a 	mov	r2,r16
    f228:	003ef806 	br	ee0c <__alt_mem_Onchip_SRAM+0xf800ee0c>
    f22c:	873fe736 	bltu	r16,fp,f1cc <__alt_mem_Onchip_SRAM+0xf800f1cc>
    f230:	e00f883a 	mov	r7,fp
    f234:	0009883a 	mov	r4,zero
    f238:	003fad06 	br	f0f0 <__alt_mem_Onchip_SRAM+0xf800f0f0>

0000f23c <__adddf3>:
    f23c:	02c00434 	movhi	r11,16
    f240:	5affffc4 	addi	r11,r11,-1
    f244:	2806d7fa 	srli	r3,r5,31
    f248:	2ad4703a 	and	r10,r5,r11
    f24c:	3ad2703a 	and	r9,r7,r11
    f250:	3804d53a 	srli	r2,r7,20
    f254:	3018d77a 	srli	r12,r6,29
    f258:	280ad53a 	srli	r5,r5,20
    f25c:	501490fa 	slli	r10,r10,3
    f260:	2010d77a 	srli	r8,r4,29
    f264:	481290fa 	slli	r9,r9,3
    f268:	380ed7fa 	srli	r7,r7,31
    f26c:	defffb04 	addi	sp,sp,-20
    f270:	dc800215 	stw	r18,8(sp)
    f274:	dc400115 	stw	r17,4(sp)
    f278:	dc000015 	stw	r16,0(sp)
    f27c:	dfc00415 	stw	ra,16(sp)
    f280:	dcc00315 	stw	r19,12(sp)
    f284:	1c803fcc 	andi	r18,r3,255
    f288:	2c01ffcc 	andi	r16,r5,2047
    f28c:	5210b03a 	or	r8,r10,r8
    f290:	202290fa 	slli	r17,r4,3
    f294:	1081ffcc 	andi	r2,r2,2047
    f298:	4b12b03a 	or	r9,r9,r12
    f29c:	300c90fa 	slli	r6,r6,3
    f2a0:	91c07526 	beq	r18,r7,f478 <__adddf3+0x23c>
    f2a4:	8087c83a 	sub	r3,r16,r2
    f2a8:	00c0ab0e 	bge	zero,r3,f558 <__adddf3+0x31c>
    f2ac:	10002a1e 	bne	r2,zero,f358 <__adddf3+0x11c>
    f2b0:	4984b03a 	or	r2,r9,r6
    f2b4:	1000961e 	bne	r2,zero,f510 <__adddf3+0x2d4>
    f2b8:	888001cc 	andi	r2,r17,7
    f2bc:	10000726 	beq	r2,zero,f2dc <__adddf3+0xa0>
    f2c0:	888003cc 	andi	r2,r17,15
    f2c4:	00c00104 	movi	r3,4
    f2c8:	10c00426 	beq	r2,r3,f2dc <__adddf3+0xa0>
    f2cc:	88c7883a 	add	r3,r17,r3
    f2d0:	1c63803a 	cmpltu	r17,r3,r17
    f2d4:	4451883a 	add	r8,r8,r17
    f2d8:	1823883a 	mov	r17,r3
    f2dc:	4080202c 	andhi	r2,r8,128
    f2e0:	10005926 	beq	r2,zero,f448 <__adddf3+0x20c>
    f2e4:	84000044 	addi	r16,r16,1
    f2e8:	0081ffc4 	movi	r2,2047
    f2ec:	8080ba26 	beq	r16,r2,f5d8 <__adddf3+0x39c>
    f2f0:	00bfe034 	movhi	r2,65408
    f2f4:	10bfffc4 	addi	r2,r2,-1
    f2f8:	4090703a 	and	r8,r8,r2
    f2fc:	4004977a 	slli	r2,r8,29
    f300:	4010927a 	slli	r8,r8,9
    f304:	8822d0fa 	srli	r17,r17,3
    f308:	8401ffcc 	andi	r16,r16,2047
    f30c:	4010d33a 	srli	r8,r8,12
    f310:	9007883a 	mov	r3,r18
    f314:	1444b03a 	or	r2,r2,r17
    f318:	8401ffcc 	andi	r16,r16,2047
    f31c:	8020953a 	slli	r16,r16,20
    f320:	18c03fcc 	andi	r3,r3,255
    f324:	01000434 	movhi	r4,16
    f328:	213fffc4 	addi	r4,r4,-1
    f32c:	180697fa 	slli	r3,r3,31
    f330:	4110703a 	and	r8,r8,r4
    f334:	4410b03a 	or	r8,r8,r16
    f338:	40c6b03a 	or	r3,r8,r3
    f33c:	dfc00417 	ldw	ra,16(sp)
    f340:	dcc00317 	ldw	r19,12(sp)
    f344:	dc800217 	ldw	r18,8(sp)
    f348:	dc400117 	ldw	r17,4(sp)
    f34c:	dc000017 	ldw	r16,0(sp)
    f350:	dec00504 	addi	sp,sp,20
    f354:	f800283a 	ret
    f358:	0081ffc4 	movi	r2,2047
    f35c:	80bfd626 	beq	r16,r2,f2b8 <__alt_mem_Onchip_SRAM+0xf800f2b8>
    f360:	4a402034 	orhi	r9,r9,128
    f364:	00800e04 	movi	r2,56
    f368:	10c09f16 	blt	r2,r3,f5e8 <__adddf3+0x3ac>
    f36c:	008007c4 	movi	r2,31
    f370:	10c0c216 	blt	r2,r3,f67c <__adddf3+0x440>
    f374:	00800804 	movi	r2,32
    f378:	10c5c83a 	sub	r2,r2,r3
    f37c:	488a983a 	sll	r5,r9,r2
    f380:	30c8d83a 	srl	r4,r6,r3
    f384:	3084983a 	sll	r2,r6,r2
    f388:	48c6d83a 	srl	r3,r9,r3
    f38c:	290cb03a 	or	r6,r5,r4
    f390:	1004c03a 	cmpne	r2,r2,zero
    f394:	308cb03a 	or	r6,r6,r2
    f398:	898dc83a 	sub	r6,r17,r6
    f39c:	89a3803a 	cmpltu	r17,r17,r6
    f3a0:	40d1c83a 	sub	r8,r8,r3
    f3a4:	4451c83a 	sub	r8,r8,r17
    f3a8:	3023883a 	mov	r17,r6
    f3ac:	4080202c 	andhi	r2,r8,128
    f3b0:	10002326 	beq	r2,zero,f440 <__adddf3+0x204>
    f3b4:	04c02034 	movhi	r19,128
    f3b8:	9cffffc4 	addi	r19,r19,-1
    f3bc:	44e6703a 	and	r19,r8,r19
    f3c0:	98007626 	beq	r19,zero,f59c <__adddf3+0x360>
    f3c4:	9809883a 	mov	r4,r19
    f3c8:	000106c0 	call	106c <__clzsi2>
    f3cc:	10fffe04 	addi	r3,r2,-8
    f3d0:	010007c4 	movi	r4,31
    f3d4:	20c07716 	blt	r4,r3,f5b4 <__adddf3+0x378>
    f3d8:	00800804 	movi	r2,32
    f3dc:	10c5c83a 	sub	r2,r2,r3
    f3e0:	8884d83a 	srl	r2,r17,r2
    f3e4:	98d0983a 	sll	r8,r19,r3
    f3e8:	88e2983a 	sll	r17,r17,r3
    f3ec:	1204b03a 	or	r2,r2,r8
    f3f0:	1c007416 	blt	r3,r16,f5c4 <__adddf3+0x388>
    f3f4:	1c21c83a 	sub	r16,r3,r16
    f3f8:	82000044 	addi	r8,r16,1
    f3fc:	00c007c4 	movi	r3,31
    f400:	1a009116 	blt	r3,r8,f648 <__adddf3+0x40c>
    f404:	00c00804 	movi	r3,32
    f408:	1a07c83a 	sub	r3,r3,r8
    f40c:	8a08d83a 	srl	r4,r17,r8
    f410:	88e2983a 	sll	r17,r17,r3
    f414:	10c6983a 	sll	r3,r2,r3
    f418:	1210d83a 	srl	r8,r2,r8
    f41c:	8804c03a 	cmpne	r2,r17,zero
    f420:	1906b03a 	or	r3,r3,r4
    f424:	18a2b03a 	or	r17,r3,r2
    f428:	0021883a 	mov	r16,zero
    f42c:	003fa206 	br	f2b8 <__alt_mem_Onchip_SRAM+0xf800f2b8>
    f430:	1890b03a 	or	r8,r3,r2
    f434:	40017d26 	beq	r8,zero,fa2c <__adddf3+0x7f0>
    f438:	1011883a 	mov	r8,r2
    f43c:	1823883a 	mov	r17,r3
    f440:	888001cc 	andi	r2,r17,7
    f444:	103f9e1e 	bne	r2,zero,f2c0 <__alt_mem_Onchip_SRAM+0xf800f2c0>
    f448:	4004977a 	slli	r2,r8,29
    f44c:	8822d0fa 	srli	r17,r17,3
    f450:	4010d0fa 	srli	r8,r8,3
    f454:	9007883a 	mov	r3,r18
    f458:	1444b03a 	or	r2,r2,r17
    f45c:	0101ffc4 	movi	r4,2047
    f460:	81002426 	beq	r16,r4,f4f4 <__adddf3+0x2b8>
    f464:	8120703a 	and	r16,r16,r4
    f468:	01000434 	movhi	r4,16
    f46c:	213fffc4 	addi	r4,r4,-1
    f470:	4110703a 	and	r8,r8,r4
    f474:	003fa806 	br	f318 <__alt_mem_Onchip_SRAM+0xf800f318>
    f478:	8089c83a 	sub	r4,r16,r2
    f47c:	01005e0e 	bge	zero,r4,f5f8 <__adddf3+0x3bc>
    f480:	10002b26 	beq	r2,zero,f530 <__adddf3+0x2f4>
    f484:	0081ffc4 	movi	r2,2047
    f488:	80bf8b26 	beq	r16,r2,f2b8 <__alt_mem_Onchip_SRAM+0xf800f2b8>
    f48c:	4a402034 	orhi	r9,r9,128
    f490:	00800e04 	movi	r2,56
    f494:	1100a40e 	bge	r2,r4,f728 <__adddf3+0x4ec>
    f498:	498cb03a 	or	r6,r9,r6
    f49c:	300ac03a 	cmpne	r5,r6,zero
    f4a0:	0013883a 	mov	r9,zero
    f4a4:	2c4b883a 	add	r5,r5,r17
    f4a8:	2c63803a 	cmpltu	r17,r5,r17
    f4ac:	4a11883a 	add	r8,r9,r8
    f4b0:	8a11883a 	add	r8,r17,r8
    f4b4:	2823883a 	mov	r17,r5
    f4b8:	4080202c 	andhi	r2,r8,128
    f4bc:	103fe026 	beq	r2,zero,f440 <__alt_mem_Onchip_SRAM+0xf800f440>
    f4c0:	84000044 	addi	r16,r16,1
    f4c4:	0081ffc4 	movi	r2,2047
    f4c8:	8080d226 	beq	r16,r2,f814 <__adddf3+0x5d8>
    f4cc:	00bfe034 	movhi	r2,65408
    f4d0:	10bfffc4 	addi	r2,r2,-1
    f4d4:	4090703a 	and	r8,r8,r2
    f4d8:	880ad07a 	srli	r5,r17,1
    f4dc:	400897fa 	slli	r4,r8,31
    f4e0:	88c0004c 	andi	r3,r17,1
    f4e4:	28e2b03a 	or	r17,r5,r3
    f4e8:	4010d07a 	srli	r8,r8,1
    f4ec:	2462b03a 	or	r17,r4,r17
    f4f0:	003f7106 	br	f2b8 <__alt_mem_Onchip_SRAM+0xf800f2b8>
    f4f4:	4088b03a 	or	r4,r8,r2
    f4f8:	20014526 	beq	r4,zero,fa10 <__adddf3+0x7d4>
    f4fc:	01000434 	movhi	r4,16
    f500:	42000234 	orhi	r8,r8,8
    f504:	213fffc4 	addi	r4,r4,-1
    f508:	4110703a 	and	r8,r8,r4
    f50c:	003f8206 	br	f318 <__alt_mem_Onchip_SRAM+0xf800f318>
    f510:	18ffffc4 	addi	r3,r3,-1
    f514:	1800491e 	bne	r3,zero,f63c <__adddf3+0x400>
    f518:	898bc83a 	sub	r5,r17,r6
    f51c:	8963803a 	cmpltu	r17,r17,r5
    f520:	4251c83a 	sub	r8,r8,r9
    f524:	4451c83a 	sub	r8,r8,r17
    f528:	2823883a 	mov	r17,r5
    f52c:	003f9f06 	br	f3ac <__alt_mem_Onchip_SRAM+0xf800f3ac>
    f530:	4984b03a 	or	r2,r9,r6
    f534:	103f6026 	beq	r2,zero,f2b8 <__alt_mem_Onchip_SRAM+0xf800f2b8>
    f538:	213fffc4 	addi	r4,r4,-1
    f53c:	2000931e 	bne	r4,zero,f78c <__adddf3+0x550>
    f540:	898d883a 	add	r6,r17,r6
    f544:	3463803a 	cmpltu	r17,r6,r17
    f548:	4251883a 	add	r8,r8,r9
    f54c:	8a11883a 	add	r8,r17,r8
    f550:	3023883a 	mov	r17,r6
    f554:	003fd806 	br	f4b8 <__alt_mem_Onchip_SRAM+0xf800f4b8>
    f558:	1800541e 	bne	r3,zero,f6ac <__adddf3+0x470>
    f55c:	80800044 	addi	r2,r16,1
    f560:	1081ffcc 	andi	r2,r2,2047
    f564:	00c00044 	movi	r3,1
    f568:	1880a00e 	bge	r3,r2,f7ec <__adddf3+0x5b0>
    f56c:	8989c83a 	sub	r4,r17,r6
    f570:	8905803a 	cmpltu	r2,r17,r4
    f574:	4267c83a 	sub	r19,r8,r9
    f578:	98a7c83a 	sub	r19,r19,r2
    f57c:	9880202c 	andhi	r2,r19,128
    f580:	10006326 	beq	r2,zero,f710 <__adddf3+0x4d4>
    f584:	3463c83a 	sub	r17,r6,r17
    f588:	4a07c83a 	sub	r3,r9,r8
    f58c:	344d803a 	cmpltu	r6,r6,r17
    f590:	19a7c83a 	sub	r19,r3,r6
    f594:	3825883a 	mov	r18,r7
    f598:	983f8a1e 	bne	r19,zero,f3c4 <__alt_mem_Onchip_SRAM+0xf800f3c4>
    f59c:	8809883a 	mov	r4,r17
    f5a0:	000106c0 	call	106c <__clzsi2>
    f5a4:	10800804 	addi	r2,r2,32
    f5a8:	10fffe04 	addi	r3,r2,-8
    f5ac:	010007c4 	movi	r4,31
    f5b0:	20ff890e 	bge	r4,r3,f3d8 <__alt_mem_Onchip_SRAM+0xf800f3d8>
    f5b4:	10bff604 	addi	r2,r2,-40
    f5b8:	8884983a 	sll	r2,r17,r2
    f5bc:	0023883a 	mov	r17,zero
    f5c0:	1c3f8c0e 	bge	r3,r16,f3f4 <__alt_mem_Onchip_SRAM+0xf800f3f4>
    f5c4:	023fe034 	movhi	r8,65408
    f5c8:	423fffc4 	addi	r8,r8,-1
    f5cc:	80e1c83a 	sub	r16,r16,r3
    f5d0:	1210703a 	and	r8,r2,r8
    f5d4:	003f3806 	br	f2b8 <__alt_mem_Onchip_SRAM+0xf800f2b8>
    f5d8:	9007883a 	mov	r3,r18
    f5dc:	0011883a 	mov	r8,zero
    f5e0:	0005883a 	mov	r2,zero
    f5e4:	003f4c06 	br	f318 <__alt_mem_Onchip_SRAM+0xf800f318>
    f5e8:	498cb03a 	or	r6,r9,r6
    f5ec:	300cc03a 	cmpne	r6,r6,zero
    f5f0:	0007883a 	mov	r3,zero
    f5f4:	003f6806 	br	f398 <__alt_mem_Onchip_SRAM+0xf800f398>
    f5f8:	20009c1e 	bne	r4,zero,f86c <__adddf3+0x630>
    f5fc:	80800044 	addi	r2,r16,1
    f600:	1141ffcc 	andi	r5,r2,2047
    f604:	01000044 	movi	r4,1
    f608:	2140670e 	bge	r4,r5,f7a8 <__adddf3+0x56c>
    f60c:	0101ffc4 	movi	r4,2047
    f610:	11007f26 	beq	r2,r4,f810 <__adddf3+0x5d4>
    f614:	898d883a 	add	r6,r17,r6
    f618:	4247883a 	add	r3,r8,r9
    f61c:	3451803a 	cmpltu	r8,r6,r17
    f620:	40d1883a 	add	r8,r8,r3
    f624:	402297fa 	slli	r17,r8,31
    f628:	300cd07a 	srli	r6,r6,1
    f62c:	4010d07a 	srli	r8,r8,1
    f630:	1021883a 	mov	r16,r2
    f634:	89a2b03a 	or	r17,r17,r6
    f638:	003f1f06 	br	f2b8 <__alt_mem_Onchip_SRAM+0xf800f2b8>
    f63c:	0081ffc4 	movi	r2,2047
    f640:	80bf481e 	bne	r16,r2,f364 <__alt_mem_Onchip_SRAM+0xf800f364>
    f644:	003f1c06 	br	f2b8 <__alt_mem_Onchip_SRAM+0xf800f2b8>
    f648:	843ff844 	addi	r16,r16,-31
    f64c:	01000804 	movi	r4,32
    f650:	1406d83a 	srl	r3,r2,r16
    f654:	41005026 	beq	r8,r4,f798 <__adddf3+0x55c>
    f658:	01001004 	movi	r4,64
    f65c:	2211c83a 	sub	r8,r4,r8
    f660:	1204983a 	sll	r2,r2,r8
    f664:	88a2b03a 	or	r17,r17,r2
    f668:	8822c03a 	cmpne	r17,r17,zero
    f66c:	1c62b03a 	or	r17,r3,r17
    f670:	0011883a 	mov	r8,zero
    f674:	0021883a 	mov	r16,zero
    f678:	003f7106 	br	f440 <__alt_mem_Onchip_SRAM+0xf800f440>
    f67c:	193ff804 	addi	r4,r3,-32
    f680:	00800804 	movi	r2,32
    f684:	4908d83a 	srl	r4,r9,r4
    f688:	18804526 	beq	r3,r2,f7a0 <__adddf3+0x564>
    f68c:	00801004 	movi	r2,64
    f690:	10c5c83a 	sub	r2,r2,r3
    f694:	4886983a 	sll	r3,r9,r2
    f698:	198cb03a 	or	r6,r3,r6
    f69c:	300cc03a 	cmpne	r6,r6,zero
    f6a0:	218cb03a 	or	r6,r4,r6
    f6a4:	0007883a 	mov	r3,zero
    f6a8:	003f3b06 	br	f398 <__alt_mem_Onchip_SRAM+0xf800f398>
    f6ac:	80002a26 	beq	r16,zero,f758 <__adddf3+0x51c>
    f6b0:	0101ffc4 	movi	r4,2047
    f6b4:	11006826 	beq	r2,r4,f858 <__adddf3+0x61c>
    f6b8:	00c7c83a 	sub	r3,zero,r3
    f6bc:	42002034 	orhi	r8,r8,128
    f6c0:	01000e04 	movi	r4,56
    f6c4:	20c07c16 	blt	r4,r3,f8b8 <__adddf3+0x67c>
    f6c8:	010007c4 	movi	r4,31
    f6cc:	20c0da16 	blt	r4,r3,fa38 <__adddf3+0x7fc>
    f6d0:	01000804 	movi	r4,32
    f6d4:	20c9c83a 	sub	r4,r4,r3
    f6d8:	4114983a 	sll	r10,r8,r4
    f6dc:	88cad83a 	srl	r5,r17,r3
    f6e0:	8908983a 	sll	r4,r17,r4
    f6e4:	40c6d83a 	srl	r3,r8,r3
    f6e8:	5162b03a 	or	r17,r10,r5
    f6ec:	2008c03a 	cmpne	r4,r4,zero
    f6f0:	8922b03a 	or	r17,r17,r4
    f6f4:	3463c83a 	sub	r17,r6,r17
    f6f8:	48c7c83a 	sub	r3,r9,r3
    f6fc:	344d803a 	cmpltu	r6,r6,r17
    f700:	1991c83a 	sub	r8,r3,r6
    f704:	1021883a 	mov	r16,r2
    f708:	3825883a 	mov	r18,r7
    f70c:	003f2706 	br	f3ac <__alt_mem_Onchip_SRAM+0xf800f3ac>
    f710:	24d0b03a 	or	r8,r4,r19
    f714:	40001b1e 	bne	r8,zero,f784 <__adddf3+0x548>
    f718:	0005883a 	mov	r2,zero
    f71c:	0007883a 	mov	r3,zero
    f720:	0021883a 	mov	r16,zero
    f724:	003f4d06 	br	f45c <__alt_mem_Onchip_SRAM+0xf800f45c>
    f728:	008007c4 	movi	r2,31
    f72c:	11003c16 	blt	r2,r4,f820 <__adddf3+0x5e4>
    f730:	00800804 	movi	r2,32
    f734:	1105c83a 	sub	r2,r2,r4
    f738:	488e983a 	sll	r7,r9,r2
    f73c:	310ad83a 	srl	r5,r6,r4
    f740:	3084983a 	sll	r2,r6,r2
    f744:	4912d83a 	srl	r9,r9,r4
    f748:	394ab03a 	or	r5,r7,r5
    f74c:	1004c03a 	cmpne	r2,r2,zero
    f750:	288ab03a 	or	r5,r5,r2
    f754:	003f5306 	br	f4a4 <__alt_mem_Onchip_SRAM+0xf800f4a4>
    f758:	4448b03a 	or	r4,r8,r17
    f75c:	20003e26 	beq	r4,zero,f858 <__adddf3+0x61c>
    f760:	00c6303a 	nor	r3,zero,r3
    f764:	18003a1e 	bne	r3,zero,f850 <__adddf3+0x614>
    f768:	3463c83a 	sub	r17,r6,r17
    f76c:	4a07c83a 	sub	r3,r9,r8
    f770:	344d803a 	cmpltu	r6,r6,r17
    f774:	1991c83a 	sub	r8,r3,r6
    f778:	1021883a 	mov	r16,r2
    f77c:	3825883a 	mov	r18,r7
    f780:	003f0a06 	br	f3ac <__alt_mem_Onchip_SRAM+0xf800f3ac>
    f784:	2023883a 	mov	r17,r4
    f788:	003f0d06 	br	f3c0 <__alt_mem_Onchip_SRAM+0xf800f3c0>
    f78c:	0081ffc4 	movi	r2,2047
    f790:	80bf3f1e 	bne	r16,r2,f490 <__alt_mem_Onchip_SRAM+0xf800f490>
    f794:	003ec806 	br	f2b8 <__alt_mem_Onchip_SRAM+0xf800f2b8>
    f798:	0005883a 	mov	r2,zero
    f79c:	003fb106 	br	f664 <__alt_mem_Onchip_SRAM+0xf800f664>
    f7a0:	0007883a 	mov	r3,zero
    f7a4:	003fbc06 	br	f698 <__alt_mem_Onchip_SRAM+0xf800f698>
    f7a8:	4444b03a 	or	r2,r8,r17
    f7ac:	8000871e 	bne	r16,zero,f9cc <__adddf3+0x790>
    f7b0:	1000ba26 	beq	r2,zero,fa9c <__adddf3+0x860>
    f7b4:	4984b03a 	or	r2,r9,r6
    f7b8:	103ebf26 	beq	r2,zero,f2b8 <__alt_mem_Onchip_SRAM+0xf800f2b8>
    f7bc:	8985883a 	add	r2,r17,r6
    f7c0:	4247883a 	add	r3,r8,r9
    f7c4:	1451803a 	cmpltu	r8,r2,r17
    f7c8:	40d1883a 	add	r8,r8,r3
    f7cc:	40c0202c 	andhi	r3,r8,128
    f7d0:	1023883a 	mov	r17,r2
    f7d4:	183f1a26 	beq	r3,zero,f440 <__alt_mem_Onchip_SRAM+0xf800f440>
    f7d8:	00bfe034 	movhi	r2,65408
    f7dc:	10bfffc4 	addi	r2,r2,-1
    f7e0:	2021883a 	mov	r16,r4
    f7e4:	4090703a 	and	r8,r8,r2
    f7e8:	003eb306 	br	f2b8 <__alt_mem_Onchip_SRAM+0xf800f2b8>
    f7ec:	4444b03a 	or	r2,r8,r17
    f7f0:	8000291e 	bne	r16,zero,f898 <__adddf3+0x65c>
    f7f4:	10004b1e 	bne	r2,zero,f924 <__adddf3+0x6e8>
    f7f8:	4990b03a 	or	r8,r9,r6
    f7fc:	40008b26 	beq	r8,zero,fa2c <__adddf3+0x7f0>
    f800:	4811883a 	mov	r8,r9
    f804:	3023883a 	mov	r17,r6
    f808:	3825883a 	mov	r18,r7
    f80c:	003eaa06 	br	f2b8 <__alt_mem_Onchip_SRAM+0xf800f2b8>
    f810:	1021883a 	mov	r16,r2
    f814:	0011883a 	mov	r8,zero
    f818:	0005883a 	mov	r2,zero
    f81c:	003f0f06 	br	f45c <__alt_mem_Onchip_SRAM+0xf800f45c>
    f820:	217ff804 	addi	r5,r4,-32
    f824:	00800804 	movi	r2,32
    f828:	494ad83a 	srl	r5,r9,r5
    f82c:	20807d26 	beq	r4,r2,fa24 <__adddf3+0x7e8>
    f830:	00801004 	movi	r2,64
    f834:	1109c83a 	sub	r4,r2,r4
    f838:	4912983a 	sll	r9,r9,r4
    f83c:	498cb03a 	or	r6,r9,r6
    f840:	300cc03a 	cmpne	r6,r6,zero
    f844:	298ab03a 	or	r5,r5,r6
    f848:	0013883a 	mov	r9,zero
    f84c:	003f1506 	br	f4a4 <__alt_mem_Onchip_SRAM+0xf800f4a4>
    f850:	0101ffc4 	movi	r4,2047
    f854:	113f9a1e 	bne	r2,r4,f6c0 <__alt_mem_Onchip_SRAM+0xf800f6c0>
    f858:	4811883a 	mov	r8,r9
    f85c:	3023883a 	mov	r17,r6
    f860:	1021883a 	mov	r16,r2
    f864:	3825883a 	mov	r18,r7
    f868:	003e9306 	br	f2b8 <__alt_mem_Onchip_SRAM+0xf800f2b8>
    f86c:	8000161e 	bne	r16,zero,f8c8 <__adddf3+0x68c>
    f870:	444ab03a 	or	r5,r8,r17
    f874:	28005126 	beq	r5,zero,f9bc <__adddf3+0x780>
    f878:	0108303a 	nor	r4,zero,r4
    f87c:	20004d1e 	bne	r4,zero,f9b4 <__adddf3+0x778>
    f880:	89a3883a 	add	r17,r17,r6
    f884:	4253883a 	add	r9,r8,r9
    f888:	898d803a 	cmpltu	r6,r17,r6
    f88c:	3251883a 	add	r8,r6,r9
    f890:	1021883a 	mov	r16,r2
    f894:	003f0806 	br	f4b8 <__alt_mem_Onchip_SRAM+0xf800f4b8>
    f898:	1000301e 	bne	r2,zero,f95c <__adddf3+0x720>
    f89c:	4984b03a 	or	r2,r9,r6
    f8a0:	10007126 	beq	r2,zero,fa68 <__adddf3+0x82c>
    f8a4:	4811883a 	mov	r8,r9
    f8a8:	3023883a 	mov	r17,r6
    f8ac:	3825883a 	mov	r18,r7
    f8b0:	0401ffc4 	movi	r16,2047
    f8b4:	003e8006 	br	f2b8 <__alt_mem_Onchip_SRAM+0xf800f2b8>
    f8b8:	4462b03a 	or	r17,r8,r17
    f8bc:	8822c03a 	cmpne	r17,r17,zero
    f8c0:	0007883a 	mov	r3,zero
    f8c4:	003f8b06 	br	f6f4 <__alt_mem_Onchip_SRAM+0xf800f6f4>
    f8c8:	0141ffc4 	movi	r5,2047
    f8cc:	11403b26 	beq	r2,r5,f9bc <__adddf3+0x780>
    f8d0:	0109c83a 	sub	r4,zero,r4
    f8d4:	42002034 	orhi	r8,r8,128
    f8d8:	01400e04 	movi	r5,56
    f8dc:	29006716 	blt	r5,r4,fa7c <__adddf3+0x840>
    f8e0:	014007c4 	movi	r5,31
    f8e4:	29007016 	blt	r5,r4,faa8 <__adddf3+0x86c>
    f8e8:	01400804 	movi	r5,32
    f8ec:	290bc83a 	sub	r5,r5,r4
    f8f0:	4154983a 	sll	r10,r8,r5
    f8f4:	890ed83a 	srl	r7,r17,r4
    f8f8:	894a983a 	sll	r5,r17,r5
    f8fc:	4108d83a 	srl	r4,r8,r4
    f900:	51e2b03a 	or	r17,r10,r7
    f904:	280ac03a 	cmpne	r5,r5,zero
    f908:	8962b03a 	or	r17,r17,r5
    f90c:	89a3883a 	add	r17,r17,r6
    f910:	2253883a 	add	r9,r4,r9
    f914:	898d803a 	cmpltu	r6,r17,r6
    f918:	3251883a 	add	r8,r6,r9
    f91c:	1021883a 	mov	r16,r2
    f920:	003ee506 	br	f4b8 <__alt_mem_Onchip_SRAM+0xf800f4b8>
    f924:	4984b03a 	or	r2,r9,r6
    f928:	103e6326 	beq	r2,zero,f2b8 <__alt_mem_Onchip_SRAM+0xf800f2b8>
    f92c:	8987c83a 	sub	r3,r17,r6
    f930:	88c9803a 	cmpltu	r4,r17,r3
    f934:	4245c83a 	sub	r2,r8,r9
    f938:	1105c83a 	sub	r2,r2,r4
    f93c:	1100202c 	andhi	r4,r2,128
    f940:	203ebb26 	beq	r4,zero,f430 <__alt_mem_Onchip_SRAM+0xf800f430>
    f944:	3463c83a 	sub	r17,r6,r17
    f948:	4a07c83a 	sub	r3,r9,r8
    f94c:	344d803a 	cmpltu	r6,r6,r17
    f950:	1991c83a 	sub	r8,r3,r6
    f954:	3825883a 	mov	r18,r7
    f958:	003e5706 	br	f2b8 <__alt_mem_Onchip_SRAM+0xf800f2b8>
    f95c:	4984b03a 	or	r2,r9,r6
    f960:	10002e26 	beq	r2,zero,fa1c <__adddf3+0x7e0>
    f964:	4004d0fa 	srli	r2,r8,3
    f968:	8822d0fa 	srli	r17,r17,3
    f96c:	4010977a 	slli	r8,r8,29
    f970:	10c0022c 	andhi	r3,r2,8
    f974:	4462b03a 	or	r17,r8,r17
    f978:	18000826 	beq	r3,zero,f99c <__adddf3+0x760>
    f97c:	4808d0fa 	srli	r4,r9,3
    f980:	20c0022c 	andhi	r3,r4,8
    f984:	1800051e 	bne	r3,zero,f99c <__adddf3+0x760>
    f988:	300cd0fa 	srli	r6,r6,3
    f98c:	4806977a 	slli	r3,r9,29
    f990:	2005883a 	mov	r2,r4
    f994:	3825883a 	mov	r18,r7
    f998:	19a2b03a 	or	r17,r3,r6
    f99c:	8810d77a 	srli	r8,r17,29
    f9a0:	100490fa 	slli	r2,r2,3
    f9a4:	882290fa 	slli	r17,r17,3
    f9a8:	0401ffc4 	movi	r16,2047
    f9ac:	4090b03a 	or	r8,r8,r2
    f9b0:	003e4106 	br	f2b8 <__alt_mem_Onchip_SRAM+0xf800f2b8>
    f9b4:	0141ffc4 	movi	r5,2047
    f9b8:	117fc71e 	bne	r2,r5,f8d8 <__alt_mem_Onchip_SRAM+0xf800f8d8>
    f9bc:	4811883a 	mov	r8,r9
    f9c0:	3023883a 	mov	r17,r6
    f9c4:	1021883a 	mov	r16,r2
    f9c8:	003e3b06 	br	f2b8 <__alt_mem_Onchip_SRAM+0xf800f2b8>
    f9cc:	10002f26 	beq	r2,zero,fa8c <__adddf3+0x850>
    f9d0:	4984b03a 	or	r2,r9,r6
    f9d4:	10001126 	beq	r2,zero,fa1c <__adddf3+0x7e0>
    f9d8:	4004d0fa 	srli	r2,r8,3
    f9dc:	8822d0fa 	srli	r17,r17,3
    f9e0:	4010977a 	slli	r8,r8,29
    f9e4:	10c0022c 	andhi	r3,r2,8
    f9e8:	4462b03a 	or	r17,r8,r17
    f9ec:	183feb26 	beq	r3,zero,f99c <__alt_mem_Onchip_SRAM+0xf800f99c>
    f9f0:	4808d0fa 	srli	r4,r9,3
    f9f4:	20c0022c 	andhi	r3,r4,8
    f9f8:	183fe81e 	bne	r3,zero,f99c <__alt_mem_Onchip_SRAM+0xf800f99c>
    f9fc:	300cd0fa 	srli	r6,r6,3
    fa00:	4806977a 	slli	r3,r9,29
    fa04:	2005883a 	mov	r2,r4
    fa08:	19a2b03a 	or	r17,r3,r6
    fa0c:	003fe306 	br	f99c <__alt_mem_Onchip_SRAM+0xf800f99c>
    fa10:	0011883a 	mov	r8,zero
    fa14:	0005883a 	mov	r2,zero
    fa18:	003e3f06 	br	f318 <__alt_mem_Onchip_SRAM+0xf800f318>
    fa1c:	0401ffc4 	movi	r16,2047
    fa20:	003e2506 	br	f2b8 <__alt_mem_Onchip_SRAM+0xf800f2b8>
    fa24:	0013883a 	mov	r9,zero
    fa28:	003f8406 	br	f83c <__alt_mem_Onchip_SRAM+0xf800f83c>
    fa2c:	0005883a 	mov	r2,zero
    fa30:	0007883a 	mov	r3,zero
    fa34:	003e8906 	br	f45c <__alt_mem_Onchip_SRAM+0xf800f45c>
    fa38:	197ff804 	addi	r5,r3,-32
    fa3c:	01000804 	movi	r4,32
    fa40:	414ad83a 	srl	r5,r8,r5
    fa44:	19002426 	beq	r3,r4,fad8 <__adddf3+0x89c>
    fa48:	01001004 	movi	r4,64
    fa4c:	20c7c83a 	sub	r3,r4,r3
    fa50:	40c6983a 	sll	r3,r8,r3
    fa54:	1c46b03a 	or	r3,r3,r17
    fa58:	1806c03a 	cmpne	r3,r3,zero
    fa5c:	28e2b03a 	or	r17,r5,r3
    fa60:	0007883a 	mov	r3,zero
    fa64:	003f2306 	br	f6f4 <__alt_mem_Onchip_SRAM+0xf800f6f4>
    fa68:	0007883a 	mov	r3,zero
    fa6c:	5811883a 	mov	r8,r11
    fa70:	00bfffc4 	movi	r2,-1
    fa74:	0401ffc4 	movi	r16,2047
    fa78:	003e7806 	br	f45c <__alt_mem_Onchip_SRAM+0xf800f45c>
    fa7c:	4462b03a 	or	r17,r8,r17
    fa80:	8822c03a 	cmpne	r17,r17,zero
    fa84:	0009883a 	mov	r4,zero
    fa88:	003fa006 	br	f90c <__alt_mem_Onchip_SRAM+0xf800f90c>
    fa8c:	4811883a 	mov	r8,r9
    fa90:	3023883a 	mov	r17,r6
    fa94:	0401ffc4 	movi	r16,2047
    fa98:	003e0706 	br	f2b8 <__alt_mem_Onchip_SRAM+0xf800f2b8>
    fa9c:	4811883a 	mov	r8,r9
    faa0:	3023883a 	mov	r17,r6
    faa4:	003e0406 	br	f2b8 <__alt_mem_Onchip_SRAM+0xf800f2b8>
    faa8:	21fff804 	addi	r7,r4,-32
    faac:	01400804 	movi	r5,32
    fab0:	41ced83a 	srl	r7,r8,r7
    fab4:	21400a26 	beq	r4,r5,fae0 <__adddf3+0x8a4>
    fab8:	01401004 	movi	r5,64
    fabc:	2909c83a 	sub	r4,r5,r4
    fac0:	4108983a 	sll	r4,r8,r4
    fac4:	2448b03a 	or	r4,r4,r17
    fac8:	2008c03a 	cmpne	r4,r4,zero
    facc:	3922b03a 	or	r17,r7,r4
    fad0:	0009883a 	mov	r4,zero
    fad4:	003f8d06 	br	f90c <__alt_mem_Onchip_SRAM+0xf800f90c>
    fad8:	0007883a 	mov	r3,zero
    fadc:	003fdd06 	br	fa54 <__alt_mem_Onchip_SRAM+0xf800fa54>
    fae0:	0009883a 	mov	r4,zero
    fae4:	003ff706 	br	fac4 <__alt_mem_Onchip_SRAM+0xf800fac4>

0000fae8 <__divdf3>:
    fae8:	defff004 	addi	sp,sp,-64
    faec:	dc800815 	stw	r18,32(sp)
    faf0:	2824d53a 	srli	r18,r5,20
    faf4:	dd800c15 	stw	r22,48(sp)
    faf8:	282cd7fa 	srli	r22,r5,31
    fafc:	dc000615 	stw	r16,24(sp)
    fb00:	04000434 	movhi	r16,16
    fb04:	843fffc4 	addi	r16,r16,-1
    fb08:	dfc00f15 	stw	ra,60(sp)
    fb0c:	df000e15 	stw	fp,56(sp)
    fb10:	ddc00d15 	stw	r23,52(sp)
    fb14:	dd400b15 	stw	r21,44(sp)
    fb18:	dd000a15 	stw	r20,40(sp)
    fb1c:	dcc00915 	stw	r19,36(sp)
    fb20:	dc400715 	stw	r17,28(sp)
    fb24:	9481ffcc 	andi	r18,r18,2047
    fb28:	2c20703a 	and	r16,r5,r16
    fb2c:	b2003fcc 	andi	r8,r22,255
    fb30:	90006126 	beq	r18,zero,fcb8 <__divdf3+0x1d0>
    fb34:	0081ffc4 	movi	r2,2047
    fb38:	202b883a 	mov	r21,r4
    fb3c:	90803726 	beq	r18,r2,fc1c <__divdf3+0x134>
    fb40:	80800434 	orhi	r2,r16,16
    fb44:	100490fa 	slli	r2,r2,3
    fb48:	2020d77a 	srli	r16,r4,29
    fb4c:	202a90fa 	slli	r21,r4,3
    fb50:	94bf0044 	addi	r18,r18,-1023
    fb54:	80a0b03a 	or	r16,r16,r2
    fb58:	0013883a 	mov	r9,zero
    fb5c:	000b883a 	mov	r5,zero
    fb60:	3806d53a 	srli	r3,r7,20
    fb64:	382ed7fa 	srli	r23,r7,31
    fb68:	04400434 	movhi	r17,16
    fb6c:	8c7fffc4 	addi	r17,r17,-1
    fb70:	18c1ffcc 	andi	r3,r3,2047
    fb74:	3029883a 	mov	r20,r6
    fb78:	3c62703a 	and	r17,r7,r17
    fb7c:	bf003fcc 	andi	fp,r23,255
    fb80:	18006e26 	beq	r3,zero,fd3c <__divdf3+0x254>
    fb84:	0081ffc4 	movi	r2,2047
    fb88:	18806626 	beq	r3,r2,fd24 <__divdf3+0x23c>
    fb8c:	88800434 	orhi	r2,r17,16
    fb90:	100490fa 	slli	r2,r2,3
    fb94:	3022d77a 	srli	r17,r6,29
    fb98:	302890fa 	slli	r20,r6,3
    fb9c:	18ff0044 	addi	r3,r3,-1023
    fba0:	88a2b03a 	or	r17,r17,r2
    fba4:	000f883a 	mov	r7,zero
    fba8:	b5e6f03a 	xor	r19,r22,r23
    fbac:	3a4cb03a 	or	r6,r7,r9
    fbb0:	008003c4 	movi	r2,15
    fbb4:	9809883a 	mov	r4,r19
    fbb8:	90c7c83a 	sub	r3,r18,r3
    fbbc:	9cc03fcc 	andi	r19,r19,255
    fbc0:	11809636 	bltu	r2,r6,fe1c <__divdf3+0x334>
    fbc4:	300c90ba 	slli	r6,r6,2
    fbc8:	00800074 	movhi	r2,1
    fbcc:	10bef704 	addi	r2,r2,-1060
    fbd0:	308d883a 	add	r6,r6,r2
    fbd4:	30800017 	ldw	r2,0(r6)
    fbd8:	1000683a 	jmp	r2
    fbdc:	0000fe1c 	xori	zero,zero,1016
    fbe0:	0000fc54 	movui	zero,1009
    fbe4:	0000fe0c 	andi	zero,zero,1016
    fbe8:	0000fc48 	cmpgei	zero,zero,1009
    fbec:	0000fe0c 	andi	zero,zero,1016
    fbf0:	0000fde0 	cmpeqi	zero,zero,1015
    fbf4:	0000fe0c 	andi	zero,zero,1016
    fbf8:	0000fc48 	cmpgei	zero,zero,1009
    fbfc:	0000fc54 	movui	zero,1009
    fc00:	0000fc54 	movui	zero,1009
    fc04:	0000fde0 	cmpeqi	zero,zero,1015
    fc08:	0000fc48 	cmpgei	zero,zero,1009
    fc0c:	0000fc38 	rdprs	zero,zero,1008
    fc10:	0000fc38 	rdprs	zero,zero,1008
    fc14:	0000fc38 	rdprs	zero,zero,1008
    fc18:	000101a4 	muli	zero,zero,1030
    fc1c:	2404b03a 	or	r2,r4,r16
    fc20:	10006c1e 	bne	r2,zero,fdd4 <__divdf3+0x2ec>
    fc24:	02400204 	movi	r9,8
    fc28:	0021883a 	mov	r16,zero
    fc2c:	002b883a 	mov	r21,zero
    fc30:	01400084 	movi	r5,2
    fc34:	003fca06 	br	fb60 <__alt_mem_Onchip_SRAM+0xf800fb60>
    fc38:	8023883a 	mov	r17,r16
    fc3c:	a829883a 	mov	r20,r21
    fc40:	4039883a 	mov	fp,r8
    fc44:	280f883a 	mov	r7,r5
    fc48:	00800084 	movi	r2,2
    fc4c:	3881601e 	bne	r7,r2,101d0 <__divdf3+0x6e8>
    fc50:	e027883a 	mov	r19,fp
    fc54:	9900004c 	andi	r4,r19,1
    fc58:	0081ffc4 	movi	r2,2047
    fc5c:	0021883a 	mov	r16,zero
    fc60:	002b883a 	mov	r21,zero
    fc64:	1004953a 	slli	r2,r2,20
    fc68:	20c03fcc 	andi	r3,r4,255
    fc6c:	01400434 	movhi	r5,16
    fc70:	297fffc4 	addi	r5,r5,-1
    fc74:	180697fa 	slli	r3,r3,31
    fc78:	8160703a 	and	r16,r16,r5
    fc7c:	80a0b03a 	or	r16,r16,r2
    fc80:	80c6b03a 	or	r3,r16,r3
    fc84:	a805883a 	mov	r2,r21
    fc88:	dfc00f17 	ldw	ra,60(sp)
    fc8c:	df000e17 	ldw	fp,56(sp)
    fc90:	ddc00d17 	ldw	r23,52(sp)
    fc94:	dd800c17 	ldw	r22,48(sp)
    fc98:	dd400b17 	ldw	r21,44(sp)
    fc9c:	dd000a17 	ldw	r20,40(sp)
    fca0:	dcc00917 	ldw	r19,36(sp)
    fca4:	dc800817 	ldw	r18,32(sp)
    fca8:	dc400717 	ldw	r17,28(sp)
    fcac:	dc000617 	ldw	r16,24(sp)
    fcb0:	dec01004 	addi	sp,sp,64
    fcb4:	f800283a 	ret
    fcb8:	2404b03a 	or	r2,r4,r16
    fcbc:	2023883a 	mov	r17,r4
    fcc0:	10003f26 	beq	r2,zero,fdc0 <__divdf3+0x2d8>
    fcc4:	80015e26 	beq	r16,zero,10240 <__divdf3+0x758>
    fcc8:	8009883a 	mov	r4,r16
    fccc:	d9800215 	stw	r6,8(sp)
    fcd0:	d9c00515 	stw	r7,20(sp)
    fcd4:	da000415 	stw	r8,16(sp)
    fcd8:	000106c0 	call	106c <__clzsi2>
    fcdc:	d9800217 	ldw	r6,8(sp)
    fce0:	d9c00517 	ldw	r7,20(sp)
    fce4:	da000417 	ldw	r8,16(sp)
    fce8:	113ffd44 	addi	r4,r2,-11
    fcec:	00c00704 	movi	r3,28
    fcf0:	19014f16 	blt	r3,r4,10230 <__divdf3+0x748>
    fcf4:	00c00744 	movi	r3,29
    fcf8:	157ffe04 	addi	r21,r2,-8
    fcfc:	1907c83a 	sub	r3,r3,r4
    fd00:	8560983a 	sll	r16,r16,r21
    fd04:	88c6d83a 	srl	r3,r17,r3
    fd08:	8d6a983a 	sll	r21,r17,r21
    fd0c:	1c20b03a 	or	r16,r3,r16
    fd10:	1080fcc4 	addi	r2,r2,1011
    fd14:	00a5c83a 	sub	r18,zero,r2
    fd18:	0013883a 	mov	r9,zero
    fd1c:	000b883a 	mov	r5,zero
    fd20:	003f8f06 	br	fb60 <__alt_mem_Onchip_SRAM+0xf800fb60>
    fd24:	3444b03a 	or	r2,r6,r17
    fd28:	1000231e 	bne	r2,zero,fdb8 <__divdf3+0x2d0>
    fd2c:	0023883a 	mov	r17,zero
    fd30:	0029883a 	mov	r20,zero
    fd34:	01c00084 	movi	r7,2
    fd38:	003f9b06 	br	fba8 <__alt_mem_Onchip_SRAM+0xf800fba8>
    fd3c:	3444b03a 	or	r2,r6,r17
    fd40:	10001926 	beq	r2,zero,fda8 <__divdf3+0x2c0>
    fd44:	88014b26 	beq	r17,zero,10274 <__divdf3+0x78c>
    fd48:	8809883a 	mov	r4,r17
    fd4c:	d9400115 	stw	r5,4(sp)
    fd50:	d9800215 	stw	r6,8(sp)
    fd54:	da000415 	stw	r8,16(sp)
    fd58:	da400315 	stw	r9,12(sp)
    fd5c:	000106c0 	call	106c <__clzsi2>
    fd60:	d9400117 	ldw	r5,4(sp)
    fd64:	d9800217 	ldw	r6,8(sp)
    fd68:	da000417 	ldw	r8,16(sp)
    fd6c:	da400317 	ldw	r9,12(sp)
    fd70:	113ffd44 	addi	r4,r2,-11
    fd74:	00c00704 	movi	r3,28
    fd78:	19013a16 	blt	r3,r4,10264 <__divdf3+0x77c>
    fd7c:	00c00744 	movi	r3,29
    fd80:	153ffe04 	addi	r20,r2,-8
    fd84:	1907c83a 	sub	r3,r3,r4
    fd88:	8d22983a 	sll	r17,r17,r20
    fd8c:	30c6d83a 	srl	r3,r6,r3
    fd90:	3528983a 	sll	r20,r6,r20
    fd94:	1c62b03a 	or	r17,r3,r17
    fd98:	1080fcc4 	addi	r2,r2,1011
    fd9c:	0087c83a 	sub	r3,zero,r2
    fda0:	000f883a 	mov	r7,zero
    fda4:	003f8006 	br	fba8 <__alt_mem_Onchip_SRAM+0xf800fba8>
    fda8:	0023883a 	mov	r17,zero
    fdac:	0029883a 	mov	r20,zero
    fdb0:	01c00044 	movi	r7,1
    fdb4:	003f7c06 	br	fba8 <__alt_mem_Onchip_SRAM+0xf800fba8>
    fdb8:	01c000c4 	movi	r7,3
    fdbc:	003f7a06 	br	fba8 <__alt_mem_Onchip_SRAM+0xf800fba8>
    fdc0:	02400104 	movi	r9,4
    fdc4:	0021883a 	mov	r16,zero
    fdc8:	002b883a 	mov	r21,zero
    fdcc:	01400044 	movi	r5,1
    fdd0:	003f6306 	br	fb60 <__alt_mem_Onchip_SRAM+0xf800fb60>
    fdd4:	02400304 	movi	r9,12
    fdd8:	014000c4 	movi	r5,3
    fddc:	003f6006 	br	fb60 <__alt_mem_Onchip_SRAM+0xf800fb60>
    fde0:	04000434 	movhi	r16,16
    fde4:	0009883a 	mov	r4,zero
    fde8:	843fffc4 	addi	r16,r16,-1
    fdec:	057fffc4 	movi	r21,-1
    fdf0:	0081ffc4 	movi	r2,2047
    fdf4:	003f9b06 	br	fc64 <__alt_mem_Onchip_SRAM+0xf800fc64>
    fdf8:	00c00044 	movi	r3,1
    fdfc:	1887c83a 	sub	r3,r3,r2
    fe00:	01000e04 	movi	r4,56
    fe04:	20c1530e 	bge	r4,r3,10354 <__divdf3+0x86c>
    fe08:	9900004c 	andi	r4,r19,1
    fe0c:	0005883a 	mov	r2,zero
    fe10:	0021883a 	mov	r16,zero
    fe14:	002b883a 	mov	r21,zero
    fe18:	003f9206 	br	fc64 <__alt_mem_Onchip_SRAM+0xf800fc64>
    fe1c:	8c012e36 	bltu	r17,r16,102d8 <__divdf3+0x7f0>
    fe20:	84412c26 	beq	r16,r17,102d4 <__divdf3+0x7ec>
    fe24:	a82f883a 	mov	r23,r21
    fe28:	18ffffc4 	addi	r3,r3,-1
    fe2c:	002b883a 	mov	r21,zero
    fe30:	a004d63a 	srli	r2,r20,24
    fe34:	8822923a 	slli	r17,r17,8
    fe38:	a028923a 	slli	r20,r20,8
    fe3c:	8009883a 	mov	r4,r16
    fe40:	88acb03a 	or	r22,r17,r2
    fe44:	dd000015 	stw	r20,0(sp)
    fe48:	b028d43a 	srli	r20,r22,16
    fe4c:	d8c00215 	stw	r3,8(sp)
    fe50:	b4bfffcc 	andi	r18,r22,65535
    fe54:	a00b883a 	mov	r5,r20
    fe58:	0000df40 	call	df4 <__udivsi3>
    fe5c:	100b883a 	mov	r5,r2
    fe60:	9009883a 	mov	r4,r18
    fe64:	1023883a 	mov	r17,r2
    fe68:	0000eb00 	call	eb0 <__mulsi3>
    fe6c:	8009883a 	mov	r4,r16
    fe70:	a00b883a 	mov	r5,r20
    fe74:	1039883a 	mov	fp,r2
    fe78:	0000e580 	call	e58 <__umodsi3>
    fe7c:	1004943a 	slli	r2,r2,16
    fe80:	b808d43a 	srli	r4,r23,16
    fe84:	d8c00217 	ldw	r3,8(sp)
    fe88:	2084b03a 	or	r2,r4,r2
    fe8c:	1700062e 	bgeu	r2,fp,fea8 <__divdf3+0x3c0>
    fe90:	1585883a 	add	r2,r2,r22
    fe94:	893fffc4 	addi	r4,r17,-1
    fe98:	15811d36 	bltu	r2,r22,10310 <__divdf3+0x828>
    fe9c:	17011c2e 	bgeu	r2,fp,10310 <__divdf3+0x828>
    fea0:	8c7fff84 	addi	r17,r17,-2
    fea4:	1585883a 	add	r2,r2,r22
    fea8:	1739c83a 	sub	fp,r2,fp
    feac:	a00b883a 	mov	r5,r20
    feb0:	e009883a 	mov	r4,fp
    feb4:	d8c00215 	stw	r3,8(sp)
    feb8:	0000df40 	call	df4 <__udivsi3>
    febc:	100b883a 	mov	r5,r2
    fec0:	9009883a 	mov	r4,r18
    fec4:	1021883a 	mov	r16,r2
    fec8:	0000eb00 	call	eb0 <__mulsi3>
    fecc:	a00b883a 	mov	r5,r20
    fed0:	e009883a 	mov	r4,fp
    fed4:	d8800415 	stw	r2,16(sp)
    fed8:	0000e580 	call	e58 <__umodsi3>
    fedc:	1004943a 	slli	r2,r2,16
    fee0:	da000417 	ldw	r8,16(sp)
    fee4:	bdffffcc 	andi	r23,r23,65535
    fee8:	b884b03a 	or	r2,r23,r2
    feec:	d8c00217 	ldw	r3,8(sp)
    fef0:	1200062e 	bgeu	r2,r8,ff0c <__divdf3+0x424>
    fef4:	1585883a 	add	r2,r2,r22
    fef8:	813fffc4 	addi	r4,r16,-1
    fefc:	15810236 	bltu	r2,r22,10308 <__divdf3+0x820>
    ff00:	1201012e 	bgeu	r2,r8,10308 <__divdf3+0x820>
    ff04:	843fff84 	addi	r16,r16,-2
    ff08:	1585883a 	add	r2,r2,r22
    ff0c:	8822943a 	slli	r17,r17,16
    ff10:	d9800017 	ldw	r6,0(sp)
    ff14:	1211c83a 	sub	r8,r2,r8
    ff18:	8c22b03a 	or	r17,r17,r16
    ff1c:	373fffcc 	andi	fp,r6,65535
    ff20:	8abfffcc 	andi	r10,r17,65535
    ff24:	8820d43a 	srli	r16,r17,16
    ff28:	5009883a 	mov	r4,r10
    ff2c:	e00b883a 	mov	r5,fp
    ff30:	302ed43a 	srli	r23,r6,16
    ff34:	d8c00215 	stw	r3,8(sp)
    ff38:	da000415 	stw	r8,16(sp)
    ff3c:	da800115 	stw	r10,4(sp)
    ff40:	0000eb00 	call	eb0 <__mulsi3>
    ff44:	800b883a 	mov	r5,r16
    ff48:	e009883a 	mov	r4,fp
    ff4c:	d8800515 	stw	r2,20(sp)
    ff50:	0000eb00 	call	eb0 <__mulsi3>
    ff54:	8009883a 	mov	r4,r16
    ff58:	b80b883a 	mov	r5,r23
    ff5c:	d8800315 	stw	r2,12(sp)
    ff60:	0000eb00 	call	eb0 <__mulsi3>
    ff64:	da800117 	ldw	r10,4(sp)
    ff68:	b80b883a 	mov	r5,r23
    ff6c:	1021883a 	mov	r16,r2
    ff70:	5009883a 	mov	r4,r10
    ff74:	0000eb00 	call	eb0 <__mulsi3>
    ff78:	d9c00517 	ldw	r7,20(sp)
    ff7c:	da400317 	ldw	r9,12(sp)
    ff80:	d8c00217 	ldw	r3,8(sp)
    ff84:	3808d43a 	srli	r4,r7,16
    ff88:	1245883a 	add	r2,r2,r9
    ff8c:	da000417 	ldw	r8,16(sp)
    ff90:	2085883a 	add	r2,r4,r2
    ff94:	1240022e 	bgeu	r2,r9,ffa0 <__divdf3+0x4b8>
    ff98:	01000074 	movhi	r4,1
    ff9c:	8121883a 	add	r16,r16,r4
    ffa0:	1008d43a 	srli	r4,r2,16
    ffa4:	1004943a 	slli	r2,r2,16
    ffa8:	39ffffcc 	andi	r7,r7,65535
    ffac:	2409883a 	add	r4,r4,r16
    ffb0:	11c5883a 	add	r2,r2,r7
    ffb4:	4100bb36 	bltu	r8,r4,102a4 <__divdf3+0x7bc>
    ffb8:	4100d726 	beq	r8,r4,10318 <__divdf3+0x830>
    ffbc:	4109c83a 	sub	r4,r8,r4
    ffc0:	a8a1c83a 	sub	r16,r21,r2
    ffc4:	ac2b803a 	cmpltu	r21,r21,r16
    ffc8:	256bc83a 	sub	r21,r4,r21
    ffcc:	b540d926 	beq	r22,r21,10334 <__divdf3+0x84c>
    ffd0:	a00b883a 	mov	r5,r20
    ffd4:	a809883a 	mov	r4,r21
    ffd8:	d8c00215 	stw	r3,8(sp)
    ffdc:	0000df40 	call	df4 <__udivsi3>
    ffe0:	100b883a 	mov	r5,r2
    ffe4:	9009883a 	mov	r4,r18
    ffe8:	d8800515 	stw	r2,20(sp)
    ffec:	0000eb00 	call	eb0 <__mulsi3>
    fff0:	a809883a 	mov	r4,r21
    fff4:	a00b883a 	mov	r5,r20
    fff8:	d8800415 	stw	r2,16(sp)
    fffc:	0000e580 	call	e58 <__umodsi3>
   10000:	1004943a 	slli	r2,r2,16
   10004:	8008d43a 	srli	r4,r16,16
   10008:	da000417 	ldw	r8,16(sp)
   1000c:	d8c00217 	ldw	r3,8(sp)
   10010:	2084b03a 	or	r2,r4,r2
   10014:	d9c00517 	ldw	r7,20(sp)
   10018:	1200062e 	bgeu	r2,r8,10034 <__divdf3+0x54c>
   1001c:	1585883a 	add	r2,r2,r22
   10020:	393fffc4 	addi	r4,r7,-1
   10024:	1580c536 	bltu	r2,r22,1033c <__divdf3+0x854>
   10028:	1200c42e 	bgeu	r2,r8,1033c <__divdf3+0x854>
   1002c:	39ffff84 	addi	r7,r7,-2
   10030:	1585883a 	add	r2,r2,r22
   10034:	122bc83a 	sub	r21,r2,r8
   10038:	a00b883a 	mov	r5,r20
   1003c:	a809883a 	mov	r4,r21
   10040:	d8c00215 	stw	r3,8(sp)
   10044:	d9c00515 	stw	r7,20(sp)
   10048:	0000df40 	call	df4 <__udivsi3>
   1004c:	9009883a 	mov	r4,r18
   10050:	100b883a 	mov	r5,r2
   10054:	d8800415 	stw	r2,16(sp)
   10058:	0000eb00 	call	eb0 <__mulsi3>
   1005c:	a809883a 	mov	r4,r21
   10060:	a00b883a 	mov	r5,r20
   10064:	1025883a 	mov	r18,r2
   10068:	0000e580 	call	e58 <__umodsi3>
   1006c:	1004943a 	slli	r2,r2,16
   10070:	813fffcc 	andi	r4,r16,65535
   10074:	d8c00217 	ldw	r3,8(sp)
   10078:	20a0b03a 	or	r16,r4,r2
   1007c:	d9c00517 	ldw	r7,20(sp)
   10080:	da000417 	ldw	r8,16(sp)
   10084:	8480062e 	bgeu	r16,r18,100a0 <__divdf3+0x5b8>
   10088:	85a1883a 	add	r16,r16,r22
   1008c:	40bfffc4 	addi	r2,r8,-1
   10090:	8580ac36 	bltu	r16,r22,10344 <__divdf3+0x85c>
   10094:	8480ab2e 	bgeu	r16,r18,10344 <__divdf3+0x85c>
   10098:	423fff84 	addi	r8,r8,-2
   1009c:	85a1883a 	add	r16,r16,r22
   100a0:	3804943a 	slli	r2,r7,16
   100a4:	84a1c83a 	sub	r16,r16,r18
   100a8:	e009883a 	mov	r4,fp
   100ac:	1228b03a 	or	r20,r2,r8
   100b0:	a1ffffcc 	andi	r7,r20,65535
   100b4:	a024d43a 	srli	r18,r20,16
   100b8:	380b883a 	mov	r5,r7
   100bc:	d8c00215 	stw	r3,8(sp)
   100c0:	d9c00515 	stw	r7,20(sp)
   100c4:	0000eb00 	call	eb0 <__mulsi3>
   100c8:	900b883a 	mov	r5,r18
   100cc:	e009883a 	mov	r4,fp
   100d0:	102b883a 	mov	r21,r2
   100d4:	0000eb00 	call	eb0 <__mulsi3>
   100d8:	900b883a 	mov	r5,r18
   100dc:	b809883a 	mov	r4,r23
   100e0:	1039883a 	mov	fp,r2
   100e4:	0000eb00 	call	eb0 <__mulsi3>
   100e8:	d9c00517 	ldw	r7,20(sp)
   100ec:	b80b883a 	mov	r5,r23
   100f0:	1025883a 	mov	r18,r2
   100f4:	3809883a 	mov	r4,r7
   100f8:	0000eb00 	call	eb0 <__mulsi3>
   100fc:	a808d43a 	srli	r4,r21,16
   10100:	1705883a 	add	r2,r2,fp
   10104:	d8c00217 	ldw	r3,8(sp)
   10108:	2085883a 	add	r2,r4,r2
   1010c:	1700022e 	bgeu	r2,fp,10118 <__divdf3+0x630>
   10110:	01000074 	movhi	r4,1
   10114:	9125883a 	add	r18,r18,r4
   10118:	1008d43a 	srli	r4,r2,16
   1011c:	1004943a 	slli	r2,r2,16
   10120:	ad7fffcc 	andi	r21,r21,65535
   10124:	2489883a 	add	r4,r4,r18
   10128:	1545883a 	add	r2,r2,r21
   1012c:	81003836 	bltu	r16,r4,10210 <__divdf3+0x728>
   10130:	81003626 	beq	r16,r4,1020c <__divdf3+0x724>
   10134:	a5000054 	ori	r20,r20,1
   10138:	1880ffc4 	addi	r2,r3,1023
   1013c:	00bf2e0e 	bge	zero,r2,fdf8 <__alt_mem_Onchip_SRAM+0xf800fdf8>
   10140:	a10001cc 	andi	r4,r20,7
   10144:	20000726 	beq	r4,zero,10164 <__divdf3+0x67c>
   10148:	a10003cc 	andi	r4,r20,15
   1014c:	01400104 	movi	r5,4
   10150:	21400426 	beq	r4,r5,10164 <__divdf3+0x67c>
   10154:	a149883a 	add	r4,r20,r5
   10158:	2529803a 	cmpltu	r20,r4,r20
   1015c:	8d23883a 	add	r17,r17,r20
   10160:	2029883a 	mov	r20,r4
   10164:	8900402c 	andhi	r4,r17,256
   10168:	20000426 	beq	r4,zero,1017c <__divdf3+0x694>
   1016c:	18810004 	addi	r2,r3,1024
   10170:	00ffc034 	movhi	r3,65280
   10174:	18ffffc4 	addi	r3,r3,-1
   10178:	88e2703a 	and	r17,r17,r3
   1017c:	00c1ff84 	movi	r3,2046
   10180:	18beb416 	blt	r3,r2,fc54 <__alt_mem_Onchip_SRAM+0xf800fc54>
   10184:	a028d0fa 	srli	r20,r20,3
   10188:	882a977a 	slli	r21,r17,29
   1018c:	8820927a 	slli	r16,r17,9
   10190:	1081ffcc 	andi	r2,r2,2047
   10194:	ad2ab03a 	or	r21,r21,r20
   10198:	8020d33a 	srli	r16,r16,12
   1019c:	9900004c 	andi	r4,r19,1
   101a0:	003eb006 	br	fc64 <__alt_mem_Onchip_SRAM+0xf800fc64>
   101a4:	8080022c 	andhi	r2,r16,8
   101a8:	10001226 	beq	r2,zero,101f4 <__divdf3+0x70c>
   101ac:	8880022c 	andhi	r2,r17,8
   101b0:	1000101e 	bne	r2,zero,101f4 <__divdf3+0x70c>
   101b4:	00800434 	movhi	r2,16
   101b8:	8c000234 	orhi	r16,r17,8
   101bc:	10bfffc4 	addi	r2,r2,-1
   101c0:	b809883a 	mov	r4,r23
   101c4:	80a0703a 	and	r16,r16,r2
   101c8:	a02b883a 	mov	r21,r20
   101cc:	003f0806 	br	fdf0 <__alt_mem_Onchip_SRAM+0xf800fdf0>
   101d0:	008000c4 	movi	r2,3
   101d4:	3880b126 	beq	r7,r2,1049c <__divdf3+0x9b4>
   101d8:	00800044 	movi	r2,1
   101dc:	38805b1e 	bne	r7,r2,1034c <__divdf3+0x864>
   101e0:	e009883a 	mov	r4,fp
   101e4:	0005883a 	mov	r2,zero
   101e8:	0021883a 	mov	r16,zero
   101ec:	002b883a 	mov	r21,zero
   101f0:	003e9c06 	br	fc64 <__alt_mem_Onchip_SRAM+0xf800fc64>
   101f4:	00800434 	movhi	r2,16
   101f8:	84000234 	orhi	r16,r16,8
   101fc:	10bfffc4 	addi	r2,r2,-1
   10200:	b009883a 	mov	r4,r22
   10204:	80a0703a 	and	r16,r16,r2
   10208:	003ef906 	br	fdf0 <__alt_mem_Onchip_SRAM+0xf800fdf0>
   1020c:	103fca26 	beq	r2,zero,10138 <__alt_mem_Onchip_SRAM+0xf8010138>
   10210:	b421883a 	add	r16,r22,r16
   10214:	a17fffc4 	addi	r5,r20,-1
   10218:	8580422e 	bgeu	r16,r22,10324 <__divdf3+0x83c>
   1021c:	2829883a 	mov	r20,r5
   10220:	813fc41e 	bne	r16,r4,10134 <__alt_mem_Onchip_SRAM+0xf8010134>
   10224:	d9800017 	ldw	r6,0(sp)
   10228:	30bfc21e 	bne	r6,r2,10134 <__alt_mem_Onchip_SRAM+0xf8010134>
   1022c:	003fc206 	br	10138 <__alt_mem_Onchip_SRAM+0xf8010138>
   10230:	143ff604 	addi	r16,r2,-40
   10234:	8c20983a 	sll	r16,r17,r16
   10238:	002b883a 	mov	r21,zero
   1023c:	003eb406 	br	fd10 <__alt_mem_Onchip_SRAM+0xf800fd10>
   10240:	d9800215 	stw	r6,8(sp)
   10244:	d9c00515 	stw	r7,20(sp)
   10248:	da000415 	stw	r8,16(sp)
   1024c:	000106c0 	call	106c <__clzsi2>
   10250:	10800804 	addi	r2,r2,32
   10254:	da000417 	ldw	r8,16(sp)
   10258:	d9c00517 	ldw	r7,20(sp)
   1025c:	d9800217 	ldw	r6,8(sp)
   10260:	003ea106 	br	fce8 <__alt_mem_Onchip_SRAM+0xf800fce8>
   10264:	147ff604 	addi	r17,r2,-40
   10268:	3462983a 	sll	r17,r6,r17
   1026c:	0029883a 	mov	r20,zero
   10270:	003ec906 	br	fd98 <__alt_mem_Onchip_SRAM+0xf800fd98>
   10274:	3009883a 	mov	r4,r6
   10278:	d9400115 	stw	r5,4(sp)
   1027c:	d9800215 	stw	r6,8(sp)
   10280:	da000415 	stw	r8,16(sp)
   10284:	da400315 	stw	r9,12(sp)
   10288:	000106c0 	call	106c <__clzsi2>
   1028c:	10800804 	addi	r2,r2,32
   10290:	da400317 	ldw	r9,12(sp)
   10294:	da000417 	ldw	r8,16(sp)
   10298:	d9800217 	ldw	r6,8(sp)
   1029c:	d9400117 	ldw	r5,4(sp)
   102a0:	003eb306 	br	fd70 <__alt_mem_Onchip_SRAM+0xf800fd70>
   102a4:	d9800017 	ldw	r6,0(sp)
   102a8:	a9ab883a 	add	r21,r21,r6
   102ac:	a98b803a 	cmpltu	r5,r21,r6
   102b0:	2d8b883a 	add	r5,r5,r22
   102b4:	2a11883a 	add	r8,r5,r8
   102b8:	897fffc4 	addi	r5,r17,-1
   102bc:	b2000c2e 	bgeu	r22,r8,102f0 <__divdf3+0x808>
   102c0:	41003f36 	bltu	r8,r4,103c0 <__divdf3+0x8d8>
   102c4:	22006c26 	beq	r4,r8,10478 <__divdf3+0x990>
   102c8:	4109c83a 	sub	r4,r8,r4
   102cc:	2823883a 	mov	r17,r5
   102d0:	003f3b06 	br	ffc0 <__alt_mem_Onchip_SRAM+0xf800ffc0>
   102d4:	ad3ed336 	bltu	r21,r20,fe24 <__alt_mem_Onchip_SRAM+0xf800fe24>
   102d8:	a804d07a 	srli	r2,r21,1
   102dc:	802e97fa 	slli	r23,r16,31
   102e0:	a82a97fa 	slli	r21,r21,31
   102e4:	8020d07a 	srli	r16,r16,1
   102e8:	b8aeb03a 	or	r23,r23,r2
   102ec:	003ed006 	br	fe30 <__alt_mem_Onchip_SRAM+0xf800fe30>
   102f0:	b23ff51e 	bne	r22,r8,102c8 <__alt_mem_Onchip_SRAM+0xf80102c8>
   102f4:	d9800017 	ldw	r6,0(sp)
   102f8:	a9bff12e 	bgeu	r21,r6,102c0 <__alt_mem_Onchip_SRAM+0xf80102c0>
   102fc:	b109c83a 	sub	r4,r22,r4
   10300:	2823883a 	mov	r17,r5
   10304:	003f2e06 	br	ffc0 <__alt_mem_Onchip_SRAM+0xf800ffc0>
   10308:	2021883a 	mov	r16,r4
   1030c:	003eff06 	br	ff0c <__alt_mem_Onchip_SRAM+0xf800ff0c>
   10310:	2023883a 	mov	r17,r4
   10314:	003ee406 	br	fea8 <__alt_mem_Onchip_SRAM+0xf800fea8>
   10318:	a8bfe236 	bltu	r21,r2,102a4 <__alt_mem_Onchip_SRAM+0xf80102a4>
   1031c:	0009883a 	mov	r4,zero
   10320:	003f2706 	br	ffc0 <__alt_mem_Onchip_SRAM+0xf800ffc0>
   10324:	81002d36 	bltu	r16,r4,103dc <__divdf3+0x8f4>
   10328:	24005626 	beq	r4,r16,10484 <__divdf3+0x99c>
   1032c:	2829883a 	mov	r20,r5
   10330:	003f8006 	br	10134 <__alt_mem_Onchip_SRAM+0xf8010134>
   10334:	053fffc4 	movi	r20,-1
   10338:	003f7f06 	br	10138 <__alt_mem_Onchip_SRAM+0xf8010138>
   1033c:	200f883a 	mov	r7,r4
   10340:	003f3c06 	br	10034 <__alt_mem_Onchip_SRAM+0xf8010034>
   10344:	1011883a 	mov	r8,r2
   10348:	003f5506 	br	100a0 <__alt_mem_Onchip_SRAM+0xf80100a0>
   1034c:	e027883a 	mov	r19,fp
   10350:	003f7906 	br	10138 <__alt_mem_Onchip_SRAM+0xf8010138>
   10354:	010007c4 	movi	r4,31
   10358:	20c02816 	blt	r4,r3,103fc <__divdf3+0x914>
   1035c:	00800804 	movi	r2,32
   10360:	10c5c83a 	sub	r2,r2,r3
   10364:	888a983a 	sll	r5,r17,r2
   10368:	a0c8d83a 	srl	r4,r20,r3
   1036c:	a084983a 	sll	r2,r20,r2
   10370:	88e2d83a 	srl	r17,r17,r3
   10374:	2906b03a 	or	r3,r5,r4
   10378:	1004c03a 	cmpne	r2,r2,zero
   1037c:	1886b03a 	or	r3,r3,r2
   10380:	188001cc 	andi	r2,r3,7
   10384:	10000726 	beq	r2,zero,103a4 <__divdf3+0x8bc>
   10388:	188003cc 	andi	r2,r3,15
   1038c:	01000104 	movi	r4,4
   10390:	11000426 	beq	r2,r4,103a4 <__divdf3+0x8bc>
   10394:	1805883a 	mov	r2,r3
   10398:	10c00104 	addi	r3,r2,4
   1039c:	1885803a 	cmpltu	r2,r3,r2
   103a0:	88a3883a 	add	r17,r17,r2
   103a4:	8880202c 	andhi	r2,r17,128
   103a8:	10002926 	beq	r2,zero,10450 <__divdf3+0x968>
   103ac:	9900004c 	andi	r4,r19,1
   103b0:	00800044 	movi	r2,1
   103b4:	0021883a 	mov	r16,zero
   103b8:	002b883a 	mov	r21,zero
   103bc:	003e2906 	br	fc64 <__alt_mem_Onchip_SRAM+0xf800fc64>
   103c0:	d9800017 	ldw	r6,0(sp)
   103c4:	8c7fff84 	addi	r17,r17,-2
   103c8:	a9ab883a 	add	r21,r21,r6
   103cc:	a98b803a 	cmpltu	r5,r21,r6
   103d0:	2d8b883a 	add	r5,r5,r22
   103d4:	2a11883a 	add	r8,r5,r8
   103d8:	003ef806 	br	ffbc <__alt_mem_Onchip_SRAM+0xf800ffbc>
   103dc:	d9800017 	ldw	r6,0(sp)
   103e0:	318f883a 	add	r7,r6,r6
   103e4:	398b803a 	cmpltu	r5,r7,r6
   103e8:	2d8d883a 	add	r6,r5,r22
   103ec:	81a1883a 	add	r16,r16,r6
   103f0:	a17fff84 	addi	r5,r20,-2
   103f4:	d9c00015 	stw	r7,0(sp)
   103f8:	003f8806 	br	1021c <__alt_mem_Onchip_SRAM+0xf801021c>
   103fc:	013ff844 	movi	r4,-31
   10400:	2085c83a 	sub	r2,r4,r2
   10404:	8888d83a 	srl	r4,r17,r2
   10408:	00800804 	movi	r2,32
   1040c:	18802126 	beq	r3,r2,10494 <__divdf3+0x9ac>
   10410:	04001004 	movi	r16,64
   10414:	80c7c83a 	sub	r3,r16,r3
   10418:	88e0983a 	sll	r16,r17,r3
   1041c:	8504b03a 	or	r2,r16,r20
   10420:	1004c03a 	cmpne	r2,r2,zero
   10424:	2084b03a 	or	r2,r4,r2
   10428:	144001cc 	andi	r17,r2,7
   1042c:	88000d1e 	bne	r17,zero,10464 <__divdf3+0x97c>
   10430:	0021883a 	mov	r16,zero
   10434:	102ad0fa 	srli	r21,r2,3
   10438:	9900004c 	andi	r4,r19,1
   1043c:	0005883a 	mov	r2,zero
   10440:	ac6ab03a 	or	r21,r21,r17
   10444:	003e0706 	br	fc64 <__alt_mem_Onchip_SRAM+0xf800fc64>
   10448:	1007883a 	mov	r3,r2
   1044c:	0023883a 	mov	r17,zero
   10450:	8820927a 	slli	r16,r17,9
   10454:	1805883a 	mov	r2,r3
   10458:	8822977a 	slli	r17,r17,29
   1045c:	8020d33a 	srli	r16,r16,12
   10460:	003ff406 	br	10434 <__alt_mem_Onchip_SRAM+0xf8010434>
   10464:	10c003cc 	andi	r3,r2,15
   10468:	01000104 	movi	r4,4
   1046c:	193ff626 	beq	r3,r4,10448 <__alt_mem_Onchip_SRAM+0xf8010448>
   10470:	0023883a 	mov	r17,zero
   10474:	003fc806 	br	10398 <__alt_mem_Onchip_SRAM+0xf8010398>
   10478:	a8bfd136 	bltu	r21,r2,103c0 <__alt_mem_Onchip_SRAM+0xf80103c0>
   1047c:	2823883a 	mov	r17,r5
   10480:	003fa606 	br	1031c <__alt_mem_Onchip_SRAM+0xf801031c>
   10484:	d9800017 	ldw	r6,0(sp)
   10488:	30bfd436 	bltu	r6,r2,103dc <__alt_mem_Onchip_SRAM+0xf80103dc>
   1048c:	2829883a 	mov	r20,r5
   10490:	003f6406 	br	10224 <__alt_mem_Onchip_SRAM+0xf8010224>
   10494:	0021883a 	mov	r16,zero
   10498:	003fe006 	br	1041c <__alt_mem_Onchip_SRAM+0xf801041c>
   1049c:	00800434 	movhi	r2,16
   104a0:	8c000234 	orhi	r16,r17,8
   104a4:	10bfffc4 	addi	r2,r2,-1
   104a8:	e009883a 	mov	r4,fp
   104ac:	80a0703a 	and	r16,r16,r2
   104b0:	a02b883a 	mov	r21,r20
   104b4:	003e4e06 	br	fdf0 <__alt_mem_Onchip_SRAM+0xf800fdf0>

000104b8 <__eqdf2>:
   104b8:	2804d53a 	srli	r2,r5,20
   104bc:	3806d53a 	srli	r3,r7,20
   104c0:	02000434 	movhi	r8,16
   104c4:	423fffc4 	addi	r8,r8,-1
   104c8:	1081ffcc 	andi	r2,r2,2047
   104cc:	0281ffc4 	movi	r10,2047
   104d0:	2a12703a 	and	r9,r5,r8
   104d4:	18c1ffcc 	andi	r3,r3,2047
   104d8:	3a10703a 	and	r8,r7,r8
   104dc:	280ad7fa 	srli	r5,r5,31
   104e0:	380ed7fa 	srli	r7,r7,31
   104e4:	12801026 	beq	r2,r10,10528 <__eqdf2+0x70>
   104e8:	0281ffc4 	movi	r10,2047
   104ec:	1a800a26 	beq	r3,r10,10518 <__eqdf2+0x60>
   104f0:	10c00226 	beq	r2,r3,104fc <__eqdf2+0x44>
   104f4:	00800044 	movi	r2,1
   104f8:	f800283a 	ret
   104fc:	4a3ffd1e 	bne	r9,r8,104f4 <__alt_mem_Onchip_SRAM+0xf80104f4>
   10500:	21bffc1e 	bne	r4,r6,104f4 <__alt_mem_Onchip_SRAM+0xf80104f4>
   10504:	29c00c26 	beq	r5,r7,10538 <__eqdf2+0x80>
   10508:	103ffa1e 	bne	r2,zero,104f4 <__alt_mem_Onchip_SRAM+0xf80104f4>
   1050c:	2244b03a 	or	r2,r4,r9
   10510:	1004c03a 	cmpne	r2,r2,zero
   10514:	f800283a 	ret
   10518:	3214b03a 	or	r10,r6,r8
   1051c:	503ff426 	beq	r10,zero,104f0 <__alt_mem_Onchip_SRAM+0xf80104f0>
   10520:	00800044 	movi	r2,1
   10524:	f800283a 	ret
   10528:	2254b03a 	or	r10,r4,r9
   1052c:	503fee26 	beq	r10,zero,104e8 <__alt_mem_Onchip_SRAM+0xf80104e8>
   10530:	00800044 	movi	r2,1
   10534:	f800283a 	ret
   10538:	0005883a 	mov	r2,zero
   1053c:	f800283a 	ret

00010540 <__gedf2>:
   10540:	2804d53a 	srli	r2,r5,20
   10544:	3806d53a 	srli	r3,r7,20
   10548:	02000434 	movhi	r8,16
   1054c:	423fffc4 	addi	r8,r8,-1
   10550:	1081ffcc 	andi	r2,r2,2047
   10554:	0241ffc4 	movi	r9,2047
   10558:	2a14703a 	and	r10,r5,r8
   1055c:	18c1ffcc 	andi	r3,r3,2047
   10560:	3a10703a 	and	r8,r7,r8
   10564:	280ad7fa 	srli	r5,r5,31
   10568:	380ed7fa 	srli	r7,r7,31
   1056c:	12401d26 	beq	r2,r9,105e4 <__gedf2+0xa4>
   10570:	0241ffc4 	movi	r9,2047
   10574:	1a401226 	beq	r3,r9,105c0 <__gedf2+0x80>
   10578:	1000081e 	bne	r2,zero,1059c <__gedf2+0x5c>
   1057c:	2296b03a 	or	r11,r4,r10
   10580:	5813003a 	cmpeq	r9,r11,zero
   10584:	1800091e 	bne	r3,zero,105ac <__gedf2+0x6c>
   10588:	3218b03a 	or	r12,r6,r8
   1058c:	6000071e 	bne	r12,zero,105ac <__gedf2+0x6c>
   10590:	0005883a 	mov	r2,zero
   10594:	5800101e 	bne	r11,zero,105d8 <__gedf2+0x98>
   10598:	f800283a 	ret
   1059c:	18000c1e 	bne	r3,zero,105d0 <__gedf2+0x90>
   105a0:	3212b03a 	or	r9,r6,r8
   105a4:	48000c26 	beq	r9,zero,105d8 <__gedf2+0x98>
   105a8:	0013883a 	mov	r9,zero
   105ac:	39c03fcc 	andi	r7,r7,255
   105b0:	48000826 	beq	r9,zero,105d4 <__gedf2+0x94>
   105b4:	38000926 	beq	r7,zero,105dc <__gedf2+0x9c>
   105b8:	00800044 	movi	r2,1
   105bc:	f800283a 	ret
   105c0:	3212b03a 	or	r9,r6,r8
   105c4:	483fec26 	beq	r9,zero,10578 <__alt_mem_Onchip_SRAM+0xf8010578>
   105c8:	00bfff84 	movi	r2,-2
   105cc:	f800283a 	ret
   105d0:	39c03fcc 	andi	r7,r7,255
   105d4:	29c00626 	beq	r5,r7,105f0 <__gedf2+0xb0>
   105d8:	283ff726 	beq	r5,zero,105b8 <__alt_mem_Onchip_SRAM+0xf80105b8>
   105dc:	00bfffc4 	movi	r2,-1
   105e0:	f800283a 	ret
   105e4:	2292b03a 	or	r9,r4,r10
   105e8:	483fe126 	beq	r9,zero,10570 <__alt_mem_Onchip_SRAM+0xf8010570>
   105ec:	003ff606 	br	105c8 <__alt_mem_Onchip_SRAM+0xf80105c8>
   105f0:	18bff916 	blt	r3,r2,105d8 <__alt_mem_Onchip_SRAM+0xf80105d8>
   105f4:	10c00316 	blt	r2,r3,10604 <__gedf2+0xc4>
   105f8:	42bff736 	bltu	r8,r10,105d8 <__alt_mem_Onchip_SRAM+0xf80105d8>
   105fc:	52000326 	beq	r10,r8,1060c <__gedf2+0xcc>
   10600:	5200042e 	bgeu	r10,r8,10614 <__gedf2+0xd4>
   10604:	283fec1e 	bne	r5,zero,105b8 <__alt_mem_Onchip_SRAM+0xf80105b8>
   10608:	003ff406 	br	105dc <__alt_mem_Onchip_SRAM+0xf80105dc>
   1060c:	313ff236 	bltu	r6,r4,105d8 <__alt_mem_Onchip_SRAM+0xf80105d8>
   10610:	21bffc36 	bltu	r4,r6,10604 <__alt_mem_Onchip_SRAM+0xf8010604>
   10614:	0005883a 	mov	r2,zero
   10618:	f800283a 	ret

0001061c <__ledf2>:
   1061c:	2804d53a 	srli	r2,r5,20
   10620:	3810d53a 	srli	r8,r7,20
   10624:	00c00434 	movhi	r3,16
   10628:	18ffffc4 	addi	r3,r3,-1
   1062c:	1081ffcc 	andi	r2,r2,2047
   10630:	0241ffc4 	movi	r9,2047
   10634:	28d4703a 	and	r10,r5,r3
   10638:	4201ffcc 	andi	r8,r8,2047
   1063c:	38c6703a 	and	r3,r7,r3
   10640:	280ad7fa 	srli	r5,r5,31
   10644:	380ed7fa 	srli	r7,r7,31
   10648:	12401f26 	beq	r2,r9,106c8 <__ledf2+0xac>
   1064c:	0241ffc4 	movi	r9,2047
   10650:	42401426 	beq	r8,r9,106a4 <__ledf2+0x88>
   10654:	1000091e 	bne	r2,zero,1067c <__ledf2+0x60>
   10658:	2296b03a 	or	r11,r4,r10
   1065c:	5813003a 	cmpeq	r9,r11,zero
   10660:	29403fcc 	andi	r5,r5,255
   10664:	40000a1e 	bne	r8,zero,10690 <__ledf2+0x74>
   10668:	30d8b03a 	or	r12,r6,r3
   1066c:	6000081e 	bne	r12,zero,10690 <__ledf2+0x74>
   10670:	0005883a 	mov	r2,zero
   10674:	5800111e 	bne	r11,zero,106bc <__ledf2+0xa0>
   10678:	f800283a 	ret
   1067c:	29403fcc 	andi	r5,r5,255
   10680:	40000c1e 	bne	r8,zero,106b4 <__ledf2+0x98>
   10684:	30d2b03a 	or	r9,r6,r3
   10688:	48000c26 	beq	r9,zero,106bc <__ledf2+0xa0>
   1068c:	0013883a 	mov	r9,zero
   10690:	39c03fcc 	andi	r7,r7,255
   10694:	48000826 	beq	r9,zero,106b8 <__ledf2+0x9c>
   10698:	38001126 	beq	r7,zero,106e0 <__ledf2+0xc4>
   1069c:	00800044 	movi	r2,1
   106a0:	f800283a 	ret
   106a4:	30d2b03a 	or	r9,r6,r3
   106a8:	483fea26 	beq	r9,zero,10654 <__alt_mem_Onchip_SRAM+0xf8010654>
   106ac:	00800084 	movi	r2,2
   106b0:	f800283a 	ret
   106b4:	39c03fcc 	andi	r7,r7,255
   106b8:	39400726 	beq	r7,r5,106d8 <__ledf2+0xbc>
   106bc:	2800081e 	bne	r5,zero,106e0 <__ledf2+0xc4>
   106c0:	00800044 	movi	r2,1
   106c4:	f800283a 	ret
   106c8:	2292b03a 	or	r9,r4,r10
   106cc:	483fdf26 	beq	r9,zero,1064c <__alt_mem_Onchip_SRAM+0xf801064c>
   106d0:	00800084 	movi	r2,2
   106d4:	f800283a 	ret
   106d8:	4080030e 	bge	r8,r2,106e8 <__ledf2+0xcc>
   106dc:	383fef26 	beq	r7,zero,1069c <__alt_mem_Onchip_SRAM+0xf801069c>
   106e0:	00bfffc4 	movi	r2,-1
   106e4:	f800283a 	ret
   106e8:	123feb16 	blt	r2,r8,10698 <__alt_mem_Onchip_SRAM+0xf8010698>
   106ec:	1abff336 	bltu	r3,r10,106bc <__alt_mem_Onchip_SRAM+0xf80106bc>
   106f0:	50c00326 	beq	r10,r3,10700 <__ledf2+0xe4>
   106f4:	50c0042e 	bgeu	r10,r3,10708 <__ledf2+0xec>
   106f8:	283fe81e 	bne	r5,zero,1069c <__alt_mem_Onchip_SRAM+0xf801069c>
   106fc:	003ff806 	br	106e0 <__alt_mem_Onchip_SRAM+0xf80106e0>
   10700:	313fee36 	bltu	r6,r4,106bc <__alt_mem_Onchip_SRAM+0xf80106bc>
   10704:	21bffc36 	bltu	r4,r6,106f8 <__alt_mem_Onchip_SRAM+0xf80106f8>
   10708:	0005883a 	mov	r2,zero
   1070c:	f800283a 	ret

00010710 <__muldf3>:
   10710:	deffee04 	addi	sp,sp,-72
   10714:	dd000c15 	stw	r20,48(sp)
   10718:	2828d53a 	srli	r20,r5,20
   1071c:	ddc00f15 	stw	r23,60(sp)
   10720:	282ed7fa 	srli	r23,r5,31
   10724:	dc000815 	stw	r16,32(sp)
   10728:	04000434 	movhi	r16,16
   1072c:	dcc00b15 	stw	r19,44(sp)
   10730:	843fffc4 	addi	r16,r16,-1
   10734:	dfc01115 	stw	ra,68(sp)
   10738:	df001015 	stw	fp,64(sp)
   1073c:	dd800e15 	stw	r22,56(sp)
   10740:	dd400d15 	stw	r21,52(sp)
   10744:	dc800a15 	stw	r18,40(sp)
   10748:	dc400915 	stw	r17,36(sp)
   1074c:	a501ffcc 	andi	r20,r20,2047
   10750:	2c20703a 	and	r16,r5,r16
   10754:	b827883a 	mov	r19,r23
   10758:	ba403fcc 	andi	r9,r23,255
   1075c:	a0006026 	beq	r20,zero,108e0 <__muldf3+0x1d0>
   10760:	0081ffc4 	movi	r2,2047
   10764:	202d883a 	mov	r22,r4
   10768:	a0803626 	beq	r20,r2,10844 <__muldf3+0x134>
   1076c:	84000434 	orhi	r16,r16,16
   10770:	200ad77a 	srli	r5,r4,29
   10774:	800490fa 	slli	r2,r16,3
   10778:	202c90fa 	slli	r22,r4,3
   1077c:	a53f0044 	addi	r20,r20,-1023
   10780:	28a0b03a 	or	r16,r5,r2
   10784:	002b883a 	mov	r21,zero
   10788:	000b883a 	mov	r5,zero
   1078c:	3804d53a 	srli	r2,r7,20
   10790:	3838d7fa 	srli	fp,r7,31
   10794:	04400434 	movhi	r17,16
   10798:	8c7fffc4 	addi	r17,r17,-1
   1079c:	1081ffcc 	andi	r2,r2,2047
   107a0:	3025883a 	mov	r18,r6
   107a4:	3c62703a 	and	r17,r7,r17
   107a8:	e2803fcc 	andi	r10,fp,255
   107ac:	10006d26 	beq	r2,zero,10964 <__muldf3+0x254>
   107b0:	00c1ffc4 	movi	r3,2047
   107b4:	10c06526 	beq	r2,r3,1094c <__muldf3+0x23c>
   107b8:	8c400434 	orhi	r17,r17,16
   107bc:	300ed77a 	srli	r7,r6,29
   107c0:	880690fa 	slli	r3,r17,3
   107c4:	302490fa 	slli	r18,r6,3
   107c8:	10bf0044 	addi	r2,r2,-1023
   107cc:	38e2b03a 	or	r17,r7,r3
   107d0:	000f883a 	mov	r7,zero
   107d4:	a087883a 	add	r3,r20,r2
   107d8:	010003c4 	movi	r4,15
   107dc:	3d44b03a 	or	r2,r7,r21
   107e0:	e5ccf03a 	xor	r6,fp,r23
   107e4:	1a000044 	addi	r8,r3,1
   107e8:	20809b36 	bltu	r4,r2,10a58 <__muldf3+0x348>
   107ec:	100490ba 	slli	r2,r2,2
   107f0:	01000074 	movhi	r4,1
   107f4:	21020104 	addi	r4,r4,2052
   107f8:	1105883a 	add	r2,r2,r4
   107fc:	10800017 	ldw	r2,0(r2)
   10800:	1000683a 	jmp	r2
   10804:	00010a58 	cmpnei	zero,zero,1065
   10808:	00010864 	muli	zero,zero,1057
   1080c:	00010864 	muli	zero,zero,1057
   10810:	00010860 	cmpeqi	zero,zero,1057
   10814:	00010a34 	movhi	zero,1064
   10818:	00010a34 	movhi	zero,1064
   1081c:	00010a1c 	xori	zero,zero,1064
   10820:	00010860 	cmpeqi	zero,zero,1057
   10824:	00010a34 	movhi	zero,1064
   10828:	00010a1c 	xori	zero,zero,1064
   1082c:	00010a34 	movhi	zero,1064
   10830:	00010860 	cmpeqi	zero,zero,1057
   10834:	00010a44 	movi	zero,1065
   10838:	00010a44 	movi	zero,1065
   1083c:	00010a44 	movi	zero,1065
   10840:	00010da4 	muli	zero,zero,1078
   10844:	2404b03a 	or	r2,r4,r16
   10848:	1000711e 	bne	r2,zero,10a10 <__muldf3+0x300>
   1084c:	05400204 	movi	r21,8
   10850:	0021883a 	mov	r16,zero
   10854:	002d883a 	mov	r22,zero
   10858:	01400084 	movi	r5,2
   1085c:	003fcb06 	br	1078c <__alt_mem_Onchip_SRAM+0xf801078c>
   10860:	500d883a 	mov	r6,r10
   10864:	00800084 	movi	r2,2
   10868:	38805926 	beq	r7,r2,109d0 <__muldf3+0x2c0>
   1086c:	008000c4 	movi	r2,3
   10870:	3881bb26 	beq	r7,r2,10f60 <__muldf3+0x850>
   10874:	00800044 	movi	r2,1
   10878:	3881961e 	bne	r7,r2,10ed4 <__muldf3+0x7c4>
   1087c:	3027883a 	mov	r19,r6
   10880:	0005883a 	mov	r2,zero
   10884:	0021883a 	mov	r16,zero
   10888:	002d883a 	mov	r22,zero
   1088c:	1004953a 	slli	r2,r2,20
   10890:	98c03fcc 	andi	r3,r19,255
   10894:	04400434 	movhi	r17,16
   10898:	8c7fffc4 	addi	r17,r17,-1
   1089c:	180697fa 	slli	r3,r3,31
   108a0:	8460703a 	and	r16,r16,r17
   108a4:	80a0b03a 	or	r16,r16,r2
   108a8:	80c6b03a 	or	r3,r16,r3
   108ac:	b005883a 	mov	r2,r22
   108b0:	dfc01117 	ldw	ra,68(sp)
   108b4:	df001017 	ldw	fp,64(sp)
   108b8:	ddc00f17 	ldw	r23,60(sp)
   108bc:	dd800e17 	ldw	r22,56(sp)
   108c0:	dd400d17 	ldw	r21,52(sp)
   108c4:	dd000c17 	ldw	r20,48(sp)
   108c8:	dcc00b17 	ldw	r19,44(sp)
   108cc:	dc800a17 	ldw	r18,40(sp)
   108d0:	dc400917 	ldw	r17,36(sp)
   108d4:	dc000817 	ldw	r16,32(sp)
   108d8:	dec01204 	addi	sp,sp,72
   108dc:	f800283a 	ret
   108e0:	2404b03a 	or	r2,r4,r16
   108e4:	202b883a 	mov	r21,r4
   108e8:	10004426 	beq	r2,zero,109fc <__muldf3+0x2ec>
   108ec:	80015126 	beq	r16,zero,10e34 <__muldf3+0x724>
   108f0:	8009883a 	mov	r4,r16
   108f4:	d9800715 	stw	r6,28(sp)
   108f8:	d9c00215 	stw	r7,8(sp)
   108fc:	da400415 	stw	r9,16(sp)
   10900:	000106c0 	call	106c <__clzsi2>
   10904:	d9800717 	ldw	r6,28(sp)
   10908:	d9c00217 	ldw	r7,8(sp)
   1090c:	da400417 	ldw	r9,16(sp)
   10910:	113ffd44 	addi	r4,r2,-11
   10914:	00c00704 	movi	r3,28
   10918:	19014216 	blt	r3,r4,10e24 <__muldf3+0x714>
   1091c:	00c00744 	movi	r3,29
   10920:	15bffe04 	addi	r22,r2,-8
   10924:	1907c83a 	sub	r3,r3,r4
   10928:	85a0983a 	sll	r16,r16,r22
   1092c:	a8c6d83a 	srl	r3,r21,r3
   10930:	adac983a 	sll	r22,r21,r22
   10934:	1c20b03a 	or	r16,r3,r16
   10938:	1080fcc4 	addi	r2,r2,1011
   1093c:	00a9c83a 	sub	r20,zero,r2
   10940:	002b883a 	mov	r21,zero
   10944:	000b883a 	mov	r5,zero
   10948:	003f9006 	br	1078c <__alt_mem_Onchip_SRAM+0xf801078c>
   1094c:	3446b03a 	or	r3,r6,r17
   10950:	1800281e 	bne	r3,zero,109f4 <__muldf3+0x2e4>
   10954:	0023883a 	mov	r17,zero
   10958:	0025883a 	mov	r18,zero
   1095c:	01c00084 	movi	r7,2
   10960:	003f9c06 	br	107d4 <__alt_mem_Onchip_SRAM+0xf80107d4>
   10964:	3446b03a 	or	r3,r6,r17
   10968:	18001e26 	beq	r3,zero,109e4 <__muldf3+0x2d4>
   1096c:	88012126 	beq	r17,zero,10df4 <__muldf3+0x6e4>
   10970:	8809883a 	mov	r4,r17
   10974:	d9400215 	stw	r5,8(sp)
   10978:	d9800715 	stw	r6,28(sp)
   1097c:	da400415 	stw	r9,16(sp)
   10980:	da800315 	stw	r10,12(sp)
   10984:	000106c0 	call	106c <__clzsi2>
   10988:	d9400217 	ldw	r5,8(sp)
   1098c:	d9800717 	ldw	r6,28(sp)
   10990:	da400417 	ldw	r9,16(sp)
   10994:	da800317 	ldw	r10,12(sp)
   10998:	113ffd44 	addi	r4,r2,-11
   1099c:	00c00704 	movi	r3,28
   109a0:	19011016 	blt	r3,r4,10de4 <__muldf3+0x6d4>
   109a4:	00c00744 	movi	r3,29
   109a8:	14bffe04 	addi	r18,r2,-8
   109ac:	1907c83a 	sub	r3,r3,r4
   109b0:	8ca2983a 	sll	r17,r17,r18
   109b4:	30c6d83a 	srl	r3,r6,r3
   109b8:	34a4983a 	sll	r18,r6,r18
   109bc:	1c62b03a 	or	r17,r3,r17
   109c0:	1080fcc4 	addi	r2,r2,1011
   109c4:	0085c83a 	sub	r2,zero,r2
   109c8:	000f883a 	mov	r7,zero
   109cc:	003f8106 	br	107d4 <__alt_mem_Onchip_SRAM+0xf80107d4>
   109d0:	3027883a 	mov	r19,r6
   109d4:	0081ffc4 	movi	r2,2047
   109d8:	0021883a 	mov	r16,zero
   109dc:	002d883a 	mov	r22,zero
   109e0:	003faa06 	br	1088c <__alt_mem_Onchip_SRAM+0xf801088c>
   109e4:	0023883a 	mov	r17,zero
   109e8:	0025883a 	mov	r18,zero
   109ec:	01c00044 	movi	r7,1
   109f0:	003f7806 	br	107d4 <__alt_mem_Onchip_SRAM+0xf80107d4>
   109f4:	01c000c4 	movi	r7,3
   109f8:	003f7606 	br	107d4 <__alt_mem_Onchip_SRAM+0xf80107d4>
   109fc:	05400104 	movi	r21,4
   10a00:	0021883a 	mov	r16,zero
   10a04:	002d883a 	mov	r22,zero
   10a08:	01400044 	movi	r5,1
   10a0c:	003f5f06 	br	1078c <__alt_mem_Onchip_SRAM+0xf801078c>
   10a10:	05400304 	movi	r21,12
   10a14:	014000c4 	movi	r5,3
   10a18:	003f5c06 	br	1078c <__alt_mem_Onchip_SRAM+0xf801078c>
   10a1c:	04000434 	movhi	r16,16
   10a20:	0027883a 	mov	r19,zero
   10a24:	843fffc4 	addi	r16,r16,-1
   10a28:	05bfffc4 	movi	r22,-1
   10a2c:	0081ffc4 	movi	r2,2047
   10a30:	003f9606 	br	1088c <__alt_mem_Onchip_SRAM+0xf801088c>
   10a34:	8023883a 	mov	r17,r16
   10a38:	b025883a 	mov	r18,r22
   10a3c:	280f883a 	mov	r7,r5
   10a40:	003f8806 	br	10864 <__alt_mem_Onchip_SRAM+0xf8010864>
   10a44:	8023883a 	mov	r17,r16
   10a48:	b025883a 	mov	r18,r22
   10a4c:	480d883a 	mov	r6,r9
   10a50:	280f883a 	mov	r7,r5
   10a54:	003f8306 	br	10864 <__alt_mem_Onchip_SRAM+0xf8010864>
   10a58:	b026d43a 	srli	r19,r22,16
   10a5c:	902ed43a 	srli	r23,r18,16
   10a60:	b5bfffcc 	andi	r22,r22,65535
   10a64:	94bfffcc 	andi	r18,r18,65535
   10a68:	b00b883a 	mov	r5,r22
   10a6c:	9009883a 	mov	r4,r18
   10a70:	d8c00515 	stw	r3,20(sp)
   10a74:	d9800715 	stw	r6,28(sp)
   10a78:	da000615 	stw	r8,24(sp)
   10a7c:	0000eb00 	call	eb0 <__mulsi3>
   10a80:	980b883a 	mov	r5,r19
   10a84:	9009883a 	mov	r4,r18
   10a88:	1029883a 	mov	r20,r2
   10a8c:	0000eb00 	call	eb0 <__mulsi3>
   10a90:	b80b883a 	mov	r5,r23
   10a94:	9809883a 	mov	r4,r19
   10a98:	102b883a 	mov	r21,r2
   10a9c:	0000eb00 	call	eb0 <__mulsi3>
   10aa0:	b809883a 	mov	r4,r23
   10aa4:	b00b883a 	mov	r5,r22
   10aa8:	1039883a 	mov	fp,r2
   10aac:	0000eb00 	call	eb0 <__mulsi3>
   10ab0:	a008d43a 	srli	r4,r20,16
   10ab4:	1545883a 	add	r2,r2,r21
   10ab8:	d8c00517 	ldw	r3,20(sp)
   10abc:	2085883a 	add	r2,r4,r2
   10ac0:	d9800717 	ldw	r6,28(sp)
   10ac4:	da000617 	ldw	r8,24(sp)
   10ac8:	1540022e 	bgeu	r2,r21,10ad4 <__muldf3+0x3c4>
   10acc:	01000074 	movhi	r4,1
   10ad0:	e139883a 	add	fp,fp,r4
   10ad4:	100e943a 	slli	r7,r2,16
   10ad8:	1004d43a 	srli	r2,r2,16
   10adc:	882ad43a 	srli	r21,r17,16
   10ae0:	a53fffcc 	andi	r20,r20,65535
   10ae4:	8c7fffcc 	andi	r17,r17,65535
   10ae8:	3d29883a 	add	r20,r7,r20
   10aec:	b00b883a 	mov	r5,r22
   10af0:	8809883a 	mov	r4,r17
   10af4:	d8c00515 	stw	r3,20(sp)
   10af8:	d9800715 	stw	r6,28(sp)
   10afc:	da000615 	stw	r8,24(sp)
   10b00:	dd000115 	stw	r20,4(sp)
   10b04:	d8800015 	stw	r2,0(sp)
   10b08:	0000eb00 	call	eb0 <__mulsi3>
   10b0c:	980b883a 	mov	r5,r19
   10b10:	8809883a 	mov	r4,r17
   10b14:	d8800215 	stw	r2,8(sp)
   10b18:	0000eb00 	call	eb0 <__mulsi3>
   10b1c:	9809883a 	mov	r4,r19
   10b20:	a80b883a 	mov	r5,r21
   10b24:	1029883a 	mov	r20,r2
   10b28:	0000eb00 	call	eb0 <__mulsi3>
   10b2c:	b00b883a 	mov	r5,r22
   10b30:	a809883a 	mov	r4,r21
   10b34:	d8800415 	stw	r2,16(sp)
   10b38:	0000eb00 	call	eb0 <__mulsi3>
   10b3c:	d9c00217 	ldw	r7,8(sp)
   10b40:	1505883a 	add	r2,r2,r20
   10b44:	d8c00517 	ldw	r3,20(sp)
   10b48:	3826d43a 	srli	r19,r7,16
   10b4c:	d9800717 	ldw	r6,28(sp)
   10b50:	da000617 	ldw	r8,24(sp)
   10b54:	9885883a 	add	r2,r19,r2
   10b58:	da400417 	ldw	r9,16(sp)
   10b5c:	1500022e 	bgeu	r2,r20,10b68 <__muldf3+0x458>
   10b60:	01000074 	movhi	r4,1
   10b64:	4913883a 	add	r9,r9,r4
   10b68:	1028d43a 	srli	r20,r2,16
   10b6c:	1004943a 	slli	r2,r2,16
   10b70:	802cd43a 	srli	r22,r16,16
   10b74:	843fffcc 	andi	r16,r16,65535
   10b78:	3cffffcc 	andi	r19,r7,65535
   10b7c:	9009883a 	mov	r4,r18
   10b80:	800b883a 	mov	r5,r16
   10b84:	a269883a 	add	r20,r20,r9
   10b88:	d8c00515 	stw	r3,20(sp)
   10b8c:	d9800715 	stw	r6,28(sp)
   10b90:	da000615 	stw	r8,24(sp)
   10b94:	14e7883a 	add	r19,r2,r19
   10b98:	0000eb00 	call	eb0 <__mulsi3>
   10b9c:	9009883a 	mov	r4,r18
   10ba0:	b00b883a 	mov	r5,r22
   10ba4:	d8800315 	stw	r2,12(sp)
   10ba8:	0000eb00 	call	eb0 <__mulsi3>
   10bac:	b809883a 	mov	r4,r23
   10bb0:	b00b883a 	mov	r5,r22
   10bb4:	d8800215 	stw	r2,8(sp)
   10bb8:	0000eb00 	call	eb0 <__mulsi3>
   10bbc:	b80b883a 	mov	r5,r23
   10bc0:	8009883a 	mov	r4,r16
   10bc4:	d8800415 	stw	r2,16(sp)
   10bc8:	0000eb00 	call	eb0 <__mulsi3>
   10bcc:	da800317 	ldw	r10,12(sp)
   10bd0:	d9c00217 	ldw	r7,8(sp)
   10bd4:	d9000017 	ldw	r4,0(sp)
   10bd8:	502ed43a 	srli	r23,r10,16
   10bdc:	11c5883a 	add	r2,r2,r7
   10be0:	24e5883a 	add	r18,r4,r19
   10be4:	b885883a 	add	r2,r23,r2
   10be8:	d8c00517 	ldw	r3,20(sp)
   10bec:	d9800717 	ldw	r6,28(sp)
   10bf0:	da000617 	ldw	r8,24(sp)
   10bf4:	da400417 	ldw	r9,16(sp)
   10bf8:	11c0022e 	bgeu	r2,r7,10c04 <__muldf3+0x4f4>
   10bfc:	01000074 	movhi	r4,1
   10c00:	4913883a 	add	r9,r9,r4
   10c04:	100ed43a 	srli	r7,r2,16
   10c08:	1004943a 	slli	r2,r2,16
   10c0c:	55ffffcc 	andi	r23,r10,65535
   10c10:	3a53883a 	add	r9,r7,r9
   10c14:	8809883a 	mov	r4,r17
   10c18:	800b883a 	mov	r5,r16
   10c1c:	d8c00515 	stw	r3,20(sp)
   10c20:	d9800715 	stw	r6,28(sp)
   10c24:	da000615 	stw	r8,24(sp)
   10c28:	da400415 	stw	r9,16(sp)
   10c2c:	15ef883a 	add	r23,r2,r23
   10c30:	0000eb00 	call	eb0 <__mulsi3>
   10c34:	8809883a 	mov	r4,r17
   10c38:	b00b883a 	mov	r5,r22
   10c3c:	d8800215 	stw	r2,8(sp)
   10c40:	0000eb00 	call	eb0 <__mulsi3>
   10c44:	b00b883a 	mov	r5,r22
   10c48:	a809883a 	mov	r4,r21
   10c4c:	d8800315 	stw	r2,12(sp)
   10c50:	0000eb00 	call	eb0 <__mulsi3>
   10c54:	8009883a 	mov	r4,r16
   10c58:	a80b883a 	mov	r5,r21
   10c5c:	1023883a 	mov	r17,r2
   10c60:	0000eb00 	call	eb0 <__mulsi3>
   10c64:	d9c00217 	ldw	r7,8(sp)
   10c68:	da800317 	ldw	r10,12(sp)
   10c6c:	d8c00517 	ldw	r3,20(sp)
   10c70:	3808d43a 	srli	r4,r7,16
   10c74:	1285883a 	add	r2,r2,r10
   10c78:	d9800717 	ldw	r6,28(sp)
   10c7c:	2085883a 	add	r2,r4,r2
   10c80:	da000617 	ldw	r8,24(sp)
   10c84:	da400417 	ldw	r9,16(sp)
   10c88:	1280022e 	bgeu	r2,r10,10c94 <__muldf3+0x584>
   10c8c:	01000074 	movhi	r4,1
   10c90:	8923883a 	add	r17,r17,r4
   10c94:	1008943a 	slli	r4,r2,16
   10c98:	39ffffcc 	andi	r7,r7,65535
   10c9c:	e4b9883a 	add	fp,fp,r18
   10ca0:	21cf883a 	add	r7,r4,r7
   10ca4:	e4e7803a 	cmpltu	r19,fp,r19
   10ca8:	3d0f883a 	add	r7,r7,r20
   10cac:	bf39883a 	add	fp,r23,fp
   10cb0:	99c9883a 	add	r4,r19,r7
   10cb4:	e5ef803a 	cmpltu	r23,fp,r23
   10cb8:	490b883a 	add	r5,r9,r4
   10cbc:	1004d43a 	srli	r2,r2,16
   10cc0:	b965883a 	add	r18,r23,r5
   10cc4:	24c9803a 	cmpltu	r4,r4,r19
   10cc8:	3d29803a 	cmpltu	r20,r7,r20
   10ccc:	a128b03a 	or	r20,r20,r4
   10cd0:	95ef803a 	cmpltu	r23,r18,r23
   10cd4:	2a53803a 	cmpltu	r9,r5,r9
   10cd8:	a0a9883a 	add	r20,r20,r2
   10cdc:	4deeb03a 	or	r23,r9,r23
   10ce0:	a5ef883a 	add	r23,r20,r23
   10ce4:	bc63883a 	add	r17,r23,r17
   10ce8:	e004927a 	slli	r2,fp,9
   10cec:	d9000117 	ldw	r4,4(sp)
   10cf0:	882e927a 	slli	r23,r17,9
   10cf4:	9022d5fa 	srli	r17,r18,23
   10cf8:	e038d5fa 	srli	fp,fp,23
   10cfc:	1104b03a 	or	r2,r2,r4
   10d00:	9024927a 	slli	r18,r18,9
   10d04:	1004c03a 	cmpne	r2,r2,zero
   10d08:	bc62b03a 	or	r17,r23,r17
   10d0c:	1738b03a 	or	fp,r2,fp
   10d10:	8880402c 	andhi	r2,r17,256
   10d14:	e4a4b03a 	or	r18,fp,r18
   10d18:	10000726 	beq	r2,zero,10d38 <__muldf3+0x628>
   10d1c:	9006d07a 	srli	r3,r18,1
   10d20:	880497fa 	slli	r2,r17,31
   10d24:	9480004c 	andi	r18,r18,1
   10d28:	8822d07a 	srli	r17,r17,1
   10d2c:	1ca4b03a 	or	r18,r3,r18
   10d30:	14a4b03a 	or	r18,r2,r18
   10d34:	4007883a 	mov	r3,r8
   10d38:	1880ffc4 	addi	r2,r3,1023
   10d3c:	0080460e 	bge	zero,r2,10e58 <__muldf3+0x748>
   10d40:	910001cc 	andi	r4,r18,7
   10d44:	20000726 	beq	r4,zero,10d64 <__muldf3+0x654>
   10d48:	910003cc 	andi	r4,r18,15
   10d4c:	01400104 	movi	r5,4
   10d50:	21400426 	beq	r4,r5,10d64 <__muldf3+0x654>
   10d54:	9149883a 	add	r4,r18,r5
   10d58:	24a5803a 	cmpltu	r18,r4,r18
   10d5c:	8ca3883a 	add	r17,r17,r18
   10d60:	2025883a 	mov	r18,r4
   10d64:	8900402c 	andhi	r4,r17,256
   10d68:	20000426 	beq	r4,zero,10d7c <__muldf3+0x66c>
   10d6c:	18810004 	addi	r2,r3,1024
   10d70:	00ffc034 	movhi	r3,65280
   10d74:	18ffffc4 	addi	r3,r3,-1
   10d78:	88e2703a 	and	r17,r17,r3
   10d7c:	00c1ff84 	movi	r3,2046
   10d80:	18bf1316 	blt	r3,r2,109d0 <__alt_mem_Onchip_SRAM+0xf80109d0>
   10d84:	882c977a 	slli	r22,r17,29
   10d88:	9024d0fa 	srli	r18,r18,3
   10d8c:	8822927a 	slli	r17,r17,9
   10d90:	1081ffcc 	andi	r2,r2,2047
   10d94:	b4acb03a 	or	r22,r22,r18
   10d98:	8820d33a 	srli	r16,r17,12
   10d9c:	3027883a 	mov	r19,r6
   10da0:	003eba06 	br	1088c <__alt_mem_Onchip_SRAM+0xf801088c>
   10da4:	8080022c 	andhi	r2,r16,8
   10da8:	10000926 	beq	r2,zero,10dd0 <__muldf3+0x6c0>
   10dac:	8880022c 	andhi	r2,r17,8
   10db0:	1000071e 	bne	r2,zero,10dd0 <__muldf3+0x6c0>
   10db4:	00800434 	movhi	r2,16
   10db8:	8c000234 	orhi	r16,r17,8
   10dbc:	10bfffc4 	addi	r2,r2,-1
   10dc0:	e027883a 	mov	r19,fp
   10dc4:	80a0703a 	and	r16,r16,r2
   10dc8:	902d883a 	mov	r22,r18
   10dcc:	003f1706 	br	10a2c <__alt_mem_Onchip_SRAM+0xf8010a2c>
   10dd0:	00800434 	movhi	r2,16
   10dd4:	84000234 	orhi	r16,r16,8
   10dd8:	10bfffc4 	addi	r2,r2,-1
   10ddc:	80a0703a 	and	r16,r16,r2
   10de0:	003f1206 	br	10a2c <__alt_mem_Onchip_SRAM+0xf8010a2c>
   10de4:	147ff604 	addi	r17,r2,-40
   10de8:	3462983a 	sll	r17,r6,r17
   10dec:	0025883a 	mov	r18,zero
   10df0:	003ef306 	br	109c0 <__alt_mem_Onchip_SRAM+0xf80109c0>
   10df4:	3009883a 	mov	r4,r6
   10df8:	d9400215 	stw	r5,8(sp)
   10dfc:	d9800715 	stw	r6,28(sp)
   10e00:	da400415 	stw	r9,16(sp)
   10e04:	da800315 	stw	r10,12(sp)
   10e08:	000106c0 	call	106c <__clzsi2>
   10e0c:	10800804 	addi	r2,r2,32
   10e10:	da800317 	ldw	r10,12(sp)
   10e14:	da400417 	ldw	r9,16(sp)
   10e18:	d9800717 	ldw	r6,28(sp)
   10e1c:	d9400217 	ldw	r5,8(sp)
   10e20:	003edd06 	br	10998 <__alt_mem_Onchip_SRAM+0xf8010998>
   10e24:	143ff604 	addi	r16,r2,-40
   10e28:	ac20983a 	sll	r16,r21,r16
   10e2c:	002d883a 	mov	r22,zero
   10e30:	003ec106 	br	10938 <__alt_mem_Onchip_SRAM+0xf8010938>
   10e34:	d9800715 	stw	r6,28(sp)
   10e38:	d9c00215 	stw	r7,8(sp)
   10e3c:	da400415 	stw	r9,16(sp)
   10e40:	000106c0 	call	106c <__clzsi2>
   10e44:	10800804 	addi	r2,r2,32
   10e48:	da400417 	ldw	r9,16(sp)
   10e4c:	d9c00217 	ldw	r7,8(sp)
   10e50:	d9800717 	ldw	r6,28(sp)
   10e54:	003eae06 	br	10910 <__alt_mem_Onchip_SRAM+0xf8010910>
   10e58:	00c00044 	movi	r3,1
   10e5c:	1887c83a 	sub	r3,r3,r2
   10e60:	01000e04 	movi	r4,56
   10e64:	20fe8516 	blt	r4,r3,1087c <__alt_mem_Onchip_SRAM+0xf801087c>
   10e68:	010007c4 	movi	r4,31
   10e6c:	20c01b16 	blt	r4,r3,10edc <__muldf3+0x7cc>
   10e70:	00800804 	movi	r2,32
   10e74:	10c5c83a 	sub	r2,r2,r3
   10e78:	888a983a 	sll	r5,r17,r2
   10e7c:	90c8d83a 	srl	r4,r18,r3
   10e80:	9084983a 	sll	r2,r18,r2
   10e84:	88e2d83a 	srl	r17,r17,r3
   10e88:	2906b03a 	or	r3,r5,r4
   10e8c:	1004c03a 	cmpne	r2,r2,zero
   10e90:	1886b03a 	or	r3,r3,r2
   10e94:	188001cc 	andi	r2,r3,7
   10e98:	10000726 	beq	r2,zero,10eb8 <__muldf3+0x7a8>
   10e9c:	188003cc 	andi	r2,r3,15
   10ea0:	01000104 	movi	r4,4
   10ea4:	11000426 	beq	r2,r4,10eb8 <__muldf3+0x7a8>
   10ea8:	1805883a 	mov	r2,r3
   10eac:	10c00104 	addi	r3,r2,4
   10eb0:	1885803a 	cmpltu	r2,r3,r2
   10eb4:	88a3883a 	add	r17,r17,r2
   10eb8:	8880202c 	andhi	r2,r17,128
   10ebc:	10001c26 	beq	r2,zero,10f30 <__muldf3+0x820>
   10ec0:	3027883a 	mov	r19,r6
   10ec4:	00800044 	movi	r2,1
   10ec8:	0021883a 	mov	r16,zero
   10ecc:	002d883a 	mov	r22,zero
   10ed0:	003e6e06 	br	1088c <__alt_mem_Onchip_SRAM+0xf801088c>
   10ed4:	4007883a 	mov	r3,r8
   10ed8:	003f9706 	br	10d38 <__alt_mem_Onchip_SRAM+0xf8010d38>
   10edc:	017ff844 	movi	r5,-31
   10ee0:	2885c83a 	sub	r2,r5,r2
   10ee4:	888ad83a 	srl	r5,r17,r2
   10ee8:	00800804 	movi	r2,32
   10eec:	18801a26 	beq	r3,r2,10f58 <__muldf3+0x848>
   10ef0:	01001004 	movi	r4,64
   10ef4:	20c7c83a 	sub	r3,r4,r3
   10ef8:	88e2983a 	sll	r17,r17,r3
   10efc:	8ca4b03a 	or	r18,r17,r18
   10f00:	9004c03a 	cmpne	r2,r18,zero
   10f04:	2884b03a 	or	r2,r5,r2
   10f08:	144001cc 	andi	r17,r2,7
   10f0c:	88000d1e 	bne	r17,zero,10f44 <__muldf3+0x834>
   10f10:	0021883a 	mov	r16,zero
   10f14:	102cd0fa 	srli	r22,r2,3
   10f18:	3027883a 	mov	r19,r6
   10f1c:	0005883a 	mov	r2,zero
   10f20:	b46cb03a 	or	r22,r22,r17
   10f24:	003e5906 	br	1088c <__alt_mem_Onchip_SRAM+0xf801088c>
   10f28:	1007883a 	mov	r3,r2
   10f2c:	0023883a 	mov	r17,zero
   10f30:	8820927a 	slli	r16,r17,9
   10f34:	1805883a 	mov	r2,r3
   10f38:	8822977a 	slli	r17,r17,29
   10f3c:	8020d33a 	srli	r16,r16,12
   10f40:	003ff406 	br	10f14 <__alt_mem_Onchip_SRAM+0xf8010f14>
   10f44:	10c003cc 	andi	r3,r2,15
   10f48:	01000104 	movi	r4,4
   10f4c:	193ff626 	beq	r3,r4,10f28 <__alt_mem_Onchip_SRAM+0xf8010f28>
   10f50:	0023883a 	mov	r17,zero
   10f54:	003fd506 	br	10eac <__alt_mem_Onchip_SRAM+0xf8010eac>
   10f58:	0023883a 	mov	r17,zero
   10f5c:	003fe706 	br	10efc <__alt_mem_Onchip_SRAM+0xf8010efc>
   10f60:	00800434 	movhi	r2,16
   10f64:	8c000234 	orhi	r16,r17,8
   10f68:	10bfffc4 	addi	r2,r2,-1
   10f6c:	3027883a 	mov	r19,r6
   10f70:	80a0703a 	and	r16,r16,r2
   10f74:	902d883a 	mov	r22,r18
   10f78:	003eac06 	br	10a2c <__alt_mem_Onchip_SRAM+0xf8010a2c>

00010f7c <__subdf3>:
   10f7c:	02000434 	movhi	r8,16
   10f80:	423fffc4 	addi	r8,r8,-1
   10f84:	defffb04 	addi	sp,sp,-20
   10f88:	2a14703a 	and	r10,r5,r8
   10f8c:	3812d53a 	srli	r9,r7,20
   10f90:	3a10703a 	and	r8,r7,r8
   10f94:	2006d77a 	srli	r3,r4,29
   10f98:	3004d77a 	srli	r2,r6,29
   10f9c:	dc000015 	stw	r16,0(sp)
   10fa0:	501490fa 	slli	r10,r10,3
   10fa4:	2820d53a 	srli	r16,r5,20
   10fa8:	401090fa 	slli	r8,r8,3
   10fac:	dc800215 	stw	r18,8(sp)
   10fb0:	dc400115 	stw	r17,4(sp)
   10fb4:	dfc00415 	stw	ra,16(sp)
   10fb8:	202290fa 	slli	r17,r4,3
   10fbc:	dcc00315 	stw	r19,12(sp)
   10fc0:	4a41ffcc 	andi	r9,r9,2047
   10fc4:	0101ffc4 	movi	r4,2047
   10fc8:	2824d7fa 	srli	r18,r5,31
   10fcc:	8401ffcc 	andi	r16,r16,2047
   10fd0:	50c6b03a 	or	r3,r10,r3
   10fd4:	380ed7fa 	srli	r7,r7,31
   10fd8:	408ab03a 	or	r5,r8,r2
   10fdc:	300c90fa 	slli	r6,r6,3
   10fe0:	49009626 	beq	r9,r4,1123c <__subdf3+0x2c0>
   10fe4:	39c0005c 	xori	r7,r7,1
   10fe8:	8245c83a 	sub	r2,r16,r9
   10fec:	3c807426 	beq	r7,r18,111c0 <__subdf3+0x244>
   10ff0:	0080af0e 	bge	zero,r2,112b0 <__subdf3+0x334>
   10ff4:	48002a1e 	bne	r9,zero,110a0 <__subdf3+0x124>
   10ff8:	2988b03a 	or	r4,r5,r6
   10ffc:	20009a1e 	bne	r4,zero,11268 <__subdf3+0x2ec>
   11000:	888001cc 	andi	r2,r17,7
   11004:	10000726 	beq	r2,zero,11024 <__subdf3+0xa8>
   11008:	888003cc 	andi	r2,r17,15
   1100c:	01000104 	movi	r4,4
   11010:	11000426 	beq	r2,r4,11024 <__subdf3+0xa8>
   11014:	890b883a 	add	r5,r17,r4
   11018:	2c63803a 	cmpltu	r17,r5,r17
   1101c:	1c47883a 	add	r3,r3,r17
   11020:	2823883a 	mov	r17,r5
   11024:	1880202c 	andhi	r2,r3,128
   11028:	10005926 	beq	r2,zero,11190 <__subdf3+0x214>
   1102c:	84000044 	addi	r16,r16,1
   11030:	0081ffc4 	movi	r2,2047
   11034:	8080be26 	beq	r16,r2,11330 <__subdf3+0x3b4>
   11038:	017fe034 	movhi	r5,65408
   1103c:	297fffc4 	addi	r5,r5,-1
   11040:	1946703a 	and	r3,r3,r5
   11044:	1804977a 	slli	r2,r3,29
   11048:	1806927a 	slli	r3,r3,9
   1104c:	8822d0fa 	srli	r17,r17,3
   11050:	8401ffcc 	andi	r16,r16,2047
   11054:	180ad33a 	srli	r5,r3,12
   11058:	9100004c 	andi	r4,r18,1
   1105c:	1444b03a 	or	r2,r2,r17
   11060:	80c1ffcc 	andi	r3,r16,2047
   11064:	1820953a 	slli	r16,r3,20
   11068:	20c03fcc 	andi	r3,r4,255
   1106c:	180897fa 	slli	r4,r3,31
   11070:	00c00434 	movhi	r3,16
   11074:	18ffffc4 	addi	r3,r3,-1
   11078:	28c6703a 	and	r3,r5,r3
   1107c:	1c06b03a 	or	r3,r3,r16
   11080:	1906b03a 	or	r3,r3,r4
   11084:	dfc00417 	ldw	ra,16(sp)
   11088:	dcc00317 	ldw	r19,12(sp)
   1108c:	dc800217 	ldw	r18,8(sp)
   11090:	dc400117 	ldw	r17,4(sp)
   11094:	dc000017 	ldw	r16,0(sp)
   11098:	dec00504 	addi	sp,sp,20
   1109c:	f800283a 	ret
   110a0:	0101ffc4 	movi	r4,2047
   110a4:	813fd626 	beq	r16,r4,11000 <__alt_mem_Onchip_SRAM+0xf8011000>
   110a8:	29402034 	orhi	r5,r5,128
   110ac:	01000e04 	movi	r4,56
   110b0:	2080a316 	blt	r4,r2,11340 <__subdf3+0x3c4>
   110b4:	010007c4 	movi	r4,31
   110b8:	2080c616 	blt	r4,r2,113d4 <__subdf3+0x458>
   110bc:	01000804 	movi	r4,32
   110c0:	2089c83a 	sub	r4,r4,r2
   110c4:	2910983a 	sll	r8,r5,r4
   110c8:	308ed83a 	srl	r7,r6,r2
   110cc:	3108983a 	sll	r4,r6,r4
   110d0:	2884d83a 	srl	r2,r5,r2
   110d4:	41ccb03a 	or	r6,r8,r7
   110d8:	2008c03a 	cmpne	r4,r4,zero
   110dc:	310cb03a 	or	r6,r6,r4
   110e0:	898dc83a 	sub	r6,r17,r6
   110e4:	89a3803a 	cmpltu	r17,r17,r6
   110e8:	1887c83a 	sub	r3,r3,r2
   110ec:	1c47c83a 	sub	r3,r3,r17
   110f0:	3023883a 	mov	r17,r6
   110f4:	1880202c 	andhi	r2,r3,128
   110f8:	10002326 	beq	r2,zero,11188 <__subdf3+0x20c>
   110fc:	04c02034 	movhi	r19,128
   11100:	9cffffc4 	addi	r19,r19,-1
   11104:	1ce6703a 	and	r19,r3,r19
   11108:	98007a26 	beq	r19,zero,112f4 <__subdf3+0x378>
   1110c:	9809883a 	mov	r4,r19
   11110:	000106c0 	call	106c <__clzsi2>
   11114:	113ffe04 	addi	r4,r2,-8
   11118:	00c007c4 	movi	r3,31
   1111c:	19007b16 	blt	r3,r4,1130c <__subdf3+0x390>
   11120:	00800804 	movi	r2,32
   11124:	1105c83a 	sub	r2,r2,r4
   11128:	8884d83a 	srl	r2,r17,r2
   1112c:	9906983a 	sll	r3,r19,r4
   11130:	8922983a 	sll	r17,r17,r4
   11134:	10c4b03a 	or	r2,r2,r3
   11138:	24007816 	blt	r4,r16,1131c <__subdf3+0x3a0>
   1113c:	2421c83a 	sub	r16,r4,r16
   11140:	80c00044 	addi	r3,r16,1
   11144:	010007c4 	movi	r4,31
   11148:	20c09516 	blt	r4,r3,113a0 <__subdf3+0x424>
   1114c:	01400804 	movi	r5,32
   11150:	28cbc83a 	sub	r5,r5,r3
   11154:	88c8d83a 	srl	r4,r17,r3
   11158:	8962983a 	sll	r17,r17,r5
   1115c:	114a983a 	sll	r5,r2,r5
   11160:	10c6d83a 	srl	r3,r2,r3
   11164:	8804c03a 	cmpne	r2,r17,zero
   11168:	290ab03a 	or	r5,r5,r4
   1116c:	28a2b03a 	or	r17,r5,r2
   11170:	0021883a 	mov	r16,zero
   11174:	003fa206 	br	11000 <__alt_mem_Onchip_SRAM+0xf8011000>
   11178:	2090b03a 	or	r8,r4,r2
   1117c:	40018e26 	beq	r8,zero,117b8 <__subdf3+0x83c>
   11180:	1007883a 	mov	r3,r2
   11184:	2023883a 	mov	r17,r4
   11188:	888001cc 	andi	r2,r17,7
   1118c:	103f9e1e 	bne	r2,zero,11008 <__alt_mem_Onchip_SRAM+0xf8011008>
   11190:	1804977a 	slli	r2,r3,29
   11194:	8822d0fa 	srli	r17,r17,3
   11198:	1810d0fa 	srli	r8,r3,3
   1119c:	9100004c 	andi	r4,r18,1
   111a0:	1444b03a 	or	r2,r2,r17
   111a4:	00c1ffc4 	movi	r3,2047
   111a8:	80c02826 	beq	r16,r3,1124c <__subdf3+0x2d0>
   111ac:	01400434 	movhi	r5,16
   111b0:	297fffc4 	addi	r5,r5,-1
   111b4:	80e0703a 	and	r16,r16,r3
   111b8:	414a703a 	and	r5,r8,r5
   111bc:	003fa806 	br	11060 <__alt_mem_Onchip_SRAM+0xf8011060>
   111c0:	0080630e 	bge	zero,r2,11350 <__subdf3+0x3d4>
   111c4:	48003026 	beq	r9,zero,11288 <__subdf3+0x30c>
   111c8:	0101ffc4 	movi	r4,2047
   111cc:	813f8c26 	beq	r16,r4,11000 <__alt_mem_Onchip_SRAM+0xf8011000>
   111d0:	29402034 	orhi	r5,r5,128
   111d4:	01000e04 	movi	r4,56
   111d8:	2080a90e 	bge	r4,r2,11480 <__subdf3+0x504>
   111dc:	298cb03a 	or	r6,r5,r6
   111e0:	3012c03a 	cmpne	r9,r6,zero
   111e4:	0005883a 	mov	r2,zero
   111e8:	4c53883a 	add	r9,r9,r17
   111ec:	4c63803a 	cmpltu	r17,r9,r17
   111f0:	10c7883a 	add	r3,r2,r3
   111f4:	88c7883a 	add	r3,r17,r3
   111f8:	4823883a 	mov	r17,r9
   111fc:	1880202c 	andhi	r2,r3,128
   11200:	1000d026 	beq	r2,zero,11544 <__subdf3+0x5c8>
   11204:	84000044 	addi	r16,r16,1
   11208:	0081ffc4 	movi	r2,2047
   1120c:	8080fe26 	beq	r16,r2,11608 <__subdf3+0x68c>
   11210:	00bfe034 	movhi	r2,65408
   11214:	10bfffc4 	addi	r2,r2,-1
   11218:	1886703a 	and	r3,r3,r2
   1121c:	880ad07a 	srli	r5,r17,1
   11220:	180497fa 	slli	r2,r3,31
   11224:	8900004c 	andi	r4,r17,1
   11228:	2922b03a 	or	r17,r5,r4
   1122c:	1806d07a 	srli	r3,r3,1
   11230:	1462b03a 	or	r17,r2,r17
   11234:	3825883a 	mov	r18,r7
   11238:	003f7106 	br	11000 <__alt_mem_Onchip_SRAM+0xf8011000>
   1123c:	2984b03a 	or	r2,r5,r6
   11240:	103f6826 	beq	r2,zero,10fe4 <__alt_mem_Onchip_SRAM+0xf8010fe4>
   11244:	39c03fcc 	andi	r7,r7,255
   11248:	003f6706 	br	10fe8 <__alt_mem_Onchip_SRAM+0xf8010fe8>
   1124c:	4086b03a 	or	r3,r8,r2
   11250:	18015226 	beq	r3,zero,1179c <__subdf3+0x820>
   11254:	00c00434 	movhi	r3,16
   11258:	41400234 	orhi	r5,r8,8
   1125c:	18ffffc4 	addi	r3,r3,-1
   11260:	28ca703a 	and	r5,r5,r3
   11264:	003f7e06 	br	11060 <__alt_mem_Onchip_SRAM+0xf8011060>
   11268:	10bfffc4 	addi	r2,r2,-1
   1126c:	1000491e 	bne	r2,zero,11394 <__subdf3+0x418>
   11270:	898fc83a 	sub	r7,r17,r6
   11274:	89e3803a 	cmpltu	r17,r17,r7
   11278:	1947c83a 	sub	r3,r3,r5
   1127c:	1c47c83a 	sub	r3,r3,r17
   11280:	3823883a 	mov	r17,r7
   11284:	003f9b06 	br	110f4 <__alt_mem_Onchip_SRAM+0xf80110f4>
   11288:	2988b03a 	or	r4,r5,r6
   1128c:	203f5c26 	beq	r4,zero,11000 <__alt_mem_Onchip_SRAM+0xf8011000>
   11290:	10bfffc4 	addi	r2,r2,-1
   11294:	1000931e 	bne	r2,zero,114e4 <__subdf3+0x568>
   11298:	898d883a 	add	r6,r17,r6
   1129c:	3463803a 	cmpltu	r17,r6,r17
   112a0:	1947883a 	add	r3,r3,r5
   112a4:	88c7883a 	add	r3,r17,r3
   112a8:	3023883a 	mov	r17,r6
   112ac:	003fd306 	br	111fc <__alt_mem_Onchip_SRAM+0xf80111fc>
   112b0:	1000541e 	bne	r2,zero,11404 <__subdf3+0x488>
   112b4:	80800044 	addi	r2,r16,1
   112b8:	1081ffcc 	andi	r2,r2,2047
   112bc:	01000044 	movi	r4,1
   112c0:	2080a20e 	bge	r4,r2,1154c <__subdf3+0x5d0>
   112c4:	8989c83a 	sub	r4,r17,r6
   112c8:	8905803a 	cmpltu	r2,r17,r4
   112cc:	1967c83a 	sub	r19,r3,r5
   112d0:	98a7c83a 	sub	r19,r19,r2
   112d4:	9880202c 	andhi	r2,r19,128
   112d8:	10006326 	beq	r2,zero,11468 <__subdf3+0x4ec>
   112dc:	3463c83a 	sub	r17,r6,r17
   112e0:	28c7c83a 	sub	r3,r5,r3
   112e4:	344d803a 	cmpltu	r6,r6,r17
   112e8:	19a7c83a 	sub	r19,r3,r6
   112ec:	3825883a 	mov	r18,r7
   112f0:	983f861e 	bne	r19,zero,1110c <__alt_mem_Onchip_SRAM+0xf801110c>
   112f4:	8809883a 	mov	r4,r17
   112f8:	000106c0 	call	106c <__clzsi2>
   112fc:	10800804 	addi	r2,r2,32
   11300:	113ffe04 	addi	r4,r2,-8
   11304:	00c007c4 	movi	r3,31
   11308:	193f850e 	bge	r3,r4,11120 <__alt_mem_Onchip_SRAM+0xf8011120>
   1130c:	10bff604 	addi	r2,r2,-40
   11310:	8884983a 	sll	r2,r17,r2
   11314:	0023883a 	mov	r17,zero
   11318:	243f880e 	bge	r4,r16,1113c <__alt_mem_Onchip_SRAM+0xf801113c>
   1131c:	00ffe034 	movhi	r3,65408
   11320:	18ffffc4 	addi	r3,r3,-1
   11324:	8121c83a 	sub	r16,r16,r4
   11328:	10c6703a 	and	r3,r2,r3
   1132c:	003f3406 	br	11000 <__alt_mem_Onchip_SRAM+0xf8011000>
   11330:	9100004c 	andi	r4,r18,1
   11334:	000b883a 	mov	r5,zero
   11338:	0005883a 	mov	r2,zero
   1133c:	003f4806 	br	11060 <__alt_mem_Onchip_SRAM+0xf8011060>
   11340:	298cb03a 	or	r6,r5,r6
   11344:	300cc03a 	cmpne	r6,r6,zero
   11348:	0005883a 	mov	r2,zero
   1134c:	003f6406 	br	110e0 <__alt_mem_Onchip_SRAM+0xf80110e0>
   11350:	10009a1e 	bne	r2,zero,115bc <__subdf3+0x640>
   11354:	82400044 	addi	r9,r16,1
   11358:	4881ffcc 	andi	r2,r9,2047
   1135c:	02800044 	movi	r10,1
   11360:	5080670e 	bge	r10,r2,11500 <__subdf3+0x584>
   11364:	0081ffc4 	movi	r2,2047
   11368:	4880af26 	beq	r9,r2,11628 <__subdf3+0x6ac>
   1136c:	898d883a 	add	r6,r17,r6
   11370:	1945883a 	add	r2,r3,r5
   11374:	3447803a 	cmpltu	r3,r6,r17
   11378:	1887883a 	add	r3,r3,r2
   1137c:	182297fa 	slli	r17,r3,31
   11380:	300cd07a 	srli	r6,r6,1
   11384:	1806d07a 	srli	r3,r3,1
   11388:	4821883a 	mov	r16,r9
   1138c:	89a2b03a 	or	r17,r17,r6
   11390:	003f1b06 	br	11000 <__alt_mem_Onchip_SRAM+0xf8011000>
   11394:	0101ffc4 	movi	r4,2047
   11398:	813f441e 	bne	r16,r4,110ac <__alt_mem_Onchip_SRAM+0xf80110ac>
   1139c:	003f1806 	br	11000 <__alt_mem_Onchip_SRAM+0xf8011000>
   113a0:	843ff844 	addi	r16,r16,-31
   113a4:	01400804 	movi	r5,32
   113a8:	1408d83a 	srl	r4,r2,r16
   113ac:	19405026 	beq	r3,r5,114f0 <__subdf3+0x574>
   113b0:	01401004 	movi	r5,64
   113b4:	28c7c83a 	sub	r3,r5,r3
   113b8:	10c4983a 	sll	r2,r2,r3
   113bc:	88a2b03a 	or	r17,r17,r2
   113c0:	8822c03a 	cmpne	r17,r17,zero
   113c4:	2462b03a 	or	r17,r4,r17
   113c8:	0007883a 	mov	r3,zero
   113cc:	0021883a 	mov	r16,zero
   113d0:	003f6d06 	br	11188 <__alt_mem_Onchip_SRAM+0xf8011188>
   113d4:	11fff804 	addi	r7,r2,-32
   113d8:	01000804 	movi	r4,32
   113dc:	29ced83a 	srl	r7,r5,r7
   113e0:	11004526 	beq	r2,r4,114f8 <__subdf3+0x57c>
   113e4:	01001004 	movi	r4,64
   113e8:	2089c83a 	sub	r4,r4,r2
   113ec:	2904983a 	sll	r2,r5,r4
   113f0:	118cb03a 	or	r6,r2,r6
   113f4:	300cc03a 	cmpne	r6,r6,zero
   113f8:	398cb03a 	or	r6,r7,r6
   113fc:	0005883a 	mov	r2,zero
   11400:	003f3706 	br	110e0 <__alt_mem_Onchip_SRAM+0xf80110e0>
   11404:	80002a26 	beq	r16,zero,114b0 <__subdf3+0x534>
   11408:	0101ffc4 	movi	r4,2047
   1140c:	49006626 	beq	r9,r4,115a8 <__subdf3+0x62c>
   11410:	0085c83a 	sub	r2,zero,r2
   11414:	18c02034 	orhi	r3,r3,128
   11418:	01000e04 	movi	r4,56
   1141c:	20807e16 	blt	r4,r2,11618 <__subdf3+0x69c>
   11420:	010007c4 	movi	r4,31
   11424:	2080e716 	blt	r4,r2,117c4 <__subdf3+0x848>
   11428:	01000804 	movi	r4,32
   1142c:	2089c83a 	sub	r4,r4,r2
   11430:	1914983a 	sll	r10,r3,r4
   11434:	8890d83a 	srl	r8,r17,r2
   11438:	8908983a 	sll	r4,r17,r4
   1143c:	1884d83a 	srl	r2,r3,r2
   11440:	5222b03a 	or	r17,r10,r8
   11444:	2006c03a 	cmpne	r3,r4,zero
   11448:	88e2b03a 	or	r17,r17,r3
   1144c:	3463c83a 	sub	r17,r6,r17
   11450:	2885c83a 	sub	r2,r5,r2
   11454:	344d803a 	cmpltu	r6,r6,r17
   11458:	1187c83a 	sub	r3,r2,r6
   1145c:	4821883a 	mov	r16,r9
   11460:	3825883a 	mov	r18,r7
   11464:	003f2306 	br	110f4 <__alt_mem_Onchip_SRAM+0xf80110f4>
   11468:	24d0b03a 	or	r8,r4,r19
   1146c:	40001b1e 	bne	r8,zero,114dc <__subdf3+0x560>
   11470:	0005883a 	mov	r2,zero
   11474:	0009883a 	mov	r4,zero
   11478:	0021883a 	mov	r16,zero
   1147c:	003f4906 	br	111a4 <__alt_mem_Onchip_SRAM+0xf80111a4>
   11480:	010007c4 	movi	r4,31
   11484:	20803a16 	blt	r4,r2,11570 <__subdf3+0x5f4>
   11488:	01000804 	movi	r4,32
   1148c:	2089c83a 	sub	r4,r4,r2
   11490:	2912983a 	sll	r9,r5,r4
   11494:	3090d83a 	srl	r8,r6,r2
   11498:	3108983a 	sll	r4,r6,r4
   1149c:	2884d83a 	srl	r2,r5,r2
   114a0:	4a12b03a 	or	r9,r9,r8
   114a4:	2008c03a 	cmpne	r4,r4,zero
   114a8:	4912b03a 	or	r9,r9,r4
   114ac:	003f4e06 	br	111e8 <__alt_mem_Onchip_SRAM+0xf80111e8>
   114b0:	1c48b03a 	or	r4,r3,r17
   114b4:	20003c26 	beq	r4,zero,115a8 <__subdf3+0x62c>
   114b8:	0084303a 	nor	r2,zero,r2
   114bc:	1000381e 	bne	r2,zero,115a0 <__subdf3+0x624>
   114c0:	3463c83a 	sub	r17,r6,r17
   114c4:	28c5c83a 	sub	r2,r5,r3
   114c8:	344d803a 	cmpltu	r6,r6,r17
   114cc:	1187c83a 	sub	r3,r2,r6
   114d0:	4821883a 	mov	r16,r9
   114d4:	3825883a 	mov	r18,r7
   114d8:	003f0606 	br	110f4 <__alt_mem_Onchip_SRAM+0xf80110f4>
   114dc:	2023883a 	mov	r17,r4
   114e0:	003f0906 	br	11108 <__alt_mem_Onchip_SRAM+0xf8011108>
   114e4:	0101ffc4 	movi	r4,2047
   114e8:	813f3a1e 	bne	r16,r4,111d4 <__alt_mem_Onchip_SRAM+0xf80111d4>
   114ec:	003ec406 	br	11000 <__alt_mem_Onchip_SRAM+0xf8011000>
   114f0:	0005883a 	mov	r2,zero
   114f4:	003fb106 	br	113bc <__alt_mem_Onchip_SRAM+0xf80113bc>
   114f8:	0005883a 	mov	r2,zero
   114fc:	003fbc06 	br	113f0 <__alt_mem_Onchip_SRAM+0xf80113f0>
   11500:	1c44b03a 	or	r2,r3,r17
   11504:	80008e1e 	bne	r16,zero,11740 <__subdf3+0x7c4>
   11508:	1000c826 	beq	r2,zero,1182c <__subdf3+0x8b0>
   1150c:	2984b03a 	or	r2,r5,r6
   11510:	103ebb26 	beq	r2,zero,11000 <__alt_mem_Onchip_SRAM+0xf8011000>
   11514:	8989883a 	add	r4,r17,r6
   11518:	1945883a 	add	r2,r3,r5
   1151c:	2447803a 	cmpltu	r3,r4,r17
   11520:	1887883a 	add	r3,r3,r2
   11524:	1880202c 	andhi	r2,r3,128
   11528:	2023883a 	mov	r17,r4
   1152c:	103f1626 	beq	r2,zero,11188 <__alt_mem_Onchip_SRAM+0xf8011188>
   11530:	00bfe034 	movhi	r2,65408
   11534:	10bfffc4 	addi	r2,r2,-1
   11538:	5021883a 	mov	r16,r10
   1153c:	1886703a 	and	r3,r3,r2
   11540:	003eaf06 	br	11000 <__alt_mem_Onchip_SRAM+0xf8011000>
   11544:	3825883a 	mov	r18,r7
   11548:	003f0f06 	br	11188 <__alt_mem_Onchip_SRAM+0xf8011188>
   1154c:	1c44b03a 	or	r2,r3,r17
   11550:	8000251e 	bne	r16,zero,115e8 <__subdf3+0x66c>
   11554:	1000661e 	bne	r2,zero,116f0 <__subdf3+0x774>
   11558:	2990b03a 	or	r8,r5,r6
   1155c:	40009626 	beq	r8,zero,117b8 <__subdf3+0x83c>
   11560:	2807883a 	mov	r3,r5
   11564:	3023883a 	mov	r17,r6
   11568:	3825883a 	mov	r18,r7
   1156c:	003ea406 	br	11000 <__alt_mem_Onchip_SRAM+0xf8011000>
   11570:	127ff804 	addi	r9,r2,-32
   11574:	01000804 	movi	r4,32
   11578:	2a52d83a 	srl	r9,r5,r9
   1157c:	11008c26 	beq	r2,r4,117b0 <__subdf3+0x834>
   11580:	01001004 	movi	r4,64
   11584:	2085c83a 	sub	r2,r4,r2
   11588:	2884983a 	sll	r2,r5,r2
   1158c:	118cb03a 	or	r6,r2,r6
   11590:	300cc03a 	cmpne	r6,r6,zero
   11594:	4992b03a 	or	r9,r9,r6
   11598:	0005883a 	mov	r2,zero
   1159c:	003f1206 	br	111e8 <__alt_mem_Onchip_SRAM+0xf80111e8>
   115a0:	0101ffc4 	movi	r4,2047
   115a4:	493f9c1e 	bne	r9,r4,11418 <__alt_mem_Onchip_SRAM+0xf8011418>
   115a8:	2807883a 	mov	r3,r5
   115ac:	3023883a 	mov	r17,r6
   115b0:	4821883a 	mov	r16,r9
   115b4:	3825883a 	mov	r18,r7
   115b8:	003e9106 	br	11000 <__alt_mem_Onchip_SRAM+0xf8011000>
   115bc:	80001f1e 	bne	r16,zero,1163c <__subdf3+0x6c0>
   115c0:	1c48b03a 	or	r4,r3,r17
   115c4:	20005a26 	beq	r4,zero,11730 <__subdf3+0x7b4>
   115c8:	0084303a 	nor	r2,zero,r2
   115cc:	1000561e 	bne	r2,zero,11728 <__subdf3+0x7ac>
   115d0:	89a3883a 	add	r17,r17,r6
   115d4:	1945883a 	add	r2,r3,r5
   115d8:	898d803a 	cmpltu	r6,r17,r6
   115dc:	3087883a 	add	r3,r6,r2
   115e0:	4821883a 	mov	r16,r9
   115e4:	003f0506 	br	111fc <__alt_mem_Onchip_SRAM+0xf80111fc>
   115e8:	10002b1e 	bne	r2,zero,11698 <__subdf3+0x71c>
   115ec:	2984b03a 	or	r2,r5,r6
   115f0:	10008026 	beq	r2,zero,117f4 <__subdf3+0x878>
   115f4:	2807883a 	mov	r3,r5
   115f8:	3023883a 	mov	r17,r6
   115fc:	3825883a 	mov	r18,r7
   11600:	0401ffc4 	movi	r16,2047
   11604:	003e7e06 	br	11000 <__alt_mem_Onchip_SRAM+0xf8011000>
   11608:	3809883a 	mov	r4,r7
   1160c:	0011883a 	mov	r8,zero
   11610:	0005883a 	mov	r2,zero
   11614:	003ee306 	br	111a4 <__alt_mem_Onchip_SRAM+0xf80111a4>
   11618:	1c62b03a 	or	r17,r3,r17
   1161c:	8822c03a 	cmpne	r17,r17,zero
   11620:	0005883a 	mov	r2,zero
   11624:	003f8906 	br	1144c <__alt_mem_Onchip_SRAM+0xf801144c>
   11628:	3809883a 	mov	r4,r7
   1162c:	4821883a 	mov	r16,r9
   11630:	0011883a 	mov	r8,zero
   11634:	0005883a 	mov	r2,zero
   11638:	003eda06 	br	111a4 <__alt_mem_Onchip_SRAM+0xf80111a4>
   1163c:	0101ffc4 	movi	r4,2047
   11640:	49003b26 	beq	r9,r4,11730 <__subdf3+0x7b4>
   11644:	0085c83a 	sub	r2,zero,r2
   11648:	18c02034 	orhi	r3,r3,128
   1164c:	01000e04 	movi	r4,56
   11650:	20806e16 	blt	r4,r2,1180c <__subdf3+0x890>
   11654:	010007c4 	movi	r4,31
   11658:	20807716 	blt	r4,r2,11838 <__subdf3+0x8bc>
   1165c:	01000804 	movi	r4,32
   11660:	2089c83a 	sub	r4,r4,r2
   11664:	1914983a 	sll	r10,r3,r4
   11668:	8890d83a 	srl	r8,r17,r2
   1166c:	8908983a 	sll	r4,r17,r4
   11670:	1884d83a 	srl	r2,r3,r2
   11674:	5222b03a 	or	r17,r10,r8
   11678:	2006c03a 	cmpne	r3,r4,zero
   1167c:	88e2b03a 	or	r17,r17,r3
   11680:	89a3883a 	add	r17,r17,r6
   11684:	1145883a 	add	r2,r2,r5
   11688:	898d803a 	cmpltu	r6,r17,r6
   1168c:	3087883a 	add	r3,r6,r2
   11690:	4821883a 	mov	r16,r9
   11694:	003ed906 	br	111fc <__alt_mem_Onchip_SRAM+0xf80111fc>
   11698:	2984b03a 	or	r2,r5,r6
   1169c:	10004226 	beq	r2,zero,117a8 <__subdf3+0x82c>
   116a0:	1808d0fa 	srli	r4,r3,3
   116a4:	8822d0fa 	srli	r17,r17,3
   116a8:	1806977a 	slli	r3,r3,29
   116ac:	2080022c 	andhi	r2,r4,8
   116b0:	1c62b03a 	or	r17,r3,r17
   116b4:	10000826 	beq	r2,zero,116d8 <__subdf3+0x75c>
   116b8:	2812d0fa 	srli	r9,r5,3
   116bc:	4880022c 	andhi	r2,r9,8
   116c0:	1000051e 	bne	r2,zero,116d8 <__subdf3+0x75c>
   116c4:	300cd0fa 	srli	r6,r6,3
   116c8:	2804977a 	slli	r2,r5,29
   116cc:	4809883a 	mov	r4,r9
   116d0:	3825883a 	mov	r18,r7
   116d4:	11a2b03a 	or	r17,r2,r6
   116d8:	8806d77a 	srli	r3,r17,29
   116dc:	200890fa 	slli	r4,r4,3
   116e0:	882290fa 	slli	r17,r17,3
   116e4:	0401ffc4 	movi	r16,2047
   116e8:	1906b03a 	or	r3,r3,r4
   116ec:	003e4406 	br	11000 <__alt_mem_Onchip_SRAM+0xf8011000>
   116f0:	2984b03a 	or	r2,r5,r6
   116f4:	103e4226 	beq	r2,zero,11000 <__alt_mem_Onchip_SRAM+0xf8011000>
   116f8:	8989c83a 	sub	r4,r17,r6
   116fc:	8911803a 	cmpltu	r8,r17,r4
   11700:	1945c83a 	sub	r2,r3,r5
   11704:	1205c83a 	sub	r2,r2,r8
   11708:	1200202c 	andhi	r8,r2,128
   1170c:	403e9a26 	beq	r8,zero,11178 <__alt_mem_Onchip_SRAM+0xf8011178>
   11710:	3463c83a 	sub	r17,r6,r17
   11714:	28c5c83a 	sub	r2,r5,r3
   11718:	344d803a 	cmpltu	r6,r6,r17
   1171c:	1187c83a 	sub	r3,r2,r6
   11720:	3825883a 	mov	r18,r7
   11724:	003e3606 	br	11000 <__alt_mem_Onchip_SRAM+0xf8011000>
   11728:	0101ffc4 	movi	r4,2047
   1172c:	493fc71e 	bne	r9,r4,1164c <__alt_mem_Onchip_SRAM+0xf801164c>
   11730:	2807883a 	mov	r3,r5
   11734:	3023883a 	mov	r17,r6
   11738:	4821883a 	mov	r16,r9
   1173c:	003e3006 	br	11000 <__alt_mem_Onchip_SRAM+0xf8011000>
   11740:	10003626 	beq	r2,zero,1181c <__subdf3+0x8a0>
   11744:	2984b03a 	or	r2,r5,r6
   11748:	10001726 	beq	r2,zero,117a8 <__subdf3+0x82c>
   1174c:	1808d0fa 	srli	r4,r3,3
   11750:	8822d0fa 	srli	r17,r17,3
   11754:	1806977a 	slli	r3,r3,29
   11758:	2080022c 	andhi	r2,r4,8
   1175c:	1c62b03a 	or	r17,r3,r17
   11760:	10000726 	beq	r2,zero,11780 <__subdf3+0x804>
   11764:	2812d0fa 	srli	r9,r5,3
   11768:	4880022c 	andhi	r2,r9,8
   1176c:	1000041e 	bne	r2,zero,11780 <__subdf3+0x804>
   11770:	300cd0fa 	srli	r6,r6,3
   11774:	2804977a 	slli	r2,r5,29
   11778:	4809883a 	mov	r4,r9
   1177c:	11a2b03a 	or	r17,r2,r6
   11780:	8806d77a 	srli	r3,r17,29
   11784:	200890fa 	slli	r4,r4,3
   11788:	882290fa 	slli	r17,r17,3
   1178c:	3825883a 	mov	r18,r7
   11790:	1906b03a 	or	r3,r3,r4
   11794:	0401ffc4 	movi	r16,2047
   11798:	003e1906 	br	11000 <__alt_mem_Onchip_SRAM+0xf8011000>
   1179c:	000b883a 	mov	r5,zero
   117a0:	0005883a 	mov	r2,zero
   117a4:	003e2e06 	br	11060 <__alt_mem_Onchip_SRAM+0xf8011060>
   117a8:	0401ffc4 	movi	r16,2047
   117ac:	003e1406 	br	11000 <__alt_mem_Onchip_SRAM+0xf8011000>
   117b0:	0005883a 	mov	r2,zero
   117b4:	003f7506 	br	1158c <__alt_mem_Onchip_SRAM+0xf801158c>
   117b8:	0005883a 	mov	r2,zero
   117bc:	0009883a 	mov	r4,zero
   117c0:	003e7806 	br	111a4 <__alt_mem_Onchip_SRAM+0xf80111a4>
   117c4:	123ff804 	addi	r8,r2,-32
   117c8:	01000804 	movi	r4,32
   117cc:	1a10d83a 	srl	r8,r3,r8
   117d0:	11002526 	beq	r2,r4,11868 <__subdf3+0x8ec>
   117d4:	01001004 	movi	r4,64
   117d8:	2085c83a 	sub	r2,r4,r2
   117dc:	1884983a 	sll	r2,r3,r2
   117e0:	1444b03a 	or	r2,r2,r17
   117e4:	1004c03a 	cmpne	r2,r2,zero
   117e8:	40a2b03a 	or	r17,r8,r2
   117ec:	0005883a 	mov	r2,zero
   117f0:	003f1606 	br	1144c <__alt_mem_Onchip_SRAM+0xf801144c>
   117f4:	02000434 	movhi	r8,16
   117f8:	0009883a 	mov	r4,zero
   117fc:	423fffc4 	addi	r8,r8,-1
   11800:	00bfffc4 	movi	r2,-1
   11804:	0401ffc4 	movi	r16,2047
   11808:	003e6606 	br	111a4 <__alt_mem_Onchip_SRAM+0xf80111a4>
   1180c:	1c62b03a 	or	r17,r3,r17
   11810:	8822c03a 	cmpne	r17,r17,zero
   11814:	0005883a 	mov	r2,zero
   11818:	003f9906 	br	11680 <__alt_mem_Onchip_SRAM+0xf8011680>
   1181c:	2807883a 	mov	r3,r5
   11820:	3023883a 	mov	r17,r6
   11824:	0401ffc4 	movi	r16,2047
   11828:	003df506 	br	11000 <__alt_mem_Onchip_SRAM+0xf8011000>
   1182c:	2807883a 	mov	r3,r5
   11830:	3023883a 	mov	r17,r6
   11834:	003df206 	br	11000 <__alt_mem_Onchip_SRAM+0xf8011000>
   11838:	123ff804 	addi	r8,r2,-32
   1183c:	01000804 	movi	r4,32
   11840:	1a10d83a 	srl	r8,r3,r8
   11844:	11000a26 	beq	r2,r4,11870 <__subdf3+0x8f4>
   11848:	01001004 	movi	r4,64
   1184c:	2085c83a 	sub	r2,r4,r2
   11850:	1884983a 	sll	r2,r3,r2
   11854:	1444b03a 	or	r2,r2,r17
   11858:	1004c03a 	cmpne	r2,r2,zero
   1185c:	40a2b03a 	or	r17,r8,r2
   11860:	0005883a 	mov	r2,zero
   11864:	003f8606 	br	11680 <__alt_mem_Onchip_SRAM+0xf8011680>
   11868:	0005883a 	mov	r2,zero
   1186c:	003fdc06 	br	117e0 <__alt_mem_Onchip_SRAM+0xf80117e0>
   11870:	0005883a 	mov	r2,zero
   11874:	003ff706 	br	11854 <__alt_mem_Onchip_SRAM+0xf8011854>

00011878 <__fixdfsi>:
   11878:	280cd53a 	srli	r6,r5,20
   1187c:	00c00434 	movhi	r3,16
   11880:	18ffffc4 	addi	r3,r3,-1
   11884:	3181ffcc 	andi	r6,r6,2047
   11888:	01c0ff84 	movi	r7,1022
   1188c:	28c6703a 	and	r3,r5,r3
   11890:	280ad7fa 	srli	r5,r5,31
   11894:	3980120e 	bge	r7,r6,118e0 <__fixdfsi+0x68>
   11898:	00810744 	movi	r2,1053
   1189c:	11800c16 	blt	r2,r6,118d0 <__fixdfsi+0x58>
   118a0:	00810cc4 	movi	r2,1075
   118a4:	1185c83a 	sub	r2,r2,r6
   118a8:	01c007c4 	movi	r7,31
   118ac:	18c00434 	orhi	r3,r3,16
   118b0:	38800d16 	blt	r7,r2,118e8 <__fixdfsi+0x70>
   118b4:	31befb44 	addi	r6,r6,-1043
   118b8:	2084d83a 	srl	r2,r4,r2
   118bc:	1986983a 	sll	r3,r3,r6
   118c0:	1884b03a 	or	r2,r3,r2
   118c4:	28000726 	beq	r5,zero,118e4 <__fixdfsi+0x6c>
   118c8:	0085c83a 	sub	r2,zero,r2
   118cc:	f800283a 	ret
   118d0:	00a00034 	movhi	r2,32768
   118d4:	10bfffc4 	addi	r2,r2,-1
   118d8:	2885883a 	add	r2,r5,r2
   118dc:	f800283a 	ret
   118e0:	0005883a 	mov	r2,zero
   118e4:	f800283a 	ret
   118e8:	008104c4 	movi	r2,1043
   118ec:	1185c83a 	sub	r2,r2,r6
   118f0:	1884d83a 	srl	r2,r3,r2
   118f4:	003ff306 	br	118c4 <__alt_mem_Onchip_SRAM+0xf80118c4>

000118f8 <__floatsidf>:
   118f8:	defffd04 	addi	sp,sp,-12
   118fc:	dfc00215 	stw	ra,8(sp)
   11900:	dc400115 	stw	r17,4(sp)
   11904:	dc000015 	stw	r16,0(sp)
   11908:	20002b26 	beq	r4,zero,119b8 <__floatsidf+0xc0>
   1190c:	2023883a 	mov	r17,r4
   11910:	2020d7fa 	srli	r16,r4,31
   11914:	20002d16 	blt	r4,zero,119cc <__floatsidf+0xd4>
   11918:	8809883a 	mov	r4,r17
   1191c:	000106c0 	call	106c <__clzsi2>
   11920:	01410784 	movi	r5,1054
   11924:	288bc83a 	sub	r5,r5,r2
   11928:	01010cc4 	movi	r4,1075
   1192c:	2149c83a 	sub	r4,r4,r5
   11930:	00c007c4 	movi	r3,31
   11934:	1900160e 	bge	r3,r4,11990 <__floatsidf+0x98>
   11938:	00c104c4 	movi	r3,1043
   1193c:	1947c83a 	sub	r3,r3,r5
   11940:	88c6983a 	sll	r3,r17,r3
   11944:	00800434 	movhi	r2,16
   11948:	10bfffc4 	addi	r2,r2,-1
   1194c:	1886703a 	and	r3,r3,r2
   11950:	2941ffcc 	andi	r5,r5,2047
   11954:	800d883a 	mov	r6,r16
   11958:	0005883a 	mov	r2,zero
   1195c:	280a953a 	slli	r5,r5,20
   11960:	31803fcc 	andi	r6,r6,255
   11964:	01000434 	movhi	r4,16
   11968:	300c97fa 	slli	r6,r6,31
   1196c:	213fffc4 	addi	r4,r4,-1
   11970:	1906703a 	and	r3,r3,r4
   11974:	1946b03a 	or	r3,r3,r5
   11978:	1986b03a 	or	r3,r3,r6
   1197c:	dfc00217 	ldw	ra,8(sp)
   11980:	dc400117 	ldw	r17,4(sp)
   11984:	dc000017 	ldw	r16,0(sp)
   11988:	dec00304 	addi	sp,sp,12
   1198c:	f800283a 	ret
   11990:	00c002c4 	movi	r3,11
   11994:	1887c83a 	sub	r3,r3,r2
   11998:	88c6d83a 	srl	r3,r17,r3
   1199c:	8904983a 	sll	r2,r17,r4
   119a0:	01000434 	movhi	r4,16
   119a4:	213fffc4 	addi	r4,r4,-1
   119a8:	2941ffcc 	andi	r5,r5,2047
   119ac:	1906703a 	and	r3,r3,r4
   119b0:	800d883a 	mov	r6,r16
   119b4:	003fe906 	br	1195c <__alt_mem_Onchip_SRAM+0xf801195c>
   119b8:	000d883a 	mov	r6,zero
   119bc:	000b883a 	mov	r5,zero
   119c0:	0007883a 	mov	r3,zero
   119c4:	0005883a 	mov	r2,zero
   119c8:	003fe406 	br	1195c <__alt_mem_Onchip_SRAM+0xf801195c>
   119cc:	0123c83a 	sub	r17,zero,r4
   119d0:	003fd106 	br	11918 <__alt_mem_Onchip_SRAM+0xf8011918>

000119d4 <__floatunsidf>:
   119d4:	defffe04 	addi	sp,sp,-8
   119d8:	dc000015 	stw	r16,0(sp)
   119dc:	dfc00115 	stw	ra,4(sp)
   119e0:	2021883a 	mov	r16,r4
   119e4:	20002226 	beq	r4,zero,11a70 <__floatunsidf+0x9c>
   119e8:	000106c0 	call	106c <__clzsi2>
   119ec:	01010784 	movi	r4,1054
   119f0:	2089c83a 	sub	r4,r4,r2
   119f4:	01810cc4 	movi	r6,1075
   119f8:	310dc83a 	sub	r6,r6,r4
   119fc:	00c007c4 	movi	r3,31
   11a00:	1980120e 	bge	r3,r6,11a4c <__floatunsidf+0x78>
   11a04:	00c104c4 	movi	r3,1043
   11a08:	1907c83a 	sub	r3,r3,r4
   11a0c:	80ca983a 	sll	r5,r16,r3
   11a10:	00800434 	movhi	r2,16
   11a14:	10bfffc4 	addi	r2,r2,-1
   11a18:	2101ffcc 	andi	r4,r4,2047
   11a1c:	0021883a 	mov	r16,zero
   11a20:	288a703a 	and	r5,r5,r2
   11a24:	2008953a 	slli	r4,r4,20
   11a28:	00c00434 	movhi	r3,16
   11a2c:	18ffffc4 	addi	r3,r3,-1
   11a30:	28c6703a 	and	r3,r5,r3
   11a34:	8005883a 	mov	r2,r16
   11a38:	1906b03a 	or	r3,r3,r4
   11a3c:	dfc00117 	ldw	ra,4(sp)
   11a40:	dc000017 	ldw	r16,0(sp)
   11a44:	dec00204 	addi	sp,sp,8
   11a48:	f800283a 	ret
   11a4c:	00c002c4 	movi	r3,11
   11a50:	188bc83a 	sub	r5,r3,r2
   11a54:	814ad83a 	srl	r5,r16,r5
   11a58:	00c00434 	movhi	r3,16
   11a5c:	18ffffc4 	addi	r3,r3,-1
   11a60:	81a0983a 	sll	r16,r16,r6
   11a64:	2101ffcc 	andi	r4,r4,2047
   11a68:	28ca703a 	and	r5,r5,r3
   11a6c:	003fed06 	br	11a24 <__alt_mem_Onchip_SRAM+0xf8011a24>
   11a70:	0009883a 	mov	r4,zero
   11a74:	000b883a 	mov	r5,zero
   11a78:	003fea06 	br	11a24 <__alt_mem_Onchip_SRAM+0xf8011a24>

00011a7c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   11a7c:	defffe04 	addi	sp,sp,-8
   11a80:	dfc00115 	stw	ra,4(sp)
   11a84:	df000015 	stw	fp,0(sp)
   11a88:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   11a8c:	d0a01617 	ldw	r2,-32680(gp)
   11a90:	10000326 	beq	r2,zero,11aa0 <alt_get_errno+0x24>
   11a94:	d0a01617 	ldw	r2,-32680(gp)
   11a98:	103ee83a 	callr	r2
   11a9c:	00000106 	br	11aa4 <alt_get_errno+0x28>
   11aa0:	d0a71104 	addi	r2,gp,-25532
}
   11aa4:	e037883a 	mov	sp,fp
   11aa8:	dfc00117 	ldw	ra,4(sp)
   11aac:	df000017 	ldw	fp,0(sp)
   11ab0:	dec00204 	addi	sp,sp,8
   11ab4:	f800283a 	ret

00011ab8 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   11ab8:	defffb04 	addi	sp,sp,-20
   11abc:	dfc00415 	stw	ra,16(sp)
   11ac0:	df000315 	stw	fp,12(sp)
   11ac4:	df000304 	addi	fp,sp,12
   11ac8:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   11acc:	e0bfff17 	ldw	r2,-4(fp)
   11ad0:	10000816 	blt	r2,zero,11af4 <close+0x3c>
   11ad4:	01400304 	movi	r5,12
   11ad8:	e13fff17 	ldw	r4,-4(fp)
   11adc:	0000eb00 	call	eb0 <__mulsi3>
   11ae0:	1007883a 	mov	r3,r2
   11ae4:	00800074 	movhi	r2,1
   11ae8:	109d8b04 	addi	r2,r2,30252
   11aec:	1885883a 	add	r2,r3,r2
   11af0:	00000106 	br	11af8 <close+0x40>
   11af4:	0005883a 	mov	r2,zero
   11af8:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
   11afc:	e0bffd17 	ldw	r2,-12(fp)
   11b00:	10001926 	beq	r2,zero,11b68 <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   11b04:	e0bffd17 	ldw	r2,-12(fp)
   11b08:	10800017 	ldw	r2,0(r2)
   11b0c:	10800417 	ldw	r2,16(r2)
   11b10:	10000626 	beq	r2,zero,11b2c <close+0x74>
   11b14:	e0bffd17 	ldw	r2,-12(fp)
   11b18:	10800017 	ldw	r2,0(r2)
   11b1c:	10800417 	ldw	r2,16(r2)
   11b20:	e13ffd17 	ldw	r4,-12(fp)
   11b24:	103ee83a 	callr	r2
   11b28:	00000106 	br	11b30 <close+0x78>
   11b2c:	0005883a 	mov	r2,zero
   11b30:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   11b34:	e13fff17 	ldw	r4,-4(fp)
   11b38:	00123940 	call	12394 <alt_release_fd>
    if (rval < 0)
   11b3c:	e0bffe17 	ldw	r2,-8(fp)
   11b40:	1000070e 	bge	r2,zero,11b60 <close+0xa8>
    {
      ALT_ERRNO = -rval;
   11b44:	0011a7c0 	call	11a7c <alt_get_errno>
   11b48:	1007883a 	mov	r3,r2
   11b4c:	e0bffe17 	ldw	r2,-8(fp)
   11b50:	0085c83a 	sub	r2,zero,r2
   11b54:	18800015 	stw	r2,0(r3)
      return -1;
   11b58:	00bfffc4 	movi	r2,-1
   11b5c:	00000706 	br	11b7c <close+0xc4>
    }
    return 0;
   11b60:	0005883a 	mov	r2,zero
   11b64:	00000506 	br	11b7c <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   11b68:	0011a7c0 	call	11a7c <alt_get_errno>
   11b6c:	1007883a 	mov	r3,r2
   11b70:	00801444 	movi	r2,81
   11b74:	18800015 	stw	r2,0(r3)
    return -1;
   11b78:	00bfffc4 	movi	r2,-1
  }
}
   11b7c:	e037883a 	mov	sp,fp
   11b80:	dfc00117 	ldw	ra,4(sp)
   11b84:	df000017 	ldw	fp,0(sp)
   11b88:	dec00204 	addi	sp,sp,8
   11b8c:	f800283a 	ret

00011b90 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   11b90:	defffc04 	addi	sp,sp,-16
   11b94:	df000315 	stw	fp,12(sp)
   11b98:	df000304 	addi	fp,sp,12
   11b9c:	e13ffd15 	stw	r4,-12(fp)
   11ba0:	e17ffe15 	stw	r5,-8(fp)
   11ba4:	e1bfff15 	stw	r6,-4(fp)
  return len;
   11ba8:	e0bfff17 	ldw	r2,-4(fp)
}
   11bac:	e037883a 	mov	sp,fp
   11bb0:	df000017 	ldw	fp,0(sp)
   11bb4:	dec00104 	addi	sp,sp,4
   11bb8:	f800283a 	ret

00011bbc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   11bbc:	defffe04 	addi	sp,sp,-8
   11bc0:	dfc00115 	stw	ra,4(sp)
   11bc4:	df000015 	stw	fp,0(sp)
   11bc8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   11bcc:	d0a01617 	ldw	r2,-32680(gp)
   11bd0:	10000326 	beq	r2,zero,11be0 <alt_get_errno+0x24>
   11bd4:	d0a01617 	ldw	r2,-32680(gp)
   11bd8:	103ee83a 	callr	r2
   11bdc:	00000106 	br	11be4 <alt_get_errno+0x28>
   11be0:	d0a71104 	addi	r2,gp,-25532
}
   11be4:	e037883a 	mov	sp,fp
   11be8:	dfc00117 	ldw	ra,4(sp)
   11bec:	df000017 	ldw	fp,0(sp)
   11bf0:	dec00204 	addi	sp,sp,8
   11bf4:	f800283a 	ret

00011bf8 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   11bf8:	defffb04 	addi	sp,sp,-20
   11bfc:	dfc00415 	stw	ra,16(sp)
   11c00:	df000315 	stw	fp,12(sp)
   11c04:	df000304 	addi	fp,sp,12
   11c08:	e13ffe15 	stw	r4,-8(fp)
   11c0c:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   11c10:	e0bffe17 	ldw	r2,-8(fp)
   11c14:	10000816 	blt	r2,zero,11c38 <fstat+0x40>
   11c18:	01400304 	movi	r5,12
   11c1c:	e13ffe17 	ldw	r4,-8(fp)
   11c20:	0000eb00 	call	eb0 <__mulsi3>
   11c24:	1007883a 	mov	r3,r2
   11c28:	00800074 	movhi	r2,1
   11c2c:	109d8b04 	addi	r2,r2,30252
   11c30:	1885883a 	add	r2,r3,r2
   11c34:	00000106 	br	11c3c <fstat+0x44>
   11c38:	0005883a 	mov	r2,zero
   11c3c:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
   11c40:	e0bffd17 	ldw	r2,-12(fp)
   11c44:	10001026 	beq	r2,zero,11c88 <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   11c48:	e0bffd17 	ldw	r2,-12(fp)
   11c4c:	10800017 	ldw	r2,0(r2)
   11c50:	10800817 	ldw	r2,32(r2)
   11c54:	10000726 	beq	r2,zero,11c74 <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
   11c58:	e0bffd17 	ldw	r2,-12(fp)
   11c5c:	10800017 	ldw	r2,0(r2)
   11c60:	10800817 	ldw	r2,32(r2)
   11c64:	e17fff17 	ldw	r5,-4(fp)
   11c68:	e13ffd17 	ldw	r4,-12(fp)
   11c6c:	103ee83a 	callr	r2
   11c70:	00000a06 	br	11c9c <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   11c74:	e0bfff17 	ldw	r2,-4(fp)
   11c78:	00c80004 	movi	r3,8192
   11c7c:	10c00115 	stw	r3,4(r2)
      return 0;
   11c80:	0005883a 	mov	r2,zero
   11c84:	00000506 	br	11c9c <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   11c88:	0011bbc0 	call	11bbc <alt_get_errno>
   11c8c:	1007883a 	mov	r3,r2
   11c90:	00801444 	movi	r2,81
   11c94:	18800015 	stw	r2,0(r3)
    return -1;
   11c98:	00bfffc4 	movi	r2,-1
  }
}
   11c9c:	e037883a 	mov	sp,fp
   11ca0:	dfc00117 	ldw	ra,4(sp)
   11ca4:	df000017 	ldw	fp,0(sp)
   11ca8:	dec00204 	addi	sp,sp,8
   11cac:	f800283a 	ret

00011cb0 <gettimeofday>:
   11cb0:	defff404 	addi	sp,sp,-48
   11cb4:	dfc00b15 	stw	ra,44(sp)
   11cb8:	df000a15 	stw	fp,40(sp)
   11cbc:	dd000915 	stw	r20,36(sp)
   11cc0:	dcc00815 	stw	r19,32(sp)
   11cc4:	dc800715 	stw	r18,28(sp)
   11cc8:	dc400615 	stw	r17,24(sp)
   11ccc:	dc000515 	stw	r16,20(sp)
   11cd0:	df000a04 	addi	fp,sp,40
   11cd4:	e13ff915 	stw	r4,-28(fp)
   11cd8:	e17ffa15 	stw	r5,-24(fp)
   11cdc:	e0bffa17 	ldw	r2,-24(fp)
   11ce0:	e0bff615 	stw	r2,-40(fp)
   11ce4:	d0a72017 	ldw	r2,-25472(gp)
   11ce8:	e0bff715 	stw	r2,-36(fp)
   11cec:	d0a71f17 	ldw	r2,-25476(gp)
   11cf0:	e0bff815 	stw	r2,-32(fp)
   11cf4:	e0bff817 	ldw	r2,-32(fp)
   11cf8:	10005f26 	beq	r2,zero,11e78 <gettimeofday+0x1c8>
   11cfc:	d0a71a17 	ldw	r2,-25496(gp)
   11d00:	1029883a 	mov	r20,r2
   11d04:	e17ff817 	ldw	r5,-32(fp)
   11d08:	e13ff717 	ldw	r4,-36(fp)
   11d0c:	0000df40 	call	df4 <__udivsi3>
   11d10:	a085883a 	add	r2,r20,r2
   11d14:	1007883a 	mov	r3,r2
   11d18:	e0bff917 	ldw	r2,-28(fp)
   11d1c:	10c00015 	stw	r3,0(r2)
   11d20:	d0a71b17 	ldw	r2,-25492(gp)
   11d24:	1029883a 	mov	r20,r2
   11d28:	e0bff717 	ldw	r2,-36(fp)
   11d2c:	1021883a 	mov	r16,r2
   11d30:	0023883a 	mov	r17,zero
   11d34:	e17ff817 	ldw	r5,-32(fp)
   11d38:	010003f4 	movhi	r4,15
   11d3c:	21109004 	addi	r4,r4,16960
   11d40:	0000df40 	call	df4 <__udivsi3>
   11d44:	1025883a 	mov	r18,r2
   11d48:	0027883a 	mov	r19,zero
   11d4c:	900d883a 	mov	r6,r18
   11d50:	980f883a 	mov	r7,r19
   11d54:	8009883a 	mov	r4,r16
   11d58:	880b883a 	mov	r5,r17
   11d5c:	000e5700 	call	e570 <__muldi3>
   11d60:	1009883a 	mov	r4,r2
   11d64:	180b883a 	mov	r5,r3
   11d68:	2005883a 	mov	r2,r4
   11d6c:	2807883a 	mov	r3,r5
   11d70:	018003f4 	movhi	r6,15
   11d74:	31909004 	addi	r6,r6,16960
   11d78:	000f883a 	mov	r7,zero
   11d7c:	1009883a 	mov	r4,r2
   11d80:	180b883a 	mov	r5,r3
   11d84:	000ec780 	call	ec78 <__umoddi3>
   11d88:	1009883a 	mov	r4,r2
   11d8c:	180b883a 	mov	r5,r3
   11d90:	2005883a 	mov	r2,r4
   11d94:	2807883a 	mov	r3,r5
   11d98:	a085883a 	add	r2,r20,r2
   11d9c:	1007883a 	mov	r3,r2
   11da0:	e0bff917 	ldw	r2,-28(fp)
   11da4:	10c00115 	stw	r3,4(r2)
   11da8:	00001406 	br	11dfc <gettimeofday+0x14c>
   11dac:	e0bff917 	ldw	r2,-28(fp)
   11db0:	10800017 	ldw	r2,0(r2)
   11db4:	00800516 	blt	zero,r2,11dcc <gettimeofday+0x11c>
   11db8:	e0bff917 	ldw	r2,-28(fp)
   11dbc:	10000015 	stw	zero,0(r2)
   11dc0:	e0bff917 	ldw	r2,-28(fp)
   11dc4:	10000115 	stw	zero,4(r2)
   11dc8:	00000f06 	br	11e08 <gettimeofday+0x158>
   11dcc:	e0bff917 	ldw	r2,-28(fp)
   11dd0:	10800017 	ldw	r2,0(r2)
   11dd4:	10ffffc4 	addi	r3,r2,-1
   11dd8:	e0bff917 	ldw	r2,-28(fp)
   11ddc:	10c00015 	stw	r3,0(r2)
   11de0:	e0bff917 	ldw	r2,-28(fp)
   11de4:	10c00117 	ldw	r3,4(r2)
   11de8:	008003f4 	movhi	r2,15
   11dec:	10909004 	addi	r2,r2,16960
   11df0:	1887883a 	add	r3,r3,r2
   11df4:	e0bff917 	ldw	r2,-28(fp)
   11df8:	10c00115 	stw	r3,4(r2)
   11dfc:	e0bff917 	ldw	r2,-28(fp)
   11e00:	10800117 	ldw	r2,4(r2)
   11e04:	103fe916 	blt	r2,zero,11dac <__alt_mem_Onchip_SRAM+0xf8011dac>
   11e08:	00000c06 	br	11e3c <gettimeofday+0x18c>
   11e0c:	e0bff917 	ldw	r2,-28(fp)
   11e10:	10800017 	ldw	r2,0(r2)
   11e14:	10c00044 	addi	r3,r2,1
   11e18:	e0bff917 	ldw	r2,-28(fp)
   11e1c:	10c00015 	stw	r3,0(r2)
   11e20:	e0bff917 	ldw	r2,-28(fp)
   11e24:	10c00117 	ldw	r3,4(r2)
   11e28:	00bffc74 	movhi	r2,65521
   11e2c:	10af7004 	addi	r2,r2,-16960
   11e30:	1887883a 	add	r3,r3,r2
   11e34:	e0bff917 	ldw	r2,-28(fp)
   11e38:	10c00115 	stw	r3,4(r2)
   11e3c:	e0bff917 	ldw	r2,-28(fp)
   11e40:	10c00117 	ldw	r3,4(r2)
   11e44:	008003f4 	movhi	r2,15
   11e48:	10908fc4 	addi	r2,r2,16959
   11e4c:	10ffef16 	blt	r2,r3,11e0c <__alt_mem_Onchip_SRAM+0xf8011e0c>
   11e50:	e0bff617 	ldw	r2,-40(fp)
   11e54:	10000626 	beq	r2,zero,11e70 <gettimeofday+0x1c0>
   11e58:	d0e71817 	ldw	r3,-25504(gp)
   11e5c:	e0bff617 	ldw	r2,-40(fp)
   11e60:	10c00015 	stw	r3,0(r2)
   11e64:	d0e71917 	ldw	r3,-25500(gp)
   11e68:	e0bff617 	ldw	r2,-40(fp)
   11e6c:	10c00115 	stw	r3,4(r2)
   11e70:	0005883a 	mov	r2,zero
   11e74:	00000106 	br	11e7c <gettimeofday+0x1cc>
   11e78:	00bfde84 	movi	r2,-134
   11e7c:	e6fffb04 	addi	sp,fp,-20
   11e80:	dfc00617 	ldw	ra,24(sp)
   11e84:	df000517 	ldw	fp,20(sp)
   11e88:	dd000417 	ldw	r20,16(sp)
   11e8c:	dcc00317 	ldw	r19,12(sp)
   11e90:	dc800217 	ldw	r18,8(sp)
   11e94:	dc400117 	ldw	r17,4(sp)
   11e98:	dc000017 	ldw	r16,0(sp)
   11e9c:	dec00704 	addi	sp,sp,28
   11ea0:	f800283a 	ret

00011ea4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   11ea4:	defffe04 	addi	sp,sp,-8
   11ea8:	dfc00115 	stw	ra,4(sp)
   11eac:	df000015 	stw	fp,0(sp)
   11eb0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   11eb4:	d0a01617 	ldw	r2,-32680(gp)
   11eb8:	10000326 	beq	r2,zero,11ec8 <alt_get_errno+0x24>
   11ebc:	d0a01617 	ldw	r2,-32680(gp)
   11ec0:	103ee83a 	callr	r2
   11ec4:	00000106 	br	11ecc <alt_get_errno+0x28>
   11ec8:	d0a71104 	addi	r2,gp,-25532
}
   11ecc:	e037883a 	mov	sp,fp
   11ed0:	dfc00117 	ldw	ra,4(sp)
   11ed4:	df000017 	ldw	fp,0(sp)
   11ed8:	dec00204 	addi	sp,sp,8
   11edc:	f800283a 	ret

00011ee0 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   11ee0:	deffed04 	addi	sp,sp,-76
   11ee4:	dfc01215 	stw	ra,72(sp)
   11ee8:	df001115 	stw	fp,68(sp)
   11eec:	df001104 	addi	fp,sp,68
   11ef0:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   11ef4:	e0bfff17 	ldw	r2,-4(fp)
   11ef8:	10000816 	blt	r2,zero,11f1c <isatty+0x3c>
   11efc:	01400304 	movi	r5,12
   11f00:	e13fff17 	ldw	r4,-4(fp)
   11f04:	0000eb00 	call	eb0 <__mulsi3>
   11f08:	1007883a 	mov	r3,r2
   11f0c:	00800074 	movhi	r2,1
   11f10:	109d8b04 	addi	r2,r2,30252
   11f14:	1885883a 	add	r2,r3,r2
   11f18:	00000106 	br	11f20 <isatty+0x40>
   11f1c:	0005883a 	mov	r2,zero
   11f20:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
   11f24:	e0bfef17 	ldw	r2,-68(fp)
   11f28:	10000e26 	beq	r2,zero,11f64 <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   11f2c:	e0bfef17 	ldw	r2,-68(fp)
   11f30:	10800017 	ldw	r2,0(r2)
   11f34:	10800817 	ldw	r2,32(r2)
   11f38:	1000021e 	bne	r2,zero,11f44 <isatty+0x64>
    {
      return 1;
   11f3c:	00800044 	movi	r2,1
   11f40:	00000d06 	br	11f78 <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   11f44:	e0bff004 	addi	r2,fp,-64
   11f48:	100b883a 	mov	r5,r2
   11f4c:	e13fff17 	ldw	r4,-4(fp)
   11f50:	0011bf80 	call	11bf8 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   11f54:	e0bff117 	ldw	r2,-60(fp)
   11f58:	10880020 	cmpeqi	r2,r2,8192
   11f5c:	10803fcc 	andi	r2,r2,255
   11f60:	00000506 	br	11f78 <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   11f64:	0011ea40 	call	11ea4 <alt_get_errno>
   11f68:	1007883a 	mov	r3,r2
   11f6c:	00801444 	movi	r2,81
   11f70:	18800015 	stw	r2,0(r3)
    return 0;
   11f74:	0005883a 	mov	r2,zero
  }
}
   11f78:	e037883a 	mov	sp,fp
   11f7c:	dfc00117 	ldw	ra,4(sp)
   11f80:	df000017 	ldw	fp,0(sp)
   11f84:	dec00204 	addi	sp,sp,8
   11f88:	f800283a 	ret

00011f8c <alt_load_section>:
   11f8c:	defffc04 	addi	sp,sp,-16
   11f90:	df000315 	stw	fp,12(sp)
   11f94:	df000304 	addi	fp,sp,12
   11f98:	e13ffd15 	stw	r4,-12(fp)
   11f9c:	e17ffe15 	stw	r5,-8(fp)
   11fa0:	e1bfff15 	stw	r6,-4(fp)
   11fa4:	e0fffe17 	ldw	r3,-8(fp)
   11fa8:	e0bffd17 	ldw	r2,-12(fp)
   11fac:	18800c26 	beq	r3,r2,11fe0 <alt_load_section+0x54>
   11fb0:	00000806 	br	11fd4 <alt_load_section+0x48>
   11fb4:	e0bffe17 	ldw	r2,-8(fp)
   11fb8:	10c00104 	addi	r3,r2,4
   11fbc:	e0fffe15 	stw	r3,-8(fp)
   11fc0:	e0fffd17 	ldw	r3,-12(fp)
   11fc4:	19000104 	addi	r4,r3,4
   11fc8:	e13ffd15 	stw	r4,-12(fp)
   11fcc:	18c00017 	ldw	r3,0(r3)
   11fd0:	10c00015 	stw	r3,0(r2)
   11fd4:	e0fffe17 	ldw	r3,-8(fp)
   11fd8:	e0bfff17 	ldw	r2,-4(fp)
   11fdc:	18bff51e 	bne	r3,r2,11fb4 <__alt_mem_Onchip_SRAM+0xf8011fb4>
   11fe0:	0001883a 	nop
   11fe4:	e037883a 	mov	sp,fp
   11fe8:	df000017 	ldw	fp,0(sp)
   11fec:	dec00104 	addi	sp,sp,4
   11ff0:	f800283a 	ret

00011ff4 <alt_load>:
   11ff4:	defffe04 	addi	sp,sp,-8
   11ff8:	dfc00115 	stw	ra,4(sp)
   11ffc:	df000015 	stw	fp,0(sp)
   12000:	d839883a 	mov	fp,sp
   12004:	018000b4 	movhi	r6,2
   12008:	31a24a04 	addi	r6,r6,-30424
   1200c:	01400074 	movhi	r5,1
   12010:	295b5804 	addi	r5,r5,28000
   12014:	010000b4 	movhi	r4,2
   12018:	21224a04 	addi	r4,r4,-30424
   1201c:	0011f8c0 	call	11f8c <alt_load_section>
   12020:	01800034 	movhi	r6,0
   12024:	31808c04 	addi	r6,r6,560
   12028:	01400034 	movhi	r5,0
   1202c:	29400804 	addi	r5,r5,32
   12030:	01000034 	movhi	r4,0
   12034:	21000804 	addi	r4,r4,32
   12038:	0011f8c0 	call	11f8c <alt_load_section>
   1203c:	01800074 	movhi	r6,1
   12040:	319b5804 	addi	r6,r6,28000
   12044:	01400074 	movhi	r5,1
   12048:	295a6104 	addi	r5,r5,27012
   1204c:	01000074 	movhi	r4,1
   12050:	211a6104 	addi	r4,r4,27012
   12054:	0011f8c0 	call	11f8c <alt_load_section>
   12058:	00158080 	call	15808 <alt_dcache_flush_all>
   1205c:	0015a580 	call	15a58 <alt_icache_flush_all>
   12060:	0001883a 	nop
   12064:	e037883a 	mov	sp,fp
   12068:	dfc00117 	ldw	ra,4(sp)
   1206c:	df000017 	ldw	fp,0(sp)
   12070:	dec00204 	addi	sp,sp,8
   12074:	f800283a 	ret

00012078 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   12078:	defffe04 	addi	sp,sp,-8
   1207c:	dfc00115 	stw	ra,4(sp)
   12080:	df000015 	stw	fp,0(sp)
   12084:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   12088:	d0a01617 	ldw	r2,-32680(gp)
   1208c:	10000326 	beq	r2,zero,1209c <alt_get_errno+0x24>
   12090:	d0a01617 	ldw	r2,-32680(gp)
   12094:	103ee83a 	callr	r2
   12098:	00000106 	br	120a0 <alt_get_errno+0x28>
   1209c:	d0a71104 	addi	r2,gp,-25532
}
   120a0:	e037883a 	mov	sp,fp
   120a4:	dfc00117 	ldw	ra,4(sp)
   120a8:	df000017 	ldw	fp,0(sp)
   120ac:	dec00204 	addi	sp,sp,8
   120b0:	f800283a 	ret

000120b4 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   120b4:	defff904 	addi	sp,sp,-28
   120b8:	dfc00615 	stw	ra,24(sp)
   120bc:	df000515 	stw	fp,20(sp)
   120c0:	df000504 	addi	fp,sp,20
   120c4:	e13ffd15 	stw	r4,-12(fp)
   120c8:	e17ffe15 	stw	r5,-8(fp)
   120cc:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   120d0:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   120d4:	e0bffd17 	ldw	r2,-12(fp)
   120d8:	10000816 	blt	r2,zero,120fc <lseek+0x48>
   120dc:	01400304 	movi	r5,12
   120e0:	e13ffd17 	ldw	r4,-12(fp)
   120e4:	0000eb00 	call	eb0 <__mulsi3>
   120e8:	1007883a 	mov	r3,r2
   120ec:	00800074 	movhi	r2,1
   120f0:	109d8b04 	addi	r2,r2,30252
   120f4:	1885883a 	add	r2,r3,r2
   120f8:	00000106 	br	12100 <lseek+0x4c>
   120fc:	0005883a 	mov	r2,zero
   12100:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
   12104:	e0bffc17 	ldw	r2,-16(fp)
   12108:	10001026 	beq	r2,zero,1214c <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   1210c:	e0bffc17 	ldw	r2,-16(fp)
   12110:	10800017 	ldw	r2,0(r2)
   12114:	10800717 	ldw	r2,28(r2)
   12118:	10000926 	beq	r2,zero,12140 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   1211c:	e0bffc17 	ldw	r2,-16(fp)
   12120:	10800017 	ldw	r2,0(r2)
   12124:	10800717 	ldw	r2,28(r2)
   12128:	e1bfff17 	ldw	r6,-4(fp)
   1212c:	e17ffe17 	ldw	r5,-8(fp)
   12130:	e13ffc17 	ldw	r4,-16(fp)
   12134:	103ee83a 	callr	r2
   12138:	e0bffb15 	stw	r2,-20(fp)
   1213c:	00000506 	br	12154 <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   12140:	00bfde84 	movi	r2,-134
   12144:	e0bffb15 	stw	r2,-20(fp)
   12148:	00000206 	br	12154 <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
   1214c:	00bfebc4 	movi	r2,-81
   12150:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
   12154:	e0bffb17 	ldw	r2,-20(fp)
   12158:	1000070e 	bge	r2,zero,12178 <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
   1215c:	00120780 	call	12078 <alt_get_errno>
   12160:	1007883a 	mov	r3,r2
   12164:	e0bffb17 	ldw	r2,-20(fp)
   12168:	0085c83a 	sub	r2,zero,r2
   1216c:	18800015 	stw	r2,0(r3)
    rc = -1;
   12170:	00bfffc4 	movi	r2,-1
   12174:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
   12178:	e0bffb17 	ldw	r2,-20(fp)
}
   1217c:	e037883a 	mov	sp,fp
   12180:	dfc00117 	ldw	ra,4(sp)
   12184:	df000017 	ldw	fp,0(sp)
   12188:	dec00204 	addi	sp,sp,8
   1218c:	f800283a 	ret

00012190 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   12190:	defffd04 	addi	sp,sp,-12
   12194:	dfc00215 	stw	ra,8(sp)
   12198:	df000115 	stw	fp,4(sp)
   1219c:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   121a0:	0009883a 	mov	r4,zero
   121a4:	00127dc0 	call	127dc <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   121a8:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   121ac:	00128140 	call	12814 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   121b0:	01800074 	movhi	r6,1
   121b4:	319b3604 	addi	r6,r6,27864
   121b8:	01400074 	movhi	r5,1
   121bc:	295b3604 	addi	r5,r5,27864
   121c0:	01000074 	movhi	r4,1
   121c4:	211b3604 	addi	r4,r4,27864
   121c8:	0015dfc0 	call	15dfc <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   121cc:	00159080 	call	15908 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   121d0:	01000074 	movhi	r4,1
   121d4:	21165a04 	addi	r4,r4,22888
   121d8:	00165f00 	call	165f0 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   121dc:	d0a71c17 	ldw	r2,-25488(gp)
   121e0:	d0e71d17 	ldw	r3,-25484(gp)
   121e4:	d1271e17 	ldw	r4,-25480(gp)
   121e8:	200d883a 	mov	r6,r4
   121ec:	180b883a 	mov	r5,r3
   121f0:	1009883a 	mov	r4,r2
   121f4:	0000c080 	call	c08 <main>
   121f8:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   121fc:	01000044 	movi	r4,1
   12200:	0011ab80 	call	11ab8 <close>
  exit (result);
   12204:	e13fff17 	ldw	r4,-4(fp)
   12208:	00166040 	call	16604 <exit>

0001220c <__malloc_lock>:
   1220c:	defffe04 	addi	sp,sp,-8
   12210:	df000115 	stw	fp,4(sp)
   12214:	df000104 	addi	fp,sp,4
   12218:	e13fff15 	stw	r4,-4(fp)
   1221c:	0001883a 	nop
   12220:	e037883a 	mov	sp,fp
   12224:	df000017 	ldw	fp,0(sp)
   12228:	dec00104 	addi	sp,sp,4
   1222c:	f800283a 	ret

00012230 <__malloc_unlock>:
   12230:	defffe04 	addi	sp,sp,-8
   12234:	df000115 	stw	fp,4(sp)
   12238:	df000104 	addi	fp,sp,4
   1223c:	e13fff15 	stw	r4,-4(fp)
   12240:	0001883a 	nop
   12244:	e037883a 	mov	sp,fp
   12248:	df000017 	ldw	fp,0(sp)
   1224c:	dec00104 	addi	sp,sp,4
   12250:	f800283a 	ret

00012254 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   12254:	defffe04 	addi	sp,sp,-8
   12258:	dfc00115 	stw	ra,4(sp)
   1225c:	df000015 	stw	fp,0(sp)
   12260:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   12264:	d0a01617 	ldw	r2,-32680(gp)
   12268:	10000326 	beq	r2,zero,12278 <alt_get_errno+0x24>
   1226c:	d0a01617 	ldw	r2,-32680(gp)
   12270:	103ee83a 	callr	r2
   12274:	00000106 	br	1227c <alt_get_errno+0x28>
   12278:	d0a71104 	addi	r2,gp,-25532
}
   1227c:	e037883a 	mov	sp,fp
   12280:	dfc00117 	ldw	ra,4(sp)
   12284:	df000017 	ldw	fp,0(sp)
   12288:	dec00204 	addi	sp,sp,8
   1228c:	f800283a 	ret

00012290 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   12290:	defff904 	addi	sp,sp,-28
   12294:	dfc00615 	stw	ra,24(sp)
   12298:	df000515 	stw	fp,20(sp)
   1229c:	df000504 	addi	fp,sp,20
   122a0:	e13ffd15 	stw	r4,-12(fp)
   122a4:	e17ffe15 	stw	r5,-8(fp)
   122a8:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   122ac:	e0bffd17 	ldw	r2,-12(fp)
   122b0:	10000816 	blt	r2,zero,122d4 <read+0x44>
   122b4:	01400304 	movi	r5,12
   122b8:	e13ffd17 	ldw	r4,-12(fp)
   122bc:	0000eb00 	call	eb0 <__mulsi3>
   122c0:	1007883a 	mov	r3,r2
   122c4:	00800074 	movhi	r2,1
   122c8:	109d8b04 	addi	r2,r2,30252
   122cc:	1885883a 	add	r2,r3,r2
   122d0:	00000106 	br	122d8 <read+0x48>
   122d4:	0005883a 	mov	r2,zero
   122d8:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   122dc:	e0bffb17 	ldw	r2,-20(fp)
   122e0:	10002226 	beq	r2,zero,1236c <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   122e4:	e0bffb17 	ldw	r2,-20(fp)
   122e8:	10800217 	ldw	r2,8(r2)
   122ec:	108000cc 	andi	r2,r2,3
   122f0:	10800060 	cmpeqi	r2,r2,1
   122f4:	1000181e 	bne	r2,zero,12358 <read+0xc8>
        (fd->dev->read))
   122f8:	e0bffb17 	ldw	r2,-20(fp)
   122fc:	10800017 	ldw	r2,0(r2)
   12300:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   12304:	10001426 	beq	r2,zero,12358 <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   12308:	e0bffb17 	ldw	r2,-20(fp)
   1230c:	10800017 	ldw	r2,0(r2)
   12310:	10800517 	ldw	r2,20(r2)
   12314:	e0ffff17 	ldw	r3,-4(fp)
   12318:	180d883a 	mov	r6,r3
   1231c:	e17ffe17 	ldw	r5,-8(fp)
   12320:	e13ffb17 	ldw	r4,-20(fp)
   12324:	103ee83a 	callr	r2
   12328:	e0bffc15 	stw	r2,-16(fp)
   1232c:	e0bffc17 	ldw	r2,-16(fp)
   12330:	1000070e 	bge	r2,zero,12350 <read+0xc0>
        {
          ALT_ERRNO = -rval;
   12334:	00122540 	call	12254 <alt_get_errno>
   12338:	1007883a 	mov	r3,r2
   1233c:	e0bffc17 	ldw	r2,-16(fp)
   12340:	0085c83a 	sub	r2,zero,r2
   12344:	18800015 	stw	r2,0(r3)
          return -1;
   12348:	00bfffc4 	movi	r2,-1
   1234c:	00000c06 	br	12380 <read+0xf0>
        }
        return rval;
   12350:	e0bffc17 	ldw	r2,-16(fp)
   12354:	00000a06 	br	12380 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
   12358:	00122540 	call	12254 <alt_get_errno>
   1235c:	1007883a 	mov	r3,r2
   12360:	00800344 	movi	r2,13
   12364:	18800015 	stw	r2,0(r3)
   12368:	00000406 	br	1237c <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   1236c:	00122540 	call	12254 <alt_get_errno>
   12370:	1007883a 	mov	r3,r2
   12374:	00801444 	movi	r2,81
   12378:	18800015 	stw	r2,0(r3)
  }
  return -1;
   1237c:	00bfffc4 	movi	r2,-1
}
   12380:	e037883a 	mov	sp,fp
   12384:	dfc00117 	ldw	ra,4(sp)
   12388:	df000017 	ldw	fp,0(sp)
   1238c:	dec00204 	addi	sp,sp,8
   12390:	f800283a 	ret

00012394 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   12394:	defffc04 	addi	sp,sp,-16
   12398:	dfc00315 	stw	ra,12(sp)
   1239c:	df000215 	stw	fp,8(sp)
   123a0:	dc000115 	stw	r16,4(sp)
   123a4:	df000204 	addi	fp,sp,8
   123a8:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
   123ac:	e0bffe17 	ldw	r2,-8(fp)
   123b0:	108000d0 	cmplti	r2,r2,3
   123b4:	1000111e 	bne	r2,zero,123fc <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
   123b8:	04000074 	movhi	r16,1
   123bc:	841d8b04 	addi	r16,r16,30252
   123c0:	e0bffe17 	ldw	r2,-8(fp)
   123c4:	01400304 	movi	r5,12
   123c8:	1009883a 	mov	r4,r2
   123cc:	0000eb00 	call	eb0 <__mulsi3>
   123d0:	8085883a 	add	r2,r16,r2
   123d4:	10800204 	addi	r2,r2,8
   123d8:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   123dc:	04000074 	movhi	r16,1
   123e0:	841d8b04 	addi	r16,r16,30252
   123e4:	e0bffe17 	ldw	r2,-8(fp)
   123e8:	01400304 	movi	r5,12
   123ec:	1009883a 	mov	r4,r2
   123f0:	0000eb00 	call	eb0 <__mulsi3>
   123f4:	8085883a 	add	r2,r16,r2
   123f8:	10000015 	stw	zero,0(r2)
  }
}
   123fc:	0001883a 	nop
   12400:	e6ffff04 	addi	sp,fp,-4
   12404:	dfc00217 	ldw	ra,8(sp)
   12408:	df000117 	ldw	fp,4(sp)
   1240c:	dc000017 	ldw	r16,0(sp)
   12410:	dec00304 	addi	sp,sp,12
   12414:	f800283a 	ret

00012418 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   12418:	defff904 	addi	sp,sp,-28
   1241c:	df000615 	stw	fp,24(sp)
   12420:	df000604 	addi	fp,sp,24
   12424:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   12428:	0005303a 	rdctl	r2,status
   1242c:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   12430:	e0fffe17 	ldw	r3,-8(fp)
   12434:	00bfff84 	movi	r2,-2
   12438:	1884703a 	and	r2,r3,r2
   1243c:	1001703a 	wrctl	status,r2
  
  return context;
   12440:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   12444:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   12448:	d0a01717 	ldw	r2,-32676(gp)
   1244c:	10c000c4 	addi	r3,r2,3
   12450:	00bfff04 	movi	r2,-4
   12454:	1884703a 	and	r2,r3,r2
   12458:	d0a01715 	stw	r2,-32676(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   1245c:	d0e01717 	ldw	r3,-32676(gp)
   12460:	e0bfff17 	ldw	r2,-4(fp)
   12464:	1887883a 	add	r3,r3,r2
   12468:	00810034 	movhi	r2,1024
   1246c:	10800004 	addi	r2,r2,0
   12470:	10c0062e 	bgeu	r2,r3,1248c <sbrk+0x74>
   12474:	e0bffb17 	ldw	r2,-20(fp)
   12478:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   1247c:	e0bffa17 	ldw	r2,-24(fp)
   12480:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   12484:	00bfffc4 	movi	r2,-1
   12488:	00000b06 	br	124b8 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
   1248c:	d0a01717 	ldw	r2,-32676(gp)
   12490:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
   12494:	d0e01717 	ldw	r3,-32676(gp)
   12498:	e0bfff17 	ldw	r2,-4(fp)
   1249c:	1885883a 	add	r2,r3,r2
   124a0:	d0a01715 	stw	r2,-32676(gp)
   124a4:	e0bffb17 	ldw	r2,-20(fp)
   124a8:	e0bffc15 	stw	r2,-16(fp)
   124ac:	e0bffc17 	ldw	r2,-16(fp)
   124b0:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   124b4:	e0bffd17 	ldw	r2,-12(fp)
} 
   124b8:	e037883a 	mov	sp,fp
   124bc:	df000017 	ldw	fp,0(sp)
   124c0:	dec00104 	addi	sp,sp,4
   124c4:	f800283a 	ret

000124c8 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   124c8:	defffa04 	addi	sp,sp,-24
   124cc:	df000515 	stw	fp,20(sp)
   124d0:	df000504 	addi	fp,sp,20
   124d4:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   124d8:	0005303a 	rdctl	r2,status
   124dc:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   124e0:	e0fffc17 	ldw	r3,-16(fp)
   124e4:	00bfff84 	movi	r2,-2
   124e8:	1884703a 	and	r2,r3,r2
   124ec:	1001703a 	wrctl	status,r2
  
  return context;
   124f0:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   124f4:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   124f8:	e0bfff17 	ldw	r2,-4(fp)
   124fc:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   12500:	e0bffd17 	ldw	r2,-12(fp)
   12504:	10800017 	ldw	r2,0(r2)
   12508:	e0fffd17 	ldw	r3,-12(fp)
   1250c:	18c00117 	ldw	r3,4(r3)
   12510:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   12514:	e0bffd17 	ldw	r2,-12(fp)
   12518:	10800117 	ldw	r2,4(r2)
   1251c:	e0fffd17 	ldw	r3,-12(fp)
   12520:	18c00017 	ldw	r3,0(r3)
   12524:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   12528:	e0bffd17 	ldw	r2,-12(fp)
   1252c:	e0fffd17 	ldw	r3,-12(fp)
   12530:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   12534:	e0bffd17 	ldw	r2,-12(fp)
   12538:	e0fffd17 	ldw	r3,-12(fp)
   1253c:	10c00015 	stw	r3,0(r2)
   12540:	e0bffb17 	ldw	r2,-20(fp)
   12544:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   12548:	e0bffe17 	ldw	r2,-8(fp)
   1254c:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   12550:	0001883a 	nop
   12554:	e037883a 	mov	sp,fp
   12558:	df000017 	ldw	fp,0(sp)
   1255c:	dec00104 	addi	sp,sp,4
   12560:	f800283a 	ret

00012564 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   12564:	defffb04 	addi	sp,sp,-20
   12568:	dfc00415 	stw	ra,16(sp)
   1256c:	df000315 	stw	fp,12(sp)
   12570:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   12574:	d0a01817 	ldw	r2,-32672(gp)
   12578:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   1257c:	d0a72017 	ldw	r2,-25472(gp)
   12580:	10800044 	addi	r2,r2,1
   12584:	d0a72015 	stw	r2,-25472(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   12588:	00002e06 	br	12644 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   1258c:	e0bffd17 	ldw	r2,-12(fp)
   12590:	10800017 	ldw	r2,0(r2)
   12594:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   12598:	e0bffd17 	ldw	r2,-12(fp)
   1259c:	10800403 	ldbu	r2,16(r2)
   125a0:	10803fcc 	andi	r2,r2,255
   125a4:	10000426 	beq	r2,zero,125b8 <alt_tick+0x54>
   125a8:	d0a72017 	ldw	r2,-25472(gp)
   125ac:	1000021e 	bne	r2,zero,125b8 <alt_tick+0x54>
    {
      alarm->rollover = 0;
   125b0:	e0bffd17 	ldw	r2,-12(fp)
   125b4:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   125b8:	e0bffd17 	ldw	r2,-12(fp)
   125bc:	10800217 	ldw	r2,8(r2)
   125c0:	d0e72017 	ldw	r3,-25472(gp)
   125c4:	18801d36 	bltu	r3,r2,1263c <alt_tick+0xd8>
   125c8:	e0bffd17 	ldw	r2,-12(fp)
   125cc:	10800403 	ldbu	r2,16(r2)
   125d0:	10803fcc 	andi	r2,r2,255
   125d4:	1000191e 	bne	r2,zero,1263c <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   125d8:	e0bffd17 	ldw	r2,-12(fp)
   125dc:	10800317 	ldw	r2,12(r2)
   125e0:	e0fffd17 	ldw	r3,-12(fp)
   125e4:	18c00517 	ldw	r3,20(r3)
   125e8:	1809883a 	mov	r4,r3
   125ec:	103ee83a 	callr	r2
   125f0:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   125f4:	e0bfff17 	ldw	r2,-4(fp)
   125f8:	1000031e 	bne	r2,zero,12608 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   125fc:	e13ffd17 	ldw	r4,-12(fp)
   12600:	00124c80 	call	124c8 <alt_alarm_stop>
   12604:	00000d06 	br	1263c <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   12608:	e0bffd17 	ldw	r2,-12(fp)
   1260c:	10c00217 	ldw	r3,8(r2)
   12610:	e0bfff17 	ldw	r2,-4(fp)
   12614:	1887883a 	add	r3,r3,r2
   12618:	e0bffd17 	ldw	r2,-12(fp)
   1261c:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   12620:	e0bffd17 	ldw	r2,-12(fp)
   12624:	10c00217 	ldw	r3,8(r2)
   12628:	d0a72017 	ldw	r2,-25472(gp)
   1262c:	1880032e 	bgeu	r3,r2,1263c <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   12630:	e0bffd17 	ldw	r2,-12(fp)
   12634:	00c00044 	movi	r3,1
   12638:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   1263c:	e0bffe17 	ldw	r2,-8(fp)
   12640:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   12644:	e0fffd17 	ldw	r3,-12(fp)
   12648:	d0a01804 	addi	r2,gp,-32672
   1264c:	18bfcf1e 	bne	r3,r2,1258c <__alt_mem_Onchip_SRAM+0xf801258c>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   12650:	0001883a 	nop
}
   12654:	0001883a 	nop
   12658:	e037883a 	mov	sp,fp
   1265c:	dfc00117 	ldw	ra,4(sp)
   12660:	df000017 	ldw	fp,0(sp)
   12664:	dec00204 	addi	sp,sp,8
   12668:	f800283a 	ret

0001266c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   1266c:	defffe04 	addi	sp,sp,-8
   12670:	dfc00115 	stw	ra,4(sp)
   12674:	df000015 	stw	fp,0(sp)
   12678:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   1267c:	d0a01617 	ldw	r2,-32680(gp)
   12680:	10000326 	beq	r2,zero,12690 <alt_get_errno+0x24>
   12684:	d0a01617 	ldw	r2,-32680(gp)
   12688:	103ee83a 	callr	r2
   1268c:	00000106 	br	12694 <alt_get_errno+0x28>
   12690:	d0a71104 	addi	r2,gp,-25532
}
   12694:	e037883a 	mov	sp,fp
   12698:	dfc00117 	ldw	ra,4(sp)
   1269c:	df000017 	ldw	fp,0(sp)
   126a0:	dec00204 	addi	sp,sp,8
   126a4:	f800283a 	ret

000126a8 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   126a8:	defff904 	addi	sp,sp,-28
   126ac:	dfc00615 	stw	ra,24(sp)
   126b0:	df000515 	stw	fp,20(sp)
   126b4:	df000504 	addi	fp,sp,20
   126b8:	e13ffd15 	stw	r4,-12(fp)
   126bc:	e17ffe15 	stw	r5,-8(fp)
   126c0:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   126c4:	e0bffd17 	ldw	r2,-12(fp)
   126c8:	10000816 	blt	r2,zero,126ec <write+0x44>
   126cc:	01400304 	movi	r5,12
   126d0:	e13ffd17 	ldw	r4,-12(fp)
   126d4:	0000eb00 	call	eb0 <__mulsi3>
   126d8:	1007883a 	mov	r3,r2
   126dc:	00800074 	movhi	r2,1
   126e0:	109d8b04 	addi	r2,r2,30252
   126e4:	1885883a 	add	r2,r3,r2
   126e8:	00000106 	br	126f0 <write+0x48>
   126ec:	0005883a 	mov	r2,zero
   126f0:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   126f4:	e0bffb17 	ldw	r2,-20(fp)
   126f8:	10002126 	beq	r2,zero,12780 <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   126fc:	e0bffb17 	ldw	r2,-20(fp)
   12700:	10800217 	ldw	r2,8(r2)
   12704:	108000cc 	andi	r2,r2,3
   12708:	10001826 	beq	r2,zero,1276c <write+0xc4>
   1270c:	e0bffb17 	ldw	r2,-20(fp)
   12710:	10800017 	ldw	r2,0(r2)
   12714:	10800617 	ldw	r2,24(r2)
   12718:	10001426 	beq	r2,zero,1276c <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   1271c:	e0bffb17 	ldw	r2,-20(fp)
   12720:	10800017 	ldw	r2,0(r2)
   12724:	10800617 	ldw	r2,24(r2)
   12728:	e0ffff17 	ldw	r3,-4(fp)
   1272c:	180d883a 	mov	r6,r3
   12730:	e17ffe17 	ldw	r5,-8(fp)
   12734:	e13ffb17 	ldw	r4,-20(fp)
   12738:	103ee83a 	callr	r2
   1273c:	e0bffc15 	stw	r2,-16(fp)
   12740:	e0bffc17 	ldw	r2,-16(fp)
   12744:	1000070e 	bge	r2,zero,12764 <write+0xbc>
      {
        ALT_ERRNO = -rval;
   12748:	001266c0 	call	1266c <alt_get_errno>
   1274c:	1007883a 	mov	r3,r2
   12750:	e0bffc17 	ldw	r2,-16(fp)
   12754:	0085c83a 	sub	r2,zero,r2
   12758:	18800015 	stw	r2,0(r3)
        return -1;
   1275c:	00bfffc4 	movi	r2,-1
   12760:	00000c06 	br	12794 <write+0xec>
      }
      return rval;
   12764:	e0bffc17 	ldw	r2,-16(fp)
   12768:	00000a06 	br	12794 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
   1276c:	001266c0 	call	1266c <alt_get_errno>
   12770:	1007883a 	mov	r3,r2
   12774:	00800344 	movi	r2,13
   12778:	18800015 	stw	r2,0(r3)
   1277c:	00000406 	br	12790 <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   12780:	001266c0 	call	1266c <alt_get_errno>
   12784:	1007883a 	mov	r3,r2
   12788:	00801444 	movi	r2,81
   1278c:	18800015 	stw	r2,0(r3)
  }
  return -1;
   12790:	00bfffc4 	movi	r2,-1
}
   12794:	e037883a 	mov	sp,fp
   12798:	dfc00117 	ldw	ra,4(sp)
   1279c:	df000017 	ldw	fp,0(sp)
   127a0:	dec00204 	addi	sp,sp,8
   127a4:	f800283a 	ret

000127a8 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   127a8:	defffd04 	addi	sp,sp,-12
   127ac:	dfc00215 	stw	ra,8(sp)
   127b0:	df000115 	stw	fp,4(sp)
   127b4:	df000104 	addi	fp,sp,4
   127b8:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   127bc:	d1601304 	addi	r5,gp,-32692
   127c0:	e13fff17 	ldw	r4,-4(fp)
   127c4:	00158640 	call	15864 <alt_dev_llist_insert>
}
   127c8:	e037883a 	mov	sp,fp
   127cc:	dfc00117 	ldw	ra,4(sp)
   127d0:	df000017 	ldw	fp,0(sp)
   127d4:	dec00204 	addi	sp,sp,8
   127d8:	f800283a 	ret

000127dc <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   127dc:	defffd04 	addi	sp,sp,-12
   127e0:	dfc00215 	stw	ra,8(sp)
   127e4:	df000115 	stw	fp,4(sp)
   127e8:	df000104 	addi	fp,sp,4
   127ec:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2, Nios2);
   127f0:	00163640 	call	16364 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   127f4:	00800044 	movi	r2,1
   127f8:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   127fc:	0001883a 	nop
   12800:	e037883a 	mov	sp,fp
   12804:	dfc00117 	ldw	ra,4(sp)
   12808:	df000017 	ldw	fp,0(sp)
   1280c:	dec00204 	addi	sp,sp,8
   12810:	f800283a 	ret

00012814 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   12814:	defffe04 	addi	sp,sp,-8
   12818:	dfc00115 	stw	ra,4(sp)
   1281c:	df000015 	stw	fp,0(sp)
   12820:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( INTERVAL_TIMER, Interval_Timer);
   12824:	01c00204 	movi	r7,8
   12828:	000d883a 	mov	r6,zero
   1282c:	000b883a 	mov	r5,zero
   12830:	013fc834 	movhi	r4,65312
   12834:	21080004 	addi	r4,r4,8192
   12838:	0014f9c0 	call	14f9c <alt_avalon_timer_sc_init>
    ALTERA_AVALON_TIMER_INIT ( INTERVAL_TIMER_2, Interval_Timer_2);
    ALTERA_AVALON_I2C_INIT ( CAMERA_I2C, camera_i2c);
   1283c:	01000074 	movhi	r4,1
   12840:	211deb04 	addi	r4,r4,30636
   12844:	0012af40 	call	12af4 <alt_avalon_i2c_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, JTAG_UART);
   12848:	01800204 	movi	r6,8
   1284c:	000b883a 	mov	r5,zero
   12850:	01000074 	movhi	r4,1
   12854:	211e0304 	addi	r4,r4,30732
   12858:	00146200 	call	14620 <altera_avalon_jtag_uart_init>
   1285c:	01000074 	movhi	r4,1
   12860:	211df904 	addi	r4,r4,30692
   12864:	00127a80 	call	127a8 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, SysID);
   12868:	0001883a 	nop
    ALTERA_MODULAR_ADC_INIT ( JOYSTICK_ADC, JoyStick_ADC);
   1286c:	01bfffc4 	movi	r6,-1
   12870:	017fffc4 	movi	r5,-1
   12874:	010000b4 	movhi	r4,2
   12878:	21221104 	addi	r4,r4,-30652
   1287c:	001516c0 	call	1516c <altera_modular_adc_init>
    ALTERA_UP_AVALON_ACCELEROMETER_SPI_INIT ( ACCELEROMETER_SPI, Accelerometer_SPI);
   12880:	010000b4 	movhi	r4,2
   12884:	21222004 	addi	r4,r4,-30592
   12888:	00127a80 	call	127a8 <alt_dev_reg>
}
   1288c:	0001883a 	nop
   12890:	e037883a 	mov	sp,fp
   12894:	dfc00117 	ldw	ra,4(sp)
   12898:	df000017 	ldw	fp,0(sp)
   1289c:	dec00204 	addi	sp,sp,8
   128a0:	f800283a 	ret

000128a4 <optional_irq_callback>:

/* for all functions in this file, see the altera_avalon_i2c.h file for more complete function descriptions. */

/* optional irq callback */
static void optional_irq_callback(void * context)
{
   128a4:	defff904 	addi	sp,sp,-28
   128a8:	dfc00615 	stw	ra,24(sp)
   128ac:	df000515 	stw	fp,20(sp)
   128b0:	df000504 	addi	fp,sp,20
   128b4:	e13fff15 	stw	r4,-4(fp)
   int timeout=100000;
   128b8:	008000b4 	movhi	r2,2
   128bc:	10a1a804 	addi	r2,r2,-31072
   128c0:	e0bffb15 	stw	r2,-20(fp)
   alt_u32 bytes_read;

   ALT_AVALON_I2C_DEV_t *i2c_dev = context;
   128c4:	e0bfff17 	ldw	r2,-4(fp)
   128c8:	e0bffc15 	stw	r2,-16(fp)
   IRQ_DATA_t *irq = i2c_dev->callback_context;
   128cc:	e0bffc17 	ldw	r2,-16(fp)
   128d0:	10800717 	ldw	r2,28(r2)
   128d4:	e0bffd15 	stw	r2,-12(fp)

   if (irq->irq_busy==2)  /*receive request*/
   128d8:	e0bffd17 	ldw	r2,-12(fp)
   128dc:	10800217 	ldw	r2,8(r2)
   128e0:	10800098 	cmpnei	r2,r2,2
   128e4:	1000251e 	bne	r2,zero,1297c <optional_irq_callback+0xd8>
   {
       alt_avalon_i2c_rx_read_available(i2c_dev, irq->buffer, irq->size, &bytes_read);
   128e8:	e0bffd17 	ldw	r2,-12(fp)
   128ec:	10c00017 	ldw	r3,0(r2)
   128f0:	e0bffd17 	ldw	r2,-12(fp)
   128f4:	10800117 	ldw	r2,4(r2)
   128f8:	e13ffe04 	addi	r4,fp,-8
   128fc:	200f883a 	mov	r7,r4
   12900:	100d883a 	mov	r6,r2
   12904:	180b883a 	mov	r5,r3
   12908:	e13ffc17 	ldw	r4,-16(fp)
   1290c:	00130540 	call	13054 <alt_avalon_i2c_rx_read_available>
       irq->size-=bytes_read;
   12910:	e0bffd17 	ldw	r2,-12(fp)
   12914:	10c00117 	ldw	r3,4(r2)
   12918:	e0bffe17 	ldw	r2,-8(fp)
   1291c:	1887c83a 	sub	r3,r3,r2
   12920:	e0bffd17 	ldw	r2,-12(fp)
   12924:	10c00115 	stw	r3,4(r2)
       irq->buffer+=bytes_read;
   12928:	e0bffd17 	ldw	r2,-12(fp)
   1292c:	10c00017 	ldw	r3,0(r2)
   12930:	e0bffe17 	ldw	r2,-8(fp)
   12934:	1887883a 	add	r3,r3,r2
   12938:	e0bffd17 	ldw	r2,-12(fp)
   1293c:	10c00015 	stw	r3,0(r2)
       if (irq->size > 0)
   12940:	e0bffd17 	ldw	r2,-12(fp)
   12944:	10800117 	ldw	r2,4(r2)
   12948:	10000c26 	beq	r2,zero,1297c <optional_irq_callback+0xd8>
       {
         /* clear ISR register content */
         alt_avalon_i2c_int_clear(i2c_dev,ALT_AVALON_I2C_ISR_ALL_CLEARABLE_INTS_MSK);
   1294c:	01400704 	movi	r5,28
   12950:	e13ffc17 	ldw	r4,-16(fp)
   12954:	001420c0 	call	1420c <alt_avalon_i2c_int_clear>
         /* re-enable the RX_READY interrupt */
         alt_avalon_i2c_int_enable(i2c_dev,ALT_AVALON_I2C_ISER_RX_READY_EN_MSK);
   12958:	01400084 	movi	r5,2
   1295c:	e13ffc17 	ldw	r4,-16(fp)
   12960:	00142b00 	call	142b0 <alt_avalon_i2c_int_enable>
   12964:	00000e06 	br	129a0 <optional_irq_callback+0xfc>
    /*for a write, this code will only be reached after the cmd fifo is*/
    /*empty (sent).  For a read this code will only be reached after all*/
    /*bytes have been received.*/
    while (alt_avalon_i2c_is_busy(i2c_dev)) 
    { 
      if (--timeout == 0)
   12968:	e0bffb17 	ldw	r2,-20(fp)
   1296c:	10bfffc4 	addi	r2,r2,-1
   12970:	e0bffb15 	stw	r2,-20(fp)
   12974:	e0bffb17 	ldw	r2,-20(fp)
   12978:	10000426 	beq	r2,zero,1298c <optional_irq_callback+0xe8>

    /*transaction should be done so no or minimal looping should occur*/
    /*for a write, this code will only be reached after the cmd fifo is*/
    /*empty (sent).  For a read this code will only be reached after all*/
    /*bytes have been received.*/
    while (alt_avalon_i2c_is_busy(i2c_dev)) 
   1297c:	e13ffc17 	ldw	r4,-16(fp)
   12980:	00130100 	call	13010 <alt_avalon_i2c_is_busy>
   12984:	103ff81e 	bne	r2,zero,12968 <__alt_mem_Onchip_SRAM+0xf8012968>
   12988:	00000106 	br	12990 <optional_irq_callback+0xec>
    { 
      if (--timeout == 0)
      {
         break;
   1298c:	0001883a 	nop
      }
    }

    /*disable the ip.  The ip is disabled and enabled for each transaction.*/
    alt_avalon_i2c_disable(i2c_dev);
   12990:	e13ffc17 	ldw	r4,-16(fp)
   12994:	0012cb80 	call	12cb8 <alt_avalon_i2c_disable>

    irq->irq_busy=0;
   12998:	e0bffd17 	ldw	r2,-12(fp)
   1299c:	10000215 	stw	zero,8(r2)
}
   129a0:	e037883a 	mov	sp,fp
   129a4:	dfc00117 	ldw	ra,4(sp)
   129a8:	df000017 	ldw	fp,0(sp)
   129ac:	dec00204 	addi	sp,sp,8
   129b0:	f800283a 	ret

000129b4 <alt_avalon_i2c_register_optional_irq_handler>:

void alt_avalon_i2c_register_optional_irq_handler(ALT_AVALON_I2C_DEV_t *i2c_dev,IRQ_DATA_t * irq_data)
{
   129b4:	defffc04 	addi	sp,sp,-16
   129b8:	dfc00315 	stw	ra,12(sp)
   129bc:	df000215 	stw	fp,8(sp)
   129c0:	df000204 	addi	fp,sp,8
   129c4:	e13ffe15 	stw	r4,-8(fp)
   129c8:	e17fff15 	stw	r5,-4(fp)
   irq_data->irq_busy=0;
   129cc:	e0bfff17 	ldw	r2,-4(fp)
   129d0:	10000215 	stw	zero,8(r2)
   alt_avalon_i2c_register_callback(i2c_dev,optional_irq_callback,0,irq_data);
   129d4:	e1ffff17 	ldw	r7,-4(fp)
   129d8:	000d883a 	mov	r6,zero
   129dc:	01400074 	movhi	r5,1
   129e0:	294a2904 	addi	r5,r5,10404
   129e4:	e13ffe17 	ldw	r4,-8(fp)
   129e8:	0012aa00 	call	12aa0 <alt_avalon_i2c_register_callback>
}
   129ec:	0001883a 	nop
   129f0:	e037883a 	mov	sp,fp
   129f4:	dfc00117 	ldw	ra,4(sp)
   129f8:	df000017 	ldw	fp,0(sp)
   129fc:	dec00204 	addi	sp,sp,8
   12a00:	f800283a 	ret

00012a04 <alt_avalon_i2c_irq>:
ALT_LLIST_HEAD(alt_avalon_i2c_list);

/* Interrupt handler for the AVALON_I2C module. */
/* Interrupts are not re-enabled in this handler */
static void alt_avalon_i2c_irq(void *context)
{
   12a04:	defff904 	addi	sp,sp,-28
   12a08:	dfc00615 	stw	ra,24(sp)
   12a0c:	df000515 	stw	fp,20(sp)
   12a10:	df000504 	addi	fp,sp,20
   12a14:	e13fff15 	stw	r4,-4(fp)
    ALT_AVALON_I2C_DEV_t *dev = (ALT_AVALON_I2C_DEV_t *) context;
   12a18:	e0bfff17 	ldw	r2,-4(fp)
   12a1c:	e0bffb15 	stw	r2,-20(fp)
    alt_irq_context cpu_sr;
     
    /*disable i2c interrupts*/
    alt_avalon_i2c_int_disable(dev,ALT_AVALON_I2C_ISR_ALLINTS_MSK);
   12a20:	014007c4 	movi	r5,31
   12a24:	e13ffb17 	ldw	r4,-20(fp)
   12a28:	00142480 	call	14248 <alt_avalon_i2c_int_disable>
    
    /* clear irq status */
    alt_avalon_i2c_int_clear(dev,ALT_AVALON_I2C_ISR_ALL_CLEARABLE_INTS_MSK);
   12a2c:	01400704 	movi	r5,28
   12a30:	e13ffb17 	ldw	r4,-20(fp)
   12a34:	001420c0 	call	1420c <alt_avalon_i2c_int_clear>
    * Other interrupts are explicitly disabled if callbacks
    * are registered because there is no guarantee that they are 
    * pre-emption-safe. This allows the driver to support 
    * interrupt pre-emption.
    */
    if(dev->callback) 
   12a38:	e0bffb17 	ldw	r2,-20(fp)
   12a3c:	10800617 	ldw	r2,24(r2)
   12a40:	10001126 	beq	r2,zero,12a88 <alt_avalon_i2c_irq+0x84>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   12a44:	0005303a 	rdctl	r2,status
   12a48:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   12a4c:	e0fffd17 	ldw	r3,-12(fp)
   12a50:	00bfff84 	movi	r2,-2
   12a54:	1884703a 	and	r2,r3,r2
   12a58:	1001703a 	wrctl	status,r2
  
  return context;
   12a5c:	e0bffd17 	ldw	r2,-12(fp)
    {
        cpu_sr = alt_irq_disable_all();
   12a60:	e0bffc15 	stw	r2,-16(fp)
        dev->callback(dev);
   12a64:	e0bffb17 	ldw	r2,-20(fp)
   12a68:	10800617 	ldw	r2,24(r2)
   12a6c:	e13ffb17 	ldw	r4,-20(fp)
   12a70:	103ee83a 	callr	r2
   12a74:	e0bffc17 	ldw	r2,-16(fp)
   12a78:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   12a7c:	e0bffe17 	ldw	r2,-8(fp)
   12a80:	1001703a 	wrctl	status,r2
        alt_irq_enable_all(cpu_sr);
    }

    return;
   12a84:	0001883a 	nop
   12a88:	0001883a 	nop
}
   12a8c:	e037883a 	mov	sp,fp
   12a90:	dfc00117 	ldw	ra,4(sp)
   12a94:	df000017 	ldw	fp,0(sp)
   12a98:	dec00204 	addi	sp,sp,8
   12a9c:	f800283a 	ret

00012aa0 <alt_avalon_i2c_register_callback>:
void alt_avalon_i2c_register_callback(
    ALT_AVALON_I2C_DEV_t *dev,
    alt_avalon_i2c_callback callback,
    alt_u32 control,
    void *context)
{
   12aa0:	defffb04 	addi	sp,sp,-20
   12aa4:	df000415 	stw	fp,16(sp)
   12aa8:	df000404 	addi	fp,sp,16
   12aac:	e13ffc15 	stw	r4,-16(fp)
   12ab0:	e17ffd15 	stw	r5,-12(fp)
   12ab4:	e1bffe15 	stw	r6,-8(fp)
   12ab8:	e1ffff15 	stw	r7,-4(fp)
    dev->callback         = callback;
   12abc:	e0bffc17 	ldw	r2,-16(fp)
   12ac0:	e0fffd17 	ldw	r3,-12(fp)
   12ac4:	10c00615 	stw	r3,24(r2)
    dev->callback_context = context;
   12ac8:	e0bffc17 	ldw	r2,-16(fp)
   12acc:	e0ffff17 	ldw	r3,-4(fp)
   12ad0:	10c00715 	stw	r3,28(r2)
    dev->control          = control;
   12ad4:	e0bffc17 	ldw	r2,-16(fp)
   12ad8:	e0fffe17 	ldw	r3,-8(fp)
   12adc:	10c00815 	stw	r3,32(r2)

    return ;
   12ae0:	0001883a 	nop
}
   12ae4:	e037883a 	mov	sp,fp
   12ae8:	df000017 	ldw	fp,0(sp)
   12aec:	dec00104 	addi	sp,sp,4
   12af0:	f800283a 	ret

00012af4 <alt_avalon_i2c_init>:

 /* Initializes the I2C Module. This routine is called
 * from the ALT_AVALON_I2C_INIT macro and is called automatically
 * by alt_sys_init.c */
void alt_avalon_i2c_init (ALT_AVALON_I2C_DEV_t *dev)
{
   12af4:	defff704 	addi	sp,sp,-36
   12af8:	dfc00815 	stw	ra,32(sp)
   12afc:	df000715 	stw	fp,28(sp)
   12b00:	df000704 	addi	fp,sp,28
   12b04:	e13fff15 	stw	r4,-4(fp)
    extern alt_llist alt_avalon_i2c_list;
    ALT_AVALON_I2C_MASTER_CONFIG_t cfg;
    int error;

    /* disable ip */
    alt_avalon_i2c_disable(dev);
   12b08:	e13fff17 	ldw	r4,-4(fp)
   12b0c:	0012cb80 	call	12cb8 <alt_avalon_i2c_disable>

    /* Disable interrupts */
    alt_avalon_i2c_int_disable(dev,ALT_AVALON_I2C_ISR_ALLINTS_MSK);
   12b10:	014007c4 	movi	r5,31
   12b14:	e13fff17 	ldw	r4,-4(fp)
   12b18:	00142480 	call	14248 <alt_avalon_i2c_int_disable>

    /* clear ISR register content */
    alt_avalon_i2c_int_clear(dev,ALT_AVALON_I2C_ISR_ALL_CLEARABLE_INTS_MSK);
   12b1c:	01400704 	movi	r5,28
   12b20:	e13fff17 	ldw	r4,-4(fp)
   12b24:	001420c0 	call	1420c <alt_avalon_i2c_int_clear>
    
    /* set the cmd fifo threshold */
    alt_avalon_i2c_tfr_cmd_fifo_threshold_set(dev,ALT_AVALON_I2C_TFR_CMD_FIFO_NOT_FULL);
   12b28:	014000c4 	movi	r5,3
   12b2c:	e13fff17 	ldw	r4,-4(fp)
   12b30:	00144540 	call	14454 <alt_avalon_i2c_tfr_cmd_fifo_threshold_set>
    
    /* set the tx fifo threshold */
    alt_avalon_i2c_rx_fifo_threshold_set(dev,ALT_AVALON_I2C_RX_DATA_FIFO_FULL);
   12b34:	014000c4 	movi	r5,3
   12b38:	e13fff17 	ldw	r4,-4(fp)
   12b3c:	00143a40 	call	143a4 <alt_avalon_i2c_rx_fifo_threshold_set>
    
    /* set the default bus speed */
    cfg.speed_mode = ALT_AVALON_I2C_SPEED_STANDARD;
   12b40:	e03ffc15 	stw	zero,-16(fp)
    
    /*set the address mode */
    cfg.addr_mode = ALT_AVALON_I2C_ADDR_MODE_7_BIT;
   12b44:	e03ffb15 	stw	zero,-20(fp)
    
    /* set the bus speed */
    alt_avalon_i2c_master_config_speed_set(dev,&cfg,ALT_AVALON_I2C_SS_MAX_HZ);
   12b48:	e0bffb04 	addi	r2,fp,-20
   12b4c:	018000b4 	movhi	r6,2
   12b50:	31a1a804 	addi	r6,r6,-31072
   12b54:	100b883a 	mov	r5,r2
   12b58:	e13fff17 	ldw	r4,-4(fp)
   12b5c:	0012f140 	call	12f14 <alt_avalon_i2c_master_config_speed_set>
    
    /* write the cfg information */
    alt_avalon_i2c_master_config_set(dev,&cfg);
   12b60:	e0bffb04 	addi	r2,fp,-20
   12b64:	100b883a 	mov	r5,r2
   12b68:	e13fff17 	ldw	r4,-4(fp)
   12b6c:	0012db40 	call	12db4 <alt_avalon_i2c_master_config_set>
    
    /* Register this instance of the i2c controller with HAL */
    alt_dev_llist_insert((alt_dev_llist*) dev, &alt_avalon_i2c_list);
   12b70:	d1601a04 	addi	r5,gp,-32664
   12b74:	e13fff17 	ldw	r4,-4(fp)
   12b78:	00158640 	call	15864 <alt_dev_llist_insert>
 * HAL.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_no_error (void)
{
  return 0;
   12b7c:	0005883a 	mov	r2,zero

    /*
     * Creating semaphores used to protect access to the registers 
     * when running in a multi-threaded environment.
     */
    error = ALT_SEM_CREATE (&dev->regs_lock, 1);
   12b80:	e0bffa15 	stw	r2,-24(fp)

    if (!error)
   12b84:	e0bffa17 	ldw	r2,-24(fp)
   12b88:	10000c1e 	bne	r2,zero,12bbc <alt_avalon_i2c_init+0xc8>
    {        
        /* Install IRQ handler */
        alt_ic_isr_register(dev->irq_controller_ID, dev->irq_ID, alt_avalon_i2c_irq, dev, 0x0);
   12b8c:	e0bfff17 	ldw	r2,-4(fp)
   12b90:	10c00417 	ldw	r3,16(r2)
   12b94:	e0bfff17 	ldw	r2,-4(fp)
   12b98:	10800517 	ldw	r2,20(r2)
   12b9c:	d8000015 	stw	zero,0(sp)
   12ba0:	e1ffff17 	ldw	r7,-4(fp)
   12ba4:	01800074 	movhi	r6,1
   12ba8:	318a8104 	addi	r6,r6,10756
   12bac:	100b883a 	mov	r5,r2
   12bb0:	1809883a 	mov	r4,r3
   12bb4:	0015a780 	call	15a78 <alt_ic_isr_register>
    else
    {
        alt_printf("failed to create semaphores\n");
    }

    return;
   12bb8:	00000406 	br	12bcc <alt_avalon_i2c_init+0xd8>
        /* Install IRQ handler */
        alt_ic_isr_register(dev->irq_controller_ID, dev->irq_ID, alt_avalon_i2c_irq, dev, 0x0);
    }
    else
    {
        alt_printf("failed to create semaphores\n");
   12bbc:	01000074 	movhi	r4,1
   12bc0:	211b5004 	addi	r4,r4,27968
   12bc4:	00160fc0 	call	160fc <alt_printf>
    }

    return;
   12bc8:	0001883a 	nop

}
   12bcc:	e037883a 	mov	sp,fp
   12bd0:	dfc00117 	ldw	ra,4(sp)
   12bd4:	df000017 	ldw	fp,0(sp)
   12bd8:	dec00204 	addi	sp,sp,8
   12bdc:	f800283a 	ret

00012be0 <alt_avalon_i2c_open>:

/*  Retrieve a pointer to the i2c instance */
ALT_AVALON_I2C_DEV_t* alt_avalon_i2c_open(const char* name)
{
   12be0:	defffc04 	addi	sp,sp,-16
   12be4:	dfc00315 	stw	ra,12(sp)
   12be8:	df000215 	stw	fp,8(sp)
   12bec:	df000204 	addi	fp,sp,8
   12bf0:	e13fff15 	stw	r4,-4(fp)
    ALT_AVALON_I2C_DEV_t* dev = NULL;
   12bf4:	e03ffe15 	stw	zero,-8(fp)

    dev = (ALT_AVALON_I2C_DEV_t*) alt_find_dev (name, &alt_avalon_i2c_list);
   12bf8:	d1601a04 	addi	r5,gp,-32664
   12bfc:	e13fff17 	ldw	r4,-4(fp)
   12c00:	00159c80 	call	159c8 <alt_find_dev>
   12c04:	e0bffe15 	stw	r2,-8(fp)

    return dev;
   12c08:	e0bffe17 	ldw	r2,-8(fp)
}
   12c0c:	e037883a 	mov	sp,fp
   12c10:	dfc00117 	ldw	ra,4(sp)
   12c14:	df000017 	ldw	fp,0(sp)
   12c18:	dec00204 	addi	sp,sp,8
   12c1c:	f800283a 	ret

00012c20 <alt_avalon_i2c_enable>:

/* enable the avalon i2c ip */
ALT_AVALON_I2C_STATUS_CODE alt_avalon_i2c_enable(ALT_AVALON_I2C_DEV_t *i2c_dev)
{
   12c20:	defffc04 	addi	sp,sp,-16
   12c24:	df000315 	stw	fp,12(sp)
   12c28:	df000304 	addi	fp,sp,12
   12c2c:	e13fff15 	stw	r4,-4(fp)
   IRQ_DATA_t *irq_data = i2c_dev->callback_context;
   12c30:	e0bfff17 	ldw	r2,-4(fp)
   12c34:	10800717 	ldw	r2,28(r2)
   12c38:	e0bffd15 	stw	r2,-12(fp)
   alt_u32 enable_status;
       
   /*if the ip is already enabled, return a busy status*/
   enable_status = (IORD_ALT_AVALON_I2C_CTRL(i2c_dev->i2c_base) & ALT_AVALON_I2C_CTRL_EN_MSK) >> ALT_AVALON_I2C_CTRL_EN_OFST;
   12c3c:	e0bfff17 	ldw	r2,-4(fp)
   12c40:	10800317 	ldw	r2,12(r2)
   12c44:	10800204 	addi	r2,r2,8
   12c48:	10800037 	ldwio	r2,0(r2)
   12c4c:	1080004c 	andi	r2,r2,1
   12c50:	e0bffe15 	stw	r2,-8(fp)
   if (enable_status)
   12c54:	e0bffe17 	ldw	r2,-8(fp)
   12c58:	10000226 	beq	r2,zero,12c64 <alt_avalon_i2c_enable+0x44>
   {
     return ALT_AVALON_I2C_BUSY;
   12c5c:	00bffe44 	movi	r2,-7
   12c60:	00001106 	br	12ca8 <alt_avalon_i2c_enable+0x88>
   }
   
   /*if the optional irq callback is registered ensure irq_busy is 0*/
   if (i2c_dev->callback == optional_irq_callback)
   12c64:	e0bfff17 	ldw	r2,-4(fp)
   12c68:	10c00617 	ldw	r3,24(r2)
   12c6c:	00800074 	movhi	r2,1
   12c70:	108a2904 	addi	r2,r2,10404
   12c74:	1880021e 	bne	r3,r2,12c80 <alt_avalon_i2c_enable+0x60>
   {
     irq_data->irq_busy=0;
   12c78:	e0bffd17 	ldw	r2,-12(fp)
   12c7c:	10000215 	stw	zero,8(r2)
   }
   
   /* enable ip */
   IORMW_ALT_AVALON_I2C_CTRL(i2c_dev->i2c_base,ALT_AVALON_I2C_CTRL_EN_MSK,ALT_AVALON_I2C_CTRL_EN_MSK);
   12c80:	e0bfff17 	ldw	r2,-4(fp)
   12c84:	10800317 	ldw	r2,12(r2)
   12c88:	10800204 	addi	r2,r2,8
   12c8c:	e0ffff17 	ldw	r3,-4(fp)
   12c90:	18c00317 	ldw	r3,12(r3)
   12c94:	18c00204 	addi	r3,r3,8
   12c98:	18c00037 	ldwio	r3,0(r3)
   12c9c:	18c00054 	ori	r3,r3,1
   12ca0:	10c00035 	stwio	r3,0(r2)

   return ALT_AVALON_I2C_SUCCESS;
   12ca4:	0005883a 	mov	r2,zero
}
   12ca8:	e037883a 	mov	sp,fp
   12cac:	df000017 	ldw	fp,0(sp)
   12cb0:	dec00104 	addi	sp,sp,4
   12cb4:	f800283a 	ret

00012cb8 <alt_avalon_i2c_disable>:

/* disable the avalon i2c ip */
void alt_avalon_i2c_disable(ALT_AVALON_I2C_DEV_t *i2c_dev)
{
   12cb8:	defffe04 	addi	sp,sp,-8
   12cbc:	df000115 	stw	fp,4(sp)
   12cc0:	df000104 	addi	fp,sp,4
   12cc4:	e13fff15 	stw	r4,-4(fp)
   /* disable ip */
   IORMW_ALT_AVALON_I2C_CTRL(i2c_dev->i2c_base,0,ALT_AVALON_I2C_CTRL_EN_MSK);
   12cc8:	e0bfff17 	ldw	r2,-4(fp)
   12ccc:	10800317 	ldw	r2,12(r2)
   12cd0:	10800204 	addi	r2,r2,8
   12cd4:	e0ffff17 	ldw	r3,-4(fp)
   12cd8:	18c00317 	ldw	r3,12(r3)
   12cdc:	18c00204 	addi	r3,r3,8
   12ce0:	19000037 	ldwio	r4,0(r3)
   12ce4:	00ffff84 	movi	r3,-2
   12ce8:	20c6703a 	and	r3,r4,r3
   12cec:	10c00035 	stwio	r3,0(r2)

}
   12cf0:	0001883a 	nop
   12cf4:	e037883a 	mov	sp,fp
   12cf8:	df000017 	ldw	fp,0(sp)
   12cfc:	dec00104 	addi	sp,sp,4
   12d00:	f800283a 	ret

00012d04 <alt_avalon_i2c_master_config_get>:

/* populate the the master config structure from the register values */
void alt_avalon_i2c_master_config_get(ALT_AVALON_I2C_DEV_t *i2c_dev,
                                          ALT_AVALON_I2C_MASTER_CONFIG_t* cfg)
{
   12d04:	defffd04 	addi	sp,sp,-12
   12d08:	df000215 	stw	fp,8(sp)
   12d0c:	df000204 	addi	fp,sp,8
   12d10:	e13ffe15 	stw	r4,-8(fp)
   12d14:	e17fff15 	stw	r5,-4(fp)

    cfg->addr_mode = i2c_dev->address_mode;
   12d18:	e0bffe17 	ldw	r2,-8(fp)
   12d1c:	10c00d17 	ldw	r3,52(r2)
   12d20:	e0bfff17 	ldw	r2,-4(fp)
   12d24:	10c00015 	stw	r3,0(r2)
    cfg->speed_mode = (IORD_ALT_AVALON_I2C_CTRL(i2c_dev->i2c_base) & ALT_AVALON_I2C_CTRL_BUS_SPEED_MSK) >> ALT_AVALON_I2C_CTRL_BUS_SPEED_OFST;    
   12d28:	e0bffe17 	ldw	r2,-8(fp)
   12d2c:	10800317 	ldw	r2,12(r2)
   12d30:	10800204 	addi	r2,r2,8
   12d34:	10800037 	ldwio	r2,0(r2)
   12d38:	1080008c 	andi	r2,r2,2
   12d3c:	1005d07a 	srai	r2,r2,1
   12d40:	1007883a 	mov	r3,r2
   12d44:	e0bfff17 	ldw	r2,-4(fp)
   12d48:	10c00115 	stw	r3,4(r2)

    cfg->scl_hcnt = (IORD_ALT_AVALON_I2C_SCL_HIGH(i2c_dev->i2c_base) & ALT_AVALON_I2C_SCL_HIGH_COUNT_PERIOD_MSK) >> ALT_AVALON_I2C_SCL_HIGH_COUNT_PERIOD_OFST;    
   12d4c:	e0bffe17 	ldw	r2,-8(fp)
   12d50:	10800317 	ldw	r2,12(r2)
   12d54:	10800904 	addi	r2,r2,36
   12d58:	10800037 	ldwio	r2,0(r2)
   12d5c:	1007883a 	mov	r3,r2
   12d60:	e0bfff17 	ldw	r2,-4(fp)
   12d64:	10c0020d 	sth	r3,8(r2)
    cfg->scl_lcnt = (IORD_ALT_AVALON_I2C_SCL_LOW(i2c_dev->i2c_base) & ALT_AVALON_I2C_SCL_LOW_COUNT_PERIOD_MSK) >> ALT_AVALON_I2C_SCL_LOW_COUNT_PERIOD_OFST;    
   12d68:	e0bffe17 	ldw	r2,-8(fp)
   12d6c:	10800317 	ldw	r2,12(r2)
   12d70:	10800804 	addi	r2,r2,32
   12d74:	10800037 	ldwio	r2,0(r2)
   12d78:	1007883a 	mov	r3,r2
   12d7c:	e0bfff17 	ldw	r2,-4(fp)
   12d80:	10c0028d 	sth	r3,10(r2)
    cfg->sda_cnt = (IORD_ALT_AVALON_I2C_SDA_HOLD(i2c_dev->i2c_base) & ALT_AVALON_I2C_SDA_HOLD_COUNT_PERIOD_MSK) >> ALT_AVALON_I2C_SDA_HOLD_COUNT_PERIOD_OFST;    
   12d84:	e0bffe17 	ldw	r2,-8(fp)
   12d88:	10800317 	ldw	r2,12(r2)
   12d8c:	10800a04 	addi	r2,r2,40
   12d90:	10800037 	ldwio	r2,0(r2)
   12d94:	1007883a 	mov	r3,r2
   12d98:	e0bfff17 	ldw	r2,-4(fp)
   12d9c:	10c0030d 	sth	r3,12(r2)
}
   12da0:	0001883a 	nop
   12da4:	e037883a 	mov	sp,fp
   12da8:	df000017 	ldw	fp,0(sp)
   12dac:	dec00104 	addi	sp,sp,4
   12db0:	f800283a 	ret

00012db4 <alt_avalon_i2c_master_config_set>:

/* set the registers from the master config structure */
void alt_avalon_i2c_master_config_set(ALT_AVALON_I2C_DEV_t *i2c_dev,
                                          const ALT_AVALON_I2C_MASTER_CONFIG_t* cfg)
{
   12db4:	defffd04 	addi	sp,sp,-12
   12db8:	df000215 	stw	fp,8(sp)
   12dbc:	df000204 	addi	fp,sp,8
   12dc0:	e13ffe15 	stw	r4,-8(fp)
   12dc4:	e17fff15 	stw	r5,-4(fp)
    i2c_dev->address_mode   =   cfg->addr_mode;
   12dc8:	e0bfff17 	ldw	r2,-4(fp)
   12dcc:	10c00017 	ldw	r3,0(r2)
   12dd0:	e0bffe17 	ldw	r2,-8(fp)
   12dd4:	10c00d15 	stw	r3,52(r2)
    IORMW_ALT_AVALON_I2C_CTRL(i2c_dev->i2c_base,(cfg->speed_mode) << ALT_AVALON_I2C_CTRL_BUS_SPEED_OFST,ALT_AVALON_I2C_CTRL_BUS_SPEED_MSK);
   12dd8:	e0bffe17 	ldw	r2,-8(fp)
   12ddc:	10800317 	ldw	r2,12(r2)
   12de0:	10c00204 	addi	r3,r2,8
   12de4:	e0bffe17 	ldw	r2,-8(fp)
   12de8:	10800317 	ldw	r2,12(r2)
   12dec:	10800204 	addi	r2,r2,8
   12df0:	10800037 	ldwio	r2,0(r2)
   12df4:	1009883a 	mov	r4,r2
   12df8:	00bfff44 	movi	r2,-3
   12dfc:	2088703a 	and	r4,r4,r2
   12e00:	e0bfff17 	ldw	r2,-4(fp)
   12e04:	10800117 	ldw	r2,4(r2)
   12e08:	1085883a 	add	r2,r2,r2
   12e0c:	1080008c 	andi	r2,r2,2
   12e10:	2084b03a 	or	r2,r4,r2
   12e14:	18800035 	stwio	r2,0(r3)

    IOWR_ALT_AVALON_I2C_SCL_HIGH(i2c_dev->i2c_base,cfg->scl_hcnt);
   12e18:	e0bffe17 	ldw	r2,-8(fp)
   12e1c:	10800317 	ldw	r2,12(r2)
   12e20:	10800904 	addi	r2,r2,36
   12e24:	e0ffff17 	ldw	r3,-4(fp)
   12e28:	18c0020b 	ldhu	r3,8(r3)
   12e2c:	18ffffcc 	andi	r3,r3,65535
   12e30:	10c00035 	stwio	r3,0(r2)
    IOWR_ALT_AVALON_I2C_SCL_LOW(i2c_dev->i2c_base,cfg->scl_lcnt);
   12e34:	e0bffe17 	ldw	r2,-8(fp)
   12e38:	10800317 	ldw	r2,12(r2)
   12e3c:	10800804 	addi	r2,r2,32
   12e40:	e0ffff17 	ldw	r3,-4(fp)
   12e44:	18c0028b 	ldhu	r3,10(r3)
   12e48:	18ffffcc 	andi	r3,r3,65535
   12e4c:	10c00035 	stwio	r3,0(r2)
    IOWR_ALT_AVALON_I2C_SDA_HOLD(i2c_dev->i2c_base,cfg->sda_cnt);
   12e50:	e0bffe17 	ldw	r2,-8(fp)
   12e54:	10800317 	ldw	r2,12(r2)
   12e58:	10800a04 	addi	r2,r2,40
   12e5c:	e0ffff17 	ldw	r3,-4(fp)
   12e60:	18c0030b 	ldhu	r3,12(r3)
   12e64:	18ffffcc 	andi	r3,r3,65535
   12e68:	10c00035 	stwio	r3,0(r2)
}
   12e6c:	0001883a 	nop
   12e70:	e037883a 	mov	sp,fp
   12e74:	df000017 	ldw	fp,0(sp)
   12e78:	dec00104 	addi	sp,sp,4
   12e7c:	f800283a 	ret

00012e80 <alt_avalon_i2c_master_config_speed_get>:
 * I2C master configuration.
*/
ALT_AVALON_I2C_STATUS_CODE alt_avalon_i2c_master_config_speed_get(ALT_AVALON_I2C_DEV_t *i2c_dev,
                                                const ALT_AVALON_I2C_MASTER_CONFIG_t* cfg,
                                                alt_u32 * speed_in_hz)
{
   12e80:	defffb04 	addi	sp,sp,-20
   12e84:	dfc00415 	stw	ra,16(sp)
   12e88:	df000315 	stw	fp,12(sp)
   12e8c:	df000304 	addi	fp,sp,12
   12e90:	e13ffd15 	stw	r4,-12(fp)
   12e94:	e17ffe15 	stw	r5,-8(fp)
   12e98:	e1bfff15 	stw	r6,-4(fp)

   if ((cfg->scl_lcnt == 0) || (cfg->scl_hcnt == 0))
   12e9c:	e0bffe17 	ldw	r2,-8(fp)
   12ea0:	1080028b 	ldhu	r2,10(r2)
   12ea4:	10bfffcc 	andi	r2,r2,65535
   12ea8:	10000426 	beq	r2,zero,12ebc <alt_avalon_i2c_master_config_speed_get+0x3c>
   12eac:	e0bffe17 	ldw	r2,-8(fp)
   12eb0:	1080020b 	ldhu	r2,8(r2)
   12eb4:	10bfffcc 	andi	r2,r2,65535
   12eb8:	1000021e 	bne	r2,zero,12ec4 <alt_avalon_i2c_master_config_speed_get+0x44>
   {
       return ALT_AVALON_I2C_BAD_ARG;
   12ebc:	00bfff44 	movi	r2,-3
   12ec0:	00000f06 	br	12f00 <alt_avalon_i2c_master_config_speed_get+0x80>
   }
    
   *speed_in_hz = (i2c_dev->ip_freq_in_hz) / (cfg->scl_lcnt + cfg->scl_hcnt);
   12ec4:	e0bffd17 	ldw	r2,-12(fp)
   12ec8:	11000c17 	ldw	r4,48(r2)
   12ecc:	e0bffe17 	ldw	r2,-8(fp)
   12ed0:	1080028b 	ldhu	r2,10(r2)
   12ed4:	10ffffcc 	andi	r3,r2,65535
   12ed8:	e0bffe17 	ldw	r2,-8(fp)
   12edc:	1080020b 	ldhu	r2,8(r2)
   12ee0:	10bfffcc 	andi	r2,r2,65535
   12ee4:	1885883a 	add	r2,r3,r2
   12ee8:	100b883a 	mov	r5,r2
   12eec:	0000df40 	call	df4 <__udivsi3>
   12ef0:	1007883a 	mov	r3,r2
   12ef4:	e0bfff17 	ldw	r2,-4(fp)
   12ef8:	10c00015 	stw	r3,0(r2)

   return ALT_AVALON_I2C_SUCCESS;
   12efc:	0005883a 	mov	r2,zero
}
   12f00:	e037883a 	mov	sp,fp
   12f04:	dfc00117 	ldw	ra,4(sp)
   12f08:	df000017 	ldw	fp,0(sp)
   12f0c:	dec00204 	addi	sp,sp,8
   12f10:	f800283a 	ret

00012f14 <alt_avalon_i2c_master_config_speed_set>:
/*This is a utility function that computes parameters for the I2C master
 * configuration that best matches the speed requested. */
 ALT_AVALON_I2C_STATUS_CODE alt_avalon_i2c_master_config_speed_set(ALT_AVALON_I2C_DEV_t *i2c_dev,
                                                ALT_AVALON_I2C_MASTER_CONFIG_t * cfg,
                                                alt_u32 speed_in_hz)
{
   12f14:	defff904 	addi	sp,sp,-28
   12f18:	dfc00615 	stw	ra,24(sp)
   12f1c:	df000515 	stw	fp,20(sp)
   12f20:	df000504 	addi	fp,sp,20
   12f24:	e13ffd15 	stw	r4,-12(fp)
   12f28:	e17ffe15 	stw	r5,-8(fp)
   12f2c:	e1bfff15 	stw	r6,-4(fp)
    alt_u32 scl_lcnt,scl_hcnt;

    /* If speed is not standard or fast return range error */
    if ((speed_in_hz > ALT_AVALON_I2C_FS_MAX_HZ) || (speed_in_hz < ALT_AVALON_I2C_SS_MIN_HZ) || (speed_in_hz == 0))
   12f30:	e0ffff17 	ldw	r3,-4(fp)
   12f34:	008001b4 	movhi	r2,6
   12f38:	1086a004 	addi	r2,r2,6784
   12f3c:	10c00436 	bltu	r2,r3,12f50 <alt_avalon_i2c_master_config_speed_set+0x3c>
   12f40:	e0bfff17 	ldw	r2,-4(fp)
   12f44:	10000226 	beq	r2,zero,12f50 <alt_avalon_i2c_master_config_speed_set+0x3c>
   12f48:	e0bfff17 	ldw	r2,-4(fp)
   12f4c:	1000021e 	bne	r2,zero,12f58 <alt_avalon_i2c_master_config_speed_set+0x44>
    {
        return ALT_AVALON_I2C_RANGE;
   12f50:	00bfff04 	movi	r2,-4
   12f54:	00002906 	br	12ffc <alt_avalon_i2c_master_config_speed_set+0xe8>
    }

     /* <lcount> = <internal clock> / 2 * <speed, Hz> */
    scl_lcnt = (i2c_dev->ip_freq_in_hz) / (speed_in_hz << 1);
   12f58:	e0bffd17 	ldw	r2,-12(fp)
   12f5c:	10c00c17 	ldw	r3,48(r2)
   12f60:	e0bfff17 	ldw	r2,-4(fp)
   12f64:	1085883a 	add	r2,r2,r2
   12f68:	100b883a 	mov	r5,r2
   12f6c:	1809883a 	mov	r4,r3
   12f70:	0000df40 	call	df4 <__udivsi3>
   12f74:	e0bffb15 	stw	r2,-20(fp)

    /* adjust h/l by predetermined amount */
    scl_hcnt = scl_lcnt + ALT_AVALON_I2C_DIFF_LCNT_HCNT;
   12f78:	e0bffb17 	ldw	r2,-20(fp)
   12f7c:	10800f04 	addi	r2,r2,60
   12f80:	e0bffc15 	stw	r2,-16(fp)
    scl_lcnt = scl_lcnt - ALT_AVALON_I2C_DIFF_LCNT_HCNT;
   12f84:	e0bffb17 	ldw	r2,-20(fp)
   12f88:	10bff104 	addi	r2,r2,-60
   12f8c:	e0bffb15 	stw	r2,-20(fp)

    if (speed_in_hz > ALT_AVALON_I2C_FS_MIN_HZ)
   12f90:	e0ffff17 	ldw	r3,-4(fp)
   12f94:	008000b4 	movhi	r2,2
   12f98:	10a1a804 	addi	r2,r2,-31072
   12f9c:	10c0042e 	bgeu	r2,r3,12fb0 <alt_avalon_i2c_master_config_speed_set+0x9c>
    {
       cfg->speed_mode = ALT_AVALON_I2C_SPEED_FAST;
   12fa0:	e0bffe17 	ldw	r2,-8(fp)
   12fa4:	00c00044 	movi	r3,1
   12fa8:	10c00115 	stw	r3,4(r2)
   12fac:	00000206 	br	12fb8 <alt_avalon_i2c_master_config_speed_set+0xa4>
    }
    else 
    {
       cfg->speed_mode = ALT_AVALON_I2C_SPEED_STANDARD;    
   12fb0:	e0bffe17 	ldw	r2,-8(fp)
   12fb4:	10000115 	stw	zero,4(r2)
    }

    cfg->scl_lcnt = scl_lcnt;
   12fb8:	e0bffb17 	ldw	r2,-20(fp)
   12fbc:	1007883a 	mov	r3,r2
   12fc0:	e0bffe17 	ldw	r2,-8(fp)
   12fc4:	10c0028d 	sth	r3,10(r2)
    cfg->scl_hcnt = scl_hcnt;
   12fc8:	e0bffc17 	ldw	r2,-16(fp)
   12fcc:	1007883a 	mov	r3,r2
   12fd0:	e0bffe17 	ldw	r2,-8(fp)
   12fd4:	10c0020d 	sth	r3,8(r2)
    cfg->sda_cnt  = scl_lcnt - (scl_lcnt / 2);
   12fd8:	e0bffb17 	ldw	r2,-20(fp)
   12fdc:	1007883a 	mov	r3,r2
   12fe0:	e0bffb17 	ldw	r2,-20(fp)
   12fe4:	1004d07a 	srli	r2,r2,1
   12fe8:	1885c83a 	sub	r2,r3,r2
   12fec:	1007883a 	mov	r3,r2
   12ff0:	e0bffe17 	ldw	r2,-8(fp)
   12ff4:	10c0030d 	sth	r3,12(r2)

    return ALT_AVALON_I2C_SUCCESS;
   12ff8:	0005883a 	mov	r2,zero

}
   12ffc:	e037883a 	mov	sp,fp
   13000:	dfc00117 	ldw	ra,4(sp)
   13004:	df000017 	ldw	fp,0(sp)
   13008:	dec00204 	addi	sp,sp,8
   1300c:	f800283a 	ret

00013010 <alt_avalon_i2c_is_busy>:

/*Returns ALT_AVALON_I2C_TRUE if the I2C controller is busy. The I2C controller is busy if
 * not in the IDLE state */
ALT_AVALON_I2C_STATUS_CODE alt_avalon_i2c_is_busy(ALT_AVALON_I2C_DEV_t *i2c_dev)
{
   13010:	defffe04 	addi	sp,sp,-8
   13014:	df000115 	stw	fp,4(sp)
   13018:	df000104 	addi	fp,sp,4
   1301c:	e13fff15 	stw	r4,-4(fp)

    if (IORD_ALT_AVALON_I2C_STATUS(i2c_dev->i2c_base) & ALT_AVALON_I2C_STATUS_CORE_STATUS_MSK)
   13020:	e0bfff17 	ldw	r2,-4(fp)
   13024:	10800317 	ldw	r2,12(r2)
   13028:	10800504 	addi	r2,r2,20
   1302c:	10800037 	ldwio	r2,0(r2)
   13030:	1080004c 	andi	r2,r2,1
   13034:	10000226 	beq	r2,zero,13040 <alt_avalon_i2c_is_busy+0x30>
    {
       return ALT_AVALON_I2C_TRUE;
   13038:	00800044 	movi	r2,1
   1303c:	00000106 	br	13044 <alt_avalon_i2c_is_busy+0x34>
    }

    return ALT_AVALON_I2C_FALSE;
   13040:	0005883a 	mov	r2,zero
}
   13044:	e037883a 	mov	sp,fp
   13048:	df000017 	ldw	fp,0(sp)
   1304c:	dec00104 	addi	sp,sp,4
   13050:	f800283a 	ret

00013054 <alt_avalon_i2c_rx_read_available>:

/*Read all available bytes from the receive FIFO up to max_bytes_to_read.  If max_bytes_to_read = 0 then read all available */
void alt_avalon_i2c_rx_read_available(ALT_AVALON_I2C_DEV_t *i2c_dev, alt_u8 *buffer, alt_u32 max_bytes_to_read, alt_u32 *bytes_read)
{
   13054:	defffb04 	addi	sp,sp,-20
   13058:	df000415 	stw	fp,16(sp)
   1305c:	df000404 	addi	fp,sp,16
   13060:	e13ffc15 	stw	r4,-16(fp)
   13064:	e17ffd15 	stw	r5,-12(fp)
   13068:	e1bffe15 	stw	r6,-8(fp)
   1306c:	e1ffff15 	stw	r7,-4(fp)
    *bytes_read = 0;
   13070:	e0bfff17 	ldw	r2,-4(fp)
   13074:	10000015 	stw	zero,0(r2)
    
    while (IORD_ALT_AVALON_I2C_RX_DATA_FIFO_LVL(i2c_dev->i2c_base))
   13078:	00001406 	br	130cc <alt_avalon_i2c_rx_read_available+0x78>
    {
       buffer[*bytes_read] = (alt_u8)IORD_ALT_AVALON_I2C_RX_DATA(i2c_dev->i2c_base);
   1307c:	e0bfff17 	ldw	r2,-4(fp)
   13080:	10800017 	ldw	r2,0(r2)
   13084:	e0fffd17 	ldw	r3,-12(fp)
   13088:	1885883a 	add	r2,r3,r2
   1308c:	e0fffc17 	ldw	r3,-16(fp)
   13090:	18c00317 	ldw	r3,12(r3)
   13094:	18c00104 	addi	r3,r3,4
   13098:	18c00037 	ldwio	r3,0(r3)
   1309c:	10c00005 	stb	r3,0(r2)
       *bytes_read+=1; 
   130a0:	e0bfff17 	ldw	r2,-4(fp)
   130a4:	10800017 	ldw	r2,0(r2)
   130a8:	10c00044 	addi	r3,r2,1
   130ac:	e0bfff17 	ldw	r2,-4(fp)
   130b0:	10c00015 	stw	r3,0(r2)
       if ((*bytes_read == max_bytes_to_read) && (max_bytes_to_read != 0)) break;       
   130b4:	e0bfff17 	ldw	r2,-4(fp)
   130b8:	10c00017 	ldw	r3,0(r2)
   130bc:	e0bffe17 	ldw	r2,-8(fp)
   130c0:	1880021e 	bne	r3,r2,130cc <alt_avalon_i2c_rx_read_available+0x78>
   130c4:	e0bffe17 	ldw	r2,-8(fp)
   130c8:	1000061e 	bne	r2,zero,130e4 <alt_avalon_i2c_rx_read_available+0x90>
/*Read all available bytes from the receive FIFO up to max_bytes_to_read.  If max_bytes_to_read = 0 then read all available */
void alt_avalon_i2c_rx_read_available(ALT_AVALON_I2C_DEV_t *i2c_dev, alt_u8 *buffer, alt_u32 max_bytes_to_read, alt_u32 *bytes_read)
{
    *bytes_read = 0;
    
    while (IORD_ALT_AVALON_I2C_RX_DATA_FIFO_LVL(i2c_dev->i2c_base))
   130cc:	e0bffc17 	ldw	r2,-16(fp)
   130d0:	10800317 	ldw	r2,12(r2)
   130d4:	10800704 	addi	r2,r2,28
   130d8:	10800037 	ldwio	r2,0(r2)
   130dc:	103fe71e 	bne	r2,zero,1307c <__alt_mem_Onchip_SRAM+0xf801307c>
    {
       buffer[*bytes_read] = (alt_u8)IORD_ALT_AVALON_I2C_RX_DATA(i2c_dev->i2c_base);
       *bytes_read+=1; 
       if ((*bytes_read == max_bytes_to_read) && (max_bytes_to_read != 0)) break;       
    }
}
   130e0:	00000106 	br	130e8 <alt_avalon_i2c_rx_read_available+0x94>
    
    while (IORD_ALT_AVALON_I2C_RX_DATA_FIFO_LVL(i2c_dev->i2c_base))
    {
       buffer[*bytes_read] = (alt_u8)IORD_ALT_AVALON_I2C_RX_DATA(i2c_dev->i2c_base);
       *bytes_read+=1; 
       if ((*bytes_read == max_bytes_to_read) && (max_bytes_to_read != 0)) break;       
   130e4:	0001883a 	nop
    }
}
   130e8:	0001883a 	nop
   130ec:	e037883a 	mov	sp,fp
   130f0:	df000017 	ldw	fp,0(sp)
   130f4:	dec00104 	addi	sp,sp,4
   130f8:	f800283a 	ret

000130fc <alt_avalon_i2c_rx_read>:

/*when a byte is available, reads a single data byte from the receive FIFO. */
ALT_AVALON_I2C_STATUS_CODE alt_avalon_i2c_rx_read(ALT_AVALON_I2C_DEV_t *i2c_dev, alt_u8 *val)
{
   130fc:	defffa04 	addi	sp,sp,-24
   13100:	dfc00515 	stw	ra,20(sp)
   13104:	df000415 	stw	fp,16(sp)
   13108:	df000404 	addi	fp,sp,16
   1310c:	e13ffe15 	stw	r4,-8(fp)
   13110:	e17fff15 	stw	r5,-4(fp)
    alt_u32 status = ALT_AVALON_I2C_SUCCESS;
   13114:	e03ffc15 	stw	zero,-16(fp)
    alt_u32 timeout = 100000;
   13118:	008000b4 	movhi	r2,2
   1311c:	10a1a804 	addi	r2,r2,-31072
   13120:	e0bffd15 	stw	r2,-12(fp)


    while (IORD_ALT_AVALON_I2C_RX_DATA_FIFO_LVL(i2c_dev->i2c_base) == 0)
   13124:	00000d06 	br	1315c <alt_avalon_i2c_rx_read+0x60>
    {
      if (timeout<10) alt_busy_sleep(10000);
   13128:	e0bffd17 	ldw	r2,-12(fp)
   1312c:	108002a8 	cmpgeui	r2,r2,10
   13130:	1000021e 	bne	r2,zero,1313c <alt_avalon_i2c_rx_read+0x40>
   13134:	0109c404 	movi	r4,10000
   13138:	00156b00 	call	156b0 <alt_busy_sleep>
      if (--timeout == 0)
   1313c:	e0bffd17 	ldw	r2,-12(fp)
   13140:	10bfffc4 	addi	r2,r2,-1
   13144:	e0bffd15 	stw	r2,-12(fp)
   13148:	e0bffd17 	ldw	r2,-12(fp)
   1314c:	1000031e 	bne	r2,zero,1315c <alt_avalon_i2c_rx_read+0x60>
      {
        status = ALT_AVALON_I2C_TIMEOUT;
   13150:	00bfff84 	movi	r2,-2
   13154:	e0bffc15 	stw	r2,-16(fp)
        break;
   13158:	00000506 	br	13170 <alt_avalon_i2c_rx_read+0x74>
{
    alt_u32 status = ALT_AVALON_I2C_SUCCESS;
    alt_u32 timeout = 100000;


    while (IORD_ALT_AVALON_I2C_RX_DATA_FIFO_LVL(i2c_dev->i2c_base) == 0)
   1315c:	e0bffe17 	ldw	r2,-8(fp)
   13160:	10800317 	ldw	r2,12(r2)
   13164:	10800704 	addi	r2,r2,28
   13168:	10800037 	ldwio	r2,0(r2)
   1316c:	103fee26 	beq	r2,zero,13128 <__alt_mem_Onchip_SRAM+0xf8013128>
        status = ALT_AVALON_I2C_TIMEOUT;
        break;
      }
    }

    *val = (alt_u8)IORD_ALT_AVALON_I2C_RX_DATA(i2c_dev->i2c_base);
   13170:	e0bffe17 	ldw	r2,-8(fp)
   13174:	10800317 	ldw	r2,12(r2)
   13178:	10800104 	addi	r2,r2,4
   1317c:	10800037 	ldwio	r2,0(r2)
   13180:	1007883a 	mov	r3,r2
   13184:	e0bfff17 	ldw	r2,-4(fp)
   13188:	10c00005 	stb	r3,0(r2)
        
    return status;
   1318c:	e0bffc17 	ldw	r2,-16(fp)
}
   13190:	e037883a 	mov	sp,fp
   13194:	dfc00117 	ldw	ra,4(sp)
   13198:	df000017 	ldw	fp,0(sp)
   1319c:	dec00204 	addi	sp,sp,8
   131a0:	f800283a 	ret

000131a4 <alt_avalon_i2c_cmd_write>:
/* When space is available, writes the Transfer Command FIFO. */
ALT_AVALON_I2C_STATUS_CODE alt_avalon_i2c_cmd_write(ALT_AVALON_I2C_DEV_t *i2c_dev, 
                                                      alt_u8 val,
                                                      alt_u8 issue_restart,
                                                      alt_u8 issue_stop)
{
   131a4:	defff804 	addi	sp,sp,-32
   131a8:	dfc00715 	stw	ra,28(sp)
   131ac:	df000615 	stw	fp,24(sp)
   131b0:	df000604 	addi	fp,sp,24
   131b4:	e13ffc15 	stw	r4,-16(fp)
   131b8:	2809883a 	mov	r4,r5
   131bc:	3007883a 	mov	r3,r6
   131c0:	3805883a 	mov	r2,r7
   131c4:	e13ffd05 	stb	r4,-12(fp)
   131c8:	e0fffe05 	stb	r3,-8(fp)
   131cc:	e0bfff05 	stb	r2,-4(fp)
    alt_u32 timeout = 10000;
   131d0:	0089c404 	movi	r2,10000
   131d4:	e0bffa15 	stw	r2,-24(fp)
    ALT_AVALON_I2C_STATUS_CODE status = ALT_AVALON_I2C_SUCCESS;
   131d8:	e03ffb15 	stw	zero,-20(fp)


    while ((IORD_ALT_AVALON_I2C_ISR(i2c_dev->i2c_base) & ALT_AVALON_I2C_ISR_TX_READY_MSK)==0) 
   131dc:	00000c06 	br	13210 <alt_avalon_i2c_cmd_write+0x6c>
    {
      if (timeout<10) alt_busy_sleep(10000);    
   131e0:	e0bffa17 	ldw	r2,-24(fp)
   131e4:	108002a8 	cmpgeui	r2,r2,10
   131e8:	1000021e 	bne	r2,zero,131f4 <alt_avalon_i2c_cmd_write+0x50>
   131ec:	0109c404 	movi	r4,10000
   131f0:	00156b00 	call	156b0 <alt_busy_sleep>
      if (--timeout == 0)
   131f4:	e0bffa17 	ldw	r2,-24(fp)
   131f8:	10bfffc4 	addi	r2,r2,-1
   131fc:	e0bffa15 	stw	r2,-24(fp)
   13200:	e0bffa17 	ldw	r2,-24(fp)
   13204:	1000021e 	bne	r2,zero,13210 <alt_avalon_i2c_cmd_write+0x6c>
      {
        return ALT_AVALON_I2C_TIMEOUT;
   13208:	00bfff84 	movi	r2,-2
   1320c:	00001906 	br	13274 <alt_avalon_i2c_cmd_write+0xd0>
{
    alt_u32 timeout = 10000;
    ALT_AVALON_I2C_STATUS_CODE status = ALT_AVALON_I2C_SUCCESS;


    while ((IORD_ALT_AVALON_I2C_ISR(i2c_dev->i2c_base) & ALT_AVALON_I2C_ISR_TX_READY_MSK)==0) 
   13210:	e0bffc17 	ldw	r2,-16(fp)
   13214:	10800317 	ldw	r2,12(r2)
   13218:	10800404 	addi	r2,r2,16
   1321c:	10800037 	ldwio	r2,0(r2)
   13220:	1080004c 	andi	r2,r2,1
   13224:	103fee26 	beq	r2,zero,131e0 <__alt_mem_Onchip_SRAM+0xf80131e0>
      {
        return ALT_AVALON_I2C_TIMEOUT;
      }
    }

    IOWR_ALT_AVALON_I2C_TFR_CMD(i2c_dev->i2c_base,val |
   13228:	e0bffc17 	ldw	r2,-16(fp)
   1322c:	10800317 	ldw	r2,12(r2)
   13230:	e13ffd03 	ldbu	r4,-12(fp)
   13234:	e0fffe03 	ldbu	r3,-8(fp)
   13238:	1806927a 	slli	r3,r3,9
   1323c:	20c8b03a 	or	r4,r4,r3
   13240:	e0ffff03 	ldbu	r3,-4(fp)
   13244:	1806923a 	slli	r3,r3,8
   13248:	20c6b03a 	or	r3,r4,r3
   1324c:	10c00035 	stwio	r3,0(r2)
                                     (issue_restart << ALT_AVALON_I2C_TFR_CMD_STA_OFST) |
                                     (issue_stop << ALT_AVALON_I2C_TFR_CMD_STO_OFST));


    /*check for nack error*/
    alt_avalon_i2c_check_nack(i2c_dev,&status);
   13250:	e0bffb04 	addi	r2,fp,-20
   13254:	100b883a 	mov	r5,r2
   13258:	e13ffc17 	ldw	r4,-16(fp)
   1325c:	00133e40 	call	133e4 <alt_avalon_i2c_check_nack>
    
    /*check for arb lost*/
    alt_avalon_i2c_check_arblost(i2c_dev,&status);
   13260:	e0bffb04 	addi	r2,fp,-20
   13264:	100b883a 	mov	r5,r2
   13268:	e13ffc17 	ldw	r4,-16(fp)
   1326c:	00134300 	call	13430 <alt_avalon_i2c_check_arblost>
    
    return status;
   13270:	e0bffb17 	ldw	r2,-20(fp)
}
   13274:	e037883a 	mov	sp,fp
   13278:	dfc00117 	ldw	ra,4(sp)
   1327c:	df000017 	ldw	fp,0(sp)
   13280:	dec00204 	addi	sp,sp,8
   13284:	f800283a 	ret

00013288 <alt_avalon_i2c_send_address>:

/*send 7 or 10 bit i2c address to cmd fifo*/
ALT_AVALON_I2C_STATUS_CODE alt_avalon_i2c_send_address(ALT_AVALON_I2C_DEV_t *i2c_dev,
                                                       const alt_u32 rw_bit,
                                                       const alt_u8 issue_restart)
{
   13288:	defffa04 	addi	sp,sp,-24
   1328c:	dfc00515 	stw	ra,20(sp)
   13290:	df000415 	stw	fp,16(sp)
   13294:	df000404 	addi	fp,sp,16
   13298:	e13ffd15 	stw	r4,-12(fp)
   1329c:	e17ffe15 	stw	r5,-8(fp)
   132a0:	3005883a 	mov	r2,r6
   132a4:	e0bfff05 	stb	r2,-4(fp)
    alt_u32 status;
        
    if (i2c_dev->address_mode == ALT_AVALON_I2C_ADDR_MODE_10_BIT)
   132a8:	e0bffd17 	ldw	r2,-12(fp)
   132ac:	10800d17 	ldw	r2,52(r2)
   132b0:	10800058 	cmpnei	r2,r2,1
   132b4:	10001c1e 	bne	r2,zero,13328 <alt_avalon_i2c_send_address+0xa0>
    {
       status = alt_avalon_i2c_cmd_write(i2c_dev,(((i2c_dev->master_target_address | TARGET_ADDR_MASK_10BIT) >> 7) & 0xfe) | rw_bit,issue_restart,ALT_AVALON_I2C_NO_STOP);
   132b8:	e0bffd17 	ldw	r2,-12(fp)
   132bc:	10800917 	ldw	r2,36(r2)
   132c0:	109e0014 	ori	r2,r2,30720
   132c4:	1004d1fa 	srli	r2,r2,7
   132c8:	1007883a 	mov	r3,r2
   132cc:	00bfff84 	movi	r2,-2
   132d0:	1884703a 	and	r2,r3,r2
   132d4:	1007883a 	mov	r3,r2
   132d8:	e0bffe17 	ldw	r2,-8(fp)
   132dc:	1884b03a 	or	r2,r3,r2
   132e0:	10803fcc 	andi	r2,r2,255
   132e4:	e0ffff03 	ldbu	r3,-4(fp)
   132e8:	000f883a 	mov	r7,zero
   132ec:	180d883a 	mov	r6,r3
   132f0:	100b883a 	mov	r5,r2
   132f4:	e13ffd17 	ldw	r4,-12(fp)
   132f8:	00131a40 	call	131a4 <alt_avalon_i2c_cmd_write>
   132fc:	e0bffc15 	stw	r2,-16(fp)
       status = alt_avalon_i2c_cmd_write(i2c_dev,i2c_dev->master_target_address & 0xff,ALT_AVALON_I2C_NO_RESTART,ALT_AVALON_I2C_NO_STOP);      
   13300:	e0bffd17 	ldw	r2,-12(fp)
   13304:	10800917 	ldw	r2,36(r2)
   13308:	10803fcc 	andi	r2,r2,255
   1330c:	000f883a 	mov	r7,zero
   13310:	000d883a 	mov	r6,zero
   13314:	100b883a 	mov	r5,r2
   13318:	e13ffd17 	ldw	r4,-12(fp)
   1331c:	00131a40 	call	131a4 <alt_avalon_i2c_cmd_write>
   13320:	e0bffc15 	stw	r2,-16(fp)
   13324:	00000e06 	br	13360 <alt_avalon_i2c_send_address+0xd8>
    }
    else
    {
       status = alt_avalon_i2c_cmd_write(i2c_dev,(i2c_dev->master_target_address << 1) | rw_bit,issue_restart,ALT_AVALON_I2C_NO_STOP);
   13328:	e0bffd17 	ldw	r2,-12(fp)
   1332c:	10800917 	ldw	r2,36(r2)
   13330:	1085883a 	add	r2,r2,r2
   13334:	1007883a 	mov	r3,r2
   13338:	e0bffe17 	ldw	r2,-8(fp)
   1333c:	1884b03a 	or	r2,r3,r2
   13340:	10803fcc 	andi	r2,r2,255
   13344:	e0ffff03 	ldbu	r3,-4(fp)
   13348:	000f883a 	mov	r7,zero
   1334c:	180d883a 	mov	r6,r3
   13350:	100b883a 	mov	r5,r2
   13354:	e13ffd17 	ldw	r4,-12(fp)
   13358:	00131a40 	call	131a4 <alt_avalon_i2c_cmd_write>
   1335c:	e0bffc15 	stw	r2,-16(fp)
    }
    
    return status;
   13360:	e0bffc17 	ldw	r2,-16(fp)
}
   13364:	e037883a 	mov	sp,fp
   13368:	dfc00117 	ldw	ra,4(sp)
   1336c:	df000017 	ldw	fp,0(sp)
   13370:	dec00204 	addi	sp,sp,8
   13374:	f800283a 	ret

00013378 <alt_avalon_i2c_master_target_get>:

/* This function returns the current target address. */
void alt_avalon_i2c_master_target_get(ALT_AVALON_I2C_DEV_t * i2c_dev, alt_u32 * target_addr)
{
   13378:	defffd04 	addi	sp,sp,-12
   1337c:	df000215 	stw	fp,8(sp)
   13380:	df000204 	addi	fp,sp,8
   13384:	e13ffe15 	stw	r4,-8(fp)
   13388:	e17fff15 	stw	r5,-4(fp)
    *target_addr=i2c_dev->master_target_address;
   1338c:	e0bffe17 	ldw	r2,-8(fp)
   13390:	10c00917 	ldw	r3,36(r2)
   13394:	e0bfff17 	ldw	r2,-4(fp)
   13398:	10c00015 	stw	r3,0(r2)
}
   1339c:	0001883a 	nop
   133a0:	e037883a 	mov	sp,fp
   133a4:	df000017 	ldw	fp,0(sp)
   133a8:	dec00104 	addi	sp,sp,4
   133ac:	f800283a 	ret

000133b0 <alt_avalon_i2c_master_target_set>:

/* This function updates the target address for any upcoming I2C bus IO. */
void alt_avalon_i2c_master_target_set(ALT_AVALON_I2C_DEV_t * i2c_dev, alt_u32 target_addr)
{
   133b0:	defffd04 	addi	sp,sp,-12
   133b4:	df000215 	stw	fp,8(sp)
   133b8:	df000204 	addi	fp,sp,8
   133bc:	e13ffe15 	stw	r4,-8(fp)
   133c0:	e17fff15 	stw	r5,-4(fp)
    i2c_dev->master_target_address=target_addr;
   133c4:	e0bffe17 	ldw	r2,-8(fp)
   133c8:	e0ffff17 	ldw	r3,-4(fp)
   133cc:	10c00915 	stw	r3,36(r2)
}
   133d0:	0001883a 	nop
   133d4:	e037883a 	mov	sp,fp
   133d8:	df000017 	ldw	fp,0(sp)
   133dc:	dec00104 	addi	sp,sp,4
   133e0:	f800283a 	ret

000133e4 <alt_avalon_i2c_check_nack>:

/*if nack detected, status is set to ALT_AVALON_I2C_NACK_ERR*/
void alt_avalon_i2c_check_nack(ALT_AVALON_I2C_DEV_t *i2c_dev,ALT_AVALON_I2C_STATUS_CODE * status)
{    
   133e4:	defffd04 	addi	sp,sp,-12
   133e8:	df000215 	stw	fp,8(sp)
   133ec:	df000204 	addi	fp,sp,8
   133f0:	e13ffe15 	stw	r4,-8(fp)
   133f4:	e17fff15 	stw	r5,-4(fp)
    if (IORD_ALT_AVALON_I2C_ISR(i2c_dev->i2c_base) & ALT_AVALON_I2C_ISR_NACK_DET_MSK)
   133f8:	e0bffe17 	ldw	r2,-8(fp)
   133fc:	10800317 	ldw	r2,12(r2)
   13400:	10800404 	addi	r2,r2,16
   13404:	10800037 	ldwio	r2,0(r2)
   13408:	1080010c 	andi	r2,r2,4
   1340c:	10000326 	beq	r2,zero,1341c <alt_avalon_i2c_check_nack+0x38>
    {
      *status=ALT_AVALON_I2C_NACK_ERR;
   13410:	e0bfff17 	ldw	r2,-4(fp)
   13414:	00fffec4 	movi	r3,-5
   13418:	10c00015 	stw	r3,0(r2)
    }
}
   1341c:	0001883a 	nop
   13420:	e037883a 	mov	sp,fp
   13424:	df000017 	ldw	fp,0(sp)
   13428:	dec00104 	addi	sp,sp,4
   1342c:	f800283a 	ret

00013430 <alt_avalon_i2c_check_arblost>:

/*if arb lost is detected, status is set to ALT_AVALON_I2C_ARB_LOST_ERR*/
void alt_avalon_i2c_check_arblost(ALT_AVALON_I2C_DEV_t *i2c_dev,ALT_AVALON_I2C_STATUS_CODE * status)
{      
   13430:	defffd04 	addi	sp,sp,-12
   13434:	df000215 	stw	fp,8(sp)
   13438:	df000204 	addi	fp,sp,8
   1343c:	e13ffe15 	stw	r4,-8(fp)
   13440:	e17fff15 	stw	r5,-4(fp)
    if (IORD_ALT_AVALON_I2C_ISR(i2c_dev->i2c_base) & ALT_AVALON_I2C_ISR_ARBLOST_DET_MSK)
   13444:	e0bffe17 	ldw	r2,-8(fp)
   13448:	10800317 	ldw	r2,12(r2)
   1344c:	10800404 	addi	r2,r2,16
   13450:	10800037 	ldwio	r2,0(r2)
   13454:	1080020c 	andi	r2,r2,8
   13458:	10000326 	beq	r2,zero,13468 <alt_avalon_i2c_check_arblost+0x38>
    {
      *status=ALT_AVALON_I2C_ARB_LOST_ERR;
   1345c:	e0bfff17 	ldw	r2,-4(fp)
   13460:	00fffe84 	movi	r3,-6
   13464:	10c00015 	stw	r3,0(r2)
    }
}
   13468:	0001883a 	nop
   1346c:	e037883a 	mov	sp,fp
   13470:	df000017 	ldw	fp,0(sp)
   13474:	dec00104 	addi	sp,sp,4
   13478:	f800283a 	ret

0001347c <alt_avalon_i2c_interrupt_transaction_status>:

ALT_AVALON_I2C_STATUS_CODE alt_avalon_i2c_interrupt_transaction_status(ALT_AVALON_I2C_DEV_t *i2c_dev)
{
   1347c:	defff804 	addi	sp,sp,-32
   13480:	dfc00715 	stw	ra,28(sp)
   13484:	df000615 	stw	fp,24(sp)
   13488:	df000604 	addi	fp,sp,24
   1348c:	e13fff15 	stw	r4,-4(fp)
    ALT_AVALON_I2C_STATUS_CODE status = ALT_AVALON_I2C_SUCCESS;
   13490:	e03ffc15 	stw	zero,-16(fp)
    IRQ_DATA_t *irq_data = i2c_dev->callback_context;
   13494:	e0bfff17 	ldw	r2,-4(fp)
   13498:	10800717 	ldw	r2,28(r2)
   1349c:	e0bffb15 	stw	r2,-20(fp)
    alt_u32 timeout=10000 * irq_data->size + 10000;
   134a0:	e0bffb17 	ldw	r2,-20(fp)
   134a4:	10800117 	ldw	r2,4(r2)
   134a8:	10800044 	addi	r2,r2,1
   134ac:	0149c404 	movi	r5,10000
   134b0:	1009883a 	mov	r4,r2
   134b4:	0000eb00 	call	eb0 <__mulsi3>
   134b8:	e0bffa15 	stw	r2,-24(fp)
    alt_u32 saveints,temp_bytes_read;
    
    /* save current enabled interrupts */
    alt_avalon_i2c_enabled_ints_get(i2c_dev,&saveints);
   134bc:	e0bffd04 	addi	r2,fp,-12
   134c0:	100b883a 	mov	r5,r2
   134c4:	e13fff17 	ldw	r4,-4(fp)
   134c8:	00143140 	call	14314 <alt_avalon_i2c_enabled_ints_get>
    
    /* disable the enabled interrupts */
    alt_avalon_i2c_int_disable(i2c_dev,saveints);
   134cc:	e0bffd17 	ldw	r2,-12(fp)
   134d0:	100b883a 	mov	r5,r2
   134d4:	e13fff17 	ldw	r4,-4(fp)
   134d8:	00142480 	call	14248 <alt_avalon_i2c_int_disable>
    
    alt_avalon_i2c_check_nack(i2c_dev,&status);
   134dc:	e0bffc04 	addi	r2,fp,-16
   134e0:	100b883a 	mov	r5,r2
   134e4:	e13fff17 	ldw	r4,-4(fp)
   134e8:	00133e40 	call	133e4 <alt_avalon_i2c_check_nack>

    if (status!=ALT_AVALON_I2C_SUCCESS)
   134ec:	e0bffc17 	ldw	r2,-16(fp)
   134f0:	10002226 	beq	r2,zero,1357c <alt_avalon_i2c_interrupt_transaction_status+0x100>
    {
      if (irq_data->irq_busy)
   134f4:	e0bffb17 	ldw	r2,-20(fp)
   134f8:	10800217 	ldw	r2,8(r2)
   134fc:	10001d26 	beq	r2,zero,13574 <alt_avalon_i2c_interrupt_transaction_status+0xf8>
      {
        while (alt_avalon_i2c_is_busy(i2c_dev))
   13500:	00000d06 	br	13538 <alt_avalon_i2c_interrupt_transaction_status+0xbc>
        {
              if (timeout<10) alt_busy_sleep(10000);
   13504:	e0bffa17 	ldw	r2,-24(fp)
   13508:	108002a8 	cmpgeui	r2,r2,10
   1350c:	1000021e 	bne	r2,zero,13518 <alt_avalon_i2c_interrupt_transaction_status+0x9c>
   13510:	0109c404 	movi	r4,10000
   13514:	00156b00 	call	156b0 <alt_busy_sleep>
              if (--timeout == 0)
   13518:	e0bffa17 	ldw	r2,-24(fp)
   1351c:	10bfffc4 	addi	r2,r2,-1
   13520:	e0bffa15 	stw	r2,-24(fp)
   13524:	e0bffa17 	ldw	r2,-24(fp)
   13528:	1000031e 	bne	r2,zero,13538 <alt_avalon_i2c_interrupt_transaction_status+0xbc>
              {
                 status = ALT_AVALON_I2C_TIMEOUT;
   1352c:	00bfff84 	movi	r2,-2
   13530:	e0bffc15 	stw	r2,-16(fp)
                 break;
   13534:	00000306 	br	13544 <alt_avalon_i2c_interrupt_transaction_status+0xc8>

    if (status!=ALT_AVALON_I2C_SUCCESS)
    {
      if (irq_data->irq_busy)
      {
        while (alt_avalon_i2c_is_busy(i2c_dev))
   13538:	e13fff17 	ldw	r4,-4(fp)
   1353c:	00130100 	call	13010 <alt_avalon_i2c_is_busy>
   13540:	103ff01e 	bne	r2,zero,13504 <__alt_mem_Onchip_SRAM+0xf8013504>
                 break;
              }
        }
          
        /*clear any rx entries */
        alt_avalon_i2c_rx_read_available(i2c_dev, irq_data->buffer,0,&temp_bytes_read);
   13544:	e0bffb17 	ldw	r2,-20(fp)
   13548:	10800017 	ldw	r2,0(r2)
   1354c:	e0fffe04 	addi	r3,fp,-8
   13550:	180f883a 	mov	r7,r3
   13554:	000d883a 	mov	r6,zero
   13558:	100b883a 	mov	r5,r2
   1355c:	e13fff17 	ldw	r4,-4(fp)
   13560:	00130540 	call	13054 <alt_avalon_i2c_rx_read_available>
       
        /*disable the ip.  The ip is disabled and enabled for each transaction. */
        alt_avalon_i2c_disable(i2c_dev);
   13564:	e13fff17 	ldw	r4,-4(fp)
   13568:	0012cb80 	call	12cb8 <alt_avalon_i2c_disable>
          
        /*abort the transaction */
        irq_data->irq_busy=0;
   1356c:	e0bffb17 	ldw	r2,-20(fp)
   13570:	10000215 	stw	zero,8(r2)
      }
      
      /*return nack error so transaction can be retried*/
      return status;
   13574:	e0bffc17 	ldw	r2,-16(fp)
   13578:	00000a06 	br	135a4 <alt_avalon_i2c_interrupt_transaction_status+0x128>
    }
    
    if (irq_data->irq_busy)
   1357c:	e0bffb17 	ldw	r2,-20(fp)
   13580:	10800217 	ldw	r2,8(r2)
   13584:	10000626 	beq	r2,zero,135a0 <alt_avalon_i2c_interrupt_transaction_status+0x124>
    {
        /*re-enable the interrupts*/
        alt_avalon_i2c_int_enable(i2c_dev,saveints);
   13588:	e0bffd17 	ldw	r2,-12(fp)
   1358c:	100b883a 	mov	r5,r2
   13590:	e13fff17 	ldw	r4,-4(fp)
   13594:	00142b00 	call	142b0 <alt_avalon_i2c_int_enable>
        
        /*return transaction still busy*/
        return ALT_AVALON_I2C_BUSY;
   13598:	00bffe44 	movi	r2,-7
   1359c:	00000106 	br	135a4 <alt_avalon_i2c_interrupt_transaction_status+0x128>
    }
    
    /*return transaction completed status, ok to do another transaction*/
    return ALT_AVALON_I2C_SUCCESS;
   135a0:	0005883a 	mov	r2,zero
}
   135a4:	e037883a 	mov	sp,fp
   135a8:	dfc00117 	ldw	ra,4(sp)
   135ac:	df000017 	ldw	fp,0(sp)
   135b0:	dec00204 	addi	sp,sp,8
   135b4:	f800283a 	ret

000135b8 <alt_avalon_i2c_master_tx>:
/*transmit function with retry and optionally interrupts*/
ALT_AVALON_I2C_STATUS_CODE alt_avalon_i2c_master_tx(ALT_AVALON_I2C_DEV_t *i2c_dev,
                                       const alt_u8 * buffer,
                                       const alt_u32 size,
                                       const alt_u8 use_interrupts)
{
   135b8:	defff704 	addi	sp,sp,-36
   135bc:	dfc00815 	stw	ra,32(sp)
   135c0:	df000715 	stw	fp,28(sp)
   135c4:	df000704 	addi	fp,sp,28
   135c8:	e13ffc15 	stw	r4,-16(fp)
   135cc:	e17ffd15 	stw	r5,-12(fp)
   135d0:	e1bffe15 	stw	r6,-8(fp)
   135d4:	3805883a 	mov	r2,r7
   135d8:	e0bfff05 	stb	r2,-4(fp)
    ALT_AVALON_I2C_STATUS_CODE status;
    alt_u32 retry=10000;  
   135dc:	0089c404 	movi	r2,10000
   135e0:	e0bffb15 	stw	r2,-20(fp)
    
    while (retry--)
   135e4:	00002206 	br	13670 <alt_avalon_i2c_master_tx+0xb8>
    {
      if (retry<10) alt_busy_sleep(10000);
   135e8:	e0bffb17 	ldw	r2,-20(fp)
   135ec:	108002a8 	cmpgeui	r2,r2,10
   135f0:	1000021e 	bne	r2,zero,135fc <alt_avalon_i2c_master_tx+0x44>
   135f4:	0109c404 	movi	r4,10000
   135f8:	00156b00 	call	156b0 <alt_busy_sleep>
      if (use_interrupts)
   135fc:	e0bfff03 	ldbu	r2,-4(fp)
   13600:	10000926 	beq	r2,zero,13628 <alt_avalon_i2c_master_tx+0x70>
      {
         status = alt_avalon_i2c_master_transmit_using_interrupts(i2c_dev, buffer, size, ALT_AVALON_I2C_NO_RESTART, ALT_AVALON_I2C_STOP); 
   13604:	00800044 	movi	r2,1
   13608:	d8800015 	stw	r2,0(sp)
   1360c:	000f883a 	mov	r7,zero
   13610:	e1bffe17 	ldw	r6,-8(fp)
   13614:	e17ffd17 	ldw	r5,-12(fp)
   13618:	e13ffc17 	ldw	r4,-16(fp)
   1361c:	0013b640 	call	13b64 <alt_avalon_i2c_master_transmit_using_interrupts>
   13620:	e0bffa15 	stw	r2,-24(fp)
   13624:	00000806 	br	13648 <alt_avalon_i2c_master_tx+0x90>
      }
      else
      {
         status = alt_avalon_i2c_master_transmit(i2c_dev, buffer, size, ALT_AVALON_I2C_NO_RESTART, ALT_AVALON_I2C_STOP);
   13628:	00800044 	movi	r2,1
   1362c:	d8800015 	stw	r2,0(sp)
   13630:	000f883a 	mov	r7,zero
   13634:	e1bffe17 	ldw	r6,-8(fp)
   13638:	e17ffd17 	ldw	r5,-12(fp)
   1363c:	e13ffc17 	ldw	r4,-16(fp)
   13640:	00139a40 	call	139a4 <alt_avalon_i2c_master_transmit>
   13644:	e0bffa15 	stw	r2,-24(fp)
      }
      if ((status==ALT_AVALON_I2C_ARB_LOST_ERR) || (status==ALT_AVALON_I2C_NACK_ERR) || (status==ALT_AVALON_I2C_BUSY)) continue;
   13648:	e0bffa17 	ldw	r2,-24(fp)
   1364c:	10bffea0 	cmpeqi	r2,r2,-6
   13650:	1000061e 	bne	r2,zero,1366c <alt_avalon_i2c_master_tx+0xb4>
   13654:	e0bffa17 	ldw	r2,-24(fp)
   13658:	10bffee0 	cmpeqi	r2,r2,-5
   1365c:	1000031e 	bne	r2,zero,1366c <alt_avalon_i2c_master_tx+0xb4>
   13660:	e0bffa17 	ldw	r2,-24(fp)
   13664:	10bffe58 	cmpnei	r2,r2,-7
   13668:	1000061e 	bne	r2,zero,13684 <alt_avalon_i2c_master_tx+0xcc>
   1366c:	0001883a 	nop
                                       const alt_u8 use_interrupts)
{
    ALT_AVALON_I2C_STATUS_CODE status;
    alt_u32 retry=10000;  
    
    while (retry--)
   13670:	e0bffb17 	ldw	r2,-20(fp)
   13674:	10ffffc4 	addi	r3,r2,-1
   13678:	e0fffb15 	stw	r3,-20(fp)
   1367c:	103fda1e 	bne	r2,zero,135e8 <__alt_mem_Onchip_SRAM+0xf80135e8>
   13680:	00000106 	br	13688 <alt_avalon_i2c_master_tx+0xd0>
      else
      {
         status = alt_avalon_i2c_master_transmit(i2c_dev, buffer, size, ALT_AVALON_I2C_NO_RESTART, ALT_AVALON_I2C_STOP);
      }
      if ((status==ALT_AVALON_I2C_ARB_LOST_ERR) || (status==ALT_AVALON_I2C_NACK_ERR) || (status==ALT_AVALON_I2C_BUSY)) continue;
      break;
   13684:	0001883a 	nop
    }

    return status;
   13688:	e0bffa17 	ldw	r2,-24(fp)
}        
   1368c:	e037883a 	mov	sp,fp
   13690:	dfc00117 	ldw	ra,4(sp)
   13694:	df000017 	ldw	fp,0(sp)
   13698:	dec00204 	addi	sp,sp,8
   1369c:	f800283a 	ret

000136a0 <alt_avalon_i2c_master_rx>:
/*receive function with retry and optionally interrupts*/
ALT_AVALON_I2C_STATUS_CODE alt_avalon_i2c_master_rx(ALT_AVALON_I2C_DEV_t *i2c_dev,
                                       alt_u8 * buffer,
                                       const alt_u32 size,
                                       const alt_u8 use_interrupts)
{
   136a0:	defff704 	addi	sp,sp,-36
   136a4:	dfc00815 	stw	ra,32(sp)
   136a8:	df000715 	stw	fp,28(sp)
   136ac:	df000704 	addi	fp,sp,28
   136b0:	e13ffc15 	stw	r4,-16(fp)
   136b4:	e17ffd15 	stw	r5,-12(fp)
   136b8:	e1bffe15 	stw	r6,-8(fp)
   136bc:	3805883a 	mov	r2,r7
   136c0:	e0bfff05 	stb	r2,-4(fp)
    ALT_AVALON_I2C_STATUS_CODE status;
    alt_u32 retry=10000;  
   136c4:	0089c404 	movi	r2,10000
   136c8:	e0bffb15 	stw	r2,-20(fp)
    
    if (use_interrupts) 
   136cc:	e0bfff03 	ldbu	r2,-4(fp)
   136d0:	10003426 	beq	r2,zero,137a4 <alt_avalon_i2c_master_rx+0x104>
    {
      while (retry--) 
   136d4:	00001706 	br	13734 <alt_avalon_i2c_master_rx+0x94>
      {
        if (retry<10) alt_busy_sleep(10000);      
   136d8:	e0bffb17 	ldw	r2,-20(fp)
   136dc:	108002a8 	cmpgeui	r2,r2,10
   136e0:	1000021e 	bne	r2,zero,136ec <alt_avalon_i2c_master_rx+0x4c>
   136e4:	0109c404 	movi	r4,10000
   136e8:	00156b00 	call	156b0 <alt_busy_sleep>
        status = alt_avalon_i2c_master_receive_using_interrupts(i2c_dev, buffer, size, ALT_AVALON_I2C_NO_RESTART, ALT_AVALON_I2C_STOP);     
   136ec:	00800044 	movi	r2,1
   136f0:	d8800015 	stw	r2,0(sp)
   136f4:	000f883a 	mov	r7,zero
   136f8:	e1bffe17 	ldw	r6,-8(fp)
   136fc:	e17ffd17 	ldw	r5,-12(fp)
   13700:	e13ffc17 	ldw	r4,-16(fp)
   13704:	0013f800 	call	13f80 <alt_avalon_i2c_master_receive_using_interrupts>
   13708:	e0bffa15 	stw	r2,-24(fp)
        if ((status==ALT_AVALON_I2C_ARB_LOST_ERR) || (status==ALT_AVALON_I2C_NACK_ERR) || (status==ALT_AVALON_I2C_BUSY)) continue;
   1370c:	e0bffa17 	ldw	r2,-24(fp)
   13710:	10bffea0 	cmpeqi	r2,r2,-6
   13714:	1000061e 	bne	r2,zero,13730 <alt_avalon_i2c_master_rx+0x90>
   13718:	e0bffa17 	ldw	r2,-24(fp)
   1371c:	10bffee0 	cmpeqi	r2,r2,-5
   13720:	1000031e 	bne	r2,zero,13730 <alt_avalon_i2c_master_rx+0x90>
   13724:	e0bffa17 	ldw	r2,-24(fp)
   13728:	10bffe58 	cmpnei	r2,r2,-7
   1372c:	1000221e 	bne	r2,zero,137b8 <alt_avalon_i2c_master_rx+0x118>
   13730:	0001883a 	nop
    ALT_AVALON_I2C_STATUS_CODE status;
    alt_u32 retry=10000;  
    
    if (use_interrupts) 
    {
      while (retry--) 
   13734:	e0bffb17 	ldw	r2,-20(fp)
   13738:	10ffffc4 	addi	r3,r2,-1
   1373c:	e0fffb15 	stw	r3,-20(fp)
   13740:	103fe51e 	bne	r2,zero,136d8 <__alt_mem_Onchip_SRAM+0xf80136d8>
   13744:	00001f06 	br	137c4 <alt_avalon_i2c_master_rx+0x124>
    }
    else
    {
      while (retry--) 
      {
        if (retry<10) alt_busy_sleep(10000);      
   13748:	e0bffb17 	ldw	r2,-20(fp)
   1374c:	108002a8 	cmpgeui	r2,r2,10
   13750:	1000021e 	bne	r2,zero,1375c <alt_avalon_i2c_master_rx+0xbc>
   13754:	0109c404 	movi	r4,10000
   13758:	00156b00 	call	156b0 <alt_busy_sleep>
        status = alt_avalon_i2c_master_receive(i2c_dev, buffer, size, ALT_AVALON_I2C_NO_RESTART, ALT_AVALON_I2C_STOP);     
   1375c:	00800044 	movi	r2,1
   13760:	d8800015 	stw	r2,0(sp)
   13764:	000f883a 	mov	r7,zero
   13768:	e1bffe17 	ldw	r6,-8(fp)
   1376c:	e17ffd17 	ldw	r5,-12(fp)
   13770:	e13ffc17 	ldw	r4,-16(fp)
   13774:	0013d700 	call	13d70 <alt_avalon_i2c_master_receive>
   13778:	e0bffa15 	stw	r2,-24(fp)
        if ((status==ALT_AVALON_I2C_ARB_LOST_ERR) || (status==ALT_AVALON_I2C_NACK_ERR) || (status==ALT_AVALON_I2C_BUSY)) continue;
   1377c:	e0bffa17 	ldw	r2,-24(fp)
   13780:	10bffea0 	cmpeqi	r2,r2,-6
   13784:	1000061e 	bne	r2,zero,137a0 <alt_avalon_i2c_master_rx+0x100>
   13788:	e0bffa17 	ldw	r2,-24(fp)
   1378c:	10bffee0 	cmpeqi	r2,r2,-5
   13790:	1000031e 	bne	r2,zero,137a0 <alt_avalon_i2c_master_rx+0x100>
   13794:	e0bffa17 	ldw	r2,-24(fp)
   13798:	10bffe58 	cmpnei	r2,r2,-7
   1379c:	1000081e 	bne	r2,zero,137c0 <alt_avalon_i2c_master_rx+0x120>
   137a0:	0001883a 	nop
        break;
      }
    }
    else
    {
      while (retry--) 
   137a4:	e0bffb17 	ldw	r2,-20(fp)
   137a8:	10ffffc4 	addi	r3,r2,-1
   137ac:	e0fffb15 	stw	r3,-20(fp)
   137b0:	103fe51e 	bne	r2,zero,13748 <__alt_mem_Onchip_SRAM+0xf8013748>
   137b4:	00000306 	br	137c4 <alt_avalon_i2c_master_rx+0x124>
      while (retry--) 
      {
        if (retry<10) alt_busy_sleep(10000);      
        status = alt_avalon_i2c_master_receive_using_interrupts(i2c_dev, buffer, size, ALT_AVALON_I2C_NO_RESTART, ALT_AVALON_I2C_STOP);     
        if ((status==ALT_AVALON_I2C_ARB_LOST_ERR) || (status==ALT_AVALON_I2C_NACK_ERR) || (status==ALT_AVALON_I2C_BUSY)) continue;
        break;
   137b8:	0001883a 	nop
   137bc:	00000106 	br	137c4 <alt_avalon_i2c_master_rx+0x124>
      while (retry--) 
      {
        if (retry<10) alt_busy_sleep(10000);      
        status = alt_avalon_i2c_master_receive(i2c_dev, buffer, size, ALT_AVALON_I2C_NO_RESTART, ALT_AVALON_I2C_STOP);     
        if ((status==ALT_AVALON_I2C_ARB_LOST_ERR) || (status==ALT_AVALON_I2C_NACK_ERR) || (status==ALT_AVALON_I2C_BUSY)) continue;
        break;
   137c0:	0001883a 	nop
      }
    }
    
    return status;
   137c4:	e0bffa17 	ldw	r2,-24(fp)
}        
   137c8:	e037883a 	mov	sp,fp
   137cc:	dfc00117 	ldw	ra,4(sp)
   137d0:	df000017 	ldw	fp,0(sp)
   137d4:	dec00204 	addi	sp,sp,8
   137d8:	f800283a 	ret

000137dc <alt_avalon_i2c_master_tx_rx>:
                                       const alt_u8 * txbuffer,
                                       const alt_u32 txsize,
                                       alt_u8 * rxbuffer,
                                       const alt_u32 rxsize,
                                       const alt_u8 use_interrupts)                                       
{
   137dc:	defff604 	addi	sp,sp,-40
   137e0:	dfc00915 	stw	ra,36(sp)
   137e4:	df000815 	stw	fp,32(sp)
   137e8:	df000804 	addi	fp,sp,32
   137ec:	e13ffb15 	stw	r4,-20(fp)
   137f0:	e17ffc15 	stw	r5,-16(fp)
   137f4:	e1bffd15 	stw	r6,-12(fp)
   137f8:	e1fffe15 	stw	r7,-8(fp)
   137fc:	e0800317 	ldw	r2,12(fp)
   13800:	e0bfff05 	stb	r2,-4(fp)
    ALT_AVALON_I2C_STATUS_CODE status;
    alt_u32 retry=10000;  
   13804:	0089c404 	movi	r2,10000
   13808:	e0bffa15 	stw	r2,-24(fp)
    
    if (use_interrupts)
   1380c:	e0bfff03 	ldbu	r2,-4(fp)
   13810:	10005626 	beq	r2,zero,1396c <alt_avalon_i2c_master_tx_rx+0x190>
    {
      while (retry--) 
   13814:	00002806 	br	138b8 <alt_avalon_i2c_master_tx_rx+0xdc>
      {
        if (retry<10) alt_busy_sleep(10000);      
   13818:	e0bffa17 	ldw	r2,-24(fp)
   1381c:	108002a8 	cmpgeui	r2,r2,10
   13820:	1000021e 	bne	r2,zero,1382c <alt_avalon_i2c_master_tx_rx+0x50>
   13824:	0109c404 	movi	r4,10000
   13828:	00156b00 	call	156b0 <alt_busy_sleep>
        status = alt_avalon_i2c_master_transmit_using_interrupts(i2c_dev, txbuffer, txsize, ALT_AVALON_I2C_NO_RESTART, ALT_AVALON_I2C_NO_STOP);     
   1382c:	d8000015 	stw	zero,0(sp)
   13830:	000f883a 	mov	r7,zero
   13834:	e1bffd17 	ldw	r6,-12(fp)
   13838:	e17ffc17 	ldw	r5,-16(fp)
   1383c:	e13ffb17 	ldw	r4,-20(fp)
   13840:	0013b640 	call	13b64 <alt_avalon_i2c_master_transmit_using_interrupts>
   13844:	e0bff915 	stw	r2,-28(fp)
        if ((status==ALT_AVALON_I2C_ARB_LOST_ERR) || (status==ALT_AVALON_I2C_NACK_ERR) || (status==ALT_AVALON_I2C_BUSY)) continue;
   13848:	e0bff917 	ldw	r2,-28(fp)
   1384c:	10bffea0 	cmpeqi	r2,r2,-6
   13850:	1000191e 	bne	r2,zero,138b8 <alt_avalon_i2c_master_tx_rx+0xdc>
   13854:	e0bff917 	ldw	r2,-28(fp)
   13858:	10bffee0 	cmpeqi	r2,r2,-5
   1385c:	1000161e 	bne	r2,zero,138b8 <alt_avalon_i2c_master_tx_rx+0xdc>
   13860:	e0bff917 	ldw	r2,-28(fp)
   13864:	10bffe58 	cmpnei	r2,r2,-7
   13868:	1000011e 	bne	r2,zero,13870 <alt_avalon_i2c_master_tx_rx+0x94>
   1386c:	00001206 	br	138b8 <alt_avalon_i2c_master_tx_rx+0xdc>
  
        status = alt_avalon_i2c_master_receive_using_interrupts(i2c_dev, rxbuffer, rxsize, ALT_AVALON_I2C_RESTART, ALT_AVALON_I2C_STOP);     
   13870:	00800044 	movi	r2,1
   13874:	d8800015 	stw	r2,0(sp)
   13878:	01c00044 	movi	r7,1
   1387c:	e1800217 	ldw	r6,8(fp)
   13880:	e17ffe17 	ldw	r5,-8(fp)
   13884:	e13ffb17 	ldw	r4,-20(fp)
   13888:	0013f800 	call	13f80 <alt_avalon_i2c_master_receive_using_interrupts>
   1388c:	e0bff915 	stw	r2,-28(fp)
        if ((status==ALT_AVALON_I2C_ARB_LOST_ERR) || (status==ALT_AVALON_I2C_NACK_ERR) || (status==ALT_AVALON_I2C_BUSY)) continue;
   13890:	e0bff917 	ldw	r2,-28(fp)
   13894:	10bffea0 	cmpeqi	r2,r2,-6
   13898:	1000061e 	bne	r2,zero,138b4 <alt_avalon_i2c_master_tx_rx+0xd8>
   1389c:	e0bff917 	ldw	r2,-28(fp)
   138a0:	10bffee0 	cmpeqi	r2,r2,-5
   138a4:	1000031e 	bne	r2,zero,138b4 <alt_avalon_i2c_master_tx_rx+0xd8>
   138a8:	e0bff917 	ldw	r2,-28(fp)
   138ac:	10bffe58 	cmpnei	r2,r2,-7
   138b0:	1000331e 	bne	r2,zero,13980 <alt_avalon_i2c_master_tx_rx+0x1a4>
   138b4:	0001883a 	nop
    ALT_AVALON_I2C_STATUS_CODE status;
    alt_u32 retry=10000;  
    
    if (use_interrupts)
    {
      while (retry--) 
   138b8:	e0bffa17 	ldw	r2,-24(fp)
   138bc:	10ffffc4 	addi	r3,r2,-1
   138c0:	e0fffa15 	stw	r3,-24(fp)
   138c4:	103fd41e 	bne	r2,zero,13818 <__alt_mem_Onchip_SRAM+0xf8013818>
   138c8:	00003006 	br	1398c <alt_avalon_i2c_master_tx_rx+0x1b0>
    }
    else 
    {
      while (retry--) 
      {
        if (retry<10) alt_busy_sleep(10000);      
   138cc:	e0bffa17 	ldw	r2,-24(fp)
   138d0:	108002a8 	cmpgeui	r2,r2,10
   138d4:	1000021e 	bne	r2,zero,138e0 <alt_avalon_i2c_master_tx_rx+0x104>
   138d8:	0109c404 	movi	r4,10000
   138dc:	00156b00 	call	156b0 <alt_busy_sleep>
        status = alt_avalon_i2c_master_transmit(i2c_dev, txbuffer, txsize, ALT_AVALON_I2C_NO_RESTART, ALT_AVALON_I2C_NO_STOP);     
   138e0:	d8000015 	stw	zero,0(sp)
   138e4:	000f883a 	mov	r7,zero
   138e8:	e1bffd17 	ldw	r6,-12(fp)
   138ec:	e17ffc17 	ldw	r5,-16(fp)
   138f0:	e13ffb17 	ldw	r4,-20(fp)
   138f4:	00139a40 	call	139a4 <alt_avalon_i2c_master_transmit>
   138f8:	e0bff915 	stw	r2,-28(fp)
        if ((status==ALT_AVALON_I2C_ARB_LOST_ERR) || (status==ALT_AVALON_I2C_NACK_ERR) || (status==ALT_AVALON_I2C_BUSY)) continue;
   138fc:	e0bff917 	ldw	r2,-28(fp)
   13900:	10bffea0 	cmpeqi	r2,r2,-6
   13904:	1000191e 	bne	r2,zero,1396c <alt_avalon_i2c_master_tx_rx+0x190>
   13908:	e0bff917 	ldw	r2,-28(fp)
   1390c:	10bffee0 	cmpeqi	r2,r2,-5
   13910:	1000161e 	bne	r2,zero,1396c <alt_avalon_i2c_master_tx_rx+0x190>
   13914:	e0bff917 	ldw	r2,-28(fp)
   13918:	10bffe58 	cmpnei	r2,r2,-7
   1391c:	1000011e 	bne	r2,zero,13924 <alt_avalon_i2c_master_tx_rx+0x148>
   13920:	00001206 	br	1396c <alt_avalon_i2c_master_tx_rx+0x190>

        status = alt_avalon_i2c_master_receive(i2c_dev, rxbuffer, rxsize, ALT_AVALON_I2C_RESTART, ALT_AVALON_I2C_STOP);     
   13924:	00800044 	movi	r2,1
   13928:	d8800015 	stw	r2,0(sp)
   1392c:	01c00044 	movi	r7,1
   13930:	e1800217 	ldw	r6,8(fp)
   13934:	e17ffe17 	ldw	r5,-8(fp)
   13938:	e13ffb17 	ldw	r4,-20(fp)
   1393c:	0013d700 	call	13d70 <alt_avalon_i2c_master_receive>
   13940:	e0bff915 	stw	r2,-28(fp)
        if ((status==ALT_AVALON_I2C_ARB_LOST_ERR) || (status==ALT_AVALON_I2C_NACK_ERR) || (status==ALT_AVALON_I2C_BUSY)) continue;
   13944:	e0bff917 	ldw	r2,-28(fp)
   13948:	10bffea0 	cmpeqi	r2,r2,-6
   1394c:	1000061e 	bne	r2,zero,13968 <alt_avalon_i2c_master_tx_rx+0x18c>
   13950:	e0bff917 	ldw	r2,-28(fp)
   13954:	10bffee0 	cmpeqi	r2,r2,-5
   13958:	1000031e 	bne	r2,zero,13968 <alt_avalon_i2c_master_tx_rx+0x18c>
   1395c:	e0bff917 	ldw	r2,-28(fp)
   13960:	10bffe58 	cmpnei	r2,r2,-7
   13964:	1000081e 	bne	r2,zero,13988 <alt_avalon_i2c_master_tx_rx+0x1ac>
   13968:	0001883a 	nop
        break;
      }
    }
    else 
    {
      while (retry--) 
   1396c:	e0bffa17 	ldw	r2,-24(fp)
   13970:	10ffffc4 	addi	r3,r2,-1
   13974:	e0fffa15 	stw	r3,-24(fp)
   13978:	103fd41e 	bne	r2,zero,138cc <__alt_mem_Onchip_SRAM+0xf80138cc>
   1397c:	00000306 	br	1398c <alt_avalon_i2c_master_tx_rx+0x1b0>
        if ((status==ALT_AVALON_I2C_ARB_LOST_ERR) || (status==ALT_AVALON_I2C_NACK_ERR) || (status==ALT_AVALON_I2C_BUSY)) continue;
  
        status = alt_avalon_i2c_master_receive_using_interrupts(i2c_dev, rxbuffer, rxsize, ALT_AVALON_I2C_RESTART, ALT_AVALON_I2C_STOP);     
        if ((status==ALT_AVALON_I2C_ARB_LOST_ERR) || (status==ALT_AVALON_I2C_NACK_ERR) || (status==ALT_AVALON_I2C_BUSY)) continue;
  
        break;
   13980:	0001883a 	nop
   13984:	00000106 	br	1398c <alt_avalon_i2c_master_tx_rx+0x1b0>
        if ((status==ALT_AVALON_I2C_ARB_LOST_ERR) || (status==ALT_AVALON_I2C_NACK_ERR) || (status==ALT_AVALON_I2C_BUSY)) continue;

        status = alt_avalon_i2c_master_receive(i2c_dev, rxbuffer, rxsize, ALT_AVALON_I2C_RESTART, ALT_AVALON_I2C_STOP);     
        if ((status==ALT_AVALON_I2C_ARB_LOST_ERR) || (status==ALT_AVALON_I2C_NACK_ERR) || (status==ALT_AVALON_I2C_BUSY)) continue;
  
        break;
   13988:	0001883a 	nop
      }
    }
    
    return status;
   1398c:	e0bff917 	ldw	r2,-28(fp)
}                                       
   13990:	e037883a 	mov	sp,fp
   13994:	dfc00117 	ldw	ra,4(sp)
   13998:	df000017 	ldw	fp,0(sp)
   1399c:	dec00204 	addi	sp,sp,8
   139a0:	f800283a 	ret

000139a4 <alt_avalon_i2c_master_transmit>:
ALT_AVALON_I2C_STATUS_CODE alt_avalon_i2c_master_transmit(ALT_AVALON_I2C_DEV_t *i2c_dev,
                                        const alt_u8 * buffer,
                                        alt_u32 size,
                                        const alt_u8 issue_restart,
                                        const alt_u8 issue_stop)
{
   139a4:	defff704 	addi	sp,sp,-36
   139a8:	dfc00815 	stw	ra,32(sp)
   139ac:	df000715 	stw	fp,28(sp)
   139b0:	df000704 	addi	fp,sp,28
   139b4:	e13ffb15 	stw	r4,-20(fp)
   139b8:	e17ffc15 	stw	r5,-16(fp)
   139bc:	e1bffd15 	stw	r6,-12(fp)
   139c0:	3807883a 	mov	r3,r7
   139c4:	e0800217 	ldw	r2,8(fp)
   139c8:	e0fffe05 	stb	r3,-8(fp)
   139cc:	e0bfff05 	stb	r2,-4(fp)
    ALT_AVALON_I2C_STATUS_CODE status = ALT_AVALON_I2C_SUCCESS;
   139d0:	e03ffa15 	stw	zero,-24(fp)
    alt_u32 timeout=size * 10000;
   139d4:	0149c404 	movi	r5,10000
   139d8:	e13ffd17 	ldw	r4,-12(fp)
   139dc:	0000eb00 	call	eb0 <__mulsi3>
   139e0:	e0bff915 	stw	r2,-28(fp)
    
    if (size==0)
   139e4:	e0bffd17 	ldw	r2,-12(fp)
   139e8:	1000021e 	bne	r2,zero,139f4 <alt_avalon_i2c_master_transmit+0x50>
    {
      return ALT_AVALON_I2C_SUCCESS;
   139ec:	0005883a 	mov	r2,zero
   139f0:	00005706 	br	13b50 <alt_avalon_i2c_master_transmit+0x1ac>
    }
    
    /*if a new transaction, enable ip and clear int status*/
    if (!issue_restart) 
   139f4:	e0bffe03 	ldbu	r2,-8(fp)
   139f8:	10000a1e 	bne	r2,zero,13a24 <alt_avalon_i2c_master_transmit+0x80>
    {
      /*enable the ip.  The ip is disabled and enabled for each transaction.*/
      status = alt_avalon_i2c_enable(i2c_dev);
   139fc:	e13ffb17 	ldw	r4,-20(fp)
   13a00:	0012c200 	call	12c20 <alt_avalon_i2c_enable>
   13a04:	e0bffa15 	stw	r2,-24(fp)
      if (status != ALT_AVALON_I2C_SUCCESS)
   13a08:	e0bffa17 	ldw	r2,-24(fp)
   13a0c:	10000226 	beq	r2,zero,13a18 <alt_avalon_i2c_master_transmit+0x74>
      {
        return status;
   13a10:	e0bffa17 	ldw	r2,-24(fp)
   13a14:	00004e06 	br	13b50 <alt_avalon_i2c_master_transmit+0x1ac>
      }

      /*Clear the ISR reg*/
      alt_avalon_i2c_int_clear(i2c_dev,ALT_AVALON_I2C_ISR_ALL_CLEARABLE_INTS_MSK);
   13a18:	01400704 	movi	r5,28
   13a1c:	e13ffb17 	ldw	r4,-20(fp)
   13a20:	001420c0 	call	1420c <alt_avalon_i2c_int_clear>
    }

    /*Start Write, transmit address. */
    status = alt_avalon_i2c_send_address(i2c_dev,ALT_AVALON_I2C_WRITE,issue_restart);
   13a24:	e0bffe03 	ldbu	r2,-8(fp)
   13a28:	100d883a 	mov	r6,r2
   13a2c:	000b883a 	mov	r5,zero
   13a30:	e13ffb17 	ldw	r4,-20(fp)
   13a34:	00132880 	call	13288 <alt_avalon_i2c_send_address>
   13a38:	e0bffa15 	stw	r2,-24(fp)
      
    if (status == ALT_AVALON_I2C_SUCCESS)
   13a3c:	e0bffa17 	ldw	r2,-24(fp)
   13a40:	1000271e 	bne	r2,zero,13ae0 <alt_avalon_i2c_master_transmit+0x13c>
    {
        while ((size > 1) && (status == ALT_AVALON_I2C_SUCCESS))
   13a44:	00000f06 	br	13a84 <alt_avalon_i2c_master_transmit+0xe0>
        {
            status = alt_avalon_i2c_cmd_write(i2c_dev, *buffer, ALT_AVALON_I2C_NO_RESTART, ALT_AVALON_I2C_NO_STOP);
   13a48:	e0bffc17 	ldw	r2,-16(fp)
   13a4c:	10800003 	ldbu	r2,0(r2)
   13a50:	10803fcc 	andi	r2,r2,255
   13a54:	000f883a 	mov	r7,zero
   13a58:	000d883a 	mov	r6,zero
   13a5c:	100b883a 	mov	r5,r2
   13a60:	e13ffb17 	ldw	r4,-20(fp)
   13a64:	00131a40 	call	131a4 <alt_avalon_i2c_cmd_write>
   13a68:	e0bffa15 	stw	r2,-24(fp)
            
            ++buffer;
   13a6c:	e0bffc17 	ldw	r2,-16(fp)
   13a70:	10800044 	addi	r2,r2,1
   13a74:	e0bffc15 	stw	r2,-16(fp)
            --size;
   13a78:	e0bffd17 	ldw	r2,-12(fp)
   13a7c:	10bfffc4 	addi	r2,r2,-1
   13a80:	e0bffd15 	stw	r2,-12(fp)
    /*Start Write, transmit address. */
    status = alt_avalon_i2c_send_address(i2c_dev,ALT_AVALON_I2C_WRITE,issue_restart);
      
    if (status == ALT_AVALON_I2C_SUCCESS)
    {
        while ((size > 1) && (status == ALT_AVALON_I2C_SUCCESS))
   13a84:	e0bffd17 	ldw	r2,-12(fp)
   13a88:	108000b0 	cmpltui	r2,r2,2
   13a8c:	1000021e 	bne	r2,zero,13a98 <alt_avalon_i2c_master_transmit+0xf4>
   13a90:	e0bffa17 	ldw	r2,-24(fp)
   13a94:	103fec26 	beq	r2,zero,13a48 <__alt_mem_Onchip_SRAM+0xf8013a48>
            ++buffer;
            --size;
        }

        /* Last byte */
        if (status == ALT_AVALON_I2C_SUCCESS)
   13a98:	e0bffa17 	ldw	r2,-24(fp)
   13a9c:	1000101e 	bne	r2,zero,13ae0 <alt_avalon_i2c_master_transmit+0x13c>
        {
            status = alt_avalon_i2c_cmd_write(i2c_dev, *buffer, ALT_AVALON_I2C_NO_RESTART, issue_stop);
   13aa0:	e0bffc17 	ldw	r2,-16(fp)
   13aa4:	10800003 	ldbu	r2,0(r2)
   13aa8:	10803fcc 	andi	r2,r2,255
   13aac:	e0ffff03 	ldbu	r3,-4(fp)
   13ab0:	180f883a 	mov	r7,r3
   13ab4:	000d883a 	mov	r6,zero
   13ab8:	100b883a 	mov	r5,r2
   13abc:	e13ffb17 	ldw	r4,-20(fp)
   13ac0:	00131a40 	call	131a4 <alt_avalon_i2c_cmd_write>
   13ac4:	e0bffa15 	stw	r2,-24(fp)

            ++buffer;
   13ac8:	e0bffc17 	ldw	r2,-16(fp)
   13acc:	10800044 	addi	r2,r2,1
   13ad0:	e0bffc15 	stw	r2,-16(fp)
            --size;
   13ad4:	e0bffd17 	ldw	r2,-12(fp)
   13ad8:	10bfffc4 	addi	r2,r2,-1
   13adc:	e0bffd15 	stw	r2,-12(fp)
        }
    }
    
    /*if end of transaction, wait until the ip is idle then disable the ip*/
    if ((issue_stop) || (status != ALT_AVALON_I2C_SUCCESS)) 
   13ae0:	e0bfff03 	ldbu	r2,-4(fp)
   13ae4:	1000101e 	bne	r2,zero,13b28 <alt_avalon_i2c_master_transmit+0x184>
   13ae8:	e0bffa17 	ldw	r2,-24(fp)
   13aec:	10001726 	beq	r2,zero,13b4c <alt_avalon_i2c_master_transmit+0x1a8>
    {

        while (alt_avalon_i2c_is_busy(i2c_dev))
   13af0:	00000d06 	br	13b28 <alt_avalon_i2c_master_transmit+0x184>
        {
            if (timeout<10) alt_busy_sleep(10000);
   13af4:	e0bff917 	ldw	r2,-28(fp)
   13af8:	108002a8 	cmpgeui	r2,r2,10
   13afc:	1000021e 	bne	r2,zero,13b08 <alt_avalon_i2c_master_transmit+0x164>
   13b00:	0109c404 	movi	r4,10000
   13b04:	00156b00 	call	156b0 <alt_busy_sleep>
            if (--timeout == 0)
   13b08:	e0bff917 	ldw	r2,-28(fp)
   13b0c:	10bfffc4 	addi	r2,r2,-1
   13b10:	e0bff915 	stw	r2,-28(fp)
   13b14:	e0bff917 	ldw	r2,-28(fp)
   13b18:	1000031e 	bne	r2,zero,13b28 <alt_avalon_i2c_master_transmit+0x184>
            {
               status = ALT_AVALON_I2C_TIMEOUT;
   13b1c:	00bfff84 	movi	r2,-2
   13b20:	e0bffa15 	stw	r2,-24(fp)
               break;
   13b24:	00000306 	br	13b34 <alt_avalon_i2c_master_transmit+0x190>
    
    /*if end of transaction, wait until the ip is idle then disable the ip*/
    if ((issue_stop) || (status != ALT_AVALON_I2C_SUCCESS)) 
    {

        while (alt_avalon_i2c_is_busy(i2c_dev))
   13b28:	e13ffb17 	ldw	r4,-20(fp)
   13b2c:	00130100 	call	13010 <alt_avalon_i2c_is_busy>
   13b30:	103ff01e 	bne	r2,zero,13af4 <__alt_mem_Onchip_SRAM+0xf8013af4>
               break;
            }
        }
     
        /*check for a nack error*/
        alt_avalon_i2c_check_nack(i2c_dev,&status);
   13b34:	e0bffa04 	addi	r2,fp,-24
   13b38:	100b883a 	mov	r5,r2
   13b3c:	e13ffb17 	ldw	r4,-20(fp)
   13b40:	00133e40 	call	133e4 <alt_avalon_i2c_check_nack>
        
        /*disable the ip.  The ip is disabled and enabled for each transaction.*/
        alt_avalon_i2c_disable(i2c_dev);
   13b44:	e13ffb17 	ldw	r4,-20(fp)
   13b48:	0012cb80 	call	12cb8 <alt_avalon_i2c_disable>
    }


    return status;
   13b4c:	e0bffa17 	ldw	r2,-24(fp)
}
   13b50:	e037883a 	mov	sp,fp
   13b54:	dfc00117 	ldw	ra,4(sp)
   13b58:	df000017 	ldw	fp,0(sp)
   13b5c:	dec00204 	addi	sp,sp,8
   13b60:	f800283a 	ret

00013b64 <alt_avalon_i2c_master_transmit_using_interrupts>:
ALT_AVALON_I2C_STATUS_CODE alt_avalon_i2c_master_transmit_using_interrupts(ALT_AVALON_I2C_DEV_t *i2c_dev,
                                        const alt_u8 * buffer,
                                        alt_u32 size,
                                        const alt_u8 issue_restart,
                                        const alt_u8 issue_stop)
{
   13b64:	defff604 	addi	sp,sp,-40
   13b68:	dfc00915 	stw	ra,36(sp)
   13b6c:	df000815 	stw	fp,32(sp)
   13b70:	df000804 	addi	fp,sp,32
   13b74:	e13ffb15 	stw	r4,-20(fp)
   13b78:	e17ffc15 	stw	r5,-16(fp)
   13b7c:	e1bffd15 	stw	r6,-12(fp)
   13b80:	3807883a 	mov	r3,r7
   13b84:	e0800217 	ldw	r2,8(fp)
   13b88:	e0fffe05 	stb	r3,-8(fp)
   13b8c:	e0bfff05 	stb	r2,-4(fp)
    ALT_AVALON_I2C_STATUS_CODE status = ALT_AVALON_I2C_SUCCESS;
   13b90:	e03ff815 	stw	zero,-32(fp)
    alt_u32 timeout=size*10000;
   13b94:	0149c404 	movi	r5,10000
   13b98:	e13ffd17 	ldw	r4,-12(fp)
   13b9c:	0000eb00 	call	eb0 <__mulsi3>
   13ba0:	e0bff915 	stw	r2,-28(fp)
    IRQ_DATA_t *irq_data = i2c_dev->callback_context;    
   13ba4:	e0bffb17 	ldw	r2,-20(fp)
   13ba8:	10800717 	ldw	r2,28(r2)
   13bac:	e0bffa15 	stw	r2,-24(fp)
    
    if (size==0)
   13bb0:	e0bffd17 	ldw	r2,-12(fp)
   13bb4:	1000021e 	bne	r2,zero,13bc0 <alt_avalon_i2c_master_transmit_using_interrupts+0x5c>
    {
      return ALT_AVALON_I2C_SUCCESS;
   13bb8:	0005883a 	mov	r2,zero
   13bbc:	00006706 	br	13d5c <alt_avalon_i2c_master_transmit_using_interrupts+0x1f8>
    }
    
    /*IS the optional interrupt handler registered??*/
    if (i2c_dev->callback != optional_irq_callback)
   13bc0:	e0bffb17 	ldw	r2,-20(fp)
   13bc4:	10c00617 	ldw	r3,24(r2)
   13bc8:	00800074 	movhi	r2,1
   13bcc:	108a2904 	addi	r2,r2,10404
   13bd0:	18800226 	beq	r3,r2,13bdc <alt_avalon_i2c_master_transmit_using_interrupts+0x78>
    {
       return ALT_AVALON_I2C_BAD_ARG;    
   13bd4:	00bfff44 	movi	r2,-3
   13bd8:	00006006 	br	13d5c <alt_avalon_i2c_master_transmit_using_interrupts+0x1f8>
    }
    
    /*if a new transaction, enable ip and clear int status*/
    if (!issue_restart) 
   13bdc:	e0bffe03 	ldbu	r2,-8(fp)
   13be0:	10000a1e 	bne	r2,zero,13c0c <alt_avalon_i2c_master_transmit_using_interrupts+0xa8>
    {
      /*enable the ip.  The ip is disabled and enabled for each transaction.*/
      status = alt_avalon_i2c_enable(i2c_dev);
   13be4:	e13ffb17 	ldw	r4,-20(fp)
   13be8:	0012c200 	call	12c20 <alt_avalon_i2c_enable>
   13bec:	e0bff815 	stw	r2,-32(fp)
      if (status != ALT_AVALON_I2C_SUCCESS)
   13bf0:	e0bff817 	ldw	r2,-32(fp)
   13bf4:	10000226 	beq	r2,zero,13c00 <alt_avalon_i2c_master_transmit_using_interrupts+0x9c>
      {
        return status;
   13bf8:	e0bff817 	ldw	r2,-32(fp)
   13bfc:	00005706 	br	13d5c <alt_avalon_i2c_master_transmit_using_interrupts+0x1f8>
      }

      /*Clear the ISR reg*/
      alt_avalon_i2c_int_clear(i2c_dev,ALT_AVALON_I2C_ISR_ALL_CLEARABLE_INTS_MSK);
   13c00:	01400704 	movi	r5,28
   13c04:	e13ffb17 	ldw	r4,-20(fp)
   13c08:	001420c0 	call	1420c <alt_avalon_i2c_int_clear>
    }

    /*Start Write, transmit address. */
    status = alt_avalon_i2c_send_address(i2c_dev,ALT_AVALON_I2C_WRITE,issue_restart);
   13c0c:	e0bffe03 	ldbu	r2,-8(fp)
   13c10:	100d883a 	mov	r6,r2
   13c14:	000b883a 	mov	r5,zero
   13c18:	e13ffb17 	ldw	r4,-20(fp)
   13c1c:	00132880 	call	13288 <alt_avalon_i2c_send_address>
   13c20:	e0bff815 	stw	r2,-32(fp)
        
    if (status == ALT_AVALON_I2C_SUCCESS)
   13c24:	e0bff817 	ldw	r2,-32(fp)
   13c28:	1000271e 	bne	r2,zero,13cc8 <alt_avalon_i2c_master_transmit_using_interrupts+0x164>
    {
        while ((size > 1) && (status == ALT_AVALON_I2C_SUCCESS))
   13c2c:	00000f06 	br	13c6c <alt_avalon_i2c_master_transmit_using_interrupts+0x108>
        {
            status = alt_avalon_i2c_cmd_write(i2c_dev, *buffer, ALT_AVALON_I2C_NO_RESTART, ALT_AVALON_I2C_NO_STOP);
   13c30:	e0bffc17 	ldw	r2,-16(fp)
   13c34:	10800003 	ldbu	r2,0(r2)
   13c38:	10803fcc 	andi	r2,r2,255
   13c3c:	000f883a 	mov	r7,zero
   13c40:	000d883a 	mov	r6,zero
   13c44:	100b883a 	mov	r5,r2
   13c48:	e13ffb17 	ldw	r4,-20(fp)
   13c4c:	00131a40 	call	131a4 <alt_avalon_i2c_cmd_write>
   13c50:	e0bff815 	stw	r2,-32(fp)
            
            ++buffer;
   13c54:	e0bffc17 	ldw	r2,-16(fp)
   13c58:	10800044 	addi	r2,r2,1
   13c5c:	e0bffc15 	stw	r2,-16(fp)
            --size;
   13c60:	e0bffd17 	ldw	r2,-12(fp)
   13c64:	10bfffc4 	addi	r2,r2,-1
   13c68:	e0bffd15 	stw	r2,-12(fp)
    /*Start Write, transmit address. */
    status = alt_avalon_i2c_send_address(i2c_dev,ALT_AVALON_I2C_WRITE,issue_restart);
        
    if (status == ALT_AVALON_I2C_SUCCESS)
    {
        while ((size > 1) && (status == ALT_AVALON_I2C_SUCCESS))
   13c6c:	e0bffd17 	ldw	r2,-12(fp)
   13c70:	108000b0 	cmpltui	r2,r2,2
   13c74:	1000021e 	bne	r2,zero,13c80 <alt_avalon_i2c_master_transmit_using_interrupts+0x11c>
   13c78:	e0bff817 	ldw	r2,-32(fp)
   13c7c:	103fec26 	beq	r2,zero,13c30 <__alt_mem_Onchip_SRAM+0xf8013c30>
            ++buffer;
            --size;
        }

        /* Last byte */
        if (status == ALT_AVALON_I2C_SUCCESS)
   13c80:	e0bff817 	ldw	r2,-32(fp)
   13c84:	1000101e 	bne	r2,zero,13cc8 <alt_avalon_i2c_master_transmit_using_interrupts+0x164>
        {
            status = alt_avalon_i2c_cmd_write(i2c_dev, *buffer, ALT_AVALON_I2C_NO_RESTART, issue_stop);
   13c88:	e0bffc17 	ldw	r2,-16(fp)
   13c8c:	10800003 	ldbu	r2,0(r2)
   13c90:	10803fcc 	andi	r2,r2,255
   13c94:	e0ffff03 	ldbu	r3,-4(fp)
   13c98:	180f883a 	mov	r7,r3
   13c9c:	000d883a 	mov	r6,zero
   13ca0:	100b883a 	mov	r5,r2
   13ca4:	e13ffb17 	ldw	r4,-20(fp)
   13ca8:	00131a40 	call	131a4 <alt_avalon_i2c_cmd_write>
   13cac:	e0bff815 	stw	r2,-32(fp)

            ++buffer;
   13cb0:	e0bffc17 	ldw	r2,-16(fp)
   13cb4:	10800044 	addi	r2,r2,1
   13cb8:	e0bffc15 	stw	r2,-16(fp)
            --size;
   13cbc:	e0bffd17 	ldw	r2,-12(fp)
   13cc0:	10bfffc4 	addi	r2,r2,-1
   13cc4:	e0bffd15 	stw	r2,-12(fp)
        }
    }
    
    /*if error, wait until the ip is idle then disable the ip*/
    if (status != ALT_AVALON_I2C_SUCCESS) 
   13cc8:	e0bff817 	ldw	r2,-32(fp)
   13ccc:	10001426 	beq	r2,zero,13d20 <alt_avalon_i2c_master_transmit_using_interrupts+0x1bc>
    {

        while (alt_avalon_i2c_is_busy(i2c_dev))
   13cd0:	00000d06 	br	13d08 <alt_avalon_i2c_master_transmit_using_interrupts+0x1a4>
        {
            if (timeout<10) alt_busy_sleep(10000);        
   13cd4:	e0bff917 	ldw	r2,-28(fp)
   13cd8:	108002a8 	cmpgeui	r2,r2,10
   13cdc:	1000021e 	bne	r2,zero,13ce8 <alt_avalon_i2c_master_transmit_using_interrupts+0x184>
   13ce0:	0109c404 	movi	r4,10000
   13ce4:	00156b00 	call	156b0 <alt_busy_sleep>
            if (--timeout == 0)
   13ce8:	e0bff917 	ldw	r2,-28(fp)
   13cec:	10bfffc4 	addi	r2,r2,-1
   13cf0:	e0bff915 	stw	r2,-28(fp)
   13cf4:	e0bff917 	ldw	r2,-28(fp)
   13cf8:	1000031e 	bne	r2,zero,13d08 <alt_avalon_i2c_master_transmit_using_interrupts+0x1a4>
            {
               status = ALT_AVALON_I2C_TIMEOUT;
   13cfc:	00bfff84 	movi	r2,-2
   13d00:	e0bff815 	stw	r2,-32(fp)
               break;
   13d04:	00000306 	br	13d14 <alt_avalon_i2c_master_transmit_using_interrupts+0x1b0>
    
    /*if error, wait until the ip is idle then disable the ip*/
    if (status != ALT_AVALON_I2C_SUCCESS) 
    {

        while (alt_avalon_i2c_is_busy(i2c_dev))
   13d08:	e13ffb17 	ldw	r4,-20(fp)
   13d0c:	00130100 	call	13010 <alt_avalon_i2c_is_busy>
   13d10:	103ff01e 	bne	r2,zero,13cd4 <__alt_mem_Onchip_SRAM+0xf8013cd4>
               break;
            }
        }
     
        /*disable the ip.  The ip is disabled and enabled for each transaction.*/
        alt_avalon_i2c_disable(i2c_dev);
   13d14:	e13ffb17 	ldw	r4,-20(fp)
   13d18:	0012cb80 	call	12cb8 <alt_avalon_i2c_disable>
   13d1c:	00000e06 	br	13d58 <alt_avalon_i2c_master_transmit_using_interrupts+0x1f4>
    }
    else
    {
       if (issue_stop)
   13d20:	e0bfff03 	ldbu	r2,-4(fp)
   13d24:	10000c26 	beq	r2,zero,13d58 <alt_avalon_i2c_master_transmit_using_interrupts+0x1f4>
       {
         /* clear ISR register content */
         alt_avalon_i2c_int_clear(i2c_dev,ALT_AVALON_I2C_ISR_ALL_CLEARABLE_INTS_MSK);
   13d28:	01400704 	movi	r5,28
   13d2c:	e13ffb17 	ldw	r4,-20(fp)
   13d30:	001420c0 	call	1420c <alt_avalon_i2c_int_clear>
         /* set the cmd fifo threshold */
         alt_avalon_i2c_tfr_cmd_fifo_threshold_set(i2c_dev,ALT_AVALON_I2C_TFR_CMD_FIFO_EMPTY);
   13d34:	000b883a 	mov	r5,zero
   13d38:	e13ffb17 	ldw	r4,-20(fp)
   13d3c:	00144540 	call	14454 <alt_avalon_i2c_tfr_cmd_fifo_threshold_set>
         /* set the interrupt transaction busy bit */
         irq_data->irq_busy=1;
   13d40:	e0bffa17 	ldw	r2,-24(fp)
   13d44:	00c00044 	movi	r3,1
   13d48:	10c00215 	stw	r3,8(r2)
         /* enable the TX_READY interrupt */
         alt_avalon_i2c_int_enable(i2c_dev,ALT_AVALON_I2C_ISER_TX_READY_EN_MSK);
   13d4c:	01400044 	movi	r5,1
   13d50:	e13ffb17 	ldw	r4,-20(fp)
   13d54:	00142b00 	call	142b0 <alt_avalon_i2c_int_enable>
       }
    }
    
    return status;
   13d58:	e0bff817 	ldw	r2,-32(fp)
}
   13d5c:	e037883a 	mov	sp,fp
   13d60:	dfc00117 	ldw	ra,4(sp)
   13d64:	df000017 	ldw	fp,0(sp)
   13d68:	dec00204 	addi	sp,sp,8
   13d6c:	f800283a 	ret

00013d70 <alt_avalon_i2c_master_receive>:
ALT_AVALON_I2C_STATUS_CODE alt_avalon_i2c_master_receive(ALT_AVALON_I2C_DEV_t *i2c_dev,
                                       alt_u8 * buffer,
                                       const alt_u32 size,
                                       const alt_u8 issue_restart,
                                       const alt_u8 issue_stop)
{
   13d70:	defff404 	addi	sp,sp,-48
   13d74:	dfc00b15 	stw	ra,44(sp)
   13d78:	df000a15 	stw	fp,40(sp)
   13d7c:	df000a04 	addi	fp,sp,40
   13d80:	e13ffb15 	stw	r4,-20(fp)
   13d84:	e17ffc15 	stw	r5,-16(fp)
   13d88:	e1bffd15 	stw	r6,-12(fp)
   13d8c:	3807883a 	mov	r3,r7
   13d90:	e0800217 	ldw	r2,8(fp)
   13d94:	e0fffe05 	stb	r3,-8(fp)
   13d98:	e0bfff05 	stb	r2,-4(fp)
    ALT_AVALON_I2C_STATUS_CODE status = ALT_AVALON_I2C_SUCCESS;
   13d9c:	e03ff915 	stw	zero,-28(fp)
    alt_u32 timeout;
    alt_u32 bytes_read=0;
   13da0:	e03ff715 	stw	zero,-36(fp)
    alt_u32 bytes_written=0;
   13da4:	e03ff815 	stw	zero,-32(fp)
    alt_u32 temp_bytes_read;
    
    if (size==0)
   13da8:	e0bffd17 	ldw	r2,-12(fp)
   13dac:	1000021e 	bne	r2,zero,13db8 <alt_avalon_i2c_master_receive+0x48>
    {
      return ALT_AVALON_I2C_SUCCESS;
   13db0:	0005883a 	mov	r2,zero
   13db4:	00006d06 	br	13f6c <alt_avalon_i2c_master_receive+0x1fc>
    }
    
    /*if a new transaction, enable ip and clear int status*/
    if (!issue_restart) 
   13db8:	e0bffe03 	ldbu	r2,-8(fp)
   13dbc:	10000a1e 	bne	r2,zero,13de8 <alt_avalon_i2c_master_receive+0x78>
    {
       /*enable the ip.  The ip is disabled and enabled for each transaction.*/
      status = alt_avalon_i2c_enable(i2c_dev);
   13dc0:	e13ffb17 	ldw	r4,-20(fp)
   13dc4:	0012c200 	call	12c20 <alt_avalon_i2c_enable>
   13dc8:	e0bff915 	stw	r2,-28(fp)
      if (status != ALT_AVALON_I2C_SUCCESS)
   13dcc:	e0bff917 	ldw	r2,-28(fp)
   13dd0:	10000226 	beq	r2,zero,13ddc <alt_avalon_i2c_master_receive+0x6c>
      {
        return status;
   13dd4:	e0bff917 	ldw	r2,-28(fp)
   13dd8:	00006406 	br	13f6c <alt_avalon_i2c_master_receive+0x1fc>
      }

      /*Clear the ISR reg*/
      alt_avalon_i2c_int_clear(i2c_dev,ALT_AVALON_I2C_ISR_ALL_CLEARABLE_INTS_MSK);
   13ddc:	01400704 	movi	r5,28
   13de0:	e13ffb17 	ldw	r4,-20(fp)
   13de4:	001420c0 	call	1420c <alt_avalon_i2c_int_clear>
    }

    /*Start Write, transmit address. */
    status = alt_avalon_i2c_send_address(i2c_dev,ALT_AVALON_I2C_READ,issue_restart);
   13de8:	e0bffe03 	ldbu	r2,-8(fp)
   13dec:	100d883a 	mov	r6,r2
   13df0:	01400044 	movi	r5,1
   13df4:	e13ffb17 	ldw	r4,-20(fp)
   13df8:	00132880 	call	13288 <alt_avalon_i2c_send_address>
   13dfc:	e0bff915 	stw	r2,-28(fp)

    if (status == ALT_AVALON_I2C_SUCCESS)
   13e00:	e0bff917 	ldw	r2,-28(fp)
   13e04:	1000341e 	bne	r2,zero,13ed8 <alt_avalon_i2c_master_receive+0x168>
    {
        while ((bytes_written < (size-1)) && (status == ALT_AVALON_I2C_SUCCESS))
   13e08:	00001906 	br	13e70 <alt_avalon_i2c_master_receive+0x100>
        {
            status = alt_avalon_i2c_cmd_write(i2c_dev, 0, ALT_AVALON_I2C_NO_RESTART, ALT_AVALON_I2C_NO_STOP);
   13e0c:	000f883a 	mov	r7,zero
   13e10:	000d883a 	mov	r6,zero
   13e14:	000b883a 	mov	r5,zero
   13e18:	e13ffb17 	ldw	r4,-20(fp)
   13e1c:	00131a40 	call	131a4 <alt_avalon_i2c_cmd_write>
   13e20:	e0bff915 	stw	r2,-28(fp)
            bytes_written++;
   13e24:	e0bff817 	ldw	r2,-32(fp)
   13e28:	10800044 	addi	r2,r2,1
   13e2c:	e0bff815 	stw	r2,-32(fp)
            if (status == ALT_AVALON_I2C_SUCCESS)
   13e30:	e0bff917 	ldw	r2,-28(fp)
   13e34:	10000e1e 	bne	r2,zero,13e70 <alt_avalon_i2c_master_receive+0x100>
            {
               alt_avalon_i2c_rx_read_available(i2c_dev, buffer,0,&temp_bytes_read);
   13e38:	e0bffa04 	addi	r2,fp,-24
   13e3c:	100f883a 	mov	r7,r2
   13e40:	000d883a 	mov	r6,zero
   13e44:	e17ffc17 	ldw	r5,-16(fp)
   13e48:	e13ffb17 	ldw	r4,-20(fp)
   13e4c:	00130540 	call	13054 <alt_avalon_i2c_rx_read_available>
               buffer+=temp_bytes_read;
   13e50:	e0bffa17 	ldw	r2,-24(fp)
   13e54:	e0fffc17 	ldw	r3,-16(fp)
   13e58:	1885883a 	add	r2,r3,r2
   13e5c:	e0bffc15 	stw	r2,-16(fp)
               bytes_read+=temp_bytes_read;
   13e60:	e0bffa17 	ldw	r2,-24(fp)
   13e64:	e0fff717 	ldw	r3,-36(fp)
   13e68:	1885883a 	add	r2,r3,r2
   13e6c:	e0bff715 	stw	r2,-36(fp)
    /*Start Write, transmit address. */
    status = alt_avalon_i2c_send_address(i2c_dev,ALT_AVALON_I2C_READ,issue_restart);

    if (status == ALT_AVALON_I2C_SUCCESS)
    {
        while ((bytes_written < (size-1)) && (status == ALT_AVALON_I2C_SUCCESS))
   13e70:	e0bffd17 	ldw	r2,-12(fp)
   13e74:	10bfffc4 	addi	r2,r2,-1
   13e78:	e0fff817 	ldw	r3,-32(fp)
   13e7c:	1880022e 	bgeu	r3,r2,13e88 <alt_avalon_i2c_master_receive+0x118>
   13e80:	e0bff917 	ldw	r2,-28(fp)
   13e84:	103fe126 	beq	r2,zero,13e0c <__alt_mem_Onchip_SRAM+0xf8013e0c>
               bytes_read+=temp_bytes_read;
            }
        }

        /* Last byte */
        if (status == ALT_AVALON_I2C_SUCCESS)
   13e88:	e0bff917 	ldw	r2,-28(fp)
   13e8c:	1000121e 	bne	r2,zero,13ed8 <alt_avalon_i2c_master_receive+0x168>
        {
            status = alt_avalon_i2c_cmd_write(i2c_dev, 0, ALT_AVALON_I2C_NO_RESTART, issue_stop);
   13e90:	e0bfff03 	ldbu	r2,-4(fp)
   13e94:	100f883a 	mov	r7,r2
   13e98:	000d883a 	mov	r6,zero
   13e9c:	000b883a 	mov	r5,zero
   13ea0:	e13ffb17 	ldw	r4,-20(fp)
   13ea4:	00131a40 	call	131a4 <alt_avalon_i2c_cmd_write>
   13ea8:	e0bff915 	stw	r2,-28(fp)
        }
    }
    
    while ((bytes_read < size) && (status==ALT_AVALON_I2C_SUCCESS)) 
   13eac:	00000a06 	br	13ed8 <alt_avalon_i2c_master_receive+0x168>
    {
        status=alt_avalon_i2c_rx_read(i2c_dev, buffer);
   13eb0:	e17ffc17 	ldw	r5,-16(fp)
   13eb4:	e13ffb17 	ldw	r4,-20(fp)
   13eb8:	00130fc0 	call	130fc <alt_avalon_i2c_rx_read>
   13ebc:	e0bff915 	stw	r2,-28(fp)
        buffer++;
   13ec0:	e0bffc17 	ldw	r2,-16(fp)
   13ec4:	10800044 	addi	r2,r2,1
   13ec8:	e0bffc15 	stw	r2,-16(fp)
        bytes_read++;
   13ecc:	e0bff717 	ldw	r2,-36(fp)
   13ed0:	10800044 	addi	r2,r2,1
   13ed4:	e0bff715 	stw	r2,-36(fp)
        {
            status = alt_avalon_i2c_cmd_write(i2c_dev, 0, ALT_AVALON_I2C_NO_RESTART, issue_stop);
        }
    }
    
    while ((bytes_read < size) && (status==ALT_AVALON_I2C_SUCCESS)) 
   13ed8:	e0fff717 	ldw	r3,-36(fp)
   13edc:	e0bffd17 	ldw	r2,-12(fp)
   13ee0:	1880022e 	bgeu	r3,r2,13eec <alt_avalon_i2c_master_receive+0x17c>
   13ee4:	e0bff917 	ldw	r2,-28(fp)
   13ee8:	103ff126 	beq	r2,zero,13eb0 <__alt_mem_Onchip_SRAM+0xf8013eb0>
        buffer++;
        bytes_read++;
    }

    /*if end of transaction, wait until the ip is idle then disable the ip*/
    if ((issue_stop) || (status != ALT_AVALON_I2C_SUCCESS)) 
   13eec:	e0bfff03 	ldbu	r2,-4(fp)
   13ef0:	1000021e 	bne	r2,zero,13efc <alt_avalon_i2c_master_receive+0x18c>
   13ef4:	e0bff917 	ldw	r2,-28(fp)
   13ef8:	10001b26 	beq	r2,zero,13f68 <alt_avalon_i2c_master_receive+0x1f8>
    {
        timeout=10000 * size;
   13efc:	0149c404 	movi	r5,10000
   13f00:	e13ffd17 	ldw	r4,-12(fp)
   13f04:	0000eb00 	call	eb0 <__mulsi3>
   13f08:	e0bff615 	stw	r2,-40(fp)
        while (alt_avalon_i2c_is_busy(i2c_dev))
   13f0c:	00000d06 	br	13f44 <alt_avalon_i2c_master_receive+0x1d4>
        {
            if (timeout<10) alt_busy_sleep(10000);
   13f10:	e0bff617 	ldw	r2,-40(fp)
   13f14:	108002a8 	cmpgeui	r2,r2,10
   13f18:	1000021e 	bne	r2,zero,13f24 <alt_avalon_i2c_master_receive+0x1b4>
   13f1c:	0109c404 	movi	r4,10000
   13f20:	00156b00 	call	156b0 <alt_busy_sleep>
            if (--timeout == 0)
   13f24:	e0bff617 	ldw	r2,-40(fp)
   13f28:	10bfffc4 	addi	r2,r2,-1
   13f2c:	e0bff615 	stw	r2,-40(fp)
   13f30:	e0bff617 	ldw	r2,-40(fp)
   13f34:	1000031e 	bne	r2,zero,13f44 <alt_avalon_i2c_master_receive+0x1d4>
            {
               status = ALT_AVALON_I2C_TIMEOUT;
   13f38:	00bfff84 	movi	r2,-2
   13f3c:	e0bff915 	stw	r2,-28(fp)
               break;
   13f40:	00000306 	br	13f50 <alt_avalon_i2c_master_receive+0x1e0>

    /*if end of transaction, wait until the ip is idle then disable the ip*/
    if ((issue_stop) || (status != ALT_AVALON_I2C_SUCCESS)) 
    {
        timeout=10000 * size;
        while (alt_avalon_i2c_is_busy(i2c_dev))
   13f44:	e13ffb17 	ldw	r4,-20(fp)
   13f48:	00130100 	call	13010 <alt_avalon_i2c_is_busy>
   13f4c:	103ff01e 	bne	r2,zero,13f10 <__alt_mem_Onchip_SRAM+0xf8013f10>
               break;
            }
        }

        /*check for nack error*/
        alt_avalon_i2c_check_nack(i2c_dev,&status);    
   13f50:	e0bff904 	addi	r2,fp,-28
   13f54:	100b883a 	mov	r5,r2
   13f58:	e13ffb17 	ldw	r4,-20(fp)
   13f5c:	00133e40 	call	133e4 <alt_avalon_i2c_check_nack>
        
        /*disable the ip.  The ip is disabled and enabled for each transaction.*/
        alt_avalon_i2c_disable(i2c_dev);
   13f60:	e13ffb17 	ldw	r4,-20(fp)
   13f64:	0012cb80 	call	12cb8 <alt_avalon_i2c_disable>
    }

    return status;
   13f68:	e0bff917 	ldw	r2,-28(fp)
}
   13f6c:	e037883a 	mov	sp,fp
   13f70:	dfc00117 	ldw	ra,4(sp)
   13f74:	df000017 	ldw	fp,0(sp)
   13f78:	dec00204 	addi	sp,sp,8
   13f7c:	f800283a 	ret

00013f80 <alt_avalon_i2c_master_receive_using_interrupts>:
ALT_AVALON_I2C_STATUS_CODE alt_avalon_i2c_master_receive_using_interrupts(ALT_AVALON_I2C_DEV_t *i2c_dev,
                                       alt_u8 * buffer,
                                       const alt_u32 size,
                                       const alt_u8 issue_restart,
                                       const alt_u8 issue_stop)
{
   13f80:	defff504 	addi	sp,sp,-44
   13f84:	dfc00a15 	stw	ra,40(sp)
   13f88:	df000915 	stw	fp,36(sp)
   13f8c:	df000904 	addi	fp,sp,36
   13f90:	e13ffb15 	stw	r4,-20(fp)
   13f94:	e17ffc15 	stw	r5,-16(fp)
   13f98:	e1bffd15 	stw	r6,-12(fp)
   13f9c:	3807883a 	mov	r3,r7
   13fa0:	e0800217 	ldw	r2,8(fp)
   13fa4:	e0fffe05 	stb	r3,-8(fp)
   13fa8:	e0bfff05 	stb	r2,-4(fp)
    ALT_AVALON_I2C_STATUS_CODE status = ALT_AVALON_I2C_SUCCESS;
   13fac:	e03ff715 	stw	zero,-36(fp)
    IRQ_DATA_t *irq_data = i2c_dev->callback_context;    
   13fb0:	e0bffb17 	ldw	r2,-20(fp)
   13fb4:	10800717 	ldw	r2,28(r2)
   13fb8:	e0bffa15 	stw	r2,-24(fp)
    alt_u32 timeout;
    alt_u32 bytes_written=0;
   13fbc:	e03ff915 	stw	zero,-28(fp)
    
    if (size==0)
   13fc0:	e0bffd17 	ldw	r2,-12(fp)
   13fc4:	1000021e 	bne	r2,zero,13fd0 <alt_avalon_i2c_master_receive_using_interrupts+0x50>
    {
      return ALT_AVALON_I2C_SUCCESS;
   13fc8:	0005883a 	mov	r2,zero
   13fcc:	00006306 	br	1415c <alt_avalon_i2c_master_receive_using_interrupts+0x1dc>
    }
    
    /*Is the optional interrupt handler registered??*/
    if (i2c_dev->callback != optional_irq_callback)
   13fd0:	e0bffb17 	ldw	r2,-20(fp)
   13fd4:	10c00617 	ldw	r3,24(r2)
   13fd8:	00800074 	movhi	r2,1
   13fdc:	108a2904 	addi	r2,r2,10404
   13fe0:	18800226 	beq	r3,r2,13fec <alt_avalon_i2c_master_receive_using_interrupts+0x6c>
    {
       return ALT_AVALON_I2C_BAD_ARG;    
   13fe4:	00bfff44 	movi	r2,-3
   13fe8:	00005c06 	br	1415c <alt_avalon_i2c_master_receive_using_interrupts+0x1dc>
    }
    
    /*if a new transaction, enable ip and clear int status*/
    if (!issue_restart) 
   13fec:	e0bffe03 	ldbu	r2,-8(fp)
   13ff0:	10000a1e 	bne	r2,zero,1401c <alt_avalon_i2c_master_receive_using_interrupts+0x9c>
    {
      /*enable the ip.  The ip is disabled and enabled for each transaction.*/
      status = alt_avalon_i2c_enable(i2c_dev);
   13ff4:	e13ffb17 	ldw	r4,-20(fp)
   13ff8:	0012c200 	call	12c20 <alt_avalon_i2c_enable>
   13ffc:	e0bff715 	stw	r2,-36(fp)
      if (status != ALT_AVALON_I2C_SUCCESS)
   14000:	e0bff717 	ldw	r2,-36(fp)
   14004:	10000226 	beq	r2,zero,14010 <alt_avalon_i2c_master_receive_using_interrupts+0x90>
      {
        return status;
   14008:	e0bff717 	ldw	r2,-36(fp)
   1400c:	00005306 	br	1415c <alt_avalon_i2c_master_receive_using_interrupts+0x1dc>
      }

      /*Clear the ISR reg*/
      alt_avalon_i2c_int_clear(i2c_dev,ALT_AVALON_I2C_ISR_ALL_CLEARABLE_INTS_MSK);
   14010:	01400704 	movi	r5,28
   14014:	e13ffb17 	ldw	r4,-20(fp)
   14018:	001420c0 	call	1420c <alt_avalon_i2c_int_clear>
      
    }

    /*Start Write, transmit address. */
    status = alt_avalon_i2c_send_address(i2c_dev,ALT_AVALON_I2C_READ,issue_restart);
   1401c:	e0bffe03 	ldbu	r2,-8(fp)
   14020:	100d883a 	mov	r6,r2
   14024:	01400044 	movi	r5,1
   14028:	e13ffb17 	ldw	r4,-20(fp)
   1402c:	00132880 	call	13288 <alt_avalon_i2c_send_address>
   14030:	e0bff715 	stw	r2,-36(fp)

    if (status == ALT_AVALON_I2C_SUCCESS)
   14034:	e0bff717 	ldw	r2,-36(fp)
   14038:	1000191e 	bne	r2,zero,140a0 <alt_avalon_i2c_master_receive_using_interrupts+0x120>
    {
        while ((bytes_written < (size-1)) && (status == ALT_AVALON_I2C_SUCCESS))
   1403c:	00000906 	br	14064 <alt_avalon_i2c_master_receive_using_interrupts+0xe4>
        {
            status = alt_avalon_i2c_cmd_write(i2c_dev, 0, ALT_AVALON_I2C_NO_RESTART, ALT_AVALON_I2C_NO_STOP);
   14040:	000f883a 	mov	r7,zero
   14044:	000d883a 	mov	r6,zero
   14048:	000b883a 	mov	r5,zero
   1404c:	e13ffb17 	ldw	r4,-20(fp)
   14050:	00131a40 	call	131a4 <alt_avalon_i2c_cmd_write>
   14054:	e0bff715 	stw	r2,-36(fp)
            bytes_written++;
   14058:	e0bff917 	ldw	r2,-28(fp)
   1405c:	10800044 	addi	r2,r2,1
   14060:	e0bff915 	stw	r2,-28(fp)
    /*Start Write, transmit address. */
    status = alt_avalon_i2c_send_address(i2c_dev,ALT_AVALON_I2C_READ,issue_restart);

    if (status == ALT_AVALON_I2C_SUCCESS)
    {
        while ((bytes_written < (size-1)) && (status == ALT_AVALON_I2C_SUCCESS))
   14064:	e0bffd17 	ldw	r2,-12(fp)
   14068:	10bfffc4 	addi	r2,r2,-1
   1406c:	e0fff917 	ldw	r3,-28(fp)
   14070:	1880022e 	bgeu	r3,r2,1407c <alt_avalon_i2c_master_receive_using_interrupts+0xfc>
   14074:	e0bff717 	ldw	r2,-36(fp)
   14078:	103ff126 	beq	r2,zero,14040 <__alt_mem_Onchip_SRAM+0xf8014040>
            status = alt_avalon_i2c_cmd_write(i2c_dev, 0, ALT_AVALON_I2C_NO_RESTART, ALT_AVALON_I2C_NO_STOP);
            bytes_written++;
        }

        /* Last byte */
        if (status == ALT_AVALON_I2C_SUCCESS)
   1407c:	e0bff717 	ldw	r2,-36(fp)
   14080:	1000071e 	bne	r2,zero,140a0 <alt_avalon_i2c_master_receive_using_interrupts+0x120>
        {
            status = alt_avalon_i2c_cmd_write(i2c_dev, 0, ALT_AVALON_I2C_NO_RESTART, issue_stop);
   14084:	e0bfff03 	ldbu	r2,-4(fp)
   14088:	100f883a 	mov	r7,r2
   1408c:	000d883a 	mov	r6,zero
   14090:	000b883a 	mov	r5,zero
   14094:	e13ffb17 	ldw	r4,-20(fp)
   14098:	00131a40 	call	131a4 <alt_avalon_i2c_cmd_write>
   1409c:	e0bff715 	stw	r2,-36(fp)
        }
    }
    
    /*if error, wait until the ip is idle then disable the ip*/
    if (status != ALT_AVALON_I2C_SUCCESS) 
   140a0:	e0bff717 	ldw	r2,-36(fp)
   140a4:	10001826 	beq	r2,zero,14108 <alt_avalon_i2c_master_receive_using_interrupts+0x188>
    {
        timeout=10000 * size;
   140a8:	0149c404 	movi	r5,10000
   140ac:	e13ffd17 	ldw	r4,-12(fp)
   140b0:	0000eb00 	call	eb0 <__mulsi3>
   140b4:	e0bff815 	stw	r2,-32(fp)
        while (alt_avalon_i2c_is_busy(i2c_dev))
   140b8:	00000d06 	br	140f0 <alt_avalon_i2c_master_receive_using_interrupts+0x170>
        {
            if (timeout<10) alt_busy_sleep(10000);
   140bc:	e0bff817 	ldw	r2,-32(fp)
   140c0:	108002a8 	cmpgeui	r2,r2,10
   140c4:	1000021e 	bne	r2,zero,140d0 <alt_avalon_i2c_master_receive_using_interrupts+0x150>
   140c8:	0109c404 	movi	r4,10000
   140cc:	00156b00 	call	156b0 <alt_busy_sleep>
            if (--timeout == 0)
   140d0:	e0bff817 	ldw	r2,-32(fp)
   140d4:	10bfffc4 	addi	r2,r2,-1
   140d8:	e0bff815 	stw	r2,-32(fp)
   140dc:	e0bff817 	ldw	r2,-32(fp)
   140e0:	1000031e 	bne	r2,zero,140f0 <alt_avalon_i2c_master_receive_using_interrupts+0x170>
            {
               status = ALT_AVALON_I2C_TIMEOUT;
   140e4:	00bfff84 	movi	r2,-2
   140e8:	e0bff715 	stw	r2,-36(fp)
               break;
   140ec:	00000306 	br	140fc <alt_avalon_i2c_master_receive_using_interrupts+0x17c>
    
    /*if error, wait until the ip is idle then disable the ip*/
    if (status != ALT_AVALON_I2C_SUCCESS) 
    {
        timeout=10000 * size;
        while (alt_avalon_i2c_is_busy(i2c_dev))
   140f0:	e13ffb17 	ldw	r4,-20(fp)
   140f4:	00130100 	call	13010 <alt_avalon_i2c_is_busy>
   140f8:	103ff01e 	bne	r2,zero,140bc <__alt_mem_Onchip_SRAM+0xf80140bc>
               break;
            }
        }
     
        /*disable the ip.  The ip is disabled and enabled for each transaction.*/
        alt_avalon_i2c_disable(i2c_dev);
   140fc:	e13ffb17 	ldw	r4,-20(fp)
   14100:	0012cb80 	call	12cb8 <alt_avalon_i2c_disable>
   14104:	00001406 	br	14158 <alt_avalon_i2c_master_receive_using_interrupts+0x1d8>
    }
    else
    {
       if (issue_stop)
   14108:	e0bfff03 	ldbu	r2,-4(fp)
   1410c:	10001226 	beq	r2,zero,14158 <alt_avalon_i2c_master_receive_using_interrupts+0x1d8>
       {
         /* clear ISR register content */
         alt_avalon_i2c_int_clear(i2c_dev,ALT_AVALON_I2C_ISR_ALL_CLEARABLE_INTS_MSK);
   14110:	01400704 	movi	r5,28
   14114:	e13ffb17 	ldw	r4,-20(fp)
   14118:	001420c0 	call	1420c <alt_avalon_i2c_int_clear>
         /* set the cmd fifo threshold */
         alt_avalon_i2c_rx_fifo_threshold_set(i2c_dev,ALT_AVALON_I2C_RX_DATA_FIFO_1_ENTRY);
   1411c:	000b883a 	mov	r5,zero
   14120:	e13ffb17 	ldw	r4,-20(fp)
   14124:	00143a40 	call	143a4 <alt_avalon_i2c_rx_fifo_threshold_set>
         /* set the interrupt transaction busy bit  2 = receive */
         irq_data->irq_busy=2;
   14128:	e0bffa17 	ldw	r2,-24(fp)
   1412c:	00c00084 	movi	r3,2
   14130:	10c00215 	stw	r3,8(r2)
         
         irq_data->buffer = buffer;
   14134:	e0bffa17 	ldw	r2,-24(fp)
   14138:	e0fffc17 	ldw	r3,-16(fp)
   1413c:	10c00015 	stw	r3,0(r2)
         irq_data->size = size;
   14140:	e0bffa17 	ldw	r2,-24(fp)
   14144:	e0fffd17 	ldw	r3,-12(fp)
   14148:	10c00115 	stw	r3,4(r2)
         
         /* enable the RX_READY interrupt */
         alt_avalon_i2c_int_enable(i2c_dev,ALT_AVALON_I2C_ISER_RX_READY_EN_MSK);
   1414c:	01400084 	movi	r5,2
   14150:	e13ffb17 	ldw	r4,-20(fp)
   14154:	00142b00 	call	142b0 <alt_avalon_i2c_int_enable>
       }
    }

    return status;
   14158:	e0bff717 	ldw	r2,-36(fp)
}
   1415c:	e037883a 	mov	sp,fp
   14160:	dfc00117 	ldw	ra,4(sp)
   14164:	df000017 	ldw	fp,0(sp)
   14168:	dec00204 	addi	sp,sp,8
   1416c:	f800283a 	ret

00014170 <alt_avalon_i2c_int_status_get>:

/* Returns the current I2C controller interrupt status conditions. */
void alt_avalon_i2c_int_status_get(ALT_AVALON_I2C_DEV_t *i2c_dev,
                                       alt_u32 *status)
{
   14170:	defffd04 	addi	sp,sp,-12
   14174:	df000215 	stw	fp,8(sp)
   14178:	df000204 	addi	fp,sp,8
   1417c:	e13ffe15 	stw	r4,-8(fp)
   14180:	e17fff15 	stw	r5,-4(fp)
    *status = IORD_ALT_AVALON_I2C_ISR(i2c_dev->i2c_base) & IORD_ALT_AVALON_I2C_ISER(i2c_dev->i2c_base);
   14184:	e0bffe17 	ldw	r2,-8(fp)
   14188:	10800317 	ldw	r2,12(r2)
   1418c:	10800404 	addi	r2,r2,16
   14190:	10c00037 	ldwio	r3,0(r2)
   14194:	e0bffe17 	ldw	r2,-8(fp)
   14198:	10800317 	ldw	r2,12(r2)
   1419c:	10800304 	addi	r2,r2,12
   141a0:	10800037 	ldwio	r2,0(r2)
   141a4:	1884703a 	and	r2,r3,r2
   141a8:	1007883a 	mov	r3,r2
   141ac:	e0bfff17 	ldw	r2,-4(fp)
   141b0:	10c00015 	stw	r3,0(r2)
}
   141b4:	0001883a 	nop
   141b8:	e037883a 	mov	sp,fp
   141bc:	df000017 	ldw	fp,0(sp)
   141c0:	dec00104 	addi	sp,sp,4
   141c4:	f800283a 	ret

000141c8 <alt_avalon_i2c_int_raw_status_get>:

/*Returns the I2C controller raw interrupt status conditions irrespective of
 * the interrupt status condition enablement state. */
void alt_avalon_i2c_int_raw_status_get(ALT_AVALON_I2C_DEV_t *i2c_dev,
                                           alt_u32 *status)
{
   141c8:	defffd04 	addi	sp,sp,-12
   141cc:	df000215 	stw	fp,8(sp)
   141d0:	df000204 	addi	fp,sp,8
   141d4:	e13ffe15 	stw	r4,-8(fp)
   141d8:	e17fff15 	stw	r5,-4(fp)
    *status = IORD_ALT_AVALON_I2C_ISR(i2c_dev->i2c_base);
   141dc:	e0bffe17 	ldw	r2,-8(fp)
   141e0:	10800317 	ldw	r2,12(r2)
   141e4:	10800404 	addi	r2,r2,16
   141e8:	10800037 	ldwio	r2,0(r2)
   141ec:	1007883a 	mov	r3,r2
   141f0:	e0bfff17 	ldw	r2,-4(fp)
   141f4:	10c00015 	stw	r3,0(r2)
}
   141f8:	0001883a 	nop
   141fc:	e037883a 	mov	sp,fp
   14200:	df000017 	ldw	fp,0(sp)
   14204:	dec00104 	addi	sp,sp,4
   14208:	f800283a 	ret

0001420c <alt_avalon_i2c_int_clear>:

/*Clears the specified I2C controller interrupt status conditions identified
 * in the mask. */
void alt_avalon_i2c_int_clear(ALT_AVALON_I2C_DEV_t *i2c_dev, const alt_u32 mask)
{
   1420c:	defffd04 	addi	sp,sp,-12
   14210:	df000215 	stw	fp,8(sp)
   14214:	df000204 	addi	fp,sp,8
   14218:	e13ffe15 	stw	r4,-8(fp)
   1421c:	e17fff15 	stw	r5,-4(fp)
    IOWR_ALT_AVALON_I2C_ISR(i2c_dev->i2c_base,mask);
   14220:	e0bffe17 	ldw	r2,-8(fp)
   14224:	10800317 	ldw	r2,12(r2)
   14228:	10800404 	addi	r2,r2,16
   1422c:	e0ffff17 	ldw	r3,-4(fp)
   14230:	10c00035 	stwio	r3,0(r2)
}
   14234:	0001883a 	nop
   14238:	e037883a 	mov	sp,fp
   1423c:	df000017 	ldw	fp,0(sp)
   14240:	dec00104 	addi	sp,sp,4
   14244:	f800283a 	ret

00014248 <alt_avalon_i2c_int_disable>:

/*Disable the specified I2C controller interrupt status conditions identified in
 * the mask. */
void alt_avalon_i2c_int_disable(ALT_AVALON_I2C_DEV_t *i2c_dev, const alt_u32 mask)
{
   14248:	defffb04 	addi	sp,sp,-20
   1424c:	dfc00415 	stw	ra,16(sp)
   14250:	df000315 	stw	fp,12(sp)
   14254:	df000304 	addi	fp,sp,12
   14258:	e13ffe15 	stw	r4,-8(fp)
   1425c:	e17fff15 	stw	r5,-4(fp)
   alt_u32 enabled_ints;
    
   alt_avalon_i2c_enabled_ints_get(i2c_dev,&enabled_ints);
   14260:	e17ffd04 	addi	r5,fp,-12
   14264:	e13ffe17 	ldw	r4,-8(fp)
   14268:	00143140 	call	14314 <alt_avalon_i2c_enabled_ints_get>
   enabled_ints &=  (~mask);
   1426c:	e0bfff17 	ldw	r2,-4(fp)
   14270:	0086303a 	nor	r3,zero,r2
   14274:	e0bffd17 	ldw	r2,-12(fp)
   14278:	1884703a 	and	r2,r3,r2
   1427c:	e0bffd15 	stw	r2,-12(fp)
   IOWR_ALT_AVALON_I2C_ISER(i2c_dev->i2c_base,ALT_AVALON_I2C_ISR_ALLINTS_MSK & enabled_ints);
   14280:	e0bffe17 	ldw	r2,-8(fp)
   14284:	10800317 	ldw	r2,12(r2)
   14288:	10800304 	addi	r2,r2,12
   1428c:	e0fffd17 	ldw	r3,-12(fp)
   14290:	18c007cc 	andi	r3,r3,31
   14294:	10c00035 	stwio	r3,0(r2)
}
   14298:	0001883a 	nop
   1429c:	e037883a 	mov	sp,fp
   142a0:	dfc00117 	ldw	ra,4(sp)
   142a4:	df000017 	ldw	fp,0(sp)
   142a8:	dec00204 	addi	sp,sp,8
   142ac:	f800283a 	ret

000142b0 <alt_avalon_i2c_int_enable>:

/*Enable the specified I2C controller interrupt status conditions identified in
 * the mask. */
void alt_avalon_i2c_int_enable(ALT_AVALON_I2C_DEV_t *i2c_dev, const alt_u32 mask)
{
   142b0:	defffb04 	addi	sp,sp,-20
   142b4:	dfc00415 	stw	ra,16(sp)
   142b8:	df000315 	stw	fp,12(sp)
   142bc:	df000304 	addi	fp,sp,12
   142c0:	e13ffe15 	stw	r4,-8(fp)
   142c4:	e17fff15 	stw	r5,-4(fp)
    alt_u32 enabled_ints;
    
    alt_avalon_i2c_enabled_ints_get(i2c_dev,&enabled_ints);
   142c8:	e17ffd04 	addi	r5,fp,-12
   142cc:	e13ffe17 	ldw	r4,-8(fp)
   142d0:	00143140 	call	14314 <alt_avalon_i2c_enabled_ints_get>
    enabled_ints |= mask;
   142d4:	e0fffd17 	ldw	r3,-12(fp)
   142d8:	e0bfff17 	ldw	r2,-4(fp)
   142dc:	1884b03a 	or	r2,r3,r2
   142e0:	e0bffd15 	stw	r2,-12(fp)
    IOWR_ALT_AVALON_I2C_ISER(i2c_dev->i2c_base,ALT_AVALON_I2C_ISR_ALLINTS_MSK & enabled_ints);
   142e4:	e0bffe17 	ldw	r2,-8(fp)
   142e8:	10800317 	ldw	r2,12(r2)
   142ec:	10800304 	addi	r2,r2,12
   142f0:	e0fffd17 	ldw	r3,-12(fp)
   142f4:	18c007cc 	andi	r3,r3,31
   142f8:	10c00035 	stwio	r3,0(r2)
}
   142fc:	0001883a 	nop
   14300:	e037883a 	mov	sp,fp
   14304:	dfc00117 	ldw	ra,4(sp)
   14308:	df000017 	ldw	fp,0(sp)
   1430c:	dec00204 	addi	sp,sp,8
   14310:	f800283a 	ret

00014314 <alt_avalon_i2c_enabled_ints_get>:

/*gets the enabled i2c interrupts. */
void alt_avalon_i2c_enabled_ints_get(ALT_AVALON_I2C_DEV_t *i2c_dev, alt_u32 * enabled_ints)
{
   14314:	defffd04 	addi	sp,sp,-12
   14318:	df000215 	stw	fp,8(sp)
   1431c:	df000204 	addi	fp,sp,8
   14320:	e13ffe15 	stw	r4,-8(fp)
   14324:	e17fff15 	stw	r5,-4(fp)
    *enabled_ints=IORD_ALT_AVALON_I2C_ISER(i2c_dev->i2c_base) & ALT_AVALON_I2C_ISR_ALLINTS_MSK;
   14328:	e0bffe17 	ldw	r2,-8(fp)
   1432c:	10800317 	ldw	r2,12(r2)
   14330:	10800304 	addi	r2,r2,12
   14334:	10800037 	ldwio	r2,0(r2)
   14338:	10c007cc 	andi	r3,r2,31
   1433c:	e0bfff17 	ldw	r2,-4(fp)
   14340:	10c00015 	stw	r3,0(r2)
}
   14344:	0001883a 	nop
   14348:	e037883a 	mov	sp,fp
   1434c:	df000017 	ldw	fp,0(sp)
   14350:	dec00104 	addi	sp,sp,4
   14354:	f800283a 	ret

00014358 <alt_avalon_i2c_rx_fifo_threshold_get>:

/*Gets the current receive FIFO threshold level value. */
void alt_avalon_i2c_rx_fifo_threshold_get(ALT_AVALON_I2C_DEV_t *i2c_dev,
                                              ALT_AVALON_I2C_RX_DATA_FIFO_THRESHOLD_t *threshold)
{
   14358:	defffd04 	addi	sp,sp,-12
   1435c:	df000215 	stw	fp,8(sp)
   14360:	df000204 	addi	fp,sp,8
   14364:	e13ffe15 	stw	r4,-8(fp)
   14368:	e17fff15 	stw	r5,-4(fp)
    *threshold = (IORD_ALT_AVALON_I2C_CTRL(i2c_dev->i2c_base) & ALT_AVALON_I2C_CTRL_RX_DATA_FIFO_THD_MSK) >>  ALT_AVALON_I2C_CTRL_RX_DATA_FIFO_THD_OFST;
   1436c:	e0bffe17 	ldw	r2,-8(fp)
   14370:	10800317 	ldw	r2,12(r2)
   14374:	10800204 	addi	r2,r2,8
   14378:	10800037 	ldwio	r2,0(r2)
   1437c:	10800c0c 	andi	r2,r2,48
   14380:	1005d13a 	srai	r2,r2,4
   14384:	1007883a 	mov	r3,r2
   14388:	e0bfff17 	ldw	r2,-4(fp)
   1438c:	10c00015 	stw	r3,0(r2)
}
   14390:	0001883a 	nop
   14394:	e037883a 	mov	sp,fp
   14398:	df000017 	ldw	fp,0(sp)
   1439c:	dec00104 	addi	sp,sp,4
   143a0:	f800283a 	ret

000143a4 <alt_avalon_i2c_rx_fifo_threshold_set>:

/*sets the current receive FIFO threshold level value. */
void alt_avalon_i2c_rx_fifo_threshold_set(ALT_AVALON_I2C_DEV_t *i2c_dev,
                                              const ALT_AVALON_I2C_RX_DATA_FIFO_THRESHOLD_t threshold)
{
   143a4:	defffd04 	addi	sp,sp,-12
   143a8:	df000215 	stw	fp,8(sp)
   143ac:	df000204 	addi	fp,sp,8
   143b0:	e13ffe15 	stw	r4,-8(fp)
   143b4:	e17fff15 	stw	r5,-4(fp)
    IORMW_ALT_AVALON_I2C_CTRL(i2c_dev->i2c_base,threshold << ALT_AVALON_I2C_CTRL_RX_DATA_FIFO_THD_OFST,ALT_AVALON_I2C_CTRL_RX_DATA_FIFO_THD_MSK);
   143b8:	e0bffe17 	ldw	r2,-8(fp)
   143bc:	10800317 	ldw	r2,12(r2)
   143c0:	10800204 	addi	r2,r2,8
   143c4:	e0fffe17 	ldw	r3,-8(fp)
   143c8:	18c00317 	ldw	r3,12(r3)
   143cc:	18c00204 	addi	r3,r3,8
   143d0:	18c00037 	ldwio	r3,0(r3)
   143d4:	1809883a 	mov	r4,r3
   143d8:	00fff3c4 	movi	r3,-49
   143dc:	20c8703a 	and	r4,r4,r3
   143e0:	e0ffff17 	ldw	r3,-4(fp)
   143e4:	1806913a 	slli	r3,r3,4
   143e8:	18c00c0c 	andi	r3,r3,48
   143ec:	20c6b03a 	or	r3,r4,r3
   143f0:	10c00035 	stwio	r3,0(r2)
}
   143f4:	0001883a 	nop
   143f8:	e037883a 	mov	sp,fp
   143fc:	df000017 	ldw	fp,0(sp)
   14400:	dec00104 	addi	sp,sp,4
   14404:	f800283a 	ret

00014408 <alt_avalon_i2c_tfr_cmd_fifo_threshold_get>:

/*Gets the current Transfer Command FIFO threshold level value.*/
void alt_avalon_i2c_tfr_cmd_fifo_threshold_get(ALT_AVALON_I2C_DEV_t *i2c_dev,
                                              ALT_AVALON_I2C_TFR_CMD_FIFO_THRESHOLD_t *threshold)
{
   14408:	defffd04 	addi	sp,sp,-12
   1440c:	df000215 	stw	fp,8(sp)
   14410:	df000204 	addi	fp,sp,8
   14414:	e13ffe15 	stw	r4,-8(fp)
   14418:	e17fff15 	stw	r5,-4(fp)
    *threshold = (IORD_ALT_AVALON_I2C_CTRL(i2c_dev->i2c_base) & ALT_AVALON_I2C_CTRL_TFR_CMD_FIFO_THD_MSK) >> ALT_AVALON_I2C_CTRL_TFR_CMD_FIFO_THD_OFST;
   1441c:	e0bffe17 	ldw	r2,-8(fp)
   14420:	10800317 	ldw	r2,12(r2)
   14424:	10800204 	addi	r2,r2,8
   14428:	10800037 	ldwio	r2,0(r2)
   1442c:	1080030c 	andi	r2,r2,12
   14430:	1005d0ba 	srai	r2,r2,2
   14434:	1007883a 	mov	r3,r2
   14438:	e0bfff17 	ldw	r2,-4(fp)
   1443c:	10c00015 	stw	r3,0(r2)
}
   14440:	0001883a 	nop
   14444:	e037883a 	mov	sp,fp
   14448:	df000017 	ldw	fp,0(sp)
   1444c:	dec00104 	addi	sp,sp,4
   14450:	f800283a 	ret

00014454 <alt_avalon_i2c_tfr_cmd_fifo_threshold_set>:

/*Sets the current Transfer Command FIFO threshold level value.*/
void alt_avalon_i2c_tfr_cmd_fifo_threshold_set(ALT_AVALON_I2C_DEV_t *i2c_dev,
                                              const ALT_AVALON_I2C_TFR_CMD_FIFO_THRESHOLD_t threshold)
{
   14454:	defffd04 	addi	sp,sp,-12
   14458:	df000215 	stw	fp,8(sp)
   1445c:	df000204 	addi	fp,sp,8
   14460:	e13ffe15 	stw	r4,-8(fp)
   14464:	e17fff15 	stw	r5,-4(fp)
  IORMW_ALT_AVALON_I2C_CTRL(i2c_dev->i2c_base,threshold << ALT_AVALON_I2C_CTRL_TFR_CMD_FIFO_THD_OFST,ALT_AVALON_I2C_CTRL_TFR_CMD_FIFO_THD_MSK);
   14468:	e0bffe17 	ldw	r2,-8(fp)
   1446c:	10800317 	ldw	r2,12(r2)
   14470:	10c00204 	addi	r3,r2,8
   14474:	e0bffe17 	ldw	r2,-8(fp)
   14478:	10800317 	ldw	r2,12(r2)
   1447c:	10800204 	addi	r2,r2,8
   14480:	10800037 	ldwio	r2,0(r2)
   14484:	1009883a 	mov	r4,r2
   14488:	00bffcc4 	movi	r2,-13
   1448c:	2088703a 	and	r4,r4,r2
   14490:	e0bfff17 	ldw	r2,-4(fp)
   14494:	1085883a 	add	r2,r2,r2
   14498:	1085883a 	add	r2,r2,r2
   1449c:	1080030c 	andi	r2,r2,12
   144a0:	2084b03a 	or	r2,r4,r2
   144a4:	18800035 	stwio	r2,0(r3)
}
   144a8:	0001883a 	nop
   144ac:	e037883a 	mov	sp,fp
   144b0:	df000017 	ldw	fp,0(sp)
   144b4:	dec00104 	addi	sp,sp,4
   144b8:	f800283a 	ret

000144bc <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   144bc:	defffa04 	addi	sp,sp,-24
   144c0:	dfc00515 	stw	ra,20(sp)
   144c4:	df000415 	stw	fp,16(sp)
   144c8:	df000404 	addi	fp,sp,16
   144cc:	e13ffd15 	stw	r4,-12(fp)
   144d0:	e17ffe15 	stw	r5,-8(fp)
   144d4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   144d8:	e0bffd17 	ldw	r2,-12(fp)
   144dc:	10800017 	ldw	r2,0(r2)
   144e0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   144e4:	e0bffc17 	ldw	r2,-16(fp)
   144e8:	10c00a04 	addi	r3,r2,40
   144ec:	e0bffd17 	ldw	r2,-12(fp)
   144f0:	10800217 	ldw	r2,8(r2)
   144f4:	100f883a 	mov	r7,r2
   144f8:	e1bfff17 	ldw	r6,-4(fp)
   144fc:	e17ffe17 	ldw	r5,-8(fp)
   14500:	1809883a 	mov	r4,r3
   14504:	0014ae40 	call	14ae4 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   14508:	e037883a 	mov	sp,fp
   1450c:	dfc00117 	ldw	ra,4(sp)
   14510:	df000017 	ldw	fp,0(sp)
   14514:	dec00204 	addi	sp,sp,8
   14518:	f800283a 	ret

0001451c <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   1451c:	defffa04 	addi	sp,sp,-24
   14520:	dfc00515 	stw	ra,20(sp)
   14524:	df000415 	stw	fp,16(sp)
   14528:	df000404 	addi	fp,sp,16
   1452c:	e13ffd15 	stw	r4,-12(fp)
   14530:	e17ffe15 	stw	r5,-8(fp)
   14534:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   14538:	e0bffd17 	ldw	r2,-12(fp)
   1453c:	10800017 	ldw	r2,0(r2)
   14540:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   14544:	e0bffc17 	ldw	r2,-16(fp)
   14548:	10c00a04 	addi	r3,r2,40
   1454c:	e0bffd17 	ldw	r2,-12(fp)
   14550:	10800217 	ldw	r2,8(r2)
   14554:	100f883a 	mov	r7,r2
   14558:	e1bfff17 	ldw	r6,-4(fp)
   1455c:	e17ffe17 	ldw	r5,-8(fp)
   14560:	1809883a 	mov	r4,r3
   14564:	0014d000 	call	14d00 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   14568:	e037883a 	mov	sp,fp
   1456c:	dfc00117 	ldw	ra,4(sp)
   14570:	df000017 	ldw	fp,0(sp)
   14574:	dec00204 	addi	sp,sp,8
   14578:	f800283a 	ret

0001457c <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   1457c:	defffc04 	addi	sp,sp,-16
   14580:	dfc00315 	stw	ra,12(sp)
   14584:	df000215 	stw	fp,8(sp)
   14588:	df000204 	addi	fp,sp,8
   1458c:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   14590:	e0bfff17 	ldw	r2,-4(fp)
   14594:	10800017 	ldw	r2,0(r2)
   14598:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   1459c:	e0bffe17 	ldw	r2,-8(fp)
   145a0:	10c00a04 	addi	r3,r2,40
   145a4:	e0bfff17 	ldw	r2,-4(fp)
   145a8:	10800217 	ldw	r2,8(r2)
   145ac:	100b883a 	mov	r5,r2
   145b0:	1809883a 	mov	r4,r3
   145b4:	001498c0 	call	1498c <altera_avalon_jtag_uart_close>
}
   145b8:	e037883a 	mov	sp,fp
   145bc:	dfc00117 	ldw	ra,4(sp)
   145c0:	df000017 	ldw	fp,0(sp)
   145c4:	dec00204 	addi	sp,sp,8
   145c8:	f800283a 	ret

000145cc <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   145cc:	defffa04 	addi	sp,sp,-24
   145d0:	dfc00515 	stw	ra,20(sp)
   145d4:	df000415 	stw	fp,16(sp)
   145d8:	df000404 	addi	fp,sp,16
   145dc:	e13ffd15 	stw	r4,-12(fp)
   145e0:	e17ffe15 	stw	r5,-8(fp)
   145e4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   145e8:	e0bffd17 	ldw	r2,-12(fp)
   145ec:	10800017 	ldw	r2,0(r2)
   145f0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   145f4:	e0bffc17 	ldw	r2,-16(fp)
   145f8:	10800a04 	addi	r2,r2,40
   145fc:	e1bfff17 	ldw	r6,-4(fp)
   14600:	e17ffe17 	ldw	r5,-8(fp)
   14604:	1009883a 	mov	r4,r2
   14608:	00149f40 	call	149f4 <altera_avalon_jtag_uart_ioctl>
}
   1460c:	e037883a 	mov	sp,fp
   14610:	dfc00117 	ldw	ra,4(sp)
   14614:	df000017 	ldw	fp,0(sp)
   14618:	dec00204 	addi	sp,sp,8
   1461c:	f800283a 	ret

00014620 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   14620:	defffa04 	addi	sp,sp,-24
   14624:	dfc00515 	stw	ra,20(sp)
   14628:	df000415 	stw	fp,16(sp)
   1462c:	df000404 	addi	fp,sp,16
   14630:	e13ffd15 	stw	r4,-12(fp)
   14634:	e17ffe15 	stw	r5,-8(fp)
   14638:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   1463c:	e0bffd17 	ldw	r2,-12(fp)
   14640:	00c00044 	movi	r3,1
   14644:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   14648:	e0bffd17 	ldw	r2,-12(fp)
   1464c:	10800017 	ldw	r2,0(r2)
   14650:	10800104 	addi	r2,r2,4
   14654:	1007883a 	mov	r3,r2
   14658:	e0bffd17 	ldw	r2,-12(fp)
   1465c:	10800817 	ldw	r2,32(r2)
   14660:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   14664:	e0bffe17 	ldw	r2,-8(fp)
   14668:	e0ffff17 	ldw	r3,-4(fp)
   1466c:	d8000015 	stw	zero,0(sp)
   14670:	e1fffd17 	ldw	r7,-12(fp)
   14674:	01800074 	movhi	r6,1
   14678:	3191b804 	addi	r6,r6,18144
   1467c:	180b883a 	mov	r5,r3
   14680:	1009883a 	mov	r4,r2
   14684:	0015a780 	call	15a78 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   14688:	e0bffd17 	ldw	r2,-12(fp)
   1468c:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   14690:	e0bffd17 	ldw	r2,-12(fp)
   14694:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   14698:	d0e71f17 	ldw	r3,-25476(gp)
   1469c:	e1fffd17 	ldw	r7,-12(fp)
   146a0:	01800074 	movhi	r6,1
   146a4:	31923b04 	addi	r6,r6,18668
   146a8:	180b883a 	mov	r5,r3
   146ac:	1009883a 	mov	r4,r2
   146b0:	00155840 	call	15584 <alt_alarm_start>
   146b4:	1000040e 	bge	r2,zero,146c8 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   146b8:	e0fffd17 	ldw	r3,-12(fp)
   146bc:	00a00034 	movhi	r2,32768
   146c0:	10bfffc4 	addi	r2,r2,-1
   146c4:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   146c8:	0001883a 	nop
   146cc:	e037883a 	mov	sp,fp
   146d0:	dfc00117 	ldw	ra,4(sp)
   146d4:	df000017 	ldw	fp,0(sp)
   146d8:	dec00204 	addi	sp,sp,8
   146dc:	f800283a 	ret

000146e0 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   146e0:	defff804 	addi	sp,sp,-32
   146e4:	df000715 	stw	fp,28(sp)
   146e8:	df000704 	addi	fp,sp,28
   146ec:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   146f0:	e0bfff17 	ldw	r2,-4(fp)
   146f4:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
   146f8:	e0bffb17 	ldw	r2,-20(fp)
   146fc:	10800017 	ldw	r2,0(r2)
   14700:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   14704:	e0bffc17 	ldw	r2,-16(fp)
   14708:	10800104 	addi	r2,r2,4
   1470c:	10800037 	ldwio	r2,0(r2)
   14710:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   14714:	e0bffd17 	ldw	r2,-12(fp)
   14718:	1080c00c 	andi	r2,r2,768
   1471c:	10006d26 	beq	r2,zero,148d4 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   14720:	e0bffd17 	ldw	r2,-12(fp)
   14724:	1080400c 	andi	r2,r2,256
   14728:	10003526 	beq	r2,zero,14800 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   1472c:	00800074 	movhi	r2,1
   14730:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   14734:	e0bffb17 	ldw	r2,-20(fp)
   14738:	10800a17 	ldw	r2,40(r2)
   1473c:	10800044 	addi	r2,r2,1
   14740:	1081ffcc 	andi	r2,r2,2047
   14744:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
   14748:	e0bffb17 	ldw	r2,-20(fp)
   1474c:	10c00b17 	ldw	r3,44(r2)
   14750:	e0bffe17 	ldw	r2,-8(fp)
   14754:	18801526 	beq	r3,r2,147ac <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   14758:	e0bffc17 	ldw	r2,-16(fp)
   1475c:	10800037 	ldwio	r2,0(r2)
   14760:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   14764:	e0bff917 	ldw	r2,-28(fp)
   14768:	10a0000c 	andi	r2,r2,32768
   1476c:	10001126 	beq	r2,zero,147b4 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   14770:	e0bffb17 	ldw	r2,-20(fp)
   14774:	10800a17 	ldw	r2,40(r2)
   14778:	e0fff917 	ldw	r3,-28(fp)
   1477c:	1809883a 	mov	r4,r3
   14780:	e0fffb17 	ldw	r3,-20(fp)
   14784:	1885883a 	add	r2,r3,r2
   14788:	10800e04 	addi	r2,r2,56
   1478c:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   14790:	e0bffb17 	ldw	r2,-20(fp)
   14794:	10800a17 	ldw	r2,40(r2)
   14798:	10800044 	addi	r2,r2,1
   1479c:	10c1ffcc 	andi	r3,r2,2047
   147a0:	e0bffb17 	ldw	r2,-20(fp)
   147a4:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   147a8:	003fe206 	br	14734 <__alt_mem_Onchip_SRAM+0xf8014734>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
   147ac:	0001883a 	nop
   147b0:	00000106 	br	147b8 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
   147b4:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   147b8:	e0bff917 	ldw	r2,-28(fp)
   147bc:	10bfffec 	andhi	r2,r2,65535
   147c0:	10000f26 	beq	r2,zero,14800 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   147c4:	e0bffb17 	ldw	r2,-20(fp)
   147c8:	10c00817 	ldw	r3,32(r2)
   147cc:	00bfff84 	movi	r2,-2
   147d0:	1886703a 	and	r3,r3,r2
   147d4:	e0bffb17 	ldw	r2,-20(fp)
   147d8:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   147dc:	e0bffc17 	ldw	r2,-16(fp)
   147e0:	10800104 	addi	r2,r2,4
   147e4:	1007883a 	mov	r3,r2
   147e8:	e0bffb17 	ldw	r2,-20(fp)
   147ec:	10800817 	ldw	r2,32(r2)
   147f0:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   147f4:	e0bffc17 	ldw	r2,-16(fp)
   147f8:	10800104 	addi	r2,r2,4
   147fc:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   14800:	e0bffd17 	ldw	r2,-12(fp)
   14804:	1080800c 	andi	r2,r2,512
   14808:	103fbe26 	beq	r2,zero,14704 <__alt_mem_Onchip_SRAM+0xf8014704>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   1480c:	e0bffd17 	ldw	r2,-12(fp)
   14810:	1004d43a 	srli	r2,r2,16
   14814:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   14818:	00001406 	br	1486c <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   1481c:	e0bffc17 	ldw	r2,-16(fp)
   14820:	e0fffb17 	ldw	r3,-20(fp)
   14824:	18c00d17 	ldw	r3,52(r3)
   14828:	e13ffb17 	ldw	r4,-20(fp)
   1482c:	20c7883a 	add	r3,r4,r3
   14830:	18c20e04 	addi	r3,r3,2104
   14834:	18c00003 	ldbu	r3,0(r3)
   14838:	18c03fcc 	andi	r3,r3,255
   1483c:	18c0201c 	xori	r3,r3,128
   14840:	18ffe004 	addi	r3,r3,-128
   14844:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   14848:	e0bffb17 	ldw	r2,-20(fp)
   1484c:	10800d17 	ldw	r2,52(r2)
   14850:	10800044 	addi	r2,r2,1
   14854:	10c1ffcc 	andi	r3,r2,2047
   14858:	e0bffb17 	ldw	r2,-20(fp)
   1485c:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   14860:	e0bffa17 	ldw	r2,-24(fp)
   14864:	10bfffc4 	addi	r2,r2,-1
   14868:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   1486c:	e0bffa17 	ldw	r2,-24(fp)
   14870:	10000526 	beq	r2,zero,14888 <altera_avalon_jtag_uart_irq+0x1a8>
   14874:	e0bffb17 	ldw	r2,-20(fp)
   14878:	10c00d17 	ldw	r3,52(r2)
   1487c:	e0bffb17 	ldw	r2,-20(fp)
   14880:	10800c17 	ldw	r2,48(r2)
   14884:	18bfe51e 	bne	r3,r2,1481c <__alt_mem_Onchip_SRAM+0xf801481c>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   14888:	e0bffa17 	ldw	r2,-24(fp)
   1488c:	103f9d26 	beq	r2,zero,14704 <__alt_mem_Onchip_SRAM+0xf8014704>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   14890:	e0bffb17 	ldw	r2,-20(fp)
   14894:	10c00817 	ldw	r3,32(r2)
   14898:	00bfff44 	movi	r2,-3
   1489c:	1886703a 	and	r3,r3,r2
   148a0:	e0bffb17 	ldw	r2,-20(fp)
   148a4:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   148a8:	e0bffb17 	ldw	r2,-20(fp)
   148ac:	10800017 	ldw	r2,0(r2)
   148b0:	10800104 	addi	r2,r2,4
   148b4:	1007883a 	mov	r3,r2
   148b8:	e0bffb17 	ldw	r2,-20(fp)
   148bc:	10800817 	ldw	r2,32(r2)
   148c0:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   148c4:	e0bffc17 	ldw	r2,-16(fp)
   148c8:	10800104 	addi	r2,r2,4
   148cc:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   148d0:	003f8c06 	br	14704 <__alt_mem_Onchip_SRAM+0xf8014704>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
   148d4:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
   148d8:	0001883a 	nop
   148dc:	e037883a 	mov	sp,fp
   148e0:	df000017 	ldw	fp,0(sp)
   148e4:	dec00104 	addi	sp,sp,4
   148e8:	f800283a 	ret

000148ec <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   148ec:	defff804 	addi	sp,sp,-32
   148f0:	df000715 	stw	fp,28(sp)
   148f4:	df000704 	addi	fp,sp,28
   148f8:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   148fc:	e0bffb17 	ldw	r2,-20(fp)
   14900:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   14904:	e0bff917 	ldw	r2,-28(fp)
   14908:	10800017 	ldw	r2,0(r2)
   1490c:	10800104 	addi	r2,r2,4
   14910:	10800037 	ldwio	r2,0(r2)
   14914:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   14918:	e0bffa17 	ldw	r2,-24(fp)
   1491c:	1081000c 	andi	r2,r2,1024
   14920:	10000b26 	beq	r2,zero,14950 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   14924:	e0bff917 	ldw	r2,-28(fp)
   14928:	10800017 	ldw	r2,0(r2)
   1492c:	10800104 	addi	r2,r2,4
   14930:	1007883a 	mov	r3,r2
   14934:	e0bff917 	ldw	r2,-28(fp)
   14938:	10800817 	ldw	r2,32(r2)
   1493c:	10810014 	ori	r2,r2,1024
   14940:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   14944:	e0bff917 	ldw	r2,-28(fp)
   14948:	10000915 	stw	zero,36(r2)
   1494c:	00000a06 	br	14978 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   14950:	e0bff917 	ldw	r2,-28(fp)
   14954:	10c00917 	ldw	r3,36(r2)
   14958:	00a00034 	movhi	r2,32768
   1495c:	10bfff04 	addi	r2,r2,-4
   14960:	10c00536 	bltu	r2,r3,14978 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   14964:	e0bff917 	ldw	r2,-28(fp)
   14968:	10800917 	ldw	r2,36(r2)
   1496c:	10c00044 	addi	r3,r2,1
   14970:	e0bff917 	ldw	r2,-28(fp)
   14974:	10c00915 	stw	r3,36(r2)
   14978:	d0a71f17 	ldw	r2,-25476(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   1497c:	e037883a 	mov	sp,fp
   14980:	df000017 	ldw	fp,0(sp)
   14984:	dec00104 	addi	sp,sp,4
   14988:	f800283a 	ret

0001498c <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   1498c:	defffd04 	addi	sp,sp,-12
   14990:	df000215 	stw	fp,8(sp)
   14994:	df000204 	addi	fp,sp,8
   14998:	e13ffe15 	stw	r4,-8(fp)
   1499c:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   149a0:	00000506 	br	149b8 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   149a4:	e0bfff17 	ldw	r2,-4(fp)
   149a8:	1090000c 	andi	r2,r2,16384
   149ac:	10000226 	beq	r2,zero,149b8 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   149b0:	00bffd44 	movi	r2,-11
   149b4:	00000b06 	br	149e4 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   149b8:	e0bffe17 	ldw	r2,-8(fp)
   149bc:	10c00d17 	ldw	r3,52(r2)
   149c0:	e0bffe17 	ldw	r2,-8(fp)
   149c4:	10800c17 	ldw	r2,48(r2)
   149c8:	18800526 	beq	r3,r2,149e0 <altera_avalon_jtag_uart_close+0x54>
   149cc:	e0bffe17 	ldw	r2,-8(fp)
   149d0:	10c00917 	ldw	r3,36(r2)
   149d4:	e0bffe17 	ldw	r2,-8(fp)
   149d8:	10800117 	ldw	r2,4(r2)
   149dc:	18bff136 	bltu	r3,r2,149a4 <__alt_mem_Onchip_SRAM+0xf80149a4>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   149e0:	0005883a 	mov	r2,zero
}
   149e4:	e037883a 	mov	sp,fp
   149e8:	df000017 	ldw	fp,0(sp)
   149ec:	dec00104 	addi	sp,sp,4
   149f0:	f800283a 	ret

000149f4 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   149f4:	defffa04 	addi	sp,sp,-24
   149f8:	df000515 	stw	fp,20(sp)
   149fc:	df000504 	addi	fp,sp,20
   14a00:	e13ffd15 	stw	r4,-12(fp)
   14a04:	e17ffe15 	stw	r5,-8(fp)
   14a08:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
   14a0c:	00bff9c4 	movi	r2,-25
   14a10:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
   14a14:	e0bffe17 	ldw	r2,-8(fp)
   14a18:	10da8060 	cmpeqi	r3,r2,27137
   14a1c:	1800031e 	bne	r3,zero,14a2c <altera_avalon_jtag_uart_ioctl+0x38>
   14a20:	109a80a0 	cmpeqi	r2,r2,27138
   14a24:	1000181e 	bne	r2,zero,14a88 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
   14a28:	00002906 	br	14ad0 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   14a2c:	e0bffd17 	ldw	r2,-12(fp)
   14a30:	10c00117 	ldw	r3,4(r2)
   14a34:	00a00034 	movhi	r2,32768
   14a38:	10bfffc4 	addi	r2,r2,-1
   14a3c:	18802126 	beq	r3,r2,14ac4 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
   14a40:	e0bfff17 	ldw	r2,-4(fp)
   14a44:	10800017 	ldw	r2,0(r2)
   14a48:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   14a4c:	e0bffc17 	ldw	r2,-16(fp)
   14a50:	10800090 	cmplti	r2,r2,2
   14a54:	1000061e 	bne	r2,zero,14a70 <altera_avalon_jtag_uart_ioctl+0x7c>
   14a58:	e0fffc17 	ldw	r3,-16(fp)
   14a5c:	00a00034 	movhi	r2,32768
   14a60:	10bfffc4 	addi	r2,r2,-1
   14a64:	18800226 	beq	r3,r2,14a70 <altera_avalon_jtag_uart_ioctl+0x7c>
   14a68:	e0bffc17 	ldw	r2,-16(fp)
   14a6c:	00000206 	br	14a78 <altera_avalon_jtag_uart_ioctl+0x84>
   14a70:	00a00034 	movhi	r2,32768
   14a74:	10bfff84 	addi	r2,r2,-2
   14a78:	e0fffd17 	ldw	r3,-12(fp)
   14a7c:	18800115 	stw	r2,4(r3)
      rc = 0;
   14a80:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   14a84:	00000f06 	br	14ac4 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   14a88:	e0bffd17 	ldw	r2,-12(fp)
   14a8c:	10c00117 	ldw	r3,4(r2)
   14a90:	00a00034 	movhi	r2,32768
   14a94:	10bfffc4 	addi	r2,r2,-1
   14a98:	18800c26 	beq	r3,r2,14acc <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   14a9c:	e0bffd17 	ldw	r2,-12(fp)
   14aa0:	10c00917 	ldw	r3,36(r2)
   14aa4:	e0bffd17 	ldw	r2,-12(fp)
   14aa8:	10800117 	ldw	r2,4(r2)
   14aac:	1885803a 	cmpltu	r2,r3,r2
   14ab0:	10c03fcc 	andi	r3,r2,255
   14ab4:	e0bfff17 	ldw	r2,-4(fp)
   14ab8:	10c00015 	stw	r3,0(r2)
      rc = 0;
   14abc:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   14ac0:	00000206 	br	14acc <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
   14ac4:	0001883a 	nop
   14ac8:	00000106 	br	14ad0 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
   14acc:	0001883a 	nop

  default:
    break;
  }

  return rc;
   14ad0:	e0bffb17 	ldw	r2,-20(fp)
}
   14ad4:	e037883a 	mov	sp,fp
   14ad8:	df000017 	ldw	fp,0(sp)
   14adc:	dec00104 	addi	sp,sp,4
   14ae0:	f800283a 	ret

00014ae4 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   14ae4:	defff304 	addi	sp,sp,-52
   14ae8:	dfc00c15 	stw	ra,48(sp)
   14aec:	df000b15 	stw	fp,44(sp)
   14af0:	df000b04 	addi	fp,sp,44
   14af4:	e13ffc15 	stw	r4,-16(fp)
   14af8:	e17ffd15 	stw	r5,-12(fp)
   14afc:	e1bffe15 	stw	r6,-8(fp)
   14b00:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
   14b04:	e0bffd17 	ldw	r2,-12(fp)
   14b08:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   14b0c:	00004706 	br	14c2c <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   14b10:	e0bffc17 	ldw	r2,-16(fp)
   14b14:	10800a17 	ldw	r2,40(r2)
   14b18:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   14b1c:	e0bffc17 	ldw	r2,-16(fp)
   14b20:	10800b17 	ldw	r2,44(r2)
   14b24:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
   14b28:	e0fff717 	ldw	r3,-36(fp)
   14b2c:	e0bff817 	ldw	r2,-32(fp)
   14b30:	18800536 	bltu	r3,r2,14b48 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   14b34:	e0fff717 	ldw	r3,-36(fp)
   14b38:	e0bff817 	ldw	r2,-32(fp)
   14b3c:	1885c83a 	sub	r2,r3,r2
   14b40:	e0bff615 	stw	r2,-40(fp)
   14b44:	00000406 	br	14b58 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   14b48:	00c20004 	movi	r3,2048
   14b4c:	e0bff817 	ldw	r2,-32(fp)
   14b50:	1885c83a 	sub	r2,r3,r2
   14b54:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   14b58:	e0bff617 	ldw	r2,-40(fp)
   14b5c:	10001e26 	beq	r2,zero,14bd8 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   14b60:	e0fffe17 	ldw	r3,-8(fp)
   14b64:	e0bff617 	ldw	r2,-40(fp)
   14b68:	1880022e 	bgeu	r3,r2,14b74 <altera_avalon_jtag_uart_read+0x90>
        n = space;
   14b6c:	e0bffe17 	ldw	r2,-8(fp)
   14b70:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   14b74:	e0bffc17 	ldw	r2,-16(fp)
   14b78:	10c00e04 	addi	r3,r2,56
   14b7c:	e0bff817 	ldw	r2,-32(fp)
   14b80:	1885883a 	add	r2,r3,r2
   14b84:	e1bff617 	ldw	r6,-40(fp)
   14b88:	100b883a 	mov	r5,r2
   14b8c:	e13ff517 	ldw	r4,-44(fp)
   14b90:	000918c0 	call	918c <memcpy>
      ptr   += n;
   14b94:	e0fff517 	ldw	r3,-44(fp)
   14b98:	e0bff617 	ldw	r2,-40(fp)
   14b9c:	1885883a 	add	r2,r3,r2
   14ba0:	e0bff515 	stw	r2,-44(fp)
      space -= n;
   14ba4:	e0fffe17 	ldw	r3,-8(fp)
   14ba8:	e0bff617 	ldw	r2,-40(fp)
   14bac:	1885c83a 	sub	r2,r3,r2
   14bb0:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   14bb4:	e0fff817 	ldw	r3,-32(fp)
   14bb8:	e0bff617 	ldw	r2,-40(fp)
   14bbc:	1885883a 	add	r2,r3,r2
   14bc0:	10c1ffcc 	andi	r3,r2,2047
   14bc4:	e0bffc17 	ldw	r2,-16(fp)
   14bc8:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   14bcc:	e0bffe17 	ldw	r2,-8(fp)
   14bd0:	00bfcf16 	blt	zero,r2,14b10 <__alt_mem_Onchip_SRAM+0xf8014b10>
   14bd4:	00000106 	br	14bdc <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
   14bd8:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
   14bdc:	e0fff517 	ldw	r3,-44(fp)
   14be0:	e0bffd17 	ldw	r2,-12(fp)
   14be4:	1880141e 	bne	r3,r2,14c38 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   14be8:	e0bfff17 	ldw	r2,-4(fp)
   14bec:	1090000c 	andi	r2,r2,16384
   14bf0:	1000131e 	bne	r2,zero,14c40 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   14bf4:	0001883a 	nop
   14bf8:	e0bffc17 	ldw	r2,-16(fp)
   14bfc:	10c00a17 	ldw	r3,40(r2)
   14c00:	e0bff717 	ldw	r2,-36(fp)
   14c04:	1880051e 	bne	r3,r2,14c1c <altera_avalon_jtag_uart_read+0x138>
   14c08:	e0bffc17 	ldw	r2,-16(fp)
   14c0c:	10c00917 	ldw	r3,36(r2)
   14c10:	e0bffc17 	ldw	r2,-16(fp)
   14c14:	10800117 	ldw	r2,4(r2)
   14c18:	18bff736 	bltu	r3,r2,14bf8 <__alt_mem_Onchip_SRAM+0xf8014bf8>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   14c1c:	e0bffc17 	ldw	r2,-16(fp)
   14c20:	10c00a17 	ldw	r3,40(r2)
   14c24:	e0bff717 	ldw	r2,-36(fp)
   14c28:	18800726 	beq	r3,r2,14c48 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   14c2c:	e0bffe17 	ldw	r2,-8(fp)
   14c30:	00bfb716 	blt	zero,r2,14b10 <__alt_mem_Onchip_SRAM+0xf8014b10>
   14c34:	00000506 	br	14c4c <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
   14c38:	0001883a 	nop
   14c3c:	00000306 	br	14c4c <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
   14c40:	0001883a 	nop
   14c44:	00000106 	br	14c4c <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
   14c48:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   14c4c:	e0fff517 	ldw	r3,-44(fp)
   14c50:	e0bffd17 	ldw	r2,-12(fp)
   14c54:	18801826 	beq	r3,r2,14cb8 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   14c58:	0005303a 	rdctl	r2,status
   14c5c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   14c60:	e0fffb17 	ldw	r3,-20(fp)
   14c64:	00bfff84 	movi	r2,-2
   14c68:	1884703a 	and	r2,r3,r2
   14c6c:	1001703a 	wrctl	status,r2
  
  return context;
   14c70:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   14c74:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   14c78:	e0bffc17 	ldw	r2,-16(fp)
   14c7c:	10800817 	ldw	r2,32(r2)
   14c80:	10c00054 	ori	r3,r2,1
   14c84:	e0bffc17 	ldw	r2,-16(fp)
   14c88:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   14c8c:	e0bffc17 	ldw	r2,-16(fp)
   14c90:	10800017 	ldw	r2,0(r2)
   14c94:	10800104 	addi	r2,r2,4
   14c98:	1007883a 	mov	r3,r2
   14c9c:	e0bffc17 	ldw	r2,-16(fp)
   14ca0:	10800817 	ldw	r2,32(r2)
   14ca4:	18800035 	stwio	r2,0(r3)
   14ca8:	e0bffa17 	ldw	r2,-24(fp)
   14cac:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   14cb0:	e0bff917 	ldw	r2,-28(fp)
   14cb4:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   14cb8:	e0fff517 	ldw	r3,-44(fp)
   14cbc:	e0bffd17 	ldw	r2,-12(fp)
   14cc0:	18800426 	beq	r3,r2,14cd4 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
   14cc4:	e0fff517 	ldw	r3,-44(fp)
   14cc8:	e0bffd17 	ldw	r2,-12(fp)
   14ccc:	1885c83a 	sub	r2,r3,r2
   14cd0:	00000606 	br	14cec <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
   14cd4:	e0bfff17 	ldw	r2,-4(fp)
   14cd8:	1090000c 	andi	r2,r2,16384
   14cdc:	10000226 	beq	r2,zero,14ce8 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   14ce0:	00bffd44 	movi	r2,-11
   14ce4:	00000106 	br	14cec <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
   14ce8:	00bffec4 	movi	r2,-5
}
   14cec:	e037883a 	mov	sp,fp
   14cf0:	dfc00117 	ldw	ra,4(sp)
   14cf4:	df000017 	ldw	fp,0(sp)
   14cf8:	dec00204 	addi	sp,sp,8
   14cfc:	f800283a 	ret

00014d00 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   14d00:	defff304 	addi	sp,sp,-52
   14d04:	dfc00c15 	stw	ra,48(sp)
   14d08:	df000b15 	stw	fp,44(sp)
   14d0c:	df000b04 	addi	fp,sp,44
   14d10:	e13ffc15 	stw	r4,-16(fp)
   14d14:	e17ffd15 	stw	r5,-12(fp)
   14d18:	e1bffe15 	stw	r6,-8(fp)
   14d1c:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   14d20:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   14d24:	e0bffd17 	ldw	r2,-12(fp)
   14d28:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   14d2c:	00003706 	br	14e0c <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   14d30:	e0bffc17 	ldw	r2,-16(fp)
   14d34:	10800c17 	ldw	r2,48(r2)
   14d38:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
   14d3c:	e0bffc17 	ldw	r2,-16(fp)
   14d40:	10800d17 	ldw	r2,52(r2)
   14d44:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
   14d48:	e0fff917 	ldw	r3,-28(fp)
   14d4c:	e0bff517 	ldw	r2,-44(fp)
   14d50:	1880062e 	bgeu	r3,r2,14d6c <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   14d54:	e0fff517 	ldw	r3,-44(fp)
   14d58:	e0bff917 	ldw	r2,-28(fp)
   14d5c:	1885c83a 	sub	r2,r3,r2
   14d60:	10bfffc4 	addi	r2,r2,-1
   14d64:	e0bff615 	stw	r2,-40(fp)
   14d68:	00000b06 	br	14d98 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   14d6c:	e0bff517 	ldw	r2,-44(fp)
   14d70:	10000526 	beq	r2,zero,14d88 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   14d74:	00c20004 	movi	r3,2048
   14d78:	e0bff917 	ldw	r2,-28(fp)
   14d7c:	1885c83a 	sub	r2,r3,r2
   14d80:	e0bff615 	stw	r2,-40(fp)
   14d84:	00000406 	br	14d98 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   14d88:	00c1ffc4 	movi	r3,2047
   14d8c:	e0bff917 	ldw	r2,-28(fp)
   14d90:	1885c83a 	sub	r2,r3,r2
   14d94:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   14d98:	e0bff617 	ldw	r2,-40(fp)
   14d9c:	10001e26 	beq	r2,zero,14e18 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   14da0:	e0fffe17 	ldw	r3,-8(fp)
   14da4:	e0bff617 	ldw	r2,-40(fp)
   14da8:	1880022e 	bgeu	r3,r2,14db4 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   14dac:	e0bffe17 	ldw	r2,-8(fp)
   14db0:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   14db4:	e0bffc17 	ldw	r2,-16(fp)
   14db8:	10c20e04 	addi	r3,r2,2104
   14dbc:	e0bff917 	ldw	r2,-28(fp)
   14dc0:	1885883a 	add	r2,r3,r2
   14dc4:	e1bff617 	ldw	r6,-40(fp)
   14dc8:	e17ffd17 	ldw	r5,-12(fp)
   14dcc:	1009883a 	mov	r4,r2
   14dd0:	000918c0 	call	918c <memcpy>
      ptr   += n;
   14dd4:	e0fffd17 	ldw	r3,-12(fp)
   14dd8:	e0bff617 	ldw	r2,-40(fp)
   14ddc:	1885883a 	add	r2,r3,r2
   14de0:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
   14de4:	e0fffe17 	ldw	r3,-8(fp)
   14de8:	e0bff617 	ldw	r2,-40(fp)
   14dec:	1885c83a 	sub	r2,r3,r2
   14df0:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   14df4:	e0fff917 	ldw	r3,-28(fp)
   14df8:	e0bff617 	ldw	r2,-40(fp)
   14dfc:	1885883a 	add	r2,r3,r2
   14e00:	10c1ffcc 	andi	r3,r2,2047
   14e04:	e0bffc17 	ldw	r2,-16(fp)
   14e08:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   14e0c:	e0bffe17 	ldw	r2,-8(fp)
   14e10:	00bfc716 	blt	zero,r2,14d30 <__alt_mem_Onchip_SRAM+0xf8014d30>
   14e14:	00000106 	br	14e1c <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
   14e18:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   14e1c:	0005303a 	rdctl	r2,status
   14e20:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   14e24:	e0fffb17 	ldw	r3,-20(fp)
   14e28:	00bfff84 	movi	r2,-2
   14e2c:	1884703a 	and	r2,r3,r2
   14e30:	1001703a 	wrctl	status,r2
  
  return context;
   14e34:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   14e38:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   14e3c:	e0bffc17 	ldw	r2,-16(fp)
   14e40:	10800817 	ldw	r2,32(r2)
   14e44:	10c00094 	ori	r3,r2,2
   14e48:	e0bffc17 	ldw	r2,-16(fp)
   14e4c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   14e50:	e0bffc17 	ldw	r2,-16(fp)
   14e54:	10800017 	ldw	r2,0(r2)
   14e58:	10800104 	addi	r2,r2,4
   14e5c:	1007883a 	mov	r3,r2
   14e60:	e0bffc17 	ldw	r2,-16(fp)
   14e64:	10800817 	ldw	r2,32(r2)
   14e68:	18800035 	stwio	r2,0(r3)
   14e6c:	e0bffa17 	ldw	r2,-24(fp)
   14e70:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   14e74:	e0bff817 	ldw	r2,-32(fp)
   14e78:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   14e7c:	e0bffe17 	ldw	r2,-8(fp)
   14e80:	0080100e 	bge	zero,r2,14ec4 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
   14e84:	e0bfff17 	ldw	r2,-4(fp)
   14e88:	1090000c 	andi	r2,r2,16384
   14e8c:	1000101e 	bne	r2,zero,14ed0 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   14e90:	0001883a 	nop
   14e94:	e0bffc17 	ldw	r2,-16(fp)
   14e98:	10c00d17 	ldw	r3,52(r2)
   14e9c:	e0bff517 	ldw	r2,-44(fp)
   14ea0:	1880051e 	bne	r3,r2,14eb8 <altera_avalon_jtag_uart_write+0x1b8>
   14ea4:	e0bffc17 	ldw	r2,-16(fp)
   14ea8:	10c00917 	ldw	r3,36(r2)
   14eac:	e0bffc17 	ldw	r2,-16(fp)
   14eb0:	10800117 	ldw	r2,4(r2)
   14eb4:	18bff736 	bltu	r3,r2,14e94 <__alt_mem_Onchip_SRAM+0xf8014e94>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   14eb8:	e0bffc17 	ldw	r2,-16(fp)
   14ebc:	10800917 	ldw	r2,36(r2)
   14ec0:	1000051e 	bne	r2,zero,14ed8 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
   14ec4:	e0bffe17 	ldw	r2,-8(fp)
   14ec8:	00bfd016 	blt	zero,r2,14e0c <__alt_mem_Onchip_SRAM+0xf8014e0c>
   14ecc:	00000306 	br	14edc <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
   14ed0:	0001883a 	nop
   14ed4:	00000106 	br	14edc <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
   14ed8:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   14edc:	e0fffd17 	ldw	r3,-12(fp)
   14ee0:	e0bff717 	ldw	r2,-36(fp)
   14ee4:	18800426 	beq	r3,r2,14ef8 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
   14ee8:	e0fffd17 	ldw	r3,-12(fp)
   14eec:	e0bff717 	ldw	r2,-36(fp)
   14ef0:	1885c83a 	sub	r2,r3,r2
   14ef4:	00000606 	br	14f10 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
   14ef8:	e0bfff17 	ldw	r2,-4(fp)
   14efc:	1090000c 	andi	r2,r2,16384
   14f00:	10000226 	beq	r2,zero,14f0c <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
   14f04:	00bffd44 	movi	r2,-11
   14f08:	00000106 	br	14f10 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   14f0c:	00bffec4 	movi	r2,-5
}
   14f10:	e037883a 	mov	sp,fp
   14f14:	dfc00117 	ldw	ra,4(sp)
   14f18:	df000017 	ldw	fp,0(sp)
   14f1c:	dec00204 	addi	sp,sp,8
   14f20:	f800283a 	ret

00014f24 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
   14f24:	defffa04 	addi	sp,sp,-24
   14f28:	dfc00515 	stw	ra,20(sp)
   14f2c:	df000415 	stw	fp,16(sp)
   14f30:	df000404 	addi	fp,sp,16
   14f34:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
   14f38:	0007883a 	mov	r3,zero
   14f3c:	e0bfff17 	ldw	r2,-4(fp)
   14f40:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
   14f44:	e0bfff17 	ldw	r2,-4(fp)
   14f48:	10800104 	addi	r2,r2,4
   14f4c:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   14f50:	0005303a 	rdctl	r2,status
   14f54:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   14f58:	e0fffd17 	ldw	r3,-12(fp)
   14f5c:	00bfff84 	movi	r2,-2
   14f60:	1884703a 	and	r2,r3,r2
   14f64:	1001703a 	wrctl	status,r2
  
  return context;
   14f68:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
   14f6c:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
   14f70:	00125640 	call	12564 <alt_tick>
   14f74:	e0bffc17 	ldw	r2,-16(fp)
   14f78:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   14f7c:	e0bffe17 	ldw	r2,-8(fp)
   14f80:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
   14f84:	0001883a 	nop
   14f88:	e037883a 	mov	sp,fp
   14f8c:	dfc00117 	ldw	ra,4(sp)
   14f90:	df000017 	ldw	fp,0(sp)
   14f94:	dec00204 	addi	sp,sp,8
   14f98:	f800283a 	ret

00014f9c <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
   14f9c:	defff804 	addi	sp,sp,-32
   14fa0:	dfc00715 	stw	ra,28(sp)
   14fa4:	df000615 	stw	fp,24(sp)
   14fa8:	df000604 	addi	fp,sp,24
   14fac:	e13ffc15 	stw	r4,-16(fp)
   14fb0:	e17ffd15 	stw	r5,-12(fp)
   14fb4:	e1bffe15 	stw	r6,-8(fp)
   14fb8:	e1ffff15 	stw	r7,-4(fp)
   14fbc:	e0bfff17 	ldw	r2,-4(fp)
   14fc0:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
   14fc4:	d0a71f17 	ldw	r2,-25476(gp)
   14fc8:	1000021e 	bne	r2,zero,14fd4 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
   14fcc:	e0bffb17 	ldw	r2,-20(fp)
   14fd0:	d0a71f15 	stw	r2,-25476(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
   14fd4:	e0bffc17 	ldw	r2,-16(fp)
   14fd8:	10800104 	addi	r2,r2,4
   14fdc:	00c001c4 	movi	r3,7
   14fe0:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
   14fe4:	d8000015 	stw	zero,0(sp)
   14fe8:	e1fffc17 	ldw	r7,-16(fp)
   14fec:	01800074 	movhi	r6,1
   14ff0:	3193c904 	addi	r6,r6,20260
   14ff4:	e17ffe17 	ldw	r5,-8(fp)
   14ff8:	e13ffd17 	ldw	r4,-12(fp)
   14ffc:	0015a780 	call	15a78 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
   15000:	0001883a 	nop
   15004:	e037883a 	mov	sp,fp
   15008:	dfc00117 	ldw	ra,4(sp)
   1500c:	df000017 	ldw	fp,0(sp)
   15010:	dec00204 	addi	sp,sp,8
   15014:	f800283a 	ret

00015018 <alt_adc_irq>:
 * alt_adc_irq()
 *
 * Interrupt handler for the altera modular adc.
 */
static void alt_adc_irq(void *context)
{
   15018:	defff904 	addi	sp,sp,-28
   1501c:	dfc00615 	stw	ra,24(sp)
   15020:	df000515 	stw	fp,20(sp)
   15024:	df000504 	addi	fp,sp,20
   15028:	e13fff15 	stw	r4,-4(fp)
    alt_modular_adc_dev *dev = (alt_modular_adc_dev *) context;
   1502c:	e0bfff17 	ldw	r2,-4(fp)
   15030:	e0bffb15 	stw	r2,-20(fp)
    alt_irq_context cpu_sr = 0;
   15034:	e03ffc15 	stw	zero,-16(fp)

	if(NULL != dev)
   15038:	e0bffb17 	ldw	r2,-20(fp)
   1503c:	10001a26 	beq	r2,zero,150a8 <alt_adc_irq+0x90>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   15040:	0005303a 	rdctl	r2,status
   15044:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   15048:	e0fffe17 	ldw	r3,-8(fp)
   1504c:	00bfff84 	movi	r2,-2
   15050:	1884703a 	and	r2,r3,r2
   15054:	1001703a 	wrctl	status,r2
  
  return context;
   15058:	e0bffe17 	ldw	r2,-8(fp)
	{
	    cpu_sr = alt_irq_disable_all();
   1505c:	e0bffc15 	stw	r2,-16(fp)
		* Other interrupts are explicitly disabled if callbacks
		* are registered because there is no guarantee that they are 
		* pre-emption-safe. This allows the driver to support 
		* interrupt pre-emption.
		*/
		if(dev->callback) 
   15060:	e0bffb17 	ldw	r2,-20(fp)
   15064:	10800a17 	ldw	r2,40(r2)
   15068:	10000626 	beq	r2,zero,15084 <alt_adc_irq+0x6c>
		{
			dev->callback (dev->callback_context);
   1506c:	e0bffb17 	ldw	r2,-20(fp)
   15070:	10800a17 	ldw	r2,40(r2)
   15074:	e0fffb17 	ldw	r3,-20(fp)
   15078:	18c00b17 	ldw	r3,44(r3)
   1507c:	1809883a 	mov	r4,r3
   15080:	103ee83a 	callr	r2
		}
    
		/* clear the IRQ status */
		adc_clear_interrupt_status(dev->sample_store_base);
   15084:	e0bffb17 	ldw	r2,-20(fp)
   15088:	10800c17 	ldw	r2,48(r2)
   1508c:	1009883a 	mov	r4,r2
   15090:	00154c40 	call	154c4 <adc_clear_interrupt_status>
   15094:	e0bffc17 	ldw	r2,-16(fp)
   15098:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   1509c:	e0bffd17 	ldw	r2,-12(fp)
   150a0:	1001703a 	wrctl	status,r2
	    
		alt_irq_enable_all(cpu_sr);
	}
	
    return;
   150a4:	0001883a 	nop
   150a8:	0001883a 	nop
}
   150ac:	e037883a 	mov	sp,fp
   150b0:	dfc00117 	ldw	ra,4(sp)
   150b4:	df000017 	ldw	fp,0(sp)
   150b8:	dec00204 	addi	sp,sp,8
   150bc:	f800283a 	ret

000150c0 <alt_adc_word_read>:
 * Returns:
 * 0 -> success
 * -EINVAL -> Invalid arguments
**/
int alt_adc_word_read (alt_u32 sample_store_base, alt_u32* dest_ptr, alt_u32 len)
{
   150c0:	defff804 	addi	sp,sp,-32
   150c4:	df000715 	stw	fp,28(sp)
   150c8:	df000704 	addi	fp,sp,28
   150cc:	e13ffd15 	stw	r4,-12(fp)
   150d0:	e17ffe15 	stw	r5,-8(fp)
   150d4:	e1bfff15 	stw	r6,-4(fp)
    alt_u32 word = 0;
   150d8:	e03ff915 	stw	zero,-28(fp)
    alt_u32 word_length = len;
   150dc:	e0bfff17 	ldw	r2,-4(fp)
   150e0:	e0bffb15 	stw	r2,-20(fp)
    alt_u32* dest_buf = dest_ptr;
   150e4:	e0bffe17 	ldw	r2,-8(fp)
   150e8:	e0bffa15 	stw	r2,-24(fp)
    alt_u32 base = sample_store_base;
   150ec:	e0bffd17 	ldw	r2,-12(fp)
   150f0:	e0bffc15 	stw	r2,-16(fp)
     
    /* return -EINVAL if invalid arguments passed into function */
    if(NULL == dest_buf)
   150f4:	e0bffa17 	ldw	r2,-24(fp)
   150f8:	1000021e 	bne	r2,zero,15104 <alt_adc_word_read+0x44>
    {
    	return -EINVAL;
   150fc:	00bffa84 	movi	r2,-22
   15100:	00001606 	br	1515c <alt_adc_word_read+0x9c>
    }

    for(word = 0; word < word_length; word++)
   15104:	e03ff915 	stw	zero,-28(fp)
   15108:	00001006 	br	1514c <alt_adc_word_read+0x8c>
    {
       *dest_buf = IORD_32DIRECT((base + (word * 4)),0);
   1510c:	e0bff917 	ldw	r2,-28(fp)
   15110:	1085883a 	add	r2,r2,r2
   15114:	1085883a 	add	r2,r2,r2
   15118:	1007883a 	mov	r3,r2
   1511c:	e0bffc17 	ldw	r2,-16(fp)
   15120:	1885883a 	add	r2,r3,r2
   15124:	10800037 	ldwio	r2,0(r2)
   15128:	1007883a 	mov	r3,r2
   1512c:	e0bffa17 	ldw	r2,-24(fp)
   15130:	10c00015 	stw	r3,0(r2)

       dest_buf++;
   15134:	e0bffa17 	ldw	r2,-24(fp)
   15138:	10800104 	addi	r2,r2,4
   1513c:	e0bffa15 	stw	r2,-24(fp)
    if(NULL == dest_buf)
    {
    	return -EINVAL;
    }

    for(word = 0; word < word_length; word++)
   15140:	e0bff917 	ldw	r2,-28(fp)
   15144:	10800044 	addi	r2,r2,1
   15148:	e0bff915 	stw	r2,-28(fp)
   1514c:	e0fff917 	ldw	r3,-28(fp)
   15150:	e0bffb17 	ldw	r2,-20(fp)
   15154:	18bfed36 	bltu	r3,r2,1510c <__alt_mem_Onchip_SRAM+0xf801510c>
       *dest_buf = IORD_32DIRECT((base + (word * 4)),0);

       dest_buf++;
    }

    return 0;
   15158:	0005883a 	mov	r2,zero

}
   1515c:	e037883a 	mov	sp,fp
   15160:	df000017 	ldw	fp,0(sp)
   15164:	dec00104 	addi	sp,sp,4
   15168:	f800283a 	ret

0001516c <altera_modular_adc_init>:


void altera_modular_adc_init(alt_modular_adc_dev* dev, alt_32 ic_id, alt_32 irq)
{
   1516c:	defffa04 	addi	sp,sp,-24
   15170:	dfc00515 	stw	ra,20(sp)
   15174:	df000415 	stw	fp,16(sp)
   15178:	df000404 	addi	fp,sp,16
   1517c:	e13ffd15 	stw	r4,-12(fp)
   15180:	e17ffe15 	stw	r5,-8(fp)
   15184:	e1bfff15 	stw	r6,-4(fp)
    extern alt_llist altera_modular_adc_list;
    alt_dev_llist_insert((alt_dev_llist*) dev, &altera_modular_adc_list);
   15188:	d1601c04 	addi	r5,gp,-32656
   1518c:	e13ffd17 	ldw	r4,-12(fp)
   15190:	00158640 	call	15864 <alt_dev_llist_insert>
	
	if ((0 <= ic_id) && (0 <= irq))
   15194:	e0bffe17 	ldw	r2,-8(fp)
   15198:	10000b16 	blt	r2,zero,151c8 <altera_modular_adc_init+0x5c>
   1519c:	e0bfff17 	ldw	r2,-4(fp)
   151a0:	10000916 	blt	r2,zero,151c8 <altera_modular_adc_init+0x5c>
	{
          /* Install IRQ handler */
	  #ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
              alt_ic_isr_register(ic_id, irq, alt_adc_irq, 
   151a4:	e0bffe17 	ldw	r2,-8(fp)
   151a8:	e0ffff17 	ldw	r3,-4(fp)
   151ac:	d8000015 	stw	zero,0(sp)
   151b0:	e1fffd17 	ldw	r7,-12(fp)
   151b4:	01800074 	movhi	r6,1
   151b8:	31940604 	addi	r6,r6,20504
   151bc:	180b883a 	mov	r5,r3
   151c0:	1009883a 	mov	r4,r2
   151c4:	0015a780 	call	15a78 <alt_ic_isr_register>
                      dev, NULL);
          #else
             alt_irq_register(irq, dev, alt_adc_irq);
          #endif 
	}
}
   151c8:	0001883a 	nop
   151cc:	e037883a 	mov	sp,fp
   151d0:	dfc00117 	ldw	ra,4(sp)
   151d4:	df000017 	ldw	fp,0(sp)
   151d8:	dec00204 	addi	sp,sp,8
   151dc:	f800283a 	ret

000151e0 <alt_adc_register_callback>:
void alt_adc_register_callback(
	alt_modular_adc_dev *dev,
	alt_adc_callback callback,
	void *context,
	alt_u32 sample_store_base)
{
   151e0:	defffa04 	addi	sp,sp,-24
   151e4:	dfc00515 	stw	ra,20(sp)
   151e8:	df000415 	stw	fp,16(sp)
   151ec:	df000404 	addi	fp,sp,16
   151f0:	e13ffc15 	stw	r4,-16(fp)
   151f4:	e17ffd15 	stw	r5,-12(fp)
   151f8:	e1bffe15 	stw	r6,-8(fp)
   151fc:	e1ffff15 	stw	r7,-4(fp)
    dev->callback         = callback;
   15200:	e0bffc17 	ldw	r2,-16(fp)
   15204:	e0fffd17 	ldw	r3,-12(fp)
   15208:	10c00a15 	stw	r3,40(r2)
    dev->callback_context = context;
   1520c:	e0bffc17 	ldw	r2,-16(fp)
   15210:	e0fffe17 	ldw	r3,-8(fp)
   15214:	10c00b15 	stw	r3,44(r2)
    dev->sample_store_base = sample_store_base;
   15218:	e0bffc17 	ldw	r2,-16(fp)
   1521c:	e0ffff17 	ldw	r3,-4(fp)
   15220:	10c00c15 	stw	r3,48(r2)
	
	if(NULL != callback)
   15224:	e0bffd17 	ldw	r2,-12(fp)
   15228:	10000726 	beq	r2,zero,15248 <alt_adc_register_callback+0x68>
	{
                adc_clear_interrupt_status(sample_store_base);
   1522c:	e0bfff17 	ldw	r2,-4(fp)
   15230:	1009883a 	mov	r4,r2
   15234:	00154c40 	call	154c4 <adc_clear_interrupt_status>
		adc_interrupt_enable(sample_store_base);
   15238:	e0bfff17 	ldw	r2,-4(fp)
   1523c:	1009883a 	mov	r4,r2
   15240:	00154380 	call	15438 <adc_interrupt_enable>
                adc_clear_interrupt_status(sample_store_base);
	}
	
    
	
    return ;
   15244:	00000706 	br	15264 <alt_adc_register_callback+0x84>
                adc_clear_interrupt_status(sample_store_base);
		adc_interrupt_enable(sample_store_base);
	}
	else
	{
		adc_interrupt_disable(sample_store_base);
   15248:	e0bfff17 	ldw	r2,-4(fp)
   1524c:	1009883a 	mov	r4,r2
   15250:	001547c0 	call	1547c <adc_interrupt_disable>
                adc_clear_interrupt_status(sample_store_base);
   15254:	e0bfff17 	ldw	r2,-4(fp)
   15258:	1009883a 	mov	r4,r2
   1525c:	00154c40 	call	154c4 <adc_clear_interrupt_status>
	}
	
    
	
    return ;
   15260:	0001883a 	nop
}
   15264:	e037883a 	mov	sp,fp
   15268:	dfc00117 	ldw	ra,4(sp)
   1526c:	df000017 	ldw	fp,0(sp)
   15270:	dec00204 	addi	sp,sp,8
   15274:	f800283a 	ret

00015278 <altera_modular_adc_open>:

alt_modular_adc_dev* altera_modular_adc_open (const char *name)
{
   15278:	defffc04 	addi	sp,sp,-16
   1527c:	dfc00315 	stw	ra,12(sp)
   15280:	df000215 	stw	fp,8(sp)
   15284:	df000204 	addi	fp,sp,8
   15288:	e13fff15 	stw	r4,-4(fp)
    alt_modular_adc_dev *dev = NULL;
   1528c:	e03ffe15 	stw	zero,-8(fp)

    /* Find requested device */
    dev = (alt_modular_adc_dev*) alt_find_dev (name, &altera_modular_adc_list);
   15290:	d1601c04 	addi	r5,gp,-32656
   15294:	e13fff17 	ldw	r4,-4(fp)
   15298:	00159c80 	call	159c8 <alt_find_dev>
   1529c:	e0bffe15 	stw	r2,-8(fp)

    return dev;
   152a0:	e0bffe17 	ldw	r2,-8(fp)
}
   152a4:	e037883a 	mov	sp,fp
   152a8:	dfc00117 	ldw	ra,4(sp)
   152ac:	df000017 	ldw	fp,0(sp)
   152b0:	dec00204 	addi	sp,sp,8
   152b4:	f800283a 	ret

000152b8 <adc_stop>:

void adc_stop(int sequencer_base)
{
   152b8:	defffe04 	addi	sp,sp,-8
   152bc:	df000115 	stw	fp,4(sp)
   152c0:	df000104 	addi	fp,sp,4
   152c4:	e13fff15 	stw	r4,-4(fp)
    ALTERA_MODULAR_ADC_SEQUENCER_STOP(sequencer_base);
   152c8:	e0bfff17 	ldw	r2,-4(fp)
   152cc:	e0ffff17 	ldw	r3,-4(fp)
   152d0:	19000037 	ldwio	r4,0(r3)
   152d4:	00ffff84 	movi	r3,-2
   152d8:	20c6703a 	and	r3,r4,r3
   152dc:	10c00035 	stwio	r3,0(r2)
   152e0:	0001883a 	nop
   152e4:	e0bfff17 	ldw	r2,-4(fp)
   152e8:	10800037 	ldwio	r2,0(r2)
   152ec:	1080004c 	andi	r2,r2,1
   152f0:	103ffc1e 	bne	r2,zero,152e4 <__alt_mem_Onchip_SRAM+0xf80152e4>
}
   152f4:	0001883a 	nop
   152f8:	e037883a 	mov	sp,fp
   152fc:	df000017 	ldw	fp,0(sp)
   15300:	dec00104 	addi	sp,sp,4
   15304:	f800283a 	ret

00015308 <adc_start>:

void adc_start(int sequencer_base)
{
   15308:	defffe04 	addi	sp,sp,-8
   1530c:	df000115 	stw	fp,4(sp)
   15310:	df000104 	addi	fp,sp,4
   15314:	e13fff15 	stw	r4,-4(fp)
    ALTERA_MODULAR_ADC_SEQUENCER_START(sequencer_base);
   15318:	e0bfff17 	ldw	r2,-4(fp)
   1531c:	e0ffff17 	ldw	r3,-4(fp)
   15320:	18c00037 	ldwio	r3,0(r3)
   15324:	18c00054 	ori	r3,r3,1
   15328:	10c00035 	stwio	r3,0(r2)
}
   1532c:	0001883a 	nop
   15330:	e037883a 	mov	sp,fp
   15334:	df000017 	ldw	fp,0(sp)
   15338:	dec00104 	addi	sp,sp,4
   1533c:	f800283a 	ret

00015340 <adc_set_mode_run_once>:

void adc_set_mode_run_once(int sequencer_base)
{
   15340:	defffe04 	addi	sp,sp,-8
   15344:	df000115 	stw	fp,4(sp)
   15348:	df000104 	addi	fp,sp,4
   1534c:	e13fff15 	stw	r4,-4(fp)
    /* Note: Stop the ADC before calling this function,
       changing ADC mode while RUN bit is set has no effect. */
    ALTERA_MODULAR_ADC_SEQUENCER_MODE_RUN_ONCE(sequencer_base);
   15350:	e0bfff17 	ldw	r2,-4(fp)
   15354:	e0ffff17 	ldw	r3,-4(fp)
   15358:	19000037 	ldwio	r4,0(r3)
   1535c:	00fffc44 	movi	r3,-15
   15360:	20c6703a 	and	r3,r4,r3
   15364:	18c00094 	ori	r3,r3,2
   15368:	10c00035 	stwio	r3,0(r2)
}
   1536c:	0001883a 	nop
   15370:	e037883a 	mov	sp,fp
   15374:	df000017 	ldw	fp,0(sp)
   15378:	dec00104 	addi	sp,sp,4
   1537c:	f800283a 	ret

00015380 <adc_set_mode_run_continuously>:

void adc_set_mode_run_continuously(int sequencer_base)
{
   15380:	defffe04 	addi	sp,sp,-8
   15384:	df000115 	stw	fp,4(sp)
   15388:	df000104 	addi	fp,sp,4
   1538c:	e13fff15 	stw	r4,-4(fp)
    /* Note: Stop the ADC before calling this function,
       changing ADC mode while RUN bit is set has no effect. */
    ALTERA_MODULAR_ADC_SEQUENCER_MODE_RUN_CONTINUOUSLY(sequencer_base);
   15390:	e0bfff17 	ldw	r2,-4(fp)
   15394:	e0ffff17 	ldw	r3,-4(fp)
   15398:	19000037 	ldwio	r4,0(r3)
   1539c:	00fffc44 	movi	r3,-15
   153a0:	20c6703a 	and	r3,r4,r3
   153a4:	10c00035 	stwio	r3,0(r2)
}
   153a8:	0001883a 	nop
   153ac:	e037883a 	mov	sp,fp
   153b0:	df000017 	ldw	fp,0(sp)
   153b4:	dec00104 	addi	sp,sp,4
   153b8:	f800283a 	ret

000153bc <adc_recalibrate>:

void adc_recalibrate(int sequencer_base)
{
   153bc:	defffc04 	addi	sp,sp,-16
   153c0:	dfc00315 	stw	ra,12(sp)
   153c4:	df000215 	stw	fp,8(sp)
   153c8:	df000204 	addi	fp,sp,8
   153cc:	e13fff15 	stw	r4,-4(fp)
         2. Start the ADC Sequencer Core.
         5. Poll for RUN bit to be clear
         6. Restore CMD register
     */
    alt_u32 backup_cmd_reg;
    backup_cmd_reg = IORD_ALTERA_MODULAR_ADC_SEQUENCER_CMD_REG(sequencer_base);
   153d0:	e0bfff17 	ldw	r2,-4(fp)
   153d4:	10800037 	ldwio	r2,0(r2)
   153d8:	e0bffe15 	stw	r2,-8(fp)
    adc_stop(sequencer_base);
   153dc:	e13fff17 	ldw	r4,-4(fp)
   153e0:	00152b80 	call	152b8 <adc_stop>
    ALTERA_MODULAR_ADC_SEQUENCER_MODE_RUN_RECALIBRATION(sequencer_base);
   153e4:	e0bfff17 	ldw	r2,-4(fp)
   153e8:	e0ffff17 	ldw	r3,-4(fp)
   153ec:	18c00037 	ldwio	r3,0(r3)
   153f0:	18c00394 	ori	r3,r3,14
   153f4:	10c00035 	stwio	r3,0(r2)
    adc_start(sequencer_base);
   153f8:	e13fff17 	ldw	r4,-4(fp)
   153fc:	00153080 	call	15308 <adc_start>
    while(IORD_ALTERA_MODULAR_ADC_SEQUENCER_CMD_REG(sequencer_base)
   15400:	0001883a 	nop
   15404:	e0bfff17 	ldw	r2,-4(fp)
   15408:	10800037 	ldwio	r2,0(r2)
             & ALTERA_MODULAR_ADC_SEQUENCER_CMD_RUN_MSK);
   1540c:	1080004c 	andi	r2,r2,1
    alt_u32 backup_cmd_reg;
    backup_cmd_reg = IORD_ALTERA_MODULAR_ADC_SEQUENCER_CMD_REG(sequencer_base);
    adc_stop(sequencer_base);
    ALTERA_MODULAR_ADC_SEQUENCER_MODE_RUN_RECALIBRATION(sequencer_base);
    adc_start(sequencer_base);
    while(IORD_ALTERA_MODULAR_ADC_SEQUENCER_CMD_REG(sequencer_base)
   15410:	103ffc1e 	bne	r2,zero,15404 <__alt_mem_Onchip_SRAM+0xf8015404>
             & ALTERA_MODULAR_ADC_SEQUENCER_CMD_RUN_MSK);
    IOWR_ALTERA_MODULAR_ADC_SEQUENCER_CMD_REG(sequencer_base, backup_cmd_reg);
   15414:	e0bfff17 	ldw	r2,-4(fp)
   15418:	e0fffe17 	ldw	r3,-8(fp)
   1541c:	10c00035 	stwio	r3,0(r2)
}
   15420:	0001883a 	nop
   15424:	e037883a 	mov	sp,fp
   15428:	dfc00117 	ldw	ra,4(sp)
   1542c:	df000017 	ldw	fp,0(sp)
   15430:	dec00204 	addi	sp,sp,8
   15434:	f800283a 	ret

00015438 <adc_interrupt_enable>:

void adc_interrupt_enable(int sample_store_base)
{
   15438:	defffe04 	addi	sp,sp,-8
   1543c:	df000115 	stw	fp,4(sp)
   15440:	df000104 	addi	fp,sp,4
   15444:	e13fff15 	stw	r4,-4(fp)
    ALTERA_MODULAR_ADC_SAMPLE_STORAGE_IRQ_ENABLE(sample_store_base);
   15448:	e0bfff17 	ldw	r2,-4(fp)
   1544c:	10804004 	addi	r2,r2,256
   15450:	1007883a 	mov	r3,r2
   15454:	e0bfff17 	ldw	r2,-4(fp)
   15458:	10804004 	addi	r2,r2,256
   1545c:	10800037 	ldwio	r2,0(r2)
   15460:	10800054 	ori	r2,r2,1
   15464:	18800035 	stwio	r2,0(r3)
}
   15468:	0001883a 	nop
   1546c:	e037883a 	mov	sp,fp
   15470:	df000017 	ldw	fp,0(sp)
   15474:	dec00104 	addi	sp,sp,4
   15478:	f800283a 	ret

0001547c <adc_interrupt_disable>:

void adc_interrupt_disable(int sample_store_base)
{
   1547c:	defffe04 	addi	sp,sp,-8
   15480:	df000115 	stw	fp,4(sp)
   15484:	df000104 	addi	fp,sp,4
   15488:	e13fff15 	stw	r4,-4(fp)
    ALTERA_MODULAR_ADC_SAMPLE_STORAGE_IRQ_DISABLE(sample_store_base);
   1548c:	e0bfff17 	ldw	r2,-4(fp)
   15490:	10804004 	addi	r2,r2,256
   15494:	1009883a 	mov	r4,r2
   15498:	e0bfff17 	ldw	r2,-4(fp)
   1549c:	10804004 	addi	r2,r2,256
   154a0:	10c00037 	ldwio	r3,0(r2)
   154a4:	00bfff84 	movi	r2,-2
   154a8:	1884703a 	and	r2,r3,r2
   154ac:	20800035 	stwio	r2,0(r4)
}
   154b0:	0001883a 	nop
   154b4:	e037883a 	mov	sp,fp
   154b8:	df000017 	ldw	fp,0(sp)
   154bc:	dec00104 	addi	sp,sp,4
   154c0:	f800283a 	ret

000154c4 <adc_clear_interrupt_status>:

void adc_clear_interrupt_status(int sample_store_base)
{
   154c4:	defffe04 	addi	sp,sp,-8
   154c8:	df000115 	stw	fp,4(sp)
   154cc:	df000104 	addi	fp,sp,4
   154d0:	e13fff15 	stw	r4,-4(fp)
    CLEAR_ALTERA_MODULAR_ADC_SAMPLE_STORAGE_IRQ_STATUS(sample_store_base);
   154d4:	e0bfff17 	ldw	r2,-4(fp)
   154d8:	10804104 	addi	r2,r2,260
   154dc:	1007883a 	mov	r3,r2
   154e0:	e0bfff17 	ldw	r2,-4(fp)
   154e4:	10804104 	addi	r2,r2,260
   154e8:	10800037 	ldwio	r2,0(r2)
   154ec:	10800054 	ori	r2,r2,1
   154f0:	18800035 	stwio	r2,0(r3)
}
   154f4:	0001883a 	nop
   154f8:	e037883a 	mov	sp,fp
   154fc:	df000017 	ldw	fp,0(sp)
   15500:	dec00104 	addi	sp,sp,4
   15504:	f800283a 	ret

00015508 <adc_interrupt_asserted>:

int adc_interrupt_asserted(int sample_store_base)
{
   15508:	defffe04 	addi	sp,sp,-8
   1550c:	df000115 	stw	fp,4(sp)
   15510:	df000104 	addi	fp,sp,4
   15514:	e13fff15 	stw	r4,-4(fp)
    return((READ_ALTERA_MODULAR_ADC_SAMPLE_STORAGE_IRQ_STATUS(sample_store_base)==1) ? -1 : 0);
   15518:	e0bfff17 	ldw	r2,-4(fp)
   1551c:	10804104 	addi	r2,r2,260
   15520:	10800037 	ldwio	r2,0(r2)
   15524:	1080004c 	andi	r2,r2,1
   15528:	10000226 	beq	r2,zero,15534 <adc_interrupt_asserted+0x2c>
   1552c:	00bfffc4 	movi	r2,-1
   15530:	00000106 	br	15538 <adc_interrupt_asserted+0x30>
   15534:	0005883a 	mov	r2,zero
}
   15538:	e037883a 	mov	sp,fp
   1553c:	df000017 	ldw	fp,0(sp)
   15540:	dec00104 	addi	sp,sp,4
   15544:	f800283a 	ret

00015548 <adc_wait_for_interrupt>:

void adc_wait_for_interrupt(int sample_store_base)
{
   15548:	defffe04 	addi	sp,sp,-8
   1554c:	df000115 	stw	fp,4(sp)
   15550:	df000104 	addi	fp,sp,4
   15554:	e13fff15 	stw	r4,-4(fp)
    WAIT_FOR_ALTERA_MODULAR_ADC_SAMPLE_STORAGE_IRQ(sample_store_base);
   15558:	0001883a 	nop
   1555c:	e0bfff17 	ldw	r2,-4(fp)
   15560:	10804104 	addi	r2,r2,260
   15564:	10800037 	ldwio	r2,0(r2)
   15568:	1080004c 	andi	r2,r2,1
   1556c:	103ffb26 	beq	r2,zero,1555c <__alt_mem_Onchip_SRAM+0xf801555c>
}
   15570:	0001883a 	nop
   15574:	e037883a 	mov	sp,fp
   15578:	df000017 	ldw	fp,0(sp)
   1557c:	dec00104 	addi	sp,sp,4
   15580:	f800283a 	ret

00015584 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   15584:	defff504 	addi	sp,sp,-44
   15588:	df000a15 	stw	fp,40(sp)
   1558c:	df000a04 	addi	fp,sp,40
   15590:	e13ffc15 	stw	r4,-16(fp)
   15594:	e17ffd15 	stw	r5,-12(fp)
   15598:	e1bffe15 	stw	r6,-8(fp)
   1559c:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   155a0:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   155a4:	d0a71f17 	ldw	r2,-25476(gp)
  
  if (alt_ticks_per_second ())
   155a8:	10003c26 	beq	r2,zero,1569c <alt_alarm_start+0x118>
  {
    if (alarm)
   155ac:	e0bffc17 	ldw	r2,-16(fp)
   155b0:	10003826 	beq	r2,zero,15694 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
   155b4:	e0bffc17 	ldw	r2,-16(fp)
   155b8:	e0fffe17 	ldw	r3,-8(fp)
   155bc:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   155c0:	e0bffc17 	ldw	r2,-16(fp)
   155c4:	e0ffff17 	ldw	r3,-4(fp)
   155c8:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   155cc:	0005303a 	rdctl	r2,status
   155d0:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   155d4:	e0fff917 	ldw	r3,-28(fp)
   155d8:	00bfff84 	movi	r2,-2
   155dc:	1884703a 	and	r2,r3,r2
   155e0:	1001703a 	wrctl	status,r2
  
  return context;
   155e4:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   155e8:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   155ec:	d0a72017 	ldw	r2,-25472(gp)
      
      current_nticks = alt_nticks();
   155f0:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   155f4:	e0fffd17 	ldw	r3,-12(fp)
   155f8:	e0bff617 	ldw	r2,-40(fp)
   155fc:	1885883a 	add	r2,r3,r2
   15600:	10c00044 	addi	r3,r2,1
   15604:	e0bffc17 	ldw	r2,-16(fp)
   15608:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   1560c:	e0bffc17 	ldw	r2,-16(fp)
   15610:	10c00217 	ldw	r3,8(r2)
   15614:	e0bff617 	ldw	r2,-40(fp)
   15618:	1880042e 	bgeu	r3,r2,1562c <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   1561c:	e0bffc17 	ldw	r2,-16(fp)
   15620:	00c00044 	movi	r3,1
   15624:	10c00405 	stb	r3,16(r2)
   15628:	00000206 	br	15634 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   1562c:	e0bffc17 	ldw	r2,-16(fp)
   15630:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   15634:	e0bffc17 	ldw	r2,-16(fp)
   15638:	d0e01804 	addi	r3,gp,-32672
   1563c:	e0fffa15 	stw	r3,-24(fp)
   15640:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   15644:	e0bffb17 	ldw	r2,-20(fp)
   15648:	e0fffa17 	ldw	r3,-24(fp)
   1564c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   15650:	e0bffa17 	ldw	r2,-24(fp)
   15654:	10c00017 	ldw	r3,0(r2)
   15658:	e0bffb17 	ldw	r2,-20(fp)
   1565c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   15660:	e0bffa17 	ldw	r2,-24(fp)
   15664:	10800017 	ldw	r2,0(r2)
   15668:	e0fffb17 	ldw	r3,-20(fp)
   1566c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   15670:	e0bffa17 	ldw	r2,-24(fp)
   15674:	e0fffb17 	ldw	r3,-20(fp)
   15678:	10c00015 	stw	r3,0(r2)
   1567c:	e0bff817 	ldw	r2,-32(fp)
   15680:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   15684:	e0bff717 	ldw	r2,-36(fp)
   15688:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   1568c:	0005883a 	mov	r2,zero
   15690:	00000306 	br	156a0 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
   15694:	00bffa84 	movi	r2,-22
   15698:	00000106 	br	156a0 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
   1569c:	00bfde84 	movi	r2,-134
  }
}
   156a0:	e037883a 	mov	sp,fp
   156a4:	df000017 	ldw	fp,0(sp)
   156a8:	dec00104 	addi	sp,sp,4
   156ac:	f800283a 	ret

000156b0 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
   156b0:	defffa04 	addi	sp,sp,-24
   156b4:	dfc00515 	stw	ra,20(sp)
   156b8:	df000415 	stw	fp,16(sp)
   156bc:	df000404 	addi	fp,sp,16
   156c0:	e13fff15 	stw	r4,-4(fp)
  int big_loops;
  alt_u32 cycles_per_loop;
  
  if (!strcmp(NIOS2_CPU_IMPLEMENTATION,"tiny"))
  {
    cycles_per_loop = 9;
   156c4:	00800244 	movi	r2,9
   156c8:	e0bffd15 	stw	r2,-12(fp)
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
   156cc:	014003f4 	movhi	r5,15
   156d0:	29509004 	addi	r5,r5,16960
   156d4:	e13ffd17 	ldw	r4,-12(fp)
   156d8:	0000eb00 	call	eb0 <__mulsi3>
   156dc:	100b883a 	mov	r5,r2
   156e0:	01017db4 	movhi	r4,1526
   156e4:	21384004 	addi	r4,r4,-7936
   156e8:	0000df40 	call	df4 <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
   156ec:	100b883a 	mov	r5,r2
   156f0:	01200034 	movhi	r4,32768
   156f4:	213fffc4 	addi	r4,r4,-1
   156f8:	0000df40 	call	df4 <__udivsi3>
   156fc:	100b883a 	mov	r5,r2
   15700:	e13fff17 	ldw	r4,-4(fp)
   15704:	0000df40 	call	df4 <__udivsi3>
   15708:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
   1570c:	e0bffe17 	ldw	r2,-8(fp)
   15710:	10002a26 	beq	r2,zero,157bc <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
   15714:	e03ffc15 	stw	zero,-16(fp)
   15718:	00001706 	br	15778 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
   1571c:	00a00034 	movhi	r2,32768
   15720:	10bfffc4 	addi	r2,r2,-1
   15724:	10bfffc4 	addi	r2,r2,-1
   15728:	103ffe1e 	bne	r2,zero,15724 <__alt_mem_Onchip_SRAM+0xf8015724>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
   1572c:	014003f4 	movhi	r5,15
   15730:	29509004 	addi	r5,r5,16960
   15734:	e13ffd17 	ldw	r4,-12(fp)
   15738:	0000eb00 	call	eb0 <__mulsi3>
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
   1573c:	100b883a 	mov	r5,r2
   15740:	01017db4 	movhi	r4,1526
   15744:	21384004 	addi	r4,r4,-7936
   15748:	0000df40 	call	df4 <__udivsi3>
   1574c:	100b883a 	mov	r5,r2
   15750:	01200034 	movhi	r4,32768
   15754:	213fffc4 	addi	r4,r4,-1
   15758:	0000df40 	call	df4 <__udivsi3>
   1575c:	1007883a 	mov	r3,r2
   15760:	e0bfff17 	ldw	r2,-4(fp)
   15764:	10c5c83a 	sub	r2,r2,r3
   15768:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
   1576c:	e0bffc17 	ldw	r2,-16(fp)
   15770:	10800044 	addi	r2,r2,1
   15774:	e0bffc15 	stw	r2,-16(fp)
   15778:	e0fffc17 	ldw	r3,-16(fp)
   1577c:	e0bffe17 	ldw	r2,-8(fp)
   15780:	18bfe616 	blt	r3,r2,1571c <__alt_mem_Onchip_SRAM+0xf801571c>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   15784:	014003f4 	movhi	r5,15
   15788:	29509004 	addi	r5,r5,16960
   1578c:	e13ffd17 	ldw	r4,-12(fp)
   15790:	0000eb00 	call	eb0 <__mulsi3>
   15794:	100b883a 	mov	r5,r2
   15798:	01017db4 	movhi	r4,1526
   1579c:	21384004 	addi	r4,r4,-7936
   157a0:	0000df40 	call	df4 <__udivsi3>
   157a4:	e17fff17 	ldw	r5,-4(fp)
   157a8:	1009883a 	mov	r4,r2
   157ac:	0000eb00 	call	eb0 <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   157b0:	10bfffc4 	addi	r2,r2,-1
   157b4:	103ffe1e 	bne	r2,zero,157b0 <__alt_mem_Onchip_SRAM+0xf80157b0>
   157b8:	00000d06 	br	157f0 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   157bc:	014003f4 	movhi	r5,15
   157c0:	29509004 	addi	r5,r5,16960
   157c4:	e13ffd17 	ldw	r4,-12(fp)
   157c8:	0000eb00 	call	eb0 <__mulsi3>
   157cc:	100b883a 	mov	r5,r2
   157d0:	01017db4 	movhi	r4,1526
   157d4:	21384004 	addi	r4,r4,-7936
   157d8:	0000df40 	call	df4 <__udivsi3>
   157dc:	e17fff17 	ldw	r5,-4(fp)
   157e0:	1009883a 	mov	r4,r2
   157e4:	0000eb00 	call	eb0 <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   157e8:	10bfffc4 	addi	r2,r2,-1
   157ec:	00bffe16 	blt	zero,r2,157e8 <__alt_mem_Onchip_SRAM+0xf80157e8>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
   157f0:	0005883a 	mov	r2,zero
}
   157f4:	e037883a 	mov	sp,fp
   157f8:	dfc00117 	ldw	ra,4(sp)
   157fc:	df000017 	ldw	fp,0(sp)
   15800:	dec00204 	addi	sp,sp,8
   15804:	f800283a 	ret

00015808 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   15808:	deffff04 	addi	sp,sp,-4
   1580c:	df000015 	stw	fp,0(sp)
   15810:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   15814:	0001883a 	nop
   15818:	e037883a 	mov	sp,fp
   1581c:	df000017 	ldw	fp,0(sp)
   15820:	dec00104 	addi	sp,sp,4
   15824:	f800283a 	ret

00015828 <alt_get_errno>:
   15828:	defffe04 	addi	sp,sp,-8
   1582c:	dfc00115 	stw	ra,4(sp)
   15830:	df000015 	stw	fp,0(sp)
   15834:	d839883a 	mov	fp,sp
   15838:	d0a01617 	ldw	r2,-32680(gp)
   1583c:	10000326 	beq	r2,zero,1584c <alt_get_errno+0x24>
   15840:	d0a01617 	ldw	r2,-32680(gp)
   15844:	103ee83a 	callr	r2
   15848:	00000106 	br	15850 <alt_get_errno+0x28>
   1584c:	d0a71104 	addi	r2,gp,-25532
   15850:	e037883a 	mov	sp,fp
   15854:	dfc00117 	ldw	ra,4(sp)
   15858:	df000017 	ldw	fp,0(sp)
   1585c:	dec00204 	addi	sp,sp,8
   15860:	f800283a 	ret

00015864 <alt_dev_llist_insert>:
   15864:	defffa04 	addi	sp,sp,-24
   15868:	dfc00515 	stw	ra,20(sp)
   1586c:	df000415 	stw	fp,16(sp)
   15870:	df000404 	addi	fp,sp,16
   15874:	e13ffe15 	stw	r4,-8(fp)
   15878:	e17fff15 	stw	r5,-4(fp)
   1587c:	e0bffe17 	ldw	r2,-8(fp)
   15880:	10000326 	beq	r2,zero,15890 <alt_dev_llist_insert+0x2c>
   15884:	e0bffe17 	ldw	r2,-8(fp)
   15888:	10800217 	ldw	r2,8(r2)
   1588c:	1000061e 	bne	r2,zero,158a8 <alt_dev_llist_insert+0x44>
   15890:	00158280 	call	15828 <alt_get_errno>
   15894:	1007883a 	mov	r3,r2
   15898:	00800584 	movi	r2,22
   1589c:	18800015 	stw	r2,0(r3)
   158a0:	00bffa84 	movi	r2,-22
   158a4:	00001306 	br	158f4 <alt_dev_llist_insert+0x90>
   158a8:	e0bffe17 	ldw	r2,-8(fp)
   158ac:	e0ffff17 	ldw	r3,-4(fp)
   158b0:	e0fffc15 	stw	r3,-16(fp)
   158b4:	e0bffd15 	stw	r2,-12(fp)
   158b8:	e0bffd17 	ldw	r2,-12(fp)
   158bc:	e0fffc17 	ldw	r3,-16(fp)
   158c0:	10c00115 	stw	r3,4(r2)
   158c4:	e0bffc17 	ldw	r2,-16(fp)
   158c8:	10c00017 	ldw	r3,0(r2)
   158cc:	e0bffd17 	ldw	r2,-12(fp)
   158d0:	10c00015 	stw	r3,0(r2)
   158d4:	e0bffc17 	ldw	r2,-16(fp)
   158d8:	10800017 	ldw	r2,0(r2)
   158dc:	e0fffd17 	ldw	r3,-12(fp)
   158e0:	10c00115 	stw	r3,4(r2)
   158e4:	e0bffc17 	ldw	r2,-16(fp)
   158e8:	e0fffd17 	ldw	r3,-12(fp)
   158ec:	10c00015 	stw	r3,0(r2)
   158f0:	0005883a 	mov	r2,zero
   158f4:	e037883a 	mov	sp,fp
   158f8:	dfc00117 	ldw	ra,4(sp)
   158fc:	df000017 	ldw	fp,0(sp)
   15900:	dec00204 	addi	sp,sp,8
   15904:	f800283a 	ret

00015908 <_do_ctors>:
   15908:	defffd04 	addi	sp,sp,-12
   1590c:	dfc00215 	stw	ra,8(sp)
   15910:	df000115 	stw	fp,4(sp)
   15914:	df000104 	addi	fp,sp,4
   15918:	00800074 	movhi	r2,1
   1591c:	109a6004 	addi	r2,r2,27008
   15920:	e0bfff15 	stw	r2,-4(fp)
   15924:	00000606 	br	15940 <_do_ctors+0x38>
   15928:	e0bfff17 	ldw	r2,-4(fp)
   1592c:	10800017 	ldw	r2,0(r2)
   15930:	103ee83a 	callr	r2
   15934:	e0bfff17 	ldw	r2,-4(fp)
   15938:	10bfff04 	addi	r2,r2,-4
   1593c:	e0bfff15 	stw	r2,-4(fp)
   15940:	e0ffff17 	ldw	r3,-4(fp)
   15944:	00800074 	movhi	r2,1
   15948:	109a6104 	addi	r2,r2,27012
   1594c:	18bff62e 	bgeu	r3,r2,15928 <__alt_mem_Onchip_SRAM+0xf8015928>
   15950:	0001883a 	nop
   15954:	e037883a 	mov	sp,fp
   15958:	dfc00117 	ldw	ra,4(sp)
   1595c:	df000017 	ldw	fp,0(sp)
   15960:	dec00204 	addi	sp,sp,8
   15964:	f800283a 	ret

00015968 <_do_dtors>:
   15968:	defffd04 	addi	sp,sp,-12
   1596c:	dfc00215 	stw	ra,8(sp)
   15970:	df000115 	stw	fp,4(sp)
   15974:	df000104 	addi	fp,sp,4
   15978:	00800074 	movhi	r2,1
   1597c:	109a6004 	addi	r2,r2,27008
   15980:	e0bfff15 	stw	r2,-4(fp)
   15984:	00000606 	br	159a0 <_do_dtors+0x38>
   15988:	e0bfff17 	ldw	r2,-4(fp)
   1598c:	10800017 	ldw	r2,0(r2)
   15990:	103ee83a 	callr	r2
   15994:	e0bfff17 	ldw	r2,-4(fp)
   15998:	10bfff04 	addi	r2,r2,-4
   1599c:	e0bfff15 	stw	r2,-4(fp)
   159a0:	e0ffff17 	ldw	r3,-4(fp)
   159a4:	00800074 	movhi	r2,1
   159a8:	109a6104 	addi	r2,r2,27012
   159ac:	18bff62e 	bgeu	r3,r2,15988 <__alt_mem_Onchip_SRAM+0xf8015988>
   159b0:	0001883a 	nop
   159b4:	e037883a 	mov	sp,fp
   159b8:	dfc00117 	ldw	ra,4(sp)
   159bc:	df000017 	ldw	fp,0(sp)
   159c0:	dec00204 	addi	sp,sp,8
   159c4:	f800283a 	ret

000159c8 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   159c8:	defffa04 	addi	sp,sp,-24
   159cc:	dfc00515 	stw	ra,20(sp)
   159d0:	df000415 	stw	fp,16(sp)
   159d4:	df000404 	addi	fp,sp,16
   159d8:	e13ffe15 	stw	r4,-8(fp)
   159dc:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   159e0:	e0bfff17 	ldw	r2,-4(fp)
   159e4:	10800017 	ldw	r2,0(r2)
   159e8:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   159ec:	e13ffe17 	ldw	r4,-8(fp)
   159f0:	00013700 	call	1370 <strlen>
   159f4:	10800044 	addi	r2,r2,1
   159f8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   159fc:	00000d06 	br	15a34 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   15a00:	e0bffc17 	ldw	r2,-16(fp)
   15a04:	10800217 	ldw	r2,8(r2)
   15a08:	e0fffd17 	ldw	r3,-12(fp)
   15a0c:	180d883a 	mov	r6,r3
   15a10:	e17ffe17 	ldw	r5,-8(fp)
   15a14:	1009883a 	mov	r4,r2
   15a18:	001663c0 	call	1663c <memcmp>
   15a1c:	1000021e 	bne	r2,zero,15a28 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   15a20:	e0bffc17 	ldw	r2,-16(fp)
   15a24:	00000706 	br	15a44 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   15a28:	e0bffc17 	ldw	r2,-16(fp)
   15a2c:	10800017 	ldw	r2,0(r2)
   15a30:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   15a34:	e0fffc17 	ldw	r3,-16(fp)
   15a38:	e0bfff17 	ldw	r2,-4(fp)
   15a3c:	18bff01e 	bne	r3,r2,15a00 <__alt_mem_Onchip_SRAM+0xf8015a00>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   15a40:	0005883a 	mov	r2,zero
}
   15a44:	e037883a 	mov	sp,fp
   15a48:	dfc00117 	ldw	ra,4(sp)
   15a4c:	df000017 	ldw	fp,0(sp)
   15a50:	dec00204 	addi	sp,sp,8
   15a54:	f800283a 	ret

00015a58 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   15a58:	deffff04 	addi	sp,sp,-4
   15a5c:	df000015 	stw	fp,0(sp)
   15a60:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
   15a64:	0001883a 	nop
   15a68:	e037883a 	mov	sp,fp
   15a6c:	df000017 	ldw	fp,0(sp)
   15a70:	dec00104 	addi	sp,sp,4
   15a74:	f800283a 	ret

00015a78 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   15a78:	defff904 	addi	sp,sp,-28
   15a7c:	dfc00615 	stw	ra,24(sp)
   15a80:	df000515 	stw	fp,20(sp)
   15a84:	df000504 	addi	fp,sp,20
   15a88:	e13ffc15 	stw	r4,-16(fp)
   15a8c:	e17ffd15 	stw	r5,-12(fp)
   15a90:	e1bffe15 	stw	r6,-8(fp)
   15a94:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   15a98:	e0800217 	ldw	r2,8(fp)
   15a9c:	d8800015 	stw	r2,0(sp)
   15aa0:	e1ffff17 	ldw	r7,-4(fp)
   15aa4:	e1bffe17 	ldw	r6,-8(fp)
   15aa8:	e17ffd17 	ldw	r5,-12(fp)
   15aac:	e13ffc17 	ldw	r4,-16(fp)
   15ab0:	0015c280 	call	15c28 <alt_iic_isr_register>
}  
   15ab4:	e037883a 	mov	sp,fp
   15ab8:	dfc00117 	ldw	ra,4(sp)
   15abc:	df000017 	ldw	fp,0(sp)
   15ac0:	dec00204 	addi	sp,sp,8
   15ac4:	f800283a 	ret

00015ac8 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   15ac8:	defff904 	addi	sp,sp,-28
   15acc:	df000615 	stw	fp,24(sp)
   15ad0:	df000604 	addi	fp,sp,24
   15ad4:	e13ffe15 	stw	r4,-8(fp)
   15ad8:	e17fff15 	stw	r5,-4(fp)
   15adc:	e0bfff17 	ldw	r2,-4(fp)
   15ae0:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   15ae4:	0005303a 	rdctl	r2,status
   15ae8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   15aec:	e0fffb17 	ldw	r3,-20(fp)
   15af0:	00bfff84 	movi	r2,-2
   15af4:	1884703a 	and	r2,r3,r2
   15af8:	1001703a 	wrctl	status,r2
  
  return context;
   15afc:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   15b00:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
   15b04:	00c00044 	movi	r3,1
   15b08:	e0bffa17 	ldw	r2,-24(fp)
   15b0c:	1884983a 	sll	r2,r3,r2
   15b10:	1007883a 	mov	r3,r2
   15b14:	d0a72117 	ldw	r2,-25468(gp)
   15b18:	1884b03a 	or	r2,r3,r2
   15b1c:	d0a72115 	stw	r2,-25468(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   15b20:	d0a72117 	ldw	r2,-25468(gp)
   15b24:	100170fa 	wrctl	ienable,r2
   15b28:	e0bffc17 	ldw	r2,-16(fp)
   15b2c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   15b30:	e0bffd17 	ldw	r2,-12(fp)
   15b34:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   15b38:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
   15b3c:	0001883a 	nop
}
   15b40:	e037883a 	mov	sp,fp
   15b44:	df000017 	ldw	fp,0(sp)
   15b48:	dec00104 	addi	sp,sp,4
   15b4c:	f800283a 	ret

00015b50 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   15b50:	defff904 	addi	sp,sp,-28
   15b54:	df000615 	stw	fp,24(sp)
   15b58:	df000604 	addi	fp,sp,24
   15b5c:	e13ffe15 	stw	r4,-8(fp)
   15b60:	e17fff15 	stw	r5,-4(fp)
   15b64:	e0bfff17 	ldw	r2,-4(fp)
   15b68:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   15b6c:	0005303a 	rdctl	r2,status
   15b70:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   15b74:	e0fffb17 	ldw	r3,-20(fp)
   15b78:	00bfff84 	movi	r2,-2
   15b7c:	1884703a 	and	r2,r3,r2
   15b80:	1001703a 	wrctl	status,r2
  
  return context;
   15b84:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   15b88:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
   15b8c:	00c00044 	movi	r3,1
   15b90:	e0bffa17 	ldw	r2,-24(fp)
   15b94:	1884983a 	sll	r2,r3,r2
   15b98:	0084303a 	nor	r2,zero,r2
   15b9c:	1007883a 	mov	r3,r2
   15ba0:	d0a72117 	ldw	r2,-25468(gp)
   15ba4:	1884703a 	and	r2,r3,r2
   15ba8:	d0a72115 	stw	r2,-25468(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   15bac:	d0a72117 	ldw	r2,-25468(gp)
   15bb0:	100170fa 	wrctl	ienable,r2
   15bb4:	e0bffc17 	ldw	r2,-16(fp)
   15bb8:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   15bbc:	e0bffd17 	ldw	r2,-12(fp)
   15bc0:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   15bc4:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
   15bc8:	0001883a 	nop
}
   15bcc:	e037883a 	mov	sp,fp
   15bd0:	df000017 	ldw	fp,0(sp)
   15bd4:	dec00104 	addi	sp,sp,4
   15bd8:	f800283a 	ret

00015bdc <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   15bdc:	defffc04 	addi	sp,sp,-16
   15be0:	df000315 	stw	fp,12(sp)
   15be4:	df000304 	addi	fp,sp,12
   15be8:	e13ffe15 	stw	r4,-8(fp)
   15bec:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   15bf0:	000530fa 	rdctl	r2,ienable
   15bf4:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   15bf8:	00c00044 	movi	r3,1
   15bfc:	e0bfff17 	ldw	r2,-4(fp)
   15c00:	1884983a 	sll	r2,r3,r2
   15c04:	1007883a 	mov	r3,r2
   15c08:	e0bffd17 	ldw	r2,-12(fp)
   15c0c:	1884703a 	and	r2,r3,r2
   15c10:	1004c03a 	cmpne	r2,r2,zero
   15c14:	10803fcc 	andi	r2,r2,255
}
   15c18:	e037883a 	mov	sp,fp
   15c1c:	df000017 	ldw	fp,0(sp)
   15c20:	dec00104 	addi	sp,sp,4
   15c24:	f800283a 	ret

00015c28 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   15c28:	defff504 	addi	sp,sp,-44
   15c2c:	dfc00a15 	stw	ra,40(sp)
   15c30:	df000915 	stw	fp,36(sp)
   15c34:	df000904 	addi	fp,sp,36
   15c38:	e13ffc15 	stw	r4,-16(fp)
   15c3c:	e17ffd15 	stw	r5,-12(fp)
   15c40:	e1bffe15 	stw	r6,-8(fp)
   15c44:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
   15c48:	00bffa84 	movi	r2,-22
   15c4c:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   15c50:	e0bffd17 	ldw	r2,-12(fp)
   15c54:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   15c58:	e0bff817 	ldw	r2,-32(fp)
   15c5c:	10800808 	cmpgei	r2,r2,32
   15c60:	1000271e 	bne	r2,zero,15d00 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   15c64:	0005303a 	rdctl	r2,status
   15c68:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   15c6c:	e0fffb17 	ldw	r3,-20(fp)
   15c70:	00bfff84 	movi	r2,-2
   15c74:	1884703a 	and	r2,r3,r2
   15c78:	1001703a 	wrctl	status,r2
  
  return context;
   15c7c:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   15c80:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
   15c84:	008000b4 	movhi	r2,2
   15c88:	10a95804 	addi	r2,r2,-23200
   15c8c:	e0fff817 	ldw	r3,-32(fp)
   15c90:	180690fa 	slli	r3,r3,3
   15c94:	10c5883a 	add	r2,r2,r3
   15c98:	e0fffe17 	ldw	r3,-8(fp)
   15c9c:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
   15ca0:	008000b4 	movhi	r2,2
   15ca4:	10a95804 	addi	r2,r2,-23200
   15ca8:	e0fff817 	ldw	r3,-32(fp)
   15cac:	180690fa 	slli	r3,r3,3
   15cb0:	10c5883a 	add	r2,r2,r3
   15cb4:	10800104 	addi	r2,r2,4
   15cb8:	e0ffff17 	ldw	r3,-4(fp)
   15cbc:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   15cc0:	e0bffe17 	ldw	r2,-8(fp)
   15cc4:	10000526 	beq	r2,zero,15cdc <alt_iic_isr_register+0xb4>
   15cc8:	e0bff817 	ldw	r2,-32(fp)
   15ccc:	100b883a 	mov	r5,r2
   15cd0:	e13ffc17 	ldw	r4,-16(fp)
   15cd4:	0015ac80 	call	15ac8 <alt_ic_irq_enable>
   15cd8:	00000406 	br	15cec <alt_iic_isr_register+0xc4>
   15cdc:	e0bff817 	ldw	r2,-32(fp)
   15ce0:	100b883a 	mov	r5,r2
   15ce4:	e13ffc17 	ldw	r4,-16(fp)
   15ce8:	0015b500 	call	15b50 <alt_ic_irq_disable>
   15cec:	e0bff715 	stw	r2,-36(fp)
   15cf0:	e0bffa17 	ldw	r2,-24(fp)
   15cf4:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   15cf8:	e0bff917 	ldw	r2,-28(fp)
   15cfc:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   15d00:	e0bff717 	ldw	r2,-36(fp)
}
   15d04:	e037883a 	mov	sp,fp
   15d08:	dfc00117 	ldw	ra,4(sp)
   15d0c:	df000017 	ldw	fp,0(sp)
   15d10:	dec00204 	addi	sp,sp,8
   15d14:	f800283a 	ret

00015d18 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   15d18:	defff804 	addi	sp,sp,-32
   15d1c:	dfc00715 	stw	ra,28(sp)
   15d20:	df000615 	stw	fp,24(sp)
   15d24:	dc000515 	stw	r16,20(sp)
   15d28:	df000604 	addi	fp,sp,24
   15d2c:	e13ffb15 	stw	r4,-20(fp)
   15d30:	e17ffc15 	stw	r5,-16(fp)
   15d34:	e1bffd15 	stw	r6,-12(fp)
   15d38:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
   15d3c:	e1bffe17 	ldw	r6,-8(fp)
   15d40:	e17ffd17 	ldw	r5,-12(fp)
   15d44:	e13ffc17 	ldw	r4,-16(fp)
   15d48:	0015fa00 	call	15fa0 <open>
   15d4c:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
   15d50:	e0bffa17 	ldw	r2,-24(fp)
   15d54:	10002216 	blt	r2,zero,15de0 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
   15d58:	04000074 	movhi	r16,1
   15d5c:	841d8b04 	addi	r16,r16,30252
   15d60:	e0bffa17 	ldw	r2,-24(fp)
   15d64:	01400304 	movi	r5,12
   15d68:	1009883a 	mov	r4,r2
   15d6c:	0000eb00 	call	eb0 <__mulsi3>
   15d70:	8085883a 	add	r2,r16,r2
   15d74:	10c00017 	ldw	r3,0(r2)
   15d78:	e0bffb17 	ldw	r2,-20(fp)
   15d7c:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   15d80:	04000074 	movhi	r16,1
   15d84:	841d8b04 	addi	r16,r16,30252
   15d88:	e0bffa17 	ldw	r2,-24(fp)
   15d8c:	01400304 	movi	r5,12
   15d90:	1009883a 	mov	r4,r2
   15d94:	0000eb00 	call	eb0 <__mulsi3>
   15d98:	8085883a 	add	r2,r16,r2
   15d9c:	10800104 	addi	r2,r2,4
   15da0:	10c00017 	ldw	r3,0(r2)
   15da4:	e0bffb17 	ldw	r2,-20(fp)
   15da8:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   15dac:	04000074 	movhi	r16,1
   15db0:	841d8b04 	addi	r16,r16,30252
   15db4:	e0bffa17 	ldw	r2,-24(fp)
   15db8:	01400304 	movi	r5,12
   15dbc:	1009883a 	mov	r4,r2
   15dc0:	0000eb00 	call	eb0 <__mulsi3>
   15dc4:	8085883a 	add	r2,r16,r2
   15dc8:	10800204 	addi	r2,r2,8
   15dcc:	10c00017 	ldw	r3,0(r2)
   15dd0:	e0bffb17 	ldw	r2,-20(fp)
   15dd4:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   15dd8:	e13ffa17 	ldw	r4,-24(fp)
   15ddc:	00123940 	call	12394 <alt_release_fd>
  }
} 
   15de0:	0001883a 	nop
   15de4:	e6ffff04 	addi	sp,fp,-4
   15de8:	dfc00217 	ldw	ra,8(sp)
   15dec:	df000117 	ldw	fp,4(sp)
   15df0:	dc000017 	ldw	r16,0(sp)
   15df4:	dec00304 	addi	sp,sp,12
   15df8:	f800283a 	ret

00015dfc <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   15dfc:	defffb04 	addi	sp,sp,-20
   15e00:	dfc00415 	stw	ra,16(sp)
   15e04:	df000315 	stw	fp,12(sp)
   15e08:	df000304 	addi	fp,sp,12
   15e0c:	e13ffd15 	stw	r4,-12(fp)
   15e10:	e17ffe15 	stw	r5,-8(fp)
   15e14:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   15e18:	01c07fc4 	movi	r7,511
   15e1c:	01800044 	movi	r6,1
   15e20:	e17ffd17 	ldw	r5,-12(fp)
   15e24:	01000074 	movhi	r4,1
   15e28:	211d8e04 	addi	r4,r4,30264
   15e2c:	0015d180 	call	15d18 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   15e30:	01c07fc4 	movi	r7,511
   15e34:	000d883a 	mov	r6,zero
   15e38:	e17ffe17 	ldw	r5,-8(fp)
   15e3c:	01000074 	movhi	r4,1
   15e40:	211d8b04 	addi	r4,r4,30252
   15e44:	0015d180 	call	15d18 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   15e48:	01c07fc4 	movi	r7,511
   15e4c:	01800044 	movi	r6,1
   15e50:	e17fff17 	ldw	r5,-4(fp)
   15e54:	01000074 	movhi	r4,1
   15e58:	211d9104 	addi	r4,r4,30276
   15e5c:	0015d180 	call	15d18 <alt_open_fd>
}  
   15e60:	0001883a 	nop
   15e64:	e037883a 	mov	sp,fp
   15e68:	dfc00117 	ldw	ra,4(sp)
   15e6c:	df000017 	ldw	fp,0(sp)
   15e70:	dec00204 	addi	sp,sp,8
   15e74:	f800283a 	ret

00015e78 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   15e78:	defffe04 	addi	sp,sp,-8
   15e7c:	dfc00115 	stw	ra,4(sp)
   15e80:	df000015 	stw	fp,0(sp)
   15e84:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   15e88:	d0a01617 	ldw	r2,-32680(gp)
   15e8c:	10000326 	beq	r2,zero,15e9c <alt_get_errno+0x24>
   15e90:	d0a01617 	ldw	r2,-32680(gp)
   15e94:	103ee83a 	callr	r2
   15e98:	00000106 	br	15ea0 <alt_get_errno+0x28>
   15e9c:	d0a71104 	addi	r2,gp,-25532
}
   15ea0:	e037883a 	mov	sp,fp
   15ea4:	dfc00117 	ldw	ra,4(sp)
   15ea8:	df000017 	ldw	fp,0(sp)
   15eac:	dec00204 	addi	sp,sp,8
   15eb0:	f800283a 	ret

00015eb4 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   15eb4:	defffb04 	addi	sp,sp,-20
   15eb8:	dfc00415 	stw	ra,16(sp)
   15ebc:	df000315 	stw	fp,12(sp)
   15ec0:	dc000215 	stw	r16,8(sp)
   15ec4:	df000304 	addi	fp,sp,12
   15ec8:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   15ecc:	e0bffe17 	ldw	r2,-8(fp)
   15ed0:	10800217 	ldw	r2,8(r2)
   15ed4:	10d00034 	orhi	r3,r2,16384
   15ed8:	e0bffe17 	ldw	r2,-8(fp)
   15edc:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   15ee0:	e03ffd15 	stw	zero,-12(fp)
   15ee4:	00002306 	br	15f74 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   15ee8:	04000074 	movhi	r16,1
   15eec:	841d8b04 	addi	r16,r16,30252
   15ef0:	e0bffd17 	ldw	r2,-12(fp)
   15ef4:	01400304 	movi	r5,12
   15ef8:	1009883a 	mov	r4,r2
   15efc:	0000eb00 	call	eb0 <__mulsi3>
   15f00:	8085883a 	add	r2,r16,r2
   15f04:	10c00017 	ldw	r3,0(r2)
   15f08:	e0bffe17 	ldw	r2,-8(fp)
   15f0c:	10800017 	ldw	r2,0(r2)
   15f10:	1880151e 	bne	r3,r2,15f68 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   15f14:	04000074 	movhi	r16,1
   15f18:	841d8b04 	addi	r16,r16,30252
   15f1c:	e0bffd17 	ldw	r2,-12(fp)
   15f20:	01400304 	movi	r5,12
   15f24:	1009883a 	mov	r4,r2
   15f28:	0000eb00 	call	eb0 <__mulsi3>
   15f2c:	8085883a 	add	r2,r16,r2
   15f30:	10800204 	addi	r2,r2,8
   15f34:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   15f38:	10000b0e 	bge	r2,zero,15f68 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   15f3c:	01400304 	movi	r5,12
   15f40:	e13ffd17 	ldw	r4,-12(fp)
   15f44:	0000eb00 	call	eb0 <__mulsi3>
   15f48:	1007883a 	mov	r3,r2
   15f4c:	00800074 	movhi	r2,1
   15f50:	109d8b04 	addi	r2,r2,30252
   15f54:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   15f58:	e0bffe17 	ldw	r2,-8(fp)
   15f5c:	18800226 	beq	r3,r2,15f68 <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   15f60:	00bffcc4 	movi	r2,-13
   15f64:	00000806 	br	15f88 <alt_file_locked+0xd4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   15f68:	e0bffd17 	ldw	r2,-12(fp)
   15f6c:	10800044 	addi	r2,r2,1
   15f70:	e0bffd15 	stw	r2,-12(fp)
   15f74:	d0a01517 	ldw	r2,-32684(gp)
   15f78:	1007883a 	mov	r3,r2
   15f7c:	e0bffd17 	ldw	r2,-12(fp)
   15f80:	18bfd92e 	bgeu	r3,r2,15ee8 <__alt_mem_Onchip_SRAM+0xf8015ee8>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   15f84:	0005883a 	mov	r2,zero
}
   15f88:	e6ffff04 	addi	sp,fp,-4
   15f8c:	dfc00217 	ldw	ra,8(sp)
   15f90:	df000117 	ldw	fp,4(sp)
   15f94:	dc000017 	ldw	r16,0(sp)
   15f98:	dec00304 	addi	sp,sp,12
   15f9c:	f800283a 	ret

00015fa0 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   15fa0:	defff604 	addi	sp,sp,-40
   15fa4:	dfc00915 	stw	ra,36(sp)
   15fa8:	df000815 	stw	fp,32(sp)
   15fac:	df000804 	addi	fp,sp,32
   15fb0:	e13ffd15 	stw	r4,-12(fp)
   15fb4:	e17ffe15 	stw	r5,-8(fp)
   15fb8:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   15fbc:	00bfffc4 	movi	r2,-1
   15fc0:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   15fc4:	00bffb44 	movi	r2,-19
   15fc8:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   15fcc:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   15fd0:	d1601304 	addi	r5,gp,-32692
   15fd4:	e13ffd17 	ldw	r4,-12(fp)
   15fd8:	00159c80 	call	159c8 <alt_find_dev>
   15fdc:	e0bff815 	stw	r2,-32(fp)
   15fe0:	e0bff817 	ldw	r2,-32(fp)
   15fe4:	1000051e 	bne	r2,zero,15ffc <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   15fe8:	e13ffd17 	ldw	r4,-12(fp)
   15fec:	00163880 	call	16388 <alt_find_file>
   15ff0:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   15ff4:	00800044 	movi	r2,1
   15ff8:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   15ffc:	e0bff817 	ldw	r2,-32(fp)
   16000:	10002b26 	beq	r2,zero,160b0 <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
   16004:	e13ff817 	ldw	r4,-32(fp)
   16008:	00164900 	call	16490 <alt_get_fd>
   1600c:	e0bff915 	stw	r2,-28(fp)
   16010:	e0bff917 	ldw	r2,-28(fp)
   16014:	1000030e 	bge	r2,zero,16024 <open+0x84>
    {
      status = index;
   16018:	e0bff917 	ldw	r2,-28(fp)
   1601c:	e0bffa15 	stw	r2,-24(fp)
   16020:	00002506 	br	160b8 <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
   16024:	01400304 	movi	r5,12
   16028:	e13ff917 	ldw	r4,-28(fp)
   1602c:	0000eb00 	call	eb0 <__mulsi3>
   16030:	1007883a 	mov	r3,r2
   16034:	00800074 	movhi	r2,1
   16038:	109d8b04 	addi	r2,r2,30252
   1603c:	1885883a 	add	r2,r3,r2
   16040:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   16044:	e0fffe17 	ldw	r3,-8(fp)
   16048:	00900034 	movhi	r2,16384
   1604c:	10bfffc4 	addi	r2,r2,-1
   16050:	1886703a 	and	r3,r3,r2
   16054:	e0bffc17 	ldw	r2,-16(fp)
   16058:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   1605c:	e0bffb17 	ldw	r2,-20(fp)
   16060:	1000051e 	bne	r2,zero,16078 <open+0xd8>
   16064:	e13ffc17 	ldw	r4,-16(fp)
   16068:	0015eb40 	call	15eb4 <alt_file_locked>
   1606c:	e0bffa15 	stw	r2,-24(fp)
   16070:	e0bffa17 	ldw	r2,-24(fp)
   16074:	10001016 	blt	r2,zero,160b8 <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   16078:	e0bff817 	ldw	r2,-32(fp)
   1607c:	10800317 	ldw	r2,12(r2)
   16080:	10000826 	beq	r2,zero,160a4 <open+0x104>
   16084:	e0bff817 	ldw	r2,-32(fp)
   16088:	10800317 	ldw	r2,12(r2)
   1608c:	e1ffff17 	ldw	r7,-4(fp)
   16090:	e1bffe17 	ldw	r6,-8(fp)
   16094:	e17ffd17 	ldw	r5,-12(fp)
   16098:	e13ffc17 	ldw	r4,-16(fp)
   1609c:	103ee83a 	callr	r2
   160a0:	00000106 	br	160a8 <open+0x108>
   160a4:	0005883a 	mov	r2,zero
   160a8:	e0bffa15 	stw	r2,-24(fp)
   160ac:	00000206 	br	160b8 <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
   160b0:	00bffb44 	movi	r2,-19
   160b4:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   160b8:	e0bffa17 	ldw	r2,-24(fp)
   160bc:	1000090e 	bge	r2,zero,160e4 <open+0x144>
  {
    alt_release_fd (index);  
   160c0:	e13ff917 	ldw	r4,-28(fp)
   160c4:	00123940 	call	12394 <alt_release_fd>
    ALT_ERRNO = -status;
   160c8:	0015e780 	call	15e78 <alt_get_errno>
   160cc:	1007883a 	mov	r3,r2
   160d0:	e0bffa17 	ldw	r2,-24(fp)
   160d4:	0085c83a 	sub	r2,zero,r2
   160d8:	18800015 	stw	r2,0(r3)
    return -1;
   160dc:	00bfffc4 	movi	r2,-1
   160e0:	00000106 	br	160e8 <open+0x148>
  }
  
  /* return the reference upon success */

  return index;
   160e4:	e0bff917 	ldw	r2,-28(fp)
}
   160e8:	e037883a 	mov	sp,fp
   160ec:	dfc00117 	ldw	ra,4(sp)
   160f0:	df000017 	ldw	fp,0(sp)
   160f4:	dec00204 	addi	sp,sp,8
   160f8:	f800283a 	ret

000160fc <alt_printf>:
   160fc:	defff204 	addi	sp,sp,-56
   16100:	dfc00a15 	stw	ra,40(sp)
   16104:	df000915 	stw	fp,36(sp)
   16108:	df000904 	addi	fp,sp,36
   1610c:	e13fff15 	stw	r4,-4(fp)
   16110:	e1400215 	stw	r5,8(fp)
   16114:	e1800315 	stw	r6,12(fp)
   16118:	e1c00415 	stw	r7,16(fp)
   1611c:	e0800204 	addi	r2,fp,8
   16120:	e0bffe15 	stw	r2,-8(fp)
   16124:	e0bfff17 	ldw	r2,-4(fp)
   16128:	e0bff715 	stw	r2,-36(fp)
   1612c:	00006f06 	br	162ec <alt_printf+0x1f0>
   16130:	e0bff807 	ldb	r2,-32(fp)
   16134:	10800960 	cmpeqi	r2,r2,37
   16138:	1000041e 	bne	r2,zero,1614c <alt_printf+0x50>
   1613c:	e0bff807 	ldb	r2,-32(fp)
   16140:	1009883a 	mov	r4,r2
   16144:	00163280 	call	16328 <alt_putchar>
   16148:	00006806 	br	162ec <alt_printf+0x1f0>
   1614c:	e0bff717 	ldw	r2,-36(fp)
   16150:	10c00044 	addi	r3,r2,1
   16154:	e0fff715 	stw	r3,-36(fp)
   16158:	10800003 	ldbu	r2,0(r2)
   1615c:	e0bff805 	stb	r2,-32(fp)
   16160:	e0bff807 	ldb	r2,-32(fp)
   16164:	10006926 	beq	r2,zero,1630c <alt_printf+0x210>
   16168:	e0bff807 	ldb	r2,-32(fp)
   1616c:	10800958 	cmpnei	r2,r2,37
   16170:	1000041e 	bne	r2,zero,16184 <alt_printf+0x88>
   16174:	e0bff807 	ldb	r2,-32(fp)
   16178:	1009883a 	mov	r4,r2
   1617c:	00163280 	call	16328 <alt_putchar>
   16180:	00005a06 	br	162ec <alt_printf+0x1f0>
   16184:	e0bff807 	ldb	r2,-32(fp)
   16188:	108018d8 	cmpnei	r2,r2,99
   1618c:	1000081e 	bne	r2,zero,161b0 <alt_printf+0xb4>
   16190:	e0bffe17 	ldw	r2,-8(fp)
   16194:	10c00104 	addi	r3,r2,4
   16198:	e0fffe15 	stw	r3,-8(fp)
   1619c:	10800017 	ldw	r2,0(r2)
   161a0:	e0bffd15 	stw	r2,-12(fp)
   161a4:	e13ffd17 	ldw	r4,-12(fp)
   161a8:	00163280 	call	16328 <alt_putchar>
   161ac:	00004f06 	br	162ec <alt_printf+0x1f0>
   161b0:	e0bff807 	ldb	r2,-32(fp)
   161b4:	10801e18 	cmpnei	r2,r2,120
   161b8:	1000341e 	bne	r2,zero,1628c <alt_printf+0x190>
   161bc:	e0bffe17 	ldw	r2,-8(fp)
   161c0:	10c00104 	addi	r3,r2,4
   161c4:	e0fffe15 	stw	r3,-8(fp)
   161c8:	10800017 	ldw	r2,0(r2)
   161cc:	e0bffb15 	stw	r2,-20(fp)
   161d0:	e0bffb17 	ldw	r2,-20(fp)
   161d4:	1000031e 	bne	r2,zero,161e4 <alt_printf+0xe8>
   161d8:	01000c04 	movi	r4,48
   161dc:	00163280 	call	16328 <alt_putchar>
   161e0:	00004206 	br	162ec <alt_printf+0x1f0>
   161e4:	00800704 	movi	r2,28
   161e8:	e0bff915 	stw	r2,-28(fp)
   161ec:	00000306 	br	161fc <alt_printf+0x100>
   161f0:	e0bff917 	ldw	r2,-28(fp)
   161f4:	10bfff04 	addi	r2,r2,-4
   161f8:	e0bff915 	stw	r2,-28(fp)
   161fc:	00c003c4 	movi	r3,15
   16200:	e0bff917 	ldw	r2,-28(fp)
   16204:	1884983a 	sll	r2,r3,r2
   16208:	1007883a 	mov	r3,r2
   1620c:	e0bffb17 	ldw	r2,-20(fp)
   16210:	1884703a 	and	r2,r3,r2
   16214:	103ff626 	beq	r2,zero,161f0 <__alt_mem_Onchip_SRAM+0xf80161f0>
   16218:	00001906 	br	16280 <alt_printf+0x184>
   1621c:	00c003c4 	movi	r3,15
   16220:	e0bff917 	ldw	r2,-28(fp)
   16224:	1884983a 	sll	r2,r3,r2
   16228:	1007883a 	mov	r3,r2
   1622c:	e0bffb17 	ldw	r2,-20(fp)
   16230:	1886703a 	and	r3,r3,r2
   16234:	e0bff917 	ldw	r2,-28(fp)
   16238:	1884d83a 	srl	r2,r3,r2
   1623c:	e0bffc15 	stw	r2,-16(fp)
   16240:	e0bffc17 	ldw	r2,-16(fp)
   16244:	108002a8 	cmpgeui	r2,r2,10
   16248:	1000041e 	bne	r2,zero,1625c <alt_printf+0x160>
   1624c:	e0bffc17 	ldw	r2,-16(fp)
   16250:	10800c04 	addi	r2,r2,48
   16254:	e0bff805 	stb	r2,-32(fp)
   16258:	00000306 	br	16268 <alt_printf+0x16c>
   1625c:	e0bffc17 	ldw	r2,-16(fp)
   16260:	108015c4 	addi	r2,r2,87
   16264:	e0bff805 	stb	r2,-32(fp)
   16268:	e0bff807 	ldb	r2,-32(fp)
   1626c:	1009883a 	mov	r4,r2
   16270:	00163280 	call	16328 <alt_putchar>
   16274:	e0bff917 	ldw	r2,-28(fp)
   16278:	10bfff04 	addi	r2,r2,-4
   1627c:	e0bff915 	stw	r2,-28(fp)
   16280:	e0bff917 	ldw	r2,-28(fp)
   16284:	103fe50e 	bge	r2,zero,1621c <__alt_mem_Onchip_SRAM+0xf801621c>
   16288:	00001806 	br	162ec <alt_printf+0x1f0>
   1628c:	e0bff807 	ldb	r2,-32(fp)
   16290:	10801cd8 	cmpnei	r2,r2,115
   16294:	1000151e 	bne	r2,zero,162ec <alt_printf+0x1f0>
   16298:	e0bffe17 	ldw	r2,-8(fp)
   1629c:	10c00104 	addi	r3,r2,4
   162a0:	e0fffe15 	stw	r3,-8(fp)
   162a4:	10800017 	ldw	r2,0(r2)
   162a8:	e0bffa15 	stw	r2,-24(fp)
   162ac:	00000906 	br	162d4 <alt_printf+0x1d8>
   162b0:	e0bffa17 	ldw	r2,-24(fp)
   162b4:	10c00044 	addi	r3,r2,1
   162b8:	e0fffa15 	stw	r3,-24(fp)
   162bc:	10800003 	ldbu	r2,0(r2)
   162c0:	10803fcc 	andi	r2,r2,255
   162c4:	1080201c 	xori	r2,r2,128
   162c8:	10bfe004 	addi	r2,r2,-128
   162cc:	1009883a 	mov	r4,r2
   162d0:	00163280 	call	16328 <alt_putchar>
   162d4:	e0bffa17 	ldw	r2,-24(fp)
   162d8:	10800003 	ldbu	r2,0(r2)
   162dc:	10803fcc 	andi	r2,r2,255
   162e0:	1080201c 	xori	r2,r2,128
   162e4:	10bfe004 	addi	r2,r2,-128
   162e8:	103ff11e 	bne	r2,zero,162b0 <__alt_mem_Onchip_SRAM+0xf80162b0>
   162ec:	e0bff717 	ldw	r2,-36(fp)
   162f0:	10c00044 	addi	r3,r2,1
   162f4:	e0fff715 	stw	r3,-36(fp)
   162f8:	10800003 	ldbu	r2,0(r2)
   162fc:	e0bff805 	stb	r2,-32(fp)
   16300:	e0bff807 	ldb	r2,-32(fp)
   16304:	103f8a1e 	bne	r2,zero,16130 <__alt_mem_Onchip_SRAM+0xf8016130>
   16308:	00000106 	br	16310 <alt_printf+0x214>
   1630c:	0001883a 	nop
   16310:	0001883a 	nop
   16314:	e037883a 	mov	sp,fp
   16318:	dfc00117 	ldw	ra,4(sp)
   1631c:	df000017 	ldw	fp,0(sp)
   16320:	dec00504 	addi	sp,sp,20
   16324:	f800283a 	ret

00016328 <alt_putchar>:
   16328:	defffd04 	addi	sp,sp,-12
   1632c:	dfc00215 	stw	ra,8(sp)
   16330:	df000115 	stw	fp,4(sp)
   16334:	df000104 	addi	fp,sp,4
   16338:	e13fff15 	stw	r4,-4(fp)
   1633c:	d0a00c17 	ldw	r2,-32720(gp)
   16340:	10800217 	ldw	r2,8(r2)
   16344:	100b883a 	mov	r5,r2
   16348:	e13fff17 	ldw	r4,-4(fp)
   1634c:	000a6b00 	call	a6b0 <putc>
   16350:	e037883a 	mov	sp,fp
   16354:	dfc00117 	ldw	ra,4(sp)
   16358:	df000017 	ldw	fp,0(sp)
   1635c:	dec00204 	addi	sp,sp,8
   16360:	f800283a 	ret

00016364 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   16364:	deffff04 	addi	sp,sp,-4
   16368:	df000015 	stw	fp,0(sp)
   1636c:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   16370:	000170fa 	wrctl	ienable,zero
}
   16374:	0001883a 	nop
   16378:	e037883a 	mov	sp,fp
   1637c:	df000017 	ldw	fp,0(sp)
   16380:	dec00104 	addi	sp,sp,4
   16384:	f800283a 	ret

00016388 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   16388:	defffb04 	addi	sp,sp,-20
   1638c:	dfc00415 	stw	ra,16(sp)
   16390:	df000315 	stw	fp,12(sp)
   16394:	df000304 	addi	fp,sp,12
   16398:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   1639c:	d0a01117 	ldw	r2,-32700(gp)
   163a0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   163a4:	00003106 	br	1646c <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   163a8:	e0bffd17 	ldw	r2,-12(fp)
   163ac:	10800217 	ldw	r2,8(r2)
   163b0:	1009883a 	mov	r4,r2
   163b4:	00013700 	call	1370 <strlen>
   163b8:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   163bc:	e0bffd17 	ldw	r2,-12(fp)
   163c0:	10c00217 	ldw	r3,8(r2)
   163c4:	e0bffe17 	ldw	r2,-8(fp)
   163c8:	10bfffc4 	addi	r2,r2,-1
   163cc:	1885883a 	add	r2,r3,r2
   163d0:	10800003 	ldbu	r2,0(r2)
   163d4:	10803fcc 	andi	r2,r2,255
   163d8:	1080201c 	xori	r2,r2,128
   163dc:	10bfe004 	addi	r2,r2,-128
   163e0:	10800bd8 	cmpnei	r2,r2,47
   163e4:	1000031e 	bne	r2,zero,163f4 <alt_find_file+0x6c>
    {
      len -= 1;
   163e8:	e0bffe17 	ldw	r2,-8(fp)
   163ec:	10bfffc4 	addi	r2,r2,-1
   163f0:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   163f4:	e0bffe17 	ldw	r2,-8(fp)
   163f8:	e0ffff17 	ldw	r3,-4(fp)
   163fc:	1885883a 	add	r2,r3,r2
   16400:	10800003 	ldbu	r2,0(r2)
   16404:	10803fcc 	andi	r2,r2,255
   16408:	1080201c 	xori	r2,r2,128
   1640c:	10bfe004 	addi	r2,r2,-128
   16410:	10800be0 	cmpeqi	r2,r2,47
   16414:	1000081e 	bne	r2,zero,16438 <alt_find_file+0xb0>
   16418:	e0bffe17 	ldw	r2,-8(fp)
   1641c:	e0ffff17 	ldw	r3,-4(fp)
   16420:	1885883a 	add	r2,r3,r2
   16424:	10800003 	ldbu	r2,0(r2)
   16428:	10803fcc 	andi	r2,r2,255
   1642c:	1080201c 	xori	r2,r2,128
   16430:	10bfe004 	addi	r2,r2,-128
   16434:	10000a1e 	bne	r2,zero,16460 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   16438:	e0bffd17 	ldw	r2,-12(fp)
   1643c:	10800217 	ldw	r2,8(r2)
   16440:	e0fffe17 	ldw	r3,-8(fp)
   16444:	180d883a 	mov	r6,r3
   16448:	e17fff17 	ldw	r5,-4(fp)
   1644c:	1009883a 	mov	r4,r2
   16450:	001663c0 	call	1663c <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   16454:	1000021e 	bne	r2,zero,16460 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   16458:	e0bffd17 	ldw	r2,-12(fp)
   1645c:	00000706 	br	1647c <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   16460:	e0bffd17 	ldw	r2,-12(fp)
   16464:	10800017 	ldw	r2,0(r2)
   16468:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   1646c:	e0fffd17 	ldw	r3,-12(fp)
   16470:	d0a01104 	addi	r2,gp,-32700
   16474:	18bfcc1e 	bne	r3,r2,163a8 <__alt_mem_Onchip_SRAM+0xf80163a8>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   16478:	0005883a 	mov	r2,zero
}
   1647c:	e037883a 	mov	sp,fp
   16480:	dfc00117 	ldw	ra,4(sp)
   16484:	df000017 	ldw	fp,0(sp)
   16488:	dec00204 	addi	sp,sp,8
   1648c:	f800283a 	ret

00016490 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   16490:	defffa04 	addi	sp,sp,-24
   16494:	dfc00515 	stw	ra,20(sp)
   16498:	df000415 	stw	fp,16(sp)
   1649c:	dc000315 	stw	r16,12(sp)
   164a0:	df000404 	addi	fp,sp,16
   164a4:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
   164a8:	00bffa04 	movi	r2,-24
   164ac:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   164b0:	e03ffc15 	stw	zero,-16(fp)
   164b4:	00001d06 	br	1652c <alt_get_fd+0x9c>
  {
    if (!alt_fd_list[i].dev)
   164b8:	04000074 	movhi	r16,1
   164bc:	841d8b04 	addi	r16,r16,30252
   164c0:	e0bffc17 	ldw	r2,-16(fp)
   164c4:	01400304 	movi	r5,12
   164c8:	1009883a 	mov	r4,r2
   164cc:	0000eb00 	call	eb0 <__mulsi3>
   164d0:	8085883a 	add	r2,r16,r2
   164d4:	10800017 	ldw	r2,0(r2)
   164d8:	1000111e 	bne	r2,zero,16520 <alt_get_fd+0x90>
    {
      alt_fd_list[i].dev = dev;
   164dc:	04000074 	movhi	r16,1
   164e0:	841d8b04 	addi	r16,r16,30252
   164e4:	e0bffc17 	ldw	r2,-16(fp)
   164e8:	01400304 	movi	r5,12
   164ec:	1009883a 	mov	r4,r2
   164f0:	0000eb00 	call	eb0 <__mulsi3>
   164f4:	8085883a 	add	r2,r16,r2
   164f8:	e0fffe17 	ldw	r3,-8(fp)
   164fc:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   16500:	d0e01517 	ldw	r3,-32684(gp)
   16504:	e0bffc17 	ldw	r2,-16(fp)
   16508:	1880020e 	bge	r3,r2,16514 <alt_get_fd+0x84>
      {
        alt_max_fd = i;
   1650c:	e0bffc17 	ldw	r2,-16(fp)
   16510:	d0a01515 	stw	r2,-32684(gp)
      }
      rc = i;
   16514:	e0bffc17 	ldw	r2,-16(fp)
   16518:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
   1651c:	00000606 	br	16538 <alt_get_fd+0xa8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   16520:	e0bffc17 	ldw	r2,-16(fp)
   16524:	10800044 	addi	r2,r2,1
   16528:	e0bffc15 	stw	r2,-16(fp)
   1652c:	e0bffc17 	ldw	r2,-16(fp)
   16530:	10800810 	cmplti	r2,r2,32
   16534:	103fe01e 	bne	r2,zero,164b8 <__alt_mem_Onchip_SRAM+0xf80164b8>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   16538:	e0bffd17 	ldw	r2,-12(fp)
}
   1653c:	e6ffff04 	addi	sp,fp,-4
   16540:	dfc00217 	ldw	ra,8(sp)
   16544:	df000117 	ldw	fp,4(sp)
   16548:	dc000017 	ldw	r16,0(sp)
   1654c:	dec00304 	addi	sp,sp,12
   16550:	f800283a 	ret

00016554 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   16554:	defffe04 	addi	sp,sp,-8
   16558:	df000115 	stw	fp,4(sp)
   1655c:	df000104 	addi	fp,sp,4
   16560:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   16564:	e0bfff17 	ldw	r2,-4(fp)
   16568:	10bffe84 	addi	r2,r2,-6
   1656c:	10c00428 	cmpgeui	r3,r2,16
   16570:	18001a1e 	bne	r3,zero,165dc <alt_exception_cause_generated_bad_addr+0x88>
   16574:	100690ba 	slli	r3,r2,2
   16578:	00800074 	movhi	r2,1
   1657c:	10996304 	addi	r2,r2,25996
   16580:	1885883a 	add	r2,r3,r2
   16584:	10800017 	ldw	r2,0(r2)
   16588:	1000683a 	jmp	r2
   1658c:	000165cc 	andi	zero,zero,1431
   16590:	000165cc 	andi	zero,zero,1431
   16594:	000165dc 	xori	zero,zero,1431
   16598:	000165dc 	xori	zero,zero,1431
   1659c:	000165dc 	xori	zero,zero,1431
   165a0:	000165cc 	andi	zero,zero,1431
   165a4:	000165d4 	movui	zero,1431
   165a8:	000165dc 	xori	zero,zero,1431
   165ac:	000165cc 	andi	zero,zero,1431
   165b0:	000165cc 	andi	zero,zero,1431
   165b4:	000165dc 	xori	zero,zero,1431
   165b8:	000165cc 	andi	zero,zero,1431
   165bc:	000165d4 	movui	zero,1431
   165c0:	000165dc 	xori	zero,zero,1431
   165c4:	000165dc 	xori	zero,zero,1431
   165c8:	000165cc 	andi	zero,zero,1431
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   165cc:	00800044 	movi	r2,1
   165d0:	00000306 	br	165e0 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   165d4:	0005883a 	mov	r2,zero
   165d8:	00000106 	br	165e0 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
   165dc:	0005883a 	mov	r2,zero
  }
}
   165e0:	e037883a 	mov	sp,fp
   165e4:	df000017 	ldw	fp,0(sp)
   165e8:	dec00104 	addi	sp,sp,4
   165ec:	f800283a 	ret

000165f0 <atexit>:
   165f0:	200b883a 	mov	r5,r4
   165f4:	000f883a 	mov	r7,zero
   165f8:	000d883a 	mov	r6,zero
   165fc:	0009883a 	mov	r4,zero
   16600:	00166b81 	jmpi	166b8 <__register_exitproc>

00016604 <exit>:
   16604:	defffe04 	addi	sp,sp,-8
   16608:	000b883a 	mov	r5,zero
   1660c:	dc000015 	stw	r16,0(sp)
   16610:	dfc00115 	stw	ra,4(sp)
   16614:	2021883a 	mov	r16,r4
   16618:	00167d00 	call	167d0 <__call_exitprocs>
   1661c:	008000b4 	movhi	r2,2
   16620:	10a23604 	addi	r2,r2,-30504
   16624:	11000017 	ldw	r4,0(r2)
   16628:	20800f17 	ldw	r2,60(r4)
   1662c:	10000126 	beq	r2,zero,16634 <exit+0x30>
   16630:	103ee83a 	callr	r2
   16634:	8009883a 	mov	r4,r16
   16638:	00169500 	call	16950 <_exit>

0001663c <memcmp>:
   1663c:	01c000c4 	movi	r7,3
   16640:	3980192e 	bgeu	r7,r6,166a8 <memcmp+0x6c>
   16644:	2144b03a 	or	r2,r4,r5
   16648:	11c4703a 	and	r2,r2,r7
   1664c:	10000f26 	beq	r2,zero,1668c <memcmp+0x50>
   16650:	20800003 	ldbu	r2,0(r4)
   16654:	28c00003 	ldbu	r3,0(r5)
   16658:	10c0151e 	bne	r2,r3,166b0 <memcmp+0x74>
   1665c:	31bfff84 	addi	r6,r6,-2
   16660:	01ffffc4 	movi	r7,-1
   16664:	00000406 	br	16678 <memcmp+0x3c>
   16668:	20800003 	ldbu	r2,0(r4)
   1666c:	28c00003 	ldbu	r3,0(r5)
   16670:	31bfffc4 	addi	r6,r6,-1
   16674:	10c00e1e 	bne	r2,r3,166b0 <memcmp+0x74>
   16678:	21000044 	addi	r4,r4,1
   1667c:	29400044 	addi	r5,r5,1
   16680:	31fff91e 	bne	r6,r7,16668 <__alt_mem_Onchip_SRAM+0xf8016668>
   16684:	0005883a 	mov	r2,zero
   16688:	f800283a 	ret
   1668c:	20c00017 	ldw	r3,0(r4)
   16690:	28800017 	ldw	r2,0(r5)
   16694:	18bfee1e 	bne	r3,r2,16650 <__alt_mem_Onchip_SRAM+0xf8016650>
   16698:	31bfff04 	addi	r6,r6,-4
   1669c:	21000104 	addi	r4,r4,4
   166a0:	29400104 	addi	r5,r5,4
   166a4:	39bff936 	bltu	r7,r6,1668c <__alt_mem_Onchip_SRAM+0xf801668c>
   166a8:	303fe91e 	bne	r6,zero,16650 <__alt_mem_Onchip_SRAM+0xf8016650>
   166ac:	003ff506 	br	16684 <__alt_mem_Onchip_SRAM+0xf8016684>
   166b0:	10c5c83a 	sub	r2,r2,r3
   166b4:	f800283a 	ret

000166b8 <__register_exitproc>:
   166b8:	defffa04 	addi	sp,sp,-24
   166bc:	dc000315 	stw	r16,12(sp)
   166c0:	040000b4 	movhi	r16,2
   166c4:	84223604 	addi	r16,r16,-30504
   166c8:	80c00017 	ldw	r3,0(r16)
   166cc:	dc400415 	stw	r17,16(sp)
   166d0:	dfc00515 	stw	ra,20(sp)
   166d4:	18805217 	ldw	r2,328(r3)
   166d8:	2023883a 	mov	r17,r4
   166dc:	10003726 	beq	r2,zero,167bc <__register_exitproc+0x104>
   166e0:	10c00117 	ldw	r3,4(r2)
   166e4:	010007c4 	movi	r4,31
   166e8:	20c00e16 	blt	r4,r3,16724 <__register_exitproc+0x6c>
   166ec:	1a000044 	addi	r8,r3,1
   166f0:	8800221e 	bne	r17,zero,1677c <__register_exitproc+0xc4>
   166f4:	18c00084 	addi	r3,r3,2
   166f8:	18c7883a 	add	r3,r3,r3
   166fc:	18c7883a 	add	r3,r3,r3
   16700:	12000115 	stw	r8,4(r2)
   16704:	10c7883a 	add	r3,r2,r3
   16708:	19400015 	stw	r5,0(r3)
   1670c:	0005883a 	mov	r2,zero
   16710:	dfc00517 	ldw	ra,20(sp)
   16714:	dc400417 	ldw	r17,16(sp)
   16718:	dc000317 	ldw	r16,12(sp)
   1671c:	dec00604 	addi	sp,sp,24
   16720:	f800283a 	ret
   16724:	00800034 	movhi	r2,0
   16728:	10800004 	addi	r2,r2,0
   1672c:	10002626 	beq	r2,zero,167c8 <__register_exitproc+0x110>
   16730:	01006404 	movi	r4,400
   16734:	d9400015 	stw	r5,0(sp)
   16738:	d9800115 	stw	r6,4(sp)
   1673c:	d9c00215 	stw	r7,8(sp)
   16740:	00000000 	call	0 <__alt_mem_SDRAM>
   16744:	d9400017 	ldw	r5,0(sp)
   16748:	d9800117 	ldw	r6,4(sp)
   1674c:	d9c00217 	ldw	r7,8(sp)
   16750:	10001d26 	beq	r2,zero,167c8 <__register_exitproc+0x110>
   16754:	81000017 	ldw	r4,0(r16)
   16758:	10000115 	stw	zero,4(r2)
   1675c:	02000044 	movi	r8,1
   16760:	22405217 	ldw	r9,328(r4)
   16764:	0007883a 	mov	r3,zero
   16768:	12400015 	stw	r9,0(r2)
   1676c:	20805215 	stw	r2,328(r4)
   16770:	10006215 	stw	zero,392(r2)
   16774:	10006315 	stw	zero,396(r2)
   16778:	883fde26 	beq	r17,zero,166f4 <__alt_mem_Onchip_SRAM+0xf80166f4>
   1677c:	18c9883a 	add	r4,r3,r3
   16780:	2109883a 	add	r4,r4,r4
   16784:	1109883a 	add	r4,r2,r4
   16788:	21802215 	stw	r6,136(r4)
   1678c:	01800044 	movi	r6,1
   16790:	12406217 	ldw	r9,392(r2)
   16794:	30cc983a 	sll	r6,r6,r3
   16798:	4992b03a 	or	r9,r9,r6
   1679c:	12406215 	stw	r9,392(r2)
   167a0:	21c04215 	stw	r7,264(r4)
   167a4:	01000084 	movi	r4,2
   167a8:	893fd21e 	bne	r17,r4,166f4 <__alt_mem_Onchip_SRAM+0xf80166f4>
   167ac:	11006317 	ldw	r4,396(r2)
   167b0:	218cb03a 	or	r6,r4,r6
   167b4:	11806315 	stw	r6,396(r2)
   167b8:	003fce06 	br	166f4 <__alt_mem_Onchip_SRAM+0xf80166f4>
   167bc:	18805304 	addi	r2,r3,332
   167c0:	18805215 	stw	r2,328(r3)
   167c4:	003fc606 	br	166e0 <__alt_mem_Onchip_SRAM+0xf80166e0>
   167c8:	00bfffc4 	movi	r2,-1
   167cc:	003fd006 	br	16710 <__alt_mem_Onchip_SRAM+0xf8016710>

000167d0 <__call_exitprocs>:
   167d0:	defff504 	addi	sp,sp,-44
   167d4:	df000915 	stw	fp,36(sp)
   167d8:	dd400615 	stw	r21,24(sp)
   167dc:	dc800315 	stw	r18,12(sp)
   167e0:	dfc00a15 	stw	ra,40(sp)
   167e4:	ddc00815 	stw	r23,32(sp)
   167e8:	dd800715 	stw	r22,28(sp)
   167ec:	dd000515 	stw	r20,20(sp)
   167f0:	dcc00415 	stw	r19,16(sp)
   167f4:	dc400215 	stw	r17,8(sp)
   167f8:	dc000115 	stw	r16,4(sp)
   167fc:	d9000015 	stw	r4,0(sp)
   16800:	2839883a 	mov	fp,r5
   16804:	04800044 	movi	r18,1
   16808:	057fffc4 	movi	r21,-1
   1680c:	008000b4 	movhi	r2,2
   16810:	10a23604 	addi	r2,r2,-30504
   16814:	12000017 	ldw	r8,0(r2)
   16818:	45005217 	ldw	r20,328(r8)
   1681c:	44c05204 	addi	r19,r8,328
   16820:	a0001c26 	beq	r20,zero,16894 <__call_exitprocs+0xc4>
   16824:	a0800117 	ldw	r2,4(r20)
   16828:	15ffffc4 	addi	r23,r2,-1
   1682c:	b8000d16 	blt	r23,zero,16864 <__call_exitprocs+0x94>
   16830:	14000044 	addi	r16,r2,1
   16834:	8421883a 	add	r16,r16,r16
   16838:	8421883a 	add	r16,r16,r16
   1683c:	84402004 	addi	r17,r16,128
   16840:	a463883a 	add	r17,r20,r17
   16844:	a421883a 	add	r16,r20,r16
   16848:	e0001e26 	beq	fp,zero,168c4 <__call_exitprocs+0xf4>
   1684c:	80804017 	ldw	r2,256(r16)
   16850:	e0801c26 	beq	fp,r2,168c4 <__call_exitprocs+0xf4>
   16854:	bdffffc4 	addi	r23,r23,-1
   16858:	843fff04 	addi	r16,r16,-4
   1685c:	8c7fff04 	addi	r17,r17,-4
   16860:	bd7ff91e 	bne	r23,r21,16848 <__alt_mem_Onchip_SRAM+0xf8016848>
   16864:	00800034 	movhi	r2,0
   16868:	10800004 	addi	r2,r2,0
   1686c:	10000926 	beq	r2,zero,16894 <__call_exitprocs+0xc4>
   16870:	a0800117 	ldw	r2,4(r20)
   16874:	1000301e 	bne	r2,zero,16938 <__call_exitprocs+0x168>
   16878:	a0800017 	ldw	r2,0(r20)
   1687c:	10003226 	beq	r2,zero,16948 <__call_exitprocs+0x178>
   16880:	a009883a 	mov	r4,r20
   16884:	98800015 	stw	r2,0(r19)
   16888:	00000000 	call	0 <__alt_mem_SDRAM>
   1688c:	9d000017 	ldw	r20,0(r19)
   16890:	a03fe41e 	bne	r20,zero,16824 <__alt_mem_Onchip_SRAM+0xf8016824>
   16894:	dfc00a17 	ldw	ra,40(sp)
   16898:	df000917 	ldw	fp,36(sp)
   1689c:	ddc00817 	ldw	r23,32(sp)
   168a0:	dd800717 	ldw	r22,28(sp)
   168a4:	dd400617 	ldw	r21,24(sp)
   168a8:	dd000517 	ldw	r20,20(sp)
   168ac:	dcc00417 	ldw	r19,16(sp)
   168b0:	dc800317 	ldw	r18,12(sp)
   168b4:	dc400217 	ldw	r17,8(sp)
   168b8:	dc000117 	ldw	r16,4(sp)
   168bc:	dec00b04 	addi	sp,sp,44
   168c0:	f800283a 	ret
   168c4:	a0800117 	ldw	r2,4(r20)
   168c8:	80c00017 	ldw	r3,0(r16)
   168cc:	10bfffc4 	addi	r2,r2,-1
   168d0:	15c01426 	beq	r2,r23,16924 <__call_exitprocs+0x154>
   168d4:	80000015 	stw	zero,0(r16)
   168d8:	183fde26 	beq	r3,zero,16854 <__alt_mem_Onchip_SRAM+0xf8016854>
   168dc:	95c8983a 	sll	r4,r18,r23
   168e0:	a0806217 	ldw	r2,392(r20)
   168e4:	a5800117 	ldw	r22,4(r20)
   168e8:	2084703a 	and	r2,r4,r2
   168ec:	10000b26 	beq	r2,zero,1691c <__call_exitprocs+0x14c>
   168f0:	a0806317 	ldw	r2,396(r20)
   168f4:	2088703a 	and	r4,r4,r2
   168f8:	20000c1e 	bne	r4,zero,1692c <__call_exitprocs+0x15c>
   168fc:	89400017 	ldw	r5,0(r17)
   16900:	d9000017 	ldw	r4,0(sp)
   16904:	183ee83a 	callr	r3
   16908:	a0800117 	ldw	r2,4(r20)
   1690c:	15bfbf1e 	bne	r2,r22,1680c <__alt_mem_Onchip_SRAM+0xf801680c>
   16910:	98800017 	ldw	r2,0(r19)
   16914:	153fcf26 	beq	r2,r20,16854 <__alt_mem_Onchip_SRAM+0xf8016854>
   16918:	003fbc06 	br	1680c <__alt_mem_Onchip_SRAM+0xf801680c>
   1691c:	183ee83a 	callr	r3
   16920:	003ff906 	br	16908 <__alt_mem_Onchip_SRAM+0xf8016908>
   16924:	a5c00115 	stw	r23,4(r20)
   16928:	003feb06 	br	168d8 <__alt_mem_Onchip_SRAM+0xf80168d8>
   1692c:	89000017 	ldw	r4,0(r17)
   16930:	183ee83a 	callr	r3
   16934:	003ff406 	br	16908 <__alt_mem_Onchip_SRAM+0xf8016908>
   16938:	a0800017 	ldw	r2,0(r20)
   1693c:	a027883a 	mov	r19,r20
   16940:	1029883a 	mov	r20,r2
   16944:	003fb606 	br	16820 <__alt_mem_Onchip_SRAM+0xf8016820>
   16948:	0005883a 	mov	r2,zero
   1694c:	003ffb06 	br	1693c <__alt_mem_Onchip_SRAM+0xf801693c>

00016950 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   16950:	defffd04 	addi	sp,sp,-12
   16954:	df000215 	stw	fp,8(sp)
   16958:	df000204 	addi	fp,sp,8
   1695c:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   16960:	0001883a 	nop
   16964:	e0bfff17 	ldw	r2,-4(fp)
   16968:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   1696c:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   16970:	10000226 	beq	r2,zero,1697c <_exit+0x2c>
    ALT_SIM_FAIL();
   16974:	002af070 	cmpltui	zero,zero,43969
   16978:	00000106 	br	16980 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   1697c:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   16980:	003fff06 	br	16980 <__alt_mem_Onchip_SRAM+0xf8016980>
